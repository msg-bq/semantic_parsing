[
{
    "assertion": "HalfFocalLength ( CONICSECTION: K ) equals Slope ( OverlappingLine ( LINESEGMENT: J ) )",
    "id": 3226,
    "declarations": "K: CONICSECTION; J: LINESEGMENT",
    "facts": "HalfFocalLength(K) = Slope(OverlappingLine(J))"
},
{
    "assertion": "lg ( Min ( NUMBER: -65 ) ) equals NUMBER: -56",
    "id": 3227,
    "declarations": "-65: NUMBER; -56: NUMBER",
    "facts": "lg(Min(-65)) = -56"
},
{
    "assertion": "Max ( DotProduct ( VECTOR: R, VECTOR: Y ) ) equals Area ( CONICSECTION: L )",
    "id": 3228,
    "declarations": "R: VECTOR; Y: VECTOR; L: CONICSECTION",
    "facts": "Max(DotProduct(R, Y)) = Area(L)"
},
{
    "assertion": "InterReciprocal ( Perimeter ( CONICSECTION: E ) ) equals Radius ( CIRCLE: w )",
    "id": 3229,
    "declarations": "E: CONICSECTION; w: CIRCLE",
    "facts": "InterReciprocal(Perimeter(E)) = Radius(w)"
},
{
    "assertion": "PointOnCurve ( LowerVertex ( CONICSECTION: R ), CURVE: u ) equals BOOL: False",
    "id": 3230,
    "declarations": "R: CONICSECTION; u: CURVE; False: BOOL",
    "facts": "PointOnCurve(LowerVertex(R), u) = False"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: D ) equals RightDirectrix ( CONICSECTION: Y )",
    "id": 3231,
    "declarations": "D: CONICSECTION; Y: CONICSECTION",
    "facts": "LeftDirectrix(D) = RightDirectrix(Y)"
},
{
    "assertion": "Area ( CONICSECTION: W ) equals lg ( NUMBER: 32 )",
    "id": 3232,
    "declarations": "W: CONICSECTION; 32: NUMBER",
    "facts": "Area(W) = lg(32)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -6, DEGREESTR: degree )",
    "id": 3233,
    "declarations": "-6: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-6, degree) = None"
},
{
    "assertion": "RealAxis ( ELLIPSE: D ) equals LINESEGMENT: j",
    "id": 3234,
    "declarations": "D: ELLIPSE; j: LINESEGMENT",
    "facts": "RealAxis(D) = j"
},
{
    "assertion": "Projection ( Orthocenter ( TRIANGLE: S ), LINE: x ) equals RightVertex ( CONICSECTION: H )",
    "id": 3235,
    "declarations": "S: TRIANGLE; x: LINE; H: CONICSECTION",
    "facts": "Projection(Orthocenter(S), x) = RightVertex(H)"
},
{
    "assertion": "Expression ( CURVE: M ) equals Expression ( CURVE: R )",
    "id": 3236,
    "declarations": "M: CURVE; R: CURVE",
    "facts": "Expression(M) = Expression(R)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -11, DEGREESTR: degree )",
    "id": 3237,
    "declarations": "-11: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-11, degree) = None"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: A, CIRCLE: E ) equals BOOL: False",
    "id": 3238,
    "declarations": "A: LINESEGMENT; E: CIRCLE; False: BOOL",
    "facts": "IsDiameter(A, E) = False"
},
{
    "assertion": "VectorOf ( POINT: w, POINT: W ) equals VECTOR: j",
    "id": 3239,
    "declarations": "w: POINT; W: POINT; j: VECTOR",
    "facts": "VectorOf(w, W) = j"
},
{
    "assertion": "UpperFocus ( CONICSECTION: H ) equals POINT: c",
    "id": 3240,
    "declarations": "H: CONICSECTION; c: POINT",
    "facts": "UpperFocus(H) = c"
},
{
    "assertion": "Orthocenter ( TRIANGLE: L ) equals POINT: l",
    "id": 3241,
    "declarations": "L: TRIANGLE; l: POINT",
    "facts": "Orthocenter(L) = l"
},
{
    "assertion": "Locus ( Incenter ( TRIANGLE: n ) ) equals CURVE: I",
    "id": 3242,
    "declarations": "n: TRIANGLE; I: CURVE",
    "facts": "Locus(Incenter(n)) = I"
},
{
    "assertion": "RealAxis ( ELLIPSE: H ) equals LINESEGMENT: q",
    "id": 3243,
    "declarations": "H: ELLIPSE; q: LINESEGMENT",
    "facts": "RealAxis(H) = q"
},
{
    "assertion": "Distance ( Center ( CONICSECTION: y ), Center ( CONICSECTION: g ) ) equals HalfFocalLength ( CONICSECTION: w )",
    "id": 3244,
    "declarations": "y: CONICSECTION; g: CONICSECTION; w: CONICSECTION",
    "facts": "Distance(Center(y), Center(g)) = HalfFocalLength(w)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: a ) equals UpperVertex ( CONICSECTION: E )",
    "id": 3245,
    "declarations": "a: CONICSECTION; E: CONICSECTION",
    "facts": "LeftVertex(a) = UpperVertex(E)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: E ) equals LINE: q",
    "id": 3246,
    "declarations": "E: CONICSECTION; q: LINE",
    "facts": "LeftDirectrix(E) = q"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: z ) ) equals Abs ( LINESEGMENT: X )",
    "id": 3247,
    "declarations": "z: CONICSECTION; X: LINESEGMENT",
    "facts": "XCoordinate(LeftFocus(z)) = Abs(X)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: O ) equals RightVertex ( CONICSECTION: U )",
    "id": 3248,
    "declarations": "O: CONICSECTION; U: CONICSECTION",
    "facts": "LowerFocus(O) = RightVertex(U)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: M ) equals LowerVertex ( CONICSECTION: t )",
    "id": 3249,
    "declarations": "M: TRIANGLE; t: CONICSECTION",
    "facts": "Circumcenter(M) = LowerVertex(t)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: f ) equals LINE: W",
    "id": 3250,
    "declarations": "f: HYPERBOLA; W: LINE",
    "facts": "Asymptote(f) = W"
},
{
    "assertion": "YCoordinate ( Circumcenter ( TRIANGLE: g ) ) equals YCoordinate ( POINT: i )",
    "id": 3251,
    "declarations": "g: TRIANGLE; i: POINT",
    "facts": "YCoordinate(Circumcenter(g)) = YCoordinate(i)"
},
{
    "assertion": "RealAxis ( ELLIPSE: F ) equals MajorAxis ( ELLIPSE: y )",
    "id": 3252,
    "declarations": "F: ELLIPSE; y: ELLIPSE",
    "facts": "RealAxis(F) = MajorAxis(y)"
},
{
    "assertion": "RealAxis ( ELLIPSE: o ) equals LINESEGMENT: s",
    "id": 3253,
    "declarations": "o: ELLIPSE; s: LINESEGMENT",
    "facts": "RealAxis(o) = s"
},
{
    "assertion": "RightFocus ( CONICSECTION: v ) equals LeftFocus ( CONICSECTION: R )",
    "id": 3254,
    "declarations": "v: CONICSECTION; R: CONICSECTION",
    "facts": "RightFocus(v) = LeftFocus(R)"
},
{
    "assertion": "Max ( FocalLength ( CONICSECTION: B ) ) equals Min ( Min ( YCoordinate ( POINT: X ) ) )",
    "id": 3255,
    "declarations": "B: CONICSECTION; X: POINT",
    "facts": "Max(FocalLength(B)) = Min(Min(YCoordinate(X)))"
},
{
    "assertion": "LineSegmentOf ( POINT: n, Center ( CONICSECTION: q ) ) equals LINESEGMENT: V",
    "id": 3256,
    "declarations": "n: POINT; q: CONICSECTION; V: LINESEGMENT",
    "facts": "LineSegmentOf(n, Center(q)) = V"
},
{
    "assertion": "YCoordinate ( POINT: D ) equals XCoordinate ( POINT: b )",
    "id": 3257,
    "declarations": "D: POINT; b: POINT",
    "facts": "YCoordinate(D) = XCoordinate(b)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: j ) equals NUMBER: 58",
    "id": 3258,
    "declarations": "j: CONICSECTION; 58: NUMBER",
    "facts": "HalfFocalLength(j) = 58"
},
{
    "assertion": "IsIntersect ( CURVE: d, CURVE: v ) equals BOOL: True",
    "id": 3259,
    "declarations": "d: CURVE; v: CURVE; True: BOOL",
    "facts": "IsIntersect(d, v) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: z ) equals RightDirectrix ( CONICSECTION: a )",
    "id": 3260,
    "declarations": "z: CONICSECTION; a: CONICSECTION",
    "facts": "Directrix(z) = RightDirectrix(a)"
},
{
    "assertion": "IsInTangent ( CIRCLE: d, CIRCLE: F ) equals BOOL: False",
    "id": 3261,
    "declarations": "d: CIRCLE; F: CIRCLE; False: BOOL",
    "facts": "IsInTangent(d, F) = False"
},
{
    "assertion": "Inclination ( LINE: N ) equals Perimeter ( CONICSECTION: l )",
    "id": 3262,
    "declarations": "N: LINE; l: CONICSECTION",
    "facts": "Inclination(N) = Perimeter(l)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: P ) equals LINE: L",
    "id": 3263,
    "declarations": "P: LINESEGMENT; L: LINE",
    "facts": "PerpendicularBisector(P) = L"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: A, CircumCircle ( TRIANGLE: r ) ) equals BOOL: False",
    "id": 3264,
    "declarations": "A: LINESEGMENT; r: TRIANGLE; False: BOOL",
    "facts": "IsDiameter(A, CircumCircle(r)) = False"
},
{
    "assertion": "Eccentricity ( CONICSECTION: t ) equals NUMBER: -18",
    "id": 3265,
    "declarations": "t: CONICSECTION; -18: NUMBER",
    "facts": "Eccentricity(t) = -18"
},
{
    "assertion": "Directrix ( CONICSECTION: z ) equals LINE: D",
    "id": 3266,
    "declarations": "z: CONICSECTION; D: LINE",
    "facts": "Directrix(z) = D"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: l ) ) equals EXPRESSION: x^2*space+*space4y^2*space=*space16",
    "id": 3267,
    "declarations": "l: HYPERBOLA; x^2*space+*space4y^2*space=*space16: EXPRESSION",
    "facts": "Expression(LeftPart(l)) = x^2*space+*space4y^2*space=*space16"
},
{
    "assertion": "LeftPart ( HYPERBOLA: F ) equals CURVE: Y",
    "id": 3268,
    "declarations": "F: HYPERBOLA; Y: CURVE",
    "facts": "LeftPart(F) = Y"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: S ) equals ImaginaryAxis ( ELLIPSE: Y )",
    "id": 3269,
    "declarations": "S: ELLIPSE; Y: ELLIPSE",
    "facts": "ImaginaryAxis(S) = ImaginaryAxis(Y)"
},
{
    "assertion": "RightVertex ( CONICSECTION: Z ) equals RightFocus ( CONICSECTION: b )",
    "id": 3270,
    "declarations": "Z: CONICSECTION; b: CONICSECTION",
    "facts": "RightVertex(Z) = RightFocus(b)"
},
{
    "assertion": "Max ( Eccentricity ( CONICSECTION: F ) ) equals NUMBER: -78",
    "id": 3271,
    "declarations": "F: CONICSECTION; -78: NUMBER",
    "facts": "Max(Eccentricity(F)) = -78"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: z, TRIANGLE: Q ) equals BOOL: False",
    "id": 3272,
    "declarations": "z: CIRCLE; Q: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(z, Q) = False"
},
{
    "assertion": "LeftFocus ( CONICSECTION: d ) equals RightFocus ( CONICSECTION: d )",
    "id": 3273,
    "declarations": "d: CONICSECTION; d: CONICSECTION",
    "facts": "LeftFocus(d) = RightFocus(d)"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: O ) ) equals NUMBER: -47",
    "id": 3274,
    "declarations": "O: ELLIPSE; -47: NUMBER",
    "facts": "Abs(MinorAxis(O)) = -47"
},
{
    "assertion": "FocalLength ( CONICSECTION: W ) equals Area ( CONICSECTION: S )",
    "id": 3275,
    "declarations": "W: CONICSECTION; S: CONICSECTION",
    "facts": "FocalLength(W) = Area(S)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: p ) equals RightDirectrix ( CONICSECTION: S )",
    "id": 3276,
    "declarations": "p: LINESEGMENT; S: CONICSECTION",
    "facts": "OverlappingLine(p) = RightDirectrix(S)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: B ) equals LINESEGMENT: e",
    "id": 3277,
    "declarations": "B: ELLIPSE; e: LINESEGMENT",
    "facts": "MinorAxis(B) = e"
},
{
    "assertion": "UpperVertex ( CONICSECTION: n ) equals LeftFocus ( CONICSECTION: B )",
    "id": 3278,
    "declarations": "n: CONICSECTION; B: CONICSECTION",
    "facts": "UpperVertex(n) = LeftFocus(B)"
},
{
    "assertion": "lg ( Length ( ImaginaryAxis ( ELLIPSE: t ) ) ) equals Radius ( CIRCLE: P )",
    "id": 3279,
    "declarations": "t: ELLIPSE; P: CIRCLE",
    "facts": "lg(Length(ImaginaryAxis(t))) = Radius(P)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: W ) equals POINT: T",
    "id": 3280,
    "declarations": "W: CONICSECTION; T: POINT",
    "facts": "UpperVertex(W) = T"
},
{
    "assertion": "UpperVertex ( CONICSECTION: x ) equals POINT: M",
    "id": 3281,
    "declarations": "x: CONICSECTION; M: POINT",
    "facts": "UpperVertex(x) = M"
},
{
    "assertion": "sqrt ( Distance ( FootPoint ( LINE: f, PerpendicularBisector ( LINESEGMENT: h ) ), POINT: j ) ) equals NUMBER: 71",
    "id": 3282,
    "declarations": "f: LINE; h: LINESEGMENT; j: POINT; 71: NUMBER",
    "facts": "sqrt(Distance(FootPoint(f, PerpendicularBisector(h)), j)) = 71"
},
{
    "assertion": "RightPart ( HYPERBOLA: s ) equals CURVE: A",
    "id": 3283,
    "declarations": "s: HYPERBOLA; A: CURVE",
    "facts": "RightPart(s) = A"
},
{
    "assertion": "Negation ( DotProduct ( VECTOR: V, VECTOR: U ) equals Area ( CONICSECTION: b ) ) equals BOOL: False",
    "id": 3284,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightVertex ( CONICSECTION: w ) equals POINT: q",
    "id": 3285,
    "declarations": "w: CONICSECTION; q: POINT",
    "facts": "RightVertex(w) = q"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: b, CONICSECTION: K ) equals BOOL: False",
    "id": 3286,
    "declarations": "b: LINESEGMENT; K: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(b, K) = False"
},
{
    "assertion": "TangentOfPoint ( POINT: n, CURVE: e ) equals LINE: i",
    "id": 3287,
    "declarations": "n: POINT; e: CURVE; i: LINE",
    "facts": "TangentOfPoint(n, e) = i"
},
{
    "assertion": "lg ( Length ( LINESEGMENT: r ) ) equals Eccentricity ( CONICSECTION: Q )",
    "id": 3288,
    "declarations": "r: LINESEGMENT; Q: CONICSECTION",
    "facts": "lg(Length(r)) = Eccentricity(Q)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: J ) equals POINT: S",
    "id": 3289,
    "declarations": "J: CONICSECTION; S: POINT",
    "facts": "UpperVertex(J) = S"
},
{
    "assertion": "Intersection ( CURVE: d, CURVE: o ) equals POINT: Z",
    "id": 3290,
    "declarations": "d: CURVE; o: CURVE; Z: POINT",
    "facts": "Intersection(d, o) = Z"
},
{
    "assertion": "OverlappingLine ( RealAxis ( ELLIPSE: t ) ) equals LINE: n",
    "id": 3291,
    "declarations": "t: ELLIPSE; n: LINE",
    "facts": "OverlappingLine(RealAxis(t)) = n"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: w ) equals LINE: D",
    "id": 3292,
    "declarations": "w: LINESEGMENT; D: LINE",
    "facts": "OverlappingLine(w) = D"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: M ) equals MajorAxis ( ELLIPSE: D )",
    "id": 3293,
    "declarations": "M: ELLIPSE; D: ELLIPSE",
    "facts": "ImaginaryAxis(M) = MajorAxis(D)"
},
{
    "assertion": "Endpoint ( InterceptChord ( LINE: Q, CONICSECTION: f ) ) equals Incenter ( TRIANGLE: S )",
    "id": 3294,
    "declarations": "Q: LINE; f: CONICSECTION; S: TRIANGLE",
    "facts": "Endpoint(InterceptChord(Q, f)) = Incenter(S)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: r ) equals POINT: N",
    "id": 3295,
    "declarations": "r: CONICSECTION; N: POINT",
    "facts": "LeftVertex(r) = N"
},
{
    "assertion": "Distance ( MidPoint ( LINESEGMENT: d ), POINT: M ) equals XCoordinate ( POINT: E )",
    "id": 3296,
    "declarations": "d: LINESEGMENT; M: POINT; E: POINT",
    "facts": "Distance(MidPoint(d), M) = XCoordinate(E)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: Q ) equals CURVE: v",
    "id": 3297,
    "declarations": "Q: HYPERBOLA; v: CURVE",
    "facts": "LeftPart(Q) = v"
},
{
    "assertion": "Abs ( LINESEGMENT: N ) equals Abs ( LINESEGMENT: J )",
    "id": 3298,
    "declarations": "N: LINESEGMENT; J: LINESEGMENT",
    "facts": "Abs(N) = Abs(J)"
},
{
    "assertion": "YCoordinate ( Center ( CONICSECTION: g ) ) equals Abs ( LINESEGMENT: p )",
    "id": 3299,
    "declarations": "g: CONICSECTION; p: LINESEGMENT",
    "facts": "YCoordinate(Center(g)) = Abs(p)"
},
{
    "assertion": "Expression ( RightPart ( HYPERBOLA: n ) ) equals EXPRESSION: x^2*space+*spacey*space=*space4",
    "id": 3300,
    "declarations": "n: HYPERBOLA; x^2*space+*spacey*space=*space4: EXPRESSION",
    "facts": "Expression(RightPart(n)) = x^2*space+*spacey*space=*space4"
},
{
    "assertion": "AngleOf ( LeftFocus ( CONICSECTION: P ), RightVertex ( CONICSECTION: t ), MidPoint ( LINESEGMENT: j ) ) equals AngleOf ( POINT: f, Incenter ( TRIANGLE: h ), POINT: u )",
    "id": 3301,
    "declarations": "P: CONICSECTION; t: CONICSECTION; j: LINESEGMENT; f: POINT; h: TRIANGLE; u: POINT",
    "facts": "AngleOf(LeftFocus(P), RightVertex(t), MidPoint(j)) = AngleOf(f, Incenter(h), u)"
},
{
    "assertion": "Radius ( CIRCLE: d ) equals InterReciprocal ( HalfFocalLength ( CONICSECTION: N ) )",
    "id": 3302,
    "declarations": "d: CIRCLE; N: CONICSECTION",
    "facts": "Radius(d) = InterReciprocal(HalfFocalLength(N))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: l, TRIANGLE: Y ) equals BOOL: True",
    "id": 3303,
    "declarations": "l: CIRCLE; Y: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(l, Y) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: P ) equals POINT: W",
    "id": 3304,
    "declarations": "P: TRIANGLE; W: POINT",
    "facts": "Orthocenter(P) = W"
},
{
    "assertion": "LeftPart ( HYPERBOLA: x ) equals LeftPart ( HYPERBOLA: v )",
    "id": 3305,
    "declarations": "x: HYPERBOLA; v: HYPERBOLA",
    "facts": "LeftPart(x) = LeftPart(v)"
},
{
    "assertion": "Expression ( CURVE: y ) equals Expression ( CURVE: X )",
    "id": 3306,
    "declarations": "y: CURVE; X: CURVE",
    "facts": "Expression(y) = Expression(X)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: y ) equals POINT: S",
    "id": 3307,
    "declarations": "y: TRIANGLE; S: POINT",
    "facts": "Circumcenter(y) = S"
},
{
    "assertion": "Locus ( UpperVertex ( CONICSECTION: W ) ) equals CURVE: R",
    "id": 3308,
    "declarations": "W: CONICSECTION; R: CURVE",
    "facts": "Locus(UpperVertex(W)) = R"
},
{
    "assertion": "LocusEquation ( LowerVertex ( CONICSECTION: a ) ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 3309,
    "declarations": "a: CONICSECTION; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "LocusEquation(LowerVertex(a)) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "Eccentricity ( CONICSECTION: X ) equals NUMBER: 86",
    "id": 3310,
    "declarations": "X: CONICSECTION; 86: NUMBER",
    "facts": "Eccentricity(X) = 86"
},
{
    "assertion": "CircumCircle ( TRIANGLE: c ) equals CIRCLE: e",
    "id": 3311,
    "declarations": "c: TRIANGLE; e: CIRCLE",
    "facts": "CircumCircle(c) = e"
},
{
    "assertion": "sqrt ( NUMBER: -60 ) equals NUMBER: -53",
    "id": 3312,
    "declarations": "-60: NUMBER; -53: NUMBER",
    "facts": "sqrt(-60) = -53"
},
{
    "assertion": "Vertex ( CONICSECTION: d ) equals POINT: B",
    "id": 3313,
    "declarations": "d: CONICSECTION; B: POINT",
    "facts": "Vertex(d) = B"
},
{
    "assertion": "Min ( Length ( LINESEGMENT: N ) ) equals NUMBER: 25",
    "id": 3314,
    "declarations": "N: LINESEGMENT; 25: NUMBER",
    "facts": "Min(Length(N)) = 25"
},
{
    "assertion": "IsTangent ( LINE: x, CONICSECTION: T ) equals BOOL: True",
    "id": 3315,
    "declarations": "x: LINE; T: CONICSECTION; True: BOOL",
    "facts": "IsTangent(x, T) = True"
},
{
    "assertion": "TangentOnPoint ( POINT: d, CURVE: D ) equals LINE: l",
    "id": 3316,
    "declarations": "d: POINT; D: CURVE; l: LINE",
    "facts": "TangentOnPoint(d, D) = l"
},
{
    "assertion": "FootPoint ( LINE: f, OverlappingLine ( LINESEGMENT: n ) ) equals RightFocus ( CONICSECTION: K )",
    "id": 3317,
    "declarations": "f: LINE; n: LINESEGMENT; K: CONICSECTION",
    "facts": "FootPoint(f, OverlappingLine(n)) = RightFocus(K)"
},
{
    "assertion": "RightFocus ( CONICSECTION: I ) equals Incenter ( TRIANGLE: x )",
    "id": 3318,
    "declarations": "I: CONICSECTION; x: TRIANGLE",
    "facts": "RightFocus(I) = Incenter(x)"
},
{
    "assertion": "sqrt ( NUMBER: 41 ) equals NUMBER: 59",
    "id": 3319,
    "declarations": "41: NUMBER; 59: NUMBER",
    "facts": "sqrt(41) = 59"
},
{
    "assertion": "Locus ( POINT: J ) equals CURVE: q",
    "id": 3320,
    "declarations": "J: POINT; q: CURVE",
    "facts": "Locus(J) = q"
},
{
    "assertion": "Coordinate ( Orthocenter ( TRIANGLE: H ) ) equals ( Area ( CONICSECTION: P ), Min ( lg ( Eccentricity ( CONICSECTION: J ) ) ) )",
    "id": 3321,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Diameter ( CIRCLE: I ) equals InterReciprocal ( Perimeter ( CONICSECTION: U ) )",
    "id": 3322,
    "declarations": "I: CIRCLE; U: CONICSECTION",
    "facts": "Diameter(I) = InterReciprocal(Perimeter(U))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: O, TRIANGLE: d ) equals BOOL: False",
    "id": 3323,
    "declarations": "O: CIRCLE; d: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(O, d) = False"
},
{
    "assertion": "Intercept ( LINE: S, AXIS: xAxis ) equals NUMBER: 32",
    "id": 3324,
    "declarations": "S: LINE; xAxis: AXIS; 32: NUMBER",
    "facts": "Intercept(S, xAxis) = 32"
},
{
    "assertion": "RealAxis ( ELLIPSE: P ) equals LINESEGMENT: D",
    "id": 3325,
    "declarations": "P: ELLIPSE; D: LINESEGMENT",
    "facts": "RealAxis(P) = D"
},
{
    "assertion": "RightVertex ( CONICSECTION: a ) equals UpperVertex ( CONICSECTION: f )",
    "id": 3326,
    "declarations": "a: CONICSECTION; f: CONICSECTION",
    "facts": "RightVertex(a) = UpperVertex(f)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: v ) equals RightFocus ( CONICSECTION: l )",
    "id": 3327,
    "declarations": "v: CONICSECTION; l: CONICSECTION",
    "facts": "LowerFocus(v) = RightFocus(l)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: D ) equals AXIS: xAxis",
    "id": 3328,
    "declarations": "D: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(D) = xAxis"
},
{
    "assertion": "YCoordinate ( RightVertex ( CONICSECTION: r ) ) equals NUMBER: 75",
    "id": 3329,
    "declarations": "r: CONICSECTION; 75: NUMBER",
    "facts": "YCoordinate(RightVertex(r)) = 75"
},
{
    "assertion": "Inclination ( LINE: e ) equals lg ( Radius ( CIRCLE: i ) )",
    "id": 3330,
    "declarations": "e: LINE; i: CIRCLE",
    "facts": "Inclination(e) = lg(Radius(i))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: w ) equals POINT: B",
    "id": 3331,
    "declarations": "w: CONICSECTION; B: POINT",
    "facts": "LowerFocus(w) = B"
},
{
    "assertion": "IsIntersect ( LeftPart ( HYPERBOLA: M ), CURVE: W ) equals BOOL: True",
    "id": 3332,
    "declarations": "M: HYPERBOLA; W: CURVE; True: BOOL",
    "facts": "IsIntersect(LeftPart(M), W) = True"
},
{
    "assertion": "Quadrant ( FootPoint ( LINE: g, LINE: s ) ) equals NUMBER: 53",
    "id": 3333,
    "declarations": "g: LINE; s: LINE; 53: NUMBER",
    "facts": "Quadrant(FootPoint(g, s)) = 53"
},
{
    "assertion": "ApplyUnit ( sqrt ( NUMBER: 23 ), DEGREESTR: degree )",
    "id": 3334,
    "declarations": "23: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(sqrt(23), degree) = None"
},
{
    "assertion": "Eccentricity ( CONICSECTION: b ) equals XCoordinate ( POINT: N )",
    "id": 3335,
    "declarations": "b: CONICSECTION; N: POINT",
    "facts": "Eccentricity(b) = XCoordinate(N)"
},
{
    "assertion": "TangentOnPoint ( Projection ( UpperFocus ( CONICSECTION: c ), OverlappingLine ( MinorAxis ( ELLIPSE: E ) ) ), CURVE: o ) equals LINE: q",
    "id": 3336,
    "declarations": "c: CONICSECTION; E: ELLIPSE; o: CURVE; q: LINE",
    "facts": "TangentOnPoint(Projection(UpperFocus(c), OverlappingLine(MinorAxis(E))), o) = q"
},
{
    "assertion": "InterceptChord ( LINE: A, CONICSECTION: B ) equals LINESEGMENT: e",
    "id": 3337,
    "declarations": "A: LINE; B: CONICSECTION; e: LINESEGMENT",
    "facts": "InterceptChord(A, B) = e"
},
{
    "assertion": "ApplyUnit ( Length ( LINESEGMENT: o ), DEGREESTR: degree )",
    "id": 3338,
    "declarations": "o: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(Length(o), degree) = None"
},
{
    "assertion": "Abs ( LINESEGMENT: B ) equals NUMBER: 23",
    "id": 3339,
    "declarations": "B: LINESEGMENT; 23: NUMBER",
    "facts": "Abs(B) = 23"
},
{
    "assertion": "Circumcenter ( TRIANGLE: t ) equals POINT: S",
    "id": 3340,
    "declarations": "t: TRIANGLE; S: POINT",
    "facts": "Circumcenter(t) = S"
},
{
    "assertion": "Intersection ( CURVE: n, CURVE: h ) equals Center ( CONICSECTION: t )",
    "id": 3341,
    "declarations": "n: CURVE; h: CURVE; t: CONICSECTION",
    "facts": "Intersection(n, h) = Center(t)"
},
{
    "assertion": "Intersection ( CURVE: J, LeftPart ( HYPERBOLA: J ) ) equals Projection ( POINT: N, PerpendicularBisector ( LINESEGMENT: a ) )",
    "id": 3342,
    "declarations": "J: CURVE; J: HYPERBOLA; N: POINT; a: LINESEGMENT",
    "facts": "Intersection(J, LeftPart(J)) = Projection(N, PerpendicularBisector(a))"
},
{
    "assertion": "RightFocus ( CONICSECTION: L ) equals Center ( CONICSECTION: G )",
    "id": 3343,
    "declarations": "L: CONICSECTION; G: CONICSECTION",
    "facts": "RightFocus(L) = Center(G)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: M ) equals CURVE: t",
    "id": 3344,
    "declarations": "M: HYPERBOLA; t: CURVE",
    "facts": "LeftPart(M) = t"
},
{
    "assertion": "LowerFocus ( CONICSECTION: O ) equals POINT: J",
    "id": 3345,
    "declarations": "O: CONICSECTION; J: POINT",
    "facts": "LowerFocus(O) = J"
},
{
    "assertion": "sqrt ( Length ( LINESEGMENT: a ) ) equals NUMBER: 7",
    "id": 3346,
    "declarations": "a: LINESEGMENT; 7: NUMBER",
    "facts": "sqrt(Length(a)) = 7"
},
{
    "assertion": "TangentOnPoint ( Circumcenter ( TRIANGLE: p ), RightPart ( HYPERBOLA: x ) ) equals LINE: b",
    "id": 3347,
    "declarations": "p: TRIANGLE; x: HYPERBOLA; b: LINE",
    "facts": "TangentOnPoint(Circumcenter(p), RightPart(x)) = b"
},
{
    "assertion": "Max ( Area ( CONICSECTION: z ) ) equals FocalLength ( CONICSECTION: S )",
    "id": 3348,
    "declarations": "z: CONICSECTION; S: CONICSECTION",
    "facts": "Max(Area(z)) = FocalLength(S)"
},
{
    "assertion": "Vertex ( CONICSECTION: G ) equals RightFocus ( CONICSECTION: E )",
    "id": 3349,
    "declarations": "G: CONICSECTION; E: CONICSECTION",
    "facts": "Vertex(G) = RightFocus(E)"
},
{
    "assertion": "DotProduct ( VECTOR: G, VECTOR: s ) equals NUMBER: 100",
    "id": 3350,
    "declarations": "G: VECTOR; s: VECTOR; 100: NUMBER",
    "facts": "DotProduct(G, s) = 100"
},
{
    "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: U ) ) equals Perimeter ( CONICSECTION: F )",
    "id": 3351,
    "declarations": "U: CONICSECTION; F: CONICSECTION",
    "facts": "XCoordinate(UpperVertex(U)) = Perimeter(F)"
},
{
    "assertion": "Coordinate ( RightFocus ( CONICSECTION: s ) ) equals ( Eccentricity ( CONICSECTION: j ), Intercept ( LINE: w, AXIS: yAxis ) )",
    "id": 3352,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Orthocenter ( TRIANGLE: m ) equals Orthocenter ( TRIANGLE: Q )",
    "id": 3353,
    "declarations": "m: TRIANGLE; Q: TRIANGLE",
    "facts": "Orthocenter(m) = Orthocenter(Q)"
},
{
    "assertion": "Radius ( CIRCLE: C ) equals XCoordinate ( POINT: o )",
    "id": 3354,
    "declarations": "C: CIRCLE; o: POINT",
    "facts": "Radius(C) = XCoordinate(o)"
},
{
    "assertion": "RealAxis ( ELLIPSE: Y ) equals LINESEGMENT: O",
    "id": 3355,
    "declarations": "Y: ELLIPSE; O: LINESEGMENT",
    "facts": "RealAxis(Y) = O"
},
{
    "assertion": "VectorOf ( POINT: b, RightVertex ( CONICSECTION: M ) ) equals VECTOR: q",
    "id": 3356,
    "declarations": "b: POINT; M: CONICSECTION; q: VECTOR",
    "facts": "VectorOf(b, RightVertex(M)) = q"
},
{
    "assertion": "MidPoint ( LINESEGMENT: b ) equals UpperFocus ( CONICSECTION: Z )",
    "id": 3357,
    "declarations": "b: LINESEGMENT; Z: CONICSECTION",
    "facts": "MidPoint(b) = UpperFocus(Z)"
},
{
    "assertion": "Center ( CONICSECTION: m ) equals POINT: G",
    "id": 3358,
    "declarations": "m: CONICSECTION; G: POINT",
    "facts": "Center(m) = G"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: O ), TRIANGLE: X ) equals BOOL: False",
    "id": 3359,
    "declarations": "O: TRIANGLE; X: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(O), X) = False"
},
{
    "assertion": "Expression ( CURVE: p ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 3360,
    "declarations": "p: CURVE; y*space=*spacesin(x): EXPRESSION",
    "facts": "Expression(p) = y*space=*spacesin(x)"
},
{
    "assertion": "YCoordinate ( Incenter ( TRIANGLE: Z ) ) equals Min ( DotProduct ( VECTOR: j, VECTOR: F ) )",
    "id": 3361,
    "declarations": "Z: TRIANGLE; j: VECTOR; F: VECTOR",
    "facts": "YCoordinate(Incenter(Z)) = Min(DotProduct(j, F))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: s ) equals POINT: g",
    "id": 3362,
    "declarations": "s: CONICSECTION; g: POINT",
    "facts": "LowerFocus(s) = g"
},
{
    "assertion": "InterReciprocal ( NUMBER: -38 ) equals Abs ( LINESEGMENT: q )",
    "id": 3363,
    "declarations": "-38: NUMBER; q: LINESEGMENT",
    "facts": "InterReciprocal(-38) = Abs(q)"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: d ) ) equals Slope ( LINE: z )",
    "id": 3364,
    "declarations": "d: CONICSECTION; z: LINE",
    "facts": "XCoordinate(LeftFocus(d)) = Slope(z)"
},
{
    "assertion": "Perimeter ( CONICSECTION: U ) equals Diameter ( CircumCircle ( TRIANGLE: q ) )",
    "id": 3365,
    "declarations": "U: CONICSECTION; q: TRIANGLE",
    "facts": "Perimeter(U) = Diameter(CircumCircle(q))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: q ) equals POINT: k",
    "id": 3366,
    "declarations": "q: CONICSECTION; k: POINT",
    "facts": "LowerFocus(q) = k"
},
{
    "assertion": "Slope ( LINE: O ) equals Diameter ( CIRCLE: M )",
    "id": 3367,
    "declarations": "O: LINE; M: CIRCLE",
    "facts": "Slope(O) = Diameter(M)"
},
{
    "assertion": "IsTangent ( LINE: I, CONICSECTION: E ) equals BOOL: True",
    "id": 3368,
    "declarations": "I: LINE; E: CONICSECTION; True: BOOL",
    "facts": "IsTangent(I, E) = True"
},
{
    "assertion": "IsChordOf ( ImaginaryAxis ( ELLIPSE: f ), CONICSECTION: y ) equals BOOL: False",
    "id": 3369,
    "declarations": "f: ELLIPSE; y: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(ImaginaryAxis(f), y) = False"
},
{
    "assertion": "Between ( POINT: U, POINT: f, POINT: Y ) equals BOOL: True",
    "id": 3370,
    "declarations": "U: POINT; f: POINT; Y: POINT; True: BOOL",
    "facts": "Between(U, f, Y) = True"
},
{
    "assertion": "UpperVertex ( CONICSECTION: o ) equals POINT: g",
    "id": 3371,
    "declarations": "o: CONICSECTION; g: POINT",
    "facts": "UpperVertex(o) = g"
},
{
    "assertion": "Intercept ( RightDirectrix ( CONICSECTION: P ), AXIS: yAxis ) equals NUMBER: -68",
    "id": 3372,
    "declarations": "P: CONICSECTION; yAxis: AXIS; -68: NUMBER",
    "facts": "Intercept(RightDirectrix(P), yAxis) = -68"
},
{
    "assertion": "Perimeter ( CONICSECTION: r ) equals NUMBER: 3",
    "id": 3373,
    "declarations": "r: CONICSECTION; 3: NUMBER",
    "facts": "Perimeter(r) = 3"
},
{
    "assertion": "Locus ( POINT: T ) equals CURVE: m",
    "id": 3374,
    "declarations": "T: POINT; m: CURVE",
    "facts": "Locus(T) = m"
},
{
    "assertion": "Radius ( CIRCLE: a ) equals Intercept ( LINE: g, AXIS: yAxis )",
    "id": 3375,
    "declarations": "a: CIRCLE; g: LINE; yAxis: AXIS",
    "facts": "Radius(a) = Intercept(g, yAxis)"
},
{
    "assertion": "Projection ( POINT: A, PerpendicularBisector ( LINESEGMENT: L ) ) equals Circumcenter ( TRIANGLE: C )",
    "id": 3376,
    "declarations": "A: POINT; L: LINESEGMENT; C: TRIANGLE",
    "facts": "Projection(A, PerpendicularBisector(L)) = Circumcenter(C)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: G ) equals POINT: V",
    "id": 3377,
    "declarations": "G: CONICSECTION; V: POINT",
    "facts": "LeftFocus(G) = V"
},
{
    "assertion": "Abs ( LINESEGMENT: z ) equals Quadrant ( POINT: s )",
    "id": 3378,
    "declarations": "z: LINESEGMENT; s: POINT",
    "facts": "Abs(z) = Quadrant(s)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: w ) equals LINESEGMENT: s",
    "id": 3379,
    "declarations": "w: ELLIPSE; s: LINESEGMENT",
    "facts": "MinorAxis(w) = s"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: Q, CIRCLE: u ) equals BOOL: False",
    "id": 3380,
    "declarations": "Q: LINESEGMENT; u: CIRCLE; False: BOOL",
    "facts": "IsDiameter(Q, u) = False"
},
{
    "assertion": "Distance ( MidPoint ( ImaginaryAxis ( ELLIPSE: r ) ), POINT: a ) equals Area ( CONICSECTION: A )",
    "id": 3381,
    "declarations": "r: ELLIPSE; a: POINT; A: CONICSECTION",
    "facts": "Distance(MidPoint(ImaginaryAxis(r)), a) = Area(A)"
},
{
    "assertion": "InterceptChord ( LINE: Z, CONICSECTION: j ) equals LINESEGMENT: p",
    "id": 3382,
    "declarations": "Z: LINE; j: CONICSECTION; p: LINESEGMENT",
    "facts": "InterceptChord(Z, j) = p"
},
{
    "assertion": "RightPart ( HYPERBOLA: o ) equals CURVE: R",
    "id": 3383,
    "declarations": "o: HYPERBOLA; R: CURVE",
    "facts": "RightPart(o) = R"
},
{
    "assertion": "RealAxis ( ELLIPSE: x ) equals LINESEGMENT: k",
    "id": 3384,
    "declarations": "x: ELLIPSE; k: LINESEGMENT",
    "facts": "RealAxis(x) = k"
},
{
    "assertion": "LeftVertex ( CONICSECTION: d ) equals MidPoint ( LINESEGMENT: M )",
    "id": 3385,
    "declarations": "d: CONICSECTION; M: LINESEGMENT",
    "facts": "LeftVertex(d) = MidPoint(M)"
},
{
    "assertion": "Distance ( LeftFocus ( CONICSECTION: k ), POINT: L ) equals NUMBER: 42",
    "id": 3386,
    "declarations": "k: CONICSECTION; L: POINT; 42: NUMBER",
    "facts": "Distance(LeftFocus(k), L) = 42"
},
{
    "assertion": "Directrix ( CONICSECTION: K ) equals LINE: h",
    "id": 3387,
    "declarations": "K: CONICSECTION; h: LINE",
    "facts": "Directrix(K) = h"
},
{
    "assertion": "LowerVertex ( CONICSECTION: m ) equals MidPoint ( LINESEGMENT: o )",
    "id": 3388,
    "declarations": "m: CONICSECTION; o: LINESEGMENT",
    "facts": "LowerVertex(m) = MidPoint(o)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: x ) equals Perimeter ( CONICSECTION: g )",
    "id": 3389,
    "declarations": "x: CONICSECTION; g: CONICSECTION",
    "facts": "Eccentricity(x) = Perimeter(g)"
},
{
    "assertion": "Inclination ( LINE: e ) equals lg ( Slope ( TangentOnPoint ( POINT: W, CURVE: M ) ) )",
    "id": 3390,
    "declarations": "e: LINE; W: POINT; M: CURVE",
    "facts": "Inclination(e) = lg(Slope(TangentOnPoint(W, M)))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Z ) equals POINT: x",
    "id": 3391,
    "declarations": "Z: TRIANGLE; x: POINT",
    "facts": "Orthocenter(Z) = x"
},
{
    "assertion": "Eccentricity ( CONICSECTION: y ) equals NUMBER: 33",
    "id": 3392,
    "declarations": "y: CONICSECTION; 33: NUMBER",
    "facts": "Eccentricity(y) = 33"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: S ) equals LINE: y",
    "id": 3393,
    "declarations": "S: CONICSECTION; y: LINE",
    "facts": "RightDirectrix(S) = y"
},
{
    "assertion": "IsIntersect ( CURVE: p, CURVE: A ) equals BOOL: True",
    "id": 3394,
    "declarations": "p: CURVE; A: CURVE; True: BOOL",
    "facts": "IsIntersect(p, A) = True"
},
{
    "assertion": "IsOutTangent ( CIRCLE: N, CircumCircle ( TRIANGLE: O ) ) equals BOOL: True",
    "id": 3395,
    "declarations": "N: CIRCLE; O: TRIANGLE; True: BOOL",
    "facts": "IsOutTangent(N, CircumCircle(O)) = True"
},
{
    "assertion": "sqrt ( NUMBER: 94 ) equals FocalLength ( CONICSECTION: D )",
    "id": 3396,
    "declarations": "94: NUMBER; D: CONICSECTION",
    "facts": "sqrt(94) = FocalLength(D)"
},
{
    "assertion": "PointOnCurve ( LeftFocus ( CONICSECTION: J ), CURVE: y ) equals BOOL: False",
    "id": 3397,
    "declarations": "J: CONICSECTION; y: CURVE; False: BOOL",
    "facts": "PointOnCurve(LeftFocus(J), y) = False"
},
{
    "assertion": "Area ( CONICSECTION: q ) equals Length ( ImaginaryAxis ( ELLIPSE: W ) )",
    "id": 3398,
    "declarations": "q: CONICSECTION; W: ELLIPSE",
    "facts": "Area(q) = Length(ImaginaryAxis(W))"
},
{
    "assertion": "Abs ( LINESEGMENT: u ) equals Length ( LINESEGMENT: q )",
    "id": 3399,
    "declarations": "u: LINESEGMENT; q: LINESEGMENT",
    "facts": "Abs(u) = Length(q)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: x, CIRCLE: i ) equals BOOL: True",
    "id": 3400,
    "declarations": "x: LINESEGMENT; i: CIRCLE; True: BOOL",
    "facts": "IsDiameter(x, i) = True"
},
{
    "assertion": "Diameter ( CIRCLE: C ) equals InterReciprocal ( YCoordinate ( RightFocus ( CONICSECTION: S ) ) )",
    "id": 3401,
    "declarations": "C: CIRCLE; S: CONICSECTION",
    "facts": "Diameter(C) = InterReciprocal(YCoordinate(RightFocus(S)))"
},
{
    "assertion": "Max ( NUMBER: -4 ) equals NUMBER: -8",
    "id": 3402,
    "declarations": "-4: NUMBER; -8: NUMBER",
    "facts": "Max(-4) = -8"
},
{
    "assertion": "FootPoint ( PerpendicularBisector ( LINESEGMENT: n ), LINE: O ) equals POINT: T",
    "id": 3403,
    "declarations": "n: LINESEGMENT; O: LINE; T: POINT",
    "facts": "FootPoint(PerpendicularBisector(n), O) = T"
},
{
    "assertion": "LeftFocus ( CONICSECTION: d ) equals Incenter ( TRIANGLE: f )",
    "id": 3404,
    "declarations": "d: CONICSECTION; f: TRIANGLE",
    "facts": "LeftFocus(d) = Incenter(f)"
},
{
    "assertion": "Min ( Distance ( Center ( CONICSECTION: k ), LowerVertex ( CONICSECTION: M ) ) ) equals Area ( CONICSECTION: u )",
    "id": 3405,
    "declarations": "k: CONICSECTION; M: CONICSECTION; u: CONICSECTION",
    "facts": "Min(Distance(Center(k), LowerVertex(M))) = Area(u)"
},
{
    "assertion": "TangentPoint ( LineOf ( LowerVertex ( CONICSECTION: L ), Center ( CONICSECTION: F ) ), CIRCLE: N ) equals POINT: l",
    "id": 3406,
    "declarations": "L: CONICSECTION; F: CONICSECTION; N: CIRCLE; l: POINT",
    "facts": "TangentPoint(LineOf(LowerVertex(L), Center(F)), N) = l"
},
{
    "assertion": "Length ( LINESEGMENT: L ) equals NUMBER: -33",
    "id": 3407,
    "declarations": "L: LINESEGMENT; -33: NUMBER",
    "facts": "Length(L) = -33"
},
{
    "assertion": "MinorAxis ( ELLIPSE: k ) equals LINESEGMENT: J",
    "id": 3408,
    "declarations": "k: ELLIPSE; J: LINESEGMENT",
    "facts": "MinorAxis(k) = J"
},
{
    "assertion": "AngleOf ( POINT: T, POINT: Q, Center ( CONICSECTION: f ) ) equals ApplyUnit ( NUMBER: 7, DEGREESTR: degree )",
    "id": 3409,
    "declarations": "T: POINT; Q: POINT; f: CONICSECTION; 7: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(T, Q, Center(f)) = ApplyUnit(7, degree)"
},
{
    "assertion": "FootPoint ( LINE: K, LINE: d ) equals Projection ( UpperFocus ( CONICSECTION: E ), PerpendicularBisector ( LINESEGMENT: V ) )",
    "id": 3410,
    "declarations": "K: LINE; d: LINE; E: CONICSECTION; V: LINESEGMENT",
    "facts": "FootPoint(K, d) = Projection(UpperFocus(E), PerpendicularBisector(V))"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: U ) equals RightDirectrix ( CONICSECTION: W )",
    "id": 3411,
    "declarations": "U: LINESEGMENT; W: CONICSECTION",
    "facts": "OverlappingLine(U) = RightDirectrix(W)"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: k ) ) equals UpperVertex ( CONICSECTION: r )",
    "id": 3412,
    "declarations": "k: ELLIPSE; r: CONICSECTION",
    "facts": "MidPoint(MajorAxis(k)) = UpperVertex(r)"
},
{
    "assertion": "Directrix ( CONICSECTION: J ) equals OverlappingLine ( MajorAxis ( ELLIPSE: x ) )",
    "id": 3413,
    "declarations": "J: CONICSECTION; x: ELLIPSE",
    "facts": "Directrix(J) = OverlappingLine(MajorAxis(x))"
},
{
    "assertion": "Perimeter ( CONICSECTION: F ) equals NUMBER: -66",
    "id": 3414,
    "declarations": "F: CONICSECTION; -66: NUMBER",
    "facts": "Perimeter(F) = -66"
},
{
    "assertion": "IsIntersect ( CURVE: G, CURVE: c ) equals BOOL: True",
    "id": 3415,
    "declarations": "G: CURVE; c: CURVE; True: BOOL",
    "facts": "IsIntersect(G, c) = True"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: K ) equals LINE: t",
    "id": 3416,
    "declarations": "K: LINESEGMENT; t: LINE",
    "facts": "PerpendicularBisector(K) = t"
},
{
    "assertion": "Orthocenter ( TRIANGLE: p ) equals UpperVertex ( CONICSECTION: L )",
    "id": 3417,
    "declarations": "p: TRIANGLE; L: CONICSECTION",
    "facts": "Orthocenter(p) = UpperVertex(L)"
},
{
    "assertion": "Diameter ( CIRCLE: b ) equals Slope ( LINE: V )",
    "id": 3418,
    "declarations": "b: CIRCLE; V: LINE",
    "facts": "Diameter(b) = Slope(V)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: o ) equals CIRCLE: N",
    "id": 3419,
    "declarations": "o: TRIANGLE; N: CIRCLE",
    "facts": "CircumCircle(o) = N"
},
{
    "assertion": "YCoordinate ( LeftVertex ( CONICSECTION: d ) ) equals NUMBER: 38",
    "id": 3420,
    "declarations": "d: CONICSECTION; 38: NUMBER",
    "facts": "YCoordinate(LeftVertex(d)) = 38"
},
{
    "assertion": "Vertex ( CONICSECTION: F ) equals POINT: L",
    "id": 3421,
    "declarations": "F: CONICSECTION; L: POINT",
    "facts": "Vertex(F) = L"
},
{
    "assertion": "IsInTangent ( CIRCLE: N, CIRCLE: D ) equals BOOL: False",
    "id": 3422,
    "declarations": "N: CIRCLE; D: CIRCLE; False: BOOL",
    "facts": "IsInTangent(N, D) = False"
},
{
    "assertion": "DotProduct ( VECTOR: T, VECTOR: l ) equals Diameter ( CIRCLE: d )",
    "id": 3423,
    "declarations": "T: VECTOR; l: VECTOR; d: CIRCLE",
    "facts": "DotProduct(T, l) = Diameter(d)"
},
{
    "assertion": "Max ( Slope ( PerpendicularBisector ( LINESEGMENT: x ) ) ) equals HalfFocalLength ( CONICSECTION: E )",
    "id": 3424,
    "declarations": "x: LINESEGMENT; E: CONICSECTION",
    "facts": "Max(Slope(PerpendicularBisector(x))) = HalfFocalLength(E)"
},
{
    "assertion": "LineOf ( POINT: g, POINT: S ) equals LINE: p",
    "id": 3425,
    "declarations": "g: POINT; S: POINT; p: LINE",
    "facts": "LineOf(g, S) = p"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: N, CIRCLE: o ) equals BOOL: False",
    "id": 3426,
    "declarations": "N: LINESEGMENT; o: CIRCLE; False: BOOL",
    "facts": "IsDiameter(N, o) = False"
},
{
    "assertion": "Max ( Quadrant ( POINT: m ) ) equals Min ( Radius ( CIRCLE: q ) )",
    "id": 3427,
    "declarations": "m: POINT; q: CIRCLE",
    "facts": "Max(Quadrant(m)) = Min(Radius(q))"
},
{
    "assertion": "sqrt ( Abs ( LINESEGMENT: y ) ) equals NUMBER: -30",
    "id": 3428,
    "declarations": "y: LINESEGMENT; -30: NUMBER",
    "facts": "sqrt(Abs(y)) = -30"
},
{
    "assertion": "LineSegmentOf ( RightFocus ( CONICSECTION: Z ), POINT: D ) equals MinorAxis ( ELLIPSE: m )",
    "id": 3429,
    "declarations": "Z: CONICSECTION; D: POINT; m: ELLIPSE",
    "facts": "LineSegmentOf(RightFocus(Z), D) = MinorAxis(m)"
},
{
    "assertion": "TangentOfPoint ( Incenter ( TRIANGLE: M ), CURVE: V ) equals LINE: L",
    "id": 3430,
    "declarations": "M: TRIANGLE; V: CURVE; L: LINE",
    "facts": "TangentOfPoint(Incenter(M), V) = L"
},
{
    "assertion": "Negation ( LeftVertex ( CONICSECTION: L ) equals LowerFocus ( CONICSECTION: Z ) ) equals BOOL: True",
    "id": 3431,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsInTangent ( CIRCLE: G, CIRCLE: a ) equals BOOL: True",
    "id": 3432,
    "declarations": "G: CIRCLE; a: CIRCLE; True: BOOL",
    "facts": "IsInTangent(G, a) = True"
},
{
    "assertion": "IsInTangent ( CIRCLE: W, CIRCLE: T ) equals BOOL: True",
    "id": 3433,
    "declarations": "W: CIRCLE; T: CIRCLE; True: BOOL",
    "facts": "IsInTangent(W, T) = True"
},
{
    "assertion": "Inclination ( OverlappingLine ( RealAxis ( ELLIPSE: x ) ) ) equals Length ( LINESEGMENT: y )",
    "id": 3434,
    "declarations": "x: ELLIPSE; y: LINESEGMENT",
    "facts": "Inclination(OverlappingLine(RealAxis(x))) = Length(y)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: W ) equals RightDirectrix ( CONICSECTION: N )",
    "id": 3435,
    "declarations": "W: LINESEGMENT; N: CONICSECTION",
    "facts": "OverlappingLine(W) = RightDirectrix(N)"
},
{
    "assertion": "RealAxis ( ELLIPSE: G ) equals LINESEGMENT: C",
    "id": 3436,
    "declarations": "G: ELLIPSE; C: LINESEGMENT",
    "facts": "RealAxis(G) = C"
},
{
    "assertion": "MajorAxis ( ELLIPSE: y ) equals LINESEGMENT: O",
    "id": 3437,
    "declarations": "y: ELLIPSE; O: LINESEGMENT",
    "facts": "MajorAxis(y) = O"
},
{
    "assertion": "Directrix ( CONICSECTION: a ) equals TangentOnPoint ( POINT: I, CURVE: P )",
    "id": 3438,
    "declarations": "a: CONICSECTION; I: POINT; P: CURVE",
    "facts": "Directrix(a) = TangentOnPoint(I, P)"
},
{
    "assertion": "Diameter ( CIRCLE: Y ) equals NUMBER: 43",
    "id": 3439,
    "declarations": "Y: CIRCLE; 43: NUMBER",
    "facts": "Diameter(Y) = 43"
},
{
    "assertion": "FocalLength ( CONICSECTION: O ) equals NUMBER: 69",
    "id": 3440,
    "declarations": "O: CONICSECTION; 69: NUMBER",
    "facts": "FocalLength(O) = 69"
},
{
    "assertion": "Min ( Radius ( CIRCLE: h ) ) equals Abs ( MinorAxis ( ELLIPSE: K ) )",
    "id": 3441,
    "declarations": "h: CIRCLE; K: ELLIPSE",
    "facts": "Min(Radius(h)) = Abs(MinorAxis(K))"
},
{
    "assertion": "Focus ( CONICSECTION: m ) equals RightVertex ( CONICSECTION: Z )",
    "id": 3442,
    "declarations": "m: CONICSECTION; Z: CONICSECTION",
    "facts": "Focus(m) = RightVertex(Z)"
},
{
    "assertion": "Focus ( CONICSECTION: j ) equals RightVertex ( CONICSECTION: D )",
    "id": 3443,
    "declarations": "j: CONICSECTION; D: CONICSECTION",
    "facts": "Focus(j) = RightVertex(D)"
},
{
    "assertion": "DotProduct ( VECTOR: s, VECTOR: L ) equals NUMBER: 27",
    "id": 3444,
    "declarations": "s: VECTOR; L: VECTOR; 27: NUMBER",
    "facts": "DotProduct(s, L) = 27"
},
{
    "assertion": "Max ( YCoordinate ( POINT: Q ) ) equals Quadrant ( POINT: G )",
    "id": 3445,
    "declarations": "Q: POINT; G: POINT",
    "facts": "Max(YCoordinate(Q)) = Quadrant(G)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: p ) equals POINT: H",
    "id": 3446,
    "declarations": "p: CONICSECTION; H: POINT",
    "facts": "LowerVertex(p) = H"
},
{
    "assertion": "TriangleOf ( Center ( CONICSECTION: i ), POINT: D, LeftFocus ( CONICSECTION: Q ) ) equals TRIANGLE: t",
    "id": 3447,
    "declarations": "i: CONICSECTION; D: POINT; Q: CONICSECTION; t: TRIANGLE",
    "facts": "TriangleOf(Center(i), D, LeftFocus(Q)) = t"
},
{
    "assertion": "Intersection ( CURVE: d, CURVE: t ) equals UpperFocus ( CONICSECTION: r )",
    "id": 3448,
    "declarations": "d: CURVE; t: CURVE; r: CONICSECTION",
    "facts": "Intersection(d, t) = UpperFocus(r)"
},
{
    "assertion": "IsPerpendicular ( LINE: B, LINE: f ) equals BOOL: False",
    "id": 3449,
    "declarations": "B: LINE; f: LINE; False: BOOL",
    "facts": "IsPerpendicular(B, f) = False"
},
{
    "assertion": "Asymptote ( HYPERBOLA: Q ) equals TangentOnPoint ( POINT: q, CURVE: W )",
    "id": 3450,
    "declarations": "Q: HYPERBOLA; q: POINT; W: CURVE",
    "facts": "Asymptote(Q) = TangentOnPoint(q, W)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: O ) equals POINT: A",
    "id": 3451,
    "declarations": "O: LINESEGMENT; A: POINT",
    "facts": "Endpoint(O) = A"
},
{
    "assertion": "Eccentricity ( CONICSECTION: u ) equals FocalLength ( CONICSECTION: z )",
    "id": 3452,
    "declarations": "u: CONICSECTION; z: CONICSECTION",
    "facts": "Eccentricity(u) = FocalLength(z)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: G ) equals CURVE: c",
    "id": 3453,
    "declarations": "G: HYPERBOLA; c: CURVE",
    "facts": "LeftPart(G) = c"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: A ) equals sqrt ( HalfFocalLength ( CONICSECTION: a ) )",
    "id": 3454,
    "declarations": "A: CONICSECTION; a: CONICSECTION",
    "facts": "HalfFocalLength(A) = sqrt(HalfFocalLength(a))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: p ) equals POINT: g",
    "id": 3455,
    "declarations": "p: CONICSECTION; g: POINT",
    "facts": "UpperVertex(p) = g"
},
{
    "assertion": "TangentOnPoint ( UpperVertex ( CONICSECTION: X ), CURVE: c ) equals LINE: E",
    "id": 3456,
    "declarations": "X: CONICSECTION; c: CURVE; E: LINE",
    "facts": "TangentOnPoint(UpperVertex(X), c) = E"
},
{
    "assertion": "Asymptote ( HYPERBOLA: l ) equals LINE: B",
    "id": 3457,
    "declarations": "l: HYPERBOLA; B: LINE",
    "facts": "Asymptote(l) = B"
},
{
    "assertion": "IsTangent ( OverlappingLine ( LINESEGMENT: t ), CONICSECTION: g ) equals BOOL: True",
    "id": 3458,
    "declarations": "t: LINESEGMENT; g: CONICSECTION; True: BOOL",
    "facts": "IsTangent(OverlappingLine(t), g) = True"
},
{
    "assertion": "CircumCircle ( TRIANGLE: N ) equals CIRCLE: M",
    "id": 3459,
    "declarations": "N: TRIANGLE; M: CIRCLE",
    "facts": "CircumCircle(N) = M"
},
{
    "assertion": "Max ( InterReciprocal ( NUMBER: 99 ) ) equals NumIntersection ( Locus ( POINT: j ), LeftPart ( HYPERBOLA: L ) )",
    "id": 3460,
    "declarations": "99: NUMBER; j: POINT; L: HYPERBOLA",
    "facts": "Max(InterReciprocal(99)) = NumIntersection(Locus(j), LeftPart(L))"
},
{
    "assertion": "LineSegmentOf ( RightVertex ( CONICSECTION: S ), POINT: b ) equals LINESEGMENT: T",
    "id": 3461,
    "declarations": "S: CONICSECTION; b: POINT; T: LINESEGMENT",
    "facts": "LineSegmentOf(RightVertex(S), b) = T"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: J ) ) equals LINE: u",
    "id": 3462,
    "declarations": "J: ELLIPSE; u: LINE",
    "facts": "OverlappingLine(MinorAxis(J)) = u"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: C ) equals AXIS: xAxis",
    "id": 3463,
    "declarations": "C: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(C) = xAxis"
},
{
    "assertion": "Projection ( Orthocenter ( TRIANGLE: r ), LINE: k ) equals POINT: C",
    "id": 3464,
    "declarations": "r: TRIANGLE; k: LINE; C: POINT",
    "facts": "Projection(Orthocenter(r), k) = C"
},
{
    "assertion": "lg ( NUMBER: 83 ) equals NUMBER: -20",
    "id": 3465,
    "declarations": "83: NUMBER; -20: NUMBER",
    "facts": "lg(83) = -20"
},
{
    "assertion": "Incenter ( TRIANGLE: m ) equals POINT: s",
    "id": 3466,
    "declarations": "m: TRIANGLE; s: POINT",
    "facts": "Incenter(m) = s"
},
{
    "assertion": "Abs ( LINESEGMENT: D ) equals XCoordinate ( Incenter ( TriangleOf ( POINT: U, UpperVertex ( CONICSECTION: m ), POINT: o ) ) )",
    "id": 3467,
    "declarations": "D: LINESEGMENT; U: POINT; m: CONICSECTION; o: POINT",
    "facts": "Abs(D) = XCoordinate(Incenter(TriangleOf(U, UpperVertex(m), o)))"
},
{
    "assertion": "Negation ( IsParallel ( LINE: C, LINE: J ) equals BOOL: True ) equals BOOL: True",
    "id": 3468,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightVertex ( CONICSECTION: D ) equals MidPoint ( LINESEGMENT: x )",
    "id": 3469,
    "declarations": "D: CONICSECTION; x: LINESEGMENT",
    "facts": "RightVertex(D) = MidPoint(x)"
},
{
    "assertion": "Perimeter ( CONICSECTION: b ) equals FocalLength ( CONICSECTION: Q )",
    "id": 3470,
    "declarations": "b: CONICSECTION; Q: CONICSECTION",
    "facts": "Perimeter(b) = FocalLength(Q)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: h ) equals NUMBER: 74",
    "id": 3471,
    "declarations": "h: CONICSECTION; 74: NUMBER",
    "facts": "Eccentricity(h) = 74"
},
{
    "assertion": "Distance ( Center ( CONICSECTION: t ), LowerVertex ( CONICSECTION: K ) ) equals InterReciprocal ( DotProduct ( VECTOR: X, VECTOR: L ) )",
    "id": 3472,
    "declarations": "t: CONICSECTION; K: CONICSECTION; X: VECTOR; L: VECTOR",
    "facts": "Distance(Center(t), LowerVertex(K)) = InterReciprocal(DotProduct(X, L))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: v ) equals CURVE: D",
    "id": 3473,
    "declarations": "v: HYPERBOLA; D: CURVE",
    "facts": "LeftPart(v) = D"
},
{
    "assertion": "Intercept ( LINE: y, AXIS: xAxis ) equals NUMBER: 72",
    "id": 3474,
    "declarations": "y: LINE; xAxis: AXIS; 72: NUMBER",
    "facts": "Intercept(y, xAxis) = 72"
},
{
    "assertion": "Perimeter ( CONICSECTION: I ) equals Perimeter ( CONICSECTION: c )",
    "id": 3475,
    "declarations": "I: CONICSECTION; c: CONICSECTION",
    "facts": "Perimeter(I) = Perimeter(c)"
},
{
    "assertion": "IsTangent ( RightDirectrix ( CONICSECTION: K ), CONICSECTION: q ) equals BOOL: False",
    "id": 3476,
    "declarations": "K: CONICSECTION; q: CONICSECTION; False: BOOL",
    "facts": "IsTangent(RightDirectrix(K), q) = False"
},
{
    "assertion": "IsChordOf ( MajorAxis ( ELLIPSE: t ), CONICSECTION: i ) equals BOOL: True",
    "id": 3477,
    "declarations": "t: ELLIPSE; i: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(MajorAxis(t), i) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: J ) equals POINT: P",
    "id": 3478,
    "declarations": "J: TRIANGLE; P: POINT",
    "facts": "Orthocenter(J) = P"
},
{
    "assertion": "UpperFocus ( CONICSECTION: z ) equals MidPoint ( MinorAxis ( ELLIPSE: a ) )",
    "id": 3479,
    "declarations": "z: CONICSECTION; a: ELLIPSE",
    "facts": "UpperFocus(z) = MidPoint(MinorAxis(a))"
},
{
    "assertion": "TangentOnPoint ( POINT: L, RightPart ( HYPERBOLA: P ) ) equals LINE: o",
    "id": 3480,
    "declarations": "L: POINT; P: HYPERBOLA; o: LINE",
    "facts": "TangentOnPoint(L, RightPart(P)) = o"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: I ) equals LINE: A",
    "id": 3481,
    "declarations": "I: LINESEGMENT; A: LINE",
    "facts": "PerpendicularBisector(I) = A"
},
{
    "assertion": "NumIntersection ( RightPart ( HYPERBOLA: E ), CURVE: L ) equals Perimeter ( CONICSECTION: m )",
    "id": 3482,
    "declarations": "E: HYPERBOLA; L: CURVE; m: CONICSECTION",
    "facts": "NumIntersection(RightPart(E), L) = Perimeter(m)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: A ) equals Slope ( LINE: W )",
    "id": 3483,
    "declarations": "A: CONICSECTION; W: LINE",
    "facts": "HalfFocalLength(A) = Slope(W)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: i, CIRCLE: g ) equals BOOL: True",
    "id": 3484,
    "declarations": "i: CIRCLE; g: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(i, g) = True"
},
{
    "assertion": "Inclination ( LINE: V ) equals Slope ( LINE: f )",
    "id": 3485,
    "declarations": "V: LINE; f: LINE",
    "facts": "Inclination(V) = Slope(f)"
},
{
    "assertion": "RealAxis ( ELLIPSE: k ) equals LINESEGMENT: L",
    "id": 3486,
    "declarations": "k: ELLIPSE; L: LINESEGMENT",
    "facts": "RealAxis(k) = L"
},
{
    "assertion": "TangentOnPoint ( POINT: F, Locus ( UpperFocus ( CONICSECTION: J ) ) ) equals LINE: Q",
    "id": 3487,
    "declarations": "F: POINT; J: CONICSECTION; Q: LINE",
    "facts": "TangentOnPoint(F, Locus(UpperFocus(J))) = Q"
},
{
    "assertion": "Coordinate ( POINT: u ) equals ( Perimeter ( CONICSECTION: e ), NUMBER: 6 )",
    "id": 3488,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsOutTangent ( CIRCLE: J, CIRCLE: d ) equals BOOL: False",
    "id": 3489,
    "declarations": "J: CIRCLE; d: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(J, d) = False"
},
{
    "assertion": "RightPart ( HYPERBOLA: L ) equals CURVE: S",
    "id": 3490,
    "declarations": "L: HYPERBOLA; S: CURVE",
    "facts": "RightPart(L) = S"
},
{
    "assertion": "Negation ( Incenter ( TRIANGLE: d ) equals POINT: S ) equals BOOL: True",
    "id": 3491,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Orthocenter ( TRIANGLE: H ) equals MidPoint ( InterceptChord ( LINE: o, CONICSECTION: w ) )",
    "id": 3492,
    "declarations": "H: TRIANGLE; o: LINE; w: CONICSECTION",
    "facts": "Orthocenter(H) = MidPoint(InterceptChord(o, w))"
},
{
    "assertion": "Vertex ( CONICSECTION: o ) equals POINT: Q",
    "id": 3493,
    "declarations": "o: CONICSECTION; Q: POINT",
    "facts": "Vertex(o) = Q"
},
{
    "assertion": "LineOf ( Circumcenter ( TRIANGLE: T ), Center ( CONICSECTION: j ) ) equals LINE: P",
    "id": 3494,
    "declarations": "T: TRIANGLE; j: CONICSECTION; P: LINE",
    "facts": "LineOf(Circumcenter(T), Center(j)) = P"
},
{
    "assertion": "RightVertex ( CONICSECTION: R ) equals Projection ( POINT: a, LINE: G )",
    "id": 3495,
    "declarations": "R: CONICSECTION; a: POINT; G: LINE",
    "facts": "RightVertex(R) = Projection(a, G)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: K, TRIANGLE: Z ) equals BOOL: False",
    "id": 3496,
    "declarations": "K: CIRCLE; Z: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(K, Z) = False"
},
{
    "assertion": "InterceptChord ( PerpendicularBisector ( LINESEGMENT: W ), CONICSECTION: U ) equals LINESEGMENT: p",
    "id": 3497,
    "declarations": "W: LINESEGMENT; U: CONICSECTION; p: LINESEGMENT",
    "facts": "InterceptChord(PerpendicularBisector(W), U) = p"
},
{
    "assertion": "TangentPoint ( LINE: p, CIRCLE: K ) equals Projection ( POINT: o, LeftDirectrix ( CONICSECTION: w ) )",
    "id": 3498,
    "declarations": "p: LINE; K: CIRCLE; o: POINT; w: CONICSECTION",
    "facts": "TangentPoint(p, K) = Projection(o, LeftDirectrix(w))"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: p ) equals OverlappingLine ( LINESEGMENT: Z )",
    "id": 3499,
    "declarations": "p: LINESEGMENT; Z: LINESEGMENT",
    "facts": "OverlappingLine(p) = OverlappingLine(Z)"
},
{
    "assertion": "Locus ( POINT: v ) equals CURVE: F",
    "id": 3500,
    "declarations": "v: POINT; F: CURVE",
    "facts": "Locus(v) = F"
},
{
    "assertion": "Negation ( CircumCircle ( TRIANGLE: U ) equals CIRCLE: s ) equals BOOL: True",
    "id": 3501,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "And ( Directrix ( CONICSECTION: d ) equals LINE: O, Orthocenter ( TRIANGLE: q ) equals LeftVertex ( CONICSECTION: d ) ) equals BOOL: False",
    "id": 3502,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "sqrt ( YCoordinate ( LowerVertex ( CONICSECTION: k ) ) ) equals Area ( CONICSECTION: F )",
    "id": 3503,
    "declarations": "k: CONICSECTION; F: CONICSECTION",
    "facts": "sqrt(YCoordinate(LowerVertex(k))) = Area(F)"
},
{
    "assertion": "Vertex ( CONICSECTION: v ) equals POINT: o",
    "id": 3504,
    "declarations": "v: CONICSECTION; o: POINT",
    "facts": "Vertex(v) = o"
},
{
    "assertion": "Quadrant ( POINT: v ) equals HalfFocalLength ( CONICSECTION: X )",
    "id": 3505,
    "declarations": "v: POINT; X: CONICSECTION",
    "facts": "Quadrant(v) = HalfFocalLength(X)"
},
{
    "assertion": "TangentOnPoint ( POINT: b, CURVE: P ) equals LINE: R",
    "id": 3506,
    "declarations": "b: POINT; P: CURVE; R: LINE",
    "facts": "TangentOnPoint(b, P) = R"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: D ) ) equals POINT: k",
    "id": 3507,
    "declarations": "D: ELLIPSE; k: POINT",
    "facts": "MidPoint(MajorAxis(D)) = k"
},
{
    "assertion": "TangentPoint ( LINE: y, CIRCLE: o ) equals POINT: v",
    "id": 3508,
    "declarations": "y: LINE; o: CIRCLE; v: POINT",
    "facts": "TangentPoint(y, o) = v"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: q, CIRCLE: r ) equals BOOL: True",
    "id": 3509,
    "declarations": "q: LINESEGMENT; r: CIRCLE; True: BOOL",
    "facts": "IsDiameter(q, r) = True"
},
{
    "assertion": "RightFocus ( CONICSECTION: R ) equals Circumcenter ( TRIANGLE: G )",
    "id": 3510,
    "declarations": "R: CONICSECTION; G: TRIANGLE",
    "facts": "RightFocus(R) = Circumcenter(G)"
},
{
    "assertion": "RightFocus ( CONICSECTION: C ) equals POINT: b",
    "id": 3511,
    "declarations": "C: CONICSECTION; b: POINT",
    "facts": "RightFocus(C) = b"
},
{
    "assertion": "ApplyUnit ( XCoordinate ( POINT: P ), DEGREESTR: degree )",
    "id": 3512,
    "declarations": "P: POINT; degree: DEGREESTR",
    "facts": "ApplyUnit(XCoordinate(P), degree) = None"
},
{
    "assertion": "RealAxis ( ELLIPSE: K ) equals LINESEGMENT: G",
    "id": 3513,
    "declarations": "K: ELLIPSE; G: LINESEGMENT",
    "facts": "RealAxis(K) = G"
},
{
    "assertion": "RightVertex ( CONICSECTION: A ) equals RightFocus ( CONICSECTION: u )",
    "id": 3514,
    "declarations": "A: CONICSECTION; u: CONICSECTION",
    "facts": "RightVertex(A) = RightFocus(u)"
},
{
    "assertion": "Vertex ( CONICSECTION: I ) equals RightFocus ( CONICSECTION: T )",
    "id": 3515,
    "declarations": "I: CONICSECTION; T: CONICSECTION",
    "facts": "Vertex(I) = RightFocus(T)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: t, TRIANGLE: E ) equals BOOL: True",
    "id": 3516,
    "declarations": "t: CIRCLE; E: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(t, E) = True"
},
{
    "assertion": "Perimeter ( CONICSECTION: l ) equals NUMBER: 58",
    "id": 3517,
    "declarations": "l: CONICSECTION; 58: NUMBER",
    "facts": "Perimeter(l) = 58"
},
{
    "assertion": "Max ( InterReciprocal ( Quadrant ( RightFocus ( CONICSECTION: V ) ) ) ) equals NUMBER: -58",
    "id": 3518,
    "declarations": "V: CONICSECTION; -58: NUMBER",
    "facts": "Max(InterReciprocal(Quadrant(RightFocus(V)))) = -58"
},
{
    "assertion": "LocusEquation ( POINT: E ) equals EXPRESSION: x*y*space=*space1",
    "id": 3519,
    "declarations": "E: POINT; x*y*space=*space1: EXPRESSION",
    "facts": "LocusEquation(E) = x*y*space=*space1"
},
{
    "assertion": "LeftFocus ( CONICSECTION: K ) equals POINT: j",
    "id": 3520,
    "declarations": "K: CONICSECTION; j: POINT",
    "facts": "LeftFocus(K) = j"
},
{
    "assertion": "Slope ( LINE: y ) equals Abs ( LINESEGMENT: t )",
    "id": 3521,
    "declarations": "y: LINE; t: LINESEGMENT",
    "facts": "Slope(y) = Abs(t)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: D ) equals LineSegmentOf ( POINT: y, UpperVertex ( CONICSECTION: d ) )",
    "id": 3522,
    "declarations": "D: ELLIPSE; y: POINT; d: CONICSECTION",
    "facts": "MinorAxis(D) = LineSegmentOf(y, UpperVertex(d))"
},
{
    "assertion": "TangentPoint ( PerpendicularBisector ( LINESEGMENT: G ), CIRCLE: Y ) equals RightFocus ( CONICSECTION: K )",
    "id": 3523,
    "declarations": "G: LINESEGMENT; Y: CIRCLE; K: CONICSECTION",
    "facts": "TangentPoint(PerpendicularBisector(G), Y) = RightFocus(K)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: t ) equals LowerFocus ( CONICSECTION: m )",
    "id": 3524,
    "declarations": "t: CONICSECTION; m: CONICSECTION",
    "facts": "UpperFocus(t) = LowerFocus(m)"
},
{
    "assertion": "RightFocus ( CONICSECTION: L ) equals MidPoint ( MajorAxis ( ELLIPSE: r ) )",
    "id": 3525,
    "declarations": "L: CONICSECTION; r: ELLIPSE",
    "facts": "RightFocus(L) = MidPoint(MajorAxis(r))"
},
{
    "assertion": "ApplyUnit ( Min ( NUMBER: 62 ), DEGREESTR: degree )",
    "id": 3526,
    "declarations": "62: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(Min(62), degree) = None"
},
{
    "assertion": "IsDiameter ( InterceptChord ( LINE: Q, CONICSECTION: F ), CIRCLE: V ) equals BOOL: True",
    "id": 3527,
    "declarations": "Q: LINE; F: CONICSECTION; V: CIRCLE; True: BOOL",
    "facts": "IsDiameter(InterceptChord(Q, F), V) = True"
},
{
    "assertion": "ApplyUnit ( Inclination ( LINE: Z ), DEGREESTR: degree )",
    "id": 3528,
    "declarations": "Z: LINE; degree: DEGREESTR",
    "facts": "ApplyUnit(Inclination(Z), degree) = None"
},
{
    "assertion": "RightPart ( HYPERBOLA: E ) equals CURVE: T",
    "id": 3529,
    "declarations": "E: HYPERBOLA; T: CURVE",
    "facts": "RightPart(E) = T"
},
{
    "assertion": "Max ( NUMBER: -58 ) equals FocalLength ( CONICSECTION: Y )",
    "id": 3530,
    "declarations": "-58: NUMBER; Y: CONICSECTION",
    "facts": "Max(-58) = FocalLength(Y)"
},
{
    "assertion": "InterReciprocal ( Quadrant ( MidPoint ( MinorAxis ( ELLIPSE: J ) ) ) ) equals Length ( LineSegmentOf ( POINT: p, RightFocus ( CONICSECTION: h ) ) )",
    "id": 3531,
    "declarations": "J: ELLIPSE; p: POINT; h: CONICSECTION",
    "facts": "InterReciprocal(Quadrant(MidPoint(MinorAxis(J)))) = Length(LineSegmentOf(p, RightFocus(h)))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: m ) equals POINT: A",
    "id": 3532,
    "declarations": "m: CONICSECTION; A: POINT",
    "facts": "UpperVertex(m) = A"
},
{
    "assertion": "lg ( NUMBER: -35 ) equals NUMBER: -3",
    "id": 3533,
    "declarations": "-35: NUMBER; -3: NUMBER",
    "facts": "lg(-35) = -3"
},
{
    "assertion": "Inclination ( LINE: r ) equals Length ( RealAxis ( ELLIPSE: A ) )",
    "id": 3534,
    "declarations": "r: LINE; A: ELLIPSE",
    "facts": "Inclination(r) = Length(RealAxis(A))"
},
{
    "assertion": "IsTangent ( LeftDirectrix ( CONICSECTION: t ), CONICSECTION: Z ) equals BOOL: False",
    "id": 3535,
    "declarations": "t: CONICSECTION; Z: CONICSECTION; False: BOOL",
    "facts": "IsTangent(LeftDirectrix(t), Z) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: V ) equals POINT: f",
    "id": 3536,
    "declarations": "V: CONICSECTION; f: POINT",
    "facts": "LeftVertex(V) = f"
},
{
    "assertion": "Abs ( LINESEGMENT: l ) equals Abs ( LINESEGMENT: x )",
    "id": 3537,
    "declarations": "l: LINESEGMENT; x: LINESEGMENT",
    "facts": "Abs(l) = Abs(x)"
},
{
    "assertion": "IsDiameter ( MajorAxis ( ELLIPSE: N ), CIRCLE: y ) equals BOOL: False",
    "id": 3538,
    "declarations": "N: ELLIPSE; y: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MajorAxis(N), y) = False"
},
{
    "assertion": "Coordinate ( POINT: z ) equals ( Perimeter ( CONICSECTION: m ), Eccentricity ( CONICSECTION: G ) )",
    "id": 3539,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LowerFocus ( CONICSECTION: G ) equals Incenter ( TRIANGLE: s )",
    "id": 3540,
    "declarations": "G: CONICSECTION; s: TRIANGLE",
    "facts": "LowerFocus(G) = Incenter(s)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: J, TRIANGLE: U ) equals BOOL: True",
    "id": 3541,
    "declarations": "J: CIRCLE; U: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(J, U) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: b ) equals LINE: q",
    "id": 3542,
    "declarations": "b: CONICSECTION; q: LINE",
    "facts": "RightDirectrix(b) = q"
},
{
    "assertion": "RightPart ( HYPERBOLA: V ) equals CURVE: i",
    "id": 3543,
    "declarations": "V: HYPERBOLA; i: CURVE",
    "facts": "RightPart(V) = i"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: g ) equals AXIS: yAxis",
    "id": 3544,
    "declarations": "g: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(g) = yAxis"
},
{
    "assertion": "CircumCircle ( TRIANGLE: g ) equals CIRCLE: p",
    "id": 3545,
    "declarations": "g: TRIANGLE; p: CIRCLE",
    "facts": "CircumCircle(g) = p"
},
{
    "assertion": "Max ( Area ( CONICSECTION: A ) ) equals Quadrant ( POINT: q )",
    "id": 3546,
    "declarations": "A: CONICSECTION; q: POINT",
    "facts": "Max(Area(A)) = Quadrant(q)"
},
{
    "assertion": "LineSegmentOf ( RightVertex ( CONICSECTION: T ), Circumcenter ( TRIANGLE: Q ) ) equals LINESEGMENT: H",
    "id": 3547,
    "declarations": "T: CONICSECTION; Q: TRIANGLE; H: LINESEGMENT",
    "facts": "LineSegmentOf(RightVertex(T), Circumcenter(Q)) = H"
},
{
    "assertion": "PerpendicularBisector ( LineSegmentOf ( RightFocus ( CONICSECTION: m ), Projection ( Center ( CONICSECTION: m ), LINE: y ) ) ) equals LINE: j",
    "id": 3548,
    "declarations": "m: CONICSECTION; m: CONICSECTION; y: LINE; j: LINE",
    "facts": "PerpendicularBisector(LineSegmentOf(RightFocus(m), Projection(Center(m), y))) = j"
},
{
    "assertion": "XCoordinate ( Incenter ( TRIANGLE: M ) ) equals NUMBER: 7",
    "id": 3549,
    "declarations": "M: TRIANGLE; 7: NUMBER",
    "facts": "XCoordinate(Incenter(M)) = 7"
},
{
    "assertion": "Vertex ( CONICSECTION: k ) equals Orthocenter ( TRIANGLE: y )",
    "id": 3550,
    "declarations": "k: CONICSECTION; y: TRIANGLE",
    "facts": "Vertex(k) = Orthocenter(y)"
},
{
    "assertion": "Length ( LINESEGMENT: a ) equals NUMBER: -11",
    "id": 3551,
    "declarations": "a: LINESEGMENT; -11: NUMBER",
    "facts": "Length(a) = -11"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: p ) equals RightDirectrix ( CONICSECTION: X )",
    "id": 3552,
    "declarations": "p: LINESEGMENT; X: CONICSECTION",
    "facts": "OverlappingLine(p) = RightDirectrix(X)"
},
{
    "assertion": "Quadrant ( LowerFocus ( CONICSECTION: m ) ) equals NUMBER: -65",
    "id": 3553,
    "declarations": "m: CONICSECTION; -65: NUMBER",
    "facts": "Quadrant(LowerFocus(m)) = -65"
},
{
    "assertion": "RightVertex ( CONICSECTION: L ) equals Center ( CONICSECTION: k )",
    "id": 3554,
    "declarations": "L: CONICSECTION; k: CONICSECTION",
    "facts": "RightVertex(L) = Center(k)"
},
{
    "assertion": "ApplyUnit ( Min ( NUMBER: 17 ), DEGREESTR: degree )",
    "id": 3555,
    "declarations": "17: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(Min(17), degree) = None"
},
{
    "assertion": "Distance ( RightFocus ( CONICSECTION: M ), POINT: t ) equals Length ( LineSegmentOf ( RightVertex ( CONICSECTION: W ), LowerFocus ( CONICSECTION: i ) ) )",
    "id": 3556,
    "declarations": "M: CONICSECTION; t: POINT; W: CONICSECTION; i: CONICSECTION",
    "facts": "Distance(RightFocus(M), t) = Length(LineSegmentOf(RightVertex(W), LowerFocus(i)))"
},
{
    "assertion": "Max ( InterReciprocal ( FocalLength ( CONICSECTION: P ) ) ) equals Quadrant ( LeftFocus ( CONICSECTION: P ) )",
    "id": 3557,
    "declarations": "P: CONICSECTION; P: CONICSECTION",
    "facts": "Max(InterReciprocal(FocalLength(P))) = Quadrant(LeftFocus(P))"
},
{
    "assertion": "Focus ( CONICSECTION: W ) equals RightFocus ( CONICSECTION: u )",
    "id": 3558,
    "declarations": "W: CONICSECTION; u: CONICSECTION",
    "facts": "Focus(W) = RightFocus(u)"
},
{
    "assertion": "RightFocus ( CONICSECTION: u ) equals RightFocus ( CONICSECTION: V )",
    "id": 3559,
    "declarations": "u: CONICSECTION; V: CONICSECTION",
    "facts": "RightFocus(u) = RightFocus(V)"
},
{
    "assertion": "XCoordinate ( POINT: G ) equals Eccentricity ( CONICSECTION: t )",
    "id": 3560,
    "declarations": "G: POINT; t: CONICSECTION",
    "facts": "XCoordinate(G) = Eccentricity(t)"
},
{
    "assertion": "InterceptChord ( OverlappingLine ( LINESEGMENT: J ), CONICSECTION: L ) equals LINESEGMENT: V",
    "id": 3561,
    "declarations": "J: LINESEGMENT; L: CONICSECTION; V: LINESEGMENT",
    "facts": "InterceptChord(OverlappingLine(J), L) = V"
},
{
    "assertion": "Perimeter ( CONICSECTION: p ) equals NUMBER: 8",
    "id": 3562,
    "declarations": "p: CONICSECTION; 8: NUMBER",
    "facts": "Perimeter(p) = 8"
},
{
    "assertion": "FocalLength ( CONICSECTION: J ) equals NUMBER: -58",
    "id": 3563,
    "declarations": "J: CONICSECTION; -58: NUMBER",
    "facts": "FocalLength(J) = -58"
},
{
    "assertion": "FootPoint ( LINE: A, LINE: q ) equals LeftVertex ( CONICSECTION: t )",
    "id": 3564,
    "declarations": "A: LINE; q: LINE; t: CONICSECTION",
    "facts": "FootPoint(A, q) = LeftVertex(t)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: z ) equals MidPoint ( LINESEGMENT: l )",
    "id": 3565,
    "declarations": "z: TRIANGLE; l: LINESEGMENT",
    "facts": "Circumcenter(z) = MidPoint(l)"
},
{
    "assertion": "sqrt ( NumIntersection ( CURVE: M, CURVE: D ) ) equals NUMBER: 35",
    "id": 3566,
    "declarations": "M: CURVE; D: CURVE; 35: NUMBER",
    "facts": "sqrt(NumIntersection(M, D)) = 35"
},
{
    "assertion": "UpperVertex ( CONICSECTION: S ) equals Orthocenter ( TRIANGLE: v )",
    "id": 3567,
    "declarations": "S: CONICSECTION; v: TRIANGLE",
    "facts": "UpperVertex(S) = Orthocenter(v)"
},
{
    "assertion": "XCoordinate ( MidPoint ( LINESEGMENT: C ) ) equals NUMBER: 85",
    "id": 3568,
    "declarations": "C: LINESEGMENT; 85: NUMBER",
    "facts": "XCoordinate(MidPoint(C)) = 85"
},
{
    "assertion": "YCoordinate ( POINT: q ) equals Area ( CONICSECTION: Z )",
    "id": 3569,
    "declarations": "q: POINT; Z: CONICSECTION",
    "facts": "YCoordinate(q) = Area(Z)"
},
{
    "assertion": "Locus ( POINT: h ) equals CURVE: C",
    "id": 3570,
    "declarations": "h: POINT; C: CURVE",
    "facts": "Locus(h) = C"
},
{
    "assertion": "MidPoint ( LINESEGMENT: c ) equals POINT: W",
    "id": 3571,
    "declarations": "c: LINESEGMENT; W: POINT",
    "facts": "MidPoint(c) = W"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: b ) equals AXIS: xAxis",
    "id": 3572,
    "declarations": "b: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(b) = xAxis"
},
{
    "assertion": "InterReciprocal ( NUMBER: 41 ) equals NUMBER: -40",
    "id": 3573,
    "declarations": "41: NUMBER; -40: NUMBER",
    "facts": "InterReciprocal(41) = -40"
},
{
    "assertion": "IsPerpendicular ( LINE: V, TangentOfPoint ( POINT: P, LeftPart ( HYPERBOLA: i ) ) ) equals BOOL: False",
    "id": 3574,
    "declarations": "V: LINE; P: POINT; i: HYPERBOLA; False: BOOL",
    "facts": "IsPerpendicular(V, TangentOfPoint(P, LeftPart(i))) = False"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Y ) equals TangentOfPoint ( POINT: C, CURVE: V )",
    "id": 3575,
    "declarations": "Y: CONICSECTION; C: POINT; V: CURVE",
    "facts": "LeftDirectrix(Y) = TangentOfPoint(C, V)"
},
{
    "assertion": "Diameter ( CIRCLE: g ) equals sqrt ( Min ( InterReciprocal ( NUMBER: 6 ) ) )",
    "id": 3576,
    "declarations": "g: CIRCLE; 6: NUMBER",
    "facts": "Diameter(g) = sqrt(Min(InterReciprocal(6)))"
},
{
    "assertion": "Diameter ( CIRCLE: T ) equals NUMBER: -50",
    "id": 3577,
    "declarations": "T: CIRCLE; -50: NUMBER",
    "facts": "Diameter(T) = -50"
},
{
    "assertion": "RightFocus ( CONICSECTION: a ) equals POINT: s",
    "id": 3578,
    "declarations": "a: CONICSECTION; s: POINT",
    "facts": "RightFocus(a) = s"
},
{
    "assertion": "Orthocenter ( TRIANGLE: b ) equals POINT: D",
    "id": 3579,
    "declarations": "b: TRIANGLE; D: POINT",
    "facts": "Orthocenter(b) = D"
},
{
    "assertion": "Projection ( POINT: v, LINE: q ) equals POINT: h",
    "id": 3580,
    "declarations": "v: POINT; q: LINE; h: POINT",
    "facts": "Projection(v, q) = h"
},
{
    "assertion": "Perimeter ( CONICSECTION: f ) equals NUMBER: -64",
    "id": 3581,
    "declarations": "f: CONICSECTION; -64: NUMBER",
    "facts": "Perimeter(f) = -64"
},
{
    "assertion": "Directrix ( CONICSECTION: z ) equals PerpendicularBisector ( LINESEGMENT: m )",
    "id": 3582,
    "declarations": "z: CONICSECTION; m: LINESEGMENT",
    "facts": "Directrix(z) = PerpendicularBisector(m)"
},
{
    "assertion": "RightFocus ( CONICSECTION: Y ) equals Orthocenter ( TRIANGLE: N )",
    "id": 3583,
    "declarations": "Y: CONICSECTION; N: TRIANGLE",
    "facts": "RightFocus(Y) = Orthocenter(N)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: q ) equals LowerFocus ( CONICSECTION: H )",
    "id": 3584,
    "declarations": "q: TRIANGLE; H: CONICSECTION",
    "facts": "Orthocenter(q) = LowerFocus(H)"
},
{
    "assertion": "lg ( Radius ( CIRCLE: Z ) ) equals Perimeter ( CONICSECTION: b )",
    "id": 3585,
    "declarations": "Z: CIRCLE; b: CONICSECTION",
    "facts": "lg(Radius(Z)) = Perimeter(b)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: o ) equals POINT: X",
    "id": 3586,
    "declarations": "o: LINESEGMENT; X: POINT",
    "facts": "Endpoint(o) = X"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: a, CircumCircle ( TriangleOf ( POINT: A, LeftVertex ( CONICSECTION: H ), Orthocenter ( TRIANGLE: H ) ) ) ) equals BOOL: True",
    "id": 3587,
    "declarations": "a: LINESEGMENT; A: POINT; H: CONICSECTION; H: TRIANGLE; True: BOOL",
    "facts": "IsDiameter(a, CircumCircle(TriangleOf(A, LeftVertex(H), Orthocenter(H)))) = True"
},
{
    "assertion": "IsIntersect ( CURVE: W, RightPart ( HYPERBOLA: G ) ) equals BOOL: False",
    "id": 3588,
    "declarations": "W: CURVE; G: HYPERBOLA; False: BOOL",
    "facts": "IsIntersect(W, RightPart(G)) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: x ) equals LINE: a",
    "id": 3589,
    "declarations": "x: CONICSECTION; a: LINE",
    "facts": "Directrix(x) = a"
},
{
    "assertion": "TangentOnPoint ( POINT: K, CURVE: S ) equals LINE: i",
    "id": 3590,
    "declarations": "K: POINT; S: CURVE; i: LINE",
    "facts": "TangentOnPoint(K, S) = i"
},
{
    "assertion": "Min ( NUMBER: 26 ) equals Eccentricity ( CONICSECTION: f )",
    "id": 3591,
    "declarations": "26: NUMBER; f: CONICSECTION",
    "facts": "Min(26) = Eccentricity(f)"
},
{
    "assertion": "And ( Length ( MinorAxis ( ELLIPSE: T ) ) equals FocalLength ( CONICSECTION: s ), HalfFocalLength ( CONICSECTION: T ) equals NUMBER: 70 ) equals BOOL: True",
    "id": 3592,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Between ( POINT: K, POINT: p, Orthocenter ( TRIANGLE: T ) ) equals BOOL: False",
    "id": 3593,
    "declarations": "K: POINT; p: POINT; T: TRIANGLE; False: BOOL",
    "facts": "Between(K, p, Orthocenter(T)) = False"
},
{
    "assertion": "Slope ( LINE: b ) equals NUMBER: 15",
    "id": 3594,
    "declarations": "b: LINE; 15: NUMBER",
    "facts": "Slope(b) = 15"
},
{
    "assertion": "Center ( CONICSECTION: o ) equals POINT: i",
    "id": 3595,
    "declarations": "o: CONICSECTION; i: POINT",
    "facts": "Center(o) = i"
},
{
    "assertion": "Eccentricity ( CONICSECTION: l ) equals Radius ( CIRCLE: m )",
    "id": 3596,
    "declarations": "l: CONICSECTION; m: CIRCLE",
    "facts": "Eccentricity(l) = Radius(m)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: T ) equals ImaginaryAxis ( ELLIPSE: w )",
    "id": 3597,
    "declarations": "T: ELLIPSE; w: ELLIPSE",
    "facts": "MinorAxis(T) = ImaginaryAxis(w)"
},
{
    "assertion": "LocusEquation ( Incenter ( TriangleOf ( Incenter ( TRIANGLE: i ), UpperVertex ( CONICSECTION: K ), POINT: y ) ) ) equals EXPRESSION: y*space=*spacex^2*space-*space5*x*space+*space6",
    "id": 3598,
    "declarations": "i: TRIANGLE; K: CONICSECTION; y: POINT; y*space=*spacex^2*space-*space5*x*space+*space6: EXPRESSION",
    "facts": "LocusEquation(Incenter(TriangleOf(Incenter(i), UpperVertex(K), y))) = y*space=*spacex^2*space-*space5*x*space+*space6"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: D ) equals LeftDirectrix ( CONICSECTION: q )",
    "id": 3599,
    "declarations": "D: LINESEGMENT; q: CONICSECTION",
    "facts": "OverlappingLine(D) = LeftDirectrix(q)"
},
{
    "assertion": "YCoordinate ( LeftFocus ( CONICSECTION: p ) ) equals NUMBER: -23",
    "id": 3600,
    "declarations": "p: CONICSECTION; -23: NUMBER",
    "facts": "YCoordinate(LeftFocus(p)) = -23"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: E, CIRCLE: H ) equals BOOL: False",
    "id": 3601,
    "declarations": "E: LINESEGMENT; H: CIRCLE; False: BOOL",
    "facts": "IsDiameter(E, H) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: a ) equals LINESEGMENT: r",
    "id": 3602,
    "declarations": "a: ELLIPSE; r: LINESEGMENT",
    "facts": "MinorAxis(a) = r"
},
{
    "assertion": "Intersection ( CURVE: V, CURVE: R ) equals POINT: x",
    "id": 3603,
    "declarations": "V: CURVE; R: CURVE; x: POINT",
    "facts": "Intersection(V, R) = x"
},
{
    "assertion": "Directrix ( CONICSECTION: q ) equals LeftDirectrix ( CONICSECTION: a )",
    "id": 3604,
    "declarations": "q: CONICSECTION; a: CONICSECTION",
    "facts": "Directrix(q) = LeftDirectrix(a)"
},
{
    "assertion": "RightPart ( HYPERBOLA: y ) equals CURVE: E",
    "id": 3605,
    "declarations": "y: HYPERBOLA; E: CURVE",
    "facts": "RightPart(y) = E"
},
{
    "assertion": "Quadrant ( POINT: X ) equals NUMBER: 7",
    "id": 3606,
    "declarations": "X: POINT; 7: NUMBER",
    "facts": "Quadrant(X) = 7"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: X, CONICSECTION: Z ) equals BOOL: False",
    "id": 3607,
    "declarations": "X: LINESEGMENT; Z: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(X, Z) = False"
},
{
    "assertion": "Eccentricity ( CONICSECTION: B ) equals NUMBER: 34",
    "id": 3608,
    "declarations": "B: CONICSECTION; 34: NUMBER",
    "facts": "Eccentricity(B) = 34"
},
{
    "assertion": "Orthocenter ( TRIANGLE: G ) equals POINT: I",
    "id": 3609,
    "declarations": "G: TRIANGLE; I: POINT",
    "facts": "Orthocenter(G) = I"
},
{
    "assertion": "Projection ( UpperVertex ( CONICSECTION: t ), LINE: u ) equals POINT: L",
    "id": 3610,
    "declarations": "t: CONICSECTION; u: LINE; L: POINT",
    "facts": "Projection(UpperVertex(t), u) = L"
},
{
    "assertion": "LowerFocus ( CONICSECTION: Q ) equals LowerFocus ( CONICSECTION: V )",
    "id": 3611,
    "declarations": "Q: CONICSECTION; V: CONICSECTION",
    "facts": "LowerFocus(Q) = LowerFocus(V)"
},
{
    "assertion": "Area ( CONICSECTION: i ) equals NUMBER: -4",
    "id": 3612,
    "declarations": "i: CONICSECTION; -4: NUMBER",
    "facts": "Area(i) = -4"
},
{
    "assertion": "LeftFocus ( CONICSECTION: T ) equals Orthocenter ( TRIANGLE: Q )",
    "id": 3613,
    "declarations": "T: CONICSECTION; Q: TRIANGLE",
    "facts": "LeftFocus(T) = Orthocenter(Q)"
},
{
    "assertion": "ApplyUnit ( Perimeter ( CONICSECTION: k ), DEGREESTR: degree )",
    "id": 3614,
    "declarations": "k: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Perimeter(k), degree) = None"
},
{
    "assertion": "Radius ( CIRCLE: M ) equals Area ( CONICSECTION: w )",
    "id": 3615,
    "declarations": "M: CIRCLE; w: CONICSECTION",
    "facts": "Radius(M) = Area(w)"
},
{
    "assertion": "LocusEquation ( POINT: d ) equals EXPRESSION: x^3*space+*spacey^3*space=*space1",
    "id": 3616,
    "declarations": "d: POINT; x^3*space+*spacey^3*space=*space1: EXPRESSION",
    "facts": "LocusEquation(d) = x^3*space+*spacey^3*space=*space1"
},
{
    "assertion": "Distance ( POINT: P, Orthocenter ( TRIANGLE: K ) ) equals sqrt ( Area ( CONICSECTION: h ) )",
    "id": 3617,
    "declarations": "P: POINT; K: TRIANGLE; h: CONICSECTION",
    "facts": "Distance(P, Orthocenter(K)) = sqrt(Area(h))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: R ) equals POINT: L",
    "id": 3618,
    "declarations": "R: CONICSECTION; L: POINT",
    "facts": "LeftFocus(R) = L"
},
{
    "assertion": "CircumCircle ( TRIANGLE: s ) equals CIRCLE: i",
    "id": 3619,
    "declarations": "s: TRIANGLE; i: CIRCLE",
    "facts": "CircumCircle(s) = i"
},
{
    "assertion": "IsParallel ( LINE: u, LeftDirectrix ( CONICSECTION: B ) ) equals BOOL: True",
    "id": 3620,
    "declarations": "u: LINE; B: CONICSECTION; True: BOOL",
    "facts": "IsParallel(u, LeftDirectrix(B)) = True"
},
{
    "assertion": "CircumCircle ( TRIANGLE: E ) equals CIRCLE: l",
    "id": 3621,
    "declarations": "E: TRIANGLE; l: CIRCLE",
    "facts": "CircumCircle(E) = l"
},
{
    "assertion": "RealAxis ( ELLIPSE: U ) equals RealAxis ( ELLIPSE: p )",
    "id": 3622,
    "declarations": "U: ELLIPSE; p: ELLIPSE",
    "facts": "RealAxis(U) = RealAxis(p)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: l ) equals Incenter ( TRIANGLE: a )",
    "id": 3623,
    "declarations": "l: LINESEGMENT; a: TRIANGLE",
    "facts": "MidPoint(l) = Incenter(a)"
},
{
    "assertion": "Vertex ( CONICSECTION: V ) equals Circumcenter ( TRIANGLE: a )",
    "id": 3624,
    "declarations": "V: CONICSECTION; a: TRIANGLE",
    "facts": "Vertex(V) = Circumcenter(a)"
},
{
    "assertion": "TangentOnPoint ( UpperVertex ( CONICSECTION: E ), CURVE: E ) equals OverlappingLine ( LINESEGMENT: d )",
    "id": 3625,
    "declarations": "E: CONICSECTION; E: CURVE; d: LINESEGMENT",
    "facts": "TangentOnPoint(UpperVertex(E), E) = OverlappingLine(d)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: G ) equals AXIS: yAxis",
    "id": 3626,
    "declarations": "G: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(G) = yAxis"
},
{
    "assertion": "LineSegmentOf ( LowerVertex ( CONICSECTION: M ), MidPoint ( MajorAxis ( ELLIPSE: p ) ) ) equals LINESEGMENT: X",
    "id": 3627,
    "declarations": "M: CONICSECTION; p: ELLIPSE; X: LINESEGMENT",
    "facts": "LineSegmentOf(LowerVertex(M), MidPoint(MajorAxis(p))) = X"
},
{
    "assertion": "IsTangent ( LINE: p, CONICSECTION: Q ) equals BOOL: True",
    "id": 3628,
    "declarations": "p: LINE; Q: CONICSECTION; True: BOOL",
    "facts": "IsTangent(p, Q) = True"
},
{
    "assertion": "Abs ( LINESEGMENT: B ) equals InterReciprocal ( Min ( NUMBER: 34 ) )",
    "id": 3629,
    "declarations": "B: LINESEGMENT; 34: NUMBER",
    "facts": "Abs(B) = InterReciprocal(Min(34))"
},
{
    "assertion": "IsInTangent ( CIRCLE: w, CIRCLE: r ) equals BOOL: True",
    "id": 3630,
    "declarations": "w: CIRCLE; r: CIRCLE; True: BOOL",
    "facts": "IsInTangent(w, r) = True"
},
{
    "assertion": "LocusEquation ( RightFocus ( CONICSECTION: B ) ) equals EXPRESSION: y*space=*space3*x*space+*space2",
    "id": 3631,
    "declarations": "B: CONICSECTION; y*space=*space3*x*space+*space2: EXPRESSION",
    "facts": "LocusEquation(RightFocus(B)) = y*space=*space3*x*space+*space2"
},
{
    "assertion": "Diameter ( CIRCLE: x ) equals NUMBER: -16",
    "id": 3632,
    "declarations": "x: CIRCLE; -16: NUMBER",
    "facts": "Diameter(x) = -16"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: w, CircumCircle ( TRIANGLE: q ) ) equals BOOL: False",
    "id": 3633,
    "declarations": "w: LINESEGMENT; q: TRIANGLE; False: BOOL",
    "facts": "IsDiameter(w, CircumCircle(q)) = False"
},
{
    "assertion": "Slope ( LINE: I ) equals NUMBER: 45",
    "id": 3634,
    "declarations": "I: LINE; 45: NUMBER",
    "facts": "Slope(I) = 45"
},
{
    "assertion": "IsTangent ( LINE: c, CONICSECTION: F ) equals BOOL: True",
    "id": 3635,
    "declarations": "c: LINE; F: CONICSECTION; True: BOOL",
    "facts": "IsTangent(c, F) = True"
},
{
    "assertion": "UpperFocus ( CONICSECTION: W ) equals RightVertex ( CONICSECTION: J )",
    "id": 3636,
    "declarations": "W: CONICSECTION; J: CONICSECTION",
    "facts": "UpperFocus(W) = RightVertex(J)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: b ) equals CIRCLE: l",
    "id": 3637,
    "declarations": "b: TRIANGLE; l: CIRCLE",
    "facts": "CircumCircle(b) = l"
},
{
    "assertion": "ApplyUnit ( FocalLength ( CONICSECTION: V ), DEGREESTR: degree )",
    "id": 3638,
    "declarations": "V: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(FocalLength(V), degree) = None"
},
{
    "assertion": "LowerFocus ( CONICSECTION: r ) equals POINT: X",
    "id": 3639,
    "declarations": "r: CONICSECTION; X: POINT",
    "facts": "LowerFocus(r) = X"
},
{
    "assertion": "LeftFocus ( CONICSECTION: h ) equals POINT: D",
    "id": 3640,
    "declarations": "h: CONICSECTION; D: POINT",
    "facts": "LeftFocus(h) = D"
},
{
    "assertion": "sqrt ( sqrt ( NUMBER: 7 ) ) equals Diameter ( CIRCLE: R )",
    "id": 3641,
    "declarations": "7: NUMBER; R: CIRCLE",
    "facts": "sqrt(sqrt(7)) = Diameter(R)"
},
{
    "assertion": "lg ( Eccentricity ( CONICSECTION: Q ) ) equals lg ( NUMBER: 71 )",
    "id": 3642,
    "declarations": "Q: CONICSECTION; 71: NUMBER",
    "facts": "lg(Eccentricity(Q)) = lg(71)"
},
{
    "assertion": "Directrix ( CONICSECTION: V ) equals LINE: I",
    "id": 3643,
    "declarations": "V: CONICSECTION; I: LINE",
    "facts": "Directrix(V) = I"
},
{
    "assertion": "FocalLength ( CONICSECTION: T ) equals NUMBER: 69",
    "id": 3644,
    "declarations": "T: CONICSECTION; 69: NUMBER",
    "facts": "FocalLength(T) = 69"
},
{
    "assertion": "Center ( CONICSECTION: z ) equals POINT: T",
    "id": 3645,
    "declarations": "z: CONICSECTION; T: POINT",
    "facts": "Center(z) = T"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: A ) equals LINE: m",
    "id": 3646,
    "declarations": "A: CONICSECTION; m: LINE",
    "facts": "LeftDirectrix(A) = m"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: R ) equals RightDirectrix ( CONICSECTION: O )",
    "id": 3647,
    "declarations": "R: LINESEGMENT; O: CONICSECTION",
    "facts": "OverlappingLine(R) = RightDirectrix(O)"
},
{
    "assertion": "Center ( CONICSECTION: o ) equals Circumcenter ( TRIANGLE: s )",
    "id": 3648,
    "declarations": "o: CONICSECTION; s: TRIANGLE",
    "facts": "Center(o) = Circumcenter(s)"
},
{
    "assertion": "IsPerpendicular ( LINE: u, LINE: A ) equals BOOL: True",
    "id": 3649,
    "declarations": "u: LINE; A: LINE; True: BOOL",
    "facts": "IsPerpendicular(u, A) = True"
},
{
    "assertion": "Perimeter ( CONICSECTION: d ) equals Eccentricity ( CONICSECTION: U )",
    "id": 3650,
    "declarations": "d: CONICSECTION; U: CONICSECTION",
    "facts": "Perimeter(d) = Eccentricity(U)"
},
{
    "assertion": "InterReciprocal ( Perimeter ( CONICSECTION: z ) ) equals Diameter ( CIRCLE: z )",
    "id": 3651,
    "declarations": "z: CONICSECTION; z: CIRCLE",
    "facts": "InterReciprocal(Perimeter(z)) = Diameter(z)"
},
{
    "assertion": "Area ( CONICSECTION: c ) equals NUMBER: 51",
    "id": 3652,
    "declarations": "c: CONICSECTION; 51: NUMBER",
    "facts": "Area(c) = 51"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: b ) equals LINE: C",
    "id": 3653,
    "declarations": "b: CONICSECTION; C: LINE",
    "facts": "RightDirectrix(b) = C"
},
{
    "assertion": "UpperFocus ( CONICSECTION: s ) equals UpperVertex ( CONICSECTION: P )",
    "id": 3654,
    "declarations": "s: CONICSECTION; P: CONICSECTION",
    "facts": "UpperFocus(s) = UpperVertex(P)"
},
{
    "assertion": "Length ( MinorAxis ( ELLIPSE: D ) ) equals NUMBER: -96",
    "id": 3655,
    "declarations": "D: ELLIPSE; -96: NUMBER",
    "facts": "Length(MinorAxis(D)) = -96"
},
{
    "assertion": "Between ( LowerVertex ( CONICSECTION: Y ), UpperVertex ( CONICSECTION: D ), LeftFocus ( CONICSECTION: R ) ) equals BOOL: True",
    "id": 3656,
    "declarations": "Y: CONICSECTION; D: CONICSECTION; R: CONICSECTION; True: BOOL",
    "facts": "Between(LowerVertex(Y), UpperVertex(D), LeftFocus(R)) = True"
},
{
    "assertion": "IsTangent ( OverlappingLine ( RealAxis ( ELLIPSE: N ) ), CONICSECTION: K ) equals BOOL: True",
    "id": 3657,
    "declarations": "N: ELLIPSE; K: CONICSECTION; True: BOOL",
    "facts": "IsTangent(OverlappingLine(RealAxis(N)), K) = True"
},
{
    "assertion": "RightFocus ( CONICSECTION: B ) equals POINT: t",
    "id": 3658,
    "declarations": "B: CONICSECTION; t: POINT",
    "facts": "RightFocus(B) = t"
},
{
    "assertion": "Center ( CONICSECTION: D ) equals MidPoint ( LINESEGMENT: H )",
    "id": 3659,
    "declarations": "D: CONICSECTION; H: LINESEGMENT",
    "facts": "Center(D) = MidPoint(H)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: H ) equals NUMBER: 100",
    "id": 3660,
    "declarations": "H: CONICSECTION; 100: NUMBER",
    "facts": "Eccentricity(H) = 100"
},
{
    "assertion": "Between ( Orthocenter ( TRIANGLE: u ), Center ( CONICSECTION: H ), RightFocus ( CONICSECTION: m ) ) equals BOOL: True",
    "id": 3661,
    "declarations": "u: TRIANGLE; H: CONICSECTION; m: CONICSECTION; True: BOOL",
    "facts": "Between(Orthocenter(u), Center(H), RightFocus(m)) = True"
},
{
    "assertion": "RealAxis ( ELLIPSE: U ) equals LINESEGMENT: C",
    "id": 3662,
    "declarations": "U: ELLIPSE; C: LINESEGMENT",
    "facts": "RealAxis(U) = C"
},
{
    "assertion": "LowerFocus ( CONICSECTION: l ) equals POINT: b",
    "id": 3663,
    "declarations": "l: CONICSECTION; b: POINT",
    "facts": "LowerFocus(l) = b"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: v ) equals LINE: y",
    "id": 3664,
    "declarations": "v: CONICSECTION; y: LINE",
    "facts": "RightDirectrix(v) = y"
},
{
    "assertion": "Slope ( LINE: a ) equals Distance ( POINT: N, POINT: h )",
    "id": 3665,
    "declarations": "a: LINE; N: POINT; h: POINT",
    "facts": "Slope(a) = Distance(N, h)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: Y ) equals LINE: K",
    "id": 3666,
    "declarations": "Y: LINESEGMENT; K: LINE",
    "facts": "PerpendicularBisector(Y) = K"
},
{
    "assertion": "Expression ( CURVE: k ) equals LocusEquation ( LowerVertex ( CONICSECTION: g ) )",
    "id": 3667,
    "declarations": "k: CURVE; g: CONICSECTION",
    "facts": "Expression(k) = LocusEquation(LowerVertex(g))"
},
{
    "assertion": "RightPart ( HYPERBOLA: s ) equals CURVE: L",
    "id": 3668,
    "declarations": "s: HYPERBOLA; L: CURVE",
    "facts": "RightPart(s) = L"
},
{
    "assertion": "IsOutTangent ( CIRCLE: Q, CIRCLE: H ) equals BOOL: False",
    "id": 3669,
    "declarations": "Q: CIRCLE; H: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(Q, H) = False"
},
{
    "assertion": "RealAxis ( ELLIPSE: D ) equals LINESEGMENT: e",
    "id": 3670,
    "declarations": "D: ELLIPSE; e: LINESEGMENT",
    "facts": "RealAxis(D) = e"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: w, CONICSECTION: h ) equals BOOL: False",
    "id": 3671,
    "declarations": "w: LINESEGMENT; h: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(w, h) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: m ) equals POINT: p",
    "id": 3672,
    "declarations": "m: CONICSECTION; p: POINT",
    "facts": "UpperFocus(m) = p"
},
{
    "assertion": "RightVertex ( CONICSECTION: P ) equals Center ( CONICSECTION: a )",
    "id": 3673,
    "declarations": "P: CONICSECTION; a: CONICSECTION",
    "facts": "RightVertex(P) = Center(a)"
},
{
    "assertion": "Incenter ( TRIANGLE: A ) equals POINT: r",
    "id": 3674,
    "declarations": "A: TRIANGLE; r: POINT",
    "facts": "Incenter(A) = r"
},
{
    "assertion": "InterReciprocal ( Radius ( CIRCLE: L ) ) equals NUMBER: 43",
    "id": 3675,
    "declarations": "L: CIRCLE; 43: NUMBER",
    "facts": "InterReciprocal(Radius(L)) = 43"
},
{
    "assertion": "Directrix ( CONICSECTION: C ) equals LINE: K",
    "id": 3676,
    "declarations": "C: CONICSECTION; K: LINE",
    "facts": "Directrix(C) = K"
},
{
    "assertion": "LowerVertex ( CONICSECTION: l ) equals FootPoint ( PerpendicularBisector ( LINESEGMENT: a ), LINE: i )",
    "id": 3677,
    "declarations": "l: CONICSECTION; a: LINESEGMENT; i: LINE",
    "facts": "LowerVertex(l) = FootPoint(PerpendicularBisector(a), i)"
},
{
    "assertion": "Expression ( CURVE: h ) equals EXPRESSION: x^2*space+*spacey*space=*space0",
    "id": 3678,
    "declarations": "h: CURVE; x^2*space+*spacey*space=*space0: EXPRESSION",
    "facts": "Expression(h) = x^2*space+*spacey*space=*space0"
},
{
    "assertion": "Intercept ( OverlappingLine ( MinorAxis ( ELLIPSE: X ) ), AXIS: xAxis ) equals Area ( CONICSECTION: G )",
    "id": 3679,
    "declarations": "X: ELLIPSE; xAxis: AXIS; G: CONICSECTION",
    "facts": "Intercept(OverlappingLine(MinorAxis(X)), xAxis) = Area(G)"
},
{
    "assertion": "Coordinate ( POINT: S ) equals ( Abs ( LINESEGMENT: M ), NUMBER: 92 )",
    "id": 3680,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "XCoordinate ( Orthocenter ( TRIANGLE: O ) ) equals XCoordinate ( POINT: k )",
    "id": 3681,
    "declarations": "O: TRIANGLE; k: POINT",
    "facts": "XCoordinate(Orthocenter(O)) = XCoordinate(k)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: M ) equals LINESEGMENT: E",
    "id": 3682,
    "declarations": "M: ELLIPSE; E: LINESEGMENT",
    "facts": "MinorAxis(M) = E"
},
{
    "assertion": "XCoordinate ( MidPoint ( LINESEGMENT: K ) ) equals Area ( CONICSECTION: b )",
    "id": 3683,
    "declarations": "K: LINESEGMENT; b: CONICSECTION",
    "facts": "XCoordinate(MidPoint(K)) = Area(b)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: D ) equals RightFocus ( CONICSECTION: P )",
    "id": 3684,
    "declarations": "D: CONICSECTION; P: CONICSECTION",
    "facts": "LowerVertex(D) = RightFocus(P)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: I ) equals LeftVertex ( CONICSECTION: p )",
    "id": 3685,
    "declarations": "I: TRIANGLE; p: CONICSECTION",
    "facts": "Circumcenter(I) = LeftVertex(p)"
},
{
    "assertion": "Quadrant ( LeftFocus ( CONICSECTION: E ) ) equals lg ( Quadrant ( RightFocus ( CONICSECTION: q ) ) )",
    "id": 3686,
    "declarations": "E: CONICSECTION; q: CONICSECTION",
    "facts": "Quadrant(LeftFocus(E)) = lg(Quadrant(RightFocus(q)))"
},
{
    "assertion": "TriangleOf ( POINT: Z, POINT: l, Circumcenter ( TRIANGLE: v ) ) equals TRIANGLE: K",
    "id": 3687,
    "declarations": "Z: POINT; l: POINT; v: TRIANGLE; K: TRIANGLE",
    "facts": "TriangleOf(Z, l, Circumcenter(v)) = K"
},
{
    "assertion": "FootPoint ( LINE: P, LINE: r ) equals LeftVertex ( CONICSECTION: q )",
    "id": 3688,
    "declarations": "P: LINE; r: LINE; q: CONICSECTION",
    "facts": "FootPoint(P, r) = LeftVertex(q)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: O ) equals CIRCLE: P",
    "id": 3689,
    "declarations": "O: TRIANGLE; P: CIRCLE",
    "facts": "CircumCircle(O) = P"
},
{
    "assertion": "UpperFocus ( CONICSECTION: z ) equals Center ( CONICSECTION: p )",
    "id": 3690,
    "declarations": "z: CONICSECTION; p: CONICSECTION",
    "facts": "UpperFocus(z) = Center(p)"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: J ) ) equals NUMBER: 30",
    "id": 3691,
    "declarations": "J: CONICSECTION; 30: NUMBER",
    "facts": "Inclination(LeftDirectrix(J)) = 30"
},
{
    "assertion": "PointOnCurve ( POINT: C, CURVE: l ) equals BOOL: True",
    "id": 3692,
    "declarations": "C: POINT; l: CURVE; True: BOOL",
    "facts": "PointOnCurve(C, l) = True"
},
{
    "assertion": "LowerVertex ( CONICSECTION: P ) equals MidPoint ( LINESEGMENT: H )",
    "id": 3693,
    "declarations": "P: CONICSECTION; H: LINESEGMENT",
    "facts": "LowerVertex(P) = MidPoint(H)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: J ) equals Min ( NUMBER: -23 )",
    "id": 3694,
    "declarations": "J: CONICSECTION; -23: NUMBER",
    "facts": "HalfFocalLength(J) = Min(-23)"
},
{
    "assertion": "TangentOfPoint ( POINT: O, CURVE: M ) equals LINE: T",
    "id": 3695,
    "declarations": "O: POINT; M: CURVE; T: LINE",
    "facts": "TangentOfPoint(O, M) = T"
},
{
    "assertion": "Focus ( CONICSECTION: W ) equals POINT: N",
    "id": 3696,
    "declarations": "W: CONICSECTION; N: POINT",
    "facts": "Focus(W) = N"
},
{
    "assertion": "Distance ( POINT: T, POINT: T ) equals NUMBER: -64",
    "id": 3697,
    "declarations": "T: POINT; T: POINT; -64: NUMBER",
    "facts": "Distance(T, T) = -64"
},
{
    "assertion": "TangentOfPoint ( POINT: k, CURVE: K ) equals OverlappingLine ( ImaginaryAxis ( ELLIPSE: s ) )",
    "id": 3698,
    "declarations": "k: POINT; K: CURVE; s: ELLIPSE",
    "facts": "TangentOfPoint(k, K) = OverlappingLine(ImaginaryAxis(s))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: y ) equals POINT: r",
    "id": 3699,
    "declarations": "y: TRIANGLE; r: POINT",
    "facts": "Circumcenter(y) = r"
},
{
    "assertion": "LeftFocus ( CONICSECTION: s ) equals Circumcenter ( TRIANGLE: N )",
    "id": 3700,
    "declarations": "s: CONICSECTION; N: TRIANGLE",
    "facts": "LeftFocus(s) = Circumcenter(N)"
},
{
    "assertion": "Negation ( Between ( POINT: D, POINT: V, RightVertex ( CONICSECTION: E ) ) equals BOOL: False ) equals BOOL: False",
    "id": 3701,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Negation ( Asymptote ( HYPERBOLA: f ) equals LINE: w ) equals BOOL: False",
    "id": 3702,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: Y ) equals NUMBER: -32",
    "id": 3703,
    "declarations": "Y: CONICSECTION; -32: NUMBER",
    "facts": "HalfFocalLength(Y) = -32"
},
{
    "assertion": "Orthocenter ( TRIANGLE: n ) equals POINT: A",
    "id": 3704,
    "declarations": "n: TRIANGLE; A: POINT",
    "facts": "Orthocenter(n) = A"
},
{
    "assertion": "VectorOf ( LowerVertex ( CONICSECTION: e ), UpperVertex ( CONICSECTION: K ) ) equals VECTOR: i",
    "id": 3705,
    "declarations": "e: CONICSECTION; K: CONICSECTION; i: VECTOR",
    "facts": "VectorOf(LowerVertex(e), UpperVertex(K)) = i"
},
{
    "assertion": "Locus ( POINT: k ) equals CURVE: I",
    "id": 3706,
    "declarations": "k: POINT; I: CURVE",
    "facts": "Locus(k) = I"
},
{
    "assertion": "Radius ( CIRCLE: C ) equals NUMBER: -56",
    "id": 3707,
    "declarations": "C: CIRCLE; -56: NUMBER",
    "facts": "Radius(C) = -56"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: y ) equals LINE: u",
    "id": 3708,
    "declarations": "y: CONICSECTION; u: LINE",
    "facts": "LeftDirectrix(y) = u"
},
{
    "assertion": "Slope ( LINE: y ) equals Min ( Min ( NUMBER: -35 ) )",
    "id": 3709,
    "declarations": "y: LINE; -35: NUMBER",
    "facts": "Slope(y) = Min(Min(-35))"
},
{
    "assertion": "ApplyUnit ( Quadrant ( MidPoint ( LINESEGMENT: S ) ), DEGREESTR: degree )",
    "id": 3710,
    "declarations": "S: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(Quadrant(MidPoint(S)), degree) = None"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: D, TRIANGLE: J ) equals BOOL: False",
    "id": 3711,
    "declarations": "D: CIRCLE; J: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(D, J) = False"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: x ) equals NUMBER: -17",
    "id": 3712,
    "declarations": "x: CONICSECTION; -17: NUMBER",
    "facts": "HalfFocalLength(x) = -17"
},
{
    "assertion": "lg ( HalfFocalLength ( CONICSECTION: q ) ) equals Radius ( CIRCLE: J )",
    "id": 3713,
    "declarations": "q: CONICSECTION; J: CIRCLE",
    "facts": "lg(HalfFocalLength(q)) = Radius(J)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Z ) equals LINE: e",
    "id": 3714,
    "declarations": "Z: CONICSECTION; e: LINE",
    "facts": "LeftDirectrix(Z) = e"
},
{
    "assertion": "LeftVertex ( CONICSECTION: f ) equals Center ( CONICSECTION: q )",
    "id": 3715,
    "declarations": "f: CONICSECTION; q: CONICSECTION",
    "facts": "LeftVertex(f) = Center(q)"
},
{
    "assertion": "Incenter ( TRIANGLE: L ) equals POINT: S",
    "id": 3716,
    "declarations": "L: TRIANGLE; S: POINT",
    "facts": "Incenter(L) = S"
},
{
    "assertion": "Slope ( LINE: m ) equals Area ( CONICSECTION: a )",
    "id": 3717,
    "declarations": "m: LINE; a: CONICSECTION",
    "facts": "Slope(m) = Area(a)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: H, TRIANGLE: F ) equals BOOL: True",
    "id": 3718,
    "declarations": "H: CIRCLE; F: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(H, F) = True"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: G, TRIANGLE: N ) equals BOOL: False",
    "id": 3719,
    "declarations": "G: CIRCLE; N: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(G, N) = False"
},
{
    "assertion": "sqrt ( Area ( CONICSECTION: K ) ) equals HalfFocalLength ( CONICSECTION: X )",
    "id": 3720,
    "declarations": "K: CONICSECTION; X: CONICSECTION",
    "facts": "sqrt(Area(K)) = HalfFocalLength(X)"
},
{
    "assertion": "LineSegmentOf ( POINT: C, Center ( CONICSECTION: O ) ) equals LINESEGMENT: o",
    "id": 3721,
    "declarations": "C: POINT; O: CONICSECTION; o: LINESEGMENT",
    "facts": "LineSegmentOf(C, Center(O)) = o"
},
{
    "assertion": "Intersection ( CURVE: U, CURVE: O ) equals POINT: M",
    "id": 3722,
    "declarations": "U: CURVE; O: CURVE; M: POINT",
    "facts": "Intersection(U, O) = M"
},
{
    "assertion": "LowerFocus ( CONICSECTION: J ) equals MidPoint ( LINESEGMENT: a )",
    "id": 3723,
    "declarations": "J: CONICSECTION; a: LINESEGMENT",
    "facts": "LowerFocus(J) = MidPoint(a)"
},
{
    "assertion": "Slope ( LINE: s ) equals NUMBER: -74",
    "id": 3724,
    "declarations": "s: LINE; -74: NUMBER",
    "facts": "Slope(s) = -74"
},
{
    "assertion": "Locus ( LowerVertex ( CONICSECTION: T ) ) equals RightPart ( HYPERBOLA: I )",
    "id": 3725,
    "declarations": "T: CONICSECTION; I: HYPERBOLA",
    "facts": "Locus(LowerVertex(T)) = RightPart(I)"
},
{
    "assertion": "XCoordinate ( POINT: V ) equals Radius ( CircumCircle ( TRIANGLE: L ) )",
    "id": 3726,
    "declarations": "V: POINT; L: TRIANGLE",
    "facts": "XCoordinate(V) = Radius(CircumCircle(L))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: R ) equals POINT: d",
    "id": 3727,
    "declarations": "R: CONICSECTION; d: POINT",
    "facts": "LowerVertex(R) = d"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: T ) equals AXIS: xAxis",
    "id": 3728,
    "declarations": "T: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(T) = xAxis"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: E ) equals LINE: d",
    "id": 3729,
    "declarations": "E: LINESEGMENT; d: LINE",
    "facts": "OverlappingLine(E) = d"
},
{
    "assertion": "LineSegmentOf ( POINT: e, LowerVertex ( CONICSECTION: e ) ) equals LINESEGMENT: W",
    "id": 3730,
    "declarations": "e: POINT; e: CONICSECTION; W: LINESEGMENT",
    "facts": "LineSegmentOf(e, LowerVertex(e)) = W"
},
{
    "assertion": "TangentOnPoint ( UpperVertex ( CONICSECTION: z ), CURVE: u ) equals LINE: q",
    "id": 3731,
    "declarations": "z: CONICSECTION; u: CURVE; q: LINE",
    "facts": "TangentOnPoint(UpperVertex(z), u) = q"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: w ) equals Slope ( LINE: e )",
    "id": 3732,
    "declarations": "w: CONICSECTION; e: LINE",
    "facts": "HalfFocalLength(w) = Slope(e)"
},
{
    "assertion": "RealAxis ( ELLIPSE: r ) equals InterceptChord ( LINE: P, CONICSECTION: O )",
    "id": 3733,
    "declarations": "r: ELLIPSE; P: LINE; O: CONICSECTION",
    "facts": "RealAxis(r) = InterceptChord(P, O)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: z ) equals OverlappingLine ( LINESEGMENT: V )",
    "id": 3734,
    "declarations": "z: LINESEGMENT; V: LINESEGMENT",
    "facts": "OverlappingLine(z) = OverlappingLine(V)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: s ) equals NUMBER: 51",
    "id": 3735,
    "declarations": "s: CONICSECTION; 51: NUMBER",
    "facts": "Eccentricity(s) = 51"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: S, CIRCLE: A ) equals BOOL: True",
    "id": 3736,
    "declarations": "S: LINESEGMENT; A: CIRCLE; True: BOOL",
    "facts": "IsDiameter(S, A) = True"
},
{
    "assertion": "ApplyUnit ( Perimeter ( CONICSECTION: i ), DEGREESTR: degree )",
    "id": 3737,
    "declarations": "i: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Perimeter(i), degree) = None"
},
{
    "assertion": "Length ( LINESEGMENT: E ) equals NUMBER: 72",
    "id": 3738,
    "declarations": "E: LINESEGMENT; 72: NUMBER",
    "facts": "Length(E) = 72"
},
{
    "assertion": "Locus ( POINT: G ) equals Locus ( LeftFocus ( CONICSECTION: W ) )",
    "id": 3739,
    "declarations": "G: POINT; W: CONICSECTION",
    "facts": "Locus(G) = Locus(LeftFocus(W))"
},
{
    "assertion": "lg ( NUMBER: -22 ) equals Inclination ( LeftDirectrix ( CONICSECTION: U ) )",
    "id": 3740,
    "declarations": "-22: NUMBER; U: CONICSECTION",
    "facts": "lg(-22) = Inclination(LeftDirectrix(U))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: K ) equals POINT: K",
    "id": 3741,
    "declarations": "K: CONICSECTION; K: POINT",
    "facts": "LowerVertex(K) = K"
},
{
    "assertion": "Abs ( MajorAxis ( ELLIPSE: m ) ) equals NUMBER: -83",
    "id": 3742,
    "declarations": "m: ELLIPSE; -83: NUMBER",
    "facts": "Abs(MajorAxis(m)) = -83"
},
{
    "assertion": "Circumcenter ( TRIANGLE: L ) equals POINT: A",
    "id": 3743,
    "declarations": "L: TRIANGLE; A: POINT",
    "facts": "Circumcenter(L) = A"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: E ) equals MinorAxis ( ELLIPSE: G )",
    "id": 3744,
    "declarations": "E: ELLIPSE; G: ELLIPSE",
    "facts": "ImaginaryAxis(E) = MinorAxis(G)"
},
{
    "assertion": "sqrt ( NUMBER: -49 ) equals Perimeter ( CONICSECTION: U )",
    "id": 3745,
    "declarations": "-49: NUMBER; U: CONICSECTION",
    "facts": "sqrt(-49) = Perimeter(U)"
},
{
    "assertion": "YCoordinate ( POINT: k ) equals Min ( Inclination ( LINE: u ) )",
    "id": 3746,
    "declarations": "k: POINT; u: LINE",
    "facts": "YCoordinate(k) = Min(Inclination(u))"
},
{
    "assertion": "InterReciprocal ( Perimeter ( CONICSECTION: p ) ) equals XCoordinate ( Incenter ( TRIANGLE: R ) )",
    "id": 3747,
    "declarations": "p: CONICSECTION; R: TRIANGLE",
    "facts": "InterReciprocal(Perimeter(p)) = XCoordinate(Incenter(R))"
},
{
    "assertion": "TangentOnPoint ( Orthocenter ( TRIANGLE: w ), CURVE: l ) equals LINE: O",
    "id": 3748,
    "declarations": "w: TRIANGLE; l: CURVE; O: LINE",
    "facts": "TangentOnPoint(Orthocenter(w), l) = O"
},
{
    "assertion": "Length ( LINESEGMENT: g ) equals NUMBER: -86",
    "id": 3749,
    "declarations": "g: LINESEGMENT; -86: NUMBER",
    "facts": "Length(g) = -86"
},
{
    "assertion": "Negation ( LineSegmentOf ( POINT: L, LeftVertex ( CONICSECTION: Q ) ) equals LINESEGMENT: e ) equals BOOL: False",
    "id": 3750,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Perimeter ( CONICSECTION: b ) equals NUMBER: 38",
    "id": 3751,
    "declarations": "b: CONICSECTION; 38: NUMBER",
    "facts": "Perimeter(b) = 38"
},
{
    "assertion": "FocalLength ( CONICSECTION: Q ) equals NUMBER: 57",
    "id": 3752,
    "declarations": "Q: CONICSECTION; 57: NUMBER",
    "facts": "FocalLength(Q) = 57"
},
{
    "assertion": "MajorAxis ( ELLIPSE: f ) equals MajorAxis ( ELLIPSE: Q )",
    "id": 3753,
    "declarations": "f: ELLIPSE; Q: ELLIPSE",
    "facts": "MajorAxis(f) = MajorAxis(Q)"
},
{
    "assertion": "DotProduct ( VECTOR: D, VECTOR: Q ) equals Eccentricity ( CONICSECTION: s )",
    "id": 3754,
    "declarations": "D: VECTOR; Q: VECTOR; s: CONICSECTION",
    "facts": "DotProduct(D, Q) = Eccentricity(s)"
},
{
    "assertion": "Inclination ( TangentOnPoint ( LowerVertex ( CONICSECTION: c ), RightPart ( HYPERBOLA: P ) ) ) equals Inclination ( LINE: T )",
    "id": 3755,
    "declarations": "c: CONICSECTION; P: HYPERBOLA; T: LINE",
    "facts": "Inclination(TangentOnPoint(LowerVertex(c), RightPart(P))) = Inclination(T)"
},
{
    "assertion": "IsPerpendicular ( LeftDirectrix ( CONICSECTION: f ), TangentOfPoint ( LowerVertex ( CONICSECTION: u ), CURVE: Y ) ) equals BOOL: False",
    "id": 3756,
    "declarations": "f: CONICSECTION; u: CONICSECTION; Y: CURVE; False: BOOL",
    "facts": "IsPerpendicular(LeftDirectrix(f), TangentOfPoint(LowerVertex(u), Y)) = False"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: J, TRIANGLE: E ) equals BOOL: False",
    "id": 3757,
    "declarations": "J: CIRCLE; E: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(J, E) = False"
},
{
    "assertion": "MidPoint ( LINESEGMENT: G ) equals POINT: z",
    "id": 3758,
    "declarations": "G: LINESEGMENT; z: POINT",
    "facts": "MidPoint(G) = z"
},
{
    "assertion": "TangentOnPoint ( UpperVertex ( CONICSECTION: j ), CURVE: h ) equals LINE: H",
    "id": 3759,
    "declarations": "j: CONICSECTION; h: CURVE; H: LINE",
    "facts": "TangentOnPoint(UpperVertex(j), h) = H"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: D ) equals LINE: o",
    "id": 3760,
    "declarations": "D: LINESEGMENT; o: LINE",
    "facts": "OverlappingLine(D) = o"
},
{
    "assertion": "Diameter ( CIRCLE: q ) equals Perimeter ( CONICSECTION: u )",
    "id": 3761,
    "declarations": "q: CIRCLE; u: CONICSECTION",
    "facts": "Diameter(q) = Perimeter(u)"
},
{
    "assertion": "RightPart ( HYPERBOLA: v ) equals CURVE: M",
    "id": 3762,
    "declarations": "v: HYPERBOLA; M: CURVE",
    "facts": "RightPart(v) = M"
},
{
    "assertion": "Intersection ( CURVE: o, Locus ( MidPoint ( LINESEGMENT: e ) ) ) equals RightVertex ( CONICSECTION: h )",
    "id": 3763,
    "declarations": "o: CURVE; e: LINESEGMENT; h: CONICSECTION",
    "facts": "Intersection(o, Locus(MidPoint(e))) = RightVertex(h)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: O ) equals NUMBER: 3",
    "id": 3764,
    "declarations": "O: CONICSECTION; 3: NUMBER",
    "facts": "HalfFocalLength(O) = 3"
},
{
    "assertion": "Radius ( CIRCLE: b ) equals Slope ( LINE: c )",
    "id": 3765,
    "declarations": "b: CIRCLE; c: LINE",
    "facts": "Radius(b) = Slope(c)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: v ) equals LINE: z",
    "id": 3766,
    "declarations": "v: LINESEGMENT; z: LINE",
    "facts": "OverlappingLine(v) = z"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: S ) ) equals NUMBER: -15",
    "id": 3767,
    "declarations": "S: ELLIPSE; -15: NUMBER",
    "facts": "Abs(RealAxis(S)) = -15"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: Y ) equals LINE: Q",
    "id": 3768,
    "declarations": "Y: LINESEGMENT; Q: LINE",
    "facts": "PerpendicularBisector(Y) = Q"
},
{
    "assertion": "UpperFocus ( CONICSECTION: B ) equals POINT: c",
    "id": 3769,
    "declarations": "B: CONICSECTION; c: POINT",
    "facts": "UpperFocus(B) = c"
},
{
    "assertion": "XCoordinate ( POINT: I ) equals NUMBER: 49",
    "id": 3770,
    "declarations": "I: POINT; 49: NUMBER",
    "facts": "XCoordinate(I) = 49"
},
{
    "assertion": "Asymptote ( HYPERBOLA: q ) equals LeftDirectrix ( CONICSECTION: V )",
    "id": 3771,
    "declarations": "q: HYPERBOLA; V: CONICSECTION",
    "facts": "Asymptote(q) = LeftDirectrix(V)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: S ) equals LINE: K",
    "id": 3772,
    "declarations": "S: CONICSECTION; K: LINE",
    "facts": "RightDirectrix(S) = K"
},
{
    "assertion": "Circumcenter ( TRIANGLE: B ) equals POINT: f",
    "id": 3773,
    "declarations": "B: TRIANGLE; f: POINT",
    "facts": "Circumcenter(B) = f"
},
{
    "assertion": "LocusEquation ( POINT: s ) equals LocusEquation ( LeftFocus ( CONICSECTION: k ) )",
    "id": 3774,
    "declarations": "s: POINT; k: CONICSECTION",
    "facts": "LocusEquation(s) = LocusEquation(LeftFocus(k))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: e ) equals POINT: m",
    "id": 3775,
    "declarations": "e: CONICSECTION; m: POINT",
    "facts": "UpperVertex(e) = m"
},
{
    "assertion": "TriangleOf ( UpperFocus ( CONICSECTION: C ), Incenter ( TRIANGLE: G ), MidPoint ( LINESEGMENT: h ) ) equals TRIANGLE: F",
    "id": 3776,
    "declarations": "C: CONICSECTION; G: TRIANGLE; h: LINESEGMENT; F: TRIANGLE",
    "facts": "TriangleOf(UpperFocus(C), Incenter(G), MidPoint(h)) = F"
},
{
    "assertion": "LeftFocus ( CONICSECTION: b ) equals UpperFocus ( CONICSECTION: C )",
    "id": 3777,
    "declarations": "b: CONICSECTION; C: CONICSECTION",
    "facts": "LeftFocus(b) = UpperFocus(C)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: U, CONICSECTION: c ) equals BOOL: False",
    "id": 3778,
    "declarations": "U: LINESEGMENT; c: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(U, c) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: V ) equals RightFocus ( CONICSECTION: C )",
    "id": 3779,
    "declarations": "V: CONICSECTION; C: CONICSECTION",
    "facts": "RightVertex(V) = RightFocus(C)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: T ) equals LeftFocus ( CONICSECTION: q )",
    "id": 3780,
    "declarations": "T: CONICSECTION; q: CONICSECTION",
    "facts": "UpperVertex(T) = LeftFocus(q)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: f, CIRCLE: R ) equals BOOL: False",
    "id": 3781,
    "declarations": "f: CIRCLE; R: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(f, R) = False"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: x, TRIANGLE: N ) equals BOOL: False",
    "id": 3782,
    "declarations": "x: CIRCLE; N: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(x, N) = False"
},
{
    "assertion": "InterReciprocal ( Radius ( CIRCLE: n ) ) equals Min ( lg ( NUMBER: -32 ) )",
    "id": 3783,
    "declarations": "n: CIRCLE; -32: NUMBER",
    "facts": "InterReciprocal(Radius(n)) = Min(lg(-32))"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: Y, TRIANGLE: S ) equals BOOL: False",
    "id": 3784,
    "declarations": "Y: CIRCLE; S: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(Y, S) = False"
},
{
    "assertion": "TangentOfPoint ( RightFocus ( CONICSECTION: H ), CURVE: L ) equals TangentOnPoint ( RightVertex ( CONICSECTION: M ), CURVE: m )",
    "id": 3785,
    "declarations": "H: CONICSECTION; L: CURVE; M: CONICSECTION; m: CURVE",
    "facts": "TangentOfPoint(RightFocus(H), L) = TangentOnPoint(RightVertex(M), m)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: p ) equals Abs ( LINESEGMENT: l )",
    "id": 3786,
    "declarations": "p: CONICSECTION; l: LINESEGMENT",
    "facts": "Eccentricity(p) = Abs(l)"
},
{
    "assertion": "Coordinate ( RightVertex ( CONICSECTION: Y ) ) equals ( DotProduct ( VECTOR: N, VECTOR: W ), Radius ( CIRCLE: A ) )",
    "id": 3787,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LowerVertex ( CONICSECTION: q ) equals RightFocus ( CONICSECTION: A )",
    "id": 3788,
    "declarations": "q: CONICSECTION; A: CONICSECTION",
    "facts": "LowerVertex(q) = RightFocus(A)"
},
{
    "assertion": "TangentPoint ( LINE: b, CIRCLE: t ) equals Circumcenter ( TRIANGLE: q )",
    "id": 3789,
    "declarations": "b: LINE; t: CIRCLE; q: TRIANGLE",
    "facts": "TangentPoint(b, t) = Circumcenter(q)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: B ) equals RightVertex ( CONICSECTION: x )",
    "id": 3790,
    "declarations": "B: CONICSECTION; x: CONICSECTION",
    "facts": "LowerVertex(B) = RightVertex(x)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: y ) equals LINE: Q",
    "id": 3791,
    "declarations": "y: HYPERBOLA; Q: LINE",
    "facts": "Asymptote(y) = Q"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: j ) equals Inclination ( LINE: c )",
    "id": 3792,
    "declarations": "j: CONICSECTION; c: LINE",
    "facts": "HalfFocalLength(j) = Inclination(c)"
},
{
    "assertion": "Diameter ( CIRCLE: A ) equals NUMBER: -8",
    "id": 3793,
    "declarations": "A: CIRCLE; -8: NUMBER",
    "facts": "Diameter(A) = -8"
},
{
    "assertion": "MajorAxis ( ELLIPSE: W ) equals LINESEGMENT: B",
    "id": 3794,
    "declarations": "W: ELLIPSE; B: LINESEGMENT",
    "facts": "MajorAxis(W) = B"
},
{
    "assertion": "XCoordinate ( POINT: K ) equals Slope ( LINE: U )",
    "id": 3795,
    "declarations": "K: POINT; U: LINE",
    "facts": "XCoordinate(K) = Slope(U)"
},
{
    "assertion": "RightFocus ( CONICSECTION: w ) equals LowerFocus ( CONICSECTION: X )",
    "id": 3796,
    "declarations": "w: CONICSECTION; X: CONICSECTION",
    "facts": "RightFocus(w) = LowerFocus(X)"
},
{
    "assertion": "RightFocus ( CONICSECTION: F ) equals POINT: u",
    "id": 3797,
    "declarations": "F: CONICSECTION; u: POINT",
    "facts": "RightFocus(F) = u"
},
{
    "assertion": "LowerVertex ( CONICSECTION: W ) equals Incenter ( TRIANGLE: S )",
    "id": 3798,
    "declarations": "W: CONICSECTION; S: TRIANGLE",
    "facts": "LowerVertex(W) = Incenter(S)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: G, CONICSECTION: A ) equals BOOL: False",
    "id": 3799,
    "declarations": "G: LINESEGMENT; A: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(G, A) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: l ) equals Orthocenter ( TRIANGLE: m )",
    "id": 3800,
    "declarations": "l: CONICSECTION; m: TRIANGLE",
    "facts": "LowerVertex(l) = Orthocenter(m)"
},
{
    "assertion": "Projection ( FootPoint ( TangentOfPoint ( LowerVertex ( CONICSECTION: i ), CURVE: e ), LINE: t ), PerpendicularBisector ( MajorAxis ( ELLIPSE: N ) ) ) equals UpperVertex ( CONICSECTION: q )",
    "id": 3801,
    "declarations": "i: CONICSECTION; e: CURVE; t: LINE; N: ELLIPSE; q: CONICSECTION",
    "facts": "Projection(FootPoint(TangentOfPoint(LowerVertex(i), e), t), PerpendicularBisector(MajorAxis(N))) = UpperVertex(q)"
},
{
    "assertion": "LineSegmentOf ( POINT: O, POINT: m ) equals LINESEGMENT: G",
    "id": 3802,
    "declarations": "O: POINT; m: POINT; G: LINESEGMENT",
    "facts": "LineSegmentOf(O, m) = G"
},
{
    "assertion": "DotProduct ( VECTOR: b, VECTOR: M ) equals Inclination ( RightDirectrix ( CONICSECTION: S ) )",
    "id": 3803,
    "declarations": "b: VECTOR; M: VECTOR; S: CONICSECTION",
    "facts": "DotProduct(b, M) = Inclination(RightDirectrix(S))"
},
{
    "assertion": "IsTangent ( PerpendicularBisector ( LineSegmentOf ( LowerFocus ( CONICSECTION: X ), Circumcenter ( TRIANGLE: r ) ) ), CONICSECTION: X ) equals BOOL: False",
    "id": 3804,
    "declarations": "X: CONICSECTION; r: TRIANGLE; X: CONICSECTION; False: BOOL",
    "facts": "IsTangent(PerpendicularBisector(LineSegmentOf(LowerFocus(X), Circumcenter(r))), X) = False"
},
{
    "assertion": "Negation ( TriangleOf ( LeftVertex ( CONICSECTION: C ), POINT: i, MidPoint ( LINESEGMENT: Q ) ) equals TRIANGLE: a ) equals BOOL: True",
    "id": 3805,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Min ( NUMBER: -91 ) equals YCoordinate ( POINT: H )",
    "id": 3806,
    "declarations": "-91: NUMBER; H: POINT",
    "facts": "Min(-91) = YCoordinate(H)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: U ) equals LINE: r",
    "id": 3807,
    "declarations": "U: LINESEGMENT; r: LINE",
    "facts": "PerpendicularBisector(U) = r"
},
{
    "assertion": "Inclination ( RightDirectrix ( CONICSECTION: N ) ) equals NUMBER: -98",
    "id": 3808,
    "declarations": "N: CONICSECTION; -98: NUMBER",
    "facts": "Inclination(RightDirectrix(N)) = -98"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: i ) equals LINE: t",
    "id": 3809,
    "declarations": "i: CONICSECTION; t: LINE",
    "facts": "LeftDirectrix(i) = t"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: R, CONICSECTION: d ) equals BOOL: True",
    "id": 3810,
    "declarations": "R: LINESEGMENT; d: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(R, d) = True"
},
{
    "assertion": "UpperVertex ( CONICSECTION: q ) equals POINT: K",
    "id": 3811,
    "declarations": "q: CONICSECTION; K: POINT",
    "facts": "UpperVertex(q) = K"
},
{
    "assertion": "RightFocus ( CONICSECTION: t ) equals POINT: U",
    "id": 3812,
    "declarations": "t: CONICSECTION; U: POINT",
    "facts": "RightFocus(t) = U"
},
{
    "assertion": "sqrt ( NUMBER: 26 ) equals lg ( YCoordinate ( LowerFocus ( CONICSECTION: u ) ) )",
    "id": 3813,
    "declarations": "26: NUMBER; u: CONICSECTION",
    "facts": "sqrt(26) = lg(YCoordinate(LowerFocus(u)))"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: l ) equals PerpendicularBisector ( MajorAxis ( ELLIPSE: M ) )",
    "id": 3814,
    "declarations": "l: CONICSECTION; M: ELLIPSE",
    "facts": "LeftDirectrix(l) = PerpendicularBisector(MajorAxis(M))"
},
{
    "assertion": "IsIntersect ( CURVE: k, CURVE: V ) equals BOOL: True",
    "id": 3815,
    "declarations": "k: CURVE; V: CURVE; True: BOOL",
    "facts": "IsIntersect(k, V) = True"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: P ) ) equals Inclination ( LINE: l )",
    "id": 3816,
    "declarations": "P: CONICSECTION; l: LINE",
    "facts": "Inclination(LeftDirectrix(P)) = Inclination(l)"
},
{
    "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: S ) ) equals FocalLength ( CONICSECTION: H )",
    "id": 3817,
    "declarations": "S: CONICSECTION; H: CONICSECTION",
    "facts": "YCoordinate(UpperVertex(S)) = FocalLength(H)"
},
{
    "assertion": "IsPerpendicular ( PerpendicularBisector ( MajorAxis ( ELLIPSE: B ) ), LINE: p ) equals BOOL: False",
    "id": 3818,
    "declarations": "B: ELLIPSE; p: LINE; False: BOOL",
    "facts": "IsPerpendicular(PerpendicularBisector(MajorAxis(B)), p) = False"
},
{
    "assertion": "Expression ( CURVE: N ) equals EXPRESSION: x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12",
    "id": 3819,
    "declarations": "N: CURVE; x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12: EXPRESSION",
    "facts": "Expression(N) = x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12"
},
{
    "assertion": "UpperFocus ( CONICSECTION: M ) equals Orthocenter ( TRIANGLE: s )",
    "id": 3820,
    "declarations": "M: CONICSECTION; s: TRIANGLE",
    "facts": "UpperFocus(M) = Orthocenter(s)"
},
{
    "assertion": "FocalLength ( CONICSECTION: Q ) equals NUMBER: 33",
    "id": 3821,
    "declarations": "Q: CONICSECTION; 33: NUMBER",
    "facts": "FocalLength(Q) = 33"
},
{
    "assertion": "NumIntersection ( CURVE: H, CURVE: h ) equals DotProduct ( VECTOR: D, VECTOR: U )",
    "id": 3822,
    "declarations": "H: CURVE; h: CURVE; D: VECTOR; U: VECTOR",
    "facts": "NumIntersection(H, h) = DotProduct(D, U)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: n ) equals LINESEGMENT: M",
    "id": 3823,
    "declarations": "n: ELLIPSE; M: LINESEGMENT",
    "facts": "ImaginaryAxis(n) = M"
},
{
    "assertion": "Intercept ( LINE: c, AXIS: xAxis ) equals NUMBER: 18",
    "id": 3824,
    "declarations": "c: LINE; xAxis: AXIS; 18: NUMBER",
    "facts": "Intercept(c, xAxis) = 18"
},
{
    "assertion": "Slope ( LINE: K ) equals NUMBER: 85",
    "id": 3825,
    "declarations": "K: LINE; 85: NUMBER",
    "facts": "Slope(K) = 85"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: E ) equals NUMBER: -46",
    "id": 3826,
    "declarations": "E: CONICSECTION; -46: NUMBER",
    "facts": "HalfFocalLength(E) = -46"
},
{
    "assertion": "Intersection ( CURVE: W, CURVE: w ) equals POINT: d",
    "id": 3827,
    "declarations": "W: CURVE; w: CURVE; d: POINT",
    "facts": "Intersection(W, w) = d"
},
{
    "assertion": "LowerVertex ( CONICSECTION: L ) equals UpperFocus ( CONICSECTION: B )",
    "id": 3828,
    "declarations": "L: CONICSECTION; B: CONICSECTION",
    "facts": "LowerVertex(L) = UpperFocus(B)"
},
{
    "assertion": "Directrix ( CONICSECTION: s ) equals LINE: K",
    "id": 3829,
    "declarations": "s: CONICSECTION; K: LINE",
    "facts": "Directrix(s) = K"
},
{
    "assertion": "InterReciprocal ( NUMBER: 99 ) equals HalfFocalLength ( CONICSECTION: M )",
    "id": 3830,
    "declarations": "99: NUMBER; M: CONICSECTION",
    "facts": "InterReciprocal(99) = HalfFocalLength(M)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: I ) equals LINE: P",
    "id": 3831,
    "declarations": "I: LINESEGMENT; P: LINE",
    "facts": "PerpendicularBisector(I) = P"
},
{
    "assertion": "IsTangent ( LINE: b, CONICSECTION: S ) equals BOOL: False",
    "id": 3832,
    "declarations": "b: LINE; S: CONICSECTION; False: BOOL",
    "facts": "IsTangent(b, S) = False"
},
{
    "assertion": "Abs ( LINESEGMENT: m ) equals Radius ( CircumCircle ( TRIANGLE: a ) )",
    "id": 3833,
    "declarations": "m: LINESEGMENT; a: TRIANGLE",
    "facts": "Abs(m) = Radius(CircumCircle(a))"
},
{
    "assertion": "Length ( LINESEGMENT: i ) equals Slope ( TangentOfPoint ( POINT: B, CURVE: J ) )",
    "id": 3834,
    "declarations": "i: LINESEGMENT; B: POINT; J: CURVE",
    "facts": "Length(i) = Slope(TangentOfPoint(B, J))"
},
{
    "assertion": "Coordinate ( POINT: D ) equals ( NUMBER: -73, NUMBER: 3 )",
    "id": 3835,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LineOf ( POINT: I, POINT: K ) equals LINE: m",
    "id": 3836,
    "declarations": "I: POINT; K: POINT; m: LINE",
    "facts": "LineOf(I, K) = m"
},
{
    "assertion": "LocusEquation ( LeftVertex ( CONICSECTION: E ) ) equals Expression ( CURVE: h )",
    "id": 3837,
    "declarations": "E: CONICSECTION; h: CURVE",
    "facts": "LocusEquation(LeftVertex(E)) = Expression(h)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: t ) equals LINESEGMENT: b",
    "id": 3838,
    "declarations": "t: ELLIPSE; b: LINESEGMENT",
    "facts": "ImaginaryAxis(t) = b"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: j ) equals AXIS: yAxis",
    "id": 3839,
    "declarations": "j: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(j) = yAxis"
},
{
    "assertion": "IsTangent ( LeftDirectrix ( CONICSECTION: a ), CONICSECTION: j ) equals BOOL: False",
    "id": 3840,
    "declarations": "a: CONICSECTION; j: CONICSECTION; False: BOOL",
    "facts": "IsTangent(LeftDirectrix(a), j) = False"
},
{
    "assertion": "Coordinate ( Orthocenter ( TRIANGLE: u ) ) equals ( NUMBER: 94, NUMBER: -3 )",
    "id": 3841,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Endpoint ( LINESEGMENT: C ) equals POINT: f",
    "id": 3842,
    "declarations": "C: LINESEGMENT; f: POINT",
    "facts": "Endpoint(C) = f"
},
{
    "assertion": "MinorAxis ( ELLIPSE: t ) equals InterceptChord ( LINE: G, CONICSECTION: Z )",
    "id": 3843,
    "declarations": "t: ELLIPSE; G: LINE; Z: CONICSECTION",
    "facts": "MinorAxis(t) = InterceptChord(G, Z)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: D ) equals LeftDirectrix ( CONICSECTION: F )",
    "id": 3844,
    "declarations": "D: HYPERBOLA; F: CONICSECTION",
    "facts": "Asymptote(D) = LeftDirectrix(F)"
},
{
    "assertion": "Focus ( CONICSECTION: r ) equals POINT: u",
    "id": 3845,
    "declarations": "r: CONICSECTION; u: POINT",
    "facts": "Focus(r) = u"
},
{
    "assertion": "CircumCircle ( TRIANGLE: Z ) equals CIRCLE: C",
    "id": 3846,
    "declarations": "Z: TRIANGLE; C: CIRCLE",
    "facts": "CircumCircle(Z) = C"
},
{
    "assertion": "Area ( CONICSECTION: i ) equals sqrt ( FocalLength ( CONICSECTION: x ) )",
    "id": 3847,
    "declarations": "i: CONICSECTION; x: CONICSECTION",
    "facts": "Area(i) = sqrt(FocalLength(x))"
},
{
    "assertion": "MidPoint ( LINESEGMENT: f ) equals POINT: R",
    "id": 3848,
    "declarations": "f: LINESEGMENT; R: POINT",
    "facts": "MidPoint(f) = R"
},
{
    "assertion": "Coordinate ( POINT: x ) equals ( Min ( Abs ( LINESEGMENT: o ) ), NUMBER: -2 )",
    "id": 3849,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "InterReciprocal ( Min ( NUMBER: 31 ) ) equals Diameter ( CIRCLE: Z )",
    "id": 3850,
    "declarations": "31: NUMBER; Z: CIRCLE",
    "facts": "InterReciprocal(Min(31)) = Diameter(Z)"
},
{
    "assertion": "Max ( Diameter ( CIRCLE: N ) ) equals FocalLength ( CONICSECTION: A )",
    "id": 3851,
    "declarations": "N: CIRCLE; A: CONICSECTION",
    "facts": "Max(Diameter(N)) = FocalLength(A)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: f ) equals LINESEGMENT: M",
    "id": 3852,
    "declarations": "f: ELLIPSE; M: LINESEGMENT",
    "facts": "MinorAxis(f) = M"
},
{
    "assertion": "YCoordinate ( Center ( CONICSECTION: f ) ) equals Quadrant ( POINT: z )",
    "id": 3853,
    "declarations": "f: CONICSECTION; z: POINT",
    "facts": "YCoordinate(Center(f)) = Quadrant(z)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: i ) equals Center ( CONICSECTION: A )",
    "id": 3854,
    "declarations": "i: TRIANGLE; A: CONICSECTION",
    "facts": "Orthocenter(i) = Center(A)"
},
{
    "assertion": "lg ( Abs ( LINESEGMENT: a ) ) equals NUMBER: 98",
    "id": 3855,
    "declarations": "a: LINESEGMENT; 98: NUMBER",
    "facts": "lg(Abs(a)) = 98"
},
{
    "assertion": "MajorAxis ( ELLIPSE: l ) equals ImaginaryAxis ( ELLIPSE: V )",
    "id": 3856,
    "declarations": "l: ELLIPSE; V: ELLIPSE",
    "facts": "MajorAxis(l) = ImaginaryAxis(V)"
},
{
    "assertion": "Expression ( CURVE: U ) equals EXPRESSION: x^2*space+*space(y*space-*space2)^2*space=*space4",
    "id": 3857,
    "declarations": "U: CURVE; x^2*space+*space(y*space-*space2)^2*space=*space4: EXPRESSION",
    "facts": "Expression(U) = x^2*space+*space(y*space-*space2)^2*space=*space4"
},
{
    "assertion": "IsParallel ( LINE: Z, LINE: q ) equals BOOL: False",
    "id": 3858,
    "declarations": "Z: LINE; q: LINE; False: BOOL",
    "facts": "IsParallel(Z, q) = False"
},
{
    "assertion": "LeftFocus ( CONICSECTION: U ) equals Circumcenter ( TRIANGLE: g )",
    "id": 3859,
    "declarations": "U: CONICSECTION; g: TRIANGLE",
    "facts": "LeftFocus(U) = Circumcenter(g)"
},
{
    "assertion": "TangentOfPoint ( RightFocus ( CONICSECTION: h ), CURVE: u ) equals LeftDirectrix ( CONICSECTION: I )",
    "id": 3860,
    "declarations": "h: CONICSECTION; u: CURVE; I: CONICSECTION",
    "facts": "TangentOfPoint(RightFocus(h), u) = LeftDirectrix(I)"
},
{
    "assertion": "Area ( CONICSECTION: B ) equals Distance ( POINT: S, Projection ( POINT: b, LINE: q ) )",
    "id": 3861,
    "declarations": "B: CONICSECTION; S: POINT; b: POINT; q: LINE",
    "facts": "Area(B) = Distance(S, Projection(b, q))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: V ) equals LeftFocus ( CONICSECTION: s )",
    "id": 3862,
    "declarations": "V: LINESEGMENT; s: CONICSECTION",
    "facts": "Endpoint(V) = LeftFocus(s)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: T ) equals POINT: H",
    "id": 3863,
    "declarations": "T: CONICSECTION; H: POINT",
    "facts": "UpperVertex(T) = H"
},
{
    "assertion": "CircumCircle ( TriangleOf ( Center ( CONICSECTION: M ), LowerFocus ( CONICSECTION: h ), POINT: V ) ) equals CIRCLE: Z",
    "id": 3864,
    "declarations": "M: CONICSECTION; h: CONICSECTION; V: POINT; Z: CIRCLE",
    "facts": "CircumCircle(TriangleOf(Center(M), LowerFocus(h), V)) = Z"
},
{
    "assertion": "Min ( NUMBER: 21 ) equals Perimeter ( CONICSECTION: i )",
    "id": 3865,
    "declarations": "21: NUMBER; i: CONICSECTION",
    "facts": "Min(21) = Perimeter(i)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: D, CIRCLE: J ) equals BOOL: True",
    "id": 3866,
    "declarations": "D: LINESEGMENT; J: CIRCLE; True: BOOL",
    "facts": "IsDiameter(D, J) = True"
},
{
    "assertion": "YCoordinate ( RightVertex ( CONICSECTION: S ) ) equals NUMBER: 63",
    "id": 3867,
    "declarations": "S: CONICSECTION; 63: NUMBER",
    "facts": "YCoordinate(RightVertex(S)) = 63"
},
{
    "assertion": "Vertex ( CONICSECTION: C ) equals LeftVertex ( CONICSECTION: G )",
    "id": 3868,
    "declarations": "C: CONICSECTION; G: CONICSECTION",
    "facts": "Vertex(C) = LeftVertex(G)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: S ) equals sqrt ( Slope ( LINE: d ) )",
    "id": 3869,
    "declarations": "S: CONICSECTION; d: LINE",
    "facts": "Eccentricity(S) = sqrt(Slope(d))"
},
{
    "assertion": "Inclination ( LINE: d ) equals Area ( CONICSECTION: a )",
    "id": 3870,
    "declarations": "d: LINE; a: CONICSECTION",
    "facts": "Inclination(d) = Area(a)"
},
{
    "assertion": "Between ( POINT: Z, Orthocenter ( TRIANGLE: e ), MidPoint ( LINESEGMENT: k ) ) equals BOOL: True",
    "id": 3871,
    "declarations": "Z: POINT; e: TRIANGLE; k: LINESEGMENT; True: BOOL",
    "facts": "Between(Z, Orthocenter(e), MidPoint(k)) = True"
},
{
    "assertion": "Eccentricity ( CONICSECTION: l ) equals FocalLength ( CONICSECTION: s )",
    "id": 3872,
    "declarations": "l: CONICSECTION; s: CONICSECTION",
    "facts": "Eccentricity(l) = FocalLength(s)"
},
{
    "assertion": "TangentPoint ( LINE: a, CIRCLE: H ) equals POINT: g",
    "id": 3873,
    "declarations": "a: LINE; H: CIRCLE; g: POINT",
    "facts": "TangentPoint(a, H) = g"
},
{
    "assertion": "Between ( POINT: f, LeftFocus ( CONICSECTION: F ), UpperVertex ( CONICSECTION: e ) ) equals BOOL: False",
    "id": 3874,
    "declarations": "f: POINT; F: CONICSECTION; e: CONICSECTION; False: BOOL",
    "facts": "Between(f, LeftFocus(F), UpperVertex(e)) = False"
},
{
    "assertion": "And ( UpperVertex ( CONICSECTION: b ) equals Circumcenter ( TRIANGLE: r ), Min ( Slope ( RightDirectrix ( CONICSECTION: x ) ) ) equals NUMBER: -80 ) equals BOOL: False",
    "id": 3875,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "NumIntersection ( CURVE: w, CURVE: V ) equals Diameter ( CIRCLE: B )",
    "id": 3876,
    "declarations": "w: CURVE; V: CURVE; B: CIRCLE",
    "facts": "NumIntersection(w, V) = Diameter(B)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: b ) equals POINT: f",
    "id": 3877,
    "declarations": "b: CONICSECTION; f: POINT",
    "facts": "LowerVertex(b) = f"
},
{
    "assertion": "TangentPoint ( TangentOfPoint ( POINT: r, CURVE: g ), CIRCLE: U ) equals POINT: W",
    "id": 3878,
    "declarations": "r: POINT; g: CURVE; U: CIRCLE; W: POINT",
    "facts": "TangentPoint(TangentOfPoint(r, g), U) = W"
},
{
    "assertion": "NumIntersection ( CURVE: A, CURVE: q ) equals XCoordinate ( POINT: f )",
    "id": 3879,
    "declarations": "A: CURVE; q: CURVE; f: POINT",
    "facts": "NumIntersection(A, q) = XCoordinate(f)"
},
{
    "assertion": "FocalLength ( CONICSECTION: u ) equals Inclination ( RightDirectrix ( CONICSECTION: o ) )",
    "id": 3880,
    "declarations": "u: CONICSECTION; o: CONICSECTION",
    "facts": "FocalLength(u) = Inclination(RightDirectrix(o))"
},
{
    "assertion": "Negation ( Circumcenter ( TRIANGLE: H ) equals POINT: J ) equals BOOL: True",
    "id": 3881,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "ApplyUnit ( NUMBER: 67, DEGREESTR: degree )",
    "id": 3882,
    "declarations": "67: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(67, degree) = None"
},
{
    "assertion": "MidPoint ( LINESEGMENT: F ) equals POINT: y",
    "id": 3883,
    "declarations": "F: LINESEGMENT; y: POINT",
    "facts": "MidPoint(F) = y"
},
{
    "assertion": "lg ( FocalLength ( CONICSECTION: w ) ) equals Min ( NUMBER: -28 )",
    "id": 3884,
    "declarations": "w: CONICSECTION; -28: NUMBER",
    "facts": "lg(FocalLength(w)) = Min(-28)"
},
{
    "assertion": "DotProduct ( VECTOR: f, VECTOR: C ) equals NUMBER: -5",
    "id": 3885,
    "declarations": "f: VECTOR; C: VECTOR; -5: NUMBER",
    "facts": "DotProduct(f, C) = -5"
},
{
    "assertion": "LeftPart ( HYPERBOLA: H ) equals CURVE: q",
    "id": 3886,
    "declarations": "H: HYPERBOLA; q: CURVE",
    "facts": "LeftPart(H) = q"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: a ) equals TangentOfPoint ( LeftVertex ( CONICSECTION: c ), CURVE: H )",
    "id": 3887,
    "declarations": "a: LINESEGMENT; c: CONICSECTION; H: CURVE",
    "facts": "OverlappingLine(a) = TangentOfPoint(LeftVertex(c), H)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: k, CIRCLE: U ) equals BOOL: True",
    "id": 3888,
    "declarations": "k: LINESEGMENT; U: CIRCLE; True: BOOL",
    "facts": "IsDiameter(k, U) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: r ) equals MidPoint ( RealAxis ( ELLIPSE: T ) )",
    "id": 3889,
    "declarations": "r: TRIANGLE; T: ELLIPSE",
    "facts": "Circumcenter(r) = MidPoint(RealAxis(T))"
},
{
    "assertion": "PerpendicularBisector ( MajorAxis ( ELLIPSE: A ) ) equals LINE: j",
    "id": 3890,
    "declarations": "A: ELLIPSE; j: LINE",
    "facts": "PerpendicularBisector(MajorAxis(A)) = j"
},
{
    "assertion": "RightVertex ( CONICSECTION: x ) equals POINT: V",
    "id": 3891,
    "declarations": "x: CONICSECTION; V: POINT",
    "facts": "RightVertex(x) = V"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: y ) equals sqrt ( sqrt ( NUMBER: 72 ) )",
    "id": 3892,
    "declarations": "y: CONICSECTION; 72: NUMBER",
    "facts": "HalfFocalLength(y) = sqrt(sqrt(72))"
},
{
    "assertion": "Abs ( LINESEGMENT: k ) equals NUMBER: -35",
    "id": 3893,
    "declarations": "k: LINESEGMENT; -35: NUMBER",
    "facts": "Abs(k) = -35"
},
{
    "assertion": "FocalLength ( CONICSECTION: O ) equals DotProduct ( VECTOR: l, VECTOR: x )",
    "id": 3894,
    "declarations": "O: CONICSECTION; l: VECTOR; x: VECTOR",
    "facts": "FocalLength(O) = DotProduct(l, x)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: Y ) equals POINT: P",
    "id": 3895,
    "declarations": "Y: TRIANGLE; P: POINT",
    "facts": "Circumcenter(Y) = P"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: d ) equals LINE: l",
    "id": 3896,
    "declarations": "d: CONICSECTION; l: LINE",
    "facts": "LeftDirectrix(d) = l"
},
{
    "assertion": "InterceptChord ( LINE: f, CONICSECTION: K ) equals LINESEGMENT: n",
    "id": 3897,
    "declarations": "f: LINE; K: CONICSECTION; n: LINESEGMENT",
    "facts": "InterceptChord(f, K) = n"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: q ) equals LINESEGMENT: h",
    "id": 3898,
    "declarations": "q: ELLIPSE; h: LINESEGMENT",
    "facts": "ImaginaryAxis(q) = h"
},
{
    "assertion": "XCoordinate ( POINT: G ) equals NUMBER: 91",
    "id": 3899,
    "declarations": "G: POINT; 91: NUMBER",
    "facts": "XCoordinate(G) = 91"
},
{
    "assertion": "Coordinate ( POINT: e ) equals ( FocalLength ( CONICSECTION: a ), Length ( LINESEGMENT: d ) )",
    "id": 3900,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Incenter ( TRIANGLE: Z ) equals POINT: Q",
    "id": 3901,
    "declarations": "Z: TRIANGLE; Q: POINT",
    "facts": "Incenter(Z) = Q"
},
{
    "assertion": "sqrt ( NUMBER: -23 ) equals Area ( CONICSECTION: V )",
    "id": 3902,
    "declarations": "-23: NUMBER; V: CONICSECTION",
    "facts": "sqrt(-23) = Area(V)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: M ) equals LINE: W",
    "id": 3903,
    "declarations": "M: HYPERBOLA; W: LINE",
    "facts": "Asymptote(M) = W"
},
{
    "assertion": "Slope ( LINE: H ) equals Radius ( CIRCLE: d )",
    "id": 3904,
    "declarations": "H: LINE; d: CIRCLE",
    "facts": "Slope(H) = Radius(d)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: x ) equals LINE: P",
    "id": 3905,
    "declarations": "x: LINESEGMENT; P: LINE",
    "facts": "OverlappingLine(x) = P"
},
{
    "assertion": "Inclination ( LINE: x ) equals DotProduct ( VECTOR: D, VECTOR: I )",
    "id": 3906,
    "declarations": "x: LINE; D: VECTOR; I: VECTOR",
    "facts": "Inclination(x) = DotProduct(D, I)"
},
{
    "assertion": "VectorOf ( FootPoint ( LINE: N, LineOf ( POINT: p, UpperFocus ( CONICSECTION: R ) ) ), POINT: e ) equals VECTOR: a",
    "id": 3907,
    "declarations": "N: LINE; p: POINT; R: CONICSECTION; e: POINT; a: VECTOR",
    "facts": "VectorOf(FootPoint(N, LineOf(p, UpperFocus(R))), e) = a"
},
{
    "assertion": "FocalLength ( CONICSECTION: B ) equals Abs ( LINESEGMENT: e )",
    "id": 3908,
    "declarations": "B: CONICSECTION; e: LINESEGMENT",
    "facts": "FocalLength(B) = Abs(e)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: s ) equals LowerVertex ( CONICSECTION: f )",
    "id": 3909,
    "declarations": "s: TRIANGLE; f: CONICSECTION",
    "facts": "Circumcenter(s) = LowerVertex(f)"
},
{
    "assertion": "Intercept ( RightDirectrix ( CONICSECTION: N ), AXIS: xAxis ) equals NUMBER: -16",
    "id": 3910,
    "declarations": "N: CONICSECTION; xAxis: AXIS; -16: NUMBER",
    "facts": "Intercept(RightDirectrix(N), xAxis) = -16"
},
{
    "assertion": "Intersection ( CURVE: o, CURVE: W ) equals POINT: x",
    "id": 3911,
    "declarations": "o: CURVE; W: CURVE; x: POINT",
    "facts": "Intersection(o, W) = x"
},
{
    "assertion": "LeftVertex ( CONICSECTION: e ) equals UpperFocus ( CONICSECTION: T )",
    "id": 3912,
    "declarations": "e: CONICSECTION; T: CONICSECTION",
    "facts": "LeftVertex(e) = UpperFocus(T)"
},
{
    "assertion": "RightFocus ( CONICSECTION: H ) equals MidPoint ( LINESEGMENT: U )",
    "id": 3913,
    "declarations": "H: CONICSECTION; U: LINESEGMENT",
    "facts": "RightFocus(H) = MidPoint(U)"
},
{
    "assertion": "Min ( NUMBER: -22 ) equals HalfFocalLength ( CONICSECTION: D )",
    "id": 3914,
    "declarations": "-22: NUMBER; D: CONICSECTION",
    "facts": "Min(-22) = HalfFocalLength(D)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: c ) equals POINT: p",
    "id": 3915,
    "declarations": "c: TRIANGLE; p: POINT",
    "facts": "Circumcenter(c) = p"
},
{
    "assertion": "IsDiameter ( LineSegmentOf ( POINT: a, POINT: z ), CIRCLE: P ) equals BOOL: True",
    "id": 3916,
    "declarations": "a: POINT; z: POINT; P: CIRCLE; True: BOOL",
    "facts": "IsDiameter(LineSegmentOf(a, z), P) = True"
},
{
    "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: N ) ) equals NUMBER: 16",
    "id": 3917,
    "declarations": "N: CONICSECTION; 16: NUMBER",
    "facts": "YCoordinate(LowerVertex(N)) = 16"
},
{
    "assertion": "TangentPoint ( PerpendicularBisector ( LINESEGMENT: b ), CIRCLE: i ) equals LeftVertex ( CONICSECTION: o )",
    "id": 3918,
    "declarations": "b: LINESEGMENT; i: CIRCLE; o: CONICSECTION",
    "facts": "TangentPoint(PerpendicularBisector(b), i) = LeftVertex(o)"
},
{
    "assertion": "Length ( LINESEGMENT: t ) equals Intercept ( LINE: R, AXIS: xAxis )",
    "id": 3919,
    "declarations": "t: LINESEGMENT; R: LINE; xAxis: AXIS",
    "facts": "Length(t) = Intercept(R, xAxis)"
},
{
    "assertion": "Inclination ( LINE: g ) equals NUMBER: 55",
    "id": 3920,
    "declarations": "g: LINE; 55: NUMBER",
    "facts": "Inclination(g) = 55"
},
{
    "assertion": "Expression ( CURVE: A ) equals EXPRESSION: x^2/4*space+*spacey^2/9*space=*space1",
    "id": 3921,
    "declarations": "A: CURVE; x^2/4*space+*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "Expression(A) = x^2/4*space+*spacey^2/9*space=*space1"
},
{
    "assertion": "IsIntersect ( CURVE: m, RightPart ( HYPERBOLA: M ) ) equals BOOL: True",
    "id": 3922,
    "declarations": "m: CURVE; M: HYPERBOLA; True: BOOL",
    "facts": "IsIntersect(m, RightPart(M)) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: z ) equals POINT: V",
    "id": 3923,
    "declarations": "z: TRIANGLE; V: POINT",
    "facts": "Orthocenter(z) = V"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: M, CIRCLE: v ) equals BOOL: False",
    "id": 3924,
    "declarations": "M: LINESEGMENT; v: CIRCLE; False: BOOL",
    "facts": "IsDiameter(M, v) = False"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: t ) equals ImaginaryAxis ( ELLIPSE: N )",
    "id": 3925,
    "declarations": "t: ELLIPSE; N: ELLIPSE",
    "facts": "ImaginaryAxis(t) = ImaginaryAxis(N)"
},
{
    "assertion": "IsParallel ( LINE: v, PerpendicularBisector ( LINESEGMENT: J ) ) equals BOOL: True",
    "id": 3926,
    "declarations": "v: LINE; J: LINESEGMENT; True: BOOL",
    "facts": "IsParallel(v, PerpendicularBisector(J)) = True"
},
{
    "assertion": "And ( MajorAxis ( ELLIPSE: r ) equals LINESEGMENT: B, Radius ( CIRCLE: D ) equals Slope ( LINE: w ) ) equals BOOL: False",
    "id": 3927,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: Y ) ) equals LocusEquation ( POINT: H )",
    "id": 3928,
    "declarations": "Y: HYPERBOLA; H: POINT",
    "facts": "Expression(LeftPart(Y)) = LocusEquation(H)"
},
{
    "assertion": "Negation ( Locus ( UpperFocus ( CONICSECTION: x ) ) equals Locus ( POINT: e ) ) equals BOOL: True",
    "id": 3929,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Intersection ( CURVE: r, CURVE: Y ) equals POINT: E",
    "id": 3930,
    "declarations": "r: CURVE; Y: CURVE; E: POINT",
    "facts": "Intersection(r, Y) = E"
},
{
    "assertion": "TangentOnPoint ( LowerVertex ( CONICSECTION: f ), CURVE: A ) equals RightDirectrix ( CONICSECTION: a )",
    "id": 3931,
    "declarations": "f: CONICSECTION; A: CURVE; a: CONICSECTION",
    "facts": "TangentOnPoint(LowerVertex(f), A) = RightDirectrix(a)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: L ) equals CIRCLE: r",
    "id": 3932,
    "declarations": "L: TRIANGLE; r: CIRCLE",
    "facts": "CircumCircle(L) = r"
},
{
    "assertion": "Vertex ( CONICSECTION: p ) equals LowerVertex ( CONICSECTION: p )",
    "id": 3933,
    "declarations": "p: CONICSECTION; p: CONICSECTION",
    "facts": "Vertex(p) = LowerVertex(p)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: n, CONICSECTION: c ) equals BOOL: True",
    "id": 3934,
    "declarations": "n: LINESEGMENT; c: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(n, c) = True"
},
{
    "assertion": "Intersection ( CURVE: E, CURVE: b ) equals POINT: p",
    "id": 3935,
    "declarations": "E: CURVE; b: CURVE; p: POINT",
    "facts": "Intersection(E, b) = p"
},
{
    "assertion": "lg ( YCoordinate ( POINT: K ) ) equals InterReciprocal ( NUMBER: -74 )",
    "id": 3936,
    "declarations": "K: POINT; -74: NUMBER",
    "facts": "lg(YCoordinate(K)) = InterReciprocal(-74)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: e ) equals LeftDirectrix ( CONICSECTION: w )",
    "id": 3937,
    "declarations": "e: CONICSECTION; w: CONICSECTION",
    "facts": "RightDirectrix(e) = LeftDirectrix(w)"
},
{
    "assertion": "Slope ( LINE: E ) equals DotProduct ( VECTOR: G, VECTOR: z )",
    "id": 3938,
    "declarations": "E: LINE; G: VECTOR; z: VECTOR",
    "facts": "Slope(E) = DotProduct(G, z)"
},
{
    "assertion": "Slope ( LINE: d ) equals DotProduct ( VECTOR: r, VECTOR: A )",
    "id": 3939,
    "declarations": "d: LINE; r: VECTOR; A: VECTOR",
    "facts": "Slope(d) = DotProduct(r, A)"
},
{
    "assertion": "Area ( CONICSECTION: V ) equals Slope ( LeftDirectrix ( CONICSECTION: w ) )",
    "id": 3940,
    "declarations": "V: CONICSECTION; w: CONICSECTION",
    "facts": "Area(V) = Slope(LeftDirectrix(w))"
},
{
    "assertion": "Coordinate ( UpperVertex ( CONICSECTION: Y ) ) equals ( Perimeter ( CONICSECTION: k ), Eccentricity ( CONICSECTION: J ) )",
    "id": 3941,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Vertex ( CONICSECTION: a ) equals UpperFocus ( CONICSECTION: j )",
    "id": 3942,
    "declarations": "a: CONICSECTION; j: CONICSECTION",
    "facts": "Vertex(a) = UpperFocus(j)"
},
{
    "assertion": "TriangleOf ( Incenter ( TRIANGLE: V ), POINT: G, POINT: h ) equals TRIANGLE: I",
    "id": 3943,
    "declarations": "V: TRIANGLE; G: POINT; h: POINT; I: TRIANGLE",
    "facts": "TriangleOf(Incenter(V), G, h) = I"
},
{
    "assertion": "LowerFocus ( CONICSECTION: i ) equals UpperFocus ( CONICSECTION: K )",
    "id": 3944,
    "declarations": "i: CONICSECTION; K: CONICSECTION",
    "facts": "LowerFocus(i) = UpperFocus(K)"
},
{
    "assertion": "Intersection ( LeftPart ( HYPERBOLA: C ), CURVE: x ) equals POINT: h",
    "id": 3945,
    "declarations": "C: HYPERBOLA; x: CURVE; h: POINT",
    "facts": "Intersection(LeftPart(C), x) = h"
},
{
    "assertion": "FocalLength ( CONICSECTION: Q ) equals Inclination ( LINE: B )",
    "id": 3946,
    "declarations": "Q: CONICSECTION; B: LINE",
    "facts": "FocalLength(Q) = Inclination(B)"
},
{
    "assertion": "InterceptChord ( OverlappingLine ( LINESEGMENT: O ), CONICSECTION: l ) equals LINESEGMENT: c",
    "id": 3947,
    "declarations": "O: LINESEGMENT; l: CONICSECTION; c: LINESEGMENT",
    "facts": "InterceptChord(OverlappingLine(O), l) = c"
},
{
    "assertion": "LeftFocus ( CONICSECTION: U ) equals Center ( CONICSECTION: k )",
    "id": 3948,
    "declarations": "U: CONICSECTION; k: CONICSECTION",
    "facts": "LeftFocus(U) = Center(k)"
},
{
    "assertion": "NumIntersection ( CURVE: S, CURVE: l ) equals HalfFocalLength ( CONICSECTION: F )",
    "id": 3949,
    "declarations": "S: CURVE; l: CURVE; F: CONICSECTION",
    "facts": "NumIntersection(S, l) = HalfFocalLength(F)"
},
{
    "assertion": "Incenter ( TRIANGLE: g ) equals UpperVertex ( CONICSECTION: S )",
    "id": 3950,
    "declarations": "g: TRIANGLE; S: CONICSECTION",
    "facts": "Incenter(g) = UpperVertex(S)"
},
{
    "assertion": "Inclination ( LINE: K ) equals NUMBER: -59",
    "id": 3951,
    "declarations": "K: LINE; -59: NUMBER",
    "facts": "Inclination(K) = -59"
},
{
    "assertion": "DotProduct ( VECTOR: b, VectorOf ( UpperVertex ( CONICSECTION: i ), RightFocus ( CONICSECTION: b ) ) ) equals Intercept ( LINE: U, AXIS: yAxis )",
    "id": 3952,
    "declarations": "b: VECTOR; i: CONICSECTION; b: CONICSECTION; U: LINE; yAxis: AXIS",
    "facts": "DotProduct(b, VectorOf(UpperVertex(i), RightFocus(b))) = Intercept(U, yAxis)"
},
{
    "assertion": "IsInTangent ( CIRCLE: v, CIRCLE: H ) equals BOOL: True",
    "id": 3953,
    "declarations": "v: CIRCLE; H: CIRCLE; True: BOOL",
    "facts": "IsInTangent(v, H) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: F ) equals POINT: u",
    "id": 3954,
    "declarations": "F: TRIANGLE; u: POINT",
    "facts": "Orthocenter(F) = u"
},
{
    "assertion": "LocusEquation ( LeftFocus ( CONICSECTION: i ) ) equals Expression ( CURVE: Q )",
    "id": 3955,
    "declarations": "i: CONICSECTION; Q: CURVE",
    "facts": "LocusEquation(LeftFocus(i)) = Expression(Q)"
},
{
    "assertion": "IsTangent ( LINE: k, CONICSECTION: J ) equals BOOL: True",
    "id": 3956,
    "declarations": "k: LINE; J: CONICSECTION; True: BOOL",
    "facts": "IsTangent(k, J) = True"
},
{
    "assertion": "LowerVertex ( CONICSECTION: d ) equals RightVertex ( CONICSECTION: m )",
    "id": 3957,
    "declarations": "d: CONICSECTION; m: CONICSECTION",
    "facts": "LowerVertex(d) = RightVertex(m)"
},
{
    "assertion": "YCoordinate ( POINT: I ) equals NUMBER: -18",
    "id": 3958,
    "declarations": "I: POINT; -18: NUMBER",
    "facts": "YCoordinate(I) = -18"
},
{
    "assertion": "Length ( LINESEGMENT: m ) equals Min ( NUMBER: 38 )",
    "id": 3959,
    "declarations": "m: LINESEGMENT; 38: NUMBER",
    "facts": "Length(m) = Min(38)"
},
{
    "assertion": "Radius ( CIRCLE: R ) equals Diameter ( CIRCLE: n )",
    "id": 3960,
    "declarations": "R: CIRCLE; n: CIRCLE",
    "facts": "Radius(R) = Diameter(n)"
},
{
    "assertion": "Perimeter ( CONICSECTION: e ) equals NUMBER: -94",
    "id": 3961,
    "declarations": "e: CONICSECTION; -94: NUMBER",
    "facts": "Perimeter(e) = -94"
},
{
    "assertion": "lg ( NUMBER: -4 ) equals NUMBER: -58",
    "id": 3962,
    "declarations": "-4: NUMBER; -58: NUMBER",
    "facts": "lg(-4) = -58"
},
{
    "assertion": "LeftPart ( HYPERBOLA: L ) equals CURVE: y",
    "id": 3963,
    "declarations": "L: HYPERBOLA; y: CURVE",
    "facts": "LeftPart(L) = y"
},
{
    "assertion": "LineOf ( Orthocenter ( TRIANGLE: Q ), POINT: e ) equals RightDirectrix ( CONICSECTION: a )",
    "id": 3964,
    "declarations": "Q: TRIANGLE; e: POINT; a: CONICSECTION",
    "facts": "LineOf(Orthocenter(Q), e) = RightDirectrix(a)"
},
{
    "assertion": "Abs ( LINESEGMENT: h ) equals NUMBER: -4",
    "id": 3965,
    "declarations": "h: LINESEGMENT; -4: NUMBER",
    "facts": "Abs(h) = -4"
},
{
    "assertion": "RightVertex ( CONICSECTION: F ) equals RightFocus ( CONICSECTION: c )",
    "id": 3966,
    "declarations": "F: CONICSECTION; c: CONICSECTION",
    "facts": "RightVertex(F) = RightFocus(c)"
},
{
    "assertion": "Incenter ( TRIANGLE: e ) equals Center ( CONICSECTION: V )",
    "id": 3967,
    "declarations": "e: TRIANGLE; V: CONICSECTION",
    "facts": "Incenter(e) = Center(V)"
},
{
    "assertion": "RightPart ( HYPERBOLA: e ) equals CURVE: E",
    "id": 3968,
    "declarations": "e: HYPERBOLA; E: CURVE",
    "facts": "RightPart(e) = E"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: E, TRIANGLE: u ) equals BOOL: True",
    "id": 3969,
    "declarations": "E: CIRCLE; u: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(E, u) = True"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: W ) equals OverlappingLine ( LINESEGMENT: p )",
    "id": 3970,
    "declarations": "W: LINESEGMENT; p: LINESEGMENT",
    "facts": "PerpendicularBisector(W) = OverlappingLine(p)"
},
{
    "assertion": "Intercept ( LINE: T, AXIS: yAxis ) equals Inclination ( LINE: G )",
    "id": 3971,
    "declarations": "T: LINE; yAxis: AXIS; G: LINE",
    "facts": "Intercept(T, yAxis) = Inclination(G)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: z ) equals RightVertex ( CONICSECTION: d )",
    "id": 3972,
    "declarations": "z: CONICSECTION; d: CONICSECTION",
    "facts": "LowerFocus(z) = RightVertex(d)"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: F ) ) equals NUMBER: 2",
    "id": 3973,
    "declarations": "F: TRIANGLE; 2: NUMBER",
    "facts": "Diameter(CircumCircle(F)) = 2"
},
{
    "assertion": "Incenter ( TRIANGLE: v ) equals MidPoint ( LINESEGMENT: f )",
    "id": 3974,
    "declarations": "v: TRIANGLE; f: LINESEGMENT",
    "facts": "Incenter(v) = MidPoint(f)"
},
{
    "assertion": "Quadrant ( POINT: M ) equals NUMBER: -34",
    "id": 3975,
    "declarations": "M: POINT; -34: NUMBER",
    "facts": "Quadrant(M) = -34"
},
{
    "assertion": "MajorAxis ( ELLIPSE: D ) equals LINESEGMENT: D",
    "id": 3976,
    "declarations": "D: ELLIPSE; D: LINESEGMENT",
    "facts": "MajorAxis(D) = D"
},
{
    "assertion": "Negation ( FocalLength ( CONICSECTION: l ) equals Quadrant ( LowerFocus ( CONICSECTION: e ) ) ) equals BOOL: False",
    "id": 3977,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Slope ( LeftDirectrix ( CONICSECTION: X ) ) equals NUMBER: -86",
    "id": 3978,
    "declarations": "X: CONICSECTION; -86: NUMBER",
    "facts": "Slope(LeftDirectrix(X)) = -86"
},
{
    "assertion": "RightVertex ( CONICSECTION: V ) equals POINT: o",
    "id": 3979,
    "declarations": "V: CONICSECTION; o: POINT",
    "facts": "RightVertex(V) = o"
},
{
    "assertion": "LineOf ( POINT: T, MidPoint ( LINESEGMENT: W ) ) equals RightDirectrix ( CONICSECTION: V )",
    "id": 3980,
    "declarations": "T: POINT; W: LINESEGMENT; V: CONICSECTION",
    "facts": "LineOf(T, MidPoint(W)) = RightDirectrix(V)"
},
{
    "assertion": "IsTangent ( LineOf ( Projection ( POINT: A, LINE: T ), Center ( CONICSECTION: I ) ), CONICSECTION: H ) equals BOOL: False",
    "id": 3981,
    "declarations": "A: POINT; T: LINE; I: CONICSECTION; H: CONICSECTION; False: BOOL",
    "facts": "IsTangent(LineOf(Projection(A, T), Center(I)), H) = False"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: c ) equals LINE: o",
    "id": 3982,
    "declarations": "c: LINESEGMENT; o: LINE",
    "facts": "OverlappingLine(c) = o"
},
{
    "assertion": "Intersection ( CURVE: a, CURVE: G ) equals LowerFocus ( CONICSECTION: m )",
    "id": 3983,
    "declarations": "a: CURVE; G: CURVE; m: CONICSECTION",
    "facts": "Intersection(a, G) = LowerFocus(m)"
},
{
    "assertion": "Distance ( LeftVertex ( CONICSECTION: z ), POINT: z ) equals FocalLength ( CONICSECTION: p )",
    "id": 3984,
    "declarations": "z: CONICSECTION; z: POINT; p: CONICSECTION",
    "facts": "Distance(LeftVertex(z), z) = FocalLength(p)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: l ) equals LINE: a",
    "id": 3985,
    "declarations": "l: LINESEGMENT; a: LINE",
    "facts": "OverlappingLine(l) = a"
},
{
    "assertion": "Diameter ( CIRCLE: t ) equals NUMBER: -14",
    "id": 3986,
    "declarations": "t: CIRCLE; -14: NUMBER",
    "facts": "Diameter(t) = -14"
},
{
    "assertion": "Abs ( MajorAxis ( ELLIPSE: l ) ) equals Min ( Intercept ( PerpendicularBisector ( LINESEGMENT: O ), AXIS: xAxis ) )",
    "id": 3987,
    "declarations": "l: ELLIPSE; O: LINESEGMENT; xAxis: AXIS",
    "facts": "Abs(MajorAxis(l)) = Min(Intercept(PerpendicularBisector(O), xAxis))"
},
{
    "assertion": "Expression ( CURVE: Q ) equals EXPRESSION: y*space=*spacex^3*space-*space4x",
    "id": 3988,
    "declarations": "Q: CURVE; y*space=*spacex^3*space-*space4x: EXPRESSION",
    "facts": "Expression(Q) = y*space=*spacex^3*space-*space4x"
},
{
    "assertion": "Min ( NUMBER: 82 ) equals NUMBER: -30",
    "id": 3989,
    "declarations": "82: NUMBER; -30: NUMBER",
    "facts": "Min(82) = -30"
},
{
    "assertion": "IsDiameter ( MinorAxis ( ELLIPSE: f ), CIRCLE: w ) equals BOOL: True",
    "id": 3990,
    "declarations": "f: ELLIPSE; w: CIRCLE; True: BOOL",
    "facts": "IsDiameter(MinorAxis(f), w) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: U ) equals Perimeter ( CONICSECTION: k )",
    "id": 3991,
    "declarations": "U: CONICSECTION; k: CONICSECTION",
    "facts": "HalfFocalLength(U) = Perimeter(k)"
},
{
    "assertion": "ApplyUnit ( Abs ( MinorAxis ( ELLIPSE: S ) ), DEGREESTR: degree )",
    "id": 3992,
    "declarations": "S: ELLIPSE; degree: DEGREESTR",
    "facts": "ApplyUnit(Abs(MinorAxis(S)), degree) = None"
},
{
    "assertion": "RealAxis ( ELLIPSE: O ) equals LINESEGMENT: r",
    "id": 3993,
    "declarations": "O: ELLIPSE; r: LINESEGMENT",
    "facts": "RealAxis(O) = r"
},
{
    "assertion": "Incenter ( TRIANGLE: d ) equals LeftVertex ( CONICSECTION: G )",
    "id": 3994,
    "declarations": "d: TRIANGLE; G: CONICSECTION",
    "facts": "Incenter(d) = LeftVertex(G)"
},
{
    "assertion": "Focus ( CONICSECTION: V ) equals Incenter ( TRIANGLE: d )",
    "id": 3995,
    "declarations": "V: CONICSECTION; d: TRIANGLE",
    "facts": "Focus(V) = Incenter(d)"
},
{
    "assertion": "Coordinate ( POINT: j ) equals ( XCoordinate ( POINT: U ), Area ( CONICSECTION: m ) )",
    "id": 3996,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "InterReciprocal ( InterReciprocal ( Length ( ImaginaryAxis ( ELLIPSE: T ) ) ) ) equals YCoordinate ( LowerVertex ( CONICSECTION: O ) )",
    "id": 3997,
    "declarations": "T: ELLIPSE; O: CONICSECTION",
    "facts": "InterReciprocal(InterReciprocal(Length(ImaginaryAxis(T)))) = YCoordinate(LowerVertex(O))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: p ) equals RealAxis ( ELLIPSE: z )",
    "id": 3998,
    "declarations": "p: ELLIPSE; z: ELLIPSE",
    "facts": "MinorAxis(p) = RealAxis(z)"
},
{
    "assertion": "PointOnCurve ( POINT: c, Locus ( POINT: b ) ) equals BOOL: True",
    "id": 3999,
    "declarations": "c: POINT; b: POINT; True: BOOL",
    "facts": "PointOnCurve(c, Locus(b)) = True"
},
{
    "assertion": "CircumCircle ( TRIANGLE: y ) equals CIRCLE: v",
    "id": 4000,
    "declarations": "y: TRIANGLE; v: CIRCLE",
    "facts": "CircumCircle(y) = v"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: h ) ) equals lg ( Quadrant ( POINT: t ) )",
    "id": 4001,
    "declarations": "h: TRIANGLE; t: POINT",
    "facts": "Diameter(CircumCircle(h)) = lg(Quadrant(t))"
},
{
    "assertion": "Negation ( YCoordinate ( Orthocenter ( TRIANGLE: C ) ) equals FocalLength ( CONICSECTION: r ) ) equals BOOL: False",
    "id": 4002,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: P ) equals sqrt ( FocalLength ( CONICSECTION: z ) )",
    "id": 4003,
    "declarations": "P: CONICSECTION; z: CONICSECTION",
    "facts": "HalfFocalLength(P) = sqrt(FocalLength(z))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: M ) equals CURVE: b",
    "id": 4004,
    "declarations": "M: HYPERBOLA; b: CURVE",
    "facts": "LeftPart(M) = b"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: d ) ) equals EXPRESSION: y*space=*spacetan(x)",
    "id": 4005,
    "declarations": "d: HYPERBOLA; y*space=*spacetan(x): EXPRESSION",
    "facts": "Expression(LeftPart(d)) = y*space=*spacetan(x)"
},
{
    "assertion": "lg ( Radius ( CIRCLE: i ) ) equals NUMBER: -78",
    "id": 4006,
    "declarations": "i: CIRCLE; -78: NUMBER",
    "facts": "lg(Radius(i)) = -78"
},
{
    "assertion": "IsTangent ( LINE: X, CONICSECTION: o ) equals BOOL: False",
    "id": 4007,
    "declarations": "X: LINE; o: CONICSECTION; False: BOOL",
    "facts": "IsTangent(X, o) = False"
},
{
    "assertion": "Area ( CONICSECTION: S ) equals Slope ( OverlappingLine ( MajorAxis ( ELLIPSE: a ) ) )",
    "id": 4008,
    "declarations": "S: CONICSECTION; a: ELLIPSE",
    "facts": "Area(S) = Slope(OverlappingLine(MajorAxis(a)))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: g ) equals CURVE: K",
    "id": 4009,
    "declarations": "g: HYPERBOLA; K: CURVE",
    "facts": "LeftPart(g) = K"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: T, CIRCLE: K ) equals BOOL: True",
    "id": 4010,
    "declarations": "T: LINESEGMENT; K: CIRCLE; True: BOOL",
    "facts": "IsDiameter(T, K) = True"
},
{
    "assertion": "XCoordinate ( Center ( CONICSECTION: D ) ) equals Slope ( LINE: r )",
    "id": 4011,
    "declarations": "D: CONICSECTION; r: LINE",
    "facts": "XCoordinate(Center(D)) = Slope(r)"
},
{
    "assertion": "TangentPoint ( LINE: C, CIRCLE: A ) equals RightFocus ( CONICSECTION: W )",
    "id": 4012,
    "declarations": "C: LINE; A: CIRCLE; W: CONICSECTION",
    "facts": "TangentPoint(C, A) = RightFocus(W)"
},
{
    "assertion": "InterReciprocal ( NUMBER: 91 ) equals Perimeter ( CONICSECTION: b )",
    "id": 4013,
    "declarations": "91: NUMBER; b: CONICSECTION",
    "facts": "InterReciprocal(91) = Perimeter(b)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: T ) equals LINESEGMENT: t",
    "id": 4014,
    "declarations": "T: ELLIPSE; t: LINESEGMENT",
    "facts": "MinorAxis(T) = t"
},
{
    "assertion": "FootPoint ( LINE: o, TangentOnPoint ( POINT: g, LeftPart ( HYPERBOLA: H ) ) ) equals POINT: D",
    "id": 4015,
    "declarations": "o: LINE; g: POINT; H: HYPERBOLA; D: POINT",
    "facts": "FootPoint(o, TangentOnPoint(g, LeftPart(H))) = D"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: j ) equals TangentOfPoint ( POINT: S, CURVE: U )",
    "id": 4016,
    "declarations": "j: CONICSECTION; S: POINT; U: CURVE",
    "facts": "RightDirectrix(j) = TangentOfPoint(S, U)"
},
{
    "assertion": "IsTangent ( LINE: c, CONICSECTION: u ) equals BOOL: True",
    "id": 4017,
    "declarations": "c: LINE; u: CONICSECTION; True: BOOL",
    "facts": "IsTangent(c, u) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: J ) equals LINESEGMENT: J",
    "id": 4018,
    "declarations": "J: ELLIPSE; J: LINESEGMENT",
    "facts": "MinorAxis(J) = J"
},
{
    "assertion": "MinorAxis ( ELLIPSE: f ) equals LINESEGMENT: C",
    "id": 4019,
    "declarations": "f: ELLIPSE; C: LINESEGMENT",
    "facts": "MinorAxis(f) = C"
},
{
    "assertion": "Directrix ( CONICSECTION: l ) equals PerpendicularBisector ( MajorAxis ( ELLIPSE: K ) )",
    "id": 4020,
    "declarations": "l: CONICSECTION; K: ELLIPSE",
    "facts": "Directrix(l) = PerpendicularBisector(MajorAxis(K))"
},
{
    "assertion": "lg ( Radius ( CIRCLE: R ) ) equals Diameter ( CIRCLE: b )",
    "id": 4021,
    "declarations": "R: CIRCLE; b: CIRCLE",
    "facts": "lg(Radius(R)) = Diameter(b)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: P ) equals AXIS: xAxis",
    "id": 4022,
    "declarations": "P: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(P) = xAxis"
},
{
    "assertion": "Incenter ( TRIANGLE: s ) equals POINT: d",
    "id": 4023,
    "declarations": "s: TRIANGLE; d: POINT",
    "facts": "Incenter(s) = d"
},
{
    "assertion": "IsTangent ( RightDirectrix ( CONICSECTION: N ), CONICSECTION: c ) equals BOOL: False",
    "id": 4024,
    "declarations": "N: CONICSECTION; c: CONICSECTION; False: BOOL",
    "facts": "IsTangent(RightDirectrix(N), c) = False"
},
{
    "assertion": "Max ( NUMBER: -69 ) equals XCoordinate ( POINT: O )",
    "id": 4025,
    "declarations": "-69: NUMBER; O: POINT",
    "facts": "Max(-69) = XCoordinate(O)"
},
{
    "assertion": "Distance ( LowerVertex ( CONICSECTION: u ), Center ( CONICSECTION: o ) ) equals NUMBER: 45",
    "id": 4026,
    "declarations": "u: CONICSECTION; o: CONICSECTION; 45: NUMBER",
    "facts": "Distance(LowerVertex(u), Center(o)) = 45"
},
{
    "assertion": "Min ( NUMBER: -71 ) equals NUMBER: 65",
    "id": 4027,
    "declarations": "-71: NUMBER; 65: NUMBER",
    "facts": "Min(-71) = 65"
},
{
    "assertion": "Length ( LINESEGMENT: S ) equals NUMBER: -86",
    "id": 4028,
    "declarations": "S: LINESEGMENT; -86: NUMBER",
    "facts": "Length(S) = -86"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: p ) ) equals NUMBER: 75",
    "id": 4029,
    "declarations": "p: CONICSECTION; 75: NUMBER",
    "facts": "Slope(RightDirectrix(p)) = 75"
},
{
    "assertion": "Circumcenter ( TRIANGLE: t ) equals Center ( CONICSECTION: g )",
    "id": 4030,
    "declarations": "t: TRIANGLE; g: CONICSECTION",
    "facts": "Circumcenter(t) = Center(g)"
},
{
    "assertion": "And ( MajorAxis ( ELLIPSE: X ) equals RealAxis ( ELLIPSE: Y ), And ( IsPerpendicular ( LINE: p, LINE: z ) equals BOOL: True, Vertex ( CONICSECTION: H ) equals LowerFocus ( CONICSECTION: y ) ) equals BOOL: False ) equals BOOL: True",
    "id": 4031,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "CircumCircle ( TRIANGLE: p ) equals CIRCLE: o",
    "id": 4032,
    "declarations": "p: TRIANGLE; o: CIRCLE",
    "facts": "CircumCircle(p) = o"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: U, CONICSECTION: k ) equals BOOL: False",
    "id": 4033,
    "declarations": "U: LINESEGMENT; k: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(U, k) = False"
},
{
    "assertion": "Asymptote ( HYPERBOLA: W ) equals LINE: h",
    "id": 4034,
    "declarations": "W: HYPERBOLA; h: LINE",
    "facts": "Asymptote(W) = h"
},
{
    "assertion": "sqrt ( Slope ( LINE: J ) ) equals NUMBER: 71",
    "id": 4035,
    "declarations": "J: LINE; 71: NUMBER",
    "facts": "sqrt(Slope(J)) = 71"
},
{
    "assertion": "TangentPoint ( LINE: c, CIRCLE: Y ) equals POINT: S",
    "id": 4036,
    "declarations": "c: LINE; Y: CIRCLE; S: POINT",
    "facts": "TangentPoint(c, Y) = S"
},
{
    "assertion": "Center ( CONICSECTION: a ) equals POINT: b",
    "id": 4037,
    "declarations": "a: CONICSECTION; b: POINT",
    "facts": "Center(a) = b"
},
{
    "assertion": "InterceptChord ( LINE: u, CONICSECTION: a ) equals LINESEGMENT: a",
    "id": 4038,
    "declarations": "u: LINE; a: CONICSECTION; a: LINESEGMENT",
    "facts": "InterceptChord(u, a) = a"
},
{
    "assertion": "Length ( LINESEGMENT: d ) equals Inclination ( RightDirectrix ( CONICSECTION: L ) )",
    "id": 4039,
    "declarations": "d: LINESEGMENT; L: CONICSECTION",
    "facts": "Length(d) = Inclination(RightDirectrix(L))"
},
{
    "assertion": "TangentOfPoint ( RightVertex ( CONICSECTION: E ), CURVE: D ) equals OverlappingLine ( LINESEGMENT: W )",
    "id": 4040,
    "declarations": "E: CONICSECTION; D: CURVE; W: LINESEGMENT",
    "facts": "TangentOfPoint(RightVertex(E), D) = OverlappingLine(W)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: S ) equals LINESEGMENT: t",
    "id": 4041,
    "declarations": "S: ELLIPSE; t: LINESEGMENT",
    "facts": "MajorAxis(S) = t"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: v, TRIANGLE: D ) equals BOOL: True",
    "id": 4042,
    "declarations": "v: CIRCLE; D: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(v, D) = True"
},
{
    "assertion": "CircumCircle ( TRIANGLE: z ) equals CIRCLE: X",
    "id": 4043,
    "declarations": "z: TRIANGLE; X: CIRCLE",
    "facts": "CircumCircle(z) = X"
},
{
    "assertion": "LeftVertex ( CONICSECTION: Y ) equals Projection ( POINT: S, LINE: I )",
    "id": 4044,
    "declarations": "Y: CONICSECTION; S: POINT; I: LINE",
    "facts": "LeftVertex(Y) = Projection(S, I)"
},
{
    "assertion": "Min ( Radius ( CIRCLE: m ) ) equals NumIntersection ( CURVE: t, CURVE: h )",
    "id": 4045,
    "declarations": "m: CIRCLE; t: CURVE; h: CURVE",
    "facts": "Min(Radius(m)) = NumIntersection(t, h)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: a ) equals Orthocenter ( TRIANGLE: B )",
    "id": 4046,
    "declarations": "a: CONICSECTION; B: TRIANGLE",
    "facts": "UpperFocus(a) = Orthocenter(B)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: J ) equals RealAxis ( ELLIPSE: A )",
    "id": 4047,
    "declarations": "J: ELLIPSE; A: ELLIPSE",
    "facts": "MinorAxis(J) = RealAxis(A)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: V, TRIANGLE: t ) equals BOOL: False",
    "id": 4048,
    "declarations": "V: CIRCLE; t: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(V, t) = False"
},
{
    "assertion": "MajorAxis ( ELLIPSE: R ) equals RealAxis ( ELLIPSE: r )",
    "id": 4049,
    "declarations": "R: ELLIPSE; r: ELLIPSE",
    "facts": "MajorAxis(R) = RealAxis(r)"
},
{
    "assertion": "IsPerpendicular ( LeftDirectrix ( CONICSECTION: x ), LINE: R ) equals BOOL: True",
    "id": 4050,
    "declarations": "x: CONICSECTION; R: LINE; True: BOOL",
    "facts": "IsPerpendicular(LeftDirectrix(x), R) = True"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: F, CONICSECTION: f ) equals BOOL: True",
    "id": 4051,
    "declarations": "F: LINESEGMENT; f: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(F, f) = True"
},
{
    "assertion": "XCoordinate ( POINT: B ) equals NumIntersection ( CURVE: d, CURVE: O )",
    "id": 4052,
    "declarations": "B: POINT; d: CURVE; O: CURVE",
    "facts": "XCoordinate(B) = NumIntersection(d, O)"
},
{
    "assertion": "NumIntersection ( CURVE: u, CURVE: i ) equals NUMBER: 85",
    "id": 4053,
    "declarations": "u: CURVE; i: CURVE; 85: NUMBER",
    "facts": "NumIntersection(u, i) = 85"
},
{
    "assertion": "AngleOf ( POINT: Q, LowerVertex ( CONICSECTION: j ), POINT: l ) equals ApplyUnit ( XCoordinate ( LowerFocus ( CONICSECTION: k ) ), DEGREESTR: degree )",
    "id": 4054,
    "declarations": "Q: POINT; j: CONICSECTION; l: POINT; k: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(Q, LowerVertex(j), l) = ApplyUnit(XCoordinate(LowerFocus(k)), degree)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: L ) equals LINE: s",
    "id": 4055,
    "declarations": "L: HYPERBOLA; s: LINE",
    "facts": "Asymptote(L) = s"
},
{
    "assertion": "DotProduct ( VECTOR: e, VECTOR: m ) equals Min ( DotProduct ( VECTOR: p, VECTOR: F ) )",
    "id": 4056,
    "declarations": "e: VECTOR; m: VECTOR; p: VECTOR; F: VECTOR",
    "facts": "DotProduct(e, m) = Min(DotProduct(p, F))"
},
{
    "assertion": "Area ( CONICSECTION: Y ) equals Quadrant ( LeftFocus ( CONICSECTION: l ) )",
    "id": 4057,
    "declarations": "Y: CONICSECTION; l: CONICSECTION",
    "facts": "Area(Y) = Quadrant(LeftFocus(l))"
},
{
    "assertion": "IsInTangent ( CIRCLE: r, CIRCLE: u ) equals BOOL: True",
    "id": 4058,
    "declarations": "r: CIRCLE; u: CIRCLE; True: BOOL",
    "facts": "IsInTangent(r, u) = True"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: N ) ) equals POINT: O",
    "id": 4059,
    "declarations": "N: ELLIPSE; O: POINT",
    "facts": "Endpoint(ImaginaryAxis(N)) = O"
},
{
    "assertion": "IsDiameter ( LineSegmentOf ( POINT: S, FootPoint ( LINE: x, LINE: z ) ), CircumCircle ( TRIANGLE: S ) ) equals BOOL: True",
    "id": 4060,
    "declarations": "S: POINT; x: LINE; z: LINE; S: TRIANGLE; True: BOOL",
    "facts": "IsDiameter(LineSegmentOf(S, FootPoint(x, z)), CircumCircle(S)) = True"
},
{
    "assertion": "Perimeter ( CONICSECTION: y ) equals NUMBER: 20",
    "id": 4061,
    "declarations": "y: CONICSECTION; 20: NUMBER",
    "facts": "Perimeter(y) = 20"
},
{
    "assertion": "AngleOf ( POINT: J, POINT: i, LeftFocus ( CONICSECTION: f ) ) equals ApplyUnit ( lg ( Quadrant ( POINT: U ) ), DEGREESTR: degree )",
    "id": 4062,
    "declarations": "J: POINT; i: POINT; f: CONICSECTION; U: POINT; degree: DEGREESTR",
    "facts": "AngleOf(J, i, LeftFocus(f)) = ApplyUnit(lg(Quadrant(U)), degree)"
},
{
    "assertion": "Quadrant ( LowerFocus ( CONICSECTION: s ) ) equals NumIntersection ( CURVE: t, CURVE: h )",
    "id": 4063,
    "declarations": "s: CONICSECTION; t: CURVE; h: CURVE",
    "facts": "Quadrant(LowerFocus(s)) = NumIntersection(t, h)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: J ) equals UpperVertex ( CONICSECTION: K )",
    "id": 4064,
    "declarations": "J: CONICSECTION; K: CONICSECTION",
    "facts": "UpperFocus(J) = UpperVertex(K)"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: K ) ) equals LINE: N",
    "id": 4065,
    "declarations": "K: ELLIPSE; N: LINE",
    "facts": "PerpendicularBisector(ImaginaryAxis(K)) = N"
},
{
    "assertion": "LeftVertex ( CONICSECTION: H ) equals POINT: W",
    "id": 4066,
    "declarations": "H: CONICSECTION; W: POINT",
    "facts": "LeftVertex(H) = W"
},
{
    "assertion": "Eccentricity ( CONICSECTION: q ) equals HalfFocalLength ( CONICSECTION: O )",
    "id": 4067,
    "declarations": "q: CONICSECTION; O: CONICSECTION",
    "facts": "Eccentricity(q) = HalfFocalLength(O)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: F ) equals POINT: y",
    "id": 4068,
    "declarations": "F: CONICSECTION; y: POINT",
    "facts": "LowerVertex(F) = y"
},
{
    "assertion": "Locus ( Projection ( POINT: w, LINE: K ) ) equals CURVE: j",
    "id": 4069,
    "declarations": "w: POINT; K: LINE; j: CURVE",
    "facts": "Locus(Projection(w, K)) = j"
},
{
    "assertion": "LeftVertex ( CONICSECTION: m ) equals POINT: n",
    "id": 4070,
    "declarations": "m: CONICSECTION; n: POINT",
    "facts": "LeftVertex(m) = n"
},
{
    "assertion": "IsOutTangent ( CIRCLE: K, CIRCLE: A ) equals BOOL: True",
    "id": 4071,
    "declarations": "K: CIRCLE; A: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(K, A) = True"
},
{
    "assertion": "XCoordinate ( Center ( CONICSECTION: m ) ) equals lg ( InterReciprocal ( YCoordinate ( Orthocenter ( TRIANGLE: o ) ) ) )",
    "id": 4072,
    "declarations": "m: CONICSECTION; o: TRIANGLE",
    "facts": "XCoordinate(Center(m)) = lg(InterReciprocal(YCoordinate(Orthocenter(o))))"
},
{
    "assertion": "And ( LeftVertex ( CONICSECTION: Q ) equals LowerVertex ( CONICSECTION: h ), Eccentricity ( CONICSECTION: I ) equals Slope ( LINE: s ) ) equals BOOL: True",
    "id": 4073,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "YCoordinate ( LeftVertex ( CONICSECTION: a ) ) equals NUMBER: -55",
    "id": 4074,
    "declarations": "a: CONICSECTION; -55: NUMBER",
    "facts": "YCoordinate(LeftVertex(a)) = -55"
},
{
    "assertion": "LeftFocus ( CONICSECTION: H ) equals POINT: R",
    "id": 4075,
    "declarations": "H: CONICSECTION; R: POINT",
    "facts": "LeftFocus(H) = R"
},
{
    "assertion": "Center ( CONICSECTION: v ) equals MidPoint ( LINESEGMENT: G )",
    "id": 4076,
    "declarations": "v: CONICSECTION; G: LINESEGMENT",
    "facts": "Center(v) = MidPoint(G)"
},
{
    "assertion": "Negation ( LowerVertex ( CONICSECTION: e ) equals POINT: i ) equals BOOL: True",
    "id": 4077,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "FocalLength ( CONICSECTION: C ) equals DotProduct ( VECTOR: Y, VECTOR: Q )",
    "id": 4078,
    "declarations": "C: CONICSECTION; Y: VECTOR; Q: VECTOR",
    "facts": "FocalLength(C) = DotProduct(Y, Q)"
},
{
    "assertion": "Quadrant ( POINT: c ) equals YCoordinate ( RightVertex ( CONICSECTION: t ) )",
    "id": 4079,
    "declarations": "c: POINT; t: CONICSECTION",
    "facts": "Quadrant(c) = YCoordinate(RightVertex(t))"
},
{
    "assertion": "IsPerpendicular ( LINE: t, LineOf ( Circumcenter ( TRIANGLE: N ), Incenter ( TRIANGLE: z ) ) ) equals BOOL: False",
    "id": 4080,
    "declarations": "t: LINE; N: TRIANGLE; z: TRIANGLE; False: BOOL",
    "facts": "IsPerpendicular(t, LineOf(Circumcenter(N), Incenter(z))) = False"
},
{
    "assertion": "lg ( HalfFocalLength ( CONICSECTION: A ) ) equals sqrt ( NUMBER: 78 )",
    "id": 4081,
    "declarations": "A: CONICSECTION; 78: NUMBER",
    "facts": "lg(HalfFocalLength(A)) = sqrt(78)"
},
{
    "assertion": "sqrt ( NUMBER: 71 ) equals YCoordinate ( Center ( CONICSECTION: Z ) )",
    "id": 4082,
    "declarations": "71: NUMBER; Z: CONICSECTION",
    "facts": "sqrt(71) = YCoordinate(Center(Z))"
},
{
    "assertion": "IsParallel ( PerpendicularBisector ( LINESEGMENT: k ), LINE: T ) equals BOOL: False",
    "id": 4083,
    "declarations": "k: LINESEGMENT; T: LINE; False: BOOL",
    "facts": "IsParallel(PerpendicularBisector(k), T) = False"
},
{
    "assertion": "Orthocenter ( TRIANGLE: U ) equals POINT: g",
    "id": 4084,
    "declarations": "U: TRIANGLE; g: POINT",
    "facts": "Orthocenter(U) = g"
},
{
    "assertion": "OverlappingLine ( ImaginaryAxis ( ELLIPSE: T ) ) equals LINE: r",
    "id": 4085,
    "declarations": "T: ELLIPSE; r: LINE",
    "facts": "OverlappingLine(ImaginaryAxis(T)) = r"
},
{
    "assertion": "Length ( LINESEGMENT: S ) equals NUMBER: 54",
    "id": 4086,
    "declarations": "S: LINESEGMENT; 54: NUMBER",
    "facts": "Length(S) = 54"
},
{
    "assertion": "LeftFocus ( CONICSECTION: a ) equals POINT: C",
    "id": 4087,
    "declarations": "a: CONICSECTION; C: POINT",
    "facts": "LeftFocus(a) = C"
},
{
    "assertion": "FocalLength ( CONICSECTION: y ) equals NUMBER: 97",
    "id": 4088,
    "declarations": "y: CONICSECTION; 97: NUMBER",
    "facts": "FocalLength(y) = 97"
},
{
    "assertion": "LeftPart ( HYPERBOLA: G ) equals CURVE: x",
    "id": 4089,
    "declarations": "G: HYPERBOLA; x: CURVE",
    "facts": "LeftPart(G) = x"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: i ) equals MajorAxis ( ELLIPSE: p )",
    "id": 4090,
    "declarations": "i: ELLIPSE; p: ELLIPSE",
    "facts": "ImaginaryAxis(i) = MajorAxis(p)"
},
{
    "assertion": "Directrix ( CONICSECTION: I ) equals LINE: Q",
    "id": 4091,
    "declarations": "I: CONICSECTION; Q: LINE",
    "facts": "Directrix(I) = Q"
},
{
    "assertion": "Center ( CONICSECTION: I ) equals LowerVertex ( CONICSECTION: U )",
    "id": 4092,
    "declarations": "I: CONICSECTION; U: CONICSECTION",
    "facts": "Center(I) = LowerVertex(U)"
},
{
    "assertion": "Abs ( LineSegmentOf ( POINT: Q, POINT: L ) ) equals NUMBER: 68",
    "id": 4093,
    "declarations": "Q: POINT; L: POINT; 68: NUMBER",
    "facts": "Abs(LineSegmentOf(Q, L)) = 68"
},
{
    "assertion": "ApplyUnit ( NUMBER: 49, DEGREESTR: degree )",
    "id": 4094,
    "declarations": "49: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(49, degree) = None"
},
{
    "assertion": "IsIntersect ( CURVE: J, CURVE: q ) equals BOOL: True",
    "id": 4095,
    "declarations": "J: CURVE; q: CURVE; True: BOOL",
    "facts": "IsIntersect(J, q) = True"
},
{
    "assertion": "ApplyUnit ( Quadrant ( LowerVertex ( CONICSECTION: R ) ), DEGREESTR: degree )",
    "id": 4096,
    "declarations": "R: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Quadrant(LowerVertex(R)), degree) = None"
},
{
    "assertion": "Expression ( CURVE: V ) equals EXPRESSION: y*space=*spacex^3*space-*space4*x",
    "id": 4097,
    "declarations": "V: CURVE; y*space=*spacex^3*space-*space4*x: EXPRESSION",
    "facts": "Expression(V) = y*space=*spacex^3*space-*space4*x"
},
{
    "assertion": "Asymptote ( HYPERBOLA: F ) equals LINE: V",
    "id": 4098,
    "declarations": "F: HYPERBOLA; V: LINE",
    "facts": "Asymptote(F) = V"
},
{
    "assertion": "sqrt ( NUMBER: 79 ) equals NUMBER: -29",
    "id": 4099,
    "declarations": "79: NUMBER; -29: NUMBER",
    "facts": "sqrt(79) = -29"
},
{
    "assertion": "sqrt ( NUMBER: -67 ) equals NUMBER: 7",
    "id": 4100,
    "declarations": "-67: NUMBER; 7: NUMBER",
    "facts": "sqrt(-67) = 7"
},
{
    "assertion": "PointOnCurve ( POINT: c, CURVE: t ) equals BOOL: False",
    "id": 4101,
    "declarations": "c: POINT; t: CURVE; False: BOOL",
    "facts": "PointOnCurve(c, t) = False"
},
{
    "assertion": "Negation ( Intercept ( LINE: V, AXIS: xAxis ) equals YCoordinate ( POINT: Q ) ) equals BOOL: True",
    "id": 4102,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Coordinate ( Center ( CONICSECTION: v ) ) equals ( sqrt ( NUMBER: -65 ), Distance ( LeftFocus ( CONICSECTION: P ), POINT: h ) )",
    "id": 4103,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "FocalLength ( CONICSECTION: k ) equals Area ( CONICSECTION: w )",
    "id": 4104,
    "declarations": "k: CONICSECTION; w: CONICSECTION",
    "facts": "FocalLength(k) = Area(w)"
},
{
    "assertion": "Diameter ( CIRCLE: B ) equals Diameter ( CIRCLE: f )",
    "id": 4105,
    "declarations": "B: CIRCLE; f: CIRCLE",
    "facts": "Diameter(B) = Diameter(f)"
},
{
    "assertion": "InterceptChord ( LINE: v, CONICSECTION: w ) equals LINESEGMENT: q",
    "id": 4106,
    "declarations": "v: LINE; w: CONICSECTION; q: LINESEGMENT",
    "facts": "InterceptChord(v, w) = q"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: c ) equals AXIS: yAxis",
    "id": 4107,
    "declarations": "c: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(c) = yAxis"
},
{
    "assertion": "RightVertex ( CONICSECTION: b ) equals Center ( CONICSECTION: y )",
    "id": 4108,
    "declarations": "b: CONICSECTION; y: CONICSECTION",
    "facts": "RightVertex(b) = Center(y)"
},
{
    "assertion": "Area ( CONICSECTION: j ) equals NUMBER: -37",
    "id": 4109,
    "declarations": "j: CONICSECTION; -37: NUMBER",
    "facts": "Area(j) = -37"
},
{
    "assertion": "Diameter ( CIRCLE: Q ) equals NUMBER: 49",
    "id": 4110,
    "declarations": "Q: CIRCLE; 49: NUMBER",
    "facts": "Diameter(Q) = 49"
},
{
    "assertion": "TangentPoint ( LINE: Q, CIRCLE: A ) equals LowerFocus ( CONICSECTION: G )",
    "id": 4111,
    "declarations": "Q: LINE; A: CIRCLE; G: CONICSECTION",
    "facts": "TangentPoint(Q, A) = LowerFocus(G)"
},
{
    "assertion": "Slope ( LINE: Y ) equals Min ( NUMBER: 60 )",
    "id": 4112,
    "declarations": "Y: LINE; 60: NUMBER",
    "facts": "Slope(Y) = Min(60)"
},
{
    "assertion": "Negation ( LeftFocus ( CONICSECTION: k ) equals POINT: m ) equals BOOL: False",
    "id": 4113,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Slope ( LINE: f ) equals Length ( LINESEGMENT: o )",
    "id": 4114,
    "declarations": "f: LINE; o: LINESEGMENT",
    "facts": "Slope(f) = Length(o)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: E, TRIANGLE: O ) equals BOOL: True",
    "id": 4115,
    "declarations": "E: CIRCLE; O: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(E, O) = True"
},
{
    "assertion": "Min ( YCoordinate ( UpperFocus ( CONICSECTION: W ) ) ) equals NUMBER: -21",
    "id": 4116,
    "declarations": "W: CONICSECTION; -21: NUMBER",
    "facts": "Min(YCoordinate(UpperFocus(W))) = -21"
},
{
    "assertion": "Vertex ( CONICSECTION: E ) equals POINT: L",
    "id": 4117,
    "declarations": "E: CONICSECTION; L: POINT",
    "facts": "Vertex(E) = L"
},
{
    "assertion": "Endpoint ( LINESEGMENT: S ) equals RightVertex ( CONICSECTION: K )",
    "id": 4118,
    "declarations": "S: LINESEGMENT; K: CONICSECTION",
    "facts": "Endpoint(S) = RightVertex(K)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: F ) equals POINT: V",
    "id": 4119,
    "declarations": "F: CONICSECTION; V: POINT",
    "facts": "LeftVertex(F) = V"
},
{
    "assertion": "Focus ( CONICSECTION: L ) equals Circumcenter ( TRIANGLE: P )",
    "id": 4120,
    "declarations": "L: CONICSECTION; P: TRIANGLE",
    "facts": "Focus(L) = Circumcenter(P)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: E ) equals Orthocenter ( TriangleOf ( Incenter ( TRIANGLE: i ), LowerFocus ( CONICSECTION: q ), LeftFocus ( CONICSECTION: K ) ) )",
    "id": 4121,
    "declarations": "E: CONICSECTION; i: TRIANGLE; q: CONICSECTION; K: CONICSECTION",
    "facts": "UpperFocus(E) = Orthocenter(TriangleOf(Incenter(i), LowerFocus(q), LeftFocus(K)))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: c ) equals CIRCLE: T",
    "id": 4122,
    "declarations": "c: TRIANGLE; T: CIRCLE",
    "facts": "CircumCircle(c) = T"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: H ) equals LINE: w",
    "id": 4123,
    "declarations": "H: CONICSECTION; w: LINE",
    "facts": "RightDirectrix(H) = w"
},
{
    "assertion": "Vertex ( CONICSECTION: L ) equals Orthocenter ( TRIANGLE: u )",
    "id": 4124,
    "declarations": "L: CONICSECTION; u: TRIANGLE",
    "facts": "Vertex(L) = Orthocenter(u)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: m ) equals LINE: i",
    "id": 4125,
    "declarations": "m: CONICSECTION; i: LINE",
    "facts": "LeftDirectrix(m) = i"
},
{
    "assertion": "IsDiameter ( ImaginaryAxis ( ELLIPSE: g ), CIRCLE: K ) equals BOOL: False",
    "id": 4126,
    "declarations": "g: ELLIPSE; K: CIRCLE; False: BOOL",
    "facts": "IsDiameter(ImaginaryAxis(g), K) = False"
},
{
    "assertion": "Distance ( LowerVertex ( CONICSECTION: q ), Orthocenter ( TRIANGLE: v ) ) equals Inclination ( LINE: z )",
    "id": 4127,
    "declarations": "q: CONICSECTION; v: TRIANGLE; z: LINE",
    "facts": "Distance(LowerVertex(q), Orthocenter(v)) = Inclination(z)"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: j ) ) equals LINE: I",
    "id": 4128,
    "declarations": "j: ELLIPSE; I: LINE",
    "facts": "OverlappingLine(MinorAxis(j)) = I"
},
{
    "assertion": "Between ( POINT: M, Projection ( POINT: p, LINE: m ), POINT: o ) equals BOOL: False",
    "id": 4129,
    "declarations": "M: POINT; p: POINT; m: LINE; o: POINT; False: BOOL",
    "facts": "Between(M, Projection(p, m), o) = False"
},
{
    "assertion": "IsParallel ( LINE: p, LINE: Z ) equals BOOL: False",
    "id": 4130,
    "declarations": "p: LINE; Z: LINE; False: BOOL",
    "facts": "IsParallel(p, Z) = False"
},
{
    "assertion": "LeftPart ( HYPERBOLA: r ) equals CURVE: z",
    "id": 4131,
    "declarations": "r: HYPERBOLA; z: CURVE",
    "facts": "LeftPart(r) = z"
},
{
    "assertion": "Center ( CONICSECTION: I ) equals POINT: m",
    "id": 4132,
    "declarations": "I: CONICSECTION; m: POINT",
    "facts": "Center(I) = m"
},
{
    "assertion": "CircumCircle ( TRIANGLE: a ) equals CIRCLE: j",
    "id": 4133,
    "declarations": "a: TRIANGLE; j: CIRCLE",
    "facts": "CircumCircle(a) = j"
},
{
    "assertion": "InterReciprocal ( NUMBER: 55 ) equals NUMBER: -10",
    "id": 4134,
    "declarations": "55: NUMBER; -10: NUMBER",
    "facts": "InterReciprocal(55) = -10"
},
{
    "assertion": "RightPart ( HYPERBOLA: w ) equals CURVE: N",
    "id": 4135,
    "declarations": "w: HYPERBOLA; N: CURVE",
    "facts": "RightPart(w) = N"
},
{
    "assertion": "Intersection ( CURVE: U, CURVE: p ) equals Incenter ( TRIANGLE: N )",
    "id": 4136,
    "declarations": "U: CURVE; p: CURVE; N: TRIANGLE",
    "facts": "Intersection(U, p) = Incenter(N)"
},
{
    "assertion": "FootPoint ( LINE: N, LINE: y ) equals Projection ( RightVertex ( CONICSECTION: A ), OverlappingLine ( LINESEGMENT: h ) )",
    "id": 4137,
    "declarations": "N: LINE; y: LINE; A: CONICSECTION; h: LINESEGMENT",
    "facts": "FootPoint(N, y) = Projection(RightVertex(A), OverlappingLine(h))"
},
{
    "assertion": "IsTangent ( LINE: r, CONICSECTION: l ) equals BOOL: False",
    "id": 4138,
    "declarations": "r: LINE; l: CONICSECTION; False: BOOL",
    "facts": "IsTangent(r, l) = False"
},
{
    "assertion": "Abs ( LINESEGMENT: U ) equals Eccentricity ( CONICSECTION: w )",
    "id": 4139,
    "declarations": "U: LINESEGMENT; w: CONICSECTION",
    "facts": "Abs(U) = Eccentricity(w)"
},
{
    "assertion": "IsInTangent ( CIRCLE: g, CIRCLE: W ) equals BOOL: True",
    "id": 4140,
    "declarations": "g: CIRCLE; W: CIRCLE; True: BOOL",
    "facts": "IsInTangent(g, W) = True"
},
{
    "assertion": "UpperFocus ( CONICSECTION: o ) equals POINT: Z",
    "id": 4141,
    "declarations": "o: CONICSECTION; Z: POINT",
    "facts": "UpperFocus(o) = Z"
},
{
    "assertion": "LeftFocus ( CONICSECTION: W ) equals UpperVertex ( CONICSECTION: a )",
    "id": 4142,
    "declarations": "W: CONICSECTION; a: CONICSECTION",
    "facts": "LeftFocus(W) = UpperVertex(a)"
},
{
    "assertion": "IsPerpendicular ( LINE: G, LINE: H ) equals BOOL: True",
    "id": 4143,
    "declarations": "G: LINE; H: LINE; True: BOOL",
    "facts": "IsPerpendicular(G, H) = True"
},
{
    "assertion": "Min ( NUMBER: 65 ) equals InterReciprocal ( FocalLength ( CONICSECTION: i ) )",
    "id": 4144,
    "declarations": "65: NUMBER; i: CONICSECTION",
    "facts": "Min(65) = InterReciprocal(FocalLength(i))"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: j ) equals RightDirectrix ( CONICSECTION: j )",
    "id": 4145,
    "declarations": "j: CONICSECTION; j: CONICSECTION",
    "facts": "LeftDirectrix(j) = RightDirectrix(j)"
},
{
    "assertion": "RightPart ( HYPERBOLA: T ) equals CURVE: M",
    "id": 4146,
    "declarations": "T: HYPERBOLA; M: CURVE",
    "facts": "RightPart(T) = M"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: I ) equals LINE: P",
    "id": 4147,
    "declarations": "I: CONICSECTION; P: LINE",
    "facts": "RightDirectrix(I) = P"
},
{
    "assertion": "Intercept ( LINE: a, AXIS: xAxis ) equals NUMBER: 16",
    "id": 4148,
    "declarations": "a: LINE; xAxis: AXIS; 16: NUMBER",
    "facts": "Intercept(a, xAxis) = 16"
},
{
    "assertion": "RightFocus ( CONICSECTION: b ) equals POINT: B",
    "id": 4149,
    "declarations": "b: CONICSECTION; B: POINT",
    "facts": "RightFocus(b) = B"
},
{
    "assertion": "RightPart ( HYPERBOLA: J ) equals CURVE: N",
    "id": 4150,
    "declarations": "J: HYPERBOLA; N: CURVE",
    "facts": "RightPart(J) = N"
},
{
    "assertion": "ApplyUnit ( NUMBER: -26, DEGREESTR: degree )",
    "id": 4151,
    "declarations": "-26: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-26, degree) = None"
},
{
    "assertion": "UpperFocus ( CONICSECTION: F ) equals Orthocenter ( TRIANGLE: d )",
    "id": 4152,
    "declarations": "F: CONICSECTION; d: TRIANGLE",
    "facts": "UpperFocus(F) = Orthocenter(d)"
},
{
    "assertion": "XCoordinate ( Incenter ( TRIANGLE: O ) ) equals HalfFocalLength ( CONICSECTION: r )",
    "id": 4153,
    "declarations": "O: TRIANGLE; r: CONICSECTION",
    "facts": "XCoordinate(Incenter(O)) = HalfFocalLength(r)"
},
{
    "assertion": "Locus ( RightVertex ( CONICSECTION: a ) ) equals CURVE: x",
    "id": 4154,
    "declarations": "a: CONICSECTION; x: CURVE",
    "facts": "Locus(RightVertex(a)) = x"
},
{
    "assertion": "Negation ( Inclination ( LineOf ( POINT: F, POINT: p ) ) equals NumIntersection ( CURVE: E, CURVE: B ) ) equals BOOL: True",
    "id": 4155,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "XCoordinate ( LowerFocus ( CONICSECTION: N ) ) equals NUMBER: -72",
    "id": 4156,
    "declarations": "N: CONICSECTION; -72: NUMBER",
    "facts": "XCoordinate(LowerFocus(N)) = -72"
},
{
    "assertion": "RightVertex ( CONICSECTION: M ) equals POINT: z",
    "id": 4157,
    "declarations": "M: CONICSECTION; z: POINT",
    "facts": "RightVertex(M) = z"
},
{
    "assertion": "XCoordinate ( Incenter ( TRIANGLE: P ) ) equals Slope ( LINE: w )",
    "id": 4158,
    "declarations": "P: TRIANGLE; w: LINE",
    "facts": "XCoordinate(Incenter(P)) = Slope(w)"
},
{
    "assertion": "TangentOfPoint ( Circumcenter ( TRIANGLE: N ), RightPart ( HYPERBOLA: q ) ) equals LINE: J",
    "id": 4159,
    "declarations": "N: TRIANGLE; q: HYPERBOLA; J: LINE",
    "facts": "TangentOfPoint(Circumcenter(N), RightPart(q)) = J"
},
{
    "assertion": "Distance ( RightVertex ( CONICSECTION: h ), Orthocenter ( TRIANGLE: X ) ) equals YCoordinate ( Orthocenter ( TRIANGLE: H ) )",
    "id": 4160,
    "declarations": "h: CONICSECTION; X: TRIANGLE; H: TRIANGLE",
    "facts": "Distance(RightVertex(h), Orthocenter(X)) = YCoordinate(Orthocenter(H))"
},
{
    "assertion": "IsDiameter ( LineSegmentOf ( POINT: b, LeftVertex ( CONICSECTION: J ) ), CIRCLE: R ) equals BOOL: True",
    "id": 4161,
    "declarations": "b: POINT; J: CONICSECTION; R: CIRCLE; True: BOOL",
    "facts": "IsDiameter(LineSegmentOf(b, LeftVertex(J)), R) = True"
},
{
    "assertion": "AngleOf ( RightVertex ( CONICSECTION: q ), POINT: a, RightFocus ( CONICSECTION: o ) ) equals AngleOf ( RightVertex ( CONICSECTION: c ), LeftVertex ( CONICSECTION: D ), RightFocus ( CONICSECTION: l ) )",
    "id": 4162,
    "declarations": "q: CONICSECTION; a: POINT; o: CONICSECTION; c: CONICSECTION; D: CONICSECTION; l: CONICSECTION",
    "facts": "AngleOf(RightVertex(q), a, RightFocus(o)) = AngleOf(RightVertex(c), LeftVertex(D), RightFocus(l))"
},
{
    "assertion": "Vertex ( CONICSECTION: X ) equals Circumcenter ( TRIANGLE: V )",
    "id": 4163,
    "declarations": "X: CONICSECTION; V: TRIANGLE",
    "facts": "Vertex(X) = Circumcenter(V)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: s ) equals AXIS: xAxis",
    "id": 4164,
    "declarations": "s: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(s) = xAxis"
},
{
    "assertion": "DotProduct ( VECTOR: c, VECTOR: X ) equals NUMBER: -57",
    "id": 4165,
    "declarations": "c: VECTOR; X: VECTOR; -57: NUMBER",
    "facts": "DotProduct(c, X) = -57"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: O ) equals LineOf ( Projection ( POINT: f, LeftDirectrix ( CONICSECTION: V ) ), POINT: G )",
    "id": 4166,
    "declarations": "O: CONICSECTION; f: POINT; V: CONICSECTION; G: POINT",
    "facts": "LeftDirectrix(O) = LineOf(Projection(f, LeftDirectrix(V)), G)"
},
{
    "assertion": "Expression ( CURVE: x ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 4167,
    "declarations": "x: CURVE; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(x) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "Locus ( POINT: L ) equals CURVE: F",
    "id": 4168,
    "declarations": "L: POINT; F: CURVE",
    "facts": "Locus(L) = F"
},
{
    "assertion": "LeftPart ( HYPERBOLA: M ) equals CURVE: K",
    "id": 4169,
    "declarations": "M: HYPERBOLA; K: CURVE",
    "facts": "LeftPart(M) = K"
},
{
    "assertion": "LeftVertex ( CONICSECTION: F ) equals POINT: g",
    "id": 4170,
    "declarations": "F: CONICSECTION; g: POINT",
    "facts": "LeftVertex(F) = g"
},
{
    "assertion": "lg ( lg ( Inclination ( LINE: j ) ) ) equals NUMBER: 17",
    "id": 4171,
    "declarations": "j: LINE; 17: NUMBER",
    "facts": "lg(lg(Inclination(j))) = 17"
},
{
    "assertion": "Perimeter ( CONICSECTION: O ) equals NUMBER: -59",
    "id": 4172,
    "declarations": "O: CONICSECTION; -59: NUMBER",
    "facts": "Perimeter(O) = -59"
},
{
    "assertion": "Diameter ( CIRCLE: w ) equals NUMBER: -34",
    "id": 4173,
    "declarations": "w: CIRCLE; -34: NUMBER",
    "facts": "Diameter(w) = -34"
},
{
    "assertion": "Quadrant ( RightVertex ( CONICSECTION: d ) ) equals Inclination ( LINE: i )",
    "id": 4174,
    "declarations": "d: CONICSECTION; i: LINE",
    "facts": "Quadrant(RightVertex(d)) = Inclination(i)"
},
{
    "assertion": "lg ( NUMBER: -72 ) equals Eccentricity ( CONICSECTION: O )",
    "id": 4175,
    "declarations": "-72: NUMBER; O: CONICSECTION",
    "facts": "lg(-72) = Eccentricity(O)"
},
{
    "assertion": "IsTangent ( PerpendicularBisector ( LINESEGMENT: S ), CONICSECTION: E ) equals BOOL: True",
    "id": 4176,
    "declarations": "S: LINESEGMENT; E: CONICSECTION; True: BOOL",
    "facts": "IsTangent(PerpendicularBisector(S), E) = True"
},
{
    "assertion": "DotProduct ( VECTOR: y, VECTOR: x ) equals Abs ( LINESEGMENT: N )",
    "id": 4177,
    "declarations": "y: VECTOR; x: VECTOR; N: LINESEGMENT",
    "facts": "DotProduct(y, x) = Abs(N)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: K ) equals FootPoint ( LeftDirectrix ( CONICSECTION: f ), OverlappingLine ( LINESEGMENT: a ) )",
    "id": 4178,
    "declarations": "K: LINESEGMENT; f: CONICSECTION; a: LINESEGMENT",
    "facts": "MidPoint(K) = FootPoint(LeftDirectrix(f), OverlappingLine(a))"
},
{
    "assertion": "Min ( NUMBER: 58 ) equals Perimeter ( CONICSECTION: K )",
    "id": 4179,
    "declarations": "58: NUMBER; K: CONICSECTION",
    "facts": "Min(58) = Perimeter(K)"
},
{
    "assertion": "Negation ( Between ( Circumcenter ( TRIANGLE: h ), LowerVertex ( CONICSECTION: c ), Incenter ( TRIANGLE: R ) ) equals BOOL: False ) equals BOOL: True",
    "id": 4180,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Max ( Slope ( LINE: G ) ) equals lg ( Diameter ( CIRCLE: h ) )",
    "id": 4181,
    "declarations": "G: LINE; h: CIRCLE",
    "facts": "Max(Slope(G)) = lg(Diameter(h))"
},
{
    "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: H ) ) equals HalfFocalLength ( CONICSECTION: H )",
    "id": 4182,
    "declarations": "H: CONICSECTION; H: CONICSECTION",
    "facts": "XCoordinate(UpperVertex(H)) = HalfFocalLength(H)"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: U ) ) equals NUMBER: -92",
    "id": 4183,
    "declarations": "U: CONICSECTION; -92: NUMBER",
    "facts": "XCoordinate(LeftFocus(U)) = -92"
},
{
    "assertion": "Length ( RealAxis ( ELLIPSE: w ) ) equals NUMBER: 99",
    "id": 4184,
    "declarations": "w: ELLIPSE; 99: NUMBER",
    "facts": "Length(RealAxis(w)) = 99"
},
{
    "assertion": "Max ( DotProduct ( VECTOR: C, VECTOR: X ) ) equals Quadrant ( Orthocenter ( TRIANGLE: o ) )",
    "id": 4185,
    "declarations": "C: VECTOR; X: VECTOR; o: TRIANGLE",
    "facts": "Max(DotProduct(C, X)) = Quadrant(Orthocenter(o))"
},
{
    "assertion": "ApplyUnit ( NUMBER: 83, DEGREESTR: degree )",
    "id": 4186,
    "declarations": "83: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(83, degree) = None"
},
{
    "assertion": "Focus ( CONICSECTION: L ) equals UpperVertex ( CONICSECTION: a )",
    "id": 4187,
    "declarations": "L: CONICSECTION; a: CONICSECTION",
    "facts": "Focus(L) = UpperVertex(a)"
},
{
    "assertion": "FocalLength ( CONICSECTION: i ) equals FocalLength ( CONICSECTION: w )",
    "id": 4188,
    "declarations": "i: CONICSECTION; w: CONICSECTION",
    "facts": "FocalLength(i) = FocalLength(w)"
},
{
    "assertion": "lg ( Eccentricity ( CONICSECTION: G ) ) equals Area ( CONICSECTION: q )",
    "id": 4189,
    "declarations": "G: CONICSECTION; q: CONICSECTION",
    "facts": "lg(Eccentricity(G)) = Area(q)"
},
{
    "assertion": "Negation ( ApplyUnit ( Length ( RealAxis ( ELLIPSE: f ) ), DEGREESTR: degree ) ) equals BOOL: True",
    "id": 4190,
    "declarations": "f: ELLIPSE; degree: DEGREESTR; True: BOOL",
    "facts": "Negation(ApplyUnit(Length(RealAxis(f)), degree)) = True"
},
{
    "assertion": "IsIntersect ( CURVE: F, CURVE: R ) equals BOOL: True",
    "id": 4191,
    "declarations": "F: CURVE; R: CURVE; True: BOOL",
    "facts": "IsIntersect(F, R) = True"
},
{
    "assertion": "Asymptote ( HYPERBOLA: Q ) equals LineOf ( UpperVertex ( CONICSECTION: E ), MidPoint ( LINESEGMENT: Q ) )",
    "id": 4192,
    "declarations": "Q: HYPERBOLA; E: CONICSECTION; Q: LINESEGMENT",
    "facts": "Asymptote(Q) = LineOf(UpperVertex(E), MidPoint(Q))"
},
{
    "assertion": "Area ( CONICSECTION: d ) equals Quadrant ( MidPoint ( RealAxis ( ELLIPSE: y ) ) )",
    "id": 4193,
    "declarations": "d: CONICSECTION; y: ELLIPSE",
    "facts": "Area(d) = Quadrant(MidPoint(RealAxis(y)))"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: F, CONICSECTION: q ) equals BOOL: False",
    "id": 4194,
    "declarations": "F: LINESEGMENT; q: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(F, q) = False"
},
{
    "assertion": "CircumCircle ( TRIANGLE: u ) equals CIRCLE: N",
    "id": 4195,
    "declarations": "u: TRIANGLE; N: CIRCLE",
    "facts": "CircumCircle(u) = N"
},
{
    "assertion": "FocalLength ( CONICSECTION: M ) equals NUMBER: -28",
    "id": 4196,
    "declarations": "M: CONICSECTION; -28: NUMBER",
    "facts": "FocalLength(M) = -28"
},
{
    "assertion": "sqrt ( Min ( Diameter ( CIRCLE: Q ) ) ) equals Min ( Eccentricity ( CONICSECTION: H ) )",
    "id": 4197,
    "declarations": "Q: CIRCLE; H: CONICSECTION",
    "facts": "sqrt(Min(Diameter(Q))) = Min(Eccentricity(H))"
},
{
    "assertion": "Expression ( CURVE: b ) equals LocusEquation ( Orthocenter ( TRIANGLE: a ) )",
    "id": 4198,
    "declarations": "b: CURVE; a: TRIANGLE",
    "facts": "Expression(b) = LocusEquation(Orthocenter(a))"
},
{
    "assertion": "IsParallel ( LINE: S, LINE: f ) equals BOOL: False",
    "id": 4199,
    "declarations": "S: LINE; f: LINE; False: BOOL",
    "facts": "IsParallel(S, f) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: V, TRIANGLE: l ) equals BOOL: True",
    "id": 4200,
    "declarations": "V: CIRCLE; l: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(V, l) = True"
},
{
    "assertion": "NumIntersection ( CURVE: z, CURVE: G ) equals Inclination ( LINE: E )",
    "id": 4201,
    "declarations": "z: CURVE; G: CURVE; E: LINE",
    "facts": "NumIntersection(z, G) = Inclination(E)"
},
{
    "assertion": "TangentPoint ( LINE: j, CIRCLE: y ) equals UpperVertex ( CONICSECTION: s )",
    "id": 4202,
    "declarations": "j: LINE; y: CIRCLE; s: CONICSECTION",
    "facts": "TangentPoint(j, y) = UpperVertex(s)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: G ) equals NUMBER: 61",
    "id": 4203,
    "declarations": "G: CONICSECTION; 61: NUMBER",
    "facts": "HalfFocalLength(G) = 61"
},
{
    "assertion": "Length ( LINESEGMENT: R ) equals HalfFocalLength ( CONICSECTION: c )",
    "id": 4204,
    "declarations": "R: LINESEGMENT; c: CONICSECTION",
    "facts": "Length(R) = HalfFocalLength(c)"
},
{
    "assertion": "IsParallel ( LINE: r, RightDirectrix ( CONICSECTION: q ) ) equals BOOL: False",
    "id": 4205,
    "declarations": "r: LINE; q: CONICSECTION; False: BOOL",
    "facts": "IsParallel(r, RightDirectrix(q)) = False"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: o ) equals AXIS: yAxis",
    "id": 4206,
    "declarations": "o: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(o) = yAxis"
},
{
    "assertion": "RightVertex ( CONICSECTION: b ) equals RightFocus ( CONICSECTION: S )",
    "id": 4207,
    "declarations": "b: CONICSECTION; S: CONICSECTION",
    "facts": "RightVertex(b) = RightFocus(S)"
},
{
    "assertion": "Abs ( LINESEGMENT: l ) equals NUMBER: 41",
    "id": 4208,
    "declarations": "l: LINESEGMENT; 41: NUMBER",
    "facts": "Abs(l) = 41"
},
{
    "assertion": "RealAxis ( ELLIPSE: t ) equals LINESEGMENT: n",
    "id": 4209,
    "declarations": "t: ELLIPSE; n: LINESEGMENT",
    "facts": "RealAxis(t) = n"
},
{
    "assertion": "UpperFocus ( CONICSECTION: K ) equals MidPoint ( RealAxis ( ELLIPSE: E ) )",
    "id": 4210,
    "declarations": "K: CONICSECTION; E: ELLIPSE",
    "facts": "UpperFocus(K) = MidPoint(RealAxis(E))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: e, TRIANGLE: b ) equals BOOL: True",
    "id": 4211,
    "declarations": "e: CIRCLE; b: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(e, b) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: c ) equals Circumcenter ( TRIANGLE: h )",
    "id": 4212,
    "declarations": "c: CONICSECTION; h: TRIANGLE",
    "facts": "LeftVertex(c) = Circumcenter(h)"
},
{
    "assertion": "Area ( CONICSECTION: B ) equals Perimeter ( CONICSECTION: x )",
    "id": 4213,
    "declarations": "B: CONICSECTION; x: CONICSECTION",
    "facts": "Area(B) = Perimeter(x)"
},
{
    "assertion": "ApplyUnit ( Min ( Quadrant ( RightVertex ( CONICSECTION: a ) ) ), DEGREESTR: degree )",
    "id": 4214,
    "declarations": "a: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Min(Quadrant(RightVertex(a))), degree) = None"
},
{
    "assertion": "LineOf ( LowerVertex ( CONICSECTION: I ), POINT: Z ) equals LeftDirectrix ( CONICSECTION: c )",
    "id": 4215,
    "declarations": "I: CONICSECTION; Z: POINT; c: CONICSECTION",
    "facts": "LineOf(LowerVertex(I), Z) = LeftDirectrix(c)"
},
{
    "assertion": "Directrix ( CONICSECTION: f ) equals LINE: i",
    "id": 4216,
    "declarations": "f: CONICSECTION; i: LINE",
    "facts": "Directrix(f) = i"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: P ) equals LINE: x",
    "id": 4217,
    "declarations": "P: LINESEGMENT; x: LINE",
    "facts": "OverlappingLine(P) = x"
},
{
    "assertion": "Radius ( CIRCLE: r ) equals Min ( Radius ( CIRCLE: e ) )",
    "id": 4218,
    "declarations": "r: CIRCLE; e: CIRCLE",
    "facts": "Radius(r) = Min(Radius(e))"
},
{
    "assertion": "And ( UpperVertex ( CONICSECTION: q ) equals POINT: N, IsTangent ( LineOf ( RightFocus ( CONICSECTION: j ), RightVertex ( CONICSECTION: A ) ), CONICSECTION: l ) equals BOOL: False ) equals BOOL: False",
    "id": 4219,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsPerpendicular ( PerpendicularBisector ( LINESEGMENT: F ), LINE: r ) equals BOOL: False",
    "id": 4220,
    "declarations": "F: LINESEGMENT; r: LINE; False: BOOL",
    "facts": "IsPerpendicular(PerpendicularBisector(F), r) = False"
},
{
    "assertion": "MajorAxis ( ELLIPSE: a ) equals ImaginaryAxis ( ELLIPSE: W )",
    "id": 4221,
    "declarations": "a: ELLIPSE; W: ELLIPSE",
    "facts": "MajorAxis(a) = ImaginaryAxis(W)"
},
{
    "assertion": "TangentOfPoint ( LowerVertex ( CONICSECTION: A ), CURVE: q ) equals LINE: T",
    "id": 4222,
    "declarations": "A: CONICSECTION; q: CURVE; T: LINE",
    "facts": "TangentOfPoint(LowerVertex(A), q) = T"
},
{
    "assertion": "FocalLength ( CONICSECTION: K ) equals Diameter ( CIRCLE: d )",
    "id": 4223,
    "declarations": "K: CONICSECTION; d: CIRCLE",
    "facts": "FocalLength(K) = Diameter(d)"
},
{
    "assertion": "Center ( CONICSECTION: V ) equals POINT: S",
    "id": 4224,
    "declarations": "V: CONICSECTION; S: POINT",
    "facts": "Center(V) = S"
},
{
    "assertion": "RightPart ( HYPERBOLA: K ) equals Locus ( POINT: g )",
    "id": 4225,
    "declarations": "K: HYPERBOLA; g: POINT",
    "facts": "RightPart(K) = Locus(g)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: X ) equals Distance ( POINT: q, Circumcenter ( TRIANGLE: W ) )",
    "id": 4226,
    "declarations": "X: CONICSECTION; q: POINT; W: TRIANGLE",
    "facts": "HalfFocalLength(X) = Distance(q, Circumcenter(W))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: t ) equals NUMBER: 2",
    "id": 4227,
    "declarations": "t: CONICSECTION; 2: NUMBER",
    "facts": "Eccentricity(t) = 2"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: a ) equals HalfFocalLength ( CONICSECTION: L )",
    "id": 4228,
    "declarations": "a: CONICSECTION; L: CONICSECTION",
    "facts": "HalfFocalLength(a) = HalfFocalLength(L)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: m ) equals LINE: k",
    "id": 4229,
    "declarations": "m: CONICSECTION; k: LINE",
    "facts": "RightDirectrix(m) = k"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: L, CONICSECTION: U ) equals BOOL: True",
    "id": 4230,
    "declarations": "L: LINESEGMENT; U: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(L, U) = True"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: z ) equals LINE: Q",
    "id": 4231,
    "declarations": "z: CONICSECTION; Q: LINE",
    "facts": "LeftDirectrix(z) = Q"
},
{
    "assertion": "UpperVertex ( CONICSECTION: u ) equals Center ( CONICSECTION: B )",
    "id": 4232,
    "declarations": "u: CONICSECTION; B: CONICSECTION",
    "facts": "UpperVertex(u) = Center(B)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: F, CONICSECTION: W ) equals BOOL: True",
    "id": 4233,
    "declarations": "F: LINESEGMENT; W: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(F, W) = True"
},
{
    "assertion": "TriangleOf ( UpperVertex ( CONICSECTION: f ), POINT: Y, MidPoint ( RealAxis ( ELLIPSE: d ) ) ) equals TRIANGLE: F",
    "id": 4234,
    "declarations": "f: CONICSECTION; Y: POINT; d: ELLIPSE; F: TRIANGLE",
    "facts": "TriangleOf(UpperVertex(f), Y, MidPoint(RealAxis(d))) = F"
},
{
    "assertion": "Locus ( LeftVertex ( CONICSECTION: m ) ) equals RightPart ( HYPERBOLA: s )",
    "id": 4235,
    "declarations": "m: CONICSECTION; s: HYPERBOLA",
    "facts": "Locus(LeftVertex(m)) = RightPart(s)"
},
{
    "assertion": "Locus ( POINT: N ) equals CURVE: Q",
    "id": 4236,
    "declarations": "N: POINT; Q: CURVE",
    "facts": "Locus(N) = Q"
},
{
    "assertion": "LineOf ( Orthocenter ( TRIANGLE: k ), POINT: X ) equals LINE: i",
    "id": 4237,
    "declarations": "k: TRIANGLE; X: POINT; i: LINE",
    "facts": "LineOf(Orthocenter(k), X) = i"
},
{
    "assertion": "And ( Diameter ( CIRCLE: r ) equals XCoordinate ( Incenter ( TRIANGLE: k ) ), IsIntersect ( CURVE: V, CURVE: O ) equals BOOL: False ) equals BOOL: False",
    "id": 4238,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "TangentOfPoint ( Circumcenter ( TRIANGLE: M ), CURVE: A ) equals LINE: Q",
    "id": 4239,
    "declarations": "M: TRIANGLE; A: CURVE; Q: LINE",
    "facts": "TangentOfPoint(Circumcenter(M), A) = Q"
},
{
    "assertion": "InterceptChord ( LINE: D, CONICSECTION: a ) equals LINESEGMENT: p",
    "id": 4240,
    "declarations": "D: LINE; a: CONICSECTION; p: LINESEGMENT",
    "facts": "InterceptChord(D, a) = p"
},
{
    "assertion": "IsIntersect ( CURVE: z, CURVE: r ) equals BOOL: True",
    "id": 4241,
    "declarations": "z: CURVE; r: CURVE; True: BOOL",
    "facts": "IsIntersect(z, r) = True"
},
{
    "assertion": "TangentOnPoint ( POINT: d, LeftPart ( HYPERBOLA: o ) ) equals PerpendicularBisector ( InterceptChord ( LINE: L, CONICSECTION: H ) )",
    "id": 4242,
    "declarations": "d: POINT; o: HYPERBOLA; L: LINE; H: CONICSECTION",
    "facts": "TangentOnPoint(d, LeftPart(o)) = PerpendicularBisector(InterceptChord(L, H))"
},
{
    "assertion": "Area ( CONICSECTION: A ) equals NUMBER: 24",
    "id": 4243,
    "declarations": "A: CONICSECTION; 24: NUMBER",
    "facts": "Area(A) = 24"
},
{
    "assertion": "CircumCircle ( TRIANGLE: H ) equals CIRCLE: j",
    "id": 4244,
    "declarations": "H: TRIANGLE; j: CIRCLE",
    "facts": "CircumCircle(H) = j"
},
{
    "assertion": "ApplyUnit ( Inclination ( LINE: h ), DEGREESTR: degree )",
    "id": 4245,
    "declarations": "h: LINE; degree: DEGREESTR",
    "facts": "ApplyUnit(Inclination(h), degree) = None"
},
{
    "assertion": "Circumcenter ( TRIANGLE: W ) equals FootPoint ( LINE: S, TangentOfPoint ( UpperVertex ( CONICSECTION: F ), CURVE: O ) )",
    "id": 4246,
    "declarations": "W: TRIANGLE; S: LINE; F: CONICSECTION; O: CURVE",
    "facts": "Circumcenter(W) = FootPoint(S, TangentOfPoint(UpperVertex(F), O))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: J ) equals POINT: K",
    "id": 4247,
    "declarations": "J: CONICSECTION; K: POINT",
    "facts": "LowerFocus(J) = K"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: A ) equals LINE: i",
    "id": 4248,
    "declarations": "A: CONICSECTION; i: LINE",
    "facts": "RightDirectrix(A) = i"
},
{
    "assertion": "UpperVertex ( CONICSECTION: A ) equals POINT: G",
    "id": 4249,
    "declarations": "A: CONICSECTION; G: POINT",
    "facts": "UpperVertex(A) = G"
},
{
    "assertion": "LeftPart ( HYPERBOLA: z ) equals CURVE: K",
    "id": 4250,
    "declarations": "z: HYPERBOLA; K: CURVE",
    "facts": "LeftPart(z) = K"
},
{
    "assertion": "sqrt ( Slope ( TangentOnPoint ( RightVertex ( CONICSECTION: E ), CURVE: r ) ) ) equals NUMBER: -51",
    "id": 4251,
    "declarations": "E: CONICSECTION; r: CURVE; -51: NUMBER",
    "facts": "sqrt(Slope(TangentOnPoint(RightVertex(E), r))) = -51"
},
{
    "assertion": "FootPoint ( LINE: v, LINE: c ) equals POINT: d",
    "id": 4252,
    "declarations": "v: LINE; c: LINE; d: POINT",
    "facts": "FootPoint(v, c) = d"
},
{
    "assertion": "FootPoint ( LeftDirectrix ( CONICSECTION: U ), LINE: o ) equals POINT: I",
    "id": 4253,
    "declarations": "U: CONICSECTION; o: LINE; I: POINT",
    "facts": "FootPoint(LeftDirectrix(U), o) = I"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: T, CONICSECTION: o ) equals BOOL: True",
    "id": 4254,
    "declarations": "T: LINESEGMENT; o: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(T, o) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: b ) equals LowerVertex ( CONICSECTION: c )",
    "id": 4255,
    "declarations": "b: CONICSECTION; c: CONICSECTION",
    "facts": "LeftVertex(b) = LowerVertex(c)"
},
{
    "assertion": "Center ( CONICSECTION: f ) equals RightVertex ( CONICSECTION: C )",
    "id": 4256,
    "declarations": "f: CONICSECTION; C: CONICSECTION",
    "facts": "Center(f) = RightVertex(C)"
},
{
    "assertion": "Slope ( LineOf ( UpperFocus ( CONICSECTION: t ), POINT: L ) ) equals NUMBER: -24",
    "id": 4257,
    "declarations": "t: CONICSECTION; L: POINT; -24: NUMBER",
    "facts": "Slope(LineOf(UpperFocus(t), L)) = -24"
},
{
    "assertion": "Incenter ( TRIANGLE: j ) equals Incenter ( TRIANGLE: B )",
    "id": 4258,
    "declarations": "j: TRIANGLE; B: TRIANGLE",
    "facts": "Incenter(j) = Incenter(B)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: T ) equals LowerVertex ( CONICSECTION: c )",
    "id": 4259,
    "declarations": "T: LINESEGMENT; c: CONICSECTION",
    "facts": "MidPoint(T) = LowerVertex(c)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: N ) equals POINT: u",
    "id": 4260,
    "declarations": "N: TRIANGLE; u: POINT",
    "facts": "Circumcenter(N) = u"
},
{
    "assertion": "Intersection ( CURVE: H, LeftPart ( HYPERBOLA: j ) ) equals Orthocenter ( TRIANGLE: R )",
    "id": 4261,
    "declarations": "H: CURVE; j: HYPERBOLA; R: TRIANGLE",
    "facts": "Intersection(H, LeftPart(j)) = Orthocenter(R)"
},
{
    "assertion": "Diameter ( CIRCLE: q ) equals NUMBER: -41",
    "id": 4262,
    "declarations": "q: CIRCLE; -41: NUMBER",
    "facts": "Diameter(q) = -41"
},
{
    "assertion": "Abs ( LINESEGMENT: d ) equals Min ( sqrt ( XCoordinate ( UpperVertex ( CONICSECTION: H ) ) ) )",
    "id": 4263,
    "declarations": "d: LINESEGMENT; H: CONICSECTION",
    "facts": "Abs(d) = Min(sqrt(XCoordinate(UpperVertex(H))))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: D ) equals Circumcenter ( TRIANGLE: C )",
    "id": 4264,
    "declarations": "D: CONICSECTION; C: TRIANGLE",
    "facts": "LeftVertex(D) = Circumcenter(C)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: S ) equals RightDirectrix ( CONICSECTION: r )",
    "id": 4265,
    "declarations": "S: LINESEGMENT; r: CONICSECTION",
    "facts": "OverlappingLine(S) = RightDirectrix(r)"
},
{
    "assertion": "TangentOfPoint ( RightVertex ( CONICSECTION: b ), Locus ( UpperVertex ( CONICSECTION: t ) ) ) equals LINE: u",
    "id": 4266,
    "declarations": "b: CONICSECTION; t: CONICSECTION; u: LINE",
    "facts": "TangentOfPoint(RightVertex(b), Locus(UpperVertex(t))) = u"
},
{
    "assertion": "Negation ( LeftPart ( HYPERBOLA: c ) equals CURVE: d ) equals BOOL: True",
    "id": 4267,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: p ) equals Abs ( LINESEGMENT: I )",
    "id": 4268,
    "declarations": "p: CONICSECTION; I: LINESEGMENT",
    "facts": "HalfFocalLength(p) = Abs(I)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: V ) equals POINT: X",
    "id": 4269,
    "declarations": "V: CONICSECTION; X: POINT",
    "facts": "LeftVertex(V) = X"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: y ) equals MinorAxis ( ELLIPSE: d )",
    "id": 4270,
    "declarations": "y: ELLIPSE; d: ELLIPSE",
    "facts": "ImaginaryAxis(y) = MinorAxis(d)"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: m ) ) equals POINT: Q",
    "id": 4271,
    "declarations": "m: ELLIPSE; Q: POINT",
    "facts": "MidPoint(MajorAxis(m)) = Q"
},
{
    "assertion": "Inclination ( LINE: u ) equals YCoordinate ( Orthocenter ( TRIANGLE: Z ) )",
    "id": 4272,
    "declarations": "u: LINE; Z: TRIANGLE",
    "facts": "Inclination(u) = YCoordinate(Orthocenter(Z))"
},
{
    "assertion": "TangentPoint ( LINE: r, CIRCLE: b ) equals FootPoint ( LINE: X, PerpendicularBisector ( LINESEGMENT: R ) )",
    "id": 4273,
    "declarations": "r: LINE; b: CIRCLE; X: LINE; R: LINESEGMENT",
    "facts": "TangentPoint(r, b) = FootPoint(X, PerpendicularBisector(R))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: w ) equals FocalLength ( CONICSECTION: O )",
    "id": 4274,
    "declarations": "w: CONICSECTION; O: CONICSECTION",
    "facts": "Eccentricity(w) = FocalLength(O)"
},
{
    "assertion": "Endpoint ( MinorAxis ( ELLIPSE: y ) ) equals UpperFocus ( CONICSECTION: y )",
    "id": 4275,
    "declarations": "y: ELLIPSE; y: CONICSECTION",
    "facts": "Endpoint(MinorAxis(y)) = UpperFocus(y)"
},
{
    "assertion": "RightFocus ( CONICSECTION: v ) equals POINT: T",
    "id": 4276,
    "declarations": "v: CONICSECTION; T: POINT",
    "facts": "RightFocus(v) = T"
},
{
    "assertion": "XCoordinate ( POINT: y ) equals NUMBER: -41",
    "id": 4277,
    "declarations": "y: POINT; -41: NUMBER",
    "facts": "XCoordinate(y) = -41"
},
{
    "assertion": "RightPart ( HYPERBOLA: M ) equals CURVE: M",
    "id": 4278,
    "declarations": "M: HYPERBOLA; M: CURVE",
    "facts": "RightPart(M) = M"
},
{
    "assertion": "Asymptote ( HYPERBOLA: U ) equals LINE: o",
    "id": 4279,
    "declarations": "U: HYPERBOLA; o: LINE",
    "facts": "Asymptote(U) = o"
},
{
    "assertion": "FocalLength ( CONICSECTION: o ) equals NUMBER: 0",
    "id": 4280,
    "declarations": "o: CONICSECTION; 0: NUMBER",
    "facts": "FocalLength(o) = 0"
},
{
    "assertion": "Projection ( RightFocus ( CONICSECTION: H ), LINE: d ) equals LowerFocus ( CONICSECTION: V )",
    "id": 4281,
    "declarations": "H: CONICSECTION; d: LINE; V: CONICSECTION",
    "facts": "Projection(RightFocus(H), d) = LowerFocus(V)"
},
{
    "assertion": "Projection ( LowerFocus ( CONICSECTION: T ), LINE: q ) equals LeftFocus ( CONICSECTION: v )",
    "id": 4282,
    "declarations": "T: CONICSECTION; q: LINE; v: CONICSECTION",
    "facts": "Projection(LowerFocus(T), q) = LeftFocus(v)"
},
{
    "assertion": "Slope ( LINE: I ) equals Distance ( POINT: b, RightFocus ( CONICSECTION: a ) )",
    "id": 4283,
    "declarations": "I: LINE; b: POINT; a: CONICSECTION",
    "facts": "Slope(I) = Distance(b, RightFocus(a))"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: T ) equals LINE: d",
    "id": 4284,
    "declarations": "T: CONICSECTION; d: LINE",
    "facts": "LeftDirectrix(T) = d"
},
{
    "assertion": "InterReciprocal ( NUMBER: -30 ) equals NUMBER: 24",
    "id": 4285,
    "declarations": "-30: NUMBER; 24: NUMBER",
    "facts": "InterReciprocal(-30) = 24"
},
{
    "assertion": "Intersection ( CURVE: m, CURVE: q ) equals Incenter ( TRIANGLE: N )",
    "id": 4286,
    "declarations": "m: CURVE; q: CURVE; N: TRIANGLE",
    "facts": "Intersection(m, q) = Incenter(N)"
},
{
    "assertion": "Perimeter ( CONICSECTION: s ) equals Slope ( LINE: k )",
    "id": 4287,
    "declarations": "s: CONICSECTION; k: LINE",
    "facts": "Perimeter(s) = Slope(k)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: p ) equals UpperFocus ( CONICSECTION: v )",
    "id": 4288,
    "declarations": "p: LINESEGMENT; v: CONICSECTION",
    "facts": "MidPoint(p) = UpperFocus(v)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: W ) equals AXIS: yAxis",
    "id": 4289,
    "declarations": "W: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(W) = yAxis"
},
{
    "assertion": "LeftVertex ( CONICSECTION: i ) equals MidPoint ( RealAxis ( ELLIPSE: B ) )",
    "id": 4290,
    "declarations": "i: CONICSECTION; B: ELLIPSE",
    "facts": "LeftVertex(i) = MidPoint(RealAxis(B))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: o ) equals CURVE: J",
    "id": 4291,
    "declarations": "o: HYPERBOLA; J: CURVE",
    "facts": "LeftPart(o) = J"
},
{
    "assertion": "Eccentricity ( CONICSECTION: i ) equals NUMBER: -37",
    "id": 4292,
    "declarations": "i: CONICSECTION; -37: NUMBER",
    "facts": "Eccentricity(i) = -37"
},
{
    "assertion": "Circumcenter ( TRIANGLE: j ) equals Projection ( POINT: x, LINE: b )",
    "id": 4293,
    "declarations": "j: TRIANGLE; x: POINT; b: LINE",
    "facts": "Circumcenter(j) = Projection(x, b)"
},
{
    "assertion": "Slope ( LINE: t ) equals NUMBER: -80",
    "id": 4294,
    "declarations": "t: LINE; -80: NUMBER",
    "facts": "Slope(t) = -80"
},
{
    "assertion": "Min ( NUMBER: 25 ) equals Intercept ( LINE: N, AXIS: xAxis )",
    "id": 4295,
    "declarations": "25: NUMBER; N: LINE; xAxis: AXIS",
    "facts": "Min(25) = Intercept(N, xAxis)"
},
{
    "assertion": "IsIntersect ( CURVE: v, CURVE: H ) equals BOOL: True",
    "id": 4296,
    "declarations": "v: CURVE; H: CURVE; True: BOOL",
    "facts": "IsIntersect(v, H) = True"
},
{
    "assertion": "RightFocus ( CONICSECTION: v ) equals RightFocus ( CONICSECTION: G )",
    "id": 4297,
    "declarations": "v: CONICSECTION; G: CONICSECTION",
    "facts": "RightFocus(v) = RightFocus(G)"
},
{
    "assertion": "Negation ( TangentOfPoint ( POINT: f, CURVE: N ) equals LINE: u ) equals BOOL: False",
    "id": 4298,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Slope ( LineOf ( RightVertex ( CONICSECTION: r ), LeftFocus ( CONICSECTION: p ) ) ) equals NUMBER: 93",
    "id": 4299,
    "declarations": "r: CONICSECTION; p: CONICSECTION; 93: NUMBER",
    "facts": "Slope(LineOf(RightVertex(r), LeftFocus(p))) = 93"
},
{
    "assertion": "sqrt ( Radius ( CIRCLE: T ) ) equals NUMBER: 50",
    "id": 4300,
    "declarations": "T: CIRCLE; 50: NUMBER",
    "facts": "sqrt(Radius(T)) = 50"
},
{
    "assertion": "LeftPart ( HYPERBOLA: e ) equals CURVE: c",
    "id": 4301,
    "declarations": "e: HYPERBOLA; c: CURVE",
    "facts": "LeftPart(e) = c"
},
{
    "assertion": "Center ( CONICSECTION: R ) equals POINT: H",
    "id": 4302,
    "declarations": "R: CONICSECTION; H: POINT",
    "facts": "Center(R) = H"
},
{
    "assertion": "Quadrant ( LeftFocus ( CONICSECTION: l ) ) equals Inclination ( PerpendicularBisector ( LINESEGMENT: t ) )",
    "id": 4303,
    "declarations": "l: CONICSECTION; t: LINESEGMENT",
    "facts": "Quadrant(LeftFocus(l)) = Inclination(PerpendicularBisector(t))"
},
{
    "assertion": "DotProduct ( VECTOR: s, VECTOR: r ) equals Quadrant ( POINT: r )",
    "id": 4304,
    "declarations": "s: VECTOR; r: VECTOR; r: POINT",
    "facts": "DotProduct(s, r) = Quadrant(r)"
},
{
    "assertion": "Coordinate ( POINT: z ) equals ( Radius ( CIRCLE: o ), NUMBER: 38 )",
    "id": 4305,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Distance ( POINT: K, Orthocenter ( TRIANGLE: k ) ) equals Diameter ( CIRCLE: t )",
    "id": 4306,
    "declarations": "K: POINT; k: TRIANGLE; t: CIRCLE",
    "facts": "Distance(K, Orthocenter(k)) = Diameter(t)"
},
{
    "assertion": "InterceptChord ( TangentOfPoint ( POINT: u, LeftPart ( HYPERBOLA: k ) ), CONICSECTION: G ) equals LINESEGMENT: G",
    "id": 4307,
    "declarations": "u: POINT; k: HYPERBOLA; G: CONICSECTION; G: LINESEGMENT",
    "facts": "InterceptChord(TangentOfPoint(u, LeftPart(k)), G) = G"
},
{
    "assertion": "Incenter ( TRIANGLE: I ) equals RightVertex ( CONICSECTION: H )",
    "id": 4308,
    "declarations": "I: TRIANGLE; H: CONICSECTION",
    "facts": "Incenter(I) = RightVertex(H)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: H ) equals LowerVertex ( CONICSECTION: e )",
    "id": 4309,
    "declarations": "H: TRIANGLE; e: CONICSECTION",
    "facts": "Circumcenter(H) = LowerVertex(e)"
},
{
    "assertion": "Locus ( UpperFocus ( CONICSECTION: D ) ) equals CURVE: g",
    "id": 4310,
    "declarations": "D: CONICSECTION; g: CURVE",
    "facts": "Locus(UpperFocus(D)) = g"
},
{
    "assertion": "IsPerpendicular ( LINE: I, LINE: B ) equals BOOL: False",
    "id": 4311,
    "declarations": "I: LINE; B: LINE; False: BOOL",
    "facts": "IsPerpendicular(I, B) = False"
},
{
    "assertion": "sqrt ( FocalLength ( CONICSECTION: A ) ) equals NUMBER: -19",
    "id": 4312,
    "declarations": "A: CONICSECTION; -19: NUMBER",
    "facts": "sqrt(FocalLength(A)) = -19"
},
{
    "assertion": "IsInTangent ( CIRCLE: H, CIRCLE: L ) equals BOOL: False",
    "id": 4313,
    "declarations": "H: CIRCLE; L: CIRCLE; False: BOOL",
    "facts": "IsInTangent(H, L) = False"
},
{
    "assertion": "Circumcenter ( TriangleOf ( RightFocus ( CONICSECTION: P ), POINT: m, RightVertex ( CONICSECTION: a ) ) ) equals LowerFocus ( CONICSECTION: K )",
    "id": 4314,
    "declarations": "P: CONICSECTION; m: POINT; a: CONICSECTION; K: CONICSECTION",
    "facts": "Circumcenter(TriangleOf(RightFocus(P), m, RightVertex(a))) = LowerFocus(K)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: m ) equals AXIS: xAxis",
    "id": 4315,
    "declarations": "m: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(m) = xAxis"
},
{
    "assertion": "Focus ( CONICSECTION: u ) equals Incenter ( TRIANGLE: h )",
    "id": 4316,
    "declarations": "u: CONICSECTION; h: TRIANGLE",
    "facts": "Focus(u) = Incenter(h)"
},
{
    "assertion": "RightPart ( HYPERBOLA: a ) equals RightPart ( HYPERBOLA: Z )",
    "id": 4317,
    "declarations": "a: HYPERBOLA; Z: HYPERBOLA",
    "facts": "RightPart(a) = RightPart(Z)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: z ) equals CIRCLE: S",
    "id": 4318,
    "declarations": "z: TRIANGLE; S: CIRCLE",
    "facts": "CircumCircle(z) = S"
},
{
    "assertion": "Distance ( LowerVertex ( CONICSECTION: a ), RightFocus ( CONICSECTION: T ) ) equals Min ( Diameter ( CIRCLE: L ) )",
    "id": 4319,
    "declarations": "a: CONICSECTION; T: CONICSECTION; L: CIRCLE",
    "facts": "Distance(LowerVertex(a), RightFocus(T)) = Min(Diameter(L))"
},
{
    "assertion": "Negation ( SymmetryAxis ( CONICSECTION: x ) equals AXIS: yAxis ) equals BOOL: True",
    "id": 4320,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Projection ( MidPoint ( RealAxis ( ELLIPSE: c ) ), LINE: m ) equals Circumcenter ( TRIANGLE: Y )",
    "id": 4321,
    "declarations": "c: ELLIPSE; m: LINE; Y: TRIANGLE",
    "facts": "Projection(MidPoint(RealAxis(c)), m) = Circumcenter(Y)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: Y ) equals LINESEGMENT: w",
    "id": 4322,
    "declarations": "Y: ELLIPSE; w: LINESEGMENT",
    "facts": "ImaginaryAxis(Y) = w"
},
{
    "assertion": "YCoordinate ( LowerFocus ( CONICSECTION: y ) ) equals NUMBER: -23",
    "id": 4323,
    "declarations": "y: CONICSECTION; -23: NUMBER",
    "facts": "YCoordinate(LowerFocus(y)) = -23"
},
{
    "assertion": "MajorAxis ( ELLIPSE: b ) equals LINESEGMENT: N",
    "id": 4324,
    "declarations": "b: ELLIPSE; N: LINESEGMENT",
    "facts": "MajorAxis(b) = N"
},
{
    "assertion": "IsIntersect ( CURVE: W, CURVE: S ) equals BOOL: True",
    "id": 4325,
    "declarations": "W: CURVE; S: CURVE; True: BOOL",
    "facts": "IsIntersect(W, S) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: c ) equals MajorAxis ( ELLIPSE: L )",
    "id": 4326,
    "declarations": "c: ELLIPSE; L: ELLIPSE",
    "facts": "MajorAxis(c) = MajorAxis(L)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: O ) equals LINESEGMENT: k",
    "id": 4327,
    "declarations": "O: ELLIPSE; k: LINESEGMENT",
    "facts": "MajorAxis(O) = k"
},
{
    "assertion": "LeftFocus ( CONICSECTION: k ) equals RightFocus ( CONICSECTION: m )",
    "id": 4328,
    "declarations": "k: CONICSECTION; m: CONICSECTION",
    "facts": "LeftFocus(k) = RightFocus(m)"
},
{
    "assertion": "Radius ( CIRCLE: R ) equals Diameter ( CIRCLE: h )",
    "id": 4329,
    "declarations": "R: CIRCLE; h: CIRCLE",
    "facts": "Radius(R) = Diameter(h)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: h, TRIANGLE: B ) equals BOOL: True",
    "id": 4330,
    "declarations": "h: CIRCLE; B: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(h, B) = True"
},
{
    "assertion": "InterceptChord ( LINE: P, CONICSECTION: c ) equals LINESEGMENT: g",
    "id": 4331,
    "declarations": "P: LINE; c: CONICSECTION; g: LINESEGMENT",
    "facts": "InterceptChord(P, c) = g"
},
{
    "assertion": "Projection ( Circumcenter ( TRIANGLE: q ), TangentOfPoint ( LowerFocus ( CONICSECTION: Z ), CURVE: e ) ) equals POINT: I",
    "id": 4332,
    "declarations": "q: TRIANGLE; Z: CONICSECTION; e: CURVE; I: POINT",
    "facts": "Projection(Circumcenter(q), TangentOfPoint(LowerFocus(Z), e)) = I"
},
{
    "assertion": "Abs ( LINESEGMENT: g ) equals NUMBER: 82",
    "id": 4333,
    "declarations": "g: LINESEGMENT; 82: NUMBER",
    "facts": "Abs(g) = 82"
},
{
    "assertion": "Incenter ( TRIANGLE: g ) equals POINT: P",
    "id": 4334,
    "declarations": "g: TRIANGLE; P: POINT",
    "facts": "Incenter(g) = P"
},
{
    "assertion": "And ( Asymptote ( HYPERBOLA: a ) equals LINE: y, UpperVertex ( CONICSECTION: f ) equals POINT: s ) equals BOOL: True",
    "id": 4335,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Projection ( POINT: v, LINE: F ) equals LeftVertex ( CONICSECTION: V )",
    "id": 4336,
    "declarations": "v: POINT; F: LINE; V: CONICSECTION",
    "facts": "Projection(v, F) = LeftVertex(V)"
},
{
    "assertion": "LineOf ( UpperVertex ( CONICSECTION: A ), RightFocus ( CONICSECTION: x ) ) equals PerpendicularBisector ( LINESEGMENT: t )",
    "id": 4337,
    "declarations": "A: CONICSECTION; x: CONICSECTION; t: LINESEGMENT",
    "facts": "LineOf(UpperVertex(A), RightFocus(x)) = PerpendicularBisector(t)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: I ) equals NUMBER: 35",
    "id": 4338,
    "declarations": "I: CONICSECTION; 35: NUMBER",
    "facts": "HalfFocalLength(I) = 35"
},
{
    "assertion": "LowerFocus ( CONICSECTION: E ) equals RightVertex ( CONICSECTION: H )",
    "id": 4339,
    "declarations": "E: CONICSECTION; H: CONICSECTION",
    "facts": "LowerFocus(E) = RightVertex(H)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: S, CIRCLE: u ) equals BOOL: True",
    "id": 4340,
    "declarations": "S: LINESEGMENT; u: CIRCLE; True: BOOL",
    "facts": "IsDiameter(S, u) = True"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: u, TRIANGLE: L ) equals BOOL: True",
    "id": 4341,
    "declarations": "u: CIRCLE; L: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(u, L) = True"
},
{
    "assertion": "TangentOfPoint ( LowerFocus ( CONICSECTION: l ), CURVE: c ) equals LINE: h",
    "id": 4342,
    "declarations": "l: CONICSECTION; c: CURVE; h: LINE",
    "facts": "TangentOfPoint(LowerFocus(l), c) = h"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: q, TRIANGLE: R ) equals BOOL: True",
    "id": 4343,
    "declarations": "q: CIRCLE; R: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(q, R) = True"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: b ) ) equals InterReciprocal ( NUMBER: 18 )",
    "id": 4344,
    "declarations": "b: TRIANGLE; 18: NUMBER",
    "facts": "Diameter(CircumCircle(b)) = InterReciprocal(18)"
},
{
    "assertion": "Slope ( LINE: q ) equals Diameter ( CIRCLE: k )",
    "id": 4345,
    "declarations": "q: LINE; k: CIRCLE",
    "facts": "Slope(q) = Diameter(k)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: Z, TRIANGLE: b ) equals BOOL: False",
    "id": 4346,
    "declarations": "Z: CIRCLE; b: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(Z, b) = False"
},
{
    "assertion": "FocalLength ( CONICSECTION: A ) equals NUMBER: -22",
    "id": 4347,
    "declarations": "A: CONICSECTION; -22: NUMBER",
    "facts": "FocalLength(A) = -22"
},
{
    "assertion": "Expression ( CURVE: r ) equals EXPRESSION: x^2*space+*spacexy*space+*spacey^2*space=*space1",
    "id": 4348,
    "declarations": "r: CURVE; x^2*space+*spacexy*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "Expression(r) = x^2*space+*spacexy*space+*spacey^2*space=*space1"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: V ) equals RightDirectrix ( CONICSECTION: H )",
    "id": 4349,
    "declarations": "V: CONICSECTION; H: CONICSECTION",
    "facts": "RightDirectrix(V) = RightDirectrix(H)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: V ) equals Circumcenter ( TRIANGLE: y )",
    "id": 4350,
    "declarations": "V: CONICSECTION; y: TRIANGLE",
    "facts": "LowerFocus(V) = Circumcenter(y)"
},
{
    "assertion": "LocusEquation ( Center ( CONICSECTION: u ) ) equals EXPRESSION: y*space=*spacex^3*space-*space2*x*space+*space1",
    "id": 4351,
    "declarations": "u: CONICSECTION; y*space=*spacex^3*space-*space2*x*space+*space1: EXPRESSION",
    "facts": "LocusEquation(Center(u)) = y*space=*spacex^3*space-*space2*x*space+*space1"
},
{
    "assertion": "Asymptote ( HYPERBOLA: U ) equals LINE: E",
    "id": 4352,
    "declarations": "U: HYPERBOLA; E: LINE",
    "facts": "Asymptote(U) = E"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: A, TRIANGLE: m ) equals BOOL: True",
    "id": 4353,
    "declarations": "A: CIRCLE; m: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(A, m) = True"
},
{
    "assertion": "Negation ( Slope ( LINE: v ) equals Eccentricity ( CONICSECTION: E ) ) equals BOOL: True",
    "id": 4354,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "ApplyUnit ( Intercept ( LINE: w, AXIS: yAxis ), DEGREESTR: degree )",
    "id": 4355,
    "declarations": "w: LINE; yAxis: AXIS; degree: DEGREESTR",
    "facts": "ApplyUnit(Intercept(w, yAxis), degree) = None"
},
{
    "assertion": "Eccentricity ( CONICSECTION: o ) equals NumIntersection ( CURVE: E, CURVE: p )",
    "id": 4356,
    "declarations": "o: CONICSECTION; E: CURVE; p: CURVE",
    "facts": "Eccentricity(o) = NumIntersection(E, p)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: N, CIRCLE: i ) equals BOOL: False",
    "id": 4357,
    "declarations": "N: LINESEGMENT; i: CIRCLE; False: BOOL",
    "facts": "IsDiameter(N, i) = False"
},
{
    "assertion": "sqrt ( DotProduct ( VECTOR: Z, VECTOR: Y ) ) equals NUMBER: -54",
    "id": 4358,
    "declarations": "Z: VECTOR; Y: VECTOR; -54: NUMBER",
    "facts": "sqrt(DotProduct(Z, Y)) = -54"
},
{
    "assertion": "Area ( CONICSECTION: L ) equals Eccentricity ( CONICSECTION: z )",
    "id": 4359,
    "declarations": "L: CONICSECTION; z: CONICSECTION",
    "facts": "Area(L) = Eccentricity(z)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: v ) equals MinorAxis ( ELLIPSE: S )",
    "id": 4360,
    "declarations": "v: ELLIPSE; S: ELLIPSE",
    "facts": "ImaginaryAxis(v) = MinorAxis(S)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: X ) equals AXIS: xAxis",
    "id": 4361,
    "declarations": "X: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(X) = xAxis"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: I ), TRIANGLE: a ) equals BOOL: False",
    "id": 4362,
    "declarations": "I: TRIANGLE; a: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(I), a) = False"
},
{
    "assertion": "RealAxis ( ELLIPSE: U ) equals LINESEGMENT: H",
    "id": 4363,
    "declarations": "U: ELLIPSE; H: LINESEGMENT",
    "facts": "RealAxis(U) = H"
},
{
    "assertion": "XCoordinate ( LowerVertex ( CONICSECTION: x ) ) equals sqrt ( NUMBER: 60 )",
    "id": 4364,
    "declarations": "x: CONICSECTION; 60: NUMBER",
    "facts": "XCoordinate(LowerVertex(x)) = sqrt(60)"
},
{
    "assertion": "LocusEquation ( Orthocenter ( TRIANGLE: u ) ) equals EXPRESSION: y*space=*spacex^3*space-*space4*x",
    "id": 4365,
    "declarations": "u: TRIANGLE; y*space=*spacex^3*space-*space4*x: EXPRESSION",
    "facts": "LocusEquation(Orthocenter(u)) = y*space=*spacex^3*space-*space4*x"
},
{
    "assertion": "FocalLength ( CONICSECTION: H ) equals NUMBER: 68",
    "id": 4366,
    "declarations": "H: CONICSECTION; 68: NUMBER",
    "facts": "FocalLength(H) = 68"
},
{
    "assertion": "IsInTangent ( CIRCLE: V, CIRCLE: e ) equals BOOL: False",
    "id": 4367,
    "declarations": "V: CIRCLE; e: CIRCLE; False: BOOL",
    "facts": "IsInTangent(V, e) = False"
},
{
    "assertion": "RightPart ( HYPERBOLA: f ) equals CURVE: h",
    "id": 4368,
    "declarations": "f: HYPERBOLA; h: CURVE",
    "facts": "RightPart(f) = h"
},
{
    "assertion": "Circumcenter ( TRIANGLE: A ) equals UpperVertex ( CONICSECTION: U )",
    "id": 4369,
    "declarations": "A: TRIANGLE; U: CONICSECTION",
    "facts": "Circumcenter(A) = UpperVertex(U)"
},
{
    "assertion": "LocusEquation ( UpperFocus ( CONICSECTION: C ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 4370,
    "declarations": "C: CONICSECTION; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(UpperFocus(C)) = y*space=*spacelog(x)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: t ) equals MajorAxis ( ELLIPSE: f )",
    "id": 4371,
    "declarations": "t: ELLIPSE; f: ELLIPSE",
    "facts": "ImaginaryAxis(t) = MajorAxis(f)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: c ) equals LINE: b",
    "id": 4372,
    "declarations": "c: CONICSECTION; b: LINE",
    "facts": "RightDirectrix(c) = b"
},
{
    "assertion": "TangentOnPoint ( POINT: W, CURVE: H ) equals LINE: L",
    "id": 4373,
    "declarations": "W: POINT; H: CURVE; L: LINE",
    "facts": "TangentOnPoint(W, H) = L"
},
{
    "assertion": "LeftVertex ( CONICSECTION: s ) equals RightVertex ( CONICSECTION: y )",
    "id": 4374,
    "declarations": "s: CONICSECTION; y: CONICSECTION",
    "facts": "LeftVertex(s) = RightVertex(y)"
},
{
    "assertion": "Between ( Circumcenter ( TRIANGLE: m ), Orthocenter ( TRIANGLE: D ), LowerVertex ( CONICSECTION: V ) ) equals BOOL: False",
    "id": 4375,
    "declarations": "m: TRIANGLE; D: TRIANGLE; V: CONICSECTION; False: BOOL",
    "facts": "Between(Circumcenter(m), Orthocenter(D), LowerVertex(V)) = False"
},
{
    "assertion": "MidPoint ( LINESEGMENT: U ) equals POINT: N",
    "id": 4376,
    "declarations": "U: LINESEGMENT; N: POINT",
    "facts": "MidPoint(U) = N"
},
{
    "assertion": "IsPerpendicular ( LINE: q, LINE: L ) equals BOOL: False",
    "id": 4377,
    "declarations": "q: LINE; L: LINE; False: BOOL",
    "facts": "IsPerpendicular(q, L) = False"
},
{
    "assertion": "Length ( MajorAxis ( ELLIPSE: O ) ) equals Perimeter ( CONICSECTION: P )",
    "id": 4378,
    "declarations": "O: ELLIPSE; P: CONICSECTION",
    "facts": "Length(MajorAxis(O)) = Perimeter(P)"
},
{
    "assertion": "LineSegmentOf ( LowerVertex ( CONICSECTION: s ), MidPoint ( LINESEGMENT: Y ) ) equals LINESEGMENT: M",
    "id": 4379,
    "declarations": "s: CONICSECTION; Y: LINESEGMENT; M: LINESEGMENT",
    "facts": "LineSegmentOf(LowerVertex(s), MidPoint(Y)) = M"
},
{
    "assertion": "Vertex ( CONICSECTION: u ) equals LeftVertex ( CONICSECTION: x )",
    "id": 4380,
    "declarations": "u: CONICSECTION; x: CONICSECTION",
    "facts": "Vertex(u) = LeftVertex(x)"
},
{
    "assertion": "AngleOf ( UpperFocus ( CONICSECTION: p ), POINT: b, POINT: W ) equals ApplyUnit ( YCoordinate ( POINT: l ), DEGREESTR: degree )",
    "id": 4381,
    "declarations": "p: CONICSECTION; b: POINT; W: POINT; l: POINT; degree: DEGREESTR",
    "facts": "AngleOf(UpperFocus(p), b, W) = ApplyUnit(YCoordinate(l), degree)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: t ) equals POINT: h",
    "id": 4382,
    "declarations": "t: CONICSECTION; h: POINT",
    "facts": "UpperFocus(t) = h"
},
{
    "assertion": "LeftVertex ( CONICSECTION: L ) equals RightFocus ( CONICSECTION: M )",
    "id": 4383,
    "declarations": "L: CONICSECTION; M: CONICSECTION",
    "facts": "LeftVertex(L) = RightFocus(M)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: c, CONICSECTION: N ) equals BOOL: False",
    "id": 4384,
    "declarations": "c: LINESEGMENT; N: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(c, N) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: u ) equals LowerVertex ( CONICSECTION: d )",
    "id": 4385,
    "declarations": "u: CONICSECTION; d: CONICSECTION",
    "facts": "LeftVertex(u) = LowerVertex(d)"
},
{
    "assertion": "Incenter ( TRIANGLE: L ) equals LeftVertex ( CONICSECTION: V )",
    "id": 4386,
    "declarations": "L: TRIANGLE; V: CONICSECTION",
    "facts": "Incenter(L) = LeftVertex(V)"
},
{
    "assertion": "Between ( POINT: O, POINT: i, POINT: L ) equals BOOL: False",
    "id": 4387,
    "declarations": "O: POINT; i: POINT; L: POINT; False: BOOL",
    "facts": "Between(O, i, L) = False"
},
{
    "assertion": "Expression ( CURVE: N ) equals EXPRESSION: y*space=*spacex^3*space-*space4*x",
    "id": 4388,
    "declarations": "N: CURVE; y*space=*spacex^3*space-*space4*x: EXPRESSION",
    "facts": "Expression(N) = y*space=*spacex^3*space-*space4*x"
},
{
    "assertion": "Perimeter ( CONICSECTION: L ) equals sqrt ( Min ( Inclination ( TangentOfPoint ( POINT: S, CURVE: S ) ) ) )",
    "id": 4389,
    "declarations": "L: CONICSECTION; S: POINT; S: CURVE",
    "facts": "Perimeter(L) = sqrt(Min(Inclination(TangentOfPoint(S, S))))"
},
{
    "assertion": "Inclination ( OverlappingLine ( LINESEGMENT: i ) ) equals Inclination ( LINE: L )",
    "id": 4390,
    "declarations": "i: LINESEGMENT; L: LINE",
    "facts": "Inclination(OverlappingLine(i)) = Inclination(L)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: n ) equals LowerVertex ( CONICSECTION: b )",
    "id": 4391,
    "declarations": "n: LINESEGMENT; b: CONICSECTION",
    "facts": "Endpoint(n) = LowerVertex(b)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: n ) equals AXIS: yAxis",
    "id": 4392,
    "declarations": "n: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(n) = yAxis"
},
{
    "assertion": "DotProduct ( VECTOR: A, VECTOR: o ) equals NUMBER: 26",
    "id": 4393,
    "declarations": "A: VECTOR; o: VECTOR; 26: NUMBER",
    "facts": "DotProduct(A, o) = 26"
},
{
    "assertion": "FocalLength ( CONICSECTION: A ) equals NUMBER: 44",
    "id": 4394,
    "declarations": "A: CONICSECTION; 44: NUMBER",
    "facts": "FocalLength(A) = 44"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: O, TriangleOf ( RightVertex ( CONICSECTION: N ), Center ( CONICSECTION: x ), POINT: k ) ) equals BOOL: False",
    "id": 4395,
    "declarations": "O: CIRCLE; N: CONICSECTION; x: CONICSECTION; k: POINT; False: BOOL",
    "facts": "IsCircumCircle(O, TriangleOf(RightVertex(N), Center(x), k)) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: y ) equals LINE: N",
    "id": 4396,
    "declarations": "y: CONICSECTION; N: LINE",
    "facts": "Directrix(y) = N"
},
{
    "assertion": "TangentPoint ( LINE: m, CIRCLE: p ) equals POINT: w",
    "id": 4397,
    "declarations": "m: LINE; p: CIRCLE; w: POINT",
    "facts": "TangentPoint(m, p) = w"
},
{
    "assertion": "Vertex ( CONICSECTION: B ) equals POINT: D",
    "id": 4398,
    "declarations": "B: CONICSECTION; D: POINT",
    "facts": "Vertex(B) = D"
},
{
    "assertion": "FocalLength ( CONICSECTION: W ) equals NUMBER: -82",
    "id": 4399,
    "declarations": "W: CONICSECTION; -82: NUMBER",
    "facts": "FocalLength(W) = -82"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: N, TRIANGLE: h ) equals BOOL: False",
    "id": 4400,
    "declarations": "N: CIRCLE; h: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(N, h) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: c ) equals POINT: d",
    "id": 4401,
    "declarations": "c: CONICSECTION; d: POINT",
    "facts": "RightFocus(c) = d"
},
{
    "assertion": "MajorAxis ( ELLIPSE: B ) equals LINESEGMENT: H",
    "id": 4402,
    "declarations": "B: ELLIPSE; H: LINESEGMENT",
    "facts": "MajorAxis(B) = H"
},
{
    "assertion": "TriangleOf ( POINT: Q, POINT: e, POINT: T ) equals TRIANGLE: i",
    "id": 4403,
    "declarations": "Q: POINT; e: POINT; T: POINT; i: TRIANGLE",
    "facts": "TriangleOf(Q, e, T) = i"
},
{
    "assertion": "Center ( CONICSECTION: Z ) equals LowerVertex ( CONICSECTION: i )",
    "id": 4404,
    "declarations": "Z: CONICSECTION; i: CONICSECTION",
    "facts": "Center(Z) = LowerVertex(i)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: p ) equals Circumcenter ( TriangleOf ( LeftVertex ( CONICSECTION: H ), Orthocenter ( TRIANGLE: C ), RightVertex ( CONICSECTION: q ) ) )",
    "id": 4405,
    "declarations": "p: TRIANGLE; H: CONICSECTION; C: TRIANGLE; q: CONICSECTION",
    "facts": "Orthocenter(p) = Circumcenter(TriangleOf(LeftVertex(H), Orthocenter(C), RightVertex(q)))"
},
{
    "assertion": "YCoordinate ( POINT: k ) equals Inclination ( LINE: J )",
    "id": 4406,
    "declarations": "k: POINT; J: LINE",
    "facts": "YCoordinate(k) = Inclination(J)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: y ) equals POINT: Q",
    "id": 4407,
    "declarations": "y: CONICSECTION; Q: POINT",
    "facts": "LowerVertex(y) = Q"
},
{
    "assertion": "Orthocenter ( TriangleOf ( Projection ( MidPoint ( LINESEGMENT: U ), LINE: G ), UpperVertex ( CONICSECTION: j ), POINT: P ) ) equals POINT: V",
    "id": 4408,
    "declarations": "U: LINESEGMENT; G: LINE; j: CONICSECTION; P: POINT; V: POINT",
    "facts": "Orthocenter(TriangleOf(Projection(MidPoint(U), G), UpperVertex(j), P)) = V"
},
{
    "assertion": "lg ( Area ( CONICSECTION: O ) ) equals Inclination ( LINE: w )",
    "id": 4409,
    "declarations": "O: CONICSECTION; w: LINE",
    "facts": "lg(Area(O)) = Inclination(w)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: v ) equals RealAxis ( ELLIPSE: D )",
    "id": 4410,
    "declarations": "v: ELLIPSE; D: ELLIPSE",
    "facts": "MajorAxis(v) = RealAxis(D)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: i ) equals LINE: D",
    "id": 4411,
    "declarations": "i: CONICSECTION; D: LINE",
    "facts": "LeftDirectrix(i) = D"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: L ) equals PerpendicularBisector ( LineSegmentOf ( RightFocus ( CONICSECTION: T ), POINT: j ) )",
    "id": 4412,
    "declarations": "L: CONICSECTION; T: CONICSECTION; j: POINT",
    "facts": "RightDirectrix(L) = PerpendicularBisector(LineSegmentOf(RightFocus(T), j))"
},
{
    "assertion": "sqrt ( Inclination ( LINE: t ) ) equals Diameter ( CIRCLE: Q )",
    "id": 4413,
    "declarations": "t: LINE; Q: CIRCLE",
    "facts": "sqrt(Inclination(t)) = Diameter(Q)"
},
{
    "assertion": "Locus ( Circumcenter ( TRIANGLE: x ) ) equals CURVE: Y",
    "id": 4414,
    "declarations": "x: TRIANGLE; Y: CURVE",
    "facts": "Locus(Circumcenter(x)) = Y"
},
{
    "assertion": "Diameter ( CIRCLE: i ) equals NUMBER: 46",
    "id": 4415,
    "declarations": "i: CIRCLE; 46: NUMBER",
    "facts": "Diameter(i) = 46"
},
{
    "assertion": "Quadrant ( UpperVertex ( CONICSECTION: D ) ) equals Radius ( CIRCLE: D )",
    "id": 4416,
    "declarations": "D: CONICSECTION; D: CIRCLE",
    "facts": "Quadrant(UpperVertex(D)) = Radius(D)"
},
{
    "assertion": "TangentPoint ( LINE: M, CircumCircle ( TRIANGLE: U ) ) equals POINT: j",
    "id": 4417,
    "declarations": "M: LINE; U: TRIANGLE; j: POINT",
    "facts": "TangentPoint(M, CircumCircle(U)) = j"
},
{
    "assertion": "Focus ( CONICSECTION: e ) equals RightFocus ( CONICSECTION: O )",
    "id": 4418,
    "declarations": "e: CONICSECTION; O: CONICSECTION",
    "facts": "Focus(e) = RightFocus(O)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: y, CIRCLE: a ) equals BOOL: True",
    "id": 4419,
    "declarations": "y: CIRCLE; a: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(y, a) = True"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: D ) equals LineOf ( POINT: D, POINT: f )",
    "id": 4420,
    "declarations": "D: LINESEGMENT; D: POINT; f: POINT",
    "facts": "PerpendicularBisector(D) = LineOf(D, f)"
},
{
    "assertion": "Incenter ( TRIANGLE: d ) equals RightVertex ( CONICSECTION: X )",
    "id": 4421,
    "declarations": "d: TRIANGLE; X: CONICSECTION",
    "facts": "Incenter(d) = RightVertex(X)"
},
{
    "assertion": "Quadrant ( UpperVertex ( CONICSECTION: o ) ) equals Inclination ( TangentOfPoint ( POINT: k, RightPart ( HYPERBOLA: l ) ) )",
    "id": 4422,
    "declarations": "o: CONICSECTION; k: POINT; l: HYPERBOLA",
    "facts": "Quadrant(UpperVertex(o)) = Inclination(TangentOfPoint(k, RightPart(l)))"
},
{
    "assertion": "IsChordOf ( ImaginaryAxis ( ELLIPSE: H ), CONICSECTION: e ) equals BOOL: True",
    "id": 4423,
    "declarations": "H: ELLIPSE; e: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(ImaginaryAxis(H), e) = True"
},
{
    "assertion": "Abs ( LINESEGMENT: s ) equals NUMBER: 54",
    "id": 4424,
    "declarations": "s: LINESEGMENT; 54: NUMBER",
    "facts": "Abs(s) = 54"
},
{
    "assertion": "Length ( LINESEGMENT: W ) equals YCoordinate ( POINT: R )",
    "id": 4425,
    "declarations": "W: LINESEGMENT; R: POINT",
    "facts": "Length(W) = YCoordinate(R)"
},
{
    "assertion": "VectorOf ( POINT: j, POINT: C ) equals VECTOR: H",
    "id": 4426,
    "declarations": "j: POINT; C: POINT; H: VECTOR",
    "facts": "VectorOf(j, C) = H"
},
{
    "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: X ) ) equals Inclination ( LINE: z )",
    "id": 4427,
    "declarations": "X: CONICSECTION; z: LINE",
    "facts": "YCoordinate(LowerVertex(X)) = Inclination(z)"
},
{
    "assertion": "Perimeter ( CONICSECTION: J ) equals XCoordinate ( UpperVertex ( CONICSECTION: e ) )",
    "id": 4428,
    "declarations": "J: CONICSECTION; e: CONICSECTION",
    "facts": "Perimeter(J) = XCoordinate(UpperVertex(e))"
},
{
    "assertion": "AngleOf ( Incenter ( TRIANGLE: V ), LowerFocus ( CONICSECTION: H ), POINT: d ) equals ApplyUnit ( NUMBER: -60, DEGREESTR: degree )",
    "id": 4429,
    "declarations": "V: TRIANGLE; H: CONICSECTION; d: POINT; -60: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(Incenter(V), LowerFocus(H), d) = ApplyUnit(-60, degree)"
},
{
    "assertion": "Directrix ( CONICSECTION: E ) equals LINE: f",
    "id": 4430,
    "declarations": "E: CONICSECTION; f: LINE",
    "facts": "Directrix(E) = f"
},
{
    "assertion": "Intersection ( CURVE: M, CURVE: C ) equals Circumcenter ( TRIANGLE: F )",
    "id": 4431,
    "declarations": "M: CURVE; C: CURVE; F: TRIANGLE",
    "facts": "Intersection(M, C) = Circumcenter(F)"
},
{
    "assertion": "Quadrant ( LowerVertex ( CONICSECTION: s ) ) equals Diameter ( CIRCLE: Z )",
    "id": 4432,
    "declarations": "s: CONICSECTION; Z: CIRCLE",
    "facts": "Quadrant(LowerVertex(s)) = Diameter(Z)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: y ) equals POINT: h",
    "id": 4433,
    "declarations": "y: CONICSECTION; h: POINT",
    "facts": "LeftFocus(y) = h"
},
{
    "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: o ) ) equals Diameter ( CIRCLE: A )",
    "id": 4434,
    "declarations": "o: CONICSECTION; A: CIRCLE",
    "facts": "YCoordinate(UpperVertex(o)) = Diameter(A)"
},
{
    "assertion": "IsPerpendicular ( LINE: F, LineOf ( Center ( CONICSECTION: R ), POINT: K ) ) equals BOOL: False",
    "id": 4435,
    "declarations": "F: LINE; R: CONICSECTION; K: POINT; False: BOOL",
    "facts": "IsPerpendicular(F, LineOf(Center(R), K)) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: o, TRIANGLE: R ) equals BOOL: False",
    "id": 4436,
    "declarations": "o: CIRCLE; R: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(o, R) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: G ) equals LINESEGMENT: b",
    "id": 4437,
    "declarations": "G: ELLIPSE; b: LINESEGMENT",
    "facts": "MinorAxis(G) = b"
},
{
    "assertion": "LineSegmentOf ( LowerFocus ( CONICSECTION: l ), LeftVertex ( CONICSECTION: A ) ) equals LINESEGMENT: r",
    "id": 4438,
    "declarations": "l: CONICSECTION; A: CONICSECTION; r: LINESEGMENT",
    "facts": "LineSegmentOf(LowerFocus(l), LeftVertex(A)) = r"
},
{
    "assertion": "MidPoint ( MinorAxis ( ELLIPSE: o ) ) equals POINT: i",
    "id": 4439,
    "declarations": "o: ELLIPSE; i: POINT",
    "facts": "MidPoint(MinorAxis(o)) = i"
},
{
    "assertion": "LineSegmentOf ( Orthocenter ( TRIANGLE: e ), POINT: Q ) equals LINESEGMENT: N",
    "id": 4440,
    "declarations": "e: TRIANGLE; Q: POINT; N: LINESEGMENT",
    "facts": "LineSegmentOf(Orthocenter(e), Q) = N"
},
{
    "assertion": "Radius ( CIRCLE: M ) equals Quadrant ( POINT: c )",
    "id": 4441,
    "declarations": "M: CIRCLE; c: POINT",
    "facts": "Radius(M) = Quadrant(c)"
},
{
    "assertion": "Center ( CONICSECTION: Q ) equals POINT: t",
    "id": 4442,
    "declarations": "Q: CONICSECTION; t: POINT",
    "facts": "Center(Q) = t"
},
{
    "assertion": "lg ( NUMBER: -4 ) equals Slope ( LINE: L )",
    "id": 4443,
    "declarations": "-4: NUMBER; L: LINE",
    "facts": "lg(-4) = Slope(L)"
},
{
    "assertion": "Diameter ( CIRCLE: b ) equals InterReciprocal ( Eccentricity ( CONICSECTION: H ) )",
    "id": 4444,
    "declarations": "b: CIRCLE; H: CONICSECTION",
    "facts": "Diameter(b) = InterReciprocal(Eccentricity(H))"
},
{
    "assertion": "Center ( CONICSECTION: W ) equals LowerVertex ( CONICSECTION: A )",
    "id": 4445,
    "declarations": "W: CONICSECTION; A: CONICSECTION",
    "facts": "Center(W) = LowerVertex(A)"
},
{
    "assertion": "RealAxis ( ELLIPSE: h ) equals LINESEGMENT: b",
    "id": 4446,
    "declarations": "h: ELLIPSE; b: LINESEGMENT",
    "facts": "RealAxis(h) = b"
},
{
    "assertion": "IsPerpendicular ( LINE: r, LINE: H ) equals BOOL: True",
    "id": 4447,
    "declarations": "r: LINE; H: LINE; True: BOOL",
    "facts": "IsPerpendicular(r, H) = True"
},
{
    "assertion": "Perimeter ( CONICSECTION: G ) equals Radius ( CIRCLE: e )",
    "id": 4448,
    "declarations": "G: CONICSECTION; e: CIRCLE",
    "facts": "Perimeter(G) = Radius(e)"
},
{
    "assertion": "IsChordOf ( MajorAxis ( ELLIPSE: C ), CONICSECTION: g ) equals BOOL: True",
    "id": 4449,
    "declarations": "C: ELLIPSE; g: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(MajorAxis(C), g) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: p ) equals LINESEGMENT: H",
    "id": 4450,
    "declarations": "p: ELLIPSE; H: LINESEGMENT",
    "facts": "MinorAxis(p) = H"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: T ) equals LINE: N",
    "id": 4451,
    "declarations": "T: CONICSECTION; N: LINE",
    "facts": "LeftDirectrix(T) = N"
},
{
    "assertion": "Intercept ( LINE: M, AXIS: yAxis ) equals Diameter ( CIRCLE: H )",
    "id": 4452,
    "declarations": "M: LINE; yAxis: AXIS; H: CIRCLE",
    "facts": "Intercept(M, yAxis) = Diameter(H)"
},
{
    "assertion": "IsTangent ( OverlappingLine ( ImaginaryAxis ( ELLIPSE: Z ) ), CONICSECTION: m ) equals BOOL: False",
    "id": 4453,
    "declarations": "Z: ELLIPSE; m: CONICSECTION; False: BOOL",
    "facts": "IsTangent(OverlappingLine(ImaginaryAxis(Z)), m) = False"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: B ) equals LINE: P",
    "id": 4454,
    "declarations": "B: LINESEGMENT; P: LINE",
    "facts": "OverlappingLine(B) = P"
},
{
    "assertion": "Expression ( CURVE: g ) equals LocusEquation ( RightVertex ( CONICSECTION: h ) )",
    "id": 4455,
    "declarations": "g: CURVE; h: CONICSECTION",
    "facts": "Expression(g) = LocusEquation(RightVertex(h))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: x ) equals MidPoint ( LINESEGMENT: k )",
    "id": 4456,
    "declarations": "x: TRIANGLE; k: LINESEGMENT",
    "facts": "Orthocenter(x) = MidPoint(k)"
},
{
    "assertion": "Locus ( RightVertex ( CONICSECTION: x ) ) equals CURVE: u",
    "id": 4457,
    "declarations": "x: CONICSECTION; u: CURVE",
    "facts": "Locus(RightVertex(x)) = u"
},
{
    "assertion": "YCoordinate ( POINT: A ) equals NUMBER: 68",
    "id": 4458,
    "declarations": "A: POINT; 68: NUMBER",
    "facts": "YCoordinate(A) = 68"
},
{
    "assertion": "lg ( NUMBER: -87 ) equals lg ( NUMBER: 30 )",
    "id": 4459,
    "declarations": "-87: NUMBER; 30: NUMBER",
    "facts": "lg(-87) = lg(30)"
},
{
    "assertion": "Diameter ( CIRCLE: d ) equals Inclination ( LINE: T )",
    "id": 4460,
    "declarations": "d: CIRCLE; T: LINE",
    "facts": "Diameter(d) = Inclination(T)"
},
{
    "assertion": "YCoordinate ( Orthocenter ( TRIANGLE: h ) ) equals lg ( NUMBER: -8 )",
    "id": 4461,
    "declarations": "h: TRIANGLE; -8: NUMBER",
    "facts": "YCoordinate(Orthocenter(h)) = lg(-8)"
},
{
    "assertion": "Endpoint ( RealAxis ( ELLIPSE: S ) ) equals POINT: D",
    "id": 4462,
    "declarations": "S: ELLIPSE; D: POINT",
    "facts": "Endpoint(RealAxis(S)) = D"
},
{
    "assertion": "RightPart ( HYPERBOLA: t ) equals CURVE: H",
    "id": 4463,
    "declarations": "t: HYPERBOLA; H: CURVE",
    "facts": "RightPart(t) = H"
},
{
    "assertion": "PerpendicularBisector ( MajorAxis ( ELLIPSE: j ) ) equals RightDirectrix ( CONICSECTION: F )",
    "id": 4464,
    "declarations": "j: ELLIPSE; F: CONICSECTION",
    "facts": "PerpendicularBisector(MajorAxis(j)) = RightDirectrix(F)"
},
{
    "assertion": "PerpendicularBisector ( MinorAxis ( ELLIPSE: k ) ) equals LINE: R",
    "id": 4465,
    "declarations": "k: ELLIPSE; R: LINE",
    "facts": "PerpendicularBisector(MinorAxis(k)) = R"
},
{
    "assertion": "MidPoint ( LINESEGMENT: E ) equals RightVertex ( CONICSECTION: s )",
    "id": 4466,
    "declarations": "E: LINESEGMENT; s: CONICSECTION",
    "facts": "MidPoint(E) = RightVertex(s)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: A ) equals LINE: k",
    "id": 4467,
    "declarations": "A: CONICSECTION; k: LINE",
    "facts": "RightDirectrix(A) = k"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: T ) equals LINESEGMENT: p",
    "id": 4468,
    "declarations": "T: ELLIPSE; p: LINESEGMENT",
    "facts": "ImaginaryAxis(T) = p"
},
{
    "assertion": "Abs ( LineSegmentOf ( RightVertex ( CONICSECTION: T ), POINT: r ) ) equals YCoordinate ( Circumcenter ( TRIANGLE: Y ) )",
    "id": 4469,
    "declarations": "T: CONICSECTION; r: POINT; Y: TRIANGLE",
    "facts": "Abs(LineSegmentOf(RightVertex(T), r)) = YCoordinate(Circumcenter(Y))"
},
{
    "assertion": "Radius ( CIRCLE: x ) equals NUMBER: -50",
    "id": 4470,
    "declarations": "x: CIRCLE; -50: NUMBER",
    "facts": "Radius(x) = -50"
},
{
    "assertion": "Radius ( CIRCLE: q ) equals Min ( FocalLength ( CONICSECTION: L ) )",
    "id": 4471,
    "declarations": "q: CIRCLE; L: CONICSECTION",
    "facts": "Radius(q) = Min(FocalLength(L))"
},
{
    "assertion": "Min ( Perimeter ( CONICSECTION: g ) ) equals Area ( CONICSECTION: i )",
    "id": 4472,
    "declarations": "g: CONICSECTION; i: CONICSECTION",
    "facts": "Min(Perimeter(g)) = Area(i)"
},
{
    "assertion": "XCoordinate ( POINT: Y ) equals Inclination ( LINE: O )",
    "id": 4473,
    "declarations": "Y: POINT; O: LINE",
    "facts": "XCoordinate(Y) = Inclination(O)"
},
{
    "assertion": "Quadrant ( MidPoint ( LINESEGMENT: b ) ) equals NUMBER: -96",
    "id": 4474,
    "declarations": "b: LINESEGMENT; -96: NUMBER",
    "facts": "Quadrant(MidPoint(b)) = -96"
},
{
    "assertion": "InterReciprocal ( NUMBER: -77 ) equals Diameter ( CIRCLE: N )",
    "id": 4475,
    "declarations": "-77: NUMBER; N: CIRCLE",
    "facts": "InterReciprocal(-77) = Diameter(N)"
},
{
    "assertion": "Between ( POINT: e, LowerFocus ( CONICSECTION: m ), Projection ( POINT: K, LeftDirectrix ( CONICSECTION: F ) ) ) equals BOOL: True",
    "id": 4476,
    "declarations": "e: POINT; m: CONICSECTION; K: POINT; F: CONICSECTION; True: BOOL",
    "facts": "Between(e, LowerFocus(m), Projection(K, LeftDirectrix(F))) = True"
},
{
    "assertion": "TangentOnPoint ( LowerFocus ( CONICSECTION: C ), LeftPart ( HYPERBOLA: O ) ) equals LeftDirectrix ( CONICSECTION: y )",
    "id": 4477,
    "declarations": "C: CONICSECTION; O: HYPERBOLA; y: CONICSECTION",
    "facts": "TangentOnPoint(LowerFocus(C), LeftPart(O)) = LeftDirectrix(y)"
},
{
    "assertion": "AngleOf ( LeftFocus ( CONICSECTION: D ), POINT: C, POINT: a ) equals ApplyUnit ( Perimeter ( CONICSECTION: f ), DEGREESTR: degree )",
    "id": 4478,
    "declarations": "D: CONICSECTION; C: POINT; a: POINT; f: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(LeftFocus(D), C, a) = ApplyUnit(Perimeter(f), degree)"
},
{
    "assertion": "LineOf ( Incenter ( TRIANGLE: Y ), MidPoint ( LINESEGMENT: r ) ) equals LINE: u",
    "id": 4479,
    "declarations": "Y: TRIANGLE; r: LINESEGMENT; u: LINE",
    "facts": "LineOf(Incenter(Y), MidPoint(r)) = u"
},
{
    "assertion": "FocalLength ( CONICSECTION: R ) equals Slope ( LINE: Z )",
    "id": 4480,
    "declarations": "R: CONICSECTION; Z: LINE",
    "facts": "FocalLength(R) = Slope(Z)"
},
{
    "assertion": "DotProduct ( VECTOR: M, VECTOR: Q ) equals sqrt ( FocalLength ( CONICSECTION: v ) )",
    "id": 4481,
    "declarations": "M: VECTOR; Q: VECTOR; v: CONICSECTION",
    "facts": "DotProduct(M, Q) = sqrt(FocalLength(v))"
},
{
    "assertion": "Perimeter ( CONICSECTION: H ) equals Area ( CONICSECTION: N )",
    "id": 4482,
    "declarations": "H: CONICSECTION; N: CONICSECTION",
    "facts": "Perimeter(H) = Area(N)"
},
{
    "assertion": "Area ( CONICSECTION: X ) equals NUMBER: -10",
    "id": 4483,
    "declarations": "X: CONICSECTION; -10: NUMBER",
    "facts": "Area(X) = -10"
},
{
    "assertion": "UpperFocus ( CONICSECTION: I ) equals RightVertex ( CONICSECTION: K )",
    "id": 4484,
    "declarations": "I: CONICSECTION; K: CONICSECTION",
    "facts": "UpperFocus(I) = RightVertex(K)"
},
{
    "assertion": "TriangleOf ( Circumcenter ( TriangleOf ( LeftVertex ( CONICSECTION: X ), POINT: S, MidPoint ( MinorAxis ( ELLIPSE: N ) ) ) ), POINT: j, POINT: o ) equals TRIANGLE: K",
    "id": 4485,
    "declarations": "X: CONICSECTION; S: POINT; N: ELLIPSE; j: POINT; o: POINT; K: TRIANGLE",
    "facts": "TriangleOf(Circumcenter(TriangleOf(LeftVertex(X), S, MidPoint(MinorAxis(N)))), j, o) = K"
},
{
    "assertion": "Intersection ( Locus ( LowerFocus ( CONICSECTION: j ) ), CURVE: T ) equals Center ( CONICSECTION: F )",
    "id": 4486,
    "declarations": "j: CONICSECTION; T: CURVE; F: CONICSECTION",
    "facts": "Intersection(Locus(LowerFocus(j)), T) = Center(F)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: D ) equals LINE: l",
    "id": 4487,
    "declarations": "D: CONICSECTION; l: LINE",
    "facts": "LeftDirectrix(D) = l"
},
{
    "assertion": "LeftFocus ( CONICSECTION: G ) equals Center ( CONICSECTION: C )",
    "id": 4488,
    "declarations": "G: CONICSECTION; C: CONICSECTION",
    "facts": "LeftFocus(G) = Center(C)"
},
{
    "assertion": "LocusEquation ( UpperFocus ( CONICSECTION: N ) ) equals EXPRESSION: x*space=*spacey^2*space-*space4*y*space+*space4",
    "id": 4489,
    "declarations": "N: CONICSECTION; x*space=*spacey^2*space-*space4*y*space+*space4: EXPRESSION",
    "facts": "LocusEquation(UpperFocus(N)) = x*space=*spacey^2*space-*space4*y*space+*space4"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: f ) equals LINESEGMENT: a",
    "id": 4490,
    "declarations": "f: ELLIPSE; a: LINESEGMENT",
    "facts": "ImaginaryAxis(f) = a"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: r ) equals MajorAxis ( ELLIPSE: Y )",
    "id": 4491,
    "declarations": "r: ELLIPSE; Y: ELLIPSE",
    "facts": "ImaginaryAxis(r) = MajorAxis(Y)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: C ) equals CURVE: I",
    "id": 4492,
    "declarations": "C: HYPERBOLA; I: CURVE",
    "facts": "LeftPart(C) = I"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: t ) ) equals POINT: R",
    "id": 4493,
    "declarations": "t: ELLIPSE; R: POINT",
    "facts": "MidPoint(MajorAxis(t)) = R"
},
{
    "assertion": "TangentOnPoint ( LowerFocus ( CONICSECTION: r ), CURVE: i ) equals TangentOfPoint ( POINT: Z, LeftPart ( HYPERBOLA: s ) )",
    "id": 4494,
    "declarations": "r: CONICSECTION; i: CURVE; Z: POINT; s: HYPERBOLA",
    "facts": "TangentOnPoint(LowerFocus(r), i) = TangentOfPoint(Z, LeftPart(s))"
},
{
    "assertion": "And ( HalfFocalLength ( CONICSECTION: B ) equals NUMBER: -81, Radius ( CIRCLE: A ) equals NumIntersection ( CURVE: p, CURVE: f ) ) equals BOOL: False",
    "id": 4495,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsTangent ( LINE: R, CONICSECTION: I ) equals BOOL: True",
    "id": 4496,
    "declarations": "R: LINE; I: CONICSECTION; True: BOOL",
    "facts": "IsTangent(R, I) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: f ) equals POINT: z",
    "id": 4497,
    "declarations": "f: CONICSECTION; z: POINT",
    "facts": "LeftVertex(f) = z"
},
{
    "assertion": "OverlappingLine ( InterceptChord ( LINE: P, CONICSECTION: A ) ) equals LINE: c",
    "id": 4498,
    "declarations": "P: LINE; A: CONICSECTION; c: LINE",
    "facts": "OverlappingLine(InterceptChord(P, A)) = c"
},
{
    "assertion": "InterceptChord ( LeftDirectrix ( CONICSECTION: F ), CONICSECTION: t ) equals LINESEGMENT: F",
    "id": 4499,
    "declarations": "F: CONICSECTION; t: CONICSECTION; F: LINESEGMENT",
    "facts": "InterceptChord(LeftDirectrix(F), t) = F"
},
{
    "assertion": "OverlappingLine ( RealAxis ( ELLIPSE: b ) ) equals LINE: T",
    "id": 4500,
    "declarations": "b: ELLIPSE; T: LINE",
    "facts": "OverlappingLine(RealAxis(b)) = T"
},
{
    "assertion": "IsParallel ( LINE: D, PerpendicularBisector ( LINESEGMENT: l ) ) equals BOOL: False",
    "id": 4501,
    "declarations": "D: LINE; l: LINESEGMENT; False: BOOL",
    "facts": "IsParallel(D, PerpendicularBisector(l)) = False"
},
{
    "assertion": "Locus ( Orthocenter ( TRIANGLE: m ) ) equals CURVE: k",
    "id": 4502,
    "declarations": "m: TRIANGLE; k: CURVE",
    "facts": "Locus(Orthocenter(m)) = k"
},
{
    "assertion": "Between ( POINT: h, POINT: L, UpperFocus ( CONICSECTION: V ) ) equals BOOL: False",
    "id": 4503,
    "declarations": "h: POINT; L: POINT; V: CONICSECTION; False: BOOL",
    "facts": "Between(h, L, UpperFocus(V)) = False"
},
{
    "assertion": "Endpoint ( LINESEGMENT: k ) equals POINT: r",
    "id": 4504,
    "declarations": "k: LINESEGMENT; r: POINT",
    "facts": "Endpoint(k) = r"
},
{
    "assertion": "Radius ( CIRCLE: S ) equals NUMBER: -50",
    "id": 4505,
    "declarations": "S: CIRCLE; -50: NUMBER",
    "facts": "Radius(S) = -50"
},
{
    "assertion": "RightPart ( HYPERBOLA: V ) equals CURVE: J",
    "id": 4506,
    "declarations": "V: HYPERBOLA; J: CURVE",
    "facts": "RightPart(V) = J"
},
{
    "assertion": "Distance ( RightFocus ( CONICSECTION: y ), POINT: i ) equals XCoordinate ( LowerFocus ( CONICSECTION: m ) )",
    "id": 4507,
    "declarations": "y: CONICSECTION; i: POINT; m: CONICSECTION",
    "facts": "Distance(RightFocus(y), i) = XCoordinate(LowerFocus(m))"
},
{
    "assertion": "Distance ( LowerVertex ( CONICSECTION: x ), LeftFocus ( CONICSECTION: w ) ) equals NUMBER: -22",
    "id": 4508,
    "declarations": "x: CONICSECTION; w: CONICSECTION; -22: NUMBER",
    "facts": "Distance(LowerVertex(x), LeftFocus(w)) = -22"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: R, CIRCLE: b ) equals BOOL: True",
    "id": 4509,
    "declarations": "R: LINESEGMENT; b: CIRCLE; True: BOOL",
    "facts": "IsDiameter(R, b) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: R ) equals FootPoint ( OverlappingLine ( LINESEGMENT: B ), TangentOnPoint ( Circumcenter ( TRIANGLE: P ), CURVE: X ) )",
    "id": 4510,
    "declarations": "R: CONICSECTION; B: LINESEGMENT; P: TRIANGLE; X: CURVE",
    "facts": "LeftFocus(R) = FootPoint(OverlappingLine(B), TangentOnPoint(Circumcenter(P), X))"
},
{
    "assertion": "Locus ( Orthocenter ( TRIANGLE: Z ) ) equals CURVE: E",
    "id": 4511,
    "declarations": "Z: TRIANGLE; E: CURVE",
    "facts": "Locus(Orthocenter(Z)) = E"
},
{
    "assertion": "Abs ( LINESEGMENT: a ) equals NUMBER: -40",
    "id": 4512,
    "declarations": "a: LINESEGMENT; -40: NUMBER",
    "facts": "Abs(a) = -40"
},
{
    "assertion": "Negation ( Intercept ( LeftDirectrix ( CONICSECTION: r ), AXIS: yAxis ) equals Abs ( LINESEGMENT: O ) ) equals BOOL: True",
    "id": 4513,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "PointOnCurve ( UpperFocus ( CONICSECTION: C ), CURVE: q ) equals BOOL: True",
    "id": 4514,
    "declarations": "C: CONICSECTION; q: CURVE; True: BOOL",
    "facts": "PointOnCurve(UpperFocus(C), q) = True"
},
{
    "assertion": "ApplyUnit ( NUMBER: -22, DEGREESTR: degree )",
    "id": 4515,
    "declarations": "-22: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-22, degree) = None"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: A ) ) equals Slope ( LINE: z )",
    "id": 4516,
    "declarations": "A: CONICSECTION; z: LINE",
    "facts": "Slope(RightDirectrix(A)) = Slope(z)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: U ) equals MidPoint ( ImaginaryAxis ( ELLIPSE: U ) )",
    "id": 4517,
    "declarations": "U: CONICSECTION; U: ELLIPSE",
    "facts": "LeftFocus(U) = MidPoint(ImaginaryAxis(U))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: K ) equals Distance ( LowerFocus ( CONICSECTION: b ), FootPoint ( PerpendicularBisector ( MajorAxis ( ELLIPSE: d ) ), LINE: h ) )",
    "id": 4518,
    "declarations": "K: CONICSECTION; b: CONICSECTION; d: ELLIPSE; h: LINE",
    "facts": "Eccentricity(K) = Distance(LowerFocus(b), FootPoint(PerpendicularBisector(MajorAxis(d)), h))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: M ) equals Center ( CONICSECTION: s )",
    "id": 4519,
    "declarations": "M: CONICSECTION; s: CONICSECTION",
    "facts": "UpperVertex(M) = Center(s)"
},
{
    "assertion": "Endpoint ( RealAxis ( ELLIPSE: e ) ) equals Incenter ( TRIANGLE: G )",
    "id": 4520,
    "declarations": "e: ELLIPSE; G: TRIANGLE",
    "facts": "Endpoint(RealAxis(e)) = Incenter(G)"
},
{
    "assertion": "Perimeter ( CONICSECTION: p ) equals XCoordinate ( POINT: e )",
    "id": 4521,
    "declarations": "p: CONICSECTION; e: POINT",
    "facts": "Perimeter(p) = XCoordinate(e)"
},
{
    "assertion": "lg ( NUMBER: 94 ) equals NumIntersection ( CURVE: f, CURVE: F )",
    "id": 4522,
    "declarations": "94: NUMBER; f: CURVE; F: CURVE",
    "facts": "lg(94) = NumIntersection(f, F)"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: N ) ) equals LeftVertex ( CONICSECTION: f )",
    "id": 4523,
    "declarations": "N: ELLIPSE; f: CONICSECTION",
    "facts": "MidPoint(MajorAxis(N)) = LeftVertex(f)"
},
{
    "assertion": "InterReciprocal ( NUMBER: 59 ) equals NUMBER: -37",
    "id": 4524,
    "declarations": "59: NUMBER; -37: NUMBER",
    "facts": "InterReciprocal(59) = -37"
},
{
    "assertion": "Inclination ( LINE: K ) equals NUMBER: 18",
    "id": 4525,
    "declarations": "K: LINE; 18: NUMBER",
    "facts": "Inclination(K) = 18"
},
{
    "assertion": "LowerVertex ( CONICSECTION: Q ) equals POINT: K",
    "id": 4526,
    "declarations": "Q: CONICSECTION; K: POINT",
    "facts": "LowerVertex(Q) = K"
},
{
    "assertion": "OverlappingLine ( ImaginaryAxis ( ELLIPSE: s ) ) equals LINE: F",
    "id": 4527,
    "declarations": "s: ELLIPSE; F: LINE",
    "facts": "OverlappingLine(ImaginaryAxis(s)) = F"
},
{
    "assertion": "LowerVertex ( CONICSECTION: E ) equals POINT: w",
    "id": 4528,
    "declarations": "E: CONICSECTION; w: POINT",
    "facts": "LowerVertex(E) = w"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: g ) equals LINE: e",
    "id": 4529,
    "declarations": "g: CONICSECTION; e: LINE",
    "facts": "LeftDirectrix(g) = e"
},
{
    "assertion": "RightPart ( HYPERBOLA: x ) equals CURVE: Z",
    "id": 4530,
    "declarations": "x: HYPERBOLA; Z: CURVE",
    "facts": "RightPart(x) = Z"
},
{
    "assertion": "IsDiameter ( MinorAxis ( ELLIPSE: t ), CIRCLE: F ) equals BOOL: False",
    "id": 4531,
    "declarations": "t: ELLIPSE; F: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MinorAxis(t), F) = False"
},
{
    "assertion": "CircumCircle ( TRIANGLE: b ) equals CIRCLE: i",
    "id": 4532,
    "declarations": "b: TRIANGLE; i: CIRCLE",
    "facts": "CircumCircle(b) = i"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: R ) ) equals Radius ( CIRCLE: r )",
    "id": 4533,
    "declarations": "R: CONICSECTION; r: CIRCLE",
    "facts": "XCoordinate(LeftFocus(R)) = Radius(r)"
},
{
    "assertion": "DotProduct ( VECTOR: y, VECTOR: y ) equals NUMBER: 75",
    "id": 4534,
    "declarations": "y: VECTOR; y: VECTOR; 75: NUMBER",
    "facts": "DotProduct(y, y) = 75"
},
{
    "assertion": "FocalLength ( CONICSECTION: M ) equals NUMBER: 96",
    "id": 4535,
    "declarations": "M: CONICSECTION; 96: NUMBER",
    "facts": "FocalLength(M) = 96"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: I ) equals LINE: y",
    "id": 4536,
    "declarations": "I: CONICSECTION; y: LINE",
    "facts": "RightDirectrix(I) = y"
},
{
    "assertion": "LowerFocus ( CONICSECTION: C ) equals POINT: f",
    "id": 4537,
    "declarations": "C: CONICSECTION; f: POINT",
    "facts": "LowerFocus(C) = f"
},
{
    "assertion": "RightPart ( HYPERBOLA: s ) equals CURVE: d",
    "id": 4538,
    "declarations": "s: HYPERBOLA; d: CURVE",
    "facts": "RightPart(s) = d"
},
{
    "assertion": "LeftPart ( HYPERBOLA: Q ) equals CURVE: w",
    "id": 4539,
    "declarations": "Q: HYPERBOLA; w: CURVE",
    "facts": "LeftPart(Q) = w"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: r ) ) equals Diameter ( CIRCLE: v )",
    "id": 4540,
    "declarations": "r: TRIANGLE; v: CIRCLE",
    "facts": "Radius(CircumCircle(r)) = Diameter(v)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: h, TRIANGLE: J ) equals BOOL: False",
    "id": 4541,
    "declarations": "h: CIRCLE; J: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(h, J) = False"
},
{
    "assertion": "Expression ( CURVE: Q ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 4542,
    "declarations": "Q: CURVE; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(Q) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "Abs ( LINESEGMENT: r ) equals Inclination ( RightDirectrix ( CONICSECTION: k ) )",
    "id": 4543,
    "declarations": "r: LINESEGMENT; k: CONICSECTION",
    "facts": "Abs(r) = Inclination(RightDirectrix(k))"
},
{
    "assertion": "IsPerpendicular ( LINE: U, TangentOfPoint ( FootPoint ( PerpendicularBisector ( MinorAxis ( ELLIPSE: L ) ), LINE: U ), CURVE: F ) ) equals BOOL: True",
    "id": 4544,
    "declarations": "U: LINE; L: ELLIPSE; U: LINE; F: CURVE; True: BOOL",
    "facts": "IsPerpendicular(U, TangentOfPoint(FootPoint(PerpendicularBisector(MinorAxis(L)), U), F)) = True"
},
{
    "assertion": "Projection ( POINT: T, RightDirectrix ( CONICSECTION: f ) ) equals LeftFocus ( CONICSECTION: i )",
    "id": 4545,
    "declarations": "T: POINT; f: CONICSECTION; i: CONICSECTION",
    "facts": "Projection(T, RightDirectrix(f)) = LeftFocus(i)"
},
{
    "assertion": "InterReciprocal ( Diameter ( CircumCircle ( TRIANGLE: P ) ) ) equals NUMBER: 84",
    "id": 4546,
    "declarations": "P: TRIANGLE; 84: NUMBER",
    "facts": "InterReciprocal(Diameter(CircumCircle(P))) = 84"
},
{
    "assertion": "TangentOfPoint ( Circumcenter ( TRIANGLE: f ), LeftPart ( HYPERBOLA: h ) ) equals LINE: z",
    "id": 4547,
    "declarations": "f: TRIANGLE; h: HYPERBOLA; z: LINE",
    "facts": "TangentOfPoint(Circumcenter(f), LeftPart(h)) = z"
},
{
    "assertion": "RightFocus ( CONICSECTION: q ) equals POINT: Z",
    "id": 4548,
    "declarations": "q: CONICSECTION; Z: POINT",
    "facts": "RightFocus(q) = Z"
},
{
    "assertion": "sqrt ( YCoordinate ( POINT: w ) ) equals NUMBER: -17",
    "id": 4549,
    "declarations": "w: POINT; -17: NUMBER",
    "facts": "sqrt(YCoordinate(w)) = -17"
},
{
    "assertion": "PerpendicularBisector ( MinorAxis ( ELLIPSE: w ) ) equals OverlappingLine ( LINESEGMENT: K )",
    "id": 4550,
    "declarations": "w: ELLIPSE; K: LINESEGMENT",
    "facts": "PerpendicularBisector(MinorAxis(w)) = OverlappingLine(K)"
},
{
    "assertion": "Area ( CONICSECTION: a ) equals NUMBER: 32",
    "id": 4551,
    "declarations": "a: CONICSECTION; 32: NUMBER",
    "facts": "Area(a) = 32"
},
{
    "assertion": "Expression ( CURVE: K ) equals EXPRESSION: x^2*space+*space4*y^2*space=*space16",
    "id": 4552,
    "declarations": "K: CURVE; x^2*space+*space4*y^2*space=*space16: EXPRESSION",
    "facts": "Expression(K) = x^2*space+*space4*y^2*space=*space16"
},
{
    "assertion": "XCoordinate ( POINT: p ) equals InterReciprocal ( NUMBER: 67 )",
    "id": 4553,
    "declarations": "p: POINT; 67: NUMBER",
    "facts": "XCoordinate(p) = InterReciprocal(67)"
},
{
    "assertion": "Vertex ( CONICSECTION: W ) equals LeftVertex ( CONICSECTION: P )",
    "id": 4554,
    "declarations": "W: CONICSECTION; P: CONICSECTION",
    "facts": "Vertex(W) = LeftVertex(P)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: p ) equals UpperVertex ( CONICSECTION: S )",
    "id": 4555,
    "declarations": "p: CONICSECTION; S: CONICSECTION",
    "facts": "UpperFocus(p) = UpperVertex(S)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: s ) equals POINT: m",
    "id": 4556,
    "declarations": "s: CONICSECTION; m: POINT",
    "facts": "UpperFocus(s) = m"
},
{
    "assertion": "MinorAxis ( ELLIPSE: e ) equals RealAxis ( ELLIPSE: O )",
    "id": 4557,
    "declarations": "e: ELLIPSE; O: ELLIPSE",
    "facts": "MinorAxis(e) = RealAxis(O)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: s ) equals CURVE: E",
    "id": 4558,
    "declarations": "s: HYPERBOLA; E: CURVE",
    "facts": "LeftPart(s) = E"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: V, TRIANGLE: V ) equals BOOL: False",
    "id": 4559,
    "declarations": "V: CIRCLE; V: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(V, V) = False"
},
{
    "assertion": "Radius ( CIRCLE: w ) equals NUMBER: 18",
    "id": 4560,
    "declarations": "w: CIRCLE; 18: NUMBER",
    "facts": "Radius(w) = 18"
},
{
    "assertion": "Eccentricity ( CONICSECTION: B ) equals Radius ( CIRCLE: l )",
    "id": 4561,
    "declarations": "B: CONICSECTION; l: CIRCLE",
    "facts": "Eccentricity(B) = Radius(l)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: b ) equals Orthocenter ( TRIANGLE: a )",
    "id": 4562,
    "declarations": "b: CONICSECTION; a: TRIANGLE",
    "facts": "UpperFocus(b) = Orthocenter(a)"
},
{
    "assertion": "RightPart ( HYPERBOLA: N ) equals CURVE: n",
    "id": 4563,
    "declarations": "N: HYPERBOLA; n: CURVE",
    "facts": "RightPart(N) = n"
},
{
    "assertion": "TangentOnPoint ( Center ( CONICSECTION: C ), LeftPart ( HYPERBOLA: h ) ) equals LINE: P",
    "id": 4564,
    "declarations": "C: CONICSECTION; h: HYPERBOLA; P: LINE",
    "facts": "TangentOnPoint(Center(C), LeftPart(h)) = P"
},
{
    "assertion": "LeftVertex ( CONICSECTION: E ) equals LeftVertex ( CONICSECTION: N )",
    "id": 4565,
    "declarations": "E: CONICSECTION; N: CONICSECTION",
    "facts": "LeftVertex(E) = LeftVertex(N)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: c, TRIANGLE: Z ) equals BOOL: False",
    "id": 4566,
    "declarations": "c: CIRCLE; Z: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(c, Z) = False"
},
{
    "assertion": "FootPoint ( LINE: G, LINE: D ) equals Incenter ( TRIANGLE: Y )",
    "id": 4567,
    "declarations": "G: LINE; D: LINE; Y: TRIANGLE",
    "facts": "FootPoint(G, D) = Incenter(Y)"
},
{
    "assertion": "Locus ( RightFocus ( CONICSECTION: Y ) ) equals CURVE: W",
    "id": 4568,
    "declarations": "Y: CONICSECTION; W: CURVE",
    "facts": "Locus(RightFocus(Y)) = W"
},
{
    "assertion": "MajorAxis ( ELLIPSE: D ) equals InterceptChord ( TangentOnPoint ( POINT: l, CURVE: H ), CONICSECTION: j )",
    "id": 4569,
    "declarations": "D: ELLIPSE; l: POINT; H: CURVE; j: CONICSECTION",
    "facts": "MajorAxis(D) = InterceptChord(TangentOnPoint(l, H), j)"
},
{
    "assertion": "PointOnCurve ( LeftFocus ( CONICSECTION: C ), CURVE: E ) equals BOOL: True",
    "id": 4570,
    "declarations": "C: CONICSECTION; E: CURVE; True: BOOL",
    "facts": "PointOnCurve(LeftFocus(C), E) = True"
},
{
    "assertion": "RightFocus ( CONICSECTION: j ) equals POINT: U",
    "id": 4571,
    "declarations": "j: CONICSECTION; U: POINT",
    "facts": "RightFocus(j) = U"
},
{
    "assertion": "InterReciprocal ( NUMBER: -69 ) equals NUMBER: 72",
    "id": 4572,
    "declarations": "-69: NUMBER; 72: NUMBER",
    "facts": "InterReciprocal(-69) = 72"
},
{
    "assertion": "PointOnCurve ( POINT: h, RightPart ( HYPERBOLA: g ) ) equals BOOL: True",
    "id": 4573,
    "declarations": "h: POINT; g: HYPERBOLA; True: BOOL",
    "facts": "PointOnCurve(h, RightPart(g)) = True"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: I ) equals LINE: V",
    "id": 4574,
    "declarations": "I: CONICSECTION; V: LINE",
    "facts": "LeftDirectrix(I) = V"
},
{
    "assertion": "CircumCircle ( TRIANGLE: r ) equals CIRCLE: z",
    "id": 4575,
    "declarations": "r: TRIANGLE; z: CIRCLE",
    "facts": "CircumCircle(r) = z"
},
{
    "assertion": "Asymptote ( HYPERBOLA: u ) equals LINE: U",
    "id": 4576,
    "declarations": "u: HYPERBOLA; U: LINE",
    "facts": "Asymptote(u) = U"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: G, TRIANGLE: x ) equals BOOL: True",
    "id": 4577,
    "declarations": "G: CIRCLE; x: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(G, x) = True"
},
{
    "assertion": "RightFocus ( CONICSECTION: t ) equals POINT: A",
    "id": 4578,
    "declarations": "t: CONICSECTION; A: POINT",
    "facts": "RightFocus(t) = A"
},
{
    "assertion": "Perimeter ( CONICSECTION: A ) equals NUMBER: 91",
    "id": 4579,
    "declarations": "A: CONICSECTION; 91: NUMBER",
    "facts": "Perimeter(A) = 91"
},
{
    "assertion": "Max ( NUMBER: 70 ) equals Slope ( LINE: T )",
    "id": 4580,
    "declarations": "70: NUMBER; T: LINE",
    "facts": "Max(70) = Slope(T)"
},
{
    "assertion": "RightFocus ( CONICSECTION: g ) equals MidPoint ( LINESEGMENT: c )",
    "id": 4581,
    "declarations": "g: CONICSECTION; c: LINESEGMENT",
    "facts": "RightFocus(g) = MidPoint(c)"
},
{
    "assertion": "TangentOnPoint ( Center ( CONICSECTION: x ), LeftPart ( HYPERBOLA: K ) ) equals RightDirectrix ( CONICSECTION: V )",
    "id": 4582,
    "declarations": "x: CONICSECTION; K: HYPERBOLA; V: CONICSECTION",
    "facts": "TangentOnPoint(Center(x), LeftPart(K)) = RightDirectrix(V)"
},
{
    "assertion": "VectorOf ( POINT: R, POINT: M ) equals VECTOR: k",
    "id": 4583,
    "declarations": "R: POINT; M: POINT; k: VECTOR",
    "facts": "VectorOf(R, M) = k"
},
{
    "assertion": "LocusEquation ( Orthocenter ( TRIANGLE: d ) ) equals EXPRESSION: x^2*space+*spacey^2*space+*space6*x*space-*space4*y*space=*space12",
    "id": 4584,
    "declarations": "d: TRIANGLE; x^2*space+*spacey^2*space+*space6*x*space-*space4*y*space=*space12: EXPRESSION",
    "facts": "LocusEquation(Orthocenter(d)) = x^2*space+*spacey^2*space+*space6*x*space-*space4*y*space=*space12"
},
{
    "assertion": "Eccentricity ( CONICSECTION: N ) equals YCoordinate ( POINT: a )",
    "id": 4585,
    "declarations": "N: CONICSECTION; a: POINT",
    "facts": "Eccentricity(N) = YCoordinate(a)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: R ) equals POINT: z",
    "id": 4586,
    "declarations": "R: TRIANGLE; z: POINT",
    "facts": "Orthocenter(R) = z"
},
{
    "assertion": "RightVertex ( CONICSECTION: x ) equals POINT: w",
    "id": 4587,
    "declarations": "x: CONICSECTION; w: POINT",
    "facts": "RightVertex(x) = w"
},
{
    "assertion": "Slope ( LeftDirectrix ( CONICSECTION: e ) ) equals Length ( LINESEGMENT: K )",
    "id": 4588,
    "declarations": "e: CONICSECTION; K: LINESEGMENT",
    "facts": "Slope(LeftDirectrix(e)) = Length(K)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: n ) equals LINE: m",
    "id": 4589,
    "declarations": "n: CONICSECTION; m: LINE",
    "facts": "LeftDirectrix(n) = m"
},
{
    "assertion": "Locus ( Circumcenter ( TRIANGLE: s ) ) equals CURVE: M",
    "id": 4590,
    "declarations": "s: TRIANGLE; M: CURVE",
    "facts": "Locus(Circumcenter(s)) = M"
},
{
    "assertion": "Negation ( Coordinate ( POINT: y ) equals ( Inclination ( LINE: p ), NUMBER: -6 ) ) equals BOOL: False",
    "id": 4591,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Inclination ( LINE: F ) equals FocalLength ( CONICSECTION: M )",
    "id": 4592,
    "declarations": "F: LINE; M: CONICSECTION",
    "facts": "Inclination(F) = FocalLength(M)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: R ) equals UpperVertex ( CONICSECTION: k )",
    "id": 4593,
    "declarations": "R: CONICSECTION; k: CONICSECTION",
    "facts": "UpperVertex(R) = UpperVertex(k)"
},
{
    "assertion": "Length ( RealAxis ( ELLIPSE: Z ) ) equals XCoordinate ( Circumcenter ( TRIANGLE: f ) )",
    "id": 4594,
    "declarations": "Z: ELLIPSE; f: TRIANGLE",
    "facts": "Length(RealAxis(Z)) = XCoordinate(Circumcenter(f))"
},
{
    "assertion": "InterceptChord ( LINE: S, CONICSECTION: g ) equals LINESEGMENT: r",
    "id": 4595,
    "declarations": "S: LINE; g: CONICSECTION; r: LINESEGMENT",
    "facts": "InterceptChord(S, g) = r"
},
{
    "assertion": "TangentOfPoint ( POINT: q, CURVE: x ) equals LeftDirectrix ( CONICSECTION: L )",
    "id": 4596,
    "declarations": "q: POINT; x: CURVE; L: CONICSECTION",
    "facts": "TangentOfPoint(q, x) = LeftDirectrix(L)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: x ) equals MinorAxis ( ELLIPSE: M )",
    "id": 4597,
    "declarations": "x: ELLIPSE; M: ELLIPSE",
    "facts": "MinorAxis(x) = MinorAxis(M)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: z ) equals UpperVertex ( CONICSECTION: y )",
    "id": 4598,
    "declarations": "z: CONICSECTION; y: CONICSECTION",
    "facts": "UpperVertex(z) = UpperVertex(y)"
},
{
    "assertion": "LineSegmentOf ( UpperVertex ( CONICSECTION: W ), UpperFocus ( CONICSECTION: p ) ) equals LINESEGMENT: W",
    "id": 4599,
    "declarations": "W: CONICSECTION; p: CONICSECTION; W: LINESEGMENT",
    "facts": "LineSegmentOf(UpperVertex(W), UpperFocus(p)) = W"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: U, CONICSECTION: o ) equals BOOL: True",
    "id": 4600,
    "declarations": "U: LINESEGMENT; o: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(U, o) = True"
},
{
    "assertion": "Length ( LINESEGMENT: d ) equals NUMBER: -32",
    "id": 4601,
    "declarations": "d: LINESEGMENT; -32: NUMBER",
    "facts": "Length(d) = -32"
},
{
    "assertion": "Area ( CONICSECTION: Y ) equals NUMBER: 50",
    "id": 4602,
    "declarations": "Y: CONICSECTION; 50: NUMBER",
    "facts": "Area(Y) = 50"
},
{
    "assertion": "RightFocus ( CONICSECTION: W ) equals LowerFocus ( CONICSECTION: A )",
    "id": 4603,
    "declarations": "W: CONICSECTION; A: CONICSECTION",
    "facts": "RightFocus(W) = LowerFocus(A)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: a, CONICSECTION: a ) equals BOOL: False",
    "id": 4604,
    "declarations": "a: LINESEGMENT; a: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(a, a) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: v ) equals RightVertex ( CONICSECTION: J )",
    "id": 4605,
    "declarations": "v: CONICSECTION; J: CONICSECTION",
    "facts": "RightVertex(v) = RightVertex(J)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: s ) equals CIRCLE: F",
    "id": 4606,
    "declarations": "s: TRIANGLE; F: CIRCLE",
    "facts": "CircumCircle(s) = F"
},
{
    "assertion": "Distance ( POINT: U, POINT: u ) equals NUMBER: 58",
    "id": 4607,
    "declarations": "U: POINT; u: POINT; 58: NUMBER",
    "facts": "Distance(U, u) = 58"
},
{
    "assertion": "InterceptChord ( LINE: e, CONICSECTION: e ) equals LINESEGMENT: g",
    "id": 4608,
    "declarations": "e: LINE; e: CONICSECTION; g: LINESEGMENT",
    "facts": "InterceptChord(e, e) = g"
},
{
    "assertion": "Focus ( CONICSECTION: Z ) equals RightFocus ( CONICSECTION: k )",
    "id": 4609,
    "declarations": "Z: CONICSECTION; k: CONICSECTION",
    "facts": "Focus(Z) = RightFocus(k)"
},
{
    "assertion": "Focus ( CONICSECTION: y ) equals POINT: X",
    "id": 4610,
    "declarations": "y: CONICSECTION; X: POINT",
    "facts": "Focus(y) = X"
},
{
    "assertion": "Quadrant ( POINT: F ) equals NUMBER: -9",
    "id": 4611,
    "declarations": "F: POINT; -9: NUMBER",
    "facts": "Quadrant(F) = -9"
},
{
    "assertion": "Abs ( MajorAxis ( ELLIPSE: W ) ) equals NUMBER: -96",
    "id": 4612,
    "declarations": "W: ELLIPSE; -96: NUMBER",
    "facts": "Abs(MajorAxis(W)) = -96"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: s ) equals OverlappingLine ( LINESEGMENT: J )",
    "id": 4613,
    "declarations": "s: LINESEGMENT; J: LINESEGMENT",
    "facts": "OverlappingLine(s) = OverlappingLine(J)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: x ) equals POINT: c",
    "id": 4614,
    "declarations": "x: LINESEGMENT; c: POINT",
    "facts": "Endpoint(x) = c"
},
{
    "assertion": "XCoordinate ( POINT: c ) equals NUMBER: 18",
    "id": 4615,
    "declarations": "c: POINT; 18: NUMBER",
    "facts": "XCoordinate(c) = 18"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: D, CIRCLE: z ) equals BOOL: True",
    "id": 4616,
    "declarations": "D: LINESEGMENT; z: CIRCLE; True: BOOL",
    "facts": "IsDiameter(D, z) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: G ) equals UpperVertex ( CONICSECTION: j )",
    "id": 4617,
    "declarations": "G: TRIANGLE; j: CONICSECTION",
    "facts": "Orthocenter(G) = UpperVertex(j)"
},
{
    "assertion": "Center ( CONICSECTION: O ) equals UpperFocus ( CONICSECTION: g )",
    "id": 4618,
    "declarations": "O: CONICSECTION; g: CONICSECTION",
    "facts": "Center(O) = UpperFocus(g)"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: r ), TRIANGLE: W ) equals BOOL: False",
    "id": 4619,
    "declarations": "r: TRIANGLE; W: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(r), W) = False"
},
{
    "assertion": "Min ( NUMBER: 44 ) equals Area ( CONICSECTION: g )",
    "id": 4620,
    "declarations": "44: NUMBER; g: CONICSECTION",
    "facts": "Min(44) = Area(g)"
},
{
    "assertion": "Slope ( LINE: J ) equals NUMBER: -94",
    "id": 4621,
    "declarations": "J: LINE; -94: NUMBER",
    "facts": "Slope(J) = -94"
},
{
    "assertion": "Abs ( LINESEGMENT: I ) equals InterReciprocal ( NUMBER: 14 )",
    "id": 4622,
    "declarations": "I: LINESEGMENT; 14: NUMBER",
    "facts": "Abs(I) = InterReciprocal(14)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: p ) equals Circumcenter ( TRIANGLE: L )",
    "id": 4623,
    "declarations": "p: CONICSECTION; L: TRIANGLE",
    "facts": "LowerVertex(p) = Circumcenter(L)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: K ) equals LINE: x",
    "id": 4624,
    "declarations": "K: LINESEGMENT; x: LINE",
    "facts": "OverlappingLine(K) = x"
},
{
    "assertion": "IsParallel ( LINE: k, LINE: Y ) equals BOOL: False",
    "id": 4625,
    "declarations": "k: LINE; Y: LINE; False: BOOL",
    "facts": "IsParallel(k, Y) = False"
},
{
    "assertion": "UpperVertex ( CONICSECTION: r ) equals POINT: Z",
    "id": 4626,
    "declarations": "r: CONICSECTION; Z: POINT",
    "facts": "UpperVertex(r) = Z"
},
{
    "assertion": "InterceptChord ( RightDirectrix ( CONICSECTION: i ), CONICSECTION: Y ) equals LINESEGMENT: I",
    "id": 4627,
    "declarations": "i: CONICSECTION; Y: CONICSECTION; I: LINESEGMENT",
    "facts": "InterceptChord(RightDirectrix(i), Y) = I"
},
{
    "assertion": "VectorOf ( Projection ( POINT: P, LeftDirectrix ( CONICSECTION: U ) ), Center ( CONICSECTION: a ) ) equals VECTOR: o",
    "id": 4628,
    "declarations": "P: POINT; U: CONICSECTION; a: CONICSECTION; o: VECTOR",
    "facts": "VectorOf(Projection(P, LeftDirectrix(U)), Center(a)) = o"
},
{
    "assertion": "Intercept ( LINE: Q, AXIS: yAxis ) equals NUMBER: -9",
    "id": 4629,
    "declarations": "Q: LINE; yAxis: AXIS; -9: NUMBER",
    "facts": "Intercept(Q, yAxis) = -9"
},
{
    "assertion": "IsIntersect ( CURVE: r, CURVE: K ) equals BOOL: False",
    "id": 4630,
    "declarations": "r: CURVE; K: CURVE; False: BOOL",
    "facts": "IsIntersect(r, K) = False"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: P ) equals LINESEGMENT: b",
    "id": 4631,
    "declarations": "P: ELLIPSE; b: LINESEGMENT",
    "facts": "ImaginaryAxis(P) = b"
},
{
    "assertion": "Intercept ( LINE: V, AXIS: yAxis ) equals HalfFocalLength ( CONICSECTION: I )",
    "id": 4632,
    "declarations": "V: LINE; yAxis: AXIS; I: CONICSECTION",
    "facts": "Intercept(V, yAxis) = HalfFocalLength(I)"
},
{
    "assertion": "Area ( CONICSECTION: S ) equals FocalLength ( CONICSECTION: g )",
    "id": 4633,
    "declarations": "S: CONICSECTION; g: CONICSECTION",
    "facts": "Area(S) = FocalLength(g)"
},
{
    "assertion": "InterceptChord ( TangentOfPoint ( MidPoint ( LINESEGMENT: y ), CURVE: O ), CONICSECTION: g ) equals LINESEGMENT: z",
    "id": 4634,
    "declarations": "y: LINESEGMENT; O: CURVE; g: CONICSECTION; z: LINESEGMENT",
    "facts": "InterceptChord(TangentOfPoint(MidPoint(y), O), g) = z"
},
{
    "assertion": "Area ( CONICSECTION: u ) equals Length ( InterceptChord ( LINE: L, CONICSECTION: o ) )",
    "id": 4635,
    "declarations": "u: CONICSECTION; L: LINE; o: CONICSECTION",
    "facts": "Area(u) = Length(InterceptChord(L, o))"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: H ) equals AXIS: xAxis",
    "id": 4636,
    "declarations": "H: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(H) = xAxis"
},
{
    "assertion": "Vertex ( CONICSECTION: k ) equals POINT: T",
    "id": 4637,
    "declarations": "k: CONICSECTION; T: POINT",
    "facts": "Vertex(k) = T"
},
{
    "assertion": "Incenter ( TRIANGLE: t ) equals LeftFocus ( CONICSECTION: R )",
    "id": 4638,
    "declarations": "t: TRIANGLE; R: CONICSECTION",
    "facts": "Incenter(t) = LeftFocus(R)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: p, TRIANGLE: b ) equals BOOL: True",
    "id": 4639,
    "declarations": "p: CIRCLE; b: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(p, b) = True"
},
{
    "assertion": "Slope ( LINE: V ) equals NUMBER: 35",
    "id": 4640,
    "declarations": "V: LINE; 35: NUMBER",
    "facts": "Slope(V) = 35"
},
{
    "assertion": "Endpoint ( LINESEGMENT: U ) equals MidPoint ( LINESEGMENT: A )",
    "id": 4641,
    "declarations": "U: LINESEGMENT; A: LINESEGMENT",
    "facts": "Endpoint(U) = MidPoint(A)"
},
{
    "assertion": "ApplyUnit ( Length ( LINESEGMENT: O ), DEGREESTR: degree )",
    "id": 4642,
    "declarations": "O: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(Length(O), degree) = None"
},
{
    "assertion": "RightFocus ( CONICSECTION: n ) equals UpperFocus ( CONICSECTION: W )",
    "id": 4643,
    "declarations": "n: CONICSECTION; W: CONICSECTION",
    "facts": "RightFocus(n) = UpperFocus(W)"
},
{
    "assertion": "IsTangent ( LINE: R, CONICSECTION: o ) equals BOOL: False",
    "id": 4644,
    "declarations": "R: LINE; o: CONICSECTION; False: BOOL",
    "facts": "IsTangent(R, o) = False"
},
{
    "assertion": "RightPart ( HYPERBOLA: q ) equals Locus ( Orthocenter ( TRIANGLE: o ) )",
    "id": 4645,
    "declarations": "q: HYPERBOLA; o: TRIANGLE",
    "facts": "RightPart(q) = Locus(Orthocenter(o))"
},
{
    "assertion": "Slope ( LINE: K ) equals Intercept ( LINE: f, AXIS: xAxis )",
    "id": 4646,
    "declarations": "K: LINE; f: LINE; xAxis: AXIS",
    "facts": "Slope(K) = Intercept(f, xAxis)"
},
{
    "assertion": "InterceptChord ( LINE: Y, CONICSECTION: h ) equals LINESEGMENT: N",
    "id": 4647,
    "declarations": "Y: LINE; h: CONICSECTION; N: LINESEGMENT",
    "facts": "InterceptChord(Y, h) = N"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: O ) equals LINESEGMENT: r",
    "id": 4648,
    "declarations": "O: ELLIPSE; r: LINESEGMENT",
    "facts": "ImaginaryAxis(O) = r"
},
{
    "assertion": "PointOnCurve ( Orthocenter ( TRIANGLE: D ), CURVE: h ) equals BOOL: False",
    "id": 4649,
    "declarations": "D: TRIANGLE; h: CURVE; False: BOOL",
    "facts": "PointOnCurve(Orthocenter(D), h) = False"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: n ) ) ) equals YCoordinate ( Orthocenter ( TRIANGLE: h ) )",
    "id": 4650,
    "declarations": "n: ELLIPSE; h: TRIANGLE",
    "facts": "Inclination(PerpendicularBisector(ImaginaryAxis(n))) = YCoordinate(Orthocenter(h))"
},
{
    "assertion": "IsTangent ( LeftDirectrix ( CONICSECTION: y ), CONICSECTION: Q ) equals BOOL: False",
    "id": 4651,
    "declarations": "y: CONICSECTION; Q: CONICSECTION; False: BOOL",
    "facts": "IsTangent(LeftDirectrix(y), Q) = False"
},
{
    "assertion": "Eccentricity ( CONICSECTION: d ) equals NUMBER: -30",
    "id": 4652,
    "declarations": "d: CONICSECTION; -30: NUMBER",
    "facts": "Eccentricity(d) = -30"
},
{
    "assertion": "ApplyUnit ( XCoordinate ( Incenter ( TRIANGLE: X ) ), DEGREESTR: degree )",
    "id": 4653,
    "declarations": "X: TRIANGLE; degree: DEGREESTR",
    "facts": "ApplyUnit(XCoordinate(Incenter(X)), degree) = None"
},
{
    "assertion": "Slope ( TangentOfPoint ( Circumcenter ( TRIANGLE: R ), CURVE: p ) ) equals lg ( NUMBER: -40 )",
    "id": 4654,
    "declarations": "R: TRIANGLE; p: CURVE; -40: NUMBER",
    "facts": "Slope(TangentOfPoint(Circumcenter(R), p)) = lg(-40)"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: N ) ) equals Diameter ( CIRCLE: o )",
    "id": 4655,
    "declarations": "N: ELLIPSE; o: CIRCLE",
    "facts": "Abs(MinorAxis(N)) = Diameter(o)"
},
{
    "assertion": "Diameter ( CIRCLE: k ) equals Eccentricity ( CONICSECTION: a )",
    "id": 4656,
    "declarations": "k: CIRCLE; a: CONICSECTION",
    "facts": "Diameter(k) = Eccentricity(a)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: h, CIRCLE: M ) equals BOOL: True",
    "id": 4657,
    "declarations": "h: LINESEGMENT; M: CIRCLE; True: BOOL",
    "facts": "IsDiameter(h, M) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: q ) equals POINT: q",
    "id": 4658,
    "declarations": "q: CONICSECTION; q: POINT",
    "facts": "LeftVertex(q) = q"
},
{
    "assertion": "DotProduct ( VECTOR: e, VECTOR: D ) equals InterReciprocal ( YCoordinate ( UpperVertex ( CONICSECTION: H ) ) )",
    "id": 4659,
    "declarations": "e: VECTOR; D: VECTOR; H: CONICSECTION",
    "facts": "DotProduct(e, D) = InterReciprocal(YCoordinate(UpperVertex(H)))"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( LINESEGMENT: S ) ) equals XCoordinate ( POINT: C )",
    "id": 4660,
    "declarations": "S: LINESEGMENT; C: POINT",
    "facts": "Inclination(PerpendicularBisector(S)) = XCoordinate(C)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: V ) equals NUMBER: 95",
    "id": 4661,
    "declarations": "V: CONICSECTION; 95: NUMBER",
    "facts": "HalfFocalLength(V) = 95"
},
{
    "assertion": "UpperFocus ( CONICSECTION: X ) equals LeftVertex ( CONICSECTION: t )",
    "id": 4662,
    "declarations": "X: CONICSECTION; t: CONICSECTION",
    "facts": "UpperFocus(X) = LeftVertex(t)"
},
{
    "assertion": "XCoordinate ( POINT: C ) equals NUMBER: -90",
    "id": 4663,
    "declarations": "C: POINT; -90: NUMBER",
    "facts": "XCoordinate(C) = -90"
},
{
    "assertion": "AngleOf ( POINT: m, MidPoint ( LINESEGMENT: Y ), UpperVertex ( CONICSECTION: N ) ) equals AngleOf ( LowerFocus ( CONICSECTION: Z ), RightFocus ( CONICSECTION: E ), POINT: s )",
    "id": 4664,
    "declarations": "m: POINT; Y: LINESEGMENT; N: CONICSECTION; Z: CONICSECTION; E: CONICSECTION; s: POINT",
    "facts": "AngleOf(m, MidPoint(Y), UpperVertex(N)) = AngleOf(LowerFocus(Z), RightFocus(E), s)"
},
{
    "assertion": "RealAxis ( ELLIPSE: z ) equals LineSegmentOf ( POINT: N, POINT: h )",
    "id": 4665,
    "declarations": "z: ELLIPSE; N: POINT; h: POINT",
    "facts": "RealAxis(z) = LineSegmentOf(N, h)"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: v ) ) equals POINT: P",
    "id": 4666,
    "declarations": "v: ELLIPSE; P: POINT",
    "facts": "Endpoint(MajorAxis(v)) = P"
},
{
    "assertion": "Circumcenter ( TRIANGLE: O ) equals LeftVertex ( CONICSECTION: g )",
    "id": 4667,
    "declarations": "O: TRIANGLE; g: CONICSECTION",
    "facts": "Circumcenter(O) = LeftVertex(g)"
},
{
    "assertion": "IsTangent ( PerpendicularBisector ( LINESEGMENT: V ), CONICSECTION: B ) equals BOOL: False",
    "id": 4668,
    "declarations": "V: LINESEGMENT; B: CONICSECTION; False: BOOL",
    "facts": "IsTangent(PerpendicularBisector(V), B) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: t ) equals POINT: q",
    "id": 4669,
    "declarations": "t: CONICSECTION; q: POINT",
    "facts": "LowerVertex(t) = q"
},
{
    "assertion": "LineSegmentOf ( Center ( CONICSECTION: V ), LowerFocus ( CONICSECTION: A ) ) equals ImaginaryAxis ( ELLIPSE: z )",
    "id": 4670,
    "declarations": "V: CONICSECTION; A: CONICSECTION; z: ELLIPSE",
    "facts": "LineSegmentOf(Center(V), LowerFocus(A)) = ImaginaryAxis(z)"
},
{
    "assertion": "IsChordOf ( LineSegmentOf ( LeftFocus ( CONICSECTION: k ), Projection ( LowerVertex ( CONICSECTION: K ), RightDirectrix ( CONICSECTION: t ) ) ), CONICSECTION: y ) equals BOOL: False",
    "id": 4671,
    "declarations": "k: CONICSECTION; K: CONICSECTION; t: CONICSECTION; y: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(LineSegmentOf(LeftFocus(k), Projection(LowerVertex(K), RightDirectrix(t))), y) = False"
},
{
    "assertion": "IsTangent ( LINE: r, CONICSECTION: f ) equals BOOL: True",
    "id": 4672,
    "declarations": "r: LINE; f: CONICSECTION; True: BOOL",
    "facts": "IsTangent(r, f) = True"
},
{
    "assertion": "Length ( InterceptChord ( LeftDirectrix ( CONICSECTION: N ), CONICSECTION: i ) ) equals Intercept ( LINE: y, AXIS: xAxis )",
    "id": 4673,
    "declarations": "N: CONICSECTION; i: CONICSECTION; y: LINE; xAxis: AXIS",
    "facts": "Length(InterceptChord(LeftDirectrix(N), i)) = Intercept(y, xAxis)"
},
{
    "assertion": "TangentPoint ( LINE: Q, CIRCLE: W ) equals POINT: l",
    "id": 4674,
    "declarations": "Q: LINE; W: CIRCLE; l: POINT",
    "facts": "TangentPoint(Q, W) = l"
},
{
    "assertion": "Abs ( ImaginaryAxis ( ELLIPSE: f ) ) equals YCoordinate ( Projection ( POINT: h, LINE: e ) )",
    "id": 4675,
    "declarations": "f: ELLIPSE; h: POINT; e: LINE",
    "facts": "Abs(ImaginaryAxis(f)) = YCoordinate(Projection(h, e))"
},
{
    "assertion": "Expression ( CURVE: H ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 4676,
    "declarations": "H: CURVE; y*space=*spacesin(x): EXPRESSION",
    "facts": "Expression(H) = y*space=*spacesin(x)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: S ) equals RightVertex ( CONICSECTION: q )",
    "id": 4677,
    "declarations": "S: CONICSECTION; q: CONICSECTION",
    "facts": "UpperFocus(S) = RightVertex(q)"
},
{
    "assertion": "RightVertex ( CONICSECTION: H ) equals POINT: n",
    "id": 4678,
    "declarations": "H: CONICSECTION; n: POINT",
    "facts": "RightVertex(H) = n"
},
{
    "assertion": "Coordinate ( POINT: A ) equals ( YCoordinate ( POINT: Y ), FocalLength ( CONICSECTION: u ) )",
    "id": 4679,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MinorAxis ( ELLIPSE: b ) equals LINESEGMENT: G",
    "id": 4680,
    "declarations": "b: ELLIPSE; G: LINESEGMENT",
    "facts": "MinorAxis(b) = G"
},
{
    "assertion": "Eccentricity ( CONICSECTION: A ) equals InterReciprocal ( FocalLength ( CONICSECTION: x ) )",
    "id": 4681,
    "declarations": "A: CONICSECTION; x: CONICSECTION",
    "facts": "Eccentricity(A) = InterReciprocal(FocalLength(x))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: S ) equals Orthocenter ( TriangleOf ( POINT: z, POINT: j, POINT: S ) )",
    "id": 4682,
    "declarations": "S: CONICSECTION; z: POINT; j: POINT; S: POINT",
    "facts": "LowerVertex(S) = Orthocenter(TriangleOf(z, j, S))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: U ) equals LINE: O",
    "id": 4683,
    "declarations": "U: HYPERBOLA; O: LINE",
    "facts": "Asymptote(U) = O"
},
{
    "assertion": "Min ( NumIntersection ( CURVE: q, RightPart ( HYPERBOLA: e ) ) ) equals Min ( NUMBER: -10 )",
    "id": 4684,
    "declarations": "q: CURVE; e: HYPERBOLA; -10: NUMBER",
    "facts": "Min(NumIntersection(q, RightPart(e))) = Min(-10)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: R ) equals OverlappingLine ( LINESEGMENT: W )",
    "id": 4685,
    "declarations": "R: LINESEGMENT; W: LINESEGMENT",
    "facts": "PerpendicularBisector(R) = OverlappingLine(W)"
},
{
    "assertion": "PointOnCurve ( Incenter ( TRIANGLE: e ), CURVE: A ) equals BOOL: False",
    "id": 4686,
    "declarations": "e: TRIANGLE; A: CURVE; False: BOOL",
    "facts": "PointOnCurve(Incenter(e), A) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: v ) equals RightFocus ( CONICSECTION: d )",
    "id": 4687,
    "declarations": "v: CONICSECTION; d: CONICSECTION",
    "facts": "RightVertex(v) = RightFocus(d)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: r ) equals UpperFocus ( CONICSECTION: P )",
    "id": 4688,
    "declarations": "r: TRIANGLE; P: CONICSECTION",
    "facts": "Orthocenter(r) = UpperFocus(P)"
},
{
    "assertion": "Incenter ( TRIANGLE: G ) equals LowerFocus ( CONICSECTION: K )",
    "id": 4689,
    "declarations": "G: TRIANGLE; K: CONICSECTION",
    "facts": "Incenter(G) = LowerFocus(K)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: a ) equals LINE: P",
    "id": 4690,
    "declarations": "a: HYPERBOLA; P: LINE",
    "facts": "Asymptote(a) = P"
},
{
    "assertion": "Incenter ( TRIANGLE: x ) equals RightVertex ( CONICSECTION: y )",
    "id": 4691,
    "declarations": "x: TRIANGLE; y: CONICSECTION",
    "facts": "Incenter(x) = RightVertex(y)"
},
{
    "assertion": "Min ( NUMBER: 27 ) equals NUMBER: -92",
    "id": 4692,
    "declarations": "27: NUMBER; -92: NUMBER",
    "facts": "Min(27) = -92"
},
{
    "assertion": "Eccentricity ( CONICSECTION: F ) equals Slope ( LINE: E )",
    "id": 4693,
    "declarations": "F: CONICSECTION; E: LINE",
    "facts": "Eccentricity(F) = Slope(E)"
},
{
    "assertion": "lg ( Radius ( CIRCLE: V ) ) equals Perimeter ( CONICSECTION: i )",
    "id": 4694,
    "declarations": "V: CIRCLE; i: CONICSECTION",
    "facts": "lg(Radius(V)) = Perimeter(i)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: T ) equals Orthocenter ( TRIANGLE: s )",
    "id": 4695,
    "declarations": "T: CONICSECTION; s: TRIANGLE",
    "facts": "LeftVertex(T) = Orthocenter(s)"
},
{
    "assertion": "Diameter ( CIRCLE: j ) equals DotProduct ( VECTOR: W, VECTOR: A )",
    "id": 4696,
    "declarations": "j: CIRCLE; W: VECTOR; A: VECTOR",
    "facts": "Diameter(j) = DotProduct(W, A)"
},
{
    "assertion": "Circumcenter ( TriangleOf ( LeftVertex ( CONICSECTION: u ), Orthocenter ( TRIANGLE: O ), RightFocus ( CONICSECTION: r ) ) ) equals POINT: A",
    "id": 4697,
    "declarations": "u: CONICSECTION; O: TRIANGLE; r: CONICSECTION; A: POINT",
    "facts": "Circumcenter(TriangleOf(LeftVertex(u), Orthocenter(O), RightFocus(r))) = A"
},
{
    "assertion": "RealAxis ( ELLIPSE: u ) equals LINESEGMENT: V",
    "id": 4698,
    "declarations": "u: ELLIPSE; V: LINESEGMENT",
    "facts": "RealAxis(u) = V"
},
{
    "assertion": "RealAxis ( ELLIPSE: v ) equals LINESEGMENT: y",
    "id": 4699,
    "declarations": "v: ELLIPSE; y: LINESEGMENT",
    "facts": "RealAxis(v) = y"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: l ) equals LINE: p",
    "id": 4700,
    "declarations": "l: CONICSECTION; p: LINE",
    "facts": "RightDirectrix(l) = p"
},
{
    "assertion": "Length ( LINESEGMENT: n ) equals NUMBER: -31",
    "id": 4701,
    "declarations": "n: LINESEGMENT; -31: NUMBER",
    "facts": "Length(n) = -31"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: O ) equals PerpendicularBisector ( LINESEGMENT: t )",
    "id": 4702,
    "declarations": "O: CONICSECTION; t: LINESEGMENT",
    "facts": "LeftDirectrix(O) = PerpendicularBisector(t)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 58, DEGREESTR: degree )",
    "id": 4703,
    "declarations": "58: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(58, degree) = None"
},
{
    "assertion": "Incenter ( TRIANGLE: u ) equals POINT: x",
    "id": 4704,
    "declarations": "u: TRIANGLE; x: POINT",
    "facts": "Incenter(u) = x"
},
{
    "assertion": "Area ( CONICSECTION: r ) equals InterReciprocal ( Quadrant ( RightFocus ( CONICSECTION: r ) ) )",
    "id": 4705,
    "declarations": "r: CONICSECTION; r: CONICSECTION",
    "facts": "Area(r) = InterReciprocal(Quadrant(RightFocus(r)))"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: G ) equals LineOf ( POINT: m, LeftFocus ( CONICSECTION: T ) )",
    "id": 4706,
    "declarations": "G: CONICSECTION; m: POINT; T: CONICSECTION",
    "facts": "LeftDirectrix(G) = LineOf(m, LeftFocus(T))"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: c ) equals AXIS: xAxis",
    "id": 4707,
    "declarations": "c: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(c) = xAxis"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: R ) equals NUMBER: 14",
    "id": 4708,
    "declarations": "R: CONICSECTION; 14: NUMBER",
    "facts": "HalfFocalLength(R) = 14"
},
{
    "assertion": "Incenter ( TRIANGLE: C ) equals FootPoint ( TangentOnPoint ( UpperVertex ( CONICSECTION: O ), CURVE: J ), LINE: r )",
    "id": 4709,
    "declarations": "C: TRIANGLE; O: CONICSECTION; J: CURVE; r: LINE",
    "facts": "Incenter(C) = FootPoint(TangentOnPoint(UpperVertex(O), J), r)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: C ) equals LINE: P",
    "id": 4710,
    "declarations": "C: LINESEGMENT; P: LINE",
    "facts": "PerpendicularBisector(C) = P"
},
{
    "assertion": "Vertex ( CONICSECTION: R ) equals POINT: a",
    "id": 4711,
    "declarations": "R: CONICSECTION; a: POINT",
    "facts": "Vertex(R) = a"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: z ) ) equals Inclination ( LINE: c )",
    "id": 4712,
    "declarations": "z: ELLIPSE; c: LINE",
    "facts": "Abs(RealAxis(z)) = Inclination(c)"
},
{
    "assertion": "Negation ( PointOnCurve ( POINT: a, LeftPart ( HYPERBOLA: V ) ) equals BOOL: True ) equals BOOL: False",
    "id": 4713,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Orthocenter ( TRIANGLE: G ) equals UpperVertex ( CONICSECTION: P )",
    "id": 4714,
    "declarations": "G: TRIANGLE; P: CONICSECTION",
    "facts": "Orthocenter(G) = UpperVertex(P)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: v ) equals UpperFocus ( CONICSECTION: X )",
    "id": 4715,
    "declarations": "v: CONICSECTION; X: CONICSECTION",
    "facts": "UpperVertex(v) = UpperFocus(X)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: c ) equals CIRCLE: V",
    "id": 4716,
    "declarations": "c: TRIANGLE; V: CIRCLE",
    "facts": "CircumCircle(c) = V"
},
{
    "assertion": "YCoordinate ( POINT: e ) equals Radius ( CIRCLE: I )",
    "id": 4717,
    "declarations": "e: POINT; I: CIRCLE",
    "facts": "YCoordinate(e) = Radius(I)"
},
{
    "assertion": "Abs ( LINESEGMENT: P ) equals Intercept ( OverlappingLine ( LINESEGMENT: i ), AXIS: yAxis )",
    "id": 4718,
    "declarations": "P: LINESEGMENT; i: LINESEGMENT; yAxis: AXIS",
    "facts": "Abs(P) = Intercept(OverlappingLine(i), yAxis)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: a ) equals POINT: v",
    "id": 4719,
    "declarations": "a: TRIANGLE; v: POINT",
    "facts": "Orthocenter(a) = v"
},
{
    "assertion": "Length ( LINESEGMENT: x ) equals lg ( Inclination ( LINE: i ) )",
    "id": 4720,
    "declarations": "x: LINESEGMENT; i: LINE",
    "facts": "Length(x) = lg(Inclination(i))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: f ) equals LINE: j",
    "id": 4721,
    "declarations": "f: CONICSECTION; j: LINE",
    "facts": "RightDirectrix(f) = j"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: A ) equals LeftDirectrix ( CONICSECTION: z )",
    "id": 4722,
    "declarations": "A: CONICSECTION; z: CONICSECTION",
    "facts": "LeftDirectrix(A) = LeftDirectrix(z)"
},
{
    "assertion": "NumIntersection ( RightPart ( HYPERBOLA: J ), CURVE: s ) equals Eccentricity ( CONICSECTION: J )",
    "id": 4723,
    "declarations": "J: HYPERBOLA; s: CURVE; J: CONICSECTION",
    "facts": "NumIntersection(RightPart(J), s) = Eccentricity(J)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: H ) equals CIRCLE: C",
    "id": 4724,
    "declarations": "H: TRIANGLE; C: CIRCLE",
    "facts": "CircumCircle(H) = C"
},
{
    "assertion": "Eccentricity ( CONICSECTION: m ) equals Abs ( LINESEGMENT: m )",
    "id": 4725,
    "declarations": "m: CONICSECTION; m: LINESEGMENT",
    "facts": "Eccentricity(m) = Abs(m)"
},
{
    "assertion": "NumIntersection ( LeftPart ( HYPERBOLA: j ), CURVE: T ) equals NUMBER: -62",
    "id": 4726,
    "declarations": "j: HYPERBOLA; T: CURVE; -62: NUMBER",
    "facts": "NumIntersection(LeftPart(j), T) = -62"
},
{
    "assertion": "Radius ( CIRCLE: z ) equals NUMBER: -21",
    "id": 4727,
    "declarations": "z: CIRCLE; -21: NUMBER",
    "facts": "Radius(z) = -21"
},
{
    "assertion": "FocalLength ( CONICSECTION: E ) equals InterReciprocal ( NUMBER: 43 )",
    "id": 4728,
    "declarations": "E: CONICSECTION; 43: NUMBER",
    "facts": "FocalLength(E) = InterReciprocal(43)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: e, CONICSECTION: R ) equals BOOL: False",
    "id": 4729,
    "declarations": "e: LINESEGMENT; R: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(e, R) = False"
},
{
    "assertion": "Locus ( POINT: s ) equals CURVE: X",
    "id": 4730,
    "declarations": "s: POINT; X: CURVE",
    "facts": "Locus(s) = X"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: Q, TRIANGLE: C ) equals BOOL: False",
    "id": 4731,
    "declarations": "Q: CIRCLE; C: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(Q, C) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: T ) equals Orthocenter ( TRIANGLE: B )",
    "id": 4732,
    "declarations": "T: CONICSECTION; B: TRIANGLE",
    "facts": "UpperFocus(T) = Orthocenter(B)"
},
{
    "assertion": "And ( UpperVertex ( CONICSECTION: u ) equals Circumcenter ( TRIANGLE: L ), RealAxis ( ELLIPSE: S ) equals MinorAxis ( ELLIPSE: i ) ) equals BOOL: True",
    "id": 4733,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Asymptote ( HYPERBOLA: p ) equals TangentOnPoint ( Projection ( Incenter ( TRIANGLE: i ), LeftDirectrix ( CONICSECTION: I ) ), RightPart ( HYPERBOLA: G ) )",
    "id": 4734,
    "declarations": "p: HYPERBOLA; i: TRIANGLE; I: CONICSECTION; G: HYPERBOLA",
    "facts": "Asymptote(p) = TangentOnPoint(Projection(Incenter(i), LeftDirectrix(I)), RightPart(G))"
},
{
    "assertion": "Quadrant ( RightVertex ( CONICSECTION: M ) ) equals NUMBER: 82",
    "id": 4735,
    "declarations": "M: CONICSECTION; 82: NUMBER",
    "facts": "Quadrant(RightVertex(M)) = 82"
},
{
    "assertion": "Negation ( Min ( YCoordinate ( MidPoint ( LINESEGMENT: u ) ) ) equals NumIntersection ( CURVE: G, CURVE: g ) ) equals BOOL: True",
    "id": 4736,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: w ) ) equals MidPoint ( MinorAxis ( ELLIPSE: t ) )",
    "id": 4737,
    "declarations": "w: ELLIPSE; t: ELLIPSE",
    "facts": "Endpoint(MajorAxis(w)) = MidPoint(MinorAxis(t))"
},
{
    "assertion": "Expression ( CURVE: b ) equals EXPRESSION: x^2*space+*space2y^2*space=*space8",
    "id": 4738,
    "declarations": "b: CURVE; x^2*space+*space2y^2*space=*space8: EXPRESSION",
    "facts": "Expression(b) = x^2*space+*space2y^2*space=*space8"
},
{
    "assertion": "LineSegmentOf ( POINT: a, POINT: A ) equals LINESEGMENT: F",
    "id": 4739,
    "declarations": "a: POINT; A: POINT; F: LINESEGMENT",
    "facts": "LineSegmentOf(a, A) = F"
},
{
    "assertion": "Circumcenter ( TRIANGLE: f ) equals Center ( CONICSECTION: O )",
    "id": 4740,
    "declarations": "f: TRIANGLE; O: CONICSECTION",
    "facts": "Circumcenter(f) = Center(O)"
},
{
    "assertion": "Radius ( CIRCLE: a ) equals Abs ( InterceptChord ( LINE: j, CONICSECTION: S ) )",
    "id": 4741,
    "declarations": "a: CIRCLE; j: LINE; S: CONICSECTION",
    "facts": "Radius(a) = Abs(InterceptChord(j, S))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: X ) equals POINT: q",
    "id": 4742,
    "declarations": "X: CONICSECTION; q: POINT",
    "facts": "UpperFocus(X) = q"
},
{
    "assertion": "Between ( RightVertex ( CONICSECTION: G ), Incenter ( TRIANGLE: z ), LowerFocus ( CONICSECTION: u ) ) equals BOOL: False",
    "id": 4743,
    "declarations": "G: CONICSECTION; z: TRIANGLE; u: CONICSECTION; False: BOOL",
    "facts": "Between(RightVertex(G), Incenter(z), LowerFocus(u)) = False"
},
{
    "assertion": "Quadrant ( Orthocenter ( TRIANGLE: T ) ) equals Slope ( RightDirectrix ( CONICSECTION: W ) )",
    "id": 4744,
    "declarations": "T: TRIANGLE; W: CONICSECTION",
    "facts": "Quadrant(Orthocenter(T)) = Slope(RightDirectrix(W))"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: A ) equals AXIS: yAxis",
    "id": 4745,
    "declarations": "A: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(A) = yAxis"
},
{
    "assertion": "Vertex ( CONICSECTION: i ) equals POINT: Q",
    "id": 4746,
    "declarations": "i: CONICSECTION; Q: POINT",
    "facts": "Vertex(i) = Q"
},
{
    "assertion": "ApplyUnit ( NUMBER: 15, DEGREESTR: degree )",
    "id": 4747,
    "declarations": "15: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(15, degree) = None"
},
{
    "assertion": "Circumcenter ( TRIANGLE: V ) equals LowerFocus ( CONICSECTION: J )",
    "id": 4748,
    "declarations": "V: TRIANGLE; J: CONICSECTION",
    "facts": "Circumcenter(V) = LowerFocus(J)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: G, TRIANGLE: T ) equals BOOL: False",
    "id": 4749,
    "declarations": "G: CIRCLE; T: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(G, T) = False"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: i ) equals LINE: z",
    "id": 4750,
    "declarations": "i: CONICSECTION; z: LINE",
    "facts": "RightDirectrix(i) = z"
},
{
    "assertion": "Length ( LINESEGMENT: w ) equals Perimeter ( CONICSECTION: Y )",
    "id": 4751,
    "declarations": "w: LINESEGMENT; Y: CONICSECTION",
    "facts": "Length(w) = Perimeter(Y)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: l ) equals CIRCLE: r",
    "id": 4752,
    "declarations": "l: TRIANGLE; r: CIRCLE",
    "facts": "CircumCircle(l) = r"
},
{
    "assertion": "TangentOnPoint ( UpperFocus ( CONICSECTION: R ), CURVE: e ) equals LINE: m",
    "id": 4753,
    "declarations": "R: CONICSECTION; e: CURVE; m: LINE",
    "facts": "TangentOnPoint(UpperFocus(R), e) = m"
},
{
    "assertion": "LeftPart ( HYPERBOLA: d ) equals CURVE: G",
    "id": 4754,
    "declarations": "d: HYPERBOLA; G: CURVE",
    "facts": "LeftPart(d) = G"
},
{
    "assertion": "OverlappingLine ( RealAxis ( ELLIPSE: j ) ) equals RightDirectrix ( CONICSECTION: c )",
    "id": 4755,
    "declarations": "j: ELLIPSE; c: CONICSECTION",
    "facts": "OverlappingLine(RealAxis(j)) = RightDirectrix(c)"
},
{
    "assertion": "XCoordinate ( POINT: I ) equals NUMBER: 89",
    "id": 4756,
    "declarations": "I: POINT; 89: NUMBER",
    "facts": "XCoordinate(I) = 89"
},
{
    "assertion": "LineSegmentOf ( POINT: A, MidPoint ( LINESEGMENT: V ) ) equals LINESEGMENT: w",
    "id": 4757,
    "declarations": "A: POINT; V: LINESEGMENT; w: LINESEGMENT",
    "facts": "LineSegmentOf(A, MidPoint(V)) = w"
},
{
    "assertion": "Distance ( POINT: S, POINT: F ) equals NUMBER: 60",
    "id": 4758,
    "declarations": "S: POINT; F: POINT; 60: NUMBER",
    "facts": "Distance(S, F) = 60"
},
{
    "assertion": "LowerVertex ( CONICSECTION: u ) equals RightFocus ( CONICSECTION: J )",
    "id": 4759,
    "declarations": "u: CONICSECTION; J: CONICSECTION",
    "facts": "LowerVertex(u) = RightFocus(J)"
},
{
    "assertion": "Negation ( ImaginaryAxis ( ELLIPSE: K ) equals MajorAxis ( ELLIPSE: j ) ) equals BOOL: False",
    "id": 4760,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: g, CIRCLE: o ) equals BOOL: True",
    "id": 4761,
    "declarations": "g: LINESEGMENT; o: CIRCLE; True: BOOL",
    "facts": "IsDiameter(g, o) = True"
},
{
    "assertion": "RealAxis ( ELLIPSE: U ) equals RealAxis ( ELLIPSE: a )",
    "id": 4762,
    "declarations": "U: ELLIPSE; a: ELLIPSE",
    "facts": "RealAxis(U) = RealAxis(a)"
},
{
    "assertion": "TangentOnPoint ( Circumcenter ( TRIANGLE: Z ), CURVE: m ) equals OverlappingLine ( RealAxis ( ELLIPSE: i ) )",
    "id": 4763,
    "declarations": "Z: TRIANGLE; m: CURVE; i: ELLIPSE",
    "facts": "TangentOnPoint(Circumcenter(Z), m) = OverlappingLine(RealAxis(i))"
},
{
    "assertion": "TangentOfPoint ( POINT: k, CURVE: r ) equals TangentOnPoint ( MidPoint ( LINESEGMENT: G ), CURVE: m )",
    "id": 4764,
    "declarations": "k: POINT; r: CURVE; G: LINESEGMENT; m: CURVE",
    "facts": "TangentOfPoint(k, r) = TangentOnPoint(MidPoint(G), m)"
},
{
    "assertion": "Length ( RealAxis ( ELLIPSE: c ) ) equals NUMBER: 26",
    "id": 4765,
    "declarations": "c: ELLIPSE; 26: NUMBER",
    "facts": "Length(RealAxis(c)) = 26"
},
{
    "assertion": "XCoordinate ( POINT: S ) equals NUMBER: -88",
    "id": 4766,
    "declarations": "S: POINT; -88: NUMBER",
    "facts": "XCoordinate(S) = -88"
},
{
    "assertion": "LeftPart ( HYPERBOLA: C ) equals CURVE: L",
    "id": 4767,
    "declarations": "C: HYPERBOLA; L: CURVE",
    "facts": "LeftPart(C) = L"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: v ) equals LINE: q",
    "id": 4768,
    "declarations": "v: CONICSECTION; q: LINE",
    "facts": "RightDirectrix(v) = q"
},
{
    "assertion": "Area ( CONICSECTION: x ) equals Quadrant ( LowerVertex ( CONICSECTION: Z ) )",
    "id": 4769,
    "declarations": "x: CONICSECTION; Z: CONICSECTION",
    "facts": "Area(x) = Quadrant(LowerVertex(Z))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: y ) equals LeftFocus ( CONICSECTION: n )",
    "id": 4770,
    "declarations": "y: TRIANGLE; n: CONICSECTION",
    "facts": "Orthocenter(y) = LeftFocus(n)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: o ) equals Incenter ( TRIANGLE: x )",
    "id": 4771,
    "declarations": "o: CONICSECTION; x: TRIANGLE",
    "facts": "UpperFocus(o) = Incenter(x)"
},
{
    "assertion": "Min ( NUMBER: -51 ) equals NUMBER: -32",
    "id": 4772,
    "declarations": "-51: NUMBER; -32: NUMBER",
    "facts": "Min(-51) = -32"
},
{
    "assertion": "MinorAxis ( ELLIPSE: I ) equals LINESEGMENT: r",
    "id": 4773,
    "declarations": "I: ELLIPSE; r: LINESEGMENT",
    "facts": "MinorAxis(I) = r"
},
{
    "assertion": "XCoordinate ( FootPoint ( LINE: J, LINE: h ) ) equals Area ( CONICSECTION: l )",
    "id": 4774,
    "declarations": "J: LINE; h: LINE; l: CONICSECTION",
    "facts": "XCoordinate(FootPoint(J, h)) = Area(l)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: H ) equals CURVE: o",
    "id": 4775,
    "declarations": "H: HYPERBOLA; o: CURVE",
    "facts": "LeftPart(H) = o"
},
{
    "assertion": "Orthocenter ( TRIANGLE: R ) equals POINT: b",
    "id": 4776,
    "declarations": "R: TRIANGLE; b: POINT",
    "facts": "Orthocenter(R) = b"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Z ) equals POINT: z",
    "id": 4777,
    "declarations": "Z: CONICSECTION; z: POINT",
    "facts": "LeftFocus(Z) = z"
},
{
    "assertion": "TangentOfPoint ( POINT: t, CURVE: g ) equals OverlappingLine ( LINESEGMENT: H )",
    "id": 4778,
    "declarations": "t: POINT; g: CURVE; H: LINESEGMENT",
    "facts": "TangentOfPoint(t, g) = OverlappingLine(H)"
},
{
    "assertion": "Incenter ( TRIANGLE: G ) equals POINT: u",
    "id": 4779,
    "declarations": "G: TRIANGLE; u: POINT",
    "facts": "Incenter(G) = u"
},
{
    "assertion": "MinorAxis ( ELLIPSE: E ) equals LINESEGMENT: T",
    "id": 4780,
    "declarations": "E: ELLIPSE; T: LINESEGMENT",
    "facts": "MinorAxis(E) = T"
},
{
    "assertion": "Expression ( CURVE: D ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 4781,
    "declarations": "D: CURVE; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "Expression(D) = x*space+*spacey*space=*space5"
},
{
    "assertion": "LeftPart ( HYPERBOLA: i ) equals RightPart ( HYPERBOLA: e )",
    "id": 4782,
    "declarations": "i: HYPERBOLA; e: HYPERBOLA",
    "facts": "LeftPart(i) = RightPart(e)"
},
{
    "assertion": "RealAxis ( ELLIPSE: Z ) equals LINESEGMENT: N",
    "id": 4783,
    "declarations": "Z: ELLIPSE; N: LINESEGMENT",
    "facts": "RealAxis(Z) = N"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: r, TRIANGLE: N ) equals BOOL: False",
    "id": 4784,
    "declarations": "r: CIRCLE; N: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(r, N) = False"
},
{
    "assertion": "YCoordinate ( LeftFocus ( CONICSECTION: Q ) ) equals NUMBER: -10",
    "id": 4785,
    "declarations": "Q: CONICSECTION; -10: NUMBER",
    "facts": "YCoordinate(LeftFocus(Q)) = -10"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: e, TRIANGLE: N ) equals BOOL: True",
    "id": 4786,
    "declarations": "e: CIRCLE; N: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(e, N) = True"
},
{
    "assertion": "Locus ( POINT: M ) equals CURVE: X",
    "id": 4787,
    "declarations": "M: POINT; X: CURVE",
    "facts": "Locus(M) = X"
},
{
    "assertion": "PerpendicularBisector ( LineSegmentOf ( RightVertex ( CONICSECTION: m ), POINT: F ) ) equals PerpendicularBisector ( LINESEGMENT: l )",
    "id": 4788,
    "declarations": "m: CONICSECTION; F: POINT; l: LINESEGMENT",
    "facts": "PerpendicularBisector(LineSegmentOf(RightVertex(m), F)) = PerpendicularBisector(l)"
},
{
    "assertion": "TangentOfPoint ( RightFocus ( CONICSECTION: N ), CURVE: W ) equals LINE: X",
    "id": 4789,
    "declarations": "N: CONICSECTION; W: CURVE; X: LINE",
    "facts": "TangentOfPoint(RightFocus(N), W) = X"
},
{
    "assertion": "YCoordinate ( POINT: w ) equals Length ( RealAxis ( ELLIPSE: c ) )",
    "id": 4790,
    "declarations": "w: POINT; c: ELLIPSE",
    "facts": "YCoordinate(w) = Length(RealAxis(c))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: E ) equals POINT: s",
    "id": 4791,
    "declarations": "E: CONICSECTION; s: POINT",
    "facts": "LeftFocus(E) = s"
},
{
    "assertion": "AngleOf ( RightFocus ( CONICSECTION: j ), POINT: A, POINT: i ) equals ApplyUnit ( NUMBER: -23, DEGREESTR: degree )",
    "id": 4792,
    "declarations": "j: CONICSECTION; A: POINT; i: POINT; -23: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(RightFocus(j), A, i) = ApplyUnit(-23, degree)"
},
{
    "assertion": "Diameter ( CIRCLE: D ) equals Inclination ( OverlappingLine ( LINESEGMENT: n ) )",
    "id": 4793,
    "declarations": "D: CIRCLE; n: LINESEGMENT",
    "facts": "Diameter(D) = Inclination(OverlappingLine(n))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Q ) equals Orthocenter ( TRIANGLE: P )",
    "id": 4794,
    "declarations": "Q: TRIANGLE; P: TRIANGLE",
    "facts": "Orthocenter(Q) = Orthocenter(P)"
},
{
    "assertion": "InterceptChord ( PerpendicularBisector ( LINESEGMENT: w ), CONICSECTION: J ) equals LINESEGMENT: U",
    "id": 4795,
    "declarations": "w: LINESEGMENT; J: CONICSECTION; U: LINESEGMENT",
    "facts": "InterceptChord(PerpendicularBisector(w), J) = U"
},
{
    "assertion": "Endpoint ( LINESEGMENT: m ) equals POINT: p",
    "id": 4796,
    "declarations": "m: LINESEGMENT; p: POINT",
    "facts": "Endpoint(m) = p"
},
{
    "assertion": "LeftPart ( HYPERBOLA: b ) equals Locus ( POINT: g )",
    "id": 4797,
    "declarations": "b: HYPERBOLA; g: POINT",
    "facts": "LeftPart(b) = Locus(g)"
},
{
    "assertion": "Focus ( CONICSECTION: P ) equals POINT: D",
    "id": 4798,
    "declarations": "P: CONICSECTION; D: POINT",
    "facts": "Focus(P) = D"
},
{
    "assertion": "LineSegmentOf ( RightVertex ( CONICSECTION: y ), RightFocus ( CONICSECTION: N ) ) equals ImaginaryAxis ( ELLIPSE: Y )",
    "id": 4799,
    "declarations": "y: CONICSECTION; N: CONICSECTION; Y: ELLIPSE",
    "facts": "LineSegmentOf(RightVertex(y), RightFocus(N)) = ImaginaryAxis(Y)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: G ) equals MidPoint ( LINESEGMENT: W )",
    "id": 4800,
    "declarations": "G: TRIANGLE; W: LINESEGMENT",
    "facts": "Circumcenter(G) = MidPoint(W)"
},
{
    "assertion": "IsParallel ( TangentOfPoint ( POINT: i, RightPart ( HYPERBOLA: i ) ), LeftDirectrix ( CONICSECTION: p ) ) equals BOOL: True",
    "id": 4801,
    "declarations": "i: POINT; i: HYPERBOLA; p: CONICSECTION; True: BOOL",
    "facts": "IsParallel(TangentOfPoint(i, RightPart(i)), LeftDirectrix(p)) = True"
},
{
    "assertion": "IsParallel ( LineOf ( LeftVertex ( CONICSECTION: l ), LowerFocus ( CONICSECTION: y ) ), LINE: U ) equals BOOL: False",
    "id": 4802,
    "declarations": "l: CONICSECTION; y: CONICSECTION; U: LINE; False: BOOL",
    "facts": "IsParallel(LineOf(LeftVertex(l), LowerFocus(y)), U) = False"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Q ) equals LeftDirectrix ( CONICSECTION: v )",
    "id": 4803,
    "declarations": "Q: CONICSECTION; v: CONICSECTION",
    "facts": "LeftDirectrix(Q) = LeftDirectrix(v)"
},
{
    "assertion": "And ( UpperFocus ( CONICSECTION: P ) equals POINT: E, LineOf ( POINT: X, POINT: v ) equals LINE: r ) equals BOOL: False",
    "id": 4804,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Asymptote ( HYPERBOLA: x ) equals LINE: d",
    "id": 4805,
    "declarations": "x: HYPERBOLA; d: LINE",
    "facts": "Asymptote(x) = d"
},
{
    "assertion": "PointOnCurve ( RightVertex ( CONICSECTION: P ), CURVE: s ) equals BOOL: True",
    "id": 4806,
    "declarations": "P: CONICSECTION; s: CURVE; True: BOOL",
    "facts": "PointOnCurve(RightVertex(P), s) = True"
},
{
    "assertion": "Negation ( VectorOf ( Center ( CONICSECTION: f ), LowerFocus ( CONICSECTION: c ) ) equals VECTOR: w ) equals BOOL: False",
    "id": 4807,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Max ( NUMBER: -13 ) equals Abs ( ImaginaryAxis ( ELLIPSE: v ) )",
    "id": 4808,
    "declarations": "-13: NUMBER; v: ELLIPSE",
    "facts": "Max(-13) = Abs(ImaginaryAxis(v))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: a ) equals CURVE: V",
    "id": 4809,
    "declarations": "a: HYPERBOLA; V: CURVE",
    "facts": "LeftPart(a) = V"
},
{
    "assertion": "DotProduct ( VECTOR: H, VECTOR: O ) equals FocalLength ( CONICSECTION: c )",
    "id": 4810,
    "declarations": "H: VECTOR; O: VECTOR; c: CONICSECTION",
    "facts": "DotProduct(H, O) = FocalLength(c)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: z ) equals LINESEGMENT: b",
    "id": 4811,
    "declarations": "z: ELLIPSE; b: LINESEGMENT",
    "facts": "MajorAxis(z) = b"
},
{
    "assertion": "FootPoint ( LINE: X, LINE: I ) equals POINT: H",
    "id": 4812,
    "declarations": "X: LINE; I: LINE; H: POINT",
    "facts": "FootPoint(X, I) = H"
},
{
    "assertion": "LineOf ( Circumcenter ( TRIANGLE: G ), FootPoint ( RightDirectrix ( CONICSECTION: u ), OverlappingLine ( LINESEGMENT: t ) ) ) equals RightDirectrix ( CONICSECTION: A )",
    "id": 4813,
    "declarations": "G: TRIANGLE; u: CONICSECTION; t: LINESEGMENT; A: CONICSECTION",
    "facts": "LineOf(Circumcenter(G), FootPoint(RightDirectrix(u), OverlappingLine(t))) = RightDirectrix(A)"
},
{
    "assertion": "Projection ( POINT: q, LINE: R ) equals POINT: J",
    "id": 4814,
    "declarations": "q: POINT; R: LINE; J: POINT",
    "facts": "Projection(q, R) = J"
},
{
    "assertion": "Center ( CONICSECTION: k ) equals POINT: l",
    "id": 4815,
    "declarations": "k: CONICSECTION; l: POINT",
    "facts": "Center(k) = l"
},
{
    "assertion": "LocusEquation ( POINT: l ) equals EXPRESSION: x^2*space-*spacey^2*space=*space1",
    "id": 4816,
    "declarations": "l: POINT; x^2*space-*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(l) = x^2*space-*spacey^2*space=*space1"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: j, TRIANGLE: X ) equals BOOL: True",
    "id": 4817,
    "declarations": "j: CIRCLE; X: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(j, X) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: K ) equals Area ( CONICSECTION: v )",
    "id": 4818,
    "declarations": "K: CONICSECTION; v: CONICSECTION",
    "facts": "HalfFocalLength(K) = Area(v)"
},
{
    "assertion": "Locus ( LeftVertex ( CONICSECTION: D ) ) equals RightPart ( HYPERBOLA: o )",
    "id": 4819,
    "declarations": "D: CONICSECTION; o: HYPERBOLA",
    "facts": "Locus(LeftVertex(D)) = RightPart(o)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: x ) equals LINESEGMENT: D",
    "id": 4820,
    "declarations": "x: ELLIPSE; D: LINESEGMENT",
    "facts": "MajorAxis(x) = D"
},
{
    "assertion": "Vertex ( CONICSECTION: b ) equals MidPoint ( RealAxis ( ELLIPSE: Y ) )",
    "id": 4821,
    "declarations": "b: CONICSECTION; Y: ELLIPSE",
    "facts": "Vertex(b) = MidPoint(RealAxis(Y))"
},
{
    "assertion": "LocusEquation ( POINT: X ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 4822,
    "declarations": "X: POINT; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "LocusEquation(X) = x*space+*spacey*space=*space5"
},
{
    "assertion": "PointOnCurve ( LeftVertex ( CONICSECTION: W ), CURVE: D ) equals BOOL: False",
    "id": 4823,
    "declarations": "W: CONICSECTION; D: CURVE; False: BOOL",
    "facts": "PointOnCurve(LeftVertex(W), D) = False"
},
{
    "assertion": "InterceptChord ( LINE: M, CONICSECTION: J ) equals MajorAxis ( ELLIPSE: Q )",
    "id": 4824,
    "declarations": "M: LINE; J: CONICSECTION; Q: ELLIPSE",
    "facts": "InterceptChord(M, J) = MajorAxis(Q)"
},
{
    "assertion": "Radius ( CIRCLE: K ) equals Quadrant ( LowerFocus ( CONICSECTION: O ) )",
    "id": 4825,
    "declarations": "K: CIRCLE; O: CONICSECTION",
    "facts": "Radius(K) = Quadrant(LowerFocus(O))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: M ) equals PerpendicularBisector ( LINESEGMENT: E )",
    "id": 4826,
    "declarations": "M: CONICSECTION; E: LINESEGMENT",
    "facts": "RightDirectrix(M) = PerpendicularBisector(E)"
},
{
    "assertion": "Min ( NUMBER: 87 ) equals XCoordinate ( POINT: i )",
    "id": 4827,
    "declarations": "87: NUMBER; i: POINT",
    "facts": "Min(87) = XCoordinate(i)"
},
{
    "assertion": "LineOf ( POINT: d, MidPoint ( ImaginaryAxis ( ELLIPSE: w ) ) ) equals TangentOfPoint ( LowerVertex ( CONICSECTION: V ), CURVE: Z )",
    "id": 4828,
    "declarations": "d: POINT; w: ELLIPSE; V: CONICSECTION; Z: CURVE",
    "facts": "LineOf(d, MidPoint(ImaginaryAxis(w))) = TangentOfPoint(LowerVertex(V), Z)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: l ) equals RightFocus ( CONICSECTION: A )",
    "id": 4829,
    "declarations": "l: CONICSECTION; A: CONICSECTION",
    "facts": "LeftFocus(l) = RightFocus(A)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: N ) equals LowerVertex ( CONICSECTION: E )",
    "id": 4830,
    "declarations": "N: CONICSECTION; E: CONICSECTION",
    "facts": "LowerFocus(N) = LowerVertex(E)"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: i ) ) equals Length ( MajorAxis ( ELLIPSE: S ) )",
    "id": 4831,
    "declarations": "i: ELLIPSE; S: ELLIPSE",
    "facts": "Abs(MinorAxis(i)) = Length(MajorAxis(S))"
},
{
    "assertion": "Inclination ( LINE: a ) equals NumIntersection ( RightPart ( HYPERBOLA: Q ), CURVE: r )",
    "id": 4832,
    "declarations": "a: LINE; Q: HYPERBOLA; r: CURVE",
    "facts": "Inclination(a) = NumIntersection(RightPart(Q), r)"
},
{
    "assertion": "IsInTangent ( CIRCLE: i, CIRCLE: E ) equals BOOL: False",
    "id": 4833,
    "declarations": "i: CIRCLE; E: CIRCLE; False: BOOL",
    "facts": "IsInTangent(i, E) = False"
},
{
    "assertion": "MajorAxis ( ELLIPSE: s ) equals LINESEGMENT: R",
    "id": 4834,
    "declarations": "s: ELLIPSE; R: LINESEGMENT",
    "facts": "MajorAxis(s) = R"
},
{
    "assertion": "Asymptote ( HYPERBOLA: p ) equals PerpendicularBisector ( LINESEGMENT: s )",
    "id": 4835,
    "declarations": "p: HYPERBOLA; s: LINESEGMENT",
    "facts": "Asymptote(p) = PerpendicularBisector(s)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: C ) equals NUMBER: -74",
    "id": 4836,
    "declarations": "C: CONICSECTION; -74: NUMBER",
    "facts": "Eccentricity(C) = -74"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: p, CONICSECTION: y ) equals BOOL: False",
    "id": 4837,
    "declarations": "p: LINESEGMENT; y: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(p, y) = False"
},
{
    "assertion": "IsPerpendicular ( LINE: i, LINE: f ) equals BOOL: True",
    "id": 4838,
    "declarations": "i: LINE; f: LINE; True: BOOL",
    "facts": "IsPerpendicular(i, f) = True"
},
{
    "assertion": "UpperFocus ( CONICSECTION: p ) equals MidPoint ( LINESEGMENT: X )",
    "id": 4839,
    "declarations": "p: CONICSECTION; X: LINESEGMENT",
    "facts": "UpperFocus(p) = MidPoint(X)"
},
{
    "assertion": "TangentPoint ( LINE: I, CIRCLE: n ) equals UpperVertex ( CONICSECTION: x )",
    "id": 4840,
    "declarations": "I: LINE; n: CIRCLE; x: CONICSECTION",
    "facts": "TangentPoint(I, n) = UpperVertex(x)"
},
{
    "assertion": "TangentOfPoint ( RightVertex ( CONICSECTION: T ), CURVE: i ) equals LeftDirectrix ( CONICSECTION: X )",
    "id": 4841,
    "declarations": "T: CONICSECTION; i: CURVE; X: CONICSECTION",
    "facts": "TangentOfPoint(RightVertex(T), i) = LeftDirectrix(X)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: w ) equals POINT: H",
    "id": 4842,
    "declarations": "w: CONICSECTION; H: POINT",
    "facts": "LowerVertex(w) = H"
},
{
    "assertion": "LowerFocus ( CONICSECTION: U ) equals RightFocus ( CONICSECTION: W )",
    "id": 4843,
    "declarations": "U: CONICSECTION; W: CONICSECTION",
    "facts": "LowerFocus(U) = RightFocus(W)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: v ) equals LINE: o",
    "id": 4844,
    "declarations": "v: LINESEGMENT; o: LINE",
    "facts": "OverlappingLine(v) = o"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: h ) equals LINE: x",
    "id": 4845,
    "declarations": "h: CONICSECTION; x: LINE",
    "facts": "RightDirectrix(h) = x"
},
{
    "assertion": "VectorOf ( POINT: W, POINT: L ) equals VECTOR: f",
    "id": 4846,
    "declarations": "W: POINT; L: POINT; f: VECTOR",
    "facts": "VectorOf(W, L) = f"
},
{
    "assertion": "LeftVertex ( CONICSECTION: F ) equals LowerVertex ( CONICSECTION: Z )",
    "id": 4847,
    "declarations": "F: CONICSECTION; Z: CONICSECTION",
    "facts": "LeftVertex(F) = LowerVertex(Z)"
},
{
    "assertion": "LocusEquation ( LowerFocus ( CONICSECTION: m ) ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 4848,
    "declarations": "m: CONICSECTION; y*space=*spacesin(x): EXPRESSION",
    "facts": "LocusEquation(LowerFocus(m)) = y*space=*spacesin(x)"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: X ) ) equals POINT: Z",
    "id": 4849,
    "declarations": "X: ELLIPSE; Z: POINT",
    "facts": "MidPoint(MajorAxis(X)) = Z"
},
{
    "assertion": "YCoordinate ( POINT: Q ) equals NUMBER: 55",
    "id": 4850,
    "declarations": "Q: POINT; 55: NUMBER",
    "facts": "YCoordinate(Q) = 55"
},
{
    "assertion": "Circumcenter ( TRIANGLE: n ) equals POINT: d",
    "id": 4851,
    "declarations": "n: TRIANGLE; d: POINT",
    "facts": "Circumcenter(n) = d"
},
{
    "assertion": "FootPoint ( PerpendicularBisector ( MinorAxis ( ELLIPSE: P ) ), LINE: d ) equals POINT: Z",
    "id": 4852,
    "declarations": "P: ELLIPSE; d: LINE; Z: POINT",
    "facts": "FootPoint(PerpendicularBisector(MinorAxis(P)), d) = Z"
},
{
    "assertion": "Perimeter ( CONICSECTION: F ) equals Diameter ( CIRCLE: M )",
    "id": 4853,
    "declarations": "F: CONICSECTION; M: CIRCLE",
    "facts": "Perimeter(F) = Diameter(M)"
},
{
    "assertion": "Intersection ( CURVE: U, CURVE: J ) equals POINT: J",
    "id": 4854,
    "declarations": "U: CURVE; J: CURVE; J: POINT",
    "facts": "Intersection(U, J) = J"
},
{
    "assertion": "Expression ( CURVE: g ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 4855,
    "declarations": "g: CURVE; y*space=*spacesin(x): EXPRESSION",
    "facts": "Expression(g) = y*space=*spacesin(x)"
},
{
    "assertion": "DotProduct ( VECTOR: L, VECTOR: u ) equals NUMBER: -10",
    "id": 4856,
    "declarations": "L: VECTOR; u: VECTOR; -10: NUMBER",
    "facts": "DotProduct(L, u) = -10"
},
{
    "assertion": "LineOf ( POINT: C, POINT: E ) equals LINE: A",
    "id": 4857,
    "declarations": "C: POINT; E: POINT; A: LINE",
    "facts": "LineOf(C, E) = A"
},
{
    "assertion": "LeftPart ( HYPERBOLA: e ) equals CURVE: B",
    "id": 4858,
    "declarations": "e: HYPERBOLA; B: CURVE",
    "facts": "LeftPart(e) = B"
},
{
    "assertion": "IsOutTangent ( CIRCLE: p, CIRCLE: e ) equals BOOL: False",
    "id": 4859,
    "declarations": "p: CIRCLE; e: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(p, e) = False"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: z, TRIANGLE: P ) equals BOOL: False",
    "id": 4860,
    "declarations": "z: CIRCLE; P: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(z, P) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: S ) equals PerpendicularBisector ( MajorAxis ( ELLIPSE: G ) )",
    "id": 4861,
    "declarations": "S: CONICSECTION; G: ELLIPSE",
    "facts": "Directrix(S) = PerpendicularBisector(MajorAxis(G))"
},
{
    "assertion": "lg ( NUMBER: -21 ) equals Intercept ( LINE: g, AXIS: xAxis )",
    "id": 4862,
    "declarations": "-21: NUMBER; g: LINE; xAxis: AXIS",
    "facts": "lg(-21) = Intercept(g, xAxis)"
},
{
    "assertion": "Focus ( CONICSECTION: n ) equals POINT: i",
    "id": 4863,
    "declarations": "n: CONICSECTION; i: POINT",
    "facts": "Focus(n) = i"
},
{
    "assertion": "FocalLength ( CONICSECTION: r ) equals NUMBER: -3",
    "id": 4864,
    "declarations": "r: CONICSECTION; -3: NUMBER",
    "facts": "FocalLength(r) = -3"
},
{
    "assertion": "Length ( LINESEGMENT: N ) equals XCoordinate ( MidPoint ( LINESEGMENT: G ) )",
    "id": 4865,
    "declarations": "N: LINESEGMENT; G: LINESEGMENT",
    "facts": "Length(N) = XCoordinate(MidPoint(G))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: L ) equals NUMBER: -89",
    "id": 4866,
    "declarations": "L: CONICSECTION; -89: NUMBER",
    "facts": "Eccentricity(L) = -89"
},
{
    "assertion": "IsPerpendicular ( LINE: n, LINE: q ) equals BOOL: False",
    "id": 4867,
    "declarations": "n: LINE; q: LINE; False: BOOL",
    "facts": "IsPerpendicular(n, q) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: H ) equals LeftVertex ( CONICSECTION: k )",
    "id": 4868,
    "declarations": "H: CONICSECTION; k: CONICSECTION",
    "facts": "RightFocus(H) = LeftVertex(k)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: R ) equals RealAxis ( ELLIPSE: G )",
    "id": 4869,
    "declarations": "R: ELLIPSE; G: ELLIPSE",
    "facts": "ImaginaryAxis(R) = RealAxis(G)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: N ) equals Inclination ( LeftDirectrix ( CONICSECTION: f ) )",
    "id": 4870,
    "declarations": "N: CONICSECTION; f: CONICSECTION",
    "facts": "Eccentricity(N) = Inclination(LeftDirectrix(f))"
},
{
    "assertion": "Vertex ( CONICSECTION: Z ) equals POINT: S",
    "id": 4871,
    "declarations": "Z: CONICSECTION; S: POINT",
    "facts": "Vertex(Z) = S"
},
{
    "assertion": "PointOnCurve ( POINT: d, CURVE: h ) equals BOOL: False",
    "id": 4872,
    "declarations": "d: POINT; h: CURVE; False: BOOL",
    "facts": "PointOnCurve(d, h) = False"
},
{
    "assertion": "Center ( CONICSECTION: t ) equals MidPoint ( LINESEGMENT: x )",
    "id": 4873,
    "declarations": "t: CONICSECTION; x: LINESEGMENT",
    "facts": "Center(t) = MidPoint(x)"
},
{
    "assertion": "Incenter ( TRIANGLE: C ) equals POINT: A",
    "id": 4874,
    "declarations": "C: TRIANGLE; A: POINT",
    "facts": "Incenter(C) = A"
},
{
    "assertion": "sqrt ( InterReciprocal ( Eccentricity ( CONICSECTION: Q ) ) ) equals Quadrant ( POINT: n )",
    "id": 4875,
    "declarations": "Q: CONICSECTION; n: POINT",
    "facts": "sqrt(InterReciprocal(Eccentricity(Q))) = Quadrant(n)"
},
{
    "assertion": "TangentPoint ( LINE: W, CIRCLE: Q ) equals UpperVertex ( CONICSECTION: S )",
    "id": 4876,
    "declarations": "W: LINE; Q: CIRCLE; S: CONICSECTION",
    "facts": "TangentPoint(W, Q) = UpperVertex(S)"
},
{
    "assertion": "Intercept ( LINE: T, AXIS: xAxis ) equals Distance ( UpperFocus ( CONICSECTION: w ), UpperFocus ( CONICSECTION: P ) )",
    "id": 4877,
    "declarations": "T: LINE; xAxis: AXIS; w: CONICSECTION; P: CONICSECTION",
    "facts": "Intercept(T, xAxis) = Distance(UpperFocus(w), UpperFocus(P))"
},
{
    "assertion": "Focus ( CONICSECTION: l ) equals POINT: N",
    "id": 4878,
    "declarations": "l: CONICSECTION; N: POINT",
    "facts": "Focus(l) = N"
},
{
    "assertion": "UpperVertex ( CONICSECTION: D ) equals LowerFocus ( CONICSECTION: K )",
    "id": 4879,
    "declarations": "D: CONICSECTION; K: CONICSECTION",
    "facts": "UpperVertex(D) = LowerFocus(K)"
},
{
    "assertion": "NumIntersection ( Locus ( Orthocenter ( TRIANGLE: E ) ), CURVE: h ) equals Area ( CONICSECTION: O )",
    "id": 4880,
    "declarations": "E: TRIANGLE; h: CURVE; O: CONICSECTION",
    "facts": "NumIntersection(Locus(Orthocenter(E)), h) = Area(O)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: B ) equals LINESEGMENT: F",
    "id": 4881,
    "declarations": "B: ELLIPSE; F: LINESEGMENT",
    "facts": "ImaginaryAxis(B) = F"
},
{
    "assertion": "LineSegmentOf ( LowerVertex ( CONICSECTION: v ), POINT: V ) equals RealAxis ( ELLIPSE: a )",
    "id": 4882,
    "declarations": "v: CONICSECTION; V: POINT; a: ELLIPSE",
    "facts": "LineSegmentOf(LowerVertex(v), V) = RealAxis(a)"
},
{
    "assertion": "Perimeter ( CONICSECTION: p ) equals Abs ( LINESEGMENT: D )",
    "id": 4883,
    "declarations": "p: CONICSECTION; D: LINESEGMENT",
    "facts": "Perimeter(p) = Abs(D)"
},
{
    "assertion": "Intercept ( LINE: f, AXIS: yAxis ) equals Abs ( MinorAxis ( ELLIPSE: H ) )",
    "id": 4884,
    "declarations": "f: LINE; yAxis: AXIS; H: ELLIPSE",
    "facts": "Intercept(f, yAxis) = Abs(MinorAxis(H))"
},
{
    "assertion": "Length ( LINESEGMENT: k ) equals YCoordinate ( Incenter ( TRIANGLE: Y ) )",
    "id": 4885,
    "declarations": "k: LINESEGMENT; Y: TRIANGLE",
    "facts": "Length(k) = YCoordinate(Incenter(Y))"
},
{
    "assertion": "IsOutTangent ( CIRCLE: S, CIRCLE: E ) equals BOOL: False",
    "id": 4886,
    "declarations": "S: CIRCLE; E: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(S, E) = False"
},
{
    "assertion": "Slope ( LINE: j ) equals FocalLength ( CONICSECTION: G )",
    "id": 4887,
    "declarations": "j: LINE; G: CONICSECTION",
    "facts": "Slope(j) = FocalLength(G)"
},
{
    "assertion": "Slope ( LINE: x ) equals DotProduct ( VECTOR: w, VECTOR: J )",
    "id": 4888,
    "declarations": "x: LINE; w: VECTOR; J: VECTOR",
    "facts": "Slope(x) = DotProduct(w, J)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: y ) equals UpperVertex ( CONICSECTION: V )",
    "id": 4889,
    "declarations": "y: CONICSECTION; V: CONICSECTION",
    "facts": "LowerFocus(y) = UpperVertex(V)"
},
{
    "assertion": "Vertex ( CONICSECTION: m ) equals LeftVertex ( CONICSECTION: o )",
    "id": 4890,
    "declarations": "m: CONICSECTION; o: CONICSECTION",
    "facts": "Vertex(m) = LeftVertex(o)"
},
{
    "assertion": "Distance ( POINT: z, POINT: Y ) equals Min ( NUMBER: 42 )",
    "id": 4891,
    "declarations": "z: POINT; Y: POINT; 42: NUMBER",
    "facts": "Distance(z, Y) = Min(42)"
},
{
    "assertion": "IsDiameter ( MajorAxis ( ELLIPSE: e ), CIRCLE: p ) equals BOOL: False",
    "id": 4892,
    "declarations": "e: ELLIPSE; p: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MajorAxis(e), p) = False"
},
{
    "assertion": "lg ( NUMBER: -32 ) equals lg ( Distance ( POINT: n, POINT: y ) )",
    "id": 4893,
    "declarations": "-32: NUMBER; n: POINT; y: POINT",
    "facts": "lg(-32) = lg(Distance(n, y))"
},
{
    "assertion": "IsTangent ( LINE: N, CONICSECTION: D ) equals BOOL: False",
    "id": 4894,
    "declarations": "N: LINE; D: CONICSECTION; False: BOOL",
    "facts": "IsTangent(N, D) = False"
},
{
    "assertion": "FootPoint ( LineOf ( POINT: B, POINT: X ), LeftDirectrix ( CONICSECTION: l ) ) equals MidPoint ( LINESEGMENT: A )",
    "id": 4895,
    "declarations": "B: POINT; X: POINT; l: CONICSECTION; A: LINESEGMENT",
    "facts": "FootPoint(LineOf(B, X), LeftDirectrix(l)) = MidPoint(A)"
},
{
    "assertion": "LineSegmentOf ( LeftVertex ( CONICSECTION: r ), POINT: h ) equals ImaginaryAxis ( ELLIPSE: t )",
    "id": 4896,
    "declarations": "r: CONICSECTION; h: POINT; t: ELLIPSE",
    "facts": "LineSegmentOf(LeftVertex(r), h) = ImaginaryAxis(t)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: r, CIRCLE: U ) equals BOOL: True",
    "id": 4897,
    "declarations": "r: CIRCLE; U: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(r, U) = True"
},
{
    "assertion": "LowerFocus ( CONICSECTION: y ) equals POINT: l",
    "id": 4898,
    "declarations": "y: CONICSECTION; l: POINT",
    "facts": "LowerFocus(y) = l"
},
{
    "assertion": "NumIntersection ( CURVE: F, CURVE: U ) equals Slope ( TangentOfPoint ( Orthocenter ( TRIANGLE: j ), CURVE: J ) )",
    "id": 4899,
    "declarations": "F: CURVE; U: CURVE; j: TRIANGLE; J: CURVE",
    "facts": "NumIntersection(F, U) = Slope(TangentOfPoint(Orthocenter(j), J))"
},
{
    "assertion": "Slope ( LINE: H ) equals NUMBER: -94",
    "id": 4900,
    "declarations": "H: LINE; -94: NUMBER",
    "facts": "Slope(H) = -94"
},
{
    "assertion": "Inclination ( LINE: e ) equals XCoordinate ( LeftFocus ( CONICSECTION: F ) )",
    "id": 4901,
    "declarations": "e: LINE; F: CONICSECTION",
    "facts": "Inclination(e) = XCoordinate(LeftFocus(F))"
},
{
    "assertion": "Quadrant ( POINT: M ) equals NUMBER: 100",
    "id": 4902,
    "declarations": "M: POINT; 100: NUMBER",
    "facts": "Quadrant(M) = 100"
},
{
    "assertion": "Diameter ( CIRCLE: v ) equals NUMBER: 61",
    "id": 4903,
    "declarations": "v: CIRCLE; 61: NUMBER",
    "facts": "Diameter(v) = 61"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: p ) equals TangentOfPoint ( POINT: O, CURVE: B )",
    "id": 4904,
    "declarations": "p: CONICSECTION; O: POINT; B: CURVE",
    "facts": "LeftDirectrix(p) = TangentOfPoint(O, B)"
},
{
    "assertion": "IsPerpendicular ( LINE: L, LINE: k ) equals BOOL: False",
    "id": 4905,
    "declarations": "L: LINE; k: LINE; False: BOOL",
    "facts": "IsPerpendicular(L, k) = False"
},
{
    "assertion": "IsParallel ( LINE: L, LINE: T ) equals BOOL: False",
    "id": 4906,
    "declarations": "L: LINE; T: LINE; False: BOOL",
    "facts": "IsParallel(L, T) = False"
},
{
    "assertion": "Asymptote ( HYPERBOLA: N ) equals LINE: s",
    "id": 4907,
    "declarations": "N: HYPERBOLA; s: LINE",
    "facts": "Asymptote(N) = s"
},
{
    "assertion": "Coordinate ( POINT: I ) equals ( Length ( LINESEGMENT: H ), HalfFocalLength ( CONICSECTION: E ) )",
    "id": 4908,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Expression ( CURVE: F ) equals EXPRESSION: y*space=*spacex^2*space-*space4*x*space+*space4",
    "id": 4909,
    "declarations": "F: CURVE; y*space=*spacex^2*space-*space4*x*space+*space4: EXPRESSION",
    "facts": "Expression(F) = y*space=*spacex^2*space-*space4*x*space+*space4"
},
{
    "assertion": "MidPoint ( LINESEGMENT: t ) equals UpperFocus ( CONICSECTION: m )",
    "id": 4910,
    "declarations": "t: LINESEGMENT; m: CONICSECTION",
    "facts": "MidPoint(t) = UpperFocus(m)"
},
{
    "assertion": "YCoordinate ( MidPoint ( LINESEGMENT: L ) ) equals NUMBER: 87",
    "id": 4911,
    "declarations": "L: LINESEGMENT; 87: NUMBER",
    "facts": "YCoordinate(MidPoint(L)) = 87"
},
{
    "assertion": "Directrix ( CONICSECTION: a ) equals LINE: F",
    "id": 4912,
    "declarations": "a: CONICSECTION; F: LINE",
    "facts": "Directrix(a) = F"
},
{
    "assertion": "DotProduct ( VECTOR: b, VECTOR: i ) equals Min ( NUMBER: -61 )",
    "id": 4913,
    "declarations": "b: VECTOR; i: VECTOR; -61: NUMBER",
    "facts": "DotProduct(b, i) = Min(-61)"
},
{
    "assertion": "Between ( RightFocus ( CONICSECTION: C ), LowerFocus ( CONICSECTION: S ), UpperVertex ( CONICSECTION: F ) ) equals BOOL: False",
    "id": 4914,
    "declarations": "C: CONICSECTION; S: CONICSECTION; F: CONICSECTION; False: BOOL",
    "facts": "Between(RightFocus(C), LowerFocus(S), UpperVertex(F)) = False"
},
{
    "assertion": "Length ( LINESEGMENT: F ) equals NUMBER: 12",
    "id": 4915,
    "declarations": "F: LINESEGMENT; 12: NUMBER",
    "facts": "Length(F) = 12"
},
{
    "assertion": "IsInTangent ( CIRCLE: o, CIRCLE: T ) equals BOOL: True",
    "id": 4916,
    "declarations": "o: CIRCLE; T: CIRCLE; True: BOOL",
    "facts": "IsInTangent(o, T) = True"
},
{
    "assertion": "RealAxis ( ELLIPSE: U ) equals MinorAxis ( ELLIPSE: W )",
    "id": 4917,
    "declarations": "U: ELLIPSE; W: ELLIPSE",
    "facts": "RealAxis(U) = MinorAxis(W)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: s ) equals MinorAxis ( ELLIPSE: t )",
    "id": 4918,
    "declarations": "s: ELLIPSE; t: ELLIPSE",
    "facts": "ImaginaryAxis(s) = MinorAxis(t)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: x ) equals POINT: W",
    "id": 4919,
    "declarations": "x: CONICSECTION; W: POINT",
    "facts": "LeftFocus(x) = W"
},
{
    "assertion": "MajorAxis ( ELLIPSE: z ) equals LINESEGMENT: s",
    "id": 4920,
    "declarations": "z: ELLIPSE; s: LINESEGMENT",
    "facts": "MajorAxis(z) = s"
},
{
    "assertion": "Vertex ( CONICSECTION: Y ) equals LeftVertex ( CONICSECTION: S )",
    "id": 4921,
    "declarations": "Y: CONICSECTION; S: CONICSECTION",
    "facts": "Vertex(Y) = LeftVertex(S)"
},
{
    "assertion": "Perimeter ( CONICSECTION: F ) equals Distance ( Orthocenter ( TRIANGLE: b ), RightFocus ( CONICSECTION: p ) )",
    "id": 4922,
    "declarations": "F: CONICSECTION; b: TRIANGLE; p: CONICSECTION",
    "facts": "Perimeter(F) = Distance(Orthocenter(b), RightFocus(p))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: u ) equals MidPoint ( MajorAxis ( ELLIPSE: t ) )",
    "id": 4923,
    "declarations": "u: CONICSECTION; t: ELLIPSE",
    "facts": "UpperFocus(u) = MidPoint(MajorAxis(t))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: R ) equals LowerFocus ( CONICSECTION: t )",
    "id": 4924,
    "declarations": "R: TRIANGLE; t: CONICSECTION",
    "facts": "Circumcenter(R) = LowerFocus(t)"
},
{
    "assertion": "LocusEquation ( POINT: e ) equals EXPRESSION: x^2/4*space+*spacey^2/16*space=*space1",
    "id": 4925,
    "declarations": "e: POINT; x^2/4*space+*spacey^2/16*space=*space1: EXPRESSION",
    "facts": "LocusEquation(e) = x^2/4*space+*spacey^2/16*space=*space1"
},
{
    "assertion": "Endpoint ( MinorAxis ( ELLIPSE: J ) ) equals POINT: E",
    "id": 4926,
    "declarations": "J: ELLIPSE; E: POINT",
    "facts": "Endpoint(MinorAxis(J)) = E"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: L ), TRIANGLE: g ) equals BOOL: False",
    "id": 4927,
    "declarations": "L: TRIANGLE; g: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(L), g) = False"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: I ) ) equals YCoordinate ( LowerVertex ( CONICSECTION: h ) )",
    "id": 4928,
    "declarations": "I: TRIANGLE; h: CONICSECTION",
    "facts": "Diameter(CircumCircle(I)) = YCoordinate(LowerVertex(h))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: a ) equals Perimeter ( CONICSECTION: g )",
    "id": 4929,
    "declarations": "a: CONICSECTION; g: CONICSECTION",
    "facts": "Eccentricity(a) = Perimeter(g)"
},
{
    "assertion": "RealAxis ( ELLIPSE: n ) equals RealAxis ( ELLIPSE: j )",
    "id": 4930,
    "declarations": "n: ELLIPSE; j: ELLIPSE",
    "facts": "RealAxis(n) = RealAxis(j)"
},
{
    "assertion": "ApplyUnit ( HalfFocalLength ( CONICSECTION: C ), DEGREESTR: degree )",
    "id": 4931,
    "declarations": "C: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(HalfFocalLength(C), degree) = None"
},
{
    "assertion": "LineSegmentOf ( LeftFocus ( CONICSECTION: s ), Projection ( UpperFocus ( CONICSECTION: n ), LINE: r ) ) equals LINESEGMENT: R",
    "id": 4932,
    "declarations": "s: CONICSECTION; n: CONICSECTION; r: LINE; R: LINESEGMENT",
    "facts": "LineSegmentOf(LeftFocus(s), Projection(UpperFocus(n), r)) = R"
},
{
    "assertion": "lg ( YCoordinate ( LowerVertex ( CONICSECTION: V ) ) ) equals YCoordinate ( MidPoint ( LINESEGMENT: J ) )",
    "id": 4933,
    "declarations": "V: CONICSECTION; J: LINESEGMENT",
    "facts": "lg(YCoordinate(LowerVertex(V))) = YCoordinate(MidPoint(J))"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: V ) equals LINESEGMENT: u",
    "id": 4934,
    "declarations": "V: ELLIPSE; u: LINESEGMENT",
    "facts": "ImaginaryAxis(V) = u"
},
{
    "assertion": "LowerFocus ( CONICSECTION: L ) equals POINT: H",
    "id": 4935,
    "declarations": "L: CONICSECTION; H: POINT",
    "facts": "LowerFocus(L) = H"
},
{
    "assertion": "RightVertex ( CONICSECTION: P ) equals Incenter ( TRIANGLE: F )",
    "id": 4936,
    "declarations": "P: CONICSECTION; F: TRIANGLE",
    "facts": "RightVertex(P) = Incenter(F)"
},
{
    "assertion": "Distance ( POINT: k, POINT: j ) equals lg ( FocalLength ( CONICSECTION: h ) )",
    "id": 4937,
    "declarations": "k: POINT; j: POINT; h: CONICSECTION",
    "facts": "Distance(k, j) = lg(FocalLength(h))"
},
{
    "assertion": "LineSegmentOf ( POINT: O, LowerFocus ( CONICSECTION: E ) ) equals LINESEGMENT: K",
    "id": 4938,
    "declarations": "O: POINT; E: CONICSECTION; K: LINESEGMENT",
    "facts": "LineSegmentOf(O, LowerFocus(E)) = K"
},
{
    "assertion": "Intersection ( CURVE: B, CURVE: E ) equals Projection ( LowerFocus ( CONICSECTION: Y ), LINE: Q )",
    "id": 4939,
    "declarations": "B: CURVE; E: CURVE; Y: CONICSECTION; Q: LINE",
    "facts": "Intersection(B, E) = Projection(LowerFocus(Y), Q)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: A ) equals POINT: R",
    "id": 4940,
    "declarations": "A: CONICSECTION; R: POINT",
    "facts": "LeftVertex(A) = R"
},
{
    "assertion": "MinorAxis ( ELLIPSE: Z ) equals LINESEGMENT: B",
    "id": 4941,
    "declarations": "Z: ELLIPSE; B: LINESEGMENT",
    "facts": "MinorAxis(Z) = B"
},
{
    "assertion": "RightPart ( HYPERBOLA: O ) equals CURVE: p",
    "id": 4942,
    "declarations": "O: HYPERBOLA; p: CURVE",
    "facts": "RightPart(O) = p"
},
{
    "assertion": "AngleOf ( POINT: I, POINT: a, LowerFocus ( CONICSECTION: M ) ) equals AngleOf ( Incenter ( TRIANGLE: C ), POINT: b, POINT: E )",
    "id": 4943,
    "declarations": "I: POINT; a: POINT; M: CONICSECTION; C: TRIANGLE; b: POINT; E: POINT",
    "facts": "AngleOf(I, a, LowerFocus(M)) = AngleOf(Incenter(C), b, E)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: z ) equals LowerFocus ( CONICSECTION: n )",
    "id": 4944,
    "declarations": "z: TRIANGLE; n: CONICSECTION",
    "facts": "Orthocenter(z) = LowerFocus(n)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: Z, CIRCLE: D ) equals BOOL: True",
    "id": 4945,
    "declarations": "Z: CIRCLE; D: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(Z, D) = True"
},
{
    "assertion": "LocusEquation ( POINT: K ) equals EXPRESSION: y*space=*spacex^3*space-*space4*x",
    "id": 4946,
    "declarations": "K: POINT; y*space=*spacex^3*space-*space4*x: EXPRESSION",
    "facts": "LocusEquation(K) = y*space=*spacex^3*space-*space4*x"
},
{
    "assertion": "Length ( LINESEGMENT: q ) equals Length ( MinorAxis ( ELLIPSE: A ) )",
    "id": 4947,
    "declarations": "q: LINESEGMENT; A: ELLIPSE",
    "facts": "Length(q) = Length(MinorAxis(A))"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: r ) equals PerpendicularBisector ( LINESEGMENT: i )",
    "id": 4948,
    "declarations": "r: LINESEGMENT; i: LINESEGMENT",
    "facts": "OverlappingLine(r) = PerpendicularBisector(i)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: z ) equals MinorAxis ( ELLIPSE: k )",
    "id": 4949,
    "declarations": "z: ELLIPSE; k: ELLIPSE",
    "facts": "MajorAxis(z) = MinorAxis(k)"
},
{
    "assertion": "RightFocus ( CONICSECTION: J ) equals LeftFocus ( CONICSECTION: y )",
    "id": 4950,
    "declarations": "J: CONICSECTION; y: CONICSECTION",
    "facts": "RightFocus(J) = LeftFocus(y)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: G ) equals AXIS: xAxis",
    "id": 4951,
    "declarations": "G: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(G) = xAxis"
},
{
    "assertion": "Length ( LINESEGMENT: X ) equals lg ( NUMBER: 64 )",
    "id": 4952,
    "declarations": "X: LINESEGMENT; 64: NUMBER",
    "facts": "Length(X) = lg(64)"
},
{
    "assertion": "IsChordOf ( MinorAxis ( ELLIPSE: T ), CONICSECTION: L ) equals BOOL: True",
    "id": 4953,
    "declarations": "T: ELLIPSE; L: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(MinorAxis(T), L) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: A ) equals RightFocus ( CONICSECTION: C )",
    "id": 4954,
    "declarations": "A: TRIANGLE; C: CONICSECTION",
    "facts": "Orthocenter(A) = RightFocus(C)"
},
{
    "assertion": "IsDiameter ( MinorAxis ( ELLIPSE: f ), CircumCircle ( TriangleOf ( LeftVertex ( CONICSECTION: T ), UpperFocus ( CONICSECTION: X ), POINT: k ) ) ) equals BOOL: True",
    "id": 4955,
    "declarations": "f: ELLIPSE; T: CONICSECTION; X: CONICSECTION; k: POINT; True: BOOL",
    "facts": "IsDiameter(MinorAxis(f), CircumCircle(TriangleOf(LeftVertex(T), UpperFocus(X), k))) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: A ) equals LINE: J",
    "id": 4956,
    "declarations": "A: CONICSECTION; J: LINE",
    "facts": "Directrix(A) = J"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: V ) ) equals Distance ( POINT: D, Incenter ( TRIANGLE: W ) )",
    "id": 4957,
    "declarations": "V: ELLIPSE; D: POINT; W: TRIANGLE",
    "facts": "Abs(MinorAxis(V)) = Distance(D, Incenter(W))"
},
{
    "assertion": "TangentOfPoint ( LowerVertex ( CONICSECTION: n ), CURVE: y ) equals LineOf ( POINT: r, POINT: l )",
    "id": 4958,
    "declarations": "n: CONICSECTION; y: CURVE; r: POINT; l: POINT",
    "facts": "TangentOfPoint(LowerVertex(n), y) = LineOf(r, l)"
},
{
    "assertion": "Diameter ( CIRCLE: D ) equals Abs ( RealAxis ( ELLIPSE: G ) )",
    "id": 4959,
    "declarations": "D: CIRCLE; G: ELLIPSE",
    "facts": "Diameter(D) = Abs(RealAxis(G))"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: Y, CircumCircle ( TRIANGLE: d ) ) equals BOOL: True",
    "id": 4960,
    "declarations": "Y: LINESEGMENT; d: TRIANGLE; True: BOOL",
    "facts": "IsDiameter(Y, CircumCircle(d)) = True"
},
{
    "assertion": "MidPoint ( LINESEGMENT: p ) equals UpperFocus ( CONICSECTION: Y )",
    "id": 4961,
    "declarations": "p: LINESEGMENT; Y: CONICSECTION",
    "facts": "MidPoint(p) = UpperFocus(Y)"
},
{
    "assertion": "FocalLength ( CONICSECTION: t ) equals Diameter ( CIRCLE: X )",
    "id": 4962,
    "declarations": "t: CONICSECTION; X: CIRCLE",
    "facts": "FocalLength(t) = Diameter(X)"
},
{
    "assertion": "IsParallel ( LeftDirectrix ( CONICSECTION: I ), RightDirectrix ( CONICSECTION: G ) ) equals BOOL: False",
    "id": 4963,
    "declarations": "I: CONICSECTION; G: CONICSECTION; False: BOOL",
    "facts": "IsParallel(LeftDirectrix(I), RightDirectrix(G)) = False"
},
{
    "assertion": "LocusEquation ( POINT: X ) equals EXPRESSION: x*space+*spacey^2*space=*space1",
    "id": 4964,
    "declarations": "X: POINT; x*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(X) = x*space+*spacey^2*space=*space1"
},
{
    "assertion": "LocusEquation ( POINT: s ) equals EXPRESSION: y*space=*space3*x*space+*space2",
    "id": 4965,
    "declarations": "s: POINT; y*space=*space3*x*space+*space2: EXPRESSION",
    "facts": "LocusEquation(s) = y*space=*space3*x*space+*space2"
},
{
    "assertion": "TriangleOf ( LowerVertex ( CONICSECTION: v ), Projection ( Incenter ( TRIANGLE: F ), LINE: H ), POINT: y ) equals TRIANGLE: i",
    "id": 4966,
    "declarations": "v: CONICSECTION; F: TRIANGLE; H: LINE; y: POINT; i: TRIANGLE",
    "facts": "TriangleOf(LowerVertex(v), Projection(Incenter(F), H), y) = i"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: N ) equals YCoordinate ( RightFocus ( CONICSECTION: J ) )",
    "id": 4967,
    "declarations": "N: CONICSECTION; J: CONICSECTION",
    "facts": "HalfFocalLength(N) = YCoordinate(RightFocus(J))"
},
{
    "assertion": "sqrt ( XCoordinate ( Projection ( LowerFocus ( CONICSECTION: n ), LINE: S ) ) ) equals NUMBER: -35",
    "id": 4968,
    "declarations": "n: CONICSECTION; S: LINE; -35: NUMBER",
    "facts": "sqrt(XCoordinate(Projection(LowerFocus(n), S))) = -35"
},
{
    "assertion": "Between ( LowerVertex ( CONICSECTION: l ), UpperFocus ( CONICSECTION: N ), POINT: U ) equals BOOL: True",
    "id": 4969,
    "declarations": "l: CONICSECTION; N: CONICSECTION; U: POINT; True: BOOL",
    "facts": "Between(LowerVertex(l), UpperFocus(N), U) = True"
},
{
    "assertion": "LeftPart ( HYPERBOLA: P ) equals CURVE: b",
    "id": 4970,
    "declarations": "P: HYPERBOLA; b: CURVE",
    "facts": "LeftPart(P) = b"
},
{
    "assertion": "LeftFocus ( CONICSECTION: O ) equals RightFocus ( CONICSECTION: A )",
    "id": 4971,
    "declarations": "O: CONICSECTION; A: CONICSECTION",
    "facts": "LeftFocus(O) = RightFocus(A)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: y ) equals Circumcenter ( TRIANGLE: Y )",
    "id": 4972,
    "declarations": "y: TRIANGLE; Y: TRIANGLE",
    "facts": "Orthocenter(y) = Circumcenter(Y)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: r ) equals LINE: r",
    "id": 4973,
    "declarations": "r: LINESEGMENT; r: LINE",
    "facts": "OverlappingLine(r) = r"
},
{
    "assertion": "Max ( NUMBER: -81 ) equals Quadrant ( Center ( CONICSECTION: e ) )",
    "id": 4974,
    "declarations": "-81: NUMBER; e: CONICSECTION",
    "facts": "Max(-81) = Quadrant(Center(e))"
},
{
    "assertion": "TriangleOf ( POINT: S, Orthocenter ( TRIANGLE: O ), Orthocenter ( TRIANGLE: W ) ) equals TRIANGLE: M",
    "id": 4975,
    "declarations": "S: POINT; O: TRIANGLE; W: TRIANGLE; M: TRIANGLE",
    "facts": "TriangleOf(S, Orthocenter(O), Orthocenter(W)) = M"
},
{
    "assertion": "MidPoint ( LINESEGMENT: q ) equals Orthocenter ( TRIANGLE: H )",
    "id": 4976,
    "declarations": "q: LINESEGMENT; H: TRIANGLE",
    "facts": "MidPoint(q) = Orthocenter(H)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: m ) equals POINT: t",
    "id": 4977,
    "declarations": "m: CONICSECTION; t: POINT",
    "facts": "LowerVertex(m) = t"
},
{
    "assertion": "Eccentricity ( CONICSECTION: Q ) equals Slope ( PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: x ) ) )",
    "id": 4978,
    "declarations": "Q: CONICSECTION; x: ELLIPSE",
    "facts": "Eccentricity(Q) = Slope(PerpendicularBisector(ImaginaryAxis(x)))"
},
{
    "assertion": "NumIntersection ( LeftPart ( HYPERBOLA: H ), LeftPart ( HYPERBOLA: G ) ) equals Area ( CONICSECTION: z )",
    "id": 4979,
    "declarations": "H: HYPERBOLA; G: HYPERBOLA; z: CONICSECTION",
    "facts": "NumIntersection(LeftPart(H), LeftPart(G)) = Area(z)"
},
{
    "assertion": "ApplyUnit ( NumIntersection ( CURVE: j, CURVE: Q ), DEGREESTR: degree )",
    "id": 4980,
    "declarations": "j: CURVE; Q: CURVE; degree: DEGREESTR",
    "facts": "ApplyUnit(NumIntersection(j, Q), degree) = None"
},
{
    "assertion": "sqrt ( XCoordinate ( RightFocus ( CONICSECTION: L ) ) ) equals FocalLength ( CONICSECTION: j )",
    "id": 4981,
    "declarations": "L: CONICSECTION; j: CONICSECTION",
    "facts": "sqrt(XCoordinate(RightFocus(L))) = FocalLength(j)"
},
{
    "assertion": "XCoordinate ( RightVertex ( CONICSECTION: h ) ) equals Slope ( LINE: C )",
    "id": 4982,
    "declarations": "h: CONICSECTION; C: LINE",
    "facts": "XCoordinate(RightVertex(h)) = Slope(C)"
},
{
    "assertion": "sqrt ( NUMBER: 67 ) equals Diameter ( CIRCLE: Z )",
    "id": 4983,
    "declarations": "67: NUMBER; Z: CIRCLE",
    "facts": "sqrt(67) = Diameter(Z)"
},
{
    "assertion": "Focus ( CONICSECTION: Q ) equals LeftFocus ( CONICSECTION: t )",
    "id": 4984,
    "declarations": "Q: CONICSECTION; t: CONICSECTION",
    "facts": "Focus(Q) = LeftFocus(t)"
},
{
    "assertion": "IsIntersect ( CURVE: f, CURVE: k ) equals BOOL: False",
    "id": 4985,
    "declarations": "f: CURVE; k: CURVE; False: BOOL",
    "facts": "IsIntersect(f, k) = False"
},
{
    "assertion": "lg ( XCoordinate ( POINT: x ) ) equals NUMBER: -66",
    "id": 4986,
    "declarations": "x: POINT; -66: NUMBER",
    "facts": "lg(XCoordinate(x)) = -66"
},
{
    "assertion": "lg ( NUMBER: -49 ) equals Perimeter ( CONICSECTION: P )",
    "id": 4987,
    "declarations": "-49: NUMBER; P: CONICSECTION",
    "facts": "lg(-49) = Perimeter(P)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: e, TRIANGLE: w ) equals BOOL: False",
    "id": 4988,
    "declarations": "e: CIRCLE; w: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(e, w) = False"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: K ) ) equals Min ( Eccentricity ( CONICSECTION: i ) )",
    "id": 4989,
    "declarations": "K: CONICSECTION; i: CONICSECTION",
    "facts": "XCoordinate(LeftFocus(K)) = Min(Eccentricity(i))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: d ) equals POINT: X",
    "id": 4990,
    "declarations": "d: CONICSECTION; X: POINT",
    "facts": "LowerVertex(d) = X"
},
{
    "assertion": "DotProduct ( VECTOR: R, VECTOR: Y ) equals Diameter ( CIRCLE: a )",
    "id": 4991,
    "declarations": "R: VECTOR; Y: VECTOR; a: CIRCLE",
    "facts": "DotProduct(R, Y) = Diameter(a)"
},
{
    "assertion": "Max ( Diameter ( CIRCLE: G ) ) equals InterReciprocal ( Slope ( PerpendicularBisector ( LINESEGMENT: k ) ) )",
    "id": 4992,
    "declarations": "G: CIRCLE; k: LINESEGMENT",
    "facts": "Max(Diameter(G)) = InterReciprocal(Slope(PerpendicularBisector(k)))"
},
{
    "assertion": "Radius ( CIRCLE: E ) equals InterReciprocal ( NUMBER: 48 )",
    "id": 4993,
    "declarations": "E: CIRCLE; 48: NUMBER",
    "facts": "Radius(E) = InterReciprocal(48)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: N ) equals OverlappingLine ( LINESEGMENT: m )",
    "id": 4994,
    "declarations": "N: HYPERBOLA; m: LINESEGMENT",
    "facts": "Asymptote(N) = OverlappingLine(m)"
},
{
    "assertion": "PointOnCurve ( Orthocenter ( TRIANGLE: j ), CURVE: g ) equals BOOL: False",
    "id": 4995,
    "declarations": "j: TRIANGLE; g: CURVE; False: BOOL",
    "facts": "PointOnCurve(Orthocenter(j), g) = False"
},
{
    "assertion": "Orthocenter ( TRIANGLE: h ) equals Incenter ( TRIANGLE: u )",
    "id": 4996,
    "declarations": "h: TRIANGLE; u: TRIANGLE",
    "facts": "Orthocenter(h) = Incenter(u)"
},
{
    "assertion": "IsIntersect ( CURVE: f, CURVE: k ) equals BOOL: True",
    "id": 4997,
    "declarations": "f: CURVE; k: CURVE; True: BOOL",
    "facts": "IsIntersect(f, k) = True"
},
{
    "assertion": "DotProduct ( VECTOR: Z, VECTOR: M ) equals NUMBER: -66",
    "id": 4998,
    "declarations": "Z: VECTOR; M: VECTOR; -66: NUMBER",
    "facts": "DotProduct(Z, M) = -66"
},
{
    "assertion": "Vertex ( CONICSECTION: q ) equals POINT: o",
    "id": 4999,
    "declarations": "q: CONICSECTION; o: POINT",
    "facts": "Vertex(q) = o"
},
{
    "assertion": "InterReciprocal ( Diameter ( CIRCLE: t ) ) equals NUMBER: -35",
    "id": 5000,
    "declarations": "t: CIRCLE; -35: NUMBER",
    "facts": "InterReciprocal(Diameter(t)) = -35"
}
]