[
{
    "assertion": "TangentPoint ( TangentOnPoint ( POINT: e, CURVE: I ), CIRCLE: W ) equals POINT: A",
    "id": 0,
    "declarations": "e: POINT; I: CURVE; W: CIRCLE; A: POINT",
    "facts": "TangentPoint(TangentOnPoint(e, I), W) = A"
},
{
    "assertion": "LowerFocus ( CONICSECTION: r ) equals RightVertex ( CONICSECTION: D )",
    "id": 1,
    "declarations": "r: CONICSECTION; D: CONICSECTION",
    "facts": "LowerFocus(r) = RightVertex(D)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: I ) equals CIRCLE: C",
    "id": 2,
    "declarations": "I: TRIANGLE; C: CIRCLE",
    "facts": "CircumCircle(I) = C"
},
{
    "assertion": "UpperFocus ( CONICSECTION: q ) equals RightVertex ( CONICSECTION: T )",
    "id": 3,
    "declarations": "q: CONICSECTION; T: CONICSECTION",
    "facts": "UpperFocus(q) = RightVertex(T)"
},
{
    "assertion": "Radius ( CIRCLE: v ) equals NUMBER: 16",
    "id": 4,
    "declarations": "v: CIRCLE; 16: NUMBER",
    "facts": "Radius(v) = 16"
},
{
    "assertion": "Endpoint ( LINESEGMENT: w ) equals Projection ( Orthocenter ( TRIANGLE: z ), LINE: Q )",
    "id": 5,
    "declarations": "w: LINESEGMENT; z: TRIANGLE; Q: LINE",
    "facts": "Endpoint(w) = Projection(Orthocenter(z), Q)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: l ) equals POINT: l",
    "id": 6,
    "declarations": "l: CONICSECTION; l: POINT",
    "facts": "LowerVertex(l) = l"
},
{
    "assertion": "Focus ( CONICSECTION: o ) equals POINT: K",
    "id": 7,
    "declarations": "o: CONICSECTION; K: POINT",
    "facts": "Focus(o) = K"
},
{
    "assertion": "TriangleOf ( RightFocus ( CONICSECTION: S ), POINT: b, LowerVertex ( CONICSECTION: y ) ) equals TRIANGLE: W",
    "id": 8,
    "declarations": "S: CONICSECTION; b: POINT; y: CONICSECTION; W: TRIANGLE",
    "facts": "TriangleOf(RightFocus(S), b, LowerVertex(y)) = W"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: T, CIRCLE: n ) equals BOOL: True",
    "id": 9,
    "declarations": "T: LINESEGMENT; n: CIRCLE; True: BOOL",
    "facts": "IsDiameter(T, n) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: L ) equals Incenter ( TRIANGLE: a )",
    "id": 10,
    "declarations": "L: CONICSECTION; a: TRIANGLE",
    "facts": "LeftFocus(L) = Incenter(a)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: Z ) equals AXIS: yAxis",
    "id": 11,
    "declarations": "Z: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(Z) = yAxis"
},
{
    "assertion": "Projection ( Center ( CONICSECTION: F ), LINE: T ) equals LeftVertex ( CONICSECTION: J )",
    "id": 12,
    "declarations": "F: CONICSECTION; T: LINE; J: CONICSECTION",
    "facts": "Projection(Center(F), T) = LeftVertex(J)"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: h ) ) equals RightVertex ( CONICSECTION: h )",
    "id": 13,
    "declarations": "h: ELLIPSE; h: CONICSECTION",
    "facts": "MidPoint(MajorAxis(h)) = RightVertex(h)"
},
{
    "assertion": "DotProduct ( VECTOR: h, VECTOR: y ) equals Min ( Perimeter ( CONICSECTION: T ) )",
    "id": 14,
    "declarations": "h: VECTOR; y: VECTOR; T: CONICSECTION",
    "facts": "DotProduct(h, y) = Min(Perimeter(T))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: m ) equals LINESEGMENT: e",
    "id": 15,
    "declarations": "m: ELLIPSE; e: LINESEGMENT",
    "facts": "MajorAxis(m) = e"
},
{
    "assertion": "Inclination ( LINE: A ) equals NUMBER: 97",
    "id": 16,
    "declarations": "A: LINE; 97: NUMBER",
    "facts": "Inclination(A) = 97"
},
{
    "assertion": "Perimeter ( CONICSECTION: X ) equals Abs ( LINESEGMENT: L )",
    "id": 17,
    "declarations": "X: CONICSECTION; L: LINESEGMENT",
    "facts": "Perimeter(X) = Abs(L)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: q ) equals POINT: M",
    "id": 18,
    "declarations": "q: CONICSECTION; M: POINT",
    "facts": "LeftFocus(q) = M"
},
{
    "assertion": "UpperFocus ( CONICSECTION: M ) equals POINT: S",
    "id": 19,
    "declarations": "M: CONICSECTION; S: POINT",
    "facts": "UpperFocus(M) = S"
},
{
    "assertion": "TangentOnPoint ( LeftVertex ( CONICSECTION: L ), CURVE: P ) equals TangentOfPoint ( POINT: g, RightPart ( HYPERBOLA: T ) )",
    "id": 20,
    "declarations": "L: CONICSECTION; P: CURVE; g: POINT; T: HYPERBOLA",
    "facts": "TangentOnPoint(LeftVertex(L), P) = TangentOfPoint(g, RightPart(T))"
},
{
    "assertion": "LocusEquation ( POINT: n ) equals EXPRESSION: y*space=*spacee^x",
    "id": 21,
    "declarations": "n: POINT; y*space=*spacee^x: EXPRESSION",
    "facts": "LocusEquation(n) = y*space=*spacee^x"
},
{
    "assertion": "RightVertex ( CONICSECTION: T ) equals POINT: r",
    "id": 22,
    "declarations": "T: CONICSECTION; r: POINT",
    "facts": "RightVertex(T) = r"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: g, TRIANGLE: Q ) equals BOOL: True",
    "id": 23,
    "declarations": "g: CIRCLE; Q: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(g, Q) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: S ) equals FootPoint ( LINE: Y, LINE: V )",
    "id": 24,
    "declarations": "S: CONICSECTION; Y: LINE; V: LINE",
    "facts": "LeftFocus(S) = FootPoint(Y, V)"
},
{
    "assertion": "And ( Radius ( CIRCLE: W ) equals NUMBER: 69, UpperVertex ( CONICSECTION: p ) equals POINT: e ) equals BOOL: True",
    "id": 25,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "UpperVertex ( CONICSECTION: R ) equals LeftVertex ( CONICSECTION: h )",
    "id": 26,
    "declarations": "R: CONICSECTION; h: CONICSECTION",
    "facts": "UpperVertex(R) = LeftVertex(h)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 88, DEGREESTR: degree )",
    "id": 27,
    "declarations": "88: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(88, degree) = dummy_operator()"
},
{
    "assertion": "Length ( LINESEGMENT: N ) equals Radius ( CIRCLE: s )",
    "id": 28,
    "declarations": "N: LINESEGMENT; s: CIRCLE",
    "facts": "Length(N) = Radius(s)"
},
{
    "assertion": "Intersection ( Locus ( POINT: k ), LeftPart ( HYPERBOLA: j ) ) equals UpperVertex ( CONICSECTION: B )",
    "id": 29,
    "declarations": "k: POINT; j: HYPERBOLA; B: CONICSECTION",
    "facts": "Intersection(Locus(k), LeftPart(j)) = UpperVertex(B)"
},
{
    "assertion": "Locus ( LeftVertex ( CONICSECTION: r ) ) equals CURVE: V",
    "id": 30,
    "declarations": "r: CONICSECTION; V: CURVE",
    "facts": "Locus(LeftVertex(r)) = V"
},
{
    "assertion": "LocusEquation ( POINT: h ) equals EXPRESSION: x*space+*spacey^2*space=*space1",
    "id": 31,
    "declarations": "h: POINT; x*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(h) = x*space+*spacey^2*space=*space1"
},
{
    "assertion": "Radius ( CIRCLE: U ) equals InterReciprocal ( Length ( LINESEGMENT: j ) )",
    "id": 32,
    "declarations": "U: CIRCLE; j: LINESEGMENT",
    "facts": "Radius(U) = InterReciprocal(Length(j))"
},
{
    "assertion": "Max ( Quadrant ( LeftFocus ( CONICSECTION: C ) ) ) equals InterReciprocal ( Quadrant ( LeftFocus ( CONICSECTION: X ) ) )",
    "id": 33,
    "declarations": "C: CONICSECTION; X: CONICSECTION",
    "facts": "Max(Quadrant(LeftFocus(C))) = InterReciprocal(Quadrant(LeftFocus(X)))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: X ) equals LINE: b",
    "id": 34,
    "declarations": "X: HYPERBOLA; b: LINE",
    "facts": "Asymptote(X) = b"
},
{
    "assertion": "Focus ( CONICSECTION: U ) equals LowerFocus ( CONICSECTION: f )",
    "id": 35,
    "declarations": "U: CONICSECTION; f: CONICSECTION",
    "facts": "Focus(U) = LowerFocus(f)"
},
{
    "assertion": "Length ( LINESEGMENT: e ) equals NUMBER: -59",
    "id": 36,
    "declarations": "e: LINESEGMENT; -59: NUMBER",
    "facts": "Length(e) = -59"
},
{
    "assertion": "MidPoint ( LINESEGMENT: D ) equals POINT: b",
    "id": 37,
    "declarations": "D: LINESEGMENT; b: POINT",
    "facts": "MidPoint(D) = b"
},
{
    "assertion": "Focus ( CONICSECTION: P ) equals POINT: P",
    "id": 38,
    "declarations": "P: CONICSECTION; P: POINT",
    "facts": "Focus(P) = P"
},
{
    "assertion": "NumIntersection ( CURVE: y, CURVE: W ) equals InterReciprocal ( NUMBER: 42 )",
    "id": 39,
    "declarations": "y: CURVE; W: CURVE; 42: NUMBER",
    "facts": "NumIntersection(y, W) = InterReciprocal(42)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: C ) equals POINT: y",
    "id": 40,
    "declarations": "C: CONICSECTION; y: POINT",
    "facts": "UpperFocus(C) = y"
},
{
    "assertion": "CircumCircle ( TriangleOf ( POINT: v, LowerFocus ( CONICSECTION: N ), POINT: H ) ) equals CIRCLE: R",
    "id": 41,
    "declarations": "v: POINT; N: CONICSECTION; H: POINT; R: CIRCLE",
    "facts": "CircumCircle(TriangleOf(v, LowerFocus(N), H)) = R"
},
{
    "assertion": "XCoordinate ( Orthocenter ( TRIANGLE: A ) ) equals NUMBER: -93",
    "id": 42,
    "declarations": "A: TRIANGLE; -93: NUMBER",
    "facts": "XCoordinate(Orthocenter(A)) = -93"
},
{
    "assertion": "RightFocus ( CONICSECTION: q ) equals RightFocus ( CONICSECTION: n )",
    "id": 43,
    "declarations": "q: CONICSECTION; n: CONICSECTION",
    "facts": "RightFocus(q) = RightFocus(n)"
},
{
    "assertion": "Diameter ( CIRCLE: q ) equals NUMBER: 12",
    "id": 44,
    "declarations": "q: CIRCLE; 12: NUMBER",
    "facts": "Diameter(q) = 12"
},
{
    "assertion": "ApplyUnit ( NUMBER: 34, DEGREESTR: degree )",
    "id": 45,
    "declarations": "34: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(34, degree) = dummy_operator()"
},
{
    "assertion": "IsInTangent ( CircumCircle ( TRIANGLE: H ), CIRCLE: I ) equals BOOL: False",
    "id": 46,
    "declarations": "H: TRIANGLE; I: CIRCLE; False: BOOL",
    "facts": "IsInTangent(CircumCircle(H), I) = False"
},
{
    "assertion": "DotProduct ( VECTOR: r, VECTOR: C ) equals Abs ( LINESEGMENT: N )",
    "id": 47,
    "declarations": "r: VECTOR; C: VECTOR; N: LINESEGMENT",
    "facts": "DotProduct(r, C) = Abs(N)"
},
{
    "assertion": "Max ( Length ( MajorAxis ( ELLIPSE: r ) ) ) equals NUMBER: 59",
    "id": 48,
    "declarations": "r: ELLIPSE; 59: NUMBER",
    "facts": "Max(Length(MajorAxis(r))) = 59"
},
{
    "assertion": "RightPart ( HYPERBOLA: x ) equals CURVE: G",
    "id": 49,
    "declarations": "x: HYPERBOLA; G: CURVE",
    "facts": "RightPart(x) = G"
},
{
    "assertion": "Circumcenter ( TRIANGLE: U ) equals UpperFocus ( CONICSECTION: S )",
    "id": 50,
    "declarations": "U: TRIANGLE; S: CONICSECTION",
    "facts": "Circumcenter(U) = UpperFocus(S)"
},
{
    "assertion": "Projection ( POINT: H, PerpendicularBisector ( RealAxis ( ELLIPSE: l ) ) ) equals POINT: S",
    "id": 51,
    "declarations": "H: POINT; l: ELLIPSE; S: POINT",
    "facts": "Projection(H, PerpendicularBisector(RealAxis(l))) = S"
},
{
    "assertion": "Vertex ( CONICSECTION: J ) equals Incenter ( TRIANGLE: z )",
    "id": 52,
    "declarations": "J: CONICSECTION; z: TRIANGLE",
    "facts": "Vertex(J) = Incenter(z)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: M ) equals LINE: P",
    "id": 53,
    "declarations": "M: CONICSECTION; P: LINE",
    "facts": "LeftDirectrix(M) = P"
},
{
    "assertion": "RightFocus ( CONICSECTION: d ) equals LeftVertex ( CONICSECTION: n )",
    "id": 54,
    "declarations": "d: CONICSECTION; n: CONICSECTION",
    "facts": "RightFocus(d) = LeftVertex(n)"
},
{
    "assertion": "InterReciprocal ( YCoordinate ( POINT: Y ) ) equals NUMBER: -50",
    "id": 55,
    "declarations": "Y: POINT; -50: NUMBER",
    "facts": "InterReciprocal(YCoordinate(Y)) = -50"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: D, TRIANGLE: G ) equals BOOL: True",
    "id": 56,
    "declarations": "D: CIRCLE; G: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(D, G) = True"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: I ) equals LINE: b",
    "id": 57,
    "declarations": "I: LINESEGMENT; b: LINE",
    "facts": "PerpendicularBisector(I) = b"
},
{
    "assertion": "Projection ( LowerVertex ( CONICSECTION: T ), LINE: f ) equals MidPoint ( ImaginaryAxis ( ELLIPSE: U ) )",
    "id": 58,
    "declarations": "T: CONICSECTION; f: LINE; U: ELLIPSE",
    "facts": "Projection(LowerVertex(T), f) = MidPoint(ImaginaryAxis(U))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: H ) equals UpperFocus ( CONICSECTION: P )",
    "id": 59,
    "declarations": "H: LINESEGMENT; P: CONICSECTION",
    "facts": "Endpoint(H) = UpperFocus(P)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: C ) equals CIRCLE: o",
    "id": 60,
    "declarations": "C: TRIANGLE; o: CIRCLE",
    "facts": "CircumCircle(C) = o"
},
{
    "assertion": "Quadrant ( RightVertex ( CONICSECTION: h ) ) equals Distance ( POINT: A, LowerFocus ( CONICSECTION: q ) )",
    "id": 61,
    "declarations": "h: CONICSECTION; A: POINT; q: CONICSECTION",
    "facts": "Quadrant(RightVertex(h)) = Distance(A, LowerFocus(q))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: J ) equals LINE: H",
    "id": 62,
    "declarations": "J: CONICSECTION; H: LINE",
    "facts": "RightDirectrix(J) = H"
},
{
    "assertion": "RightFocus ( CONICSECTION: f ) equals MidPoint ( MinorAxis ( ELLIPSE: G ) )",
    "id": 63,
    "declarations": "f: CONICSECTION; G: ELLIPSE",
    "facts": "RightFocus(f) = MidPoint(MinorAxis(G))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: c ) equals Slope ( OverlappingLine ( ImaginaryAxis ( ELLIPSE: s ) ) )",
    "id": 64,
    "declarations": "c: CONICSECTION; s: ELLIPSE",
    "facts": "HalfFocalLength(c) = Slope(OverlappingLine(ImaginaryAxis(s)))"
},
{
    "assertion": "ApplyUnit ( Abs ( LINESEGMENT: H ), DEGREESTR: degree )",
    "id": 65,
    "declarations": "H: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(Abs(H), degree) = dummy_operator()"
},
{
    "assertion": "Circumcenter ( TRIANGLE: c ) equals UpperFocus ( CONICSECTION: X )",
    "id": 66,
    "declarations": "c: TRIANGLE; X: CONICSECTION",
    "facts": "Circumcenter(c) = UpperFocus(X)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: B ) equals MinorAxis ( ELLIPSE: H )",
    "id": 67,
    "declarations": "B: ELLIPSE; H: ELLIPSE",
    "facts": "MajorAxis(B) = MinorAxis(H)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: U ) equals LINESEGMENT: i",
    "id": 68,
    "declarations": "U: ELLIPSE; i: LINESEGMENT",
    "facts": "MajorAxis(U) = i"
},
{
    "assertion": "Distance ( Circumcenter ( TRIANGLE: X ), Center ( CONICSECTION: b ) ) equals InterReciprocal ( NUMBER: -50 )",
    "id": 69,
    "declarations": "X: TRIANGLE; b: CONICSECTION; -50: NUMBER",
    "facts": "Distance(Circumcenter(X), Center(b)) = InterReciprocal(-50)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: o ) equals POINT: a",
    "id": 70,
    "declarations": "o: CONICSECTION; a: POINT",
    "facts": "UpperFocus(o) = a"
},
{
    "assertion": "LowerFocus ( CONICSECTION: P ) equals Orthocenter ( TRIANGLE: k )",
    "id": 71,
    "declarations": "P: CONICSECTION; k: TRIANGLE",
    "facts": "LowerFocus(P) = Orthocenter(k)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: H, CIRCLE: i ) equals BOOL: True",
    "id": 72,
    "declarations": "H: CIRCLE; i: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(H, i) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: i ) equals POINT: f",
    "id": 73,
    "declarations": "i: CONICSECTION; f: POINT",
    "facts": "LeftFocus(i) = f"
},
{
    "assertion": "RightFocus ( CONICSECTION: h ) equals POINT: u",
    "id": 74,
    "declarations": "h: CONICSECTION; u: POINT",
    "facts": "RightFocus(h) = u"
},
{
    "assertion": "LineSegmentOf ( UpperFocus ( CONICSECTION: L ), POINT: f ) equals LINESEGMENT: F",
    "id": 75,
    "declarations": "L: CONICSECTION; f: POINT; F: LINESEGMENT",
    "facts": "LineSegmentOf(UpperFocus(L), f) = F"
},
{
    "assertion": "IsPerpendicular ( LINE: T, LINE: j ) equals BOOL: False",
    "id": 76,
    "declarations": "T: LINE; j: LINE; False: BOOL",
    "facts": "IsPerpendicular(T, j) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: z ) equals POINT: u",
    "id": 77,
    "declarations": "z: TRIANGLE; u: POINT",
    "facts": "Incenter(z) = u"
},
{
    "assertion": "PointOnCurve ( Center ( CONICSECTION: i ), CURVE: K ) equals BOOL: False",
    "id": 78,
    "declarations": "i: CONICSECTION; K: CURVE; False: BOOL",
    "facts": "PointOnCurve(Center(i), K) = False"
},
{
    "assertion": "Distance ( Center ( CONICSECTION: Y ), LeftFocus ( CONICSECTION: u ) ) equals lg ( YCoordinate ( RightVertex ( CONICSECTION: B ) ) )",
    "id": 79,
    "declarations": "Y: CONICSECTION; u: CONICSECTION; B: CONICSECTION",
    "facts": "Distance(Center(Y), LeftFocus(u)) = lg(YCoordinate(RightVertex(B)))"
},
{
    "assertion": "Diameter ( CIRCLE: A ) equals XCoordinate ( LowerFocus ( CONICSECTION: a ) )",
    "id": 80,
    "declarations": "A: CIRCLE; a: CONICSECTION",
    "facts": "Diameter(A) = XCoordinate(LowerFocus(a))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: m ) equals NUMBER: -94",
    "id": 81,
    "declarations": "m: CONICSECTION; -94: NUMBER",
    "facts": "Eccentricity(m) = -94"
},
{
    "assertion": "Abs ( LINESEGMENT: x ) equals Quadrant ( POINT: Y )",
    "id": 82,
    "declarations": "x: LINESEGMENT; Y: POINT",
    "facts": "Abs(x) = Quadrant(Y)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: Z ) equals MidPoint ( LINESEGMENT: t )",
    "id": 83,
    "declarations": "Z: CONICSECTION; t: LINESEGMENT",
    "facts": "UpperFocus(Z) = MidPoint(t)"
},
{
    "assertion": "Distance ( LowerVertex ( CONICSECTION: y ), LeftVertex ( CONICSECTION: D ) ) equals Radius ( CIRCLE: C )",
    "id": 84,
    "declarations": "y: CONICSECTION; D: CONICSECTION; C: CIRCLE",
    "facts": "Distance(LowerVertex(y), LeftVertex(D)) = Radius(C)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: G ) equals RightDirectrix ( CONICSECTION: a )",
    "id": 85,
    "declarations": "G: HYPERBOLA; a: CONICSECTION",
    "facts": "Asymptote(G) = RightDirectrix(a)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: H ) equals AXIS: yAxis",
    "id": 86,
    "declarations": "H: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(H) = yAxis"
},
{
    "assertion": "XCoordinate ( Projection ( UpperVertex ( CONICSECTION: Q ), LINE: x ) ) equals InterReciprocal ( InterReciprocal ( lg ( NUMBER: -20 ) ) )",
    "id": 87,
    "declarations": "Q: CONICSECTION; x: LINE; -20: NUMBER",
    "facts": "XCoordinate(Projection(UpperVertex(Q), x)) = InterReciprocal(InterReciprocal(lg(-20)))"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: w, CONICSECTION: q ) equals BOOL: False",
    "id": 88,
    "declarations": "w: LINESEGMENT; q: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(w, q) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: o ) equals MajorAxis ( ELLIPSE: S )",
    "id": 89,
    "declarations": "o: ELLIPSE; S: ELLIPSE",
    "facts": "MinorAxis(o) = MajorAxis(S)"
},
{
    "assertion": "Vertex ( CONICSECTION: g ) equals FootPoint ( TangentOfPoint ( POINT: Q, CURVE: M ), LINE: l )",
    "id": 90,
    "declarations": "g: CONICSECTION; Q: POINT; M: CURVE; l: LINE",
    "facts": "Vertex(g) = FootPoint(TangentOfPoint(Q, M), l)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: A ) equals Distance ( RightVertex ( CONICSECTION: x ), Projection ( POINT: X, LINE: r ) )",
    "id": 91,
    "declarations": "A: CONICSECTION; x: CONICSECTION; X: POINT; r: LINE",
    "facts": "Eccentricity(A) = Distance(RightVertex(x), Projection(X, r))"
},
{
    "assertion": "RightPart ( HYPERBOLA: T ) equals CURVE: f",
    "id": 92,
    "declarations": "T: HYPERBOLA; f: CURVE",
    "facts": "RightPart(T) = f"
},
{
    "assertion": "Radius ( CIRCLE: j ) equals Quadrant ( FootPoint ( LINE: e, LINE: e ) )",
    "id": 93,
    "declarations": "j: CIRCLE; e: LINE; e: LINE",
    "facts": "Radius(j) = Quadrant(FootPoint(e, e))"
},
{
    "assertion": "Quadrant ( Circumcenter ( TriangleOf ( RightVertex ( CONICSECTION: Q ), POINT: R, POINT: a ) ) ) equals XCoordinate ( POINT: B )",
    "id": 94,
    "declarations": "Q: CONICSECTION; R: POINT; a: POINT; B: POINT",
    "facts": "Quadrant(Circumcenter(TriangleOf(RightVertex(Q), R, a))) = XCoordinate(B)"
},
{
    "assertion": "Intercept ( LINE: H, AXIS: xAxis ) equals NumIntersection ( CURVE: o, CURVE: F )",
    "id": 95,
    "declarations": "H: LINE; xAxis: AXIS; o: CURVE; F: CURVE",
    "facts": "Intercept(H, xAxis) = NumIntersection(o, F)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: D ) equals Circumcenter ( TRIANGLE: C )",
    "id": 96,
    "declarations": "D: TRIANGLE; C: TRIANGLE",
    "facts": "Orthocenter(D) = Circumcenter(C)"
},
{
    "assertion": "And ( Min ( InterReciprocal ( NUMBER: -8 ) ) equals Eccentricity ( CONICSECTION: K ), ImaginaryAxis ( ELLIPSE: m ) equals LINESEGMENT: M ) equals BOOL: False",
    "id": 97,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Between ( POINT: P, Incenter ( TRIANGLE: S ), LowerVertex ( CONICSECTION: R ) ) equals BOOL: True",
    "id": 98,
    "declarations": "P: POINT; S: TRIANGLE; R: CONICSECTION; True: BOOL",
    "facts": "Between(P, Incenter(S), LowerVertex(R)) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: A ) equals LINE: i",
    "id": 99,
    "declarations": "A: CONICSECTION; i: LINE",
    "facts": "RightDirectrix(A) = i"
},
{
    "assertion": "RightPart ( HYPERBOLA: T ) equals CURVE: m",
    "id": 100,
    "declarations": "T: HYPERBOLA; m: CURVE",
    "facts": "RightPart(T) = m"
},
{
    "assertion": "LowerVertex ( CONICSECTION: i ) equals Orthocenter ( TRIANGLE: A )",
    "id": 101,
    "declarations": "i: CONICSECTION; A: TRIANGLE",
    "facts": "LowerVertex(i) = Orthocenter(A)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: A ) equals LINE: F",
    "id": 102,
    "declarations": "A: LINESEGMENT; F: LINE",
    "facts": "PerpendicularBisector(A) = F"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: o ) equals LINE: F",
    "id": 103,
    "declarations": "o: CONICSECTION; F: LINE",
    "facts": "RightDirectrix(o) = F"
},
{
    "assertion": "TriangleOf ( POINT: K, LeftVertex ( CONICSECTION: J ), RightVertex ( CONICSECTION: j ) ) equals TRIANGLE: w",
    "id": 104,
    "declarations": "K: POINT; J: CONICSECTION; j: CONICSECTION; w: TRIANGLE",
    "facts": "TriangleOf(K, LeftVertex(J), RightVertex(j)) = w"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: i ) equals LINE: Y",
    "id": 105,
    "declarations": "i: CONICSECTION; Y: LINE",
    "facts": "RightDirectrix(i) = Y"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: v ) ) equals NUMBER: -6",
    "id": 106,
    "declarations": "v: ELLIPSE; -6: NUMBER",
    "facts": "Abs(MinorAxis(v)) = -6"
},
{
    "assertion": "IsTangent ( OverlappingLine ( LINESEGMENT: P ), CONICSECTION: g ) equals BOOL: False",
    "id": 107,
    "declarations": "P: LINESEGMENT; g: CONICSECTION; False: BOOL",
    "facts": "IsTangent(OverlappingLine(P), g) = False"
},
{
    "assertion": "Intercept ( LINE: x, AXIS: yAxis ) equals HalfFocalLength ( CONICSECTION: l )",
    "id": 108,
    "declarations": "x: LINE; yAxis: AXIS; l: CONICSECTION",
    "facts": "Intercept(x, yAxis) = HalfFocalLength(l)"
},
{
    "assertion": "IsTangent ( LINE: d, CONICSECTION: p ) equals BOOL: True",
    "id": 109,
    "declarations": "d: LINE; p: CONICSECTION; True: BOOL",
    "facts": "IsTangent(d, p) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: r ) equals POINT: l",
    "id": 110,
    "declarations": "r: TRIANGLE; l: POINT",
    "facts": "Orthocenter(r) = l"
},
{
    "assertion": "Radius ( CIRCLE: Y ) equals NumIntersection ( LeftPart ( HYPERBOLA: j ), CURVE: E )",
    "id": 111,
    "declarations": "Y: CIRCLE; j: HYPERBOLA; E: CURVE",
    "facts": "Radius(Y) = NumIntersection(LeftPart(j), E)"
},
{
    "assertion": "NumIntersection ( CURVE: d, CURVE: B ) equals Perimeter ( CONICSECTION: V )",
    "id": 112,
    "declarations": "d: CURVE; B: CURVE; V: CONICSECTION",
    "facts": "NumIntersection(d, B) = Perimeter(V)"
},
{
    "assertion": "Negation ( Locus ( Projection ( POINT: y, LINE: g ) ) equals CURVE: T ) equals BOOL: True",
    "id": 113,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "YCoordinate ( POINT: U ) equals NUMBER: -8",
    "id": 114,
    "declarations": "U: POINT; -8: NUMBER",
    "facts": "YCoordinate(U) = -8"
},
{
    "assertion": "MidPoint ( LINESEGMENT: c ) equals LowerFocus ( CONICSECTION: e )",
    "id": 115,
    "declarations": "c: LINESEGMENT; e: CONICSECTION",
    "facts": "MidPoint(c) = LowerFocus(e)"
},
{
    "assertion": "ApplyUnit ( Length ( LINESEGMENT: Z ), DEGREESTR: degree )",
    "id": 116,
    "declarations": "Z: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(Length(Z), degree) = dummy_operator()"
},
{
    "assertion": "UpperFocus ( CONICSECTION: A ) equals LowerFocus ( CONICSECTION: D )",
    "id": 117,
    "declarations": "A: CONICSECTION; D: CONICSECTION",
    "facts": "UpperFocus(A) = LowerFocus(D)"
},
{
    "assertion": "InterReciprocal ( InterReciprocal ( NUMBER: -84 ) ) equals NUMBER: -78",
    "id": 118,
    "declarations": "-84: NUMBER; -78: NUMBER",
    "facts": "InterReciprocal(InterReciprocal(-84)) = -78"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: r ) equals AXIS: xAxis",
    "id": 119,
    "declarations": "r: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(r) = xAxis"
},
{
    "assertion": "Area ( CONICSECTION: u ) equals XCoordinate ( POINT: D )",
    "id": 120,
    "declarations": "u: CONICSECTION; D: POINT",
    "facts": "Area(u) = XCoordinate(D)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -7, DEGREESTR: degree )",
    "id": 121,
    "declarations": "-7: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-7, degree) = dummy_operator()"
},
{
    "assertion": "FootPoint ( LINE: O, LINE: N ) equals Center ( CONICSECTION: g )",
    "id": 122,
    "declarations": "O: LINE; N: LINE; g: CONICSECTION",
    "facts": "FootPoint(O, N) = Center(g)"
},
{
    "assertion": "Min ( FocalLength ( CONICSECTION: F ) ) equals NUMBER: -49",
    "id": 123,
    "declarations": "F: CONICSECTION; -49: NUMBER",
    "facts": "Min(FocalLength(F)) = -49"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: k ) equals LINE: O",
    "id": 124,
    "declarations": "k: LINESEGMENT; O: LINE",
    "facts": "PerpendicularBisector(k) = O"
},
{
    "assertion": "Perimeter ( CONICSECTION: B ) equals NUMBER: -25",
    "id": 125,
    "declarations": "B: CONICSECTION; -25: NUMBER",
    "facts": "Perimeter(B) = -25"
},
{
    "assertion": "LocusEquation ( UpperVertex ( CONICSECTION: r ) ) equals EXPRESSION: y*space=*spacex^2*space-*space4*x*space+*space4",
    "id": 126,
    "declarations": "r: CONICSECTION; y*space=*spacex^2*space-*space4*x*space+*space4: EXPRESSION",
    "facts": "LocusEquation(UpperVertex(r)) = y*space=*spacex^2*space-*space4*x*space+*space4"
},
{
    "assertion": "Vertex ( CONICSECTION: K ) equals LeftVertex ( CONICSECTION: c )",
    "id": 127,
    "declarations": "K: CONICSECTION; c: CONICSECTION",
    "facts": "Vertex(K) = LeftVertex(c)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: b ) equals LeftFocus ( CONICSECTION: G )",
    "id": 128,
    "declarations": "b: CONICSECTION; G: CONICSECTION",
    "facts": "UpperFocus(b) = LeftFocus(G)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: b ) equals Orthocenter ( TRIANGLE: G )",
    "id": 129,
    "declarations": "b: CONICSECTION; G: TRIANGLE",
    "facts": "LowerVertex(b) = Orthocenter(G)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: k ) equals LowerVertex ( CONICSECTION: B )",
    "id": 130,
    "declarations": "k: CONICSECTION; B: CONICSECTION",
    "facts": "UpperFocus(k) = LowerVertex(B)"
},
{
    "assertion": "LineOf ( LowerFocus ( CONICSECTION: K ), LowerFocus ( CONICSECTION: z ) ) equals LINE: S",
    "id": 131,
    "declarations": "K: CONICSECTION; z: CONICSECTION; S: LINE",
    "facts": "LineOf(LowerFocus(K), LowerFocus(z)) = S"
},
{
    "assertion": "Diameter ( CIRCLE: y ) equals Abs ( LINESEGMENT: F )",
    "id": 132,
    "declarations": "y: CIRCLE; F: LINESEGMENT",
    "facts": "Diameter(y) = Abs(F)"
},
{
    "assertion": "RightFocus ( CONICSECTION: w ) equals Orthocenter ( TRIANGLE: l )",
    "id": 133,
    "declarations": "w: CONICSECTION; l: TRIANGLE",
    "facts": "RightFocus(w) = Orthocenter(l)"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: K ) ) equals POINT: G",
    "id": 134,
    "declarations": "K: ELLIPSE; G: POINT",
    "facts": "MidPoint(MajorAxis(K)) = G"
},
{
    "assertion": "Projection ( LowerVertex ( CONICSECTION: n ), TangentOnPoint ( POINT: L, CURVE: B ) ) equals Incenter ( TRIANGLE: W )",
    "id": 135,
    "declarations": "n: CONICSECTION; L: POINT; B: CURVE; W: TRIANGLE",
    "facts": "Projection(LowerVertex(n), TangentOnPoint(L, B)) = Incenter(W)"
},
{
    "assertion": "IsInTangent ( CIRCLE: A, CIRCLE: A ) equals BOOL: False",
    "id": 137,
    "declarations": "A: CIRCLE; A: CIRCLE; False: BOOL",
    "facts": "IsInTangent(A, A) = False"
},
{
    "assertion": "IsPerpendicular ( OverlappingLine ( LINESEGMENT: X ), LINE: z ) equals BOOL: True",
    "id": 138,
    "declarations": "X: LINESEGMENT; z: LINE; True: BOOL",
    "facts": "IsPerpendicular(OverlappingLine(X), z) = True"
},
{
    "assertion": "Quadrant ( LowerFocus ( CONICSECTION: c ) ) equals Diameter ( CIRCLE: N )",
    "id": 139,
    "declarations": "c: CONICSECTION; N: CIRCLE",
    "facts": "Quadrant(LowerFocus(c)) = Diameter(N)"
},
{
    "assertion": "TangentOfPoint ( LowerVertex ( CONICSECTION: V ), CURVE: S ) equals TangentOnPoint ( UpperVertex ( CONICSECTION: c ), Locus ( LowerFocus ( CONICSECTION: I ) ) )",
    "id": 140,
    "declarations": "V: CONICSECTION; S: CURVE; c: CONICSECTION; I: CONICSECTION",
    "facts": "TangentOfPoint(LowerVertex(V), S) = TangentOnPoint(UpperVertex(c), Locus(LowerFocus(I)))"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: Z ) equals LINESEGMENT: g",
    "id": 141,
    "declarations": "Z: ELLIPSE; g: LINESEGMENT",
    "facts": "ImaginaryAxis(Z) = g"
},
{
    "assertion": "Distance ( RightFocus ( CONICSECTION: o ), POINT: P ) equals Inclination ( LINE: Q )",
    "id": 142,
    "declarations": "o: CONICSECTION; P: POINT; Q: LINE",
    "facts": "Distance(RightFocus(o), P) = Inclination(Q)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: G ) equals POINT: h",
    "id": 143,
    "declarations": "G: CONICSECTION; h: POINT",
    "facts": "LeftFocus(G) = h"
},
{
    "assertion": "ApplyUnit ( Min ( Area ( CONICSECTION: H ) ), DEGREESTR: degree )",
    "id": 144,
    "declarations": "H: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Min(Area(H)), degree) = dummy_operator()"
},
{
    "assertion": "Center ( CONICSECTION: O ) equals MidPoint ( MinorAxis ( ELLIPSE: p ) )",
    "id": 145,
    "declarations": "O: CONICSECTION; p: ELLIPSE",
    "facts": "Center(O) = MidPoint(MinorAxis(p))"
},
{
    "assertion": "LineSegmentOf ( POINT: M, POINT: R ) equals LINESEGMENT: I",
    "id": 146,
    "declarations": "M: POINT; R: POINT; I: LINESEGMENT",
    "facts": "LineSegmentOf(M, R) = I"
},
{
    "assertion": "Max ( Diameter ( CIRCLE: K ) ) equals NUMBER: 38",
    "id": 147,
    "declarations": "K: CIRCLE; 38: NUMBER",
    "facts": "Max(Diameter(K)) = 38"
},
{
    "assertion": "Expression ( CURVE: p ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 148,
    "declarations": "p: CURVE; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "Expression(p) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "RealAxis ( ELLIPSE: Z ) equals LINESEGMENT: W",
    "id": 149,
    "declarations": "Z: ELLIPSE; W: LINESEGMENT",
    "facts": "RealAxis(Z) = W"
},
{
    "assertion": "VectorOf ( POINT: L, POINT: Z ) equals VECTOR: c",
    "id": 150,
    "declarations": "L: POINT; Z: POINT; c: VECTOR",
    "facts": "VectorOf(L, Z) = c"
},
{
    "assertion": "Incenter ( TRIANGLE: z ) equals RightFocus ( CONICSECTION: f )",
    "id": 151,
    "declarations": "z: TRIANGLE; f: CONICSECTION",
    "facts": "Incenter(z) = RightFocus(f)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: e ) equals CURVE: u",
    "id": 152,
    "declarations": "e: HYPERBOLA; u: CURVE",
    "facts": "LeftPart(e) = u"
},
{
    "assertion": "UpperVertex ( CONICSECTION: z ) equals Circumcenter ( TriangleOf ( POINT: A, POINT: X, POINT: Y ) )",
    "id": 153,
    "declarations": "z: CONICSECTION; A: POINT; X: POINT; Y: POINT",
    "facts": "UpperVertex(z) = Circumcenter(TriangleOf(A, X, Y))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: U ) equals POINT: C",
    "id": 154,
    "declarations": "U: CONICSECTION; C: POINT",
    "facts": "LeftFocus(U) = C"
},
{
    "assertion": "sqrt ( Diameter ( CIRCLE: J ) ) equals NUMBER: -34",
    "id": 155,
    "declarations": "J: CIRCLE; -34: NUMBER",
    "facts": "sqrt(Diameter(J)) = -34"
},
{
    "assertion": "And ( Center ( CONICSECTION: E ) equals UpperVertex ( CONICSECTION: T ), IsPerpendicular ( OverlappingLine ( LINESEGMENT: F ), LeftDirectrix ( CONICSECTION: A ) ) equals BOOL: False ) equals BOOL: False",
    "id": 156,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MinorAxis ( ELLIPSE: B ) equals RealAxis ( ELLIPSE: E )",
    "id": 157,
    "declarations": "B: ELLIPSE; E: ELLIPSE",
    "facts": "MinorAxis(B) = RealAxis(E)"
},
{
    "assertion": "Diameter ( CIRCLE: O ) equals Area ( CONICSECTION: Q )",
    "id": 158,
    "declarations": "O: CIRCLE; Q: CONICSECTION",
    "facts": "Diameter(O) = Area(Q)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: K ) equals Projection ( POINT: D, LINE: K )",
    "id": 159,
    "declarations": "K: CONICSECTION; D: POINT; K: LINE",
    "facts": "LeftFocus(K) = Projection(D, K)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: e ) equals LeftDirectrix ( CONICSECTION: c )",
    "id": 160,
    "declarations": "e: LINESEGMENT; c: CONICSECTION",
    "facts": "OverlappingLine(e) = LeftDirectrix(c)"
},
{
    "assertion": "Slope ( LINE: I ) equals InterReciprocal ( NumIntersection ( CURVE: V, CURVE: C ) )",
    "id": 161,
    "declarations": "I: LINE; V: CURVE; C: CURVE",
    "facts": "Slope(I) = InterReciprocal(NumIntersection(V, C))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: S ) equals MidPoint ( LineSegmentOf ( Incenter ( TRIANGLE: A ), POINT: k ) )",
    "id": 162,
    "declarations": "S: TRIANGLE; A: TRIANGLE; k: POINT",
    "facts": "Orthocenter(S) = MidPoint(LineSegmentOf(Incenter(A), k))"
},
{
    "assertion": "Radius ( CIRCLE: W ) equals Eccentricity ( CONICSECTION: Z )",
    "id": 163,
    "declarations": "W: CIRCLE; Z: CONICSECTION",
    "facts": "Radius(W) = Eccentricity(Z)"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: K ) ) equals NUMBER: 68",
    "id": 164,
    "declarations": "K: ELLIPSE; 68: NUMBER",
    "facts": "Abs(MinorAxis(K)) = 68"
},
{
    "assertion": "Intercept ( LINE: p, AXIS: xAxis ) equals NUMBER: -56",
    "id": 165,
    "declarations": "p: LINE; xAxis: AXIS; -56: NUMBER",
    "facts": "Intercept(p, xAxis) = -56"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: B, CIRCLE: x ) equals BOOL: False",
    "id": 166,
    "declarations": "B: LINESEGMENT; x: CIRCLE; False: BOOL",
    "facts": "IsDiameter(B, x) = False"
},
{
    "assertion": "LeftPart ( HYPERBOLA: q ) equals CURVE: m",
    "id": 167,
    "declarations": "q: HYPERBOLA; m: CURVE",
    "facts": "LeftPart(q) = m"
},
{
    "assertion": "Max ( Min ( Quadrant ( LowerVertex ( CONICSECTION: i ) ) ) ) equals Quadrant ( POINT: K )",
    "id": 168,
    "declarations": "i: CONICSECTION; K: POINT",
    "facts": "Max(Min(Quadrant(LowerVertex(i)))) = Quadrant(K)"
},
{
    "assertion": "Length ( LINESEGMENT: B ) equals NUMBER: 66",
    "id": 169,
    "declarations": "B: LINESEGMENT; 66: NUMBER",
    "facts": "Length(B) = 66"
},
{
    "assertion": "Eccentricity ( CONICSECTION: H ) equals Inclination ( LINE: x )",
    "id": 170,
    "declarations": "H: CONICSECTION; x: LINE",
    "facts": "Eccentricity(H) = Inclination(x)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: w ) equals Projection ( UpperVertex ( CONICSECTION: a ), RightDirectrix ( CONICSECTION: a ) )",
    "id": 171,
    "declarations": "w: LINESEGMENT; a: CONICSECTION; a: CONICSECTION",
    "facts": "MidPoint(w) = Projection(UpperVertex(a), RightDirectrix(a))"
},
{
    "assertion": "sqrt ( NumIntersection ( CURVE: A, CURVE: R ) ) equals Abs ( MajorAxis ( ELLIPSE: c ) )",
    "id": 172,
    "declarations": "A: CURVE; R: CURVE; c: ELLIPSE",
    "facts": "sqrt(NumIntersection(A, R)) = Abs(MajorAxis(c))"
},
{
    "assertion": "sqrt ( sqrt ( NUMBER: -49 ) ) equals XCoordinate ( UpperVertex ( CONICSECTION: p ) )",
    "id": 173,
    "declarations": "-49: NUMBER; p: CONICSECTION",
    "facts": "sqrt(sqrt(-49)) = XCoordinate(UpperVertex(p))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: J ) equals RealAxis ( ELLIPSE: n )",
    "id": 174,
    "declarations": "J: ELLIPSE; n: ELLIPSE",
    "facts": "MinorAxis(J) = RealAxis(n)"
},
{
    "assertion": "TangentOnPoint ( LeftFocus ( CONICSECTION: J ), CURVE: A ) equals LINE: c",
    "id": 175,
    "declarations": "J: CONICSECTION; A: CURVE; c: LINE",
    "facts": "TangentOnPoint(LeftFocus(J), A) = c"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: G ) equals TangentOnPoint ( Orthocenter ( TRIANGLE: z ), CURVE: I )",
    "id": 176,
    "declarations": "G: LINESEGMENT; z: TRIANGLE; I: CURVE",
    "facts": "OverlappingLine(G) = TangentOnPoint(Orthocenter(z), I)"
},
{
    "assertion": "Locus ( POINT: h ) equals CURVE: P",
    "id": 177,
    "declarations": "h: POINT; P: CURVE",
    "facts": "Locus(h) = P"
},
{
    "assertion": "IsPerpendicular ( RightDirectrix ( CONICSECTION: E ), LINE: x ) equals BOOL: True",
    "id": 178,
    "declarations": "E: CONICSECTION; x: LINE; True: BOOL",
    "facts": "IsPerpendicular(RightDirectrix(E), x) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: F ) equals LINE: D",
    "id": 179,
    "declarations": "F: CONICSECTION; D: LINE",
    "facts": "Directrix(F) = D"
},
{
    "assertion": "LeftFocus ( CONICSECTION: X ) equals UpperVertex ( CONICSECTION: v )",
    "id": 180,
    "declarations": "X: CONICSECTION; v: CONICSECTION",
    "facts": "LeftFocus(X) = UpperVertex(v)"
},
{
    "assertion": "Locus ( LeftVertex ( CONICSECTION: t ) ) equals CURVE: d",
    "id": 181,
    "declarations": "t: CONICSECTION; d: CURVE",
    "facts": "Locus(LeftVertex(t)) = d"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: q ) equals LINESEGMENT: T",
    "id": 182,
    "declarations": "q: ELLIPSE; T: LINESEGMENT",
    "facts": "ImaginaryAxis(q) = T"
},
{
    "assertion": "Min ( NUMBER: 20 ) equals Length ( LINESEGMENT: G )",
    "id": 183,
    "declarations": "20: NUMBER; G: LINESEGMENT",
    "facts": "Min(20) = Length(G)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: t ) equals POINT: D",
    "id": 184,
    "declarations": "t: LINESEGMENT; D: POINT",
    "facts": "Endpoint(t) = D"
},
{
    "assertion": "LeftPart ( HYPERBOLA: B ) equals CURVE: N",
    "id": 185,
    "declarations": "B: HYPERBOLA; N: CURVE",
    "facts": "LeftPart(B) = N"
},
{
    "assertion": "Directrix ( CONICSECTION: z ) equals LINE: f",
    "id": 186,
    "declarations": "z: CONICSECTION; f: LINE",
    "facts": "Directrix(z) = f"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: m ) equals Distance ( POINT: N, Orthocenter ( TRIANGLE: W ) )",
    "id": 187,
    "declarations": "m: CONICSECTION; N: POINT; W: TRIANGLE",
    "facts": "HalfFocalLength(m) = Distance(N, Orthocenter(W))"
},
{
    "assertion": "Slope ( PerpendicularBisector ( LINESEGMENT: f ) ) equals Abs ( LINESEGMENT: A )",
    "id": 188,
    "declarations": "f: LINESEGMENT; A: LINESEGMENT",
    "facts": "Slope(PerpendicularBisector(f)) = Abs(A)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: o ) equals LINESEGMENT: P",
    "id": 189,
    "declarations": "o: ELLIPSE; P: LINESEGMENT",
    "facts": "MinorAxis(o) = P"
},
{
    "assertion": "IsTangent ( PerpendicularBisector ( LINESEGMENT: l ), CONICSECTION: n ) equals BOOL: True",
    "id": 190,
    "declarations": "l: LINESEGMENT; n: CONICSECTION; True: BOOL",
    "facts": "IsTangent(PerpendicularBisector(l), n) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: Q ) equals InterceptChord ( LINE: D, CONICSECTION: n )",
    "id": 191,
    "declarations": "Q: ELLIPSE; D: LINE; n: CONICSECTION",
    "facts": "MajorAxis(Q) = InterceptChord(D, n)"
},
{
    "assertion": "FootPoint ( TangentOfPoint ( RightFocus ( CONICSECTION: X ), CURVE: T ), LINE: I ) equals POINT: e",
    "id": 192,
    "declarations": "X: CONICSECTION; T: CURVE; I: LINE; e: POINT",
    "facts": "FootPoint(TangentOfPoint(RightFocus(X), T), I) = e"
},
{
    "assertion": "IsTangent ( PerpendicularBisector ( LINESEGMENT: W ), CONICSECTION: C ) equals BOOL: True",
    "id": 193,
    "declarations": "W: LINESEGMENT; C: CONICSECTION; True: BOOL",
    "facts": "IsTangent(PerpendicularBisector(W), C) = True"
},
{
    "assertion": "InterceptChord ( LineOf ( FootPoint ( LeftDirectrix ( CONICSECTION: W ), LINE: Y ), Circumcenter ( TRIANGLE: D ) ), CONICSECTION: V ) equals LINESEGMENT: K",
    "id": 194,
    "declarations": "W: CONICSECTION; Y: LINE; D: TRIANGLE; V: CONICSECTION; K: LINESEGMENT",
    "facts": "InterceptChord(LineOf(FootPoint(LeftDirectrix(W), Y), Circumcenter(D)), V) = K"
},
{
    "assertion": "Slope ( LINE: O ) equals YCoordinate ( Orthocenter ( TRIANGLE: V ) )",
    "id": 195,
    "declarations": "O: LINE; V: TRIANGLE",
    "facts": "Slope(O) = YCoordinate(Orthocenter(V))"
},
{
    "assertion": "Diameter ( CIRCLE: E ) equals YCoordinate ( Circumcenter ( TRIANGLE: E ) )",
    "id": 196,
    "declarations": "E: CIRCLE; E: TRIANGLE",
    "facts": "Diameter(E) = YCoordinate(Circumcenter(E))"
},
{
    "assertion": "XCoordinate ( UpperFocus ( CONICSECTION: P ) ) equals HalfFocalLength ( CONICSECTION: S )",
    "id": 197,
    "declarations": "P: CONICSECTION; S: CONICSECTION",
    "facts": "XCoordinate(UpperFocus(P)) = HalfFocalLength(S)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: p ) equals LINE: Z",
    "id": 198,
    "declarations": "p: CONICSECTION; Z: LINE",
    "facts": "LeftDirectrix(p) = Z"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: x ) equals LINESEGMENT: O",
    "id": 199,
    "declarations": "x: ELLIPSE; O: LINESEGMENT",
    "facts": "ImaginaryAxis(x) = O"
},
{
    "assertion": "Asymptote ( HYPERBOLA: p ) equals RightDirectrix ( CONICSECTION: z )",
    "id": 200,
    "declarations": "p: HYPERBOLA; z: CONICSECTION",
    "facts": "Asymptote(p) = RightDirectrix(z)"
},
{
    "assertion": "LocusEquation ( Center ( CONICSECTION: m ) ) equals EXPRESSION: x^2*space+*space2y^2*space=*space8",
    "id": 201,
    "declarations": "m: CONICSECTION; x^2*space+*space2y^2*space=*space8: EXPRESSION",
    "facts": "LocusEquation(Center(m)) = x^2*space+*space2y^2*space=*space8"
},
{
    "assertion": "MajorAxis ( ELLIPSE: t ) equals LINESEGMENT: q",
    "id": 202,
    "declarations": "t: ELLIPSE; q: LINESEGMENT",
    "facts": "MajorAxis(t) = q"
},
{
    "assertion": "PointOnCurve ( UpperVertex ( CONICSECTION: h ), CURVE: v ) equals BOOL: True",
    "id": 203,
    "declarations": "h: CONICSECTION; v: CURVE; True: BOOL",
    "facts": "PointOnCurve(UpperVertex(h), v) = True"
},
{
    "assertion": "And ( Length ( MinorAxis ( ELLIPSE: A ) ) equals Min ( NUMBER: -95 ), IsPerpendicular ( LineOf ( POINT: K, UpperVertex ( CONICSECTION: b ) ), LINE: z ) equals BOOL: False ) equals BOOL: True",
    "id": 204,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MidPoint ( LINESEGMENT: s ) equals POINT: p",
    "id": 205,
    "declarations": "s: LINESEGMENT; p: POINT",
    "facts": "MidPoint(s) = p"
},
{
    "assertion": "InterReciprocal ( HalfFocalLength ( CONICSECTION: k ) ) equals Abs ( MajorAxis ( ELLIPSE: j ) )",
    "id": 206,
    "declarations": "k: CONICSECTION; j: ELLIPSE",
    "facts": "InterReciprocal(HalfFocalLength(k)) = Abs(MajorAxis(j))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: q ) equals NUMBER: -56",
    "id": 207,
    "declarations": "q: CONICSECTION; -56: NUMBER",
    "facts": "HalfFocalLength(q) = -56"
},
{
    "assertion": "Min ( XCoordinate ( POINT: k ) ) equals NUMBER: 51",
    "id": 208,
    "declarations": "k: POINT; 51: NUMBER",
    "facts": "Min(XCoordinate(k)) = 51"
},
{
    "assertion": "Area ( CONICSECTION: S ) equals Perimeter ( CONICSECTION: d )",
    "id": 209,
    "declarations": "S: CONICSECTION; d: CONICSECTION",
    "facts": "Area(S) = Perimeter(d)"
},
{
    "assertion": "RealAxis ( ELLIPSE: r ) equals ImaginaryAxis ( ELLIPSE: k )",
    "id": 210,
    "declarations": "r: ELLIPSE; k: ELLIPSE",
    "facts": "RealAxis(r) = ImaginaryAxis(k)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Z ) equals LineOf ( POINT: f, LowerFocus ( CONICSECTION: k ) )",
    "id": 211,
    "declarations": "Z: CONICSECTION; f: POINT; k: CONICSECTION",
    "facts": "LeftDirectrix(Z) = LineOf(f, LowerFocus(k))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: m ) equals CURVE: F",
    "id": 212,
    "declarations": "m: HYPERBOLA; F: CURVE",
    "facts": "LeftPart(m) = F"
},
{
    "assertion": "IsIntersect ( RightPart ( HYPERBOLA: A ), CURVE: Y ) equals BOOL: False",
    "id": 213,
    "declarations": "A: HYPERBOLA; Y: CURVE; False: BOOL",
    "facts": "IsIntersect(RightPart(A), Y) = False"
},
{
    "assertion": "IsOutTangent ( CIRCLE: G, CIRCLE: I ) equals BOOL: True",
    "id": 214,
    "declarations": "G: CIRCLE; I: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(G, I) = True"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: k, TRIANGLE: g ) equals BOOL: False",
    "id": 215,
    "declarations": "k: CIRCLE; g: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(k, g) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: D ) equals LowerFocus ( CONICSECTION: q )",
    "id": 216,
    "declarations": "D: CONICSECTION; q: CONICSECTION",
    "facts": "LowerFocus(D) = LowerFocus(q)"
},
{
    "assertion": "Radius ( CIRCLE: Q ) equals sqrt ( Distance ( Incenter ( TRIANGLE: n ), POINT: T ) )",
    "id": 217,
    "declarations": "Q: CIRCLE; n: TRIANGLE; T: POINT",
    "facts": "Radius(Q) = sqrt(Distance(Incenter(n), T))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: B ) equals POINT: r",
    "id": 218,
    "declarations": "B: CONICSECTION; r: POINT",
    "facts": "UpperVertex(B) = r"
},
{
    "assertion": "XCoordinate ( Orthocenter ( TriangleOf ( Circumcenter ( TRIANGLE: z ), RightFocus ( CONICSECTION: A ), Center ( CONICSECTION: t ) ) ) ) equals sqrt ( NUMBER: -5 )",
    "id": 219,
    "declarations": "z: TRIANGLE; A: CONICSECTION; t: CONICSECTION; -5: NUMBER",
    "facts": "XCoordinate(Orthocenter(TriangleOf(Circumcenter(z), RightFocus(A), Center(t)))) = sqrt(-5)"
},
{
    "assertion": "TriangleOf ( LowerVertex ( CONICSECTION: o ), POINT: m, LeftVertex ( CONICSECTION: h ) ) equals TRIANGLE: k",
    "id": 220,
    "declarations": "o: CONICSECTION; m: POINT; h: CONICSECTION; k: TRIANGLE",
    "facts": "TriangleOf(LowerVertex(o), m, LeftVertex(h)) = k"
},
{
    "assertion": "Endpoint ( LineSegmentOf ( POINT: k, RightVertex ( CONICSECTION: i ) ) ) equals POINT: l",
    "id": 221,
    "declarations": "k: POINT; i: CONICSECTION; l: POINT",
    "facts": "Endpoint(LineSegmentOf(k, RightVertex(i))) = l"
},
{
    "assertion": "RightVertex ( CONICSECTION: w ) equals FootPoint ( LineOf ( POINT: Y, LeftVertex ( CONICSECTION: G ) ), TangentOnPoint ( LeftFocus ( CONICSECTION: h ), Locus ( POINT: t ) ) )",
    "id": 222,
    "declarations": "w: CONICSECTION; Y: POINT; G: CONICSECTION; h: CONICSECTION; t: POINT",
    "facts": "RightVertex(w) = FootPoint(LineOf(Y, LeftVertex(G)), TangentOnPoint(LeftFocus(h), Locus(t)))"
},
{
    "assertion": "Quadrant ( LeftFocus ( CONICSECTION: k ) ) equals NUMBER: 83",
    "id": 223,
    "declarations": "k: CONICSECTION; 83: NUMBER",
    "facts": "Quadrant(LeftFocus(k)) = 83"
},
{
    "assertion": "TangentOnPoint ( POINT: x, CURVE: z ) equals LINE: s",
    "id": 224,
    "declarations": "x: POINT; z: CURVE; s: LINE",
    "facts": "TangentOnPoint(x, z) = s"
},
{
    "assertion": "RightFocus ( CONICSECTION: C ) equals LeftFocus ( CONICSECTION: Z )",
    "id": 225,
    "declarations": "C: CONICSECTION; Z: CONICSECTION",
    "facts": "RightFocus(C) = LeftFocus(Z)"
},
{
    "assertion": "Locus ( POINT: K ) equals CURVE: E",
    "id": 226,
    "declarations": "K: POINT; E: CURVE",
    "facts": "Locus(K) = E"
},
{
    "assertion": "MajorAxis ( ELLIPSE: B ) equals LINESEGMENT: s",
    "id": 227,
    "declarations": "B: ELLIPSE; s: LINESEGMENT",
    "facts": "MajorAxis(B) = s"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: w ) equals LINESEGMENT: z",
    "id": 228,
    "declarations": "w: ELLIPSE; z: LINESEGMENT",
    "facts": "ImaginaryAxis(w) = z"
},
{
    "assertion": "Distance ( POINT: Q, POINT: w ) equals HalfFocalLength ( CONICSECTION: Y )",
    "id": 229,
    "declarations": "Q: POINT; w: POINT; Y: CONICSECTION",
    "facts": "Distance(Q, w) = HalfFocalLength(Y)"
},
{
    "assertion": "LineSegmentOf ( RightFocus ( CONICSECTION: S ), POINT: Y ) equals RealAxis ( ELLIPSE: M )",
    "id": 230,
    "declarations": "S: CONICSECTION; Y: POINT; M: ELLIPSE",
    "facts": "LineSegmentOf(RightFocus(S), Y) = RealAxis(M)"
},
{
    "assertion": "Locus ( Center ( CONICSECTION: A ) ) equals CURVE: y",
    "id": 231,
    "declarations": "A: CONICSECTION; y: CURVE",
    "facts": "Locus(Center(A)) = y"
},
{
    "assertion": "NumIntersection ( LeftPart ( HYPERBOLA: T ), CURVE: J ) equals Length ( ImaginaryAxis ( ELLIPSE: V ) )",
    "id": 232,
    "declarations": "T: HYPERBOLA; J: CURVE; V: ELLIPSE",
    "facts": "NumIntersection(LeftPart(T), J) = Length(ImaginaryAxis(V))"
},
{
    "assertion": "Focus ( CONICSECTION: M ) equals POINT: M",
    "id": 233,
    "declarations": "M: CONICSECTION; M: POINT",
    "facts": "Focus(M) = M"
},
{
    "assertion": "PointOnCurve ( POINT: A, CURVE: G ) equals BOOL: True",
    "id": 234,
    "declarations": "A: POINT; G: CURVE; True: BOOL",
    "facts": "PointOnCurve(A, G) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: M ) equals LINESEGMENT: B",
    "id": 235,
    "declarations": "M: ELLIPSE; B: LINESEGMENT",
    "facts": "MajorAxis(M) = B"
},
{
    "assertion": "YCoordinate ( POINT: J ) equals NUMBER: 0",
    "id": 236,
    "declarations": "J: POINT; 0: NUMBER",
    "facts": "YCoordinate(J) = 0"
},
{
    "assertion": "Min ( NUMBER: -68 ) equals FocalLength ( CONICSECTION: l )",
    "id": 237,
    "declarations": "-68: NUMBER; l: CONICSECTION",
    "facts": "Min(-68) = FocalLength(l)"
},
{
    "assertion": "RealAxis ( ELLIPSE: u ) equals LINESEGMENT: F",
    "id": 238,
    "declarations": "u: ELLIPSE; F: LINESEGMENT",
    "facts": "RealAxis(u) = F"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: A, TRIANGLE: o ) equals BOOL: True",
    "id": 239,
    "declarations": "A: CIRCLE; o: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(A, o) = True"
},
{
    "assertion": "TangentOnPoint ( Circumcenter ( TRIANGLE: x ), CURVE: A ) equals RightDirectrix ( CONICSECTION: h )",
    "id": 240,
    "declarations": "x: TRIANGLE; A: CURVE; h: CONICSECTION",
    "facts": "TangentOnPoint(Circumcenter(x), A) = RightDirectrix(h)"
},
{
    "assertion": "FocalLength ( CONICSECTION: d ) equals NUMBER: -90",
    "id": 241,
    "declarations": "d: CONICSECTION; -90: NUMBER",
    "facts": "FocalLength(d) = -90"
},
{
    "assertion": "Orthocenter ( TRIANGLE: z ) equals POINT: S",
    "id": 242,
    "declarations": "z: TRIANGLE; S: POINT",
    "facts": "Orthocenter(z) = S"
},
{
    "assertion": "ApplyUnit ( YCoordinate ( POINT: k ), DEGREESTR: degree )",
    "id": 243,
    "declarations": "k: POINT; degree: DEGREESTR",
    "facts": "ApplyUnit(YCoordinate(k), degree) = dummy_operator()"
},
{
    "assertion": "Circumcenter ( TRIANGLE: c ) equals POINT: e",
    "id": 244,
    "declarations": "c: TRIANGLE; e: POINT",
    "facts": "Circumcenter(c) = e"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: N ) equals Inclination ( LeftDirectrix ( CONICSECTION: Y ) )",
    "id": 245,
    "declarations": "N: CONICSECTION; Y: CONICSECTION",
    "facts": "HalfFocalLength(N) = Inclination(LeftDirectrix(Y))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: r ) equals NUMBER: -29",
    "id": 246,
    "declarations": "r: CONICSECTION; -29: NUMBER",
    "facts": "HalfFocalLength(r) = -29"
},
{
    "assertion": "LeftFocus ( CONICSECTION: F ) equals POINT: Y",
    "id": 247,
    "declarations": "F: CONICSECTION; Y: POINT",
    "facts": "LeftFocus(F) = Y"
},
{
    "assertion": "IsPerpendicular ( LINE: o, LINE: C ) equals BOOL: False",
    "id": 248,
    "declarations": "o: LINE; C: LINE; False: BOOL",
    "facts": "IsPerpendicular(o, C) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: V ) equals MinorAxis ( ELLIPSE: T )",
    "id": 249,
    "declarations": "V: ELLIPSE; T: ELLIPSE",
    "facts": "MinorAxis(V) = MinorAxis(T)"
},
{
    "assertion": "Negation ( IsOutTangent ( CIRCLE: p, CIRCLE: j ) equals BOOL: True ) equals BOOL: True",
    "id": 250,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightFocus ( CONICSECTION: y ) equals POINT: l",
    "id": 251,
    "declarations": "y: CONICSECTION; l: POINT",
    "facts": "RightFocus(y) = l"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: P ) ) equals RightDirectrix ( CONICSECTION: j )",
    "id": 252,
    "declarations": "P: ELLIPSE; j: CONICSECTION",
    "facts": "OverlappingLine(MinorAxis(P)) = RightDirectrix(j)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: z ) equals CURVE: S",
    "id": 253,
    "declarations": "z: HYPERBOLA; S: CURVE",
    "facts": "LeftPart(z) = S"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: J ) ) equals NUMBER: 13",
    "id": 254,
    "declarations": "J: CONICSECTION; 13: NUMBER",
    "facts": "Quadrant(LeftVertex(J)) = 13"
},
{
    "assertion": "FocalLength ( CONICSECTION: d ) equals NUMBER: -81",
    "id": 255,
    "declarations": "d: CONICSECTION; -81: NUMBER",
    "facts": "FocalLength(d) = -81"
},
{
    "assertion": "LocusEquation ( Incenter ( TRIANGLE: l ) ) equals EXPRESSION: x^2*space+*space(y*space-*space2)^2*space=*space4",
    "id": 256,
    "declarations": "l: TRIANGLE; x^2*space+*space(y*space-*space2)^2*space=*space4: EXPRESSION",
    "facts": "LocusEquation(Incenter(l)) = x^2*space+*space(y*space-*space2)^2*space=*space4"
},
{
    "assertion": "TangentOnPoint ( POINT: L, CURVE: r ) equals RightDirectrix ( CONICSECTION: q )",
    "id": 257,
    "declarations": "L: POINT; r: CURVE; q: CONICSECTION",
    "facts": "TangentOnPoint(L, r) = RightDirectrix(q)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: X ) equals TangentOnPoint ( UpperVertex ( CONICSECTION: W ), LeftPart ( HYPERBOLA: X ) )",
    "id": 258,
    "declarations": "X: LINESEGMENT; W: CONICSECTION; X: HYPERBOLA",
    "facts": "PerpendicularBisector(X) = TangentOnPoint(UpperVertex(W), LeftPart(X))"
},
{
    "assertion": "Length ( LINESEGMENT: p ) equals Slope ( LINE: M )",
    "id": 259,
    "declarations": "p: LINESEGMENT; M: LINE",
    "facts": "Length(p) = Slope(M)"
},
{
    "assertion": "Inclination ( LINE: t ) equals Intercept ( LINE: D, AXIS: yAxis )",
    "id": 260,
    "declarations": "t: LINE; D: LINE; yAxis: AXIS",
    "facts": "Inclination(t) = Intercept(D, yAxis)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: I ) equals LowerFocus ( CONICSECTION: u )",
    "id": 261,
    "declarations": "I: CONICSECTION; u: CONICSECTION",
    "facts": "LeftFocus(I) = LowerFocus(u)"
},
{
    "assertion": "Diameter ( CIRCLE: x ) equals NUMBER: 85",
    "id": 262,
    "declarations": "x: CIRCLE; 85: NUMBER",
    "facts": "Diameter(x) = 85"
},
{
    "assertion": "LeftVertex ( CONICSECTION: k ) equals POINT: A",
    "id": 263,
    "declarations": "k: CONICSECTION; A: POINT",
    "facts": "LeftVertex(k) = A"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: b ) equals AXIS: xAxis",
    "id": 264,
    "declarations": "b: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(b) = xAxis"
},
{
    "assertion": "Quadrant ( Incenter ( TRIANGLE: D ) ) equals Slope ( LINE: Y )",
    "id": 265,
    "declarations": "D: TRIANGLE; Y: LINE",
    "facts": "Quadrant(Incenter(D)) = Slope(Y)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: J ) equals POINT: w",
    "id": 266,
    "declarations": "J: CONICSECTION; w: POINT",
    "facts": "LeftFocus(J) = w"
},
{
    "assertion": "IsTangent ( LINE: h, CONICSECTION: u ) equals BOOL: False",
    "id": 267,
    "declarations": "h: LINE; u: CONICSECTION; False: BOOL",
    "facts": "IsTangent(h, u) = False"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: a, CONICSECTION: E ) equals BOOL: True",
    "id": 268,
    "declarations": "a: LINESEGMENT; E: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(a, E) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: Q ) equals TangentOnPoint ( RightFocus ( CONICSECTION: E ), CURVE: U )",
    "id": 269,
    "declarations": "Q: CONICSECTION; E: CONICSECTION; U: CURVE",
    "facts": "RightDirectrix(Q) = TangentOnPoint(RightFocus(E), U)"
},
{
    "assertion": "DotProduct ( VECTOR: c, VECTOR: l ) equals NumIntersection ( RightPart ( HYPERBOLA: Z ), CURVE: q )",
    "id": 270,
    "declarations": "c: VECTOR; l: VECTOR; Z: HYPERBOLA; q: CURVE",
    "facts": "DotProduct(c, l) = NumIntersection(RightPart(Z), q)"
},
{
    "assertion": "RightPart ( HYPERBOLA: t ) equals CURVE: f",
    "id": 271,
    "declarations": "t: HYPERBOLA; f: CURVE",
    "facts": "RightPart(t) = f"
},
{
    "assertion": "IsDiameter ( RealAxis ( ELLIPSE: v ), CIRCLE: R ) equals BOOL: True",
    "id": 272,
    "declarations": "v: ELLIPSE; R: CIRCLE; True: BOOL",
    "facts": "IsDiameter(RealAxis(v), R) = True"
},
{
    "assertion": "Eccentricity ( CONICSECTION: E ) equals DotProduct ( VECTOR: I, VECTOR: B )",
    "id": 273,
    "declarations": "E: CONICSECTION; I: VECTOR; B: VECTOR",
    "facts": "Eccentricity(E) = DotProduct(I, B)"
},
{
    "assertion": "Abs ( LINESEGMENT: Z ) equals Eccentricity ( CONICSECTION: q )",
    "id": 274,
    "declarations": "Z: LINESEGMENT; q: CONICSECTION",
    "facts": "Abs(Z) = Eccentricity(q)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: W ) equals LowerVertex ( CONICSECTION: W )",
    "id": 275,
    "declarations": "W: CONICSECTION; W: CONICSECTION",
    "facts": "LowerFocus(W) = LowerVertex(W)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: P ) equals CURVE: J",
    "id": 276,
    "declarations": "P: HYPERBOLA; J: CURVE",
    "facts": "LeftPart(P) = J"
},
{
    "assertion": "UpperVertex ( CONICSECTION: C ) equals POINT: m",
    "id": 277,
    "declarations": "C: CONICSECTION; m: POINT",
    "facts": "UpperVertex(C) = m"
},
{
    "assertion": "Inclination ( RightDirectrix ( CONICSECTION: j ) ) equals NUMBER: 36",
    "id": 278,
    "declarations": "j: CONICSECTION; 36: NUMBER",
    "facts": "Inclination(RightDirectrix(j)) = 36"
},
{
    "assertion": "LocusEquation ( FootPoint ( LINE: V, RightDirectrix ( CONICSECTION: q ) ) ) equals Expression ( CURVE: r )",
    "id": 279,
    "declarations": "V: LINE; q: CONICSECTION; r: CURVE",
    "facts": "LocusEquation(FootPoint(V, RightDirectrix(q))) = Expression(r)"
},
{
    "assertion": "Area ( CONICSECTION: E ) equals Length ( LineSegmentOf ( POINT: h, POINT: B ) )",
    "id": 280,
    "declarations": "E: CONICSECTION; h: POINT; B: POINT",
    "facts": "Area(E) = Length(LineSegmentOf(h, B))"
},
{
    "assertion": "InterReciprocal ( NUMBER: 44 ) equals NUMBER: 17",
    "id": 281,
    "declarations": "44: NUMBER; 17: NUMBER",
    "facts": "InterReciprocal(44) = 17"
},
{
    "assertion": "TriangleOf ( POINT: C, POINT: H, LowerFocus ( CONICSECTION: p ) ) equals TRIANGLE: h",
    "id": 282,
    "declarations": "C: POINT; H: POINT; p: CONICSECTION; h: TRIANGLE",
    "facts": "TriangleOf(C, H, LowerFocus(p)) = h"
},
{
    "assertion": "Center ( CONICSECTION: G ) equals POINT: e",
    "id": 283,
    "declarations": "G: CONICSECTION; e: POINT",
    "facts": "Center(G) = e"
},
{
    "assertion": "RightPart ( HYPERBOLA: Y ) equals CURVE: q",
    "id": 284,
    "declarations": "Y: HYPERBOLA; q: CURVE",
    "facts": "RightPart(Y) = q"
},
{
    "assertion": "lg ( Perimeter ( CONICSECTION: F ) ) equals Area ( CONICSECTION: V )",
    "id": 285,
    "declarations": "F: CONICSECTION; V: CONICSECTION",
    "facts": "lg(Perimeter(F)) = Area(V)"
},
{
    "assertion": "Incenter ( TRIANGLE: k ) equals Orthocenter ( TRIANGLE: f )",
    "id": 286,
    "declarations": "k: TRIANGLE; f: TRIANGLE",
    "facts": "Incenter(k) = Orthocenter(f)"
},
{
    "assertion": "Negation ( IsCircumCircle ( CIRCLE: O, TRIANGLE: G ) equals BOOL: True ) equals BOOL: False",
    "id": 287,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: A ) equals RightDirectrix ( CONICSECTION: y )",
    "id": 288,
    "declarations": "A: LINESEGMENT; y: CONICSECTION",
    "facts": "OverlappingLine(A) = RightDirectrix(y)"
},
{
    "assertion": "InterceptChord ( LeftDirectrix ( CONICSECTION: f ), CONICSECTION: d ) equals LINESEGMENT: j",
    "id": 289,
    "declarations": "f: CONICSECTION; d: CONICSECTION; j: LINESEGMENT",
    "facts": "InterceptChord(LeftDirectrix(f), d) = j"
},
{
    "assertion": "UpperFocus ( CONICSECTION: f ) equals Circumcenter ( TRIANGLE: w )",
    "id": 290,
    "declarations": "f: CONICSECTION; w: TRIANGLE",
    "facts": "UpperFocus(f) = Circumcenter(w)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: z ) equals LINE: t",
    "id": 291,
    "declarations": "z: CONICSECTION; t: LINE",
    "facts": "LeftDirectrix(z) = t"
},
{
    "assertion": "LeftPart ( HYPERBOLA: Z ) equals RightPart ( HYPERBOLA: Q )",
    "id": 292,
    "declarations": "Z: HYPERBOLA; Q: HYPERBOLA",
    "facts": "LeftPart(Z) = RightPart(Q)"
},
{
    "assertion": "FocalLength ( CONICSECTION: U ) equals NumIntersection ( CURVE: f, RightPart ( HYPERBOLA: q ) )",
    "id": 293,
    "declarations": "U: CONICSECTION; f: CURVE; q: HYPERBOLA",
    "facts": "FocalLength(U) = NumIntersection(f, RightPart(q))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: s, TRIANGLE: N ) equals BOOL: False",
    "id": 294,
    "declarations": "s: CIRCLE; N: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(s, N) = False"
},
{
    "assertion": "CircumCircle ( TRIANGLE: R ) equals CIRCLE: M",
    "id": 295,
    "declarations": "R: TRIANGLE; M: CIRCLE",
    "facts": "CircumCircle(R) = M"
},
{
    "assertion": "InterceptChord ( LINE: y, CONICSECTION: e ) equals LineSegmentOf ( UpperFocus ( CONICSECTION: T ), RightVertex ( CONICSECTION: T ) )",
    "id": 296,
    "declarations": "y: LINE; e: CONICSECTION; T: CONICSECTION; T: CONICSECTION",
    "facts": "InterceptChord(y, e) = LineSegmentOf(UpperFocus(T), RightVertex(T))"
},
{
    "assertion": "Min ( Length ( LINESEGMENT: b ) ) equals NUMBER: 55",
    "id": 297,
    "declarations": "b: LINESEGMENT; 55: NUMBER",
    "facts": "Min(Length(b)) = 55"
},
{
    "assertion": "IsInTangent ( CIRCLE: w, CIRCLE: C ) equals BOOL: False",
    "id": 298,
    "declarations": "w: CIRCLE; C: CIRCLE; False: BOOL",
    "facts": "IsInTangent(w, C) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: x ) equals Inclination ( LINE: k )",
    "id": 299,
    "declarations": "x: CONICSECTION; k: LINE",
    "facts": "Perimeter(x) = Inclination(k)"
},
{
    "assertion": "Directrix ( CONICSECTION: B ) equals OverlappingLine ( LINESEGMENT: M )",
    "id": 300,
    "declarations": "B: CONICSECTION; M: LINESEGMENT",
    "facts": "Directrix(B) = OverlappingLine(M)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: e, TRIANGLE: y ) equals BOOL: False",
    "id": 301,
    "declarations": "e: CIRCLE; y: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(e, y) = False"
},
{
    "assertion": "MidPoint ( LINESEGMENT: y ) equals LeftVertex ( CONICSECTION: k )",
    "id": 302,
    "declarations": "y: LINESEGMENT; k: CONICSECTION",
    "facts": "MidPoint(y) = LeftVertex(k)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: Y ) equals LINESEGMENT: k",
    "id": 303,
    "declarations": "Y: ELLIPSE; k: LINESEGMENT",
    "facts": "ImaginaryAxis(Y) = k"
},
{
    "assertion": "LocusEquation ( POINT: A ) equals EXPRESSION: y*space=*spacex^3*space-*space4*x",
    "id": 304,
    "declarations": "A: POINT; y*space=*spacex^3*space-*space4*x: EXPRESSION",
    "facts": "LocusEquation(A) = y*space=*spacex^3*space-*space4*x"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: O, TRIANGLE: z ) equals BOOL: False",
    "id": 305,
    "declarations": "O: CIRCLE; z: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(O, z) = False"
},
{
    "assertion": "Intercept ( LINE: c, AXIS: yAxis ) equals NUMBER: 66",
    "id": 306,
    "declarations": "c: LINE; yAxis: AXIS; 66: NUMBER",
    "facts": "Intercept(c, yAxis) = 66"
},
{
    "assertion": "Inclination ( LINE: H ) equals NUMBER: 9",
    "id": 307,
    "declarations": "H: LINE; 9: NUMBER",
    "facts": "Inclination(H) = 9"
},
{
    "assertion": "ApplyUnit ( NUMBER: -67, DEGREESTR: degree )",
    "id": 308,
    "declarations": "-67: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-67, degree) = dummy_operator()"
},
{
    "assertion": "Endpoint ( LINESEGMENT: a ) equals Projection ( POINT: L, LINE: V )",
    "id": 309,
    "declarations": "a: LINESEGMENT; L: POINT; V: LINE",
    "facts": "Endpoint(a) = Projection(L, V)"
},
{
    "assertion": "lg ( NUMBER: 59 ) equals XCoordinate ( POINT: x )",
    "id": 310,
    "declarations": "59: NUMBER; x: POINT",
    "facts": "lg(59) = XCoordinate(x)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: C, TRIANGLE: r ) equals BOOL: False",
    "id": 311,
    "declarations": "C: CIRCLE; r: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(C, r) = False"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: m, CONICSECTION: t ) equals BOOL: False",
    "id": 312,
    "declarations": "m: LINESEGMENT; t: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(m, t) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: H, TriangleOf ( Incenter ( TRIANGLE: R ), POINT: n, LeftFocus ( CONICSECTION: S ) ) ) equals BOOL: False",
    "id": 313,
    "declarations": "H: CIRCLE; R: TRIANGLE; n: POINT; S: CONICSECTION; False: BOOL",
    "facts": "IsInscribedCircle(H, TriangleOf(Incenter(R), n, LeftFocus(S))) = False"
},
{
    "assertion": "RealAxis ( ELLIPSE: P ) equals LINESEGMENT: a",
    "id": 314,
    "declarations": "P: ELLIPSE; a: LINESEGMENT",
    "facts": "RealAxis(P) = a"
},
{
    "assertion": "Vertex ( CONICSECTION: D ) equals Circumcenter ( TRIANGLE: z )",
    "id": 315,
    "declarations": "D: CONICSECTION; z: TRIANGLE",
    "facts": "Vertex(D) = Circumcenter(z)"
},
{
    "assertion": "PointOnCurve ( RightVertex ( CONICSECTION: c ), Locus ( POINT: A ) ) equals BOOL: True",
    "id": 316,
    "declarations": "c: CONICSECTION; A: POINT; True: BOOL",
    "facts": "PointOnCurve(RightVertex(c), Locus(A)) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: e ) equals POINT: X",
    "id": 317,
    "declarations": "e: TRIANGLE; X: POINT",
    "facts": "Incenter(e) = X"
},
{
    "assertion": "FootPoint ( LINE: g, LINE: U ) equals LowerVertex ( CONICSECTION: R )",
    "id": 318,
    "declarations": "g: LINE; U: LINE; R: CONICSECTION",
    "facts": "FootPoint(g, U) = LowerVertex(R)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: V ) equals POINT: E",
    "id": 319,
    "declarations": "V: CONICSECTION; E: POINT",
    "facts": "LowerVertex(V) = E"
},
{
    "assertion": "Intersection ( RightPart ( HYPERBOLA: Q ), CURVE: O ) equals Incenter ( TRIANGLE: x )",
    "id": 320,
    "declarations": "Q: HYPERBOLA; O: CURVE; x: TRIANGLE",
    "facts": "Intersection(RightPart(Q), O) = Incenter(x)"
},
{
    "assertion": "lg ( Area ( CONICSECTION: H ) ) equals FocalLength ( CONICSECTION: z )",
    "id": 321,
    "declarations": "H: CONICSECTION; z: CONICSECTION",
    "facts": "lg(Area(H)) = FocalLength(z)"
},
{
    "assertion": "IsInTangent ( CIRCLE: K, CircumCircle ( TRIANGLE: a ) ) equals BOOL: False",
    "id": 322,
    "declarations": "K: CIRCLE; a: TRIANGLE; False: BOOL",
    "facts": "IsInTangent(K, CircumCircle(a)) = False"
},
{
    "assertion": "Orthocenter ( TRIANGLE: H ) equals FootPoint ( LINE: k, TangentOnPoint ( Center ( CONICSECTION: m ), CURVE: L ) )",
    "id": 323,
    "declarations": "H: TRIANGLE; k: LINE; m: CONICSECTION; L: CURVE",
    "facts": "Orthocenter(H) = FootPoint(k, TangentOnPoint(Center(m), L))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: S ) equals LINE: q",
    "id": 324,
    "declarations": "S: CONICSECTION; q: LINE",
    "facts": "RightDirectrix(S) = q"
},
{
    "assertion": "IsParallel ( LINE: W, LineOf ( POINT: e, LowerFocus ( CONICSECTION: E ) ) ) equals BOOL: False",
    "id": 325,
    "declarations": "W: LINE; e: POINT; E: CONICSECTION; False: BOOL",
    "facts": "IsParallel(W, LineOf(e, LowerFocus(E))) = False"
},
{
    "assertion": "Radius ( CIRCLE: S ) equals Quadrant ( POINT: X )",
    "id": 326,
    "declarations": "S: CIRCLE; X: POINT",
    "facts": "Radius(S) = Quadrant(X)"
},
{
    "assertion": "IsTangent ( LINE: K, CONICSECTION: O ) equals BOOL: True",
    "id": 327,
    "declarations": "K: LINE; O: CONICSECTION; True: BOOL",
    "facts": "IsTangent(K, O) = True"
},
{
    "assertion": "DotProduct ( VECTOR: l, VECTOR: f ) equals sqrt ( NUMBER: -76 )",
    "id": 328,
    "declarations": "l: VECTOR; f: VECTOR; -76: NUMBER",
    "facts": "DotProduct(l, f) = sqrt(-76)"
},
{
    "assertion": "Directrix ( CONICSECTION: w ) equals LINE: s",
    "id": 329,
    "declarations": "w: CONICSECTION; s: LINE",
    "facts": "Directrix(w) = s"
},
{
    "assertion": "Slope ( LINE: u ) equals NUMBER: -4",
    "id": 330,
    "declarations": "u: LINE; -4: NUMBER",
    "facts": "Slope(u) = -4"
},
{
    "assertion": "UpperVertex ( CONICSECTION: w ) equals POINT: V",
    "id": 331,
    "declarations": "w: CONICSECTION; V: POINT",
    "facts": "UpperVertex(w) = V"
},
{
    "assertion": "Expression ( CURVE: R ) equals EXPRESSION: x*y*space=*space1",
    "id": 332,
    "declarations": "R: CURVE; x*y*space=*space1: EXPRESSION",
    "facts": "Expression(R) = x*y*space=*space1"
},
{
    "assertion": "Radius ( CIRCLE: i ) equals InterReciprocal ( NUMBER: -52 )",
    "id": 333,
    "declarations": "i: CIRCLE; -52: NUMBER",
    "facts": "Radius(i) = InterReciprocal(-52)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: w, TRIANGLE: Z ) equals BOOL: True",
    "id": 334,
    "declarations": "w: CIRCLE; Z: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(w, Z) = True"
},
{
    "assertion": "Diameter ( CIRCLE: B ) equals Quadrant ( RightVertex ( CONICSECTION: d ) )",
    "id": 335,
    "declarations": "B: CIRCLE; d: CONICSECTION",
    "facts": "Diameter(B) = Quadrant(RightVertex(d))"
},
{
    "assertion": "Directrix ( CONICSECTION: M ) equals LINE: x",
    "id": 336,
    "declarations": "M: CONICSECTION; x: LINE",
    "facts": "Directrix(M) = x"
},
{
    "assertion": "IsIntersect ( CURVE: x, CURVE: O ) equals BOOL: True",
    "id": 337,
    "declarations": "x: CURVE; O: CURVE; True: BOOL",
    "facts": "IsIntersect(x, O) = True"
},
{
    "assertion": "Eccentricity ( CONICSECTION: Z ) equals Abs ( LINESEGMENT: W )",
    "id": 338,
    "declarations": "Z: CONICSECTION; W: LINESEGMENT",
    "facts": "Eccentricity(Z) = Abs(W)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: F ) equals UpperVertex ( CONICSECTION: H )",
    "id": 339,
    "declarations": "F: CONICSECTION; H: CONICSECTION",
    "facts": "LowerVertex(F) = UpperVertex(H)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: V ) equals POINT: O",
    "id": 340,
    "declarations": "V: CONICSECTION; O: POINT",
    "facts": "UpperVertex(V) = O"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: A ) equals AXIS: yAxis",
    "id": 341,
    "declarations": "A: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(A) = yAxis"
},
{
    "assertion": "LowerFocus ( CONICSECTION: A ) equals POINT: F",
    "id": 342,
    "declarations": "A: CONICSECTION; F: POINT",
    "facts": "LowerFocus(A) = F"
},
{
    "assertion": "TriangleOf ( Circumcenter ( TRIANGLE: S ), UpperVertex ( CONICSECTION: T ), POINT: g ) equals TRIANGLE: i",
    "id": 343,
    "declarations": "S: TRIANGLE; T: CONICSECTION; g: POINT; i: TRIANGLE",
    "facts": "TriangleOf(Circumcenter(S), UpperVertex(T), g) = i"
},
{
    "assertion": "Perimeter ( CONICSECTION: Z ) equals Intercept ( LINE: Q, AXIS: xAxis )",
    "id": 344,
    "declarations": "Z: CONICSECTION; Q: LINE; xAxis: AXIS",
    "facts": "Perimeter(Z) = Intercept(Q, xAxis)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: C ) equals LINESEGMENT: K",
    "id": 345,
    "declarations": "C: ELLIPSE; K: LINESEGMENT",
    "facts": "MajorAxis(C) = K"
},
{
    "assertion": "Vertex ( CONICSECTION: W ) equals Orthocenter ( TRIANGLE: f )",
    "id": 346,
    "declarations": "W: CONICSECTION; f: TRIANGLE",
    "facts": "Vertex(W) = Orthocenter(f)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: i ) equals POINT: h",
    "id": 347,
    "declarations": "i: CONICSECTION; h: POINT",
    "facts": "UpperVertex(i) = h"
},
{
    "assertion": "Focus ( CONICSECTION: V ) equals POINT: h",
    "id": 348,
    "declarations": "V: CONICSECTION; h: POINT",
    "facts": "Focus(V) = h"
},
{
    "assertion": "TriangleOf ( LeftFocus ( CONICSECTION: x ), POINT: B, POINT: y ) equals TRIANGLE: h",
    "id": 349,
    "declarations": "x: CONICSECTION; B: POINT; y: POINT; h: TRIANGLE",
    "facts": "TriangleOf(LeftFocus(x), B, y) = h"
},
{
    "assertion": "TriangleOf ( POINT: t, POINT: h, POINT: v ) equals TriangleOf ( POINT: F, LeftVertex ( CONICSECTION: w ), POINT: d )",
    "id": 350,
    "declarations": "t: POINT; h: POINT; v: POINT; F: POINT; w: CONICSECTION; d: POINT",
    "facts": "TriangleOf(t, h, v) = TriangleOf(F, LeftVertex(w), d)"
},
{
    "assertion": "LocusEquation ( POINT: u ) equals EXPRESSION: y*space=*spacex^2*space-*space4*x*space+*space4",
    "id": 351,
    "declarations": "u: POINT; y*space=*spacex^2*space-*space4*x*space+*space4: EXPRESSION",
    "facts": "LocusEquation(u) = y*space=*spacex^2*space-*space4*x*space+*space4"
},
{
    "assertion": "YCoordinate ( POINT: K ) equals HalfFocalLength ( CONICSECTION: D )",
    "id": 352,
    "declarations": "K: POINT; D: CONICSECTION",
    "facts": "YCoordinate(K) = HalfFocalLength(D)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: s ) equals LINESEGMENT: g",
    "id": 354,
    "declarations": "s: ELLIPSE; g: LINESEGMENT",
    "facts": "ImaginaryAxis(s) = g"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: U, TRIANGLE: C ) equals BOOL: False",
    "id": 355,
    "declarations": "U: CIRCLE; C: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(U, C) = False"
},
{
    "assertion": "IsDiameter ( ImaginaryAxis ( ELLIPSE: F ), CIRCLE: V ) equals BOOL: False",
    "id": 356,
    "declarations": "F: ELLIPSE; V: CIRCLE; False: BOOL",
    "facts": "IsDiameter(ImaginaryAxis(F), V) = False"
},
{
    "assertion": "AngleOf ( POINT: A, RightFocus ( CONICSECTION: u ), POINT: T ) equals ApplyUnit ( lg ( Inclination ( LINE: c ) ), DEGREESTR: degree )",
    "id": 357,
    "declarations": "A: POINT; u: CONICSECTION; T: POINT; c: LINE; degree: DEGREESTR",
    "facts": "AngleOf(A, RightFocus(u), T) = ApplyUnit(lg(Inclination(c)), degree)"
},
{
    "assertion": "Length ( LINESEGMENT: J ) equals Perimeter ( CONICSECTION: M )",
    "id": 358,
    "declarations": "J: LINESEGMENT; M: CONICSECTION",
    "facts": "Length(J) = Perimeter(M)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: C ) equals LINE: q",
    "id": 359,
    "declarations": "C: CONICSECTION; q: LINE",
    "facts": "RightDirectrix(C) = q"
},
{
    "assertion": "Distance ( Circumcenter ( TRIANGLE: b ), Projection ( RightFocus ( CONICSECTION: o ), RightDirectrix ( CONICSECTION: X ) ) ) equals sqrt ( Min ( NUMBER: 61 ) )",
    "id": 360,
    "declarations": "b: TRIANGLE; o: CONICSECTION; X: CONICSECTION; 61: NUMBER",
    "facts": "Distance(Circumcenter(b), Projection(RightFocus(o), RightDirectrix(X))) = sqrt(Min(61))"
},
{
    "assertion": "LocusEquation ( POINT: L ) equals Expression ( Locus ( Orthocenter ( TRIANGLE: S ) ) )",
    "id": 361,
    "declarations": "L: POINT; S: TRIANGLE",
    "facts": "LocusEquation(L) = Expression(Locus(Orthocenter(S)))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: z ) equals PerpendicularBisector ( LINESEGMENT: D )",
    "id": 362,
    "declarations": "z: HYPERBOLA; D: LINESEGMENT",
    "facts": "Asymptote(z) = PerpendicularBisector(D)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: G ) equals MajorAxis ( ELLIPSE: G )",
    "id": 363,
    "declarations": "G: ELLIPSE; G: ELLIPSE",
    "facts": "MinorAxis(G) = MajorAxis(G)"
},
{
    "assertion": "RightFocus ( CONICSECTION: y ) equals RightFocus ( CONICSECTION: c )",
    "id": 364,
    "declarations": "y: CONICSECTION; c: CONICSECTION",
    "facts": "RightFocus(y) = RightFocus(c)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: b ) equals Locus ( Incenter ( TRIANGLE: G ) )",
    "id": 365,
    "declarations": "b: HYPERBOLA; G: TRIANGLE",
    "facts": "LeftPart(b) = Locus(Incenter(G))"
},
{
    "assertion": "Abs ( LINESEGMENT: Y ) equals Radius ( CIRCLE: s )",
    "id": 366,
    "declarations": "Y: LINESEGMENT; s: CIRCLE",
    "facts": "Abs(Y) = Radius(s)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: Y ) equals Slope ( LINE: i )",
    "id": 367,
    "declarations": "Y: CONICSECTION; i: LINE",
    "facts": "Eccentricity(Y) = Slope(i)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: i, TRIANGLE: b ) equals BOOL: True",
    "id": 368,
    "declarations": "i: CIRCLE; b: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(i, b) = True"
},
{
    "assertion": "IsInTangent ( CIRCLE: P, CIRCLE: i ) equals BOOL: True",
    "id": 369,
    "declarations": "P: CIRCLE; i: CIRCLE; True: BOOL",
    "facts": "IsInTangent(P, i) = True"
},
{
    "assertion": "Intersection ( CURVE: I, CURVE: K ) equals LowerFocus ( CONICSECTION: y )",
    "id": 370,
    "declarations": "I: CURVE; K: CURVE; y: CONICSECTION",
    "facts": "Intersection(I, K) = LowerFocus(y)"
},
{
    "assertion": "TriangleOf ( LeftVertex ( CONICSECTION: J ), UpperFocus ( CONICSECTION: M ), Circumcenter ( TRIANGLE: I ) ) equals TRIANGLE: y",
    "id": 371,
    "declarations": "J: CONICSECTION; M: CONICSECTION; I: TRIANGLE; y: TRIANGLE",
    "facts": "TriangleOf(LeftVertex(J), UpperFocus(M), Circumcenter(I)) = y"
},
{
    "assertion": "Inclination ( LINE: F ) equals Slope ( LINE: t )",
    "id": 372,
    "declarations": "F: LINE; t: LINE",
    "facts": "Inclination(F) = Slope(t)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -42, DEGREESTR: degree )",
    "id": 373,
    "declarations": "-42: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-42, degree) = dummy_operator()"
},
{
    "assertion": "TangentOnPoint ( Circumcenter ( TRIANGLE: a ), CURVE: c ) equals LINE: g",
    "id": 374,
    "declarations": "a: TRIANGLE; c: CURVE; g: LINE",
    "facts": "TangentOnPoint(Circumcenter(a), c) = g"
},
{
    "assertion": "RealAxis ( ELLIPSE: K ) equals LineSegmentOf ( UpperFocus ( CONICSECTION: z ), POINT: P )",
    "id": 375,
    "declarations": "K: ELLIPSE; z: CONICSECTION; P: POINT",
    "facts": "RealAxis(K) = LineSegmentOf(UpperFocus(z), P)"
},
{
    "assertion": "Negation ( LocusEquation ( POINT: H ) equals Expression ( CURVE: m ) ) equals BOOL: False",
    "id": 376,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "AngleOf ( POINT: s, UpperFocus ( CONICSECTION: u ), UpperVertex ( CONICSECTION: N ) ) equals AngleOf ( POINT: W, Incenter ( TRIANGLE: k ), FootPoint ( LINE: X, LINE: e ) )",
    "id": 377,
    "declarations": "s: POINT; u: CONICSECTION; N: CONICSECTION; W: POINT; k: TRIANGLE; X: LINE; e: LINE",
    "facts": "AngleOf(s, UpperFocus(u), UpperVertex(N)) = AngleOf(W, Incenter(k), FootPoint(X, e))"
},
{
    "assertion": "lg ( NUMBER: -26 ) equals NUMBER: 49",
    "id": 378,
    "declarations": "-26: NUMBER; 49: NUMBER",
    "facts": "lg(-26) = 49"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: E ) equals PerpendicularBisector ( LINESEGMENT: G )",
    "id": 379,
    "declarations": "E: LINESEGMENT; G: LINESEGMENT",
    "facts": "PerpendicularBisector(E) = PerpendicularBisector(G)"
},
{
    "assertion": "Inclination ( LINE: M ) equals Slope ( LINE: p )",
    "id": 380,
    "declarations": "M: LINE; p: LINE",
    "facts": "Inclination(M) = Slope(p)"
},
{
    "assertion": "IsDiameter ( MinorAxis ( ELLIPSE: H ), CIRCLE: V ) equals BOOL: False",
    "id": 381,
    "declarations": "H: ELLIPSE; V: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MinorAxis(H), V) = False"
},
{
    "assertion": "Negation ( lg ( Area ( CONICSECTION: I ) ) equals Min ( NUMBER: 71 ) ) equals BOOL: False",
    "id": 382,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Expression ( CURVE: t ) equals EXPRESSION: x^2*space+*spacey*space=*space10",
    "id": 383,
    "declarations": "t: CURVE; x^2*space+*spacey*space=*space10: EXPRESSION",
    "facts": "Expression(t) = x^2*space+*spacey*space=*space10"
},
{
    "assertion": "Orthocenter ( TRIANGLE: I ) equals POINT: T",
    "id": 384,
    "declarations": "I: TRIANGLE; T: POINT",
    "facts": "Orthocenter(I) = T"
},
{
    "assertion": "IsIntersect ( CURVE: B, CURVE: a ) equals BOOL: False",
    "id": 385,
    "declarations": "B: CURVE; a: CURVE; False: BOOL",
    "facts": "IsIntersect(B, a) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: E ) equals POINT: I",
    "id": 386,
    "declarations": "E: CONICSECTION; I: POINT",
    "facts": "RightFocus(E) = I"
},
{
    "assertion": "And ( Min ( sqrt ( Length ( LINESEGMENT: s ) ) ) equals NUMBER: -16, Intercept ( LineOf ( LowerFocus ( CONICSECTION: C ), RightVertex ( CONICSECTION: e ) ), AXIS: xAxis ) equals NUMBER: -26 ) equals BOOL: True",
    "id": 387,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: f, TRIANGLE: R ) equals BOOL: False",
    "id": 388,
    "declarations": "f: CIRCLE; R: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(f, R) = False"
},
{
    "assertion": "PointOnCurve ( POINT: f, CURVE: Y ) equals BOOL: True",
    "id": 389,
    "declarations": "f: POINT; Y: CURVE; True: BOOL",
    "facts": "PointOnCurve(f, Y) = True"
},
{
    "assertion": "MidPoint ( LINESEGMENT: s ) equals POINT: b",
    "id": 390,
    "declarations": "s: LINESEGMENT; b: POINT",
    "facts": "MidPoint(s) = b"
},
{
    "assertion": "IsPerpendicular ( TangentOnPoint ( POINT: k, RightPart ( HYPERBOLA: U ) ), PerpendicularBisector ( LINESEGMENT: F ) ) equals BOOL: True",
    "id": 391,
    "declarations": "k: POINT; U: HYPERBOLA; F: LINESEGMENT; True: BOOL",
    "facts": "IsPerpendicular(TangentOnPoint(k, RightPart(U)), PerpendicularBisector(F)) = True"
},
{
    "assertion": "NumIntersection ( CURVE: s, CURVE: G ) equals Inclination ( LineOf ( LowerVertex ( CONICSECTION: G ), POINT: J ) )",
    "id": 392,
    "declarations": "s: CURVE; G: CURVE; G: CONICSECTION; J: POINT",
    "facts": "NumIntersection(s, G) = Inclination(LineOf(LowerVertex(G), J))"
},
{
    "assertion": "XCoordinate ( POINT: O ) equals NUMBER: -15",
    "id": 393,
    "declarations": "O: POINT; -15: NUMBER",
    "facts": "XCoordinate(O) = -15"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: L ) equals AXIS: xAxis",
    "id": 394,
    "declarations": "L: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(L) = xAxis"
},
{
    "assertion": "LocusEquation ( Orthocenter ( TRIANGLE: Y ) ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 395,
    "declarations": "Y: TRIANGLE; y*space=*spacesin(x): EXPRESSION",
    "facts": "LocusEquation(Orthocenter(Y)) = y*space=*spacesin(x)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: U ) equals Diameter ( CIRCLE: E )",
    "id": 396,
    "declarations": "U: CONICSECTION; E: CIRCLE",
    "facts": "Eccentricity(U) = Diameter(E)"
},
{
    "assertion": "Locus ( POINT: D ) equals CURVE: G",
    "id": 397,
    "declarations": "D: POINT; G: CURVE",
    "facts": "Locus(D) = G"
},
{
    "assertion": "Min ( FocalLength ( CONICSECTION: F ) ) equals DotProduct ( VECTOR: d, VECTOR: x )",
    "id": 398,
    "declarations": "F: CONICSECTION; d: VECTOR; x: VECTOR",
    "facts": "Min(FocalLength(F)) = DotProduct(d, x)"
},
{
    "assertion": "TangentPoint ( TangentOnPoint ( Orthocenter ( TRIANGLE: x ), CURVE: W ), CIRCLE: V ) equals RightVertex ( CONICSECTION: z )",
    "id": 399,
    "declarations": "x: TRIANGLE; W: CURVE; V: CIRCLE; z: CONICSECTION",
    "facts": "TangentPoint(TangentOnPoint(Orthocenter(x), W), V) = RightVertex(z)"
},
{
    "assertion": "Area ( CONICSECTION: S ) equals NUMBER: -42",
    "id": 400,
    "declarations": "S: CONICSECTION; -42: NUMBER",
    "facts": "Area(S) = -42"
},
{
    "assertion": "RightFocus ( CONICSECTION: u ) equals POINT: s",
    "id": 401,
    "declarations": "u: CONICSECTION; s: POINT",
    "facts": "RightFocus(u) = s"
},
{
    "assertion": "Min ( Min ( NUMBER: 24 ) ) equals Perimeter ( CONICSECTION: g )",
    "id": 402,
    "declarations": "24: NUMBER; g: CONICSECTION",
    "facts": "Min(Min(24)) = Perimeter(g)"
},
{
    "assertion": "Endpoint ( InterceptChord ( RightDirectrix ( CONICSECTION: I ), CONICSECTION: I ) ) equals POINT: O",
    "id": 403,
    "declarations": "I: CONICSECTION; I: CONICSECTION; O: POINT",
    "facts": "Endpoint(InterceptChord(RightDirectrix(I), I)) = O"
},
{
    "assertion": "LineSegmentOf ( UpperFocus ( CONICSECTION: i ), POINT: C ) equals LINESEGMENT: Y",
    "id": 404,
    "declarations": "i: CONICSECTION; C: POINT; Y: LINESEGMENT",
    "facts": "LineSegmentOf(UpperFocus(i), C) = Y"
},
{
    "assertion": "UpperFocus ( CONICSECTION: S ) equals UpperVertex ( CONICSECTION: a )",
    "id": 405,
    "declarations": "S: CONICSECTION; a: CONICSECTION",
    "facts": "UpperFocus(S) = UpperVertex(a)"
},
{
    "assertion": "TangentOfPoint ( LeftFocus ( CONICSECTION: v ), CURVE: U ) equals LINE: f",
    "id": 406,
    "declarations": "v: CONICSECTION; U: CURVE; f: LINE",
    "facts": "TangentOfPoint(LeftFocus(v), U) = f"
},
{
    "assertion": "Between ( POINT: D, Circumcenter ( TRIANGLE: U ), LowerVertex ( CONICSECTION: H ) ) equals BOOL: True",
    "id": 407,
    "declarations": "D: POINT; U: TRIANGLE; H: CONICSECTION; True: BOOL",
    "facts": "Between(D, Circumcenter(U), LowerVertex(H)) = True"
},
{
    "assertion": "LocusEquation ( FootPoint ( LINE: U, OverlappingLine ( InterceptChord ( LINE: l, CONICSECTION: V ) ) ) ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 408,
    "declarations": "U: LINE; l: LINE; V: CONICSECTION; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "LocusEquation(FootPoint(U, OverlappingLine(InterceptChord(l, V)))) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "RightPart ( HYPERBOLA: a ) equals CURVE: J",
    "id": 409,
    "declarations": "a: HYPERBOLA; J: CURVE",
    "facts": "RightPart(a) = J"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: y ) equals InterceptChord ( RightDirectrix ( CONICSECTION: c ), CONICSECTION: N )",
    "id": 410,
    "declarations": "y: ELLIPSE; c: CONICSECTION; N: CONICSECTION",
    "facts": "ImaginaryAxis(y) = InterceptChord(RightDirectrix(c), N)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: M ) equals LowerFocus ( CONICSECTION: F )",
    "id": 411,
    "declarations": "M: CONICSECTION; F: CONICSECTION",
    "facts": "LowerFocus(M) = LowerFocus(F)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: o, TRIANGLE: u ) equals BOOL: True",
    "id": 412,
    "declarations": "o: CIRCLE; u: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(o, u) = True"
},
{
    "assertion": "Intercept ( LINE: T, AXIS: xAxis ) equals NUMBER: 79",
    "id": 413,
    "declarations": "T: LINE; xAxis: AXIS; 79: NUMBER",
    "facts": "Intercept(T, xAxis) = 79"
},
{
    "assertion": "IsIntersect ( CURVE: o, LeftPart ( HYPERBOLA: V ) ) equals BOOL: False",
    "id": 414,
    "declarations": "o: CURVE; V: HYPERBOLA; False: BOOL",
    "facts": "IsIntersect(o, LeftPart(V)) = False"
},
{
    "assertion": "Abs ( LINESEGMENT: J ) equals NUMBER: 54",
    "id": 415,
    "declarations": "J: LINESEGMENT; 54: NUMBER",
    "facts": "Abs(J) = 54"
},
{
    "assertion": "Asymptote ( HYPERBOLA: K ) equals LINE: h",
    "id": 416,
    "declarations": "K: HYPERBOLA; h: LINE",
    "facts": "Asymptote(K) = h"
},
{
    "assertion": "CircumCircle ( TRIANGLE: K ) equals CIRCLE: D",
    "id": 417,
    "declarations": "K: TRIANGLE; D: CIRCLE",
    "facts": "CircumCircle(K) = D"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: X, CONICSECTION: K ) equals BOOL: False",
    "id": 418,
    "declarations": "X: LINESEGMENT; K: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(X, K) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: d ) equals POINT: f",
    "id": 419,
    "declarations": "d: CONICSECTION; f: POINT",
    "facts": "RightVertex(d) = f"
},
{
    "assertion": "FootPoint ( LINE: p, LINE: h ) equals RightFocus ( CONICSECTION: Y )",
    "id": 420,
    "declarations": "p: LINE; h: LINE; Y: CONICSECTION",
    "facts": "FootPoint(p, h) = RightFocus(Y)"
},
{
    "assertion": "Incenter ( TRIANGLE: M ) equals POINT: O",
    "id": 421,
    "declarations": "M: TRIANGLE; O: POINT",
    "facts": "Incenter(M) = O"
},
{
    "assertion": "Radius ( CIRCLE: V ) equals NUMBER: 25",
    "id": 422,
    "declarations": "V: CIRCLE; 25: NUMBER",
    "facts": "Radius(V) = 25"
},
{
    "assertion": "RightPart ( HYPERBOLA: b ) equals CURVE: O",
    "id": 423,
    "declarations": "b: HYPERBOLA; O: CURVE",
    "facts": "RightPart(b) = O"
},
{
    "assertion": "Length ( LineSegmentOf ( Projection ( LowerVertex ( CONICSECTION: U ), LINE: s ), RightFocus ( CONICSECTION: L ) ) ) equals Quadrant ( UpperVertex ( CONICSECTION: P ) )",
    "id": 424,
    "declarations": "U: CONICSECTION; s: LINE; L: CONICSECTION; P: CONICSECTION",
    "facts": "Length(LineSegmentOf(Projection(LowerVertex(U), s), RightFocus(L))) = Quadrant(UpperVertex(P))"
},
{
    "assertion": "RightVertex ( CONICSECTION: v ) equals MidPoint ( MajorAxis ( ELLIPSE: O ) )",
    "id": 425,
    "declarations": "v: CONICSECTION; O: ELLIPSE",
    "facts": "RightVertex(v) = MidPoint(MajorAxis(O))"
},
{
    "assertion": "MidPoint ( RealAxis ( ELLIPSE: u ) ) equals UpperFocus ( CONICSECTION: Q )",
    "id": 426,
    "declarations": "u: ELLIPSE; Q: CONICSECTION",
    "facts": "MidPoint(RealAxis(u)) = UpperFocus(Q)"
},
{
    "assertion": "Intersection ( CURVE: j, LeftPart ( HYPERBOLA: z ) ) equals POINT: k",
    "id": 427,
    "declarations": "j: CURVE; z: HYPERBOLA; k: POINT",
    "facts": "Intersection(j, LeftPart(z)) = k"
},
{
    "assertion": "FootPoint ( OverlappingLine ( LINESEGMENT: x ), LeftDirectrix ( CONICSECTION: H ) ) equals MidPoint ( LINESEGMENT: i )",
    "id": 428,
    "declarations": "x: LINESEGMENT; H: CONICSECTION; i: LINESEGMENT",
    "facts": "FootPoint(OverlappingLine(x), LeftDirectrix(H)) = MidPoint(i)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: O ) equals Circumcenter ( TRIANGLE: n )",
    "id": 429,
    "declarations": "O: TRIANGLE; n: TRIANGLE",
    "facts": "Circumcenter(O) = Circumcenter(n)"
},
{
    "assertion": "LocusEquation ( LowerVertex ( CONICSECTION: E ) ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 430,
    "declarations": "E: CONICSECTION; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "LocusEquation(LowerVertex(E)) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "Diameter ( CIRCLE: W ) equals NUMBER: -54",
    "id": 431,
    "declarations": "W: CIRCLE; -54: NUMBER",
    "facts": "Diameter(W) = -54"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: m ) equals LINE: Z",
    "id": 432,
    "declarations": "m: CONICSECTION; Z: LINE",
    "facts": "RightDirectrix(m) = Z"
},
{
    "assertion": "ApplyUnit ( NUMBER: -50, DEGREESTR: degree )",
    "id": 433,
    "declarations": "-50: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-50, degree) = dummy_operator()"
},
{
    "assertion": "RightPart ( HYPERBOLA: F ) equals CURVE: m",
    "id": 434,
    "declarations": "F: HYPERBOLA; m: CURVE",
    "facts": "RightPart(F) = m"
},
{
    "assertion": "UpperVertex ( CONICSECTION: b ) equals FootPoint ( LINE: B, LINE: t )",
    "id": 435,
    "declarations": "b: CONICSECTION; B: LINE; t: LINE",
    "facts": "UpperVertex(b) = FootPoint(B, t)"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: t ) ) equals Distance ( Orthocenter ( TRIANGLE: d ), UpperVertex ( CONICSECTION: g ) )",
    "id": 436,
    "declarations": "t: ELLIPSE; d: TRIANGLE; g: CONICSECTION",
    "facts": "Abs(RealAxis(t)) = Distance(Orthocenter(d), UpperVertex(g))"
},
{
    "assertion": "YCoordinate ( LeftFocus ( CONICSECTION: e ) ) equals NUMBER: 26",
    "id": 437,
    "declarations": "e: CONICSECTION; 26: NUMBER",
    "facts": "YCoordinate(LeftFocus(e)) = 26"
},
{
    "assertion": "IsParallel ( LINE: a, LINE: F ) equals BOOL: True",
    "id": 438,
    "declarations": "a: LINE; F: LINE; True: BOOL",
    "facts": "IsParallel(a, F) = True"
},
{
    "assertion": "IsIntersect ( CURVE: E, LeftPart ( HYPERBOLA: c ) ) equals BOOL: True",
    "id": 439,
    "declarations": "E: CURVE; c: HYPERBOLA; True: BOOL",
    "facts": "IsIntersect(E, LeftPart(c)) = True"
},
{
    "assertion": "UpperVertex ( CONICSECTION: y ) equals Incenter ( TRIANGLE: R )",
    "id": 440,
    "declarations": "y: CONICSECTION; R: TRIANGLE",
    "facts": "UpperVertex(y) = Incenter(R)"
},
{
    "assertion": "TangentOnPoint ( LeftFocus ( CONICSECTION: y ), LeftPart ( HYPERBOLA: x ) ) equals LINE: p",
    "id": 441,
    "declarations": "y: CONICSECTION; x: HYPERBOLA; p: LINE",
    "facts": "TangentOnPoint(LeftFocus(y), LeftPart(x)) = p"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: d, TRIANGLE: G ) equals BOOL: True",
    "id": 442,
    "declarations": "d: CIRCLE; G: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(d, G) = True"
},
{
    "assertion": "Negation ( RealAxis ( ELLIPSE: I ) equals LINESEGMENT: t ) equals BOOL: True",
    "id": 443,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "FocalLength ( CONICSECTION: a ) equals Quadrant ( UpperVertex ( CONICSECTION: B ) )",
    "id": 444,
    "declarations": "a: CONICSECTION; B: CONICSECTION",
    "facts": "FocalLength(a) = Quadrant(UpperVertex(B))"
},
{
    "assertion": "InterReciprocal ( NUMBER: -20 ) equals Min ( XCoordinate ( FootPoint ( LineOf ( POINT: P, POINT: X ), LineOf ( RightVertex ( CONICSECTION: e ), POINT: I ) ) ) )",
    "id": 445,
    "declarations": "-20: NUMBER; P: POINT; X: POINT; e: CONICSECTION; I: POINT",
    "facts": "InterReciprocal(-20) = Min(XCoordinate(FootPoint(LineOf(P, X), LineOf(RightVertex(e), I))))"
},
{
    "assertion": "Quadrant ( FootPoint ( LINE: Q, LINE: x ) ) equals NUMBER: 27",
    "id": 446,
    "declarations": "Q: LINE; x: LINE; 27: NUMBER",
    "facts": "Quadrant(FootPoint(Q, x)) = 27"
},
{
    "assertion": "Directrix ( CONICSECTION: K ) equals PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: m ) )",
    "id": 447,
    "declarations": "K: CONICSECTION; m: ELLIPSE",
    "facts": "Directrix(K) = PerpendicularBisector(ImaginaryAxis(m))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: k ) equals UpperVertex ( CONICSECTION: Z )",
    "id": 448,
    "declarations": "k: CONICSECTION; Z: CONICSECTION",
    "facts": "LeftVertex(k) = UpperVertex(Z)"
},
{
    "assertion": "Length ( LINESEGMENT: o ) equals lg ( Diameter ( CIRCLE: P ) )",
    "id": 449,
    "declarations": "o: LINESEGMENT; P: CIRCLE",
    "facts": "Length(o) = lg(Diameter(P))"
},
{
    "assertion": "Diameter ( CIRCLE: V ) equals YCoordinate ( LowerVertex ( CONICSECTION: e ) )",
    "id": 450,
    "declarations": "V: CIRCLE; e: CONICSECTION",
    "facts": "Diameter(V) = YCoordinate(LowerVertex(e))"
},
{
    "assertion": "MidPoint ( MinorAxis ( ELLIPSE: u ) ) equals UpperFocus ( CONICSECTION: k )",
    "id": 451,
    "declarations": "u: ELLIPSE; k: CONICSECTION",
    "facts": "MidPoint(MinorAxis(u)) = UpperFocus(k)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: T ) equals LINESEGMENT: P",
    "id": 452,
    "declarations": "T: ELLIPSE; P: LINESEGMENT",
    "facts": "ImaginaryAxis(T) = P"
},
{
    "assertion": "LeftFocus ( CONICSECTION: X ) equals POINT: p",
    "id": 453,
    "declarations": "X: CONICSECTION; p: POINT",
    "facts": "LeftFocus(X) = p"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: f ), TRIANGLE: I ) equals BOOL: False",
    "id": 454,
    "declarations": "f: TRIANGLE; I: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(f), I) = False"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: M, CIRCLE: C ) equals BOOL: False",
    "id": 455,
    "declarations": "M: LINESEGMENT; C: CIRCLE; False: BOOL",
    "facts": "IsDiameter(M, C) = False"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: Q ) equals AXIS: yAxis",
    "id": 456,
    "declarations": "Q: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(Q) = yAxis"
},
{
    "assertion": "lg ( Quadrant ( LeftVertex ( CONICSECTION: E ) ) ) equals InterReciprocal ( NUMBER: 50 )",
    "id": 457,
    "declarations": "E: CONICSECTION; 50: NUMBER",
    "facts": "lg(Quadrant(LeftVertex(E))) = InterReciprocal(50)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: Y ) equals LINESEGMENT: r",
    "id": 458,
    "declarations": "Y: ELLIPSE; r: LINESEGMENT",
    "facts": "MinorAxis(Y) = r"
},
{
    "assertion": "Intercept ( LINE: U, AXIS: yAxis ) equals sqrt ( NUMBER: 61 )",
    "id": 459,
    "declarations": "U: LINE; yAxis: AXIS; 61: NUMBER",
    "facts": "Intercept(U, yAxis) = sqrt(61)"
},
{
    "assertion": "FootPoint ( LeftDirectrix ( CONICSECTION: n ), PerpendicularBisector ( InterceptChord ( PerpendicularBisector ( LINESEGMENT: u ), CONICSECTION: B ) ) ) equals Orthocenter ( TRIANGLE: Q )",
    "id": 460,
    "declarations": "n: CONICSECTION; u: LINESEGMENT; B: CONICSECTION; Q: TRIANGLE",
    "facts": "FootPoint(LeftDirectrix(n), PerpendicularBisector(InterceptChord(PerpendicularBisector(u), B))) = Orthocenter(Q)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: u, CircumCircle ( TRIANGLE: A ) ) equals BOOL: False",
    "id": 461,
    "declarations": "u: CIRCLE; A: TRIANGLE; False: BOOL",
    "facts": "IsOutTangent(u, CircumCircle(A)) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: T, TRIANGLE: X ) equals BOOL: False",
    "id": 462,
    "declarations": "T: CIRCLE; X: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(T, X) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: j ) equals MidPoint ( LINESEGMENT: Y )",
    "id": 463,
    "declarations": "j: CONICSECTION; Y: LINESEGMENT",
    "facts": "UpperFocus(j) = MidPoint(Y)"
},
{
    "assertion": "FootPoint ( LINE: o, LINE: n ) equals RightFocus ( CONICSECTION: Y )",
    "id": 464,
    "declarations": "o: LINE; n: LINE; Y: CONICSECTION",
    "facts": "FootPoint(o, n) = RightFocus(Y)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: n ) equals LINESEGMENT: H",
    "id": 465,
    "declarations": "n: ELLIPSE; H: LINESEGMENT",
    "facts": "ImaginaryAxis(n) = H"
},
{
    "assertion": "Center ( CONICSECTION: a ) equals LeftVertex ( CONICSECTION: e )",
    "id": 466,
    "declarations": "a: CONICSECTION; e: CONICSECTION",
    "facts": "Center(a) = LeftVertex(e)"
},
{
    "assertion": "Locus ( POINT: d ) equals CURVE: V",
    "id": 467,
    "declarations": "d: POINT; V: CURVE",
    "facts": "Locus(d) = V"
},
{
    "assertion": "RealAxis ( ELLIPSE: d ) equals LINESEGMENT: T",
    "id": 468,
    "declarations": "d: ELLIPSE; T: LINESEGMENT",
    "facts": "RealAxis(d) = T"
},
{
    "assertion": "sqrt ( NUMBER: 91 ) equals HalfFocalLength ( CONICSECTION: B )",
    "id": 469,
    "declarations": "91: NUMBER; B: CONICSECTION",
    "facts": "sqrt(91) = HalfFocalLength(B)"
},
{
    "assertion": "RealAxis ( ELLIPSE: W ) equals LINESEGMENT: A",
    "id": 470,
    "declarations": "W: ELLIPSE; A: LINESEGMENT",
    "facts": "RealAxis(W) = A"
},
{
    "assertion": "LeftPart ( HYPERBOLA: A ) equals CURVE: f",
    "id": 471,
    "declarations": "A: HYPERBOLA; f: CURVE",
    "facts": "LeftPart(A) = f"
},
{
    "assertion": "LeftVertex ( CONICSECTION: W ) equals POINT: D",
    "id": 472,
    "declarations": "W: CONICSECTION; D: POINT",
    "facts": "LeftVertex(W) = D"
},
{
    "assertion": "LineSegmentOf ( Orthocenter ( TRIANGLE: M ), POINT: W ) equals LineSegmentOf ( POINT: H, Incenter ( TRIANGLE: k ) )",
    "id": 473,
    "declarations": "M: TRIANGLE; W: POINT; H: POINT; k: TRIANGLE",
    "facts": "LineSegmentOf(Orthocenter(M), W) = LineSegmentOf(H, Incenter(k))"
},
{
    "assertion": "Locus ( LowerVertex ( CONICSECTION: D ) ) equals CURVE: J",
    "id": 474,
    "declarations": "D: CONICSECTION; J: CURVE",
    "facts": "Locus(LowerVertex(D)) = J"
},
{
    "assertion": "Min ( Intercept ( LINE: U, AXIS: xAxis ) ) equals Slope ( TangentOnPoint ( POINT: K, CURVE: u ) )",
    "id": 475,
    "declarations": "U: LINE; xAxis: AXIS; K: POINT; u: CURVE",
    "facts": "Min(Intercept(U, xAxis)) = Slope(TangentOnPoint(K, u))"
},
{
    "assertion": "Slope ( TangentOnPoint ( RightVertex ( CONICSECTION: y ), CURVE: x ) ) equals NUMBER: -71",
    "id": 476,
    "declarations": "y: CONICSECTION; x: CURVE; -71: NUMBER",
    "facts": "Slope(TangentOnPoint(RightVertex(y), x)) = -71"
},
{
    "assertion": "FootPoint ( LINE: H, LINE: W ) equals Projection ( UpperFocus ( CONICSECTION: H ), LINE: F )",
    "id": 477,
    "declarations": "H: LINE; W: LINE; H: CONICSECTION; F: LINE",
    "facts": "FootPoint(H, W) = Projection(UpperFocus(H), F)"
},
{
    "assertion": "AngleOf ( POINT: i, POINT: m, UpperFocus ( CONICSECTION: n ) ) equals AngleOf ( RightFocus ( CONICSECTION: c ), POINT: O, POINT: f )",
    "id": 478,
    "declarations": "i: POINT; m: POINT; n: CONICSECTION; c: CONICSECTION; O: POINT; f: POINT",
    "facts": "AngleOf(i, m, UpperFocus(n)) = AngleOf(RightFocus(c), O, f)"
},
{
    "assertion": "IsParallel ( LINE: Q, LINE: J ) equals BOOL: False",
    "id": 479,
    "declarations": "Q: LINE; J: LINE; False: BOOL",
    "facts": "IsParallel(Q, J) = False"
},
{
    "assertion": "VectorOf ( MidPoint ( LINESEGMENT: p ), LeftFocus ( CONICSECTION: g ) ) equals VECTOR: h",
    "id": 480,
    "declarations": "p: LINESEGMENT; g: CONICSECTION; h: VECTOR",
    "facts": "VectorOf(MidPoint(p), LeftFocus(g)) = h"
},
{
    "assertion": "LeftVertex ( CONICSECTION: k ) equals LeftFocus ( CONICSECTION: Z )",
    "id": 481,
    "declarations": "k: CONICSECTION; Z: CONICSECTION",
    "facts": "LeftVertex(k) = LeftFocus(Z)"
},
{
    "assertion": "RightPart ( HYPERBOLA: L ) equals CURVE: e",
    "id": 482,
    "declarations": "L: HYPERBOLA; e: CURVE",
    "facts": "RightPart(L) = e"
},
{
    "assertion": "Eccentricity ( CONICSECTION: T ) equals NUMBER: -5",
    "id": 483,
    "declarations": "T: CONICSECTION; -5: NUMBER",
    "facts": "Eccentricity(T) = -5"
},
{
    "assertion": "Vertex ( CONICSECTION: k ) equals MidPoint ( LINESEGMENT: z )",
    "id": 484,
    "declarations": "k: CONICSECTION; z: LINESEGMENT",
    "facts": "Vertex(k) = MidPoint(z)"
},
{
    "assertion": "sqrt ( sqrt ( Area ( CONICSECTION: k ) ) ) equals NUMBER: -96",
    "id": 485,
    "declarations": "k: CONICSECTION; -96: NUMBER",
    "facts": "sqrt(sqrt(Area(k))) = -96"
},
{
    "assertion": "Min ( Perimeter ( CONICSECTION: N ) ) equals Length ( LINESEGMENT: i )",
    "id": 486,
    "declarations": "N: CONICSECTION; i: LINESEGMENT",
    "facts": "Min(Perimeter(N)) = Length(i)"
},
{
    "assertion": "Quadrant ( POINT: k ) equals YCoordinate ( LeftVertex ( CONICSECTION: C ) )",
    "id": 487,
    "declarations": "k: POINT; C: CONICSECTION",
    "facts": "Quadrant(k) = YCoordinate(LeftVertex(C))"
},
{
    "assertion": "LineOf ( Incenter ( TRIANGLE: E ), POINT: m ) equals LINE: l",
    "id": 488,
    "declarations": "E: TRIANGLE; m: POINT; l: LINE",
    "facts": "LineOf(Incenter(E), m) = l"
},
{
    "assertion": "Circumcenter ( TRIANGLE: b ) equals POINT: r",
    "id": 489,
    "declarations": "b: TRIANGLE; r: POINT",
    "facts": "Circumcenter(b) = r"
},
{
    "assertion": "sqrt ( NUMBER: 92 ) equals NUMBER: -61",
    "id": 490,
    "declarations": "92: NUMBER; -61: NUMBER",
    "facts": "sqrt(92) = -61"
},
{
    "assertion": "Slope ( TangentOfPoint ( POINT: r, CURVE: t ) ) equals HalfFocalLength ( CONICSECTION: E )",
    "id": 491,
    "declarations": "r: POINT; t: CURVE; E: CONICSECTION",
    "facts": "Slope(TangentOfPoint(r, t)) = HalfFocalLength(E)"
},
{
    "assertion": "Center ( CONICSECTION: C ) equals LeftFocus ( CONICSECTION: P )",
    "id": 492,
    "declarations": "C: CONICSECTION; P: CONICSECTION",
    "facts": "Center(C) = LeftFocus(P)"
},
{
    "assertion": "Abs ( LINESEGMENT: t ) equals Distance ( LeftVertex ( CONICSECTION: N ), POINT: s )",
    "id": 493,
    "declarations": "t: LINESEGMENT; N: CONICSECTION; s: POINT",
    "facts": "Abs(t) = Distance(LeftVertex(N), s)"
},
{
    "assertion": "InterReciprocal ( NUMBER: 81 ) equals Radius ( CIRCLE: I )",
    "id": 494,
    "declarations": "81: NUMBER; I: CIRCLE",
    "facts": "InterReciprocal(81) = Radius(I)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: l ) equals POINT: Z",
    "id": 495,
    "declarations": "l: LINESEGMENT; Z: POINT",
    "facts": "Endpoint(l) = Z"
},
{
    "assertion": "Expression ( CURVE: C ) equals Expression ( CURVE: m )",
    "id": 496,
    "declarations": "C: CURVE; m: CURVE",
    "facts": "Expression(C) = Expression(m)"
},
{
    "assertion": "IsParallel ( OverlappingLine ( LINESEGMENT: b ), LINE: I ) equals BOOL: True",
    "id": 497,
    "declarations": "b: LINESEGMENT; I: LINE; True: BOOL",
    "facts": "IsParallel(OverlappingLine(b), I) = True"
},
{
    "assertion": "NumIntersection ( CURVE: f, LeftPart ( HYPERBOLA: E ) ) equals lg ( NUMBER: -29 )",
    "id": 498,
    "declarations": "f: CURVE; E: HYPERBOLA; -29: NUMBER",
    "facts": "NumIntersection(f, LeftPart(E)) = lg(-29)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: U ) equals LINE: C",
    "id": 499,
    "declarations": "U: CONICSECTION; C: LINE",
    "facts": "RightDirectrix(U) = C"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: T, CONICSECTION: k ) equals BOOL: False",
    "id": 500,
    "declarations": "T: LINESEGMENT; k: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(T, k) = False"
},
{
    "assertion": "TangentOfPoint ( POINT: n, LeftPart ( HYPERBOLA: P ) ) equals LeftDirectrix ( CONICSECTION: Y )",
    "id": 501,
    "declarations": "n: POINT; P: HYPERBOLA; Y: CONICSECTION",
    "facts": "TangentOfPoint(n, LeftPart(P)) = LeftDirectrix(Y)"
},
{
    "assertion": "sqrt ( XCoordinate ( RightFocus ( CONICSECTION: y ) ) ) equals YCoordinate ( POINT: x )",
    "id": 502,
    "declarations": "y: CONICSECTION; x: POINT",
    "facts": "sqrt(XCoordinate(RightFocus(y))) = YCoordinate(x)"
},
{
    "assertion": "Length ( LINESEGMENT: q ) equals Slope ( LINE: V )",
    "id": 503,
    "declarations": "q: LINESEGMENT; V: LINE",
    "facts": "Length(q) = Slope(V)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: D ) equals LINE: C",
    "id": 504,
    "declarations": "D: CONICSECTION; C: LINE",
    "facts": "LeftDirectrix(D) = C"
},
{
    "assertion": "RealAxis ( ELLIPSE: U ) equals LINESEGMENT: Q",
    "id": 505,
    "declarations": "U: ELLIPSE; Q: LINESEGMENT",
    "facts": "RealAxis(U) = Q"
},
{
    "assertion": "Perimeter ( CONICSECTION: a ) equals NUMBER: 82",
    "id": 506,
    "declarations": "a: CONICSECTION; 82: NUMBER",
    "facts": "Perimeter(a) = 82"
},
{
    "assertion": "MinorAxis ( ELLIPSE: W ) equals RealAxis ( ELLIPSE: g )",
    "id": 507,
    "declarations": "W: ELLIPSE; g: ELLIPSE",
    "facts": "MinorAxis(W) = RealAxis(g)"
},
{
    "assertion": "Area ( CONICSECTION: q ) equals InterReciprocal ( XCoordinate ( LeftFocus ( CONICSECTION: P ) ) )",
    "id": 508,
    "declarations": "q: CONICSECTION; P: CONICSECTION",
    "facts": "Area(q) = InterReciprocal(XCoordinate(LeftFocus(P)))"
},
{
    "assertion": "DotProduct ( VECTOR: k, VECTOR: O ) equals Eccentricity ( CONICSECTION: U )",
    "id": 509,
    "declarations": "k: VECTOR; O: VECTOR; U: CONICSECTION",
    "facts": "DotProduct(k, O) = Eccentricity(U)"
},
{
    "assertion": "InterceptChord ( LINE: U, CONICSECTION: m ) equals LINESEGMENT: q",
    "id": 510,
    "declarations": "U: LINE; m: CONICSECTION; q: LINESEGMENT",
    "facts": "InterceptChord(U, m) = q"
},
{
    "assertion": "IsPerpendicular ( LINE: f, LINE: b ) equals BOOL: True",
    "id": 511,
    "declarations": "f: LINE; b: LINE; True: BOOL",
    "facts": "IsPerpendicular(f, b) = True"
},
{
    "assertion": "sqrt ( Area ( CONICSECTION: S ) ) equals NUMBER: 52",
    "id": 512,
    "declarations": "S: CONICSECTION; 52: NUMBER",
    "facts": "sqrt(Area(S)) = 52"
},
{
    "assertion": "LeftVertex ( CONICSECTION: U ) equals POINT: n",
    "id": 513,
    "declarations": "U: CONICSECTION; n: POINT",
    "facts": "LeftVertex(U) = n"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: A, TRIANGLE: p ) equals BOOL: True",
    "id": 514,
    "declarations": "A: CIRCLE; p: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(A, p) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: v ) equals Orthocenter ( TRIANGLE: B )",
    "id": 515,
    "declarations": "v: CONICSECTION; B: TRIANGLE",
    "facts": "LeftFocus(v) = Orthocenter(B)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: g, CIRCLE: R ) equals BOOL: False",
    "id": 516,
    "declarations": "g: LINESEGMENT; R: CIRCLE; False: BOOL",
    "facts": "IsDiameter(g, R) = False"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: K ) equals LINESEGMENT: p",
    "id": 517,
    "declarations": "K: ELLIPSE; p: LINESEGMENT",
    "facts": "ImaginaryAxis(K) = p"
},
{
    "assertion": "InterceptChord ( LINE: Y, CONICSECTION: H ) equals LINESEGMENT: m",
    "id": 518,
    "declarations": "Y: LINE; H: CONICSECTION; m: LINESEGMENT",
    "facts": "InterceptChord(Y, H) = m"
},
{
    "assertion": "Incenter ( TRIANGLE: s ) equals POINT: S",
    "id": 519,
    "declarations": "s: TRIANGLE; S: POINT",
    "facts": "Incenter(s) = S"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: S ) equals LINE: O",
    "id": 520,
    "declarations": "S: CONICSECTION; O: LINE",
    "facts": "RightDirectrix(S) = O"
},
{
    "assertion": "RightFocus ( CONICSECTION: m ) equals UpperFocus ( CONICSECTION: J )",
    "id": 521,
    "declarations": "m: CONICSECTION; J: CONICSECTION",
    "facts": "RightFocus(m) = UpperFocus(J)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: r ) equals LINE: Z",
    "id": 522,
    "declarations": "r: HYPERBOLA; Z: LINE",
    "facts": "Asymptote(r) = Z"
},
{
    "assertion": "VectorOf ( POINT: Y, MidPoint ( LINESEGMENT: m ) ) equals VECTOR: j",
    "id": 523,
    "declarations": "Y: POINT; m: LINESEGMENT; j: VECTOR",
    "facts": "VectorOf(Y, MidPoint(m)) = j"
},
{
    "assertion": "RealAxis ( ELLIPSE: x ) equals LINESEGMENT: R",
    "id": 524,
    "declarations": "x: ELLIPSE; R: LINESEGMENT",
    "facts": "RealAxis(x) = R"
},
{
    "assertion": "IsParallel ( LINE: C, LINE: l ) equals BOOL: False",
    "id": 525,
    "declarations": "C: LINE; l: LINE; False: BOOL",
    "facts": "IsParallel(C, l) = False"
},
{
    "assertion": "RealAxis ( ELLIPSE: V ) equals MajorAxis ( ELLIPSE: e )",
    "id": 526,
    "declarations": "V: ELLIPSE; e: ELLIPSE",
    "facts": "RealAxis(V) = MajorAxis(e)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: a ) equals sqrt ( NUMBER: -48 )",
    "id": 527,
    "declarations": "a: CONICSECTION; -48: NUMBER",
    "facts": "HalfFocalLength(a) = sqrt(-48)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: t, CONICSECTION: H ) equals BOOL: False",
    "id": 528,
    "declarations": "t: LINESEGMENT; H: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(t, H) = False"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: x, CONICSECTION: Q ) equals BOOL: True",
    "id": 529,
    "declarations": "x: LINESEGMENT; Q: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(x, Q) = True"
},
{
    "assertion": "Expression ( Locus ( POINT: V ) ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 530,
    "declarations": "V: POINT; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "Expression(Locus(V)) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "LeftVertex ( CONICSECTION: x ) equals Center ( CONICSECTION: r )",
    "id": 531,
    "declarations": "x: CONICSECTION; r: CONICSECTION",
    "facts": "LeftVertex(x) = Center(r)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: S ) equals Incenter ( TRIANGLE: K )",
    "id": 532,
    "declarations": "S: TRIANGLE; K: TRIANGLE",
    "facts": "Orthocenter(S) = Incenter(K)"
},
{
    "assertion": "RightFocus ( CONICSECTION: S ) equals Incenter ( TRIANGLE: V )",
    "id": 533,
    "declarations": "S: CONICSECTION; V: TRIANGLE",
    "facts": "RightFocus(S) = Incenter(V)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: F ) equals NUMBER: -57",
    "id": 534,
    "declarations": "F: CONICSECTION; -57: NUMBER",
    "facts": "Eccentricity(F) = -57"
},
{
    "assertion": "Projection ( Orthocenter ( TRIANGLE: R ), LineOf ( Projection ( UpperVertex ( CONICSECTION: u ), TangentOnPoint ( Orthocenter ( TRIANGLE: K ), CURVE: P ) ), LeftFocus ( CONICSECTION: m ) ) ) equals UpperVertex ( CONICSECTION: D )",
    "id": 535,
    "declarations": "R: TRIANGLE; u: CONICSECTION; K: TRIANGLE; P: CURVE; m: CONICSECTION; D: CONICSECTION",
    "facts": "Projection(Orthocenter(R), LineOf(Projection(UpperVertex(u), TangentOnPoint(Orthocenter(K), P)), LeftFocus(m))) = UpperVertex(D)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: Q, CircumCircle ( TRIANGLE: g ) ) equals BOOL: True",
    "id": 536,
    "declarations": "Q: LINESEGMENT; g: TRIANGLE; True: BOOL",
    "facts": "IsDiameter(Q, CircumCircle(g)) = True"
},
{
    "assertion": "LowerVertex ( CONICSECTION: p ) equals LeftFocus ( CONICSECTION: G )",
    "id": 537,
    "declarations": "p: CONICSECTION; G: CONICSECTION",
    "facts": "LowerVertex(p) = LeftFocus(G)"
},
{
    "assertion": "Diameter ( CIRCLE: n ) equals NUMBER: -82",
    "id": 538,
    "declarations": "n: CIRCLE; -82: NUMBER",
    "facts": "Diameter(n) = -82"
},
{
    "assertion": "Length ( LINESEGMENT: j ) equals lg ( NUMBER: 53 )",
    "id": 539,
    "declarations": "j: LINESEGMENT; 53: NUMBER",
    "facts": "Length(j) = lg(53)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: e ) equals CIRCLE: G",
    "id": 540,
    "declarations": "e: TRIANGLE; G: CIRCLE",
    "facts": "CircumCircle(e) = G"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: R, TRIANGLE: m ) equals BOOL: True",
    "id": 541,
    "declarations": "R: CIRCLE; m: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(R, m) = True"
},
{
    "assertion": "Negation ( Circumcenter ( TRIANGLE: z ) equals Circumcenter ( TRIANGLE: q ) ) equals BOOL: False",
    "id": 542,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Quadrant ( POINT: w ) equals NUMBER: -11",
    "id": 543,
    "declarations": "w: POINT; -11: NUMBER",
    "facts": "Quadrant(w) = -11"
},
{
    "assertion": "NumIntersection ( CURVE: K, Locus ( Circumcenter ( TRIANGLE: s ) ) ) equals Intercept ( TangentOnPoint ( Circumcenter ( TRIANGLE: s ), RightPart ( HYPERBOLA: S ) ), SymmetryAxis ( CONICSECTION: N ) )",
    "id": 544,
    "declarations": "K: CURVE; s: TRIANGLE; s: TRIANGLE; S: HYPERBOLA; N: CONICSECTION",
    "facts": "NumIntersection(K, Locus(Circumcenter(s))) = Intercept(TangentOnPoint(Circumcenter(s), RightPart(S)), SymmetryAxis(N))"
},
{
    "assertion": "sqrt ( NUMBER: -29 ) equals NUMBER: 56",
    "id": 545,
    "declarations": "-29: NUMBER; 56: NUMBER",
    "facts": "sqrt(-29) = 56"
},
{
    "assertion": "RightPart ( HYPERBOLA: c ) equals LeftPart ( HYPERBOLA: v )",
    "id": 546,
    "declarations": "c: HYPERBOLA; v: HYPERBOLA",
    "facts": "RightPart(c) = LeftPart(v)"
},
{
    "assertion": "LocusEquation ( POINT: n ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 547,
    "declarations": "n: POINT; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "LocusEquation(n) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "MajorAxis ( ELLIPSE: k ) equals LINESEGMENT: o",
    "id": 548,
    "declarations": "k: ELLIPSE; o: LINESEGMENT",
    "facts": "MajorAxis(k) = o"
},
{
    "assertion": "LocusEquation ( Center ( CONICSECTION: f ) ) equals Expression ( CURVE: c )",
    "id": 550,
    "declarations": "f: CONICSECTION; c: CURVE",
    "facts": "LocusEquation(Center(f)) = Expression(c)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: V ) equals MidPoint ( LINESEGMENT: e )",
    "id": 551,
    "declarations": "V: CONICSECTION; e: LINESEGMENT",
    "facts": "LeftVertex(V) = MidPoint(e)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: C ) equals LowerVertex ( CONICSECTION: L )",
    "id": 552,
    "declarations": "C: CONICSECTION; L: CONICSECTION",
    "facts": "LowerVertex(C) = LowerVertex(L)"
},
{
    "assertion": "LineOf ( POINT: W, POINT: g ) equals LINE: U",
    "id": 553,
    "declarations": "W: POINT; g: POINT; U: LINE",
    "facts": "LineOf(W, g) = U"
},
{
    "assertion": "IsPerpendicular ( LINE: Z, LeftDirectrix ( CONICSECTION: Y ) ) equals BOOL: True",
    "id": 554,
    "declarations": "Z: LINE; Y: CONICSECTION; True: BOOL",
    "facts": "IsPerpendicular(Z, LeftDirectrix(Y)) = True"
},
{
    "assertion": "ApplyUnit ( NUMBER: 64, DEGREESTR: degree )",
    "id": 555,
    "declarations": "64: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(64, degree) = dummy_operator()"
},
{
    "assertion": "RightPart ( HYPERBOLA: T ) equals Locus ( POINT: G )",
    "id": 556,
    "declarations": "T: HYPERBOLA; G: POINT",
    "facts": "RightPart(T) = Locus(G)"
},
{
    "assertion": "Incenter ( TRIANGLE: u ) equals FootPoint ( LeftDirectrix ( CONICSECTION: x ), LINE: Z )",
    "id": 557,
    "declarations": "u: TRIANGLE; x: CONICSECTION; Z: LINE",
    "facts": "Incenter(u) = FootPoint(LeftDirectrix(x), Z)"
},
{
    "assertion": "FocalLength ( CONICSECTION: r ) equals NUMBER: 35",
    "id": 558,
    "declarations": "r: CONICSECTION; 35: NUMBER",
    "facts": "FocalLength(r) = 35"
},
{
    "assertion": "LowerFocus ( CONICSECTION: B ) equals POINT: E",
    "id": 559,
    "declarations": "B: CONICSECTION; E: POINT",
    "facts": "LowerFocus(B) = E"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: r ) equals OverlappingLine ( LINESEGMENT: f )",
    "id": 560,
    "declarations": "r: LINESEGMENT; f: LINESEGMENT",
    "facts": "OverlappingLine(r) = OverlappingLine(f)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: E ) equals POINT: A",
    "id": 561,
    "declarations": "E: CONICSECTION; A: POINT",
    "facts": "LeftVertex(E) = A"
},
{
    "assertion": "Diameter ( CIRCLE: L ) equals NUMBER: 60",
    "id": 562,
    "declarations": "L: CIRCLE; 60: NUMBER",
    "facts": "Diameter(L) = 60"
},
{
    "assertion": "MidPoint ( LINESEGMENT: b ) equals POINT: s",
    "id": 563,
    "declarations": "b: LINESEGMENT; s: POINT",
    "facts": "MidPoint(b) = s"
},
{
    "assertion": "YCoordinate ( LowerFocus ( CONICSECTION: y ) ) equals FocalLength ( CONICSECTION: R )",
    "id": 564,
    "declarations": "y: CONICSECTION; R: CONICSECTION",
    "facts": "YCoordinate(LowerFocus(y)) = FocalLength(R)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: v ) equals CURVE: Q",
    "id": 565,
    "declarations": "v: HYPERBOLA; Q: CURVE",
    "facts": "LeftPart(v) = Q"
},
{
    "assertion": "UpperVertex ( CONICSECTION: u ) equals UpperFocus ( CONICSECTION: e )",
    "id": 566,
    "declarations": "u: CONICSECTION; e: CONICSECTION",
    "facts": "UpperVertex(u) = UpperFocus(e)"
},
{
    "assertion": "lg ( Perimeter ( CONICSECTION: i ) ) equals Area ( CONICSECTION: V )",
    "id": 567,
    "declarations": "i: CONICSECTION; V: CONICSECTION",
    "facts": "lg(Perimeter(i)) = Area(V)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: G ) equals POINT: k",
    "id": 568,
    "declarations": "G: TRIANGLE; k: POINT",
    "facts": "Circumcenter(G) = k"
},
{
    "assertion": "Quadrant ( Orthocenter ( TRIANGLE: L ) ) equals NUMBER: -42",
    "id": 569,
    "declarations": "L: TRIANGLE; -42: NUMBER",
    "facts": "Quadrant(Orthocenter(L)) = -42"
},
{
    "assertion": "RightVertex ( CONICSECTION: Y ) equals Circumcenter ( TRIANGLE: O )",
    "id": 570,
    "declarations": "Y: CONICSECTION; O: TRIANGLE",
    "facts": "RightVertex(Y) = Circumcenter(O)"
},
{
    "assertion": "Incenter ( TRIANGLE: J ) equals POINT: J",
    "id": 571,
    "declarations": "J: TRIANGLE; J: POINT",
    "facts": "Incenter(J) = J"
},
{
    "assertion": "Vertex ( CONICSECTION: E ) equals POINT: L",
    "id": 572,
    "declarations": "E: CONICSECTION; L: POINT",
    "facts": "Vertex(E) = L"
},
{
    "assertion": "Distance ( MidPoint ( LineSegmentOf ( RightFocus ( CONICSECTION: M ), Circumcenter ( TRIANGLE: y ) ) ), POINT: p ) equals NUMBER: -29",
    "id": 573,
    "declarations": "M: CONICSECTION; y: TRIANGLE; p: POINT; -29: NUMBER",
    "facts": "Distance(MidPoint(LineSegmentOf(RightFocus(M), Circumcenter(y))), p) = -29"
},
{
    "assertion": "sqrt ( NUMBER: 17 ) equals NUMBER: -56",
    "id": 574,
    "declarations": "17: NUMBER; -56: NUMBER",
    "facts": "sqrt(17) = -56"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: F, TRIANGLE: a ) equals BOOL: True",
    "id": 575,
    "declarations": "F: CIRCLE; a: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(F, a) = True"
},
{
    "assertion": "Abs ( LINESEGMENT: Y ) equals Inclination ( OverlappingLine ( MajorAxis ( ELLIPSE: H ) ) )",
    "id": 576,
    "declarations": "Y: LINESEGMENT; H: ELLIPSE",
    "facts": "Abs(Y) = Inclination(OverlappingLine(MajorAxis(H)))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: Q ) equals InterReciprocal ( NUMBER: -44 )",
    "id": 577,
    "declarations": "Q: CONICSECTION; -44: NUMBER",
    "facts": "Eccentricity(Q) = InterReciprocal(-44)"
},
{
    "assertion": "ApplyUnit ( Quadrant ( MidPoint ( LINESEGMENT: R ) ), DEGREESTR: degree )",
    "id": 578,
    "declarations": "R: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(Quadrant(MidPoint(R)), degree) = dummy_operator()"
},
{
    "assertion": "UpperVertex ( CONICSECTION: v ) equals POINT: d",
    "id": 579,
    "declarations": "v: CONICSECTION; d: POINT",
    "facts": "UpperVertex(v) = d"
},
{
    "assertion": "MinorAxis ( ELLIPSE: j ) equals LINESEGMENT: B",
    "id": 580,
    "declarations": "j: ELLIPSE; B: LINESEGMENT",
    "facts": "MinorAxis(j) = B"
},
{
    "assertion": "Quadrant ( RightVertex ( CONICSECTION: o ) ) equals InterReciprocal ( Slope ( LINE: V ) )",
    "id": 581,
    "declarations": "o: CONICSECTION; V: LINE",
    "facts": "Quadrant(RightVertex(o)) = InterReciprocal(Slope(V))"
},
{
    "assertion": "Vertex ( CONICSECTION: G ) equals POINT: m",
    "id": 582,
    "declarations": "G: CONICSECTION; m: POINT",
    "facts": "Vertex(G) = m"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: z ) equals LINE: l",
    "id": 583,
    "declarations": "z: CONICSECTION; l: LINE",
    "facts": "RightDirectrix(z) = l"
},
{
    "assertion": "ApplyUnit ( Min ( NUMBER: -35 ), DEGREESTR: degree )",
    "id": 584,
    "declarations": "-35: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(Min(-35), degree) = dummy_operator()"
},
{
    "assertion": "Incenter ( TRIANGLE: X ) equals LeftVertex ( CONICSECTION: D )",
    "id": 585,
    "declarations": "X: TRIANGLE; D: CONICSECTION",
    "facts": "Incenter(X) = LeftVertex(D)"
},
{
    "assertion": "Distance ( UpperFocus ( CONICSECTION: F ), RightFocus ( CONICSECTION: L ) ) equals Quadrant ( Orthocenter ( TRIANGLE: A ) )",
    "id": 586,
    "declarations": "F: CONICSECTION; L: CONICSECTION; A: TRIANGLE",
    "facts": "Distance(UpperFocus(F), RightFocus(L)) = Quadrant(Orthocenter(A))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: g ) equals LINE: Q",
    "id": 587,
    "declarations": "g: CONICSECTION; Q: LINE",
    "facts": "RightDirectrix(g) = Q"
},
{
    "assertion": "TangentOfPoint ( Circumcenter ( TRIANGLE: m ), CURVE: W ) equals LineOf ( RightVertex ( CONICSECTION: Y ), POINT: a )",
    "id": 588,
    "declarations": "m: TRIANGLE; W: CURVE; Y: CONICSECTION; a: POINT",
    "facts": "TangentOfPoint(Circumcenter(m), W) = LineOf(RightVertex(Y), a)"
},
{
    "assertion": "Between ( POINT: n, Incenter ( TRIANGLE: y ), Incenter ( TRIANGLE: u ) ) equals BOOL: False",
    "id": 589,
    "declarations": "n: POINT; y: TRIANGLE; u: TRIANGLE; False: BOOL",
    "facts": "Between(n, Incenter(y), Incenter(u)) = False"
},
{
    "assertion": "Locus ( LeftVertex ( CONICSECTION: N ) ) equals CURVE: h",
    "id": 590,
    "declarations": "N: CONICSECTION; h: CURVE",
    "facts": "Locus(LeftVertex(N)) = h"
},
{
    "assertion": "Max ( Quadrant ( MidPoint ( InterceptChord ( LINE: y, CONICSECTION: t ) ) ) ) equals NUMBER: 78",
    "id": 591,
    "declarations": "y: LINE; t: CONICSECTION; 78: NUMBER",
    "facts": "Max(Quadrant(MidPoint(InterceptChord(y, t)))) = 78"
},
{
    "assertion": "LowerFocus ( CONICSECTION: m ) equals LeftVertex ( CONICSECTION: h )",
    "id": 592,
    "declarations": "m: CONICSECTION; h: CONICSECTION",
    "facts": "LowerFocus(m) = LeftVertex(h)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: D, TRIANGLE: m ) equals BOOL: False",
    "id": 593,
    "declarations": "D: CIRCLE; m: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(D, m) = False"
},
{
    "assertion": "Circumcenter ( TRIANGLE: z ) equals POINT: e",
    "id": 594,
    "declarations": "z: TRIANGLE; e: POINT",
    "facts": "Circumcenter(z) = e"
},
{
    "assertion": "Focus ( CONICSECTION: I ) equals Incenter ( TRIANGLE: p )",
    "id": 595,
    "declarations": "I: CONICSECTION; p: TRIANGLE",
    "facts": "Focus(I) = Incenter(p)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: L ) equals RightVertex ( CONICSECTION: U )",
    "id": 596,
    "declarations": "L: CONICSECTION; U: CONICSECTION",
    "facts": "LowerFocus(L) = RightVertex(U)"
},
{
    "assertion": "Focus ( CONICSECTION: I ) equals Center ( CONICSECTION: c )",
    "id": 597,
    "declarations": "I: CONICSECTION; c: CONICSECTION",
    "facts": "Focus(I) = Center(c)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: F ) equals AXIS: yAxis",
    "id": 598,
    "declarations": "F: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(F) = yAxis"
},
{
    "assertion": "sqrt ( Length ( LINESEGMENT: H ) ) equals NUMBER: -95",
    "id": 599,
    "declarations": "H: LINESEGMENT; -95: NUMBER",
    "facts": "sqrt(Length(H)) = -95"
},
{
    "assertion": "InterReciprocal ( NUMBER: 5 ) equals NumIntersection ( CURVE: u, CURVE: a )",
    "id": 600,
    "declarations": "5: NUMBER; u: CURVE; a: CURVE",
    "facts": "InterReciprocal(5) = NumIntersection(u, a)"
},
{
    "assertion": "YCoordinate ( Orthocenter ( TRIANGLE: b ) ) equals Radius ( CIRCLE: A )",
    "id": 601,
    "declarations": "b: TRIANGLE; A: CIRCLE",
    "facts": "YCoordinate(Orthocenter(b)) = Radius(A)"
},
{
    "assertion": "RealAxis ( ELLIPSE: p ) equals MajorAxis ( ELLIPSE: J )",
    "id": 602,
    "declarations": "p: ELLIPSE; J: ELLIPSE",
    "facts": "RealAxis(p) = MajorAxis(J)"
},
{
    "assertion": "AngleOf ( RightFocus ( CONICSECTION: v ), RightFocus ( CONICSECTION: a ), Orthocenter ( TRIANGLE: s ) ) equals ApplyUnit ( Abs ( LINESEGMENT: P ), DEGREESTR: degree )",
    "id": 603,
    "declarations": "v: CONICSECTION; a: CONICSECTION; s: TRIANGLE; P: LINESEGMENT; degree: DEGREESTR",
    "facts": "AngleOf(RightFocus(v), RightFocus(a), Orthocenter(s)) = ApplyUnit(Abs(P), degree)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: k ) equals LINE: J",
    "id": 604,
    "declarations": "k: LINESEGMENT; J: LINE",
    "facts": "OverlappingLine(k) = J"
},
{
    "assertion": "LeftPart ( HYPERBOLA: A ) equals LeftPart ( HYPERBOLA: Z )",
    "id": 605,
    "declarations": "A: HYPERBOLA; Z: HYPERBOLA",
    "facts": "LeftPart(A) = LeftPart(Z)"
},
{
    "assertion": "Diameter ( CIRCLE: Y ) equals Eccentricity ( CONICSECTION: v )",
    "id": 606,
    "declarations": "Y: CIRCLE; v: CONICSECTION",
    "facts": "Diameter(Y) = Eccentricity(v)"
},
{
    "assertion": "Radius ( CIRCLE: z ) equals DotProduct ( VECTOR: v, VECTOR: p )",
    "id": 607,
    "declarations": "z: CIRCLE; v: VECTOR; p: VECTOR",
    "facts": "Radius(z) = DotProduct(v, p)"
},
{
    "assertion": "IsParallel ( LINE: j, LINE: P ) equals BOOL: True",
    "id": 608,
    "declarations": "j: LINE; P: LINE; True: BOOL",
    "facts": "IsParallel(j, P) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: w ) equals NUMBER: 61",
    "id": 609,
    "declarations": "w: CONICSECTION; 61: NUMBER",
    "facts": "HalfFocalLength(w) = 61"
},
{
    "assertion": "TangentOnPoint ( POINT: k, CURVE: t ) equals LeftDirectrix ( CONICSECTION: P )",
    "id": 610,
    "declarations": "k: POINT; t: CURVE; P: CONICSECTION",
    "facts": "TangentOnPoint(k, t) = LeftDirectrix(P)"
},
{
    "assertion": "lg ( NUMBER: -87 ) equals Intercept ( RightDirectrix ( CONICSECTION: s ), AXIS: xAxis )",
    "id": 611,
    "declarations": "-87: NUMBER; s: CONICSECTION; xAxis: AXIS",
    "facts": "lg(-87) = Intercept(RightDirectrix(s), xAxis)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: x ) equals LowerFocus ( CONICSECTION: n )",
    "id": 612,
    "declarations": "x: CONICSECTION; n: CONICSECTION",
    "facts": "LeftVertex(x) = LowerFocus(n)"
},
{
    "assertion": "DotProduct ( VECTOR: R, VECTOR: V ) equals InterReciprocal ( Quadrant ( Projection ( POINT: a, OverlappingLine ( LINESEGMENT: c ) ) ) )",
    "id": 613,
    "declarations": "R: VECTOR; V: VECTOR; a: POINT; c: LINESEGMENT",
    "facts": "DotProduct(R, V) = InterReciprocal(Quadrant(Projection(a, OverlappingLine(c))))"
},
{
    "assertion": "Incenter ( TRIANGLE: L ) equals POINT: u",
    "id": 614,
    "declarations": "L: TRIANGLE; u: POINT",
    "facts": "Incenter(L) = u"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: K ) equals LINESEGMENT: L",
    "id": 615,
    "declarations": "K: ELLIPSE; L: LINESEGMENT",
    "facts": "ImaginaryAxis(K) = L"
},
{
    "assertion": "Length ( LINESEGMENT: v ) equals NUMBER: 70",
    "id": 616,
    "declarations": "v: LINESEGMENT; 70: NUMBER",
    "facts": "Length(v) = 70"
},
{
    "assertion": "Diameter ( CIRCLE: s ) equals NUMBER: 4",
    "id": 617,
    "declarations": "s: CIRCLE; 4: NUMBER",
    "facts": "Diameter(s) = 4"
},
{
    "assertion": "RightVertex ( CONICSECTION: Q ) equals POINT: H",
    "id": 618,
    "declarations": "Q: CONICSECTION; H: POINT",
    "facts": "RightVertex(Q) = H"
},
{
    "assertion": "UpperVertex ( CONICSECTION: h ) equals POINT: V",
    "id": 619,
    "declarations": "h: CONICSECTION; V: POINT",
    "facts": "UpperVertex(h) = V"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: C ) ) equals POINT: B",
    "id": 620,
    "declarations": "C: ELLIPSE; B: POINT",
    "facts": "Endpoint(ImaginaryAxis(C)) = B"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: c ) equals PerpendicularBisector ( InterceptChord ( LINE: I, CONICSECTION: K ) )",
    "id": 621,
    "declarations": "c: CONICSECTION; I: LINE; K: CONICSECTION",
    "facts": "RightDirectrix(c) = PerpendicularBisector(InterceptChord(I, K))"
},
{
    "assertion": "And ( LineOf ( POINT: T, UpperVertex ( CONICSECTION: F ) ) equals RightDirectrix ( CONICSECTION: p ), Locus ( LowerVertex ( CONICSECTION: J ) ) equals CURVE: a ) equals BOOL: False",
    "id": 622,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MidPoint ( LINESEGMENT: x ) equals Projection ( POINT: w, TangentOfPoint ( UpperVertex ( CONICSECTION: w ), Locus ( Center ( CONICSECTION: N ) ) ) )",
    "id": 623,
    "declarations": "x: LINESEGMENT; w: POINT; w: CONICSECTION; N: CONICSECTION",
    "facts": "MidPoint(x) = Projection(w, TangentOfPoint(UpperVertex(w), Locus(Center(N))))"
},
{
    "assertion": "Vertex ( CONICSECTION: V ) equals POINT: F",
    "id": 624,
    "declarations": "V: CONICSECTION; F: POINT",
    "facts": "Vertex(V) = F"
},
{
    "assertion": "MidPoint ( LINESEGMENT: O ) equals POINT: z",
    "id": 625,
    "declarations": "O: LINESEGMENT; z: POINT",
    "facts": "MidPoint(O) = z"
},
{
    "assertion": "UpperFocus ( CONICSECTION: k ) equals POINT: k",
    "id": 626,
    "declarations": "k: CONICSECTION; k: POINT",
    "facts": "UpperFocus(k) = k"
},
{
    "assertion": "Endpoint ( LINESEGMENT: V ) equals Incenter ( TriangleOf ( UpperFocus ( CONICSECTION: C ), Orthocenter ( TRIANGLE: S ), LowerVertex ( CONICSECTION: p ) ) )",
    "id": 627,
    "declarations": "V: LINESEGMENT; C: CONICSECTION; S: TRIANGLE; p: CONICSECTION",
    "facts": "Endpoint(V) = Incenter(TriangleOf(UpperFocus(C), Orthocenter(S), LowerVertex(p)))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: a ) equals NUMBER: 64",
    "id": 628,
    "declarations": "a: CONICSECTION; 64: NUMBER",
    "facts": "Eccentricity(a) = 64"
},
{
    "assertion": "LowerFocus ( CONICSECTION: T ) equals POINT: y",
    "id": 629,
    "declarations": "T: CONICSECTION; y: POINT",
    "facts": "LowerFocus(T) = y"
},
{
    "assertion": "Area ( CONICSECTION: g ) equals lg ( NUMBER: -16 )",
    "id": 630,
    "declarations": "g: CONICSECTION; -16: NUMBER",
    "facts": "Area(g) = lg(-16)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: X ) equals CURVE: P",
    "id": 631,
    "declarations": "X: HYPERBOLA; P: CURVE",
    "facts": "LeftPart(X) = P"
},
{
    "assertion": "MinorAxis ( ELLIPSE: E ) equals LINESEGMENT: f",
    "id": 632,
    "declarations": "E: ELLIPSE; f: LINESEGMENT",
    "facts": "MinorAxis(E) = f"
},
{
    "assertion": "IsPerpendicular ( LINE: a, LINE: V ) equals BOOL: False",
    "id": 633,
    "declarations": "a: LINE; V: LINE; False: BOOL",
    "facts": "IsPerpendicular(a, V) = False"
},
{
    "assertion": "Min ( NUMBER: -37 ) equals NUMBER: -92",
    "id": 634,
    "declarations": "-37: NUMBER; -92: NUMBER",
    "facts": "Min(-37) = -92"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: N ) equals RightDirectrix ( CONICSECTION: F )",
    "id": 635,
    "declarations": "N: CONICSECTION; F: CONICSECTION",
    "facts": "LeftDirectrix(N) = RightDirectrix(F)"
},
{
    "assertion": "InterceptChord ( LINE: V, CONICSECTION: P ) equals MajorAxis ( ELLIPSE: a )",
    "id": 636,
    "declarations": "V: LINE; P: CONICSECTION; a: ELLIPSE",
    "facts": "InterceptChord(V, P) = MajorAxis(a)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: F ) equals TangentOfPoint ( POINT: o, Locus ( POINT: j ) )",
    "id": 637,
    "declarations": "F: LINESEGMENT; o: POINT; j: POINT",
    "facts": "OverlappingLine(F) = TangentOfPoint(o, Locus(j))"
},
{
    "assertion": "IsIntersect ( CURVE: j, LeftPart ( HYPERBOLA: i ) ) equals BOOL: True",
    "id": 638,
    "declarations": "j: CURVE; i: HYPERBOLA; True: BOOL",
    "facts": "IsIntersect(j, LeftPart(i)) = True"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: b, TRIANGLE: u ) equals BOOL: False",
    "id": 639,
    "declarations": "b: CIRCLE; u: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(b, u) = False"
},
{
    "assertion": "NumIntersection ( LeftPart ( HYPERBOLA: I ), CURVE: L ) equals InterReciprocal ( NUMBER: 56 )",
    "id": 640,
    "declarations": "I: HYPERBOLA; L: CURVE; 56: NUMBER",
    "facts": "NumIntersection(LeftPart(I), L) = InterReciprocal(56)"
},
{
    "assertion": "lg ( NUMBER: -63 ) equals NUMBER: -80",
    "id": 641,
    "declarations": "-63: NUMBER; -80: NUMBER",
    "facts": "lg(-63) = -80"
},
{
    "assertion": "Inclination ( LINE: j ) equals YCoordinate ( Orthocenter ( TRIANGLE: S ) )",
    "id": 642,
    "declarations": "j: LINE; S: TRIANGLE",
    "facts": "Inclination(j) = YCoordinate(Orthocenter(S))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: T ) equals LeftVertex ( CONICSECTION: A )",
    "id": 643,
    "declarations": "T: CONICSECTION; A: CONICSECTION",
    "facts": "UpperFocus(T) = LeftVertex(A)"
},
{
    "assertion": "IsDiameter ( MinorAxis ( ELLIPSE: o ), CircumCircle ( TRIANGLE: u ) ) equals BOOL: True",
    "id": 644,
    "declarations": "o: ELLIPSE; u: TRIANGLE; True: BOOL",
    "facts": "IsDiameter(MinorAxis(o), CircumCircle(u)) = True"
},
{
    "assertion": "Negation ( IsInTangent ( CIRCLE: j, CircumCircle ( TRIANGLE: O ) ) equals BOOL: True ) equals BOOL: True",
    "id": 645,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Abs ( InterceptChord ( RightDirectrix ( CONICSECTION: f ), CONICSECTION: t ) ) equals XCoordinate ( Circumcenter ( TRIANGLE: l ) )",
    "id": 646,
    "declarations": "f: CONICSECTION; t: CONICSECTION; l: TRIANGLE",
    "facts": "Abs(InterceptChord(RightDirectrix(f), t)) = XCoordinate(Circumcenter(l))"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: v, TRIANGLE: t ) equals BOOL: False",
    "id": 647,
    "declarations": "v: CIRCLE; t: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(v, t) = False"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: C ) equals AXIS: xAxis",
    "id": 648,
    "declarations": "C: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(C) = xAxis"
},
{
    "assertion": "Min ( NUMBER: 17 ) equals NUMBER: -28",
    "id": 649,
    "declarations": "17: NUMBER; -28: NUMBER",
    "facts": "Min(17) = -28"
},
{
    "assertion": "RightVertex ( CONICSECTION: C ) equals UpperFocus ( CONICSECTION: x )",
    "id": 650,
    "declarations": "C: CONICSECTION; x: CONICSECTION",
    "facts": "RightVertex(C) = UpperFocus(x)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: y ) equals POINT: I",
    "id": 651,
    "declarations": "y: CONICSECTION; I: POINT",
    "facts": "LowerVertex(y) = I"
},
{
    "assertion": "Endpoint ( LINESEGMENT: J ) equals POINT: d",
    "id": 652,
    "declarations": "J: LINESEGMENT; d: POINT",
    "facts": "Endpoint(J) = d"
},
{
    "assertion": "FocalLength ( CONICSECTION: p ) equals NUMBER: 30",
    "id": 653,
    "declarations": "p: CONICSECTION; 30: NUMBER",
    "facts": "FocalLength(p) = 30"
},
{
    "assertion": "And ( CircumCircle ( TRIANGLE: P ) equals CIRCLE: O, CircumCircle ( TRIANGLE: I ) equals CIRCLE: I ) equals BOOL: False",
    "id": 654,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Distance ( FootPoint ( LINE: s, LeftDirectrix ( CONICSECTION: K ) ), UpperVertex ( CONICSECTION: k ) ) equals Diameter ( CIRCLE: u )",
    "id": 655,
    "declarations": "s: LINE; K: CONICSECTION; k: CONICSECTION; u: CIRCLE",
    "facts": "Distance(FootPoint(s, LeftDirectrix(K)), UpperVertex(k)) = Diameter(u)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: F ) equals Abs ( LINESEGMENT: I )",
    "id": 656,
    "declarations": "F: CONICSECTION; I: LINESEGMENT",
    "facts": "HalfFocalLength(F) = Abs(I)"
},
{
    "assertion": "Radius ( CIRCLE: p ) equals Area ( CONICSECTION: p )",
    "id": 657,
    "declarations": "p: CIRCLE; p: CONICSECTION",
    "facts": "Radius(p) = Area(p)"
},
{
    "assertion": "Negation ( MinorAxis ( ELLIPSE: O ) equals LINESEGMENT: r ) equals BOOL: False",
    "id": 658,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "InterceptChord ( LINE: H, CONICSECTION: j ) equals LineSegmentOf ( Circumcenter ( TRIANGLE: v ), LeftVertex ( CONICSECTION: e ) )",
    "id": 659,
    "declarations": "H: LINE; j: CONICSECTION; v: TRIANGLE; e: CONICSECTION",
    "facts": "InterceptChord(H, j) = LineSegmentOf(Circumcenter(v), LeftVertex(e))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: V ) equals POINT: Q",
    "id": 660,
    "declarations": "V: LINESEGMENT; Q: POINT",
    "facts": "Endpoint(V) = Q"
},
{
    "assertion": "TangentOnPoint ( POINT: p, CURVE: H ) equals LINE: Z",
    "id": 661,
    "declarations": "p: POINT; H: CURVE; Z: LINE",
    "facts": "TangentOnPoint(p, H) = Z"
},
{
    "assertion": "Focus ( CONICSECTION: v ) equals POINT: z",
    "id": 662,
    "declarations": "v: CONICSECTION; z: POINT",
    "facts": "Focus(v) = z"
},
{
    "assertion": "Perimeter ( CONICSECTION: l ) equals DotProduct ( VECTOR: x, VECTOR: I )",
    "id": 663,
    "declarations": "l: CONICSECTION; x: VECTOR; I: VECTOR",
    "facts": "Perimeter(l) = DotProduct(x, I)"
},
{
    "assertion": "IsInTangent ( CIRCLE: q, CIRCLE: w ) equals BOOL: False",
    "id": 664,
    "declarations": "q: CIRCLE; w: CIRCLE; False: BOOL",
    "facts": "IsInTangent(q, w) = False"
},
{
    "assertion": "IsIntersect ( CURVE: E, Locus ( UpperVertex ( CONICSECTION: R ) ) ) equals BOOL: False",
    "id": 665,
    "declarations": "E: CURVE; R: CONICSECTION; False: BOOL",
    "facts": "IsIntersect(E, Locus(UpperVertex(R))) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: u ) equals POINT: p",
    "id": 666,
    "declarations": "u: CONICSECTION; p: POINT",
    "facts": "RightFocus(u) = p"
},
{
    "assertion": "InterReciprocal ( DotProduct ( VECTOR: B, VECTOR: t ) ) equals Quadrant ( Orthocenter ( TRIANGLE: M ) )",
    "id": 667,
    "declarations": "B: VECTOR; t: VECTOR; M: TRIANGLE",
    "facts": "InterReciprocal(DotProduct(B, t)) = Quadrant(Orthocenter(M))"
},
{
    "assertion": "Max ( NUMBER: 21 ) equals Perimeter ( CONICSECTION: j )",
    "id": 668,
    "declarations": "21: NUMBER; j: CONICSECTION",
    "facts": "Max(21) = Perimeter(j)"
},
{
    "assertion": "Focus ( CONICSECTION: l ) equals POINT: S",
    "id": 669,
    "declarations": "l: CONICSECTION; S: POINT",
    "facts": "Focus(l) = S"
},
{
    "assertion": "Locus ( POINT: A ) equals CURVE: S",
    "id": 670,
    "declarations": "A: POINT; S: CURVE",
    "facts": "Locus(A) = S"
},
{
    "assertion": "IsOutTangent ( CIRCLE: H, CIRCLE: q ) equals BOOL: False",
    "id": 671,
    "declarations": "H: CIRCLE; q: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(H, q) = False"
},
{
    "assertion": "LocusEquation ( Incenter ( TriangleOf ( LowerFocus ( CONICSECTION: K ), POINT: W, POINT: f ) ) ) equals EXPRESSION: y*space=*spacex^2*space-*space4*x*space+*space4",
    "id": 672,
    "declarations": "K: CONICSECTION; W: POINT; f: POINT; y*space=*spacex^2*space-*space4*x*space+*space4: EXPRESSION",
    "facts": "LocusEquation(Incenter(TriangleOf(LowerFocus(K), W, f))) = y*space=*spacex^2*space-*space4*x*space+*space4"
},
{
    "assertion": "Asymptote ( HYPERBOLA: n ) equals LINE: t",
    "id": 673,
    "declarations": "n: HYPERBOLA; t: LINE",
    "facts": "Asymptote(n) = t"
},
{
    "assertion": "IsDiameter ( LineSegmentOf ( Projection ( LeftVertex ( CONICSECTION: K ), LINE: b ), POINT: C ), CIRCLE: P ) equals BOOL: True",
    "id": 674,
    "declarations": "K: CONICSECTION; b: LINE; C: POINT; P: CIRCLE; True: BOOL",
    "facts": "IsDiameter(LineSegmentOf(Projection(LeftVertex(K), b), C), P) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: J ) equals Perimeter ( CONICSECTION: n )",
    "id": 675,
    "declarations": "J: CONICSECTION; n: CONICSECTION",
    "facts": "HalfFocalLength(J) = Perimeter(n)"
},
{
    "assertion": "Directrix ( CONICSECTION: K ) equals LINE: H",
    "id": 676,
    "declarations": "K: CONICSECTION; H: LINE",
    "facts": "Directrix(K) = H"
},
{
    "assertion": "CircumCircle ( TRIANGLE: N ) equals CIRCLE: j",
    "id": 677,
    "declarations": "N: TRIANGLE; j: CIRCLE",
    "facts": "CircumCircle(N) = j"
},
{
    "assertion": "IsInTangent ( CircumCircle ( TriangleOf ( Circumcenter ( TRIANGLE: v ), UpperFocus ( CONICSECTION: c ), Center ( CONICSECTION: h ) ) ), CIRCLE: y ) equals BOOL: False",
    "id": 678,
    "declarations": "v: TRIANGLE; c: CONICSECTION; h: CONICSECTION; y: CIRCLE; False: BOOL",
    "facts": "IsInTangent(CircumCircle(TriangleOf(Circumcenter(v), UpperFocus(c), Center(h))), y) = False"
},
{
    "assertion": "Projection ( UpperVertex ( CONICSECTION: D ), OverlappingLine ( LINESEGMENT: w ) ) equals Orthocenter ( TriangleOf ( POINT: M, FootPoint ( RightDirectrix ( CONICSECTION: C ), LINE: J ), Projection ( POINT: F, LINE: f ) ) )",
    "id": 679,
    "declarations": "D: CONICSECTION; w: LINESEGMENT; M: POINT; C: CONICSECTION; J: LINE; F: POINT; f: LINE",
    "facts": "Projection(UpperVertex(D), OverlappingLine(w)) = Orthocenter(TriangleOf(M, FootPoint(RightDirectrix(C), J), Projection(F, f)))"
},
{
    "assertion": "Directrix ( CONICSECTION: V ) equals LINE: S",
    "id": 680,
    "declarations": "V: CONICSECTION; S: LINE",
    "facts": "Directrix(V) = S"
},
{
    "assertion": "RightFocus ( CONICSECTION: M ) equals POINT: L",
    "id": 681,
    "declarations": "M: CONICSECTION; L: POINT",
    "facts": "RightFocus(M) = L"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: M ) equals PerpendicularBisector ( RealAxis ( ELLIPSE: H ) )",
    "id": 682,
    "declarations": "M: CONICSECTION; H: ELLIPSE",
    "facts": "RightDirectrix(M) = PerpendicularBisector(RealAxis(H))"
},
{
    "assertion": "Min ( NUMBER: 68 ) equals lg ( NUMBER: -11 )",
    "id": 683,
    "declarations": "68: NUMBER; -11: NUMBER",
    "facts": "Min(68) = lg(-11)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: n ) equals POINT: I",
    "id": 684,
    "declarations": "n: CONICSECTION; I: POINT",
    "facts": "UpperVertex(n) = I"
},
{
    "assertion": "RightPart ( HYPERBOLA: D ) equals CURVE: D",
    "id": 685,
    "declarations": "D: HYPERBOLA; D: CURVE",
    "facts": "RightPart(D) = D"
},
{
    "assertion": "IsOutTangent ( CIRCLE: x, CIRCLE: l ) equals BOOL: False",
    "id": 686,
    "declarations": "x: CIRCLE; l: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(x, l) = False"
},
{
    "assertion": "Asymptote ( HYPERBOLA: h ) equals LINE: G",
    "id": 687,
    "declarations": "h: HYPERBOLA; G: LINE",
    "facts": "Asymptote(h) = G"
},
{
    "assertion": "VectorOf ( POINT: q, POINT: E ) equals VECTOR: o",
    "id": 688,
    "declarations": "q: POINT; E: POINT; o: VECTOR",
    "facts": "VectorOf(q, E) = o"
},
{
    "assertion": "MajorAxis ( ELLIPSE: Q ) equals LINESEGMENT: v",
    "id": 689,
    "declarations": "Q: ELLIPSE; v: LINESEGMENT",
    "facts": "MajorAxis(Q) = v"
},
{
    "assertion": "RealAxis ( ELLIPSE: t ) equals LINESEGMENT: P",
    "id": 690,
    "declarations": "t: ELLIPSE; P: LINESEGMENT",
    "facts": "RealAxis(t) = P"
},
{
    "assertion": "TangentPoint ( OverlappingLine ( MinorAxis ( ELLIPSE: c ) ), CIRCLE: Z ) equals POINT: Z",
    "id": 691,
    "declarations": "c: ELLIPSE; Z: CIRCLE; Z: POINT",
    "facts": "TangentPoint(OverlappingLine(MinorAxis(c)), Z) = Z"
},
{
    "assertion": "XCoordinate ( Circumcenter ( TRIANGLE: S ) ) equals InterReciprocal ( NUMBER: 26 )",
    "id": 692,
    "declarations": "S: TRIANGLE; 26: NUMBER",
    "facts": "XCoordinate(Circumcenter(S)) = InterReciprocal(26)"
},
{
    "assertion": "Radius ( CIRCLE: U ) equals Quadrant ( Circumcenter ( TRIANGLE: v ) )",
    "id": 693,
    "declarations": "U: CIRCLE; v: TRIANGLE",
    "facts": "Radius(U) = Quadrant(Circumcenter(v))"
},
{
    "assertion": "FootPoint ( TangentOnPoint ( POINT: W, CURVE: H ), LINE: y ) equals LowerFocus ( CONICSECTION: Q )",
    "id": 695,
    "declarations": "W: POINT; H: CURVE; y: LINE; Q: CONICSECTION",
    "facts": "FootPoint(TangentOnPoint(W, H), y) = LowerFocus(Q)"
},
{
    "assertion": "Abs ( LINESEGMENT: I ) equals NUMBER: -79",
    "id": 696,
    "declarations": "I: LINESEGMENT; -79: NUMBER",
    "facts": "Abs(I) = -79"
},
{
    "assertion": "Max ( sqrt ( NUMBER: -23 ) ) equals Quadrant ( POINT: I )",
    "id": 697,
    "declarations": "-23: NUMBER; I: POINT",
    "facts": "Max(sqrt(-23)) = Quadrant(I)"
},
{
    "assertion": "YCoordinate ( RightFocus ( CONICSECTION: X ) ) equals NUMBER: 59",
    "id": 698,
    "declarations": "X: CONICSECTION; 59: NUMBER",
    "facts": "YCoordinate(RightFocus(X)) = 59"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: X ) equals LINESEGMENT: l",
    "id": 699,
    "declarations": "X: ELLIPSE; l: LINESEGMENT",
    "facts": "ImaginaryAxis(X) = l"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: P ) equals Quadrant ( POINT: w )",
    "id": 700,
    "declarations": "P: CONICSECTION; w: POINT",
    "facts": "HalfFocalLength(P) = Quadrant(w)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: I ) equals Orthocenter ( TRIANGLE: l )",
    "id": 701,
    "declarations": "I: LINESEGMENT; l: TRIANGLE",
    "facts": "MidPoint(I) = Orthocenter(l)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: e ) equals POINT: D",
    "id": 702,
    "declarations": "e: LINESEGMENT; D: POINT",
    "facts": "MidPoint(e) = D"
},
{
    "assertion": "Min ( Perimeter ( CONICSECTION: p ) ) equals NUMBER: 15",
    "id": 703,
    "declarations": "p: CONICSECTION; 15: NUMBER",
    "facts": "Min(Perimeter(p)) = 15"
},
{
    "assertion": "Expression ( CURVE: F ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 704,
    "declarations": "F: CURVE; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(F) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "XCoordinate ( POINT: b ) equals FocalLength ( CONICSECTION: C )",
    "id": 705,
    "declarations": "b: POINT; C: CONICSECTION",
    "facts": "XCoordinate(b) = FocalLength(C)"
},
{
    "assertion": "InterceptChord ( LINE: K, CONICSECTION: D ) equals LINESEGMENT: Q",
    "id": 706,
    "declarations": "K: LINE; D: CONICSECTION; Q: LINESEGMENT",
    "facts": "InterceptChord(K, D) = Q"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: s ) equals RightDirectrix ( CONICSECTION: C )",
    "id": 707,
    "declarations": "s: CONICSECTION; C: CONICSECTION",
    "facts": "LeftDirectrix(s) = RightDirectrix(C)"
},
{
    "assertion": "RightFocus ( CONICSECTION: b ) equals Incenter ( TRIANGLE: h )",
    "id": 708,
    "declarations": "b: CONICSECTION; h: TRIANGLE",
    "facts": "RightFocus(b) = Incenter(h)"
},
{
    "assertion": "DotProduct ( VECTOR: O, VECTOR: z ) equals NUMBER: 93",
    "id": 709,
    "declarations": "O: VECTOR; z: VECTOR; 93: NUMBER",
    "facts": "DotProduct(O, z) = 93"
},
{
    "assertion": "AngleOf ( POINT: d, RightVertex ( CONICSECTION: s ), POINT: W ) equals ApplyUnit ( Perimeter ( CONICSECTION: O ), DEGREESTR: degree )",
    "id": 710,
    "declarations": "d: POINT; s: CONICSECTION; W: POINT; O: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(d, RightVertex(s), W) = ApplyUnit(Perimeter(O), degree)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: n ) equals LeftDirectrix ( CONICSECTION: O )",
    "id": 711,
    "declarations": "n: CONICSECTION; O: CONICSECTION",
    "facts": "RightDirectrix(n) = LeftDirectrix(O)"
},
{
    "assertion": "PointOnCurve ( Orthocenter ( TRIANGLE: a ), Locus ( POINT: U ) ) equals BOOL: True",
    "id": 712,
    "declarations": "a: TRIANGLE; U: POINT; True: BOOL",
    "facts": "PointOnCurve(Orthocenter(a), Locus(U)) = True"
},
{
    "assertion": "Projection ( POINT: T, LINE: q ) equals Incenter ( TRIANGLE: k )",
    "id": 713,
    "declarations": "T: POINT; q: LINE; k: TRIANGLE",
    "facts": "Projection(T, q) = Incenter(k)"
},
{
    "assertion": "FootPoint ( TangentOfPoint ( POINT: B, CURVE: l ), LINE: i ) equals POINT: P",
    "id": 714,
    "declarations": "B: POINT; l: CURVE; i: LINE; P: POINT",
    "facts": "FootPoint(TangentOfPoint(B, l), i) = P"
},
{
    "assertion": "Radius ( CIRCLE: m ) equals Abs ( LINESEGMENT: T )",
    "id": 715,
    "declarations": "m: CIRCLE; T: LINESEGMENT",
    "facts": "Radius(m) = Abs(T)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: M ) equals Radius ( CIRCLE: l )",
    "id": 716,
    "declarations": "M: CONICSECTION; l: CIRCLE",
    "facts": "Eccentricity(M) = Radius(l)"
},
{
    "assertion": "Abs ( InterceptChord ( LeftDirectrix ( CONICSECTION: i ), CONICSECTION: W ) ) equals YCoordinate ( LeftFocus ( CONICSECTION: N ) )",
    "id": 717,
    "declarations": "i: CONICSECTION; W: CONICSECTION; N: CONICSECTION",
    "facts": "Abs(InterceptChord(LeftDirectrix(i), W)) = YCoordinate(LeftFocus(N))"
},
{
    "assertion": "IsTangent ( LINE: i, CONICSECTION: b ) equals BOOL: False",
    "id": 718,
    "declarations": "i: LINE; b: CONICSECTION; False: BOOL",
    "facts": "IsTangent(i, b) = False"
},
{
    "assertion": "TangentOnPoint ( RightFocus ( CONICSECTION: P ), CURVE: E ) equals LINE: U",
    "id": 719,
    "declarations": "P: CONICSECTION; E: CURVE; U: LINE",
    "facts": "TangentOnPoint(RightFocus(P), E) = U"
},
{
    "assertion": "Circumcenter ( TRIANGLE: e ) equals POINT: n",
    "id": 720,
    "declarations": "e: TRIANGLE; n: POINT",
    "facts": "Circumcenter(e) = n"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: r, TRIANGLE: T ) equals BOOL: False",
    "id": 721,
    "declarations": "r: CIRCLE; T: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(r, T) = False"
},
{
    "assertion": "FocalLength ( CONICSECTION: a ) equals Diameter ( CIRCLE: Q )",
    "id": 722,
    "declarations": "a: CONICSECTION; Q: CIRCLE",
    "facts": "FocalLength(a) = Diameter(Q)"
},
{
    "assertion": "XCoordinate ( POINT: V ) equals Area ( CONICSECTION: B )",
    "id": 723,
    "declarations": "V: POINT; B: CONICSECTION",
    "facts": "XCoordinate(V) = Area(B)"
},
{
    "assertion": "Intersection ( CURVE: O, CURVE: I ) equals Incenter ( TRIANGLE: W )",
    "id": 724,
    "declarations": "O: CURVE; I: CURVE; W: TRIANGLE",
    "facts": "Intersection(O, I) = Incenter(W)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: b ) equals CIRCLE: T",
    "id": 725,
    "declarations": "b: TRIANGLE; T: CIRCLE",
    "facts": "CircumCircle(b) = T"
},
{
    "assertion": "Incenter ( TRIANGLE: J ) equals POINT: g",
    "id": 726,
    "declarations": "J: TRIANGLE; g: POINT",
    "facts": "Incenter(J) = g"
},
{
    "assertion": "TangentPoint ( RightDirectrix ( CONICSECTION: W ), CircumCircle ( TRIANGLE: J ) ) equals FootPoint ( TangentOnPoint ( Projection ( POINT: W, LINE: B ), CURVE: H ), LINE: L )",
    "id": 727,
    "declarations": "W: CONICSECTION; J: TRIANGLE; W: POINT; B: LINE; H: CURVE; L: LINE",
    "facts": "TangentPoint(RightDirectrix(W), CircumCircle(J)) = FootPoint(TangentOnPoint(Projection(W, B), H), L)"
},
{
    "assertion": "Vertex ( CONICSECTION: b ) equals LeftVertex ( CONICSECTION: F )",
    "id": 728,
    "declarations": "b: CONICSECTION; F: CONICSECTION",
    "facts": "Vertex(b) = LeftVertex(F)"
},
{
    "assertion": "Projection ( RightVertex ( CONICSECTION: r ), PerpendicularBisector ( LINESEGMENT: y ) ) equals POINT: L",
    "id": 729,
    "declarations": "r: CONICSECTION; y: LINESEGMENT; L: POINT",
    "facts": "Projection(RightVertex(r), PerpendicularBisector(y)) = L"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: q ) equals Abs ( LINESEGMENT: G )",
    "id": 730,
    "declarations": "q: CONICSECTION; G: LINESEGMENT",
    "facts": "HalfFocalLength(q) = Abs(G)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: H, CONICSECTION: e ) equals BOOL: True",
    "id": 731,
    "declarations": "H: LINESEGMENT; e: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(H, e) = True"
},
{
    "assertion": "LocusEquation ( POINT: B ) equals LocusEquation ( RightVertex ( CONICSECTION: w ) )",
    "id": 732,
    "declarations": "B: POINT; w: CONICSECTION",
    "facts": "LocusEquation(B) = LocusEquation(RightVertex(w))"
},
{
    "assertion": "Radius ( CIRCLE: b ) equals NUMBER: -23",
    "id": 733,
    "declarations": "b: CIRCLE; -23: NUMBER",
    "facts": "Radius(b) = -23"
},
{
    "assertion": "LeftVertex ( CONICSECTION: O ) equals LowerVertex ( CONICSECTION: V )",
    "id": 734,
    "declarations": "O: CONICSECTION; V: CONICSECTION",
    "facts": "LeftVertex(O) = LowerVertex(V)"
},
{
    "assertion": "Between ( POINT: U, POINT: F, LeftFocus ( CONICSECTION: p ) ) equals BOOL: False",
    "id": 735,
    "declarations": "U: POINT; F: POINT; p: CONICSECTION; False: BOOL",
    "facts": "Between(U, F, LeftFocus(p)) = False"
},
{
    "assertion": "Quadrant ( Incenter ( TRIANGLE: v ) ) equals Eccentricity ( CONICSECTION: D )",
    "id": 736,
    "declarations": "v: TRIANGLE; D: CONICSECTION",
    "facts": "Quadrant(Incenter(v)) = Eccentricity(D)"
},
{
    "assertion": "RightVertex ( CONICSECTION: x ) equals RightVertex ( CONICSECTION: g )",
    "id": 737,
    "declarations": "x: CONICSECTION; g: CONICSECTION",
    "facts": "RightVertex(x) = RightVertex(g)"
},
{
    "assertion": "Inclination ( OverlappingLine ( ImaginaryAxis ( ELLIPSE: I ) ) ) equals lg ( lg ( Abs ( LINESEGMENT: U ) ) )",
    "id": 738,
    "declarations": "I: ELLIPSE; U: LINESEGMENT",
    "facts": "Inclination(OverlappingLine(ImaginaryAxis(I))) = lg(lg(Abs(U)))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: n ) equals POINT: C",
    "id": 739,
    "declarations": "n: CONICSECTION; C: POINT",
    "facts": "LeftFocus(n) = C"
},
{
    "assertion": "LineSegmentOf ( RightFocus ( CONICSECTION: Q ), POINT: J ) equals LINESEGMENT: o",
    "id": 740,
    "declarations": "Q: CONICSECTION; J: POINT; o: LINESEGMENT",
    "facts": "LineSegmentOf(RightFocus(Q), J) = o"
},
{
    "assertion": "Endpoint ( LINESEGMENT: z ) equals POINT: j",
    "id": 741,
    "declarations": "z: LINESEGMENT; j: POINT",
    "facts": "Endpoint(z) = j"
},
{
    "assertion": "sqrt ( Abs ( LINESEGMENT: L ) ) equals Length ( LINESEGMENT: L )",
    "id": 742,
    "declarations": "L: LINESEGMENT; L: LINESEGMENT",
    "facts": "sqrt(Abs(L)) = Length(L)"
},
{
    "assertion": "YCoordinate ( LeftFocus ( CONICSECTION: f ) ) equals Diameter ( CIRCLE: i )",
    "id": 743,
    "declarations": "f: CONICSECTION; i: CIRCLE",
    "facts": "YCoordinate(LeftFocus(f)) = Diameter(i)"
},
{
    "assertion": "Vertex ( CONICSECTION: F ) equals Center ( CONICSECTION: e )",
    "id": 744,
    "declarations": "F: CONICSECTION; e: CONICSECTION",
    "facts": "Vertex(F) = Center(e)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: c, TRIANGLE: v ) equals BOOL: False",
    "id": 745,
    "declarations": "c: CIRCLE; v: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(c, v) = False"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: U ) equals LINE: B",
    "id": 747,
    "declarations": "U: CONICSECTION; B: LINE",
    "facts": "RightDirectrix(U) = B"
},
{
    "assertion": "IsParallel ( LINE: T, LINE: H ) equals BOOL: False",
    "id": 748,
    "declarations": "T: LINE; H: LINE; False: BOOL",
    "facts": "IsParallel(T, H) = False"
},
{
    "assertion": "Eccentricity ( CONICSECTION: I ) equals NUMBER: 74",
    "id": 749,
    "declarations": "I: CONICSECTION; 74: NUMBER",
    "facts": "Eccentricity(I) = 74"
},
{
    "assertion": "MinorAxis ( ELLIPSE: E ) equals LINESEGMENT: X",
    "id": 750,
    "declarations": "E: ELLIPSE; X: LINESEGMENT",
    "facts": "MinorAxis(E) = X"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: g ) equals AXIS: yAxis",
    "id": 751,
    "declarations": "g: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(g) = yAxis"
},
{
    "assertion": "LeftVertex ( CONICSECTION: D ) equals POINT: Y",
    "id": 752,
    "declarations": "D: CONICSECTION; Y: POINT",
    "facts": "LeftVertex(D) = Y"
},
{
    "assertion": "Abs ( LINESEGMENT: e ) equals NUMBER: -88",
    "id": 753,
    "declarations": "e: LINESEGMENT; -88: NUMBER",
    "facts": "Abs(e) = -88"
},
{
    "assertion": "Vertex ( CONICSECTION: V ) equals POINT: D",
    "id": 754,
    "declarations": "V: CONICSECTION; D: POINT",
    "facts": "Vertex(V) = D"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: X ) ) equals LeftFocus ( CONICSECTION: L )",
    "id": 755,
    "declarations": "X: ELLIPSE; L: CONICSECTION",
    "facts": "Endpoint(MajorAxis(X)) = LeftFocus(L)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: U ) equals Incenter ( TRIANGLE: i )",
    "id": 756,
    "declarations": "U: CONICSECTION; i: TRIANGLE",
    "facts": "LeftVertex(U) = Incenter(i)"
},
{
    "assertion": "Center ( CONICSECTION: u ) equals POINT: u",
    "id": 757,
    "declarations": "u: CONICSECTION; u: POINT",
    "facts": "Center(u) = u"
},
{
    "assertion": "Vertex ( CONICSECTION: W ) equals POINT: S",
    "id": 758,
    "declarations": "W: CONICSECTION; S: POINT",
    "facts": "Vertex(W) = S"
},
{
    "assertion": "Perimeter ( CONICSECTION: d ) equals YCoordinate ( RightVertex ( CONICSECTION: x ) )",
    "id": 759,
    "declarations": "d: CONICSECTION; x: CONICSECTION",
    "facts": "Perimeter(d) = YCoordinate(RightVertex(x))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: r ) equals FootPoint ( LeftDirectrix ( CONICSECTION: I ), LINE: x )",
    "id": 760,
    "declarations": "r: TRIANGLE; I: CONICSECTION; x: LINE",
    "facts": "Circumcenter(r) = FootPoint(LeftDirectrix(I), x)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: P ) equals LINE: n",
    "id": 761,
    "declarations": "P: HYPERBOLA; n: LINE",
    "facts": "Asymptote(P) = n"
},
{
    "assertion": "YCoordinate ( POINT: S ) equals NUMBER: 92",
    "id": 762,
    "declarations": "S: POINT; 92: NUMBER",
    "facts": "YCoordinate(S) = 92"
},
{
    "assertion": "YCoordinate ( POINT: Z ) equals sqrt ( Length ( MinorAxis ( ELLIPSE: r ) ) )",
    "id": 763,
    "declarations": "Z: POINT; r: ELLIPSE",
    "facts": "YCoordinate(Z) = sqrt(Length(MinorAxis(r)))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: U ) equals LowerVertex ( CONICSECTION: Q )",
    "id": 764,
    "declarations": "U: CONICSECTION; Q: CONICSECTION",
    "facts": "UpperVertex(U) = LowerVertex(Q)"
},
{
    "assertion": "Locus ( FootPoint ( LINE: J, LINE: w ) ) equals CURVE: b",
    "id": 765,
    "declarations": "J: LINE; w: LINE; b: CURVE",
    "facts": "Locus(FootPoint(J, w)) = b"
},
{
    "assertion": "Quadrant ( POINT: Y ) equals lg ( Length ( LINESEGMENT: u ) )",
    "id": 766,
    "declarations": "Y: POINT; u: LINESEGMENT",
    "facts": "Quadrant(Y) = lg(Length(u))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: m, TRIANGLE: a ) equals BOOL: False",
    "id": 767,
    "declarations": "m: CIRCLE; a: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(m, a) = False"
},
{
    "assertion": "LocusEquation ( UpperVertex ( CONICSECTION: o ) ) equals EXPRESSION: x^2*space-*spacey^2*space=*space1",
    "id": 768,
    "declarations": "o: CONICSECTION; x^2*space-*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(UpperVertex(o)) = x^2*space-*spacey^2*space=*space1"
},
{
    "assertion": "UpperFocus ( CONICSECTION: L ) equals Projection ( Projection ( UpperFocus ( CONICSECTION: I ), LeftDirectrix ( CONICSECTION: Y ) ), LINE: l )",
    "id": 769,
    "declarations": "L: CONICSECTION; I: CONICSECTION; Y: CONICSECTION; l: LINE",
    "facts": "UpperFocus(L) = Projection(Projection(UpperFocus(I), LeftDirectrix(Y)), l)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: O ) equals LINE: C",
    "id": 770,
    "declarations": "O: HYPERBOLA; C: LINE",
    "facts": "Asymptote(O) = C"
},
{
    "assertion": "PerpendicularBisector ( MinorAxis ( ELLIPSE: W ) ) equals LINE: d",
    "id": 771,
    "declarations": "W: ELLIPSE; d: LINE",
    "facts": "PerpendicularBisector(MinorAxis(W)) = d"
},
{
    "assertion": "LineSegmentOf ( Orthocenter ( TRIANGLE: J ), POINT: u ) equals LINESEGMENT: X",
    "id": 772,
    "declarations": "J: TRIANGLE; u: POINT; X: LINESEGMENT",
    "facts": "LineSegmentOf(Orthocenter(J), u) = X"
},
{
    "assertion": "IsOutTangent ( CIRCLE: r, CIRCLE: S ) equals BOOL: False",
    "id": 773,
    "declarations": "r: CIRCLE; S: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(r, S) = False"
},
{
    "assertion": "Radius ( CIRCLE: B ) equals NUMBER: -63",
    "id": 774,
    "declarations": "B: CIRCLE; -63: NUMBER",
    "facts": "Radius(B) = -63"
},
{
    "assertion": "InterReciprocal ( NUMBER: 15 ) equals lg ( HalfFocalLength ( CONICSECTION: g ) )",
    "id": 775,
    "declarations": "15: NUMBER; g: CONICSECTION",
    "facts": "InterReciprocal(15) = lg(HalfFocalLength(g))"
},
{
    "assertion": "Expression ( CURVE: S ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 776,
    "declarations": "S: CURVE; y*space=*spacelog(x): EXPRESSION",
    "facts": "Expression(S) = y*space=*spacelog(x)"
},
{
    "assertion": "Expression ( CURVE: i ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 777,
    "declarations": "i: CURVE; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(i) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "Intercept ( LINE: O, AXIS: xAxis ) equals NUMBER: -12",
    "id": 778,
    "declarations": "O: LINE; xAxis: AXIS; -12: NUMBER",
    "facts": "Intercept(O, xAxis) = -12"
},
{
    "assertion": "CircumCircle ( TRIANGLE: G ) equals CIRCLE: Q",
    "id": 779,
    "declarations": "G: TRIANGLE; Q: CIRCLE",
    "facts": "CircumCircle(G) = Q"
},
{
    "assertion": "IsPerpendicular ( LINE: i, LINE: O ) equals BOOL: True",
    "id": 780,
    "declarations": "i: LINE; O: LINE; True: BOOL",
    "facts": "IsPerpendicular(i, O) = True"
},
{
    "assertion": "UpperVertex ( CONICSECTION: i ) equals POINT: C",
    "id": 781,
    "declarations": "i: CONICSECTION; C: POINT",
    "facts": "UpperVertex(i) = C"
},
{
    "assertion": "PointOnCurve ( POINT: s, CURVE: M ) equals BOOL: False",
    "id": 782,
    "declarations": "s: POINT; M: CURVE; False: BOOL",
    "facts": "PointOnCurve(s, M) = False"
},
{
    "assertion": "RightPart ( HYPERBOLA: N ) equals CURVE: i",
    "id": 783,
    "declarations": "N: HYPERBOLA; i: CURVE",
    "facts": "RightPart(N) = i"
},
{
    "assertion": "Distance ( POINT: e, Orthocenter ( TRIANGLE: g ) ) equals HalfFocalLength ( CONICSECTION: g )",
    "id": 784,
    "declarations": "e: POINT; g: TRIANGLE; g: CONICSECTION",
    "facts": "Distance(e, Orthocenter(g)) = HalfFocalLength(g)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: O ) equals POINT: b",
    "id": 785,
    "declarations": "O: CONICSECTION; b: POINT",
    "facts": "UpperVertex(O) = b"
},
{
    "assertion": "Negation ( FocalLength ( CONICSECTION: W ) equals NUMBER: 97 ) equals BOOL: True",
    "id": 786,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "FootPoint ( LINE: L, LINE: E ) equals FootPoint ( PerpendicularBisector ( LINESEGMENT: q ), LINE: t )",
    "id": 787,
    "declarations": "L: LINE; E: LINE; q: LINESEGMENT; t: LINE",
    "facts": "FootPoint(L, E) = FootPoint(PerpendicularBisector(q), t)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: v ) equals RightVertex ( CONICSECTION: I )",
    "id": 788,
    "declarations": "v: CONICSECTION; I: CONICSECTION",
    "facts": "LeftFocus(v) = RightVertex(I)"
},
{
    "assertion": "Length ( LINESEGMENT: K ) equals XCoordinate ( POINT: I )",
    "id": 789,
    "declarations": "K: LINESEGMENT; I: POINT",
    "facts": "Length(K) = XCoordinate(I)"
},
{
    "assertion": "Intersection ( CURVE: w, CURVE: c ) equals POINT: b",
    "id": 790,
    "declarations": "w: CURVE; c: CURVE; b: POINT",
    "facts": "Intersection(w, c) = b"
},
{
    "assertion": "Circumcenter ( TriangleOf ( MidPoint ( LINESEGMENT: q ), POINT: D, Orthocenter ( TRIANGLE: B ) ) ) equals RightFocus ( CONICSECTION: V )",
    "id": 791,
    "declarations": "q: LINESEGMENT; D: POINT; B: TRIANGLE; V: CONICSECTION",
    "facts": "Circumcenter(TriangleOf(MidPoint(q), D, Orthocenter(B))) = RightFocus(V)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: A ) equals POINT: Z",
    "id": 792,
    "declarations": "A: CONICSECTION; Z: POINT",
    "facts": "LeftVertex(A) = Z"
},
{
    "assertion": "RightPart ( HYPERBOLA: C ) equals CURVE: c",
    "id": 793,
    "declarations": "C: HYPERBOLA; c: CURVE",
    "facts": "RightPart(C) = c"
},
{
    "assertion": "LineSegmentOf ( RightVertex ( CONICSECTION: p ), POINT: s ) equals RealAxis ( ELLIPSE: y )",
    "id": 794,
    "declarations": "p: CONICSECTION; s: POINT; y: ELLIPSE",
    "facts": "LineSegmentOf(RightVertex(p), s) = RealAxis(y)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: p, TRIANGLE: G ) equals BOOL: True",
    "id": 795,
    "declarations": "p: CIRCLE; G: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(p, G) = True"
},
{
    "assertion": "InterReciprocal ( NUMBER: 35 ) equals FocalLength ( CONICSECTION: s )",
    "id": 796,
    "declarations": "35: NUMBER; s: CONICSECTION",
    "facts": "InterReciprocal(35) = FocalLength(s)"
},
{
    "assertion": "FootPoint ( RightDirectrix ( CONICSECTION: D ), LineOf ( Center ( CONICSECTION: n ), POINT: S ) ) equals POINT: y",
    "id": 797,
    "declarations": "D: CONICSECTION; n: CONICSECTION; S: POINT; y: POINT",
    "facts": "FootPoint(RightDirectrix(D), LineOf(Center(n), S)) = y"
},
{
    "assertion": "Orthocenter ( TRIANGLE: T ) equals POINT: t",
    "id": 798,
    "declarations": "T: TRIANGLE; t: POINT",
    "facts": "Orthocenter(T) = t"
},
{
    "assertion": "Circumcenter ( TRIANGLE: d ) equals POINT: G",
    "id": 799,
    "declarations": "d: TRIANGLE; G: POINT",
    "facts": "Circumcenter(d) = G"
},
{
    "assertion": "And ( RightDirectrix ( CONICSECTION: Z ) equals LINE: v, RightFocus ( CONICSECTION: t ) equals UpperVertex ( CONICSECTION: i ) ) equals BOOL: False",
    "id": 800,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "CircumCircle ( TRIANGLE: V ) equals CIRCLE: l",
    "id": 801,
    "declarations": "V: TRIANGLE; l: CIRCLE",
    "facts": "CircumCircle(V) = l"
},
{
    "assertion": "LineSegmentOf ( POINT: V, POINT: s ) equals LINESEGMENT: F",
    "id": 802,
    "declarations": "V: POINT; s: POINT; F: LINESEGMENT",
    "facts": "LineSegmentOf(V, s) = F"
},
{
    "assertion": "FootPoint ( OverlappingLine ( LineSegmentOf ( Center ( CONICSECTION: D ), POINT: g ) ), RightDirectrix ( CONICSECTION: a ) ) equals FootPoint ( LINE: x, LineOf ( RightFocus ( CONICSECTION: G ), RightFocus ( CONICSECTION: b ) ) )",
    "id": 803,
    "declarations": "D: CONICSECTION; g: POINT; a: CONICSECTION; x: LINE; G: CONICSECTION; b: CONICSECTION",
    "facts": "FootPoint(OverlappingLine(LineSegmentOf(Center(D), g)), RightDirectrix(a)) = FootPoint(x, LineOf(RightFocus(G), RightFocus(b)))"
},
{
    "assertion": "FocalLength ( CONICSECTION: U ) equals InterReciprocal ( Inclination ( LINE: Q ) )",
    "id": 804,
    "declarations": "U: CONICSECTION; Q: LINE",
    "facts": "FocalLength(U) = InterReciprocal(Inclination(Q))"
},
{
    "assertion": "Incenter ( TRIANGLE: k ) equals UpperVertex ( CONICSECTION: F )",
    "id": 805,
    "declarations": "k: TRIANGLE; F: CONICSECTION",
    "facts": "Incenter(k) = UpperVertex(F)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: q ) equals LINE: K",
    "id": 806,
    "declarations": "q: CONICSECTION; K: LINE",
    "facts": "RightDirectrix(q) = K"
},
{
    "assertion": "PointOnCurve ( POINT: E, CURVE: g ) equals BOOL: False",
    "id": 807,
    "declarations": "E: POINT; g: CURVE; False: BOOL",
    "facts": "PointOnCurve(E, g) = False"
},
{
    "assertion": "IsOutTangent ( CIRCLE: D, CIRCLE: d ) equals BOOL: False",
    "id": 808,
    "declarations": "D: CIRCLE; d: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(D, d) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: D ) equals RightDirectrix ( CONICSECTION: R )",
    "id": 809,
    "declarations": "D: CONICSECTION; R: CONICSECTION",
    "facts": "Directrix(D) = RightDirectrix(R)"
},
{
    "assertion": "PerpendicularBisector ( InterceptChord ( LINE: j, CONICSECTION: D ) ) equals LINE: A",
    "id": 810,
    "declarations": "j: LINE; D: CONICSECTION; A: LINE",
    "facts": "PerpendicularBisector(InterceptChord(j, D)) = A"
},
{
    "assertion": "Quadrant ( POINT: M ) equals NUMBER: -51",
    "id": 811,
    "declarations": "M: POINT; -51: NUMBER",
    "facts": "Quadrant(M) = -51"
},
{
    "assertion": "IsInTangent ( CIRCLE: b, CIRCLE: n ) equals BOOL: False",
    "id": 812,
    "declarations": "b: CIRCLE; n: CIRCLE; False: BOOL",
    "facts": "IsInTangent(b, n) = False"
},
{
    "assertion": "FootPoint ( TangentOnPoint ( Center ( CONICSECTION: F ), CURVE: u ), LINE: E ) equals LeftFocus ( CONICSECTION: t )",
    "id": 813,
    "declarations": "F: CONICSECTION; u: CURVE; E: LINE; t: CONICSECTION",
    "facts": "FootPoint(TangentOnPoint(Center(F), u), E) = LeftFocus(t)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Q ) equals LeftDirectrix ( CONICSECTION: q )",
    "id": 814,
    "declarations": "Q: CONICSECTION; q: CONICSECTION",
    "facts": "LeftDirectrix(Q) = LeftDirectrix(q)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: B ) equals POINT: d",
    "id": 815,
    "declarations": "B: TRIANGLE; d: POINT",
    "facts": "Circumcenter(B) = d"
},
{
    "assertion": "Inclination ( OverlappingLine ( RealAxis ( ELLIPSE: L ) ) ) equals XCoordinate ( POINT: S )",
    "id": 816,
    "declarations": "L: ELLIPSE; S: POINT",
    "facts": "Inclination(OverlappingLine(RealAxis(L))) = XCoordinate(S)"
},
{
    "assertion": "Expression ( CURVE: V ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 817,
    "declarations": "V: CURVE; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "Expression(V) = x*space+*spacey*space=*space5"
},
{
    "assertion": "Directrix ( CONICSECTION: c ) equals LINE: j",
    "id": 818,
    "declarations": "c: CONICSECTION; j: LINE",
    "facts": "Directrix(c) = j"
},
{
    "assertion": "FootPoint ( LINE: i, LINE: e ) equals POINT: i",
    "id": 819,
    "declarations": "i: LINE; e: LINE; i: POINT",
    "facts": "FootPoint(i, e) = i"
},
{
    "assertion": "Locus ( LeftVertex ( CONICSECTION: z ) ) equals CURVE: j",
    "id": 820,
    "declarations": "z: CONICSECTION; j: CURVE",
    "facts": "Locus(LeftVertex(z)) = j"
},
{
    "assertion": "Orthocenter ( TRIANGLE: c ) equals MidPoint ( LINESEGMENT: B )",
    "id": 821,
    "declarations": "c: TRIANGLE; B: LINESEGMENT",
    "facts": "Orthocenter(c) = MidPoint(B)"
},
{
    "assertion": "LineSegmentOf ( POINT: a, POINT: i ) equals MinorAxis ( ELLIPSE: G )",
    "id": 822,
    "declarations": "a: POINT; i: POINT; G: ELLIPSE",
    "facts": "LineSegmentOf(a, i) = MinorAxis(G)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: c ) equals CURVE: A",
    "id": 823,
    "declarations": "c: HYPERBOLA; A: CURVE",
    "facts": "LeftPart(c) = A"
},
{
    "assertion": "Min ( Min ( Eccentricity ( CONICSECTION: j ) ) ) equals Quadrant ( Incenter ( TRIANGLE: H ) )",
    "id": 824,
    "declarations": "j: CONICSECTION; H: TRIANGLE",
    "facts": "Min(Min(Eccentricity(j))) = Quadrant(Incenter(H))"
},
{
    "assertion": "lg ( Length ( LINESEGMENT: h ) ) equals NUMBER: -43",
    "id": 825,
    "declarations": "h: LINESEGMENT; -43: NUMBER",
    "facts": "lg(Length(h)) = -43"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: S ) equals LINE: I",
    "id": 826,
    "declarations": "S: LINESEGMENT; I: LINE",
    "facts": "OverlappingLine(S) = I"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: k ), TRIANGLE: O ) equals BOOL: False",
    "id": 827,
    "declarations": "k: TRIANGLE; O: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(k), O) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: h ) equals POINT: b",
    "id": 828,
    "declarations": "h: CONICSECTION; b: POINT",
    "facts": "LeftVertex(h) = b"
},
{
    "assertion": "Negation ( RightVertex ( CONICSECTION: n ) equals POINT: n ) equals BOOL: True",
    "id": 829,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "And ( Max ( NUMBER: -16 ) equals Slope ( LINE: t ), RealAxis ( ELLIPSE: i ) equals MinorAxis ( ELLIPSE: N ) ) equals BOOL: False",
    "id": 830,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "OverlappingLine ( RealAxis ( ELLIPSE: k ) ) equals LINE: S",
    "id": 831,
    "declarations": "k: ELLIPSE; S: LINE",
    "facts": "OverlappingLine(RealAxis(k)) = S"
},
{
    "assertion": "MajorAxis ( ELLIPSE: e ) equals MinorAxis ( ELLIPSE: G )",
    "id": 832,
    "declarations": "e: ELLIPSE; G: ELLIPSE",
    "facts": "MajorAxis(e) = MinorAxis(G)"
},
{
    "assertion": "IsParallel ( LINE: m, LINE: T ) equals BOOL: False",
    "id": 833,
    "declarations": "m: LINE; T: LINE; False: BOOL",
    "facts": "IsParallel(m, T) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: A ) equals LeftFocus ( CONICSECTION: a )",
    "id": 834,
    "declarations": "A: TRIANGLE; a: CONICSECTION",
    "facts": "Incenter(A) = LeftFocus(a)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: c ) equals RightFocus ( CONICSECTION: M )",
    "id": 835,
    "declarations": "c: TRIANGLE; M: CONICSECTION",
    "facts": "Circumcenter(c) = RightFocus(M)"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: r ) ) equals POINT: O",
    "id": 836,
    "declarations": "r: ELLIPSE; O: POINT",
    "facts": "Endpoint(ImaginaryAxis(r)) = O"
},
{
    "assertion": "LocusEquation ( POINT: i ) equals EXPRESSION: y*space=*space3*x*space+*space2",
    "id": 837,
    "declarations": "i: POINT; y*space=*space3*x*space+*space2: EXPRESSION",
    "facts": "LocusEquation(i) = y*space=*space3*x*space+*space2"
},
{
    "assertion": "Directrix ( CONICSECTION: f ) equals LINE: Q",
    "id": 838,
    "declarations": "f: CONICSECTION; Q: LINE",
    "facts": "Directrix(f) = Q"
},
{
    "assertion": "UpperVertex ( CONICSECTION: r ) equals Incenter ( TRIANGLE: u )",
    "id": 839,
    "declarations": "r: CONICSECTION; u: TRIANGLE",
    "facts": "UpperVertex(r) = Incenter(u)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: a ) equals LINESEGMENT: T",
    "id": 840,
    "declarations": "a: ELLIPSE; T: LINESEGMENT",
    "facts": "MajorAxis(a) = T"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: a, CIRCLE: Q ) equals BOOL: False",
    "id": 841,
    "declarations": "a: LINESEGMENT; Q: CIRCLE; False: BOOL",
    "facts": "IsDiameter(a, Q) = False"
},
{
    "assertion": "MidPoint ( LINESEGMENT: E ) equals POINT: Q",
    "id": 842,
    "declarations": "E: LINESEGMENT; Q: POINT",
    "facts": "MidPoint(E) = Q"
},
{
    "assertion": "LowerVertex ( CONICSECTION: F ) equals POINT: s",
    "id": 843,
    "declarations": "F: CONICSECTION; s: POINT",
    "facts": "LowerVertex(F) = s"
},
{
    "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: C ) ) equals sqrt ( YCoordinate ( UpperVertex ( CONICSECTION: t ) ) )",
    "id": 844,
    "declarations": "C: CONICSECTION; t: CONICSECTION",
    "facts": "XCoordinate(UpperVertex(C)) = sqrt(YCoordinate(UpperVertex(t)))"
},
{
    "assertion": "InterceptChord ( LINE: L, CONICSECTION: E ) equals LINESEGMENT: c",
    "id": 845,
    "declarations": "L: LINE; E: CONICSECTION; c: LINESEGMENT",
    "facts": "InterceptChord(L, E) = c"
},
{
    "assertion": "LowerVertex ( CONICSECTION: j ) equals MidPoint ( LINESEGMENT: A )",
    "id": 846,
    "declarations": "j: CONICSECTION; A: LINESEGMENT",
    "facts": "LowerVertex(j) = MidPoint(A)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: U ) equals NUMBER: -20",
    "id": 847,
    "declarations": "U: CONICSECTION; -20: NUMBER",
    "facts": "HalfFocalLength(U) = -20"
},
{
    "assertion": "MinorAxis ( ELLIPSE: Q ) equals LINESEGMENT: M",
    "id": 848,
    "declarations": "Q: ELLIPSE; M: LINESEGMENT",
    "facts": "MinorAxis(Q) = M"
},
{
    "assertion": "MidPoint ( LINESEGMENT: S ) equals MidPoint ( RealAxis ( ELLIPSE: C ) )",
    "id": 849,
    "declarations": "S: LINESEGMENT; C: ELLIPSE",
    "facts": "MidPoint(S) = MidPoint(RealAxis(C))"
},
{
    "assertion": "Area ( CONICSECTION: N ) equals NUMBER: -45",
    "id": 850,
    "declarations": "N: CONICSECTION; -45: NUMBER",
    "facts": "Area(N) = -45"
},
{
    "assertion": "IsOutTangent ( CircumCircle ( TRIANGLE: v ), CIRCLE: n ) equals BOOL: False",
    "id": 851,
    "declarations": "v: TRIANGLE; n: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(CircumCircle(v), n) = False"
},
{
    "assertion": "XCoordinate ( POINT: t ) equals Abs ( RealAxis ( ELLIPSE: B ) )",
    "id": 852,
    "declarations": "t: POINT; B: ELLIPSE",
    "facts": "XCoordinate(t) = Abs(RealAxis(B))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: h ) equals Orthocenter ( TRIANGLE: X )",
    "id": 853,
    "declarations": "h: CONICSECTION; X: TRIANGLE",
    "facts": "UpperVertex(h) = Orthocenter(X)"
},
{
    "assertion": "Focus ( CONICSECTION: b ) equals UpperFocus ( CONICSECTION: Y )",
    "id": 854,
    "declarations": "b: CONICSECTION; Y: CONICSECTION",
    "facts": "Focus(b) = UpperFocus(Y)"
},
{
    "assertion": "Vertex ( CONICSECTION: U ) equals POINT: S",
    "id": 855,
    "declarations": "U: CONICSECTION; S: POINT",
    "facts": "Vertex(U) = S"
},
{
    "assertion": "Abs ( LINESEGMENT: T ) equals Abs ( ImaginaryAxis ( ELLIPSE: T ) )",
    "id": 856,
    "declarations": "T: LINESEGMENT; T: ELLIPSE",
    "facts": "Abs(T) = Abs(ImaginaryAxis(T))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: p ) equals POINT: a",
    "id": 857,
    "declarations": "p: CONICSECTION; a: POINT",
    "facts": "UpperFocus(p) = a"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: s ) equals LINE: C",
    "id": 858,
    "declarations": "s: LINESEGMENT; C: LINE",
    "facts": "PerpendicularBisector(s) = C"
},
{
    "assertion": "LowerVertex ( CONICSECTION: w ) equals POINT: w",
    "id": 859,
    "declarations": "w: CONICSECTION; w: POINT",
    "facts": "LowerVertex(w) = w"
},
{
    "assertion": "Negation ( SymmetryAxis ( CONICSECTION: k ) equals AXIS: xAxis ) equals BOOL: False",
    "id": 860,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Intercept ( LINE: b, AXIS: yAxis ) equals Area ( CONICSECTION: T )",
    "id": 861,
    "declarations": "b: LINE; yAxis: AXIS; T: CONICSECTION",
    "facts": "Intercept(b, yAxis) = Area(T)"
},
{
    "assertion": "RightPart ( HYPERBOLA: M ) equals CURVE: I",
    "id": 862,
    "declarations": "M: HYPERBOLA; I: CURVE",
    "facts": "RightPart(M) = I"
},
{
    "assertion": "Diameter ( CIRCLE: k ) equals Abs ( LINESEGMENT: c )",
    "id": 863,
    "declarations": "k: CIRCLE; c: LINESEGMENT",
    "facts": "Diameter(k) = Abs(c)"
},
{
    "assertion": "TangentOnPoint ( POINT: Z, CURVE: t ) equals LINE: b",
    "id": 864,
    "declarations": "Z: POINT; t: CURVE; b: LINE",
    "facts": "TangentOnPoint(Z, t) = b"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: J ) ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 865,
    "declarations": "J: HYPERBOLA; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(LeftPart(J)) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "LowerVertex ( CONICSECTION: k ) equals POINT: B",
    "id": 866,
    "declarations": "k: CONICSECTION; B: POINT",
    "facts": "LowerVertex(k) = B"
},
{
    "assertion": "FootPoint ( TangentOfPoint ( Center ( CONICSECTION: z ), Locus ( Center ( CONICSECTION: I ) ) ), RightDirectrix ( CONICSECTION: S ) ) equals Orthocenter ( TRIANGLE: h )",
    "id": 867,
    "declarations": "z: CONICSECTION; I: CONICSECTION; S: CONICSECTION; h: TRIANGLE",
    "facts": "FootPoint(TangentOfPoint(Center(z), Locus(Center(I))), RightDirectrix(S)) = Orthocenter(h)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: l ) equals POINT: F",
    "id": 868,
    "declarations": "l: CONICSECTION; F: POINT",
    "facts": "LeftFocus(l) = F"
},
{
    "assertion": "RightPart ( HYPERBOLA: p ) equals CURVE: e",
    "id": 869,
    "declarations": "p: HYPERBOLA; e: CURVE",
    "facts": "RightPart(p) = e"
},
{
    "assertion": "sqrt ( Diameter ( CIRCLE: O ) ) equals NUMBER: 31",
    "id": 870,
    "declarations": "O: CIRCLE; 31: NUMBER",
    "facts": "sqrt(Diameter(O)) = 31"
},
{
    "assertion": "Vertex ( CONICSECTION: b ) equals LowerVertex ( CONICSECTION: C )",
    "id": 871,
    "declarations": "b: CONICSECTION; C: CONICSECTION",
    "facts": "Vertex(b) = LowerVertex(C)"
},
{
    "assertion": "FootPoint ( RightDirectrix ( CONICSECTION: F ), TangentOnPoint ( POINT: z, LeftPart ( HYPERBOLA: O ) ) ) equals Circumcenter ( TRIANGLE: D )",
    "id": 872,
    "declarations": "F: CONICSECTION; z: POINT; O: HYPERBOLA; D: TRIANGLE",
    "facts": "FootPoint(RightDirectrix(F), TangentOnPoint(z, LeftPart(O))) = Circumcenter(D)"
},
{
    "assertion": "Area ( CONICSECTION: u ) equals NUMBER: 42",
    "id": 873,
    "declarations": "u: CONICSECTION; 42: NUMBER",
    "facts": "Area(u) = 42"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: d ) equals LINE: K",
    "id": 874,
    "declarations": "d: CONICSECTION; K: LINE",
    "facts": "LeftDirectrix(d) = K"
},
{
    "assertion": "Projection ( Projection ( Center ( CONICSECTION: H ), LINE: Z ), LeftDirectrix ( CONICSECTION: Q ) ) equals LowerFocus ( CONICSECTION: v )",
    "id": 875,
    "declarations": "H: CONICSECTION; Z: LINE; Q: CONICSECTION; v: CONICSECTION",
    "facts": "Projection(Projection(Center(H), Z), LeftDirectrix(Q)) = LowerFocus(v)"
},
{
    "assertion": "IsCircumCircle ( CircumCircle ( TRIANGLE: A ), TRIANGLE: K ) equals BOOL: True",
    "id": 876,
    "declarations": "A: TRIANGLE; K: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(CircumCircle(A), K) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: U ) equals Incenter ( TRIANGLE: S )",
    "id": 877,
    "declarations": "U: TRIANGLE; S: TRIANGLE",
    "facts": "Incenter(U) = Incenter(S)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: m ) equals Incenter ( TRIANGLE: o )",
    "id": 878,
    "declarations": "m: LINESEGMENT; o: TRIANGLE",
    "facts": "MidPoint(m) = Incenter(o)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: k ) equals POINT: M",
    "id": 879,
    "declarations": "k: CONICSECTION; M: POINT",
    "facts": "LowerFocus(k) = M"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: P ) equals LINE: Y",
    "id": 880,
    "declarations": "P: CONICSECTION; Y: LINE",
    "facts": "LeftDirectrix(P) = Y"
},
{
    "assertion": "Perimeter ( CONICSECTION: N ) equals NUMBER: 57",
    "id": 881,
    "declarations": "N: CONICSECTION; 57: NUMBER",
    "facts": "Perimeter(N) = 57"
},
{
    "assertion": "FootPoint ( TangentOnPoint ( LeftVertex ( CONICSECTION: C ), RightPart ( HYPERBOLA: W ) ), LINE: f ) equals POINT: A",
    "id": 882,
    "declarations": "C: CONICSECTION; W: HYPERBOLA; f: LINE; A: POINT",
    "facts": "FootPoint(TangentOnPoint(LeftVertex(C), RightPart(W)), f) = A"
},
{
    "assertion": "IsParallel ( PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: h ) ), LINE: m ) equals BOOL: True",
    "id": 883,
    "declarations": "h: ELLIPSE; m: LINE; True: BOOL",
    "facts": "IsParallel(PerpendicularBisector(ImaginaryAxis(h)), m) = True"
},
{
    "assertion": "Area ( CONICSECTION: g ) equals NUMBER: 75",
    "id": 884,
    "declarations": "g: CONICSECTION; 75: NUMBER",
    "facts": "Area(g) = 75"
},
{
    "assertion": "Length ( RealAxis ( ELLIPSE: h ) ) equals NUMBER: -25",
    "id": 885,
    "declarations": "h: ELLIPSE; -25: NUMBER",
    "facts": "Length(RealAxis(h)) = -25"
},
{
    "assertion": "Expression ( CURVE: Y ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 886,
    "declarations": "Y: CURVE; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "Expression(Y) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "CircumCircle ( TRIANGLE: p ) equals CIRCLE: Y",
    "id": 887,
    "declarations": "p: TRIANGLE; Y: CIRCLE",
    "facts": "CircumCircle(p) = Y"
},
{
    "assertion": "IsParallel ( LINE: R, LINE: q ) equals BOOL: False",
    "id": 888,
    "declarations": "R: LINE; q: LINE; False: BOOL",
    "facts": "IsParallel(R, q) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: E ) equals POINT: h",
    "id": 889,
    "declarations": "E: CONICSECTION; h: POINT",
    "facts": "RightFocus(E) = h"
},
{
    "assertion": "VectorOf ( POINT: p, POINT: L ) equals VECTOR: J",
    "id": 890,
    "declarations": "p: POINT; L: POINT; J: VECTOR",
    "facts": "VectorOf(p, L) = J"
},
{
    "assertion": "Projection ( RightFocus ( CONICSECTION: W ), LINE: E ) equals POINT: q",
    "id": 891,
    "declarations": "W: CONICSECTION; E: LINE; q: POINT",
    "facts": "Projection(RightFocus(W), E) = q"
},
{
    "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: i ) ) equals NUMBER: 72",
    "id": 892,
    "declarations": "i: CONICSECTION; 72: NUMBER",
    "facts": "YCoordinate(UpperVertex(i)) = 72"
},
{
    "assertion": "IsPerpendicular ( LeftDirectrix ( CONICSECTION: Y ), LineOf ( Center ( CONICSECTION: a ), POINT: V ) ) equals BOOL: True",
    "id": 893,
    "declarations": "Y: CONICSECTION; a: CONICSECTION; V: POINT; True: BOOL",
    "facts": "IsPerpendicular(LeftDirectrix(Y), LineOf(Center(a), V)) = True"
},
{
    "assertion": "TangentOnPoint ( LeftVertex ( CONICSECTION: q ), CURVE: j ) equals PerpendicularBisector ( LINESEGMENT: r )",
    "id": 894,
    "declarations": "q: CONICSECTION; j: CURVE; r: LINESEGMENT",
    "facts": "TangentOnPoint(LeftVertex(q), j) = PerpendicularBisector(r)"
},
{
    "assertion": "IsPerpendicular ( LINE: K, LINE: B ) equals BOOL: True",
    "id": 895,
    "declarations": "K: LINE; B: LINE; True: BOOL",
    "facts": "IsPerpendicular(K, B) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: x ) equals LINE: l",
    "id": 896,
    "declarations": "x: CONICSECTION; l: LINE",
    "facts": "RightDirectrix(x) = l"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: C ) equals LINE: n",
    "id": 897,
    "declarations": "C: LINESEGMENT; n: LINE",
    "facts": "OverlappingLine(C) = n"
},
{
    "assertion": "Center ( CONICSECTION: n ) equals POINT: N",
    "id": 898,
    "declarations": "n: CONICSECTION; N: POINT",
    "facts": "Center(n) = N"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: n ) equals YCoordinate ( POINT: n )",
    "id": 899,
    "declarations": "n: CONICSECTION; n: POINT",
    "facts": "HalfFocalLength(n) = YCoordinate(n)"
},
{
    "assertion": "XCoordinate ( Center ( CONICSECTION: D ) ) equals XCoordinate ( UpperFocus ( CONICSECTION: L ) )",
    "id": 900,
    "declarations": "D: CONICSECTION; L: CONICSECTION",
    "facts": "XCoordinate(Center(D)) = XCoordinate(UpperFocus(L))"
},
{
    "assertion": "Vertex ( CONICSECTION: c ) equals POINT: Q",
    "id": 901,
    "declarations": "c: CONICSECTION; Q: POINT",
    "facts": "Vertex(c) = Q"
},
{
    "assertion": "Eccentricity ( CONICSECTION: e ) equals Min ( Inclination ( LINE: P ) )",
    "id": 902,
    "declarations": "e: CONICSECTION; P: LINE",
    "facts": "Eccentricity(e) = Min(Inclination(P))"
},
{
    "assertion": "TangentOfPoint ( LowerVertex ( CONICSECTION: L ), CURVE: W ) equals LINE: N",
    "id": 903,
    "declarations": "L: CONICSECTION; W: CURVE; N: LINE",
    "facts": "TangentOfPoint(LowerVertex(L), W) = N"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: W, TRIANGLE: O ) equals BOOL: True",
    "id": 904,
    "declarations": "W: CIRCLE; O: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(W, O) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: D ) equals POINT: B",
    "id": 905,
    "declarations": "D: TRIANGLE; B: POINT",
    "facts": "Orthocenter(D) = B"
},
{
    "assertion": "Endpoint ( LINESEGMENT: j ) equals LowerVertex ( CONICSECTION: L )",
    "id": 906,
    "declarations": "j: LINESEGMENT; L: CONICSECTION",
    "facts": "Endpoint(j) = LowerVertex(L)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: P ) equals AXIS: xAxis",
    "id": 907,
    "declarations": "P: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(P) = xAxis"
},
{
    "assertion": "YCoordinate ( LowerFocus ( CONICSECTION: Z ) ) equals Quadrant ( POINT: w )",
    "id": 908,
    "declarations": "Z: CONICSECTION; w: POINT",
    "facts": "YCoordinate(LowerFocus(Z)) = Quadrant(w)"
},
{
    "assertion": "Intersection ( Locus ( LeftFocus ( CONICSECTION: r ) ), CURVE: k ) equals MidPoint ( LINESEGMENT: z )",
    "id": 909,
    "declarations": "r: CONICSECTION; k: CURVE; z: LINESEGMENT",
    "facts": "Intersection(Locus(LeftFocus(r)), k) = MidPoint(z)"
},
{
    "assertion": "FocalLength ( CONICSECTION: N ) equals Diameter ( CircumCircle ( TRIANGLE: I ) )",
    "id": 910,
    "declarations": "N: CONICSECTION; I: TRIANGLE",
    "facts": "FocalLength(N) = Diameter(CircumCircle(I))"
},
{
    "assertion": "IsTangent ( LeftDirectrix ( CONICSECTION: v ), CONICSECTION: x ) equals BOOL: True",
    "id": 911,
    "declarations": "v: CONICSECTION; x: CONICSECTION; True: BOOL",
    "facts": "IsTangent(LeftDirectrix(v), x) = True"
},
{
    "assertion": "Diameter ( CIRCLE: w ) equals Radius ( CIRCLE: c )",
    "id": 912,
    "declarations": "w: CIRCLE; c: CIRCLE",
    "facts": "Diameter(w) = Radius(c)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: y ) equals LINESEGMENT: i",
    "id": 913,
    "declarations": "y: ELLIPSE; i: LINESEGMENT",
    "facts": "ImaginaryAxis(y) = i"
},
{
    "assertion": "Center ( CONICSECTION: D ) equals Orthocenter ( TRIANGLE: v )",
    "id": 914,
    "declarations": "D: CONICSECTION; v: TRIANGLE",
    "facts": "Center(D) = Orthocenter(v)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: c ) equals TangentOnPoint ( Incenter ( TRIANGLE: E ), CURVE: e )",
    "id": 915,
    "declarations": "c: LINESEGMENT; E: TRIANGLE; e: CURVE",
    "facts": "OverlappingLine(c) = TangentOnPoint(Incenter(E), e)"
},
{
    "assertion": "RightVertex ( CONICSECTION: y ) equals POINT: d",
    "id": 917,
    "declarations": "y: CONICSECTION; d: POINT",
    "facts": "RightVertex(y) = d"
},
{
    "assertion": "OverlappingLine ( ImaginaryAxis ( ELLIPSE: b ) ) equals LINE: a",
    "id": 918,
    "declarations": "b: ELLIPSE; a: LINE",
    "facts": "OverlappingLine(ImaginaryAxis(b)) = a"
},
{
    "assertion": "Max ( Slope ( LINE: X ) ) equals NUMBER: -61",
    "id": 919,
    "declarations": "X: LINE; -61: NUMBER",
    "facts": "Max(Slope(X)) = -61"
},
{
    "assertion": "Max ( NUMBER: 73 ) equals NUMBER: 74",
    "id": 920,
    "declarations": "73: NUMBER; 74: NUMBER",
    "facts": "Max(73) = 74"
},
{
    "assertion": "DotProduct ( VECTOR: O, VECTOR: m ) equals XCoordinate ( RightFocus ( CONICSECTION: Y ) )",
    "id": 921,
    "declarations": "O: VECTOR; m: VECTOR; Y: CONICSECTION",
    "facts": "DotProduct(O, m) = XCoordinate(RightFocus(Y))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: S ) equals LINESEGMENT: h",
    "id": 922,
    "declarations": "S: ELLIPSE; h: LINESEGMENT",
    "facts": "MajorAxis(S) = h"
},
{
    "assertion": "CircumCircle ( TRIANGLE: e ) equals CIRCLE: K",
    "id": 923,
    "declarations": "e: TRIANGLE; K: CIRCLE",
    "facts": "CircumCircle(e) = K"
},
{
    "assertion": "Distance ( POINT: P, POINT: Q ) equals lg ( NUMBER: -8 )",
    "id": 924,
    "declarations": "P: POINT; Q: POINT; -8: NUMBER",
    "facts": "Distance(P, Q) = lg(-8)"
},
{
    "assertion": "Quadrant ( Center ( CONICSECTION: z ) ) equals DotProduct ( VECTOR: d, VECTOR: d )",
    "id": 925,
    "declarations": "z: CONICSECTION; d: VECTOR; d: VECTOR",
    "facts": "Quadrant(Center(z)) = DotProduct(d, d)"
},
{
    "assertion": "Abs ( LINESEGMENT: Q ) equals Min ( NUMBER: -29 )",
    "id": 926,
    "declarations": "Q: LINESEGMENT; -29: NUMBER",
    "facts": "Abs(Q) = Min(-29)"
},
{
    "assertion": "LineSegmentOf ( RightFocus ( CONICSECTION: p ), POINT: A ) equals MinorAxis ( ELLIPSE: s )",
    "id": 927,
    "declarations": "p: CONICSECTION; A: POINT; s: ELLIPSE",
    "facts": "LineSegmentOf(RightFocus(p), A) = MinorAxis(s)"
},
{
    "assertion": "RealAxis ( ELLIPSE: N ) equals LINESEGMENT: u",
    "id": 928,
    "declarations": "N: ELLIPSE; u: LINESEGMENT",
    "facts": "RealAxis(N) = u"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: D ) equals AXIS: yAxis",
    "id": 929,
    "declarations": "D: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(D) = yAxis"
},
{
    "assertion": "IsTangent ( LINE: a, CONICSECTION: F ) equals BOOL: True",
    "id": 930,
    "declarations": "a: LINE; F: CONICSECTION; True: BOOL",
    "facts": "IsTangent(a, F) = True"
},
{
    "assertion": "Projection ( POINT: n, LINE: L ) equals POINT: v",
    "id": 931,
    "declarations": "n: POINT; L: LINE; v: POINT",
    "facts": "Projection(n, L) = v"
},
{
    "assertion": "Slope ( LINE: i ) equals Min ( sqrt ( YCoordinate ( RightVertex ( CONICSECTION: p ) ) ) )",
    "id": 932,
    "declarations": "i: LINE; p: CONICSECTION",
    "facts": "Slope(i) = Min(sqrt(YCoordinate(RightVertex(p))))"
},
{
    "assertion": "IsPerpendicular ( LINE: E, LINE: Y ) equals BOOL: False",
    "id": 933,
    "declarations": "E: LINE; Y: LINE; False: BOOL",
    "facts": "IsPerpendicular(E, Y) = False"
},
{
    "assertion": "Area ( CONICSECTION: j ) equals NUMBER: 77",
    "id": 934,
    "declarations": "j: CONICSECTION; 77: NUMBER",
    "facts": "Area(j) = 77"
},
{
    "assertion": "sqrt ( InterReciprocal ( InterReciprocal ( HalfFocalLength ( CONICSECTION: h ) ) ) ) equals Quadrant ( LowerVertex ( CONICSECTION: D ) )",
    "id": 935,
    "declarations": "h: CONICSECTION; D: CONICSECTION",
    "facts": "sqrt(InterReciprocal(InterReciprocal(HalfFocalLength(h)))) = Quadrant(LowerVertex(D))"
},
{
    "assertion": "InterceptChord ( LINE: R, CONICSECTION: d ) equals LineSegmentOf ( RightVertex ( CONICSECTION: u ), POINT: X )",
    "id": 936,
    "declarations": "R: LINE; d: CONICSECTION; u: CONICSECTION; X: POINT",
    "facts": "InterceptChord(R, d) = LineSegmentOf(RightVertex(u), X)"
},
{
    "assertion": "PerpendicularBisector ( MinorAxis ( ELLIPSE: W ) ) equals LINE: N",
    "id": 937,
    "declarations": "W: ELLIPSE; N: LINE",
    "facts": "PerpendicularBisector(MinorAxis(W)) = N"
},
{
    "assertion": "MajorAxis ( ELLIPSE: w ) equals RealAxis ( ELLIPSE: T )",
    "id": 938,
    "declarations": "w: ELLIPSE; T: ELLIPSE",
    "facts": "MajorAxis(w) = RealAxis(T)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: b, TRIANGLE: c ) equals BOOL: True",
    "id": 939,
    "declarations": "b: CIRCLE; c: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(b, c) = True"
},
{
    "assertion": "sqrt ( NUMBER: -95 ) equals lg ( NUMBER: -39 )",
    "id": 940,
    "declarations": "-95: NUMBER; -39: NUMBER",
    "facts": "sqrt(-95) = lg(-39)"
},
{
    "assertion": "InterReciprocal ( Diameter ( CIRCLE: r ) ) equals NUMBER: 98",
    "id": 941,
    "declarations": "r: CIRCLE; 98: NUMBER",
    "facts": "InterReciprocal(Diameter(r)) = 98"
},
{
    "assertion": "Endpoint ( MinorAxis ( ELLIPSE: D ) ) equals LowerFocus ( CONICSECTION: t )",
    "id": 942,
    "declarations": "D: ELLIPSE; t: CONICSECTION",
    "facts": "Endpoint(MinorAxis(D)) = LowerFocus(t)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: J ) equals LeftFocus ( CONICSECTION: k )",
    "id": 943,
    "declarations": "J: TRIANGLE; k: CONICSECTION",
    "facts": "Circumcenter(J) = LeftFocus(k)"
},
{
    "assertion": "Negation ( Negation ( RightFocus ( CONICSECTION: v ) equals UpperVertex ( CONICSECTION: j ) ) equals BOOL: False ) equals BOOL: True",
    "id": 944,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "InterceptChord ( LINE: V, CONICSECTION: n ) equals LINESEGMENT: h",
    "id": 945,
    "declarations": "V: LINE; n: CONICSECTION; h: LINESEGMENT",
    "facts": "InterceptChord(V, n) = h"
},
{
    "assertion": "lg ( Min ( Distance ( Circumcenter ( TRIANGLE: p ), POINT: w ) ) ) equals Length ( LINESEGMENT: h )",
    "id": 946,
    "declarations": "p: TRIANGLE; w: POINT; h: LINESEGMENT",
    "facts": "lg(Min(Distance(Circumcenter(p), w))) = Length(h)"
},
{
    "assertion": "RightPart ( HYPERBOLA: i ) equals CURVE: J",
    "id": 947,
    "declarations": "i: HYPERBOLA; J: CURVE",
    "facts": "RightPart(i) = J"
},
{
    "assertion": "Perimeter ( CONICSECTION: S ) equals Perimeter ( CONICSECTION: J )",
    "id": 948,
    "declarations": "S: CONICSECTION; J: CONICSECTION",
    "facts": "Perimeter(S) = Perimeter(J)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: D ) equals InterceptChord ( LINE: K, CONICSECTION: s )",
    "id": 949,
    "declarations": "D: ELLIPSE; K: LINE; s: CONICSECTION",
    "facts": "MajorAxis(D) = InterceptChord(K, s)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: T ) equals Quadrant ( POINT: a )",
    "id": 950,
    "declarations": "T: CONICSECTION; a: POINT",
    "facts": "HalfFocalLength(T) = Quadrant(a)"
},
{
    "assertion": "Directrix ( CONICSECTION: v ) equals LineOf ( RightVertex ( CONICSECTION: y ), Orthocenter ( TRIANGLE: a ) )",
    "id": 951,
    "declarations": "v: CONICSECTION; y: CONICSECTION; a: TRIANGLE",
    "facts": "Directrix(v) = LineOf(RightVertex(y), Orthocenter(a))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: v ) equals POINT: F",
    "id": 952,
    "declarations": "v: CONICSECTION; F: POINT",
    "facts": "LeftVertex(v) = F"
},
{
    "assertion": "LeftVertex ( CONICSECTION: d ) equals POINT: a",
    "id": 953,
    "declarations": "d: CONICSECTION; a: POINT",
    "facts": "LeftVertex(d) = a"
},
{
    "assertion": "Incenter ( TRIANGLE: g ) equals RightFocus ( CONICSECTION: k )",
    "id": 954,
    "declarations": "g: TRIANGLE; k: CONICSECTION",
    "facts": "Incenter(g) = RightFocus(k)"
},
{
    "assertion": "RealAxis ( ELLIPSE: Z ) equals LINESEGMENT: k",
    "id": 955,
    "declarations": "Z: ELLIPSE; k: LINESEGMENT",
    "facts": "RealAxis(Z) = k"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: s, CONICSECTION: E ) equals BOOL: False",
    "id": 956,
    "declarations": "s: LINESEGMENT; E: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(s, E) = False"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: x ), TRIANGLE: S ) equals BOOL: True",
    "id": 957,
    "declarations": "x: TRIANGLE; S: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(x), S) = True"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: i ) equals LINESEGMENT: x",
    "id": 958,
    "declarations": "i: ELLIPSE; x: LINESEGMENT",
    "facts": "ImaginaryAxis(i) = x"
},
{
    "assertion": "LowerVertex ( CONICSECTION: l ) equals POINT: h",
    "id": 959,
    "declarations": "l: CONICSECTION; h: POINT",
    "facts": "LowerVertex(l) = h"
},
{
    "assertion": "Incenter ( TRIANGLE: b ) equals POINT: c",
    "id": 960,
    "declarations": "b: TRIANGLE; c: POINT",
    "facts": "Incenter(b) = c"
},
{
    "assertion": "lg ( InterReciprocal ( Eccentricity ( CONICSECTION: E ) ) ) equals Inclination ( LINE: x )",
    "id": 961,
    "declarations": "E: CONICSECTION; x: LINE",
    "facts": "lg(InterReciprocal(Eccentricity(E))) = Inclination(x)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -27, DEGREESTR: degree )",
    "id": 962,
    "declarations": "-27: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-27, degree) = dummy_operator()"
},
{
    "assertion": "MinorAxis ( ELLIPSE: O ) equals LINESEGMENT: Y",
    "id": 963,
    "declarations": "O: ELLIPSE; Y: LINESEGMENT",
    "facts": "MinorAxis(O) = Y"
},
{
    "assertion": "Radius ( CIRCLE: S ) equals NUMBER: 70",
    "id": 964,
    "declarations": "S: CIRCLE; 70: NUMBER",
    "facts": "Radius(S) = 70"
},
{
    "assertion": "Radius ( CIRCLE: F ) equals NUMBER: 94",
    "id": 965,
    "declarations": "F: CIRCLE; 94: NUMBER",
    "facts": "Radius(F) = 94"
},
{
    "assertion": "LineSegmentOf ( POINT: G, POINT: C ) equals LINESEGMENT: N",
    "id": 966,
    "declarations": "G: POINT; C: POINT; N: LINESEGMENT",
    "facts": "LineSegmentOf(G, C) = N"
},
{
    "assertion": "UpperVertex ( CONICSECTION: y ) equals Orthocenter ( TRIANGLE: l )",
    "id": 967,
    "declarations": "y: CONICSECTION; l: TRIANGLE",
    "facts": "UpperVertex(y) = Orthocenter(l)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: I, TRIANGLE: V ) equals BOOL: False",
    "id": 968,
    "declarations": "I: CIRCLE; V: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(I, V) = False"
},
{
    "assertion": "InterReciprocal ( NumIntersection ( CURVE: R, Locus ( POINT: t ) ) ) equals NUMBER: -4",
    "id": 969,
    "declarations": "R: CURVE; t: POINT; -4: NUMBER",
    "facts": "InterReciprocal(NumIntersection(R, Locus(t))) = -4"
},
{
    "assertion": "LineSegmentOf ( POINT: r, UpperFocus ( CONICSECTION: N ) ) equals InterceptChord ( LINE: H, CONICSECTION: c )",
    "id": 970,
    "declarations": "r: POINT; N: CONICSECTION; H: LINE; c: CONICSECTION",
    "facts": "LineSegmentOf(r, UpperFocus(N)) = InterceptChord(H, c)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: d ) equals Circumcenter ( TRIANGLE: Q )",
    "id": 971,
    "declarations": "d: CONICSECTION; Q: TRIANGLE",
    "facts": "LowerVertex(d) = Circumcenter(Q)"
},
{
    "assertion": "Diameter ( CIRCLE: U ) equals NUMBER: 55",
    "id": 972,
    "declarations": "U: CIRCLE; 55: NUMBER",
    "facts": "Diameter(U) = 55"
},
{
    "assertion": "RightVertex ( CONICSECTION: u ) equals UpperFocus ( CONICSECTION: m )",
    "id": 973,
    "declarations": "u: CONICSECTION; m: CONICSECTION",
    "facts": "RightVertex(u) = UpperFocus(m)"
},
{
    "assertion": "VectorOf ( POINT: L, POINT: j ) equals VECTOR: q",
    "id": 974,
    "declarations": "L: POINT; j: POINT; q: VECTOR",
    "facts": "VectorOf(L, j) = q"
},
{
    "assertion": "LeftFocus ( CONICSECTION: u ) equals Projection ( POINT: g, OverlappingLine ( LINESEGMENT: A ) )",
    "id": 975,
    "declarations": "u: CONICSECTION; g: POINT; A: LINESEGMENT",
    "facts": "LeftFocus(u) = Projection(g, OverlappingLine(A))"
},
{
    "assertion": "sqrt ( NUMBER: -22 ) equals Quadrant ( Orthocenter ( TRIANGLE: Q ) )",
    "id": 976,
    "declarations": "-22: NUMBER; Q: TRIANGLE",
    "facts": "sqrt(-22) = Quadrant(Orthocenter(Q))"
},
{
    "assertion": "RightFocus ( CONICSECTION: r ) equals POINT: k",
    "id": 977,
    "declarations": "r: CONICSECTION; k: POINT",
    "facts": "RightFocus(r) = k"
},
{
    "assertion": "Radius ( CIRCLE: e ) equals NUMBER: 39",
    "id": 978,
    "declarations": "e: CIRCLE; 39: NUMBER",
    "facts": "Radius(e) = 39"
},
{
    "assertion": "IsOutTangent ( CIRCLE: l, CIRCLE: j ) equals BOOL: False",
    "id": 979,
    "declarations": "l: CIRCLE; j: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(l, j) = False"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: p, TriangleOf ( POINT: f, POINT: y, POINT: l ) ) equals BOOL: False",
    "id": 980,
    "declarations": "p: CIRCLE; f: POINT; y: POINT; l: POINT; False: BOOL",
    "facts": "IsCircumCircle(p, TriangleOf(f, y, l)) = False"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( LINESEGMENT: t ) ) equals lg ( Abs ( LINESEGMENT: s ) )",
    "id": 981,
    "declarations": "t: LINESEGMENT; s: LINESEGMENT",
    "facts": "Inclination(PerpendicularBisector(t)) = lg(Abs(s))"
},
{
    "assertion": "Min ( XCoordinate ( MidPoint ( LINESEGMENT: Y ) ) ) equals InterReciprocal ( Distance ( LeftVertex ( CONICSECTION: z ), POINT: z ) )",
    "id": 983,
    "declarations": "Y: LINESEGMENT; z: CONICSECTION; z: POINT",
    "facts": "Min(XCoordinate(MidPoint(Y))) = InterReciprocal(Distance(LeftVertex(z), z))"
},
{
    "assertion": "Max ( NUMBER: -47 ) equals Length ( ImaginaryAxis ( ELLIPSE: a ) )",
    "id": 984,
    "declarations": "-47: NUMBER; a: ELLIPSE",
    "facts": "Max(-47) = Length(ImaginaryAxis(a))"
},
{
    "assertion": "PointOnCurve ( LeftFocus ( CONICSECTION: y ), CURVE: b ) equals BOOL: False",
    "id": 985,
    "declarations": "y: CONICSECTION; b: CURVE; False: BOOL",
    "facts": "PointOnCurve(LeftFocus(y), b) = False"
},
{
    "assertion": "Diameter ( CIRCLE: Z ) equals NUMBER: -45",
    "id": 986,
    "declarations": "Z: CIRCLE; -45: NUMBER",
    "facts": "Diameter(Z) = -45"
},
{
    "assertion": "MajorAxis ( ELLIPSE: O ) equals LINESEGMENT: l",
    "id": 987,
    "declarations": "O: ELLIPSE; l: LINESEGMENT",
    "facts": "MajorAxis(O) = l"
},
{
    "assertion": "Length ( LINESEGMENT: v ) equals Slope ( LINE: e )",
    "id": 988,
    "declarations": "v: LINESEGMENT; e: LINE",
    "facts": "Length(v) = Slope(e)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: u ) equals POINT: T",
    "id": 989,
    "declarations": "u: CONICSECTION; T: POINT",
    "facts": "LeftFocus(u) = T"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: F ) equals RightDirectrix ( CONICSECTION: Y )",
    "id": 990,
    "declarations": "F: CONICSECTION; Y: CONICSECTION",
    "facts": "LeftDirectrix(F) = RightDirectrix(Y)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: g ) equals POINT: U",
    "id": 991,
    "declarations": "g: CONICSECTION; U: POINT",
    "facts": "UpperVertex(g) = U"
},
{
    "assertion": "TriangleOf ( POINT: E, LowerFocus ( CONICSECTION: e ), POINT: j ) equals TRIANGLE: v",
    "id": 992,
    "declarations": "E: POINT; e: CONICSECTION; j: POINT; v: TRIANGLE",
    "facts": "TriangleOf(E, LowerFocus(e), j) = v"
},
{
    "assertion": "ApplyUnit ( Inclination ( LINE: m ), DEGREESTR: degree )",
    "id": 993,
    "declarations": "m: LINE; degree: DEGREESTR",
    "facts": "ApplyUnit(Inclination(m), degree) = dummy_operator()"
},
{
    "assertion": "IsParallel ( LINE: d, LINE: S ) equals BOOL: False",
    "id": 994,
    "declarations": "d: LINE; S: LINE; False: BOOL",
    "facts": "IsParallel(d, S) = False"
},
{
    "assertion": "Asymptote ( HYPERBOLA: S ) equals OverlappingLine ( LINESEGMENT: k )",
    "id": 995,
    "declarations": "S: HYPERBOLA; k: LINESEGMENT",
    "facts": "Asymptote(S) = OverlappingLine(k)"
},
{
    "assertion": "Inclination ( LineOf ( POINT: B, POINT: v ) ) equals DotProduct ( VECTOR: F, VectorOf ( POINT: i, Center ( CONICSECTION: m ) ) )",
    "id": 996,
    "declarations": "B: POINT; v: POINT; F: VECTOR; i: POINT; m: CONICSECTION",
    "facts": "Inclination(LineOf(B, v)) = DotProduct(F, VectorOf(i, Center(m)))"
},
{
    "assertion": "XCoordinate ( RightVertex ( CONICSECTION: G ) ) equals NUMBER: -66",
    "id": 997,
    "declarations": "G: CONICSECTION; -66: NUMBER",
    "facts": "XCoordinate(RightVertex(G)) = -66"
},
{
    "assertion": "VectorOf ( POINT: g, POINT: T ) equals VECTOR: s",
    "id": 998,
    "declarations": "g: POINT; T: POINT; s: VECTOR",
    "facts": "VectorOf(g, T) = s"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: S ) equals AXIS: yAxis",
    "id": 999,
    "declarations": "S: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(S) = yAxis"
},
{
    "assertion": "LeftPart ( HYPERBOLA: l ) equals LeftPart ( HYPERBOLA: v )",
    "id": 1000,
    "declarations": "l: HYPERBOLA; v: HYPERBOLA",
    "facts": "LeftPart(l) = LeftPart(v)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: p ) equals RightFocus ( CONICSECTION: a )",
    "id": 1001,
    "declarations": "p: LINESEGMENT; a: CONICSECTION",
    "facts": "MidPoint(p) = RightFocus(a)"
},
{
    "assertion": "LineOf ( LowerVertex ( CONICSECTION: J ), POINT: s ) equals LINE: l",
    "id": 1002,
    "declarations": "J: CONICSECTION; s: POINT; l: LINE",
    "facts": "LineOf(LowerVertex(J), s) = l"
},
{
    "assertion": "YCoordinate ( POINT: C ) equals InterReciprocal ( Min ( NUMBER: 58 ) )",
    "id": 1003,
    "declarations": "C: POINT; 58: NUMBER",
    "facts": "YCoordinate(C) = InterReciprocal(Min(58))"
},
{
    "assertion": "Perimeter ( CONICSECTION: c ) equals FocalLength ( CONICSECTION: w )",
    "id": 1004,
    "declarations": "c: CONICSECTION; w: CONICSECTION",
    "facts": "Perimeter(c) = FocalLength(w)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: E ) equals LineOf ( Center ( CONICSECTION: J ), Circumcenter ( TRIANGLE: y ) )",
    "id": 1005,
    "declarations": "E: HYPERBOLA; J: CONICSECTION; y: TRIANGLE",
    "facts": "Asymptote(E) = LineOf(Center(J), Circumcenter(y))"
},
{
    "assertion": "Diameter ( CIRCLE: N ) equals NUMBER: -73",
    "id": 1006,
    "declarations": "N: CIRCLE; -73: NUMBER",
    "facts": "Diameter(N) = -73"
},
{
    "assertion": "IsParallel ( LINE: U, LINE: Q ) equals BOOL: False",
    "id": 1007,
    "declarations": "U: LINE; Q: LINE; False: BOOL",
    "facts": "IsParallel(U, Q) = False"
},
{
    "assertion": "Max ( NUMBER: -92 ) equals NUMBER: -42",
    "id": 1008,
    "declarations": "-92: NUMBER; -42: NUMBER",
    "facts": "Max(-92) = -42"
},
{
    "assertion": "LocusEquation ( POINT: A ) equals EXPRESSION: y*space=*spacex^3*space-*space2*x*space+*space1",
    "id": 1009,
    "declarations": "A: POINT; y*space=*spacex^3*space-*space2*x*space+*space1: EXPRESSION",
    "facts": "LocusEquation(A) = y*space=*spacex^3*space-*space2*x*space+*space1"
},
{
    "assertion": "FocalLength ( CONICSECTION: T ) equals InterReciprocal ( NUMBER: -17 )",
    "id": 1010,
    "declarations": "T: CONICSECTION; -17: NUMBER",
    "facts": "FocalLength(T) = InterReciprocal(-17)"
},
{
    "assertion": "Min ( Perimeter ( CONICSECTION: N ) ) equals Area ( CONICSECTION: q )",
    "id": 1011,
    "declarations": "N: CONICSECTION; q: CONICSECTION",
    "facts": "Min(Perimeter(N)) = Area(q)"
},
{
    "assertion": "LineOf ( RightFocus ( CONICSECTION: S ), Projection ( LeftVertex ( CONICSECTION: d ), LINE: W ) ) equals LINE: Z",
    "id": 1012,
    "declarations": "S: CONICSECTION; d: CONICSECTION; W: LINE; Z: LINE",
    "facts": "LineOf(RightFocus(S), Projection(LeftVertex(d), W)) = Z"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: x ) equals PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: C ) )",
    "id": 1013,
    "declarations": "x: CONICSECTION; C: ELLIPSE",
    "facts": "LeftDirectrix(x) = PerpendicularBisector(ImaginaryAxis(C))"
},
{
    "assertion": "TangentOnPoint ( UpperFocus ( CONICSECTION: j ), RightPart ( HYPERBOLA: z ) ) equals LINE: t",
    "id": 1014,
    "declarations": "j: CONICSECTION; z: HYPERBOLA; t: LINE",
    "facts": "TangentOnPoint(UpperFocus(j), RightPart(z)) = t"
},
{
    "assertion": "IsPerpendicular ( OverlappingLine ( MinorAxis ( ELLIPSE: e ) ), LINE: N ) equals BOOL: True",
    "id": 1015,
    "declarations": "e: ELLIPSE; N: LINE; True: BOOL",
    "facts": "IsPerpendicular(OverlappingLine(MinorAxis(e)), N) = True"
},
{
    "assertion": "YCoordinate ( POINT: G ) equals NUMBER: -79",
    "id": 1016,
    "declarations": "G: POINT; -79: NUMBER",
    "facts": "YCoordinate(G) = -79"
},
{
    "assertion": "Vertex ( CONICSECTION: X ) equals POINT: Y",
    "id": 1017,
    "declarations": "X: CONICSECTION; Y: POINT",
    "facts": "Vertex(X) = Y"
},
{
    "assertion": "Distance ( POINT: f, LowerFocus ( CONICSECTION: M ) ) equals Min ( NUMBER: 45 )",
    "id": 1018,
    "declarations": "f: POINT; M: CONICSECTION; 45: NUMBER",
    "facts": "Distance(f, LowerFocus(M)) = Min(45)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -88, DEGREESTR: degree )",
    "id": 1020,
    "declarations": "-88: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-88, degree) = dummy_operator()"
},
{
    "assertion": "UpperFocus ( CONICSECTION: K ) equals Projection ( Circumcenter ( TRIANGLE: h ), TangentOfPoint ( POINT: R, CURVE: X ) )",
    "id": 1021,
    "declarations": "K: CONICSECTION; h: TRIANGLE; R: POINT; X: CURVE",
    "facts": "UpperFocus(K) = Projection(Circumcenter(h), TangentOfPoint(R, X))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: v ) equals OverlappingLine ( RealAxis ( ELLIPSE: q ) )",
    "id": 1022,
    "declarations": "v: HYPERBOLA; q: ELLIPSE",
    "facts": "Asymptote(v) = OverlappingLine(RealAxis(q))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: W ) equals UpperVertex ( CONICSECTION: K )",
    "id": 1023,
    "declarations": "W: CONICSECTION; K: CONICSECTION",
    "facts": "LeftFocus(W) = UpperVertex(K)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: o ) equals RightFocus ( CONICSECTION: N )",
    "id": 1024,
    "declarations": "o: CONICSECTION; N: CONICSECTION",
    "facts": "LeftVertex(o) = RightFocus(N)"
},
{
    "assertion": "Projection ( POINT: H, LINE: s ) equals POINT: B",
    "id": 1025,
    "declarations": "H: POINT; s: LINE; B: POINT",
    "facts": "Projection(H, s) = B"
},
{
    "assertion": "Max ( NUMBER: -15 ) equals Perimeter ( CONICSECTION: l )",
    "id": 1026,
    "declarations": "-15: NUMBER; l: CONICSECTION",
    "facts": "Max(-15) = Perimeter(l)"
},
{
    "assertion": "TangentOnPoint ( LowerVertex ( CONICSECTION: p ), RightPart ( HYPERBOLA: l ) ) equals LINE: i",
    "id": 1027,
    "declarations": "p: CONICSECTION; l: HYPERBOLA; i: LINE",
    "facts": "TangentOnPoint(LowerVertex(p), RightPart(l)) = i"
},
{
    "assertion": "IsTangent ( LINE: A, CONICSECTION: u ) equals BOOL: False",
    "id": 1028,
    "declarations": "A: LINE; u: CONICSECTION; False: BOOL",
    "facts": "IsTangent(A, u) = False"
},
{
    "assertion": "XCoordinate ( Circumcenter ( TRIANGLE: L ) ) equals Area ( CONICSECTION: L )",
    "id": 1029,
    "declarations": "L: TRIANGLE; L: CONICSECTION",
    "facts": "XCoordinate(Circumcenter(L)) = Area(L)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: H ) equals LINE: z",
    "id": 1030,
    "declarations": "H: CONICSECTION; z: LINE",
    "facts": "LeftDirectrix(H) = z"
},
{
    "assertion": "XCoordinate ( POINT: u ) equals NUMBER: 48",
    "id": 1031,
    "declarations": "u: POINT; 48: NUMBER",
    "facts": "XCoordinate(u) = 48"
},
{
    "assertion": "TriangleOf ( RightFocus ( CONICSECTION: J ), Center ( CONICSECTION: A ), POINT: p ) equals TRIANGLE: l",
    "id": 1032,
    "declarations": "J: CONICSECTION; A: CONICSECTION; p: POINT; l: TRIANGLE",
    "facts": "TriangleOf(RightFocus(J), Center(A), p) = l"
},
{
    "assertion": "IsOutTangent ( CIRCLE: Y, CIRCLE: W ) equals BOOL: False",
    "id": 1033,
    "declarations": "Y: CIRCLE; W: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(Y, W) = False"
},
{
    "assertion": "FocalLength ( CONICSECTION: s ) equals NUMBER: 10",
    "id": 1034,
    "declarations": "s: CONICSECTION; 10: NUMBER",
    "facts": "FocalLength(s) = 10"
},
{
    "assertion": "Focus ( CONICSECTION: x ) equals UpperFocus ( CONICSECTION: I )",
    "id": 1035,
    "declarations": "x: CONICSECTION; I: CONICSECTION",
    "facts": "Focus(x) = UpperFocus(I)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: x ) equals POINT: X",
    "id": 1036,
    "declarations": "x: CONICSECTION; X: POINT",
    "facts": "UpperVertex(x) = X"
},
{
    "assertion": "UpperVertex ( CONICSECTION: n ) equals LowerVertex ( CONICSECTION: P )",
    "id": 1037,
    "declarations": "n: CONICSECTION; P: CONICSECTION",
    "facts": "UpperVertex(n) = LowerVertex(P)"
},
{
    "assertion": "Perimeter ( CONICSECTION: W ) equals NUMBER: -26",
    "id": 1038,
    "declarations": "W: CONICSECTION; -26: NUMBER",
    "facts": "Perimeter(W) = -26"
},
{
    "assertion": "LineOf ( POINT: A, POINT: U ) equals LINE: H",
    "id": 1039,
    "declarations": "A: POINT; U: POINT; H: LINE",
    "facts": "LineOf(A, U) = H"
},
{
    "assertion": "Locus ( POINT: v ) equals CURVE: a",
    "id": 1040,
    "declarations": "v: POINT; a: CURVE",
    "facts": "Locus(v) = a"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: q ) equals LINE: p",
    "id": 1041,
    "declarations": "q: LINESEGMENT; p: LINE",
    "facts": "PerpendicularBisector(q) = p"
},
{
    "assertion": "Abs ( LINESEGMENT: Q ) equals Diameter ( CIRCLE: t )",
    "id": 1042,
    "declarations": "Q: LINESEGMENT; t: CIRCLE",
    "facts": "Abs(Q) = Diameter(t)"
},
{
    "assertion": "Intercept ( LineOf ( Incenter ( TRIANGLE: f ), POINT: u ), AXIS: yAxis ) equals Abs ( LINESEGMENT: N )",
    "id": 1043,
    "declarations": "f: TRIANGLE; u: POINT; yAxis: AXIS; N: LINESEGMENT",
    "facts": "Intercept(LineOf(Incenter(f), u), yAxis) = Abs(N)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: l ) equals POINT: L",
    "id": 1044,
    "declarations": "l: CONICSECTION; L: POINT",
    "facts": "LeftVertex(l) = L"
},
{
    "assertion": "InterReciprocal ( InterReciprocal ( NUMBER: -82 ) ) equals NUMBER: -60",
    "id": 1045,
    "declarations": "-82: NUMBER; -60: NUMBER",
    "facts": "InterReciprocal(InterReciprocal(-82)) = -60"
},
{
    "assertion": "LowerFocus ( CONICSECTION: M ) equals Orthocenter ( TriangleOf ( POINT: o, POINT: O, POINT: s ) )",
    "id": 1046,
    "declarations": "M: CONICSECTION; o: POINT; O: POINT; s: POINT",
    "facts": "LowerFocus(M) = Orthocenter(TriangleOf(o, O, s))"
},
{
    "assertion": "TangentOfPoint ( Orthocenter ( TRIANGLE: B ), CURVE: H ) equals LINE: I",
    "id": 1047,
    "declarations": "B: TRIANGLE; H: CURVE; I: LINE",
    "facts": "TangentOfPoint(Orthocenter(B), H) = I"
},
{
    "assertion": "PointOnCurve ( POINT: b, CURVE: w ) equals BOOL: False",
    "id": 1048,
    "declarations": "b: POINT; w: CURVE; False: BOOL",
    "facts": "PointOnCurve(b, w) = False"
},
{
    "assertion": "lg ( Quadrant ( POINT: i ) ) equals NUMBER: -45",
    "id": 1049,
    "declarations": "i: POINT; -45: NUMBER",
    "facts": "lg(Quadrant(i)) = -45"
},
{
    "assertion": "IsParallel ( LINE: G, LINE: c ) equals BOOL: False",
    "id": 1050,
    "declarations": "G: LINE; c: LINE; False: BOOL",
    "facts": "IsParallel(G, c) = False"
},
{
    "assertion": "Circumcenter ( TRIANGLE: y ) equals POINT: g",
    "id": 1051,
    "declarations": "y: TRIANGLE; g: POINT",
    "facts": "Circumcenter(y) = g"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: c ) equals AXIS: yAxis",
    "id": 1052,
    "declarations": "c: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(c) = yAxis"
},
{
    "assertion": "FocalLength ( CONICSECTION: M ) equals sqrt ( Min ( NUMBER: 3 ) )",
    "id": 1053,
    "declarations": "M: CONICSECTION; 3: NUMBER",
    "facts": "FocalLength(M) = sqrt(Min(3))"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: B ) ) equals NUMBER: 7",
    "id": 1054,
    "declarations": "B: CONICSECTION; 7: NUMBER",
    "facts": "XCoordinate(LeftFocus(B)) = 7"
},
{
    "assertion": "RealAxis ( ELLIPSE: k ) equals LINESEGMENT: u",
    "id": 1055,
    "declarations": "k: ELLIPSE; u: LINESEGMENT",
    "facts": "RealAxis(k) = u"
},
{
    "assertion": "Expression ( CURVE: x ) equals EXPRESSION: y*space=*spacee^x",
    "id": 1056,
    "declarations": "x: CURVE; y*space=*spacee^x: EXPRESSION",
    "facts": "Expression(x) = y*space=*spacee^x"
},
{
    "assertion": "Directrix ( CONICSECTION: n ) equals RightDirectrix ( CONICSECTION: r )",
    "id": 1057,
    "declarations": "n: CONICSECTION; r: CONICSECTION",
    "facts": "Directrix(n) = RightDirectrix(r)"
},
{
    "assertion": "NumIntersection ( CURVE: c, CURVE: P ) equals NUMBER: 83",
    "id": 1058,
    "declarations": "c: CURVE; P: CURVE; 83: NUMBER",
    "facts": "NumIntersection(c, P) = 83"
},
{
    "assertion": "sqrt ( Inclination ( LINE: q ) ) equals sqrt ( FocalLength ( CONICSECTION: o ) )",
    "id": 1059,
    "declarations": "q: LINE; o: CONICSECTION",
    "facts": "sqrt(Inclination(q)) = sqrt(FocalLength(o))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: z ) equals CIRCLE: V",
    "id": 1060,
    "declarations": "z: TRIANGLE; V: CIRCLE",
    "facts": "CircumCircle(z) = V"
},
{
    "assertion": "sqrt ( Inclination ( LINE: F ) ) equals Min ( HalfFocalLength ( CONICSECTION: l ) )",
    "id": 1061,
    "declarations": "F: LINE; l: CONICSECTION",
    "facts": "sqrt(Inclination(F)) = Min(HalfFocalLength(l))"
},
{
    "assertion": "IsTangent ( LINE: E, CONICSECTION: d ) equals BOOL: False",
    "id": 1062,
    "declarations": "E: LINE; d: CONICSECTION; False: BOOL",
    "facts": "IsTangent(E, d) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: W ) equals LINESEGMENT: A",
    "id": 1063,
    "declarations": "W: ELLIPSE; A: LINESEGMENT",
    "facts": "MinorAxis(W) = A"
},
{
    "assertion": "Max ( Length ( LINESEGMENT: T ) ) equals NumIntersection ( RightPart ( HYPERBOLA: X ), Locus ( POINT: a ) )",
    "id": 1064,
    "declarations": "T: LINESEGMENT; X: HYPERBOLA; a: POINT",
    "facts": "Max(Length(T)) = NumIntersection(RightPart(X), Locus(a))"
},
{
    "assertion": "IsTangent ( LINE: m, CONICSECTION: D ) equals BOOL: False",
    "id": 1065,
    "declarations": "m: LINE; D: CONICSECTION; False: BOOL",
    "facts": "IsTangent(m, D) = False"
},
{
    "assertion": "IsPerpendicular ( LINE: s, RightDirectrix ( CONICSECTION: u ) ) equals BOOL: False",
    "id": 1066,
    "declarations": "s: LINE; u: CONICSECTION; False: BOOL",
    "facts": "IsPerpendicular(s, RightDirectrix(u)) = False"
},
{
    "assertion": "Focus ( CONICSECTION: r ) equals POINT: a",
    "id": 1067,
    "declarations": "r: CONICSECTION; a: POINT",
    "facts": "Focus(r) = a"
},
{
    "assertion": "Incenter ( TRIANGLE: q ) equals POINT: h",
    "id": 1068,
    "declarations": "q: TRIANGLE; h: POINT",
    "facts": "Incenter(q) = h"
},
{
    "assertion": "Area ( CONICSECTION: e ) equals Area ( CONICSECTION: O )",
    "id": 1069,
    "declarations": "e: CONICSECTION; O: CONICSECTION",
    "facts": "Area(e) = Area(O)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: U, TRIANGLE: h ) equals BOOL: False",
    "id": 1070,
    "declarations": "U: CIRCLE; h: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(U, h) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: z ) equals RightFocus ( CONICSECTION: p )",
    "id": 1071,
    "declarations": "z: CONICSECTION; p: CONICSECTION",
    "facts": "UpperFocus(z) = RightFocus(p)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: c ) equals FootPoint ( LINE: q, LINE: G )",
    "id": 1072,
    "declarations": "c: LINESEGMENT; q: LINE; G: LINE",
    "facts": "Endpoint(c) = FootPoint(q, G)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: k ) equals LINE: l",
    "id": 1073,
    "declarations": "k: HYPERBOLA; l: LINE",
    "facts": "Asymptote(k) = l"
},
{
    "assertion": "Incenter ( TRIANGLE: H ) equals POINT: X",
    "id": 1074,
    "declarations": "H: TRIANGLE; X: POINT",
    "facts": "Incenter(H) = X"
},
{
    "assertion": "Center ( CONICSECTION: J ) equals RightFocus ( CONICSECTION: a )",
    "id": 1075,
    "declarations": "J: CONICSECTION; a: CONICSECTION",
    "facts": "Center(J) = RightFocus(a)"
},
{
    "assertion": "Quadrant ( LowerFocus ( CONICSECTION: N ) ) equals Intercept ( LINE: f, AXIS: yAxis )",
    "id": 1076,
    "declarations": "N: CONICSECTION; f: LINE; yAxis: AXIS",
    "facts": "Quadrant(LowerFocus(N)) = Intercept(f, yAxis)"
},
{
    "assertion": "Intersection ( CURVE: x, CURVE: C ) equals LeftFocus ( CONICSECTION: i )",
    "id": 1077,
    "declarations": "x: CURVE; C: CURVE; i: CONICSECTION",
    "facts": "Intersection(x, C) = LeftFocus(i)"
},
{
    "assertion": "IsPerpendicular ( LINE: P, OverlappingLine ( LINESEGMENT: N ) ) equals BOOL: True",
    "id": 1078,
    "declarations": "P: LINE; N: LINESEGMENT; True: BOOL",
    "facts": "IsPerpendicular(P, OverlappingLine(N)) = True"
},
{
    "assertion": "RightFocus ( CONICSECTION: S ) equals Incenter ( TRIANGLE: U )",
    "id": 1079,
    "declarations": "S: CONICSECTION; U: TRIANGLE",
    "facts": "RightFocus(S) = Incenter(U)"
},
{
    "assertion": "IsInTangent ( CIRCLE: g, CIRCLE: p ) equals BOOL: False",
    "id": 1080,
    "declarations": "g: CIRCLE; p: CIRCLE; False: BOOL",
    "facts": "IsInTangent(g, p) = False"
},
{
    "assertion": "LocusEquation ( POINT: Z ) equals EXPRESSION: x^2*space+*space(y*space-*space2)^2*space=*space4",
    "id": 1081,
    "declarations": "Z: POINT; x^2*space+*space(y*space-*space2)^2*space=*space4: EXPRESSION",
    "facts": "LocusEquation(Z) = x^2*space+*space(y*space-*space2)^2*space=*space4"
},
{
    "assertion": "Length ( LINESEGMENT: S ) equals Inclination ( LINE: y )",
    "id": 1082,
    "declarations": "S: LINESEGMENT; y: LINE",
    "facts": "Length(S) = Inclination(y)"
},
{
    "assertion": "Expression ( CURVE: G ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6xy",
    "id": 1083,
    "declarations": "G: CURVE; x^3*space+*spacey^3*space=*space6xy: EXPRESSION",
    "facts": "Expression(G) = x^3*space+*spacey^3*space=*space6xy"
},
{
    "assertion": "TriangleOf ( Circumcenter ( TRIANGLE: s ), POINT: N, POINT: k ) equals TRIANGLE: T",
    "id": 1084,
    "declarations": "s: TRIANGLE; N: POINT; k: POINT; T: TRIANGLE",
    "facts": "TriangleOf(Circumcenter(s), N, k) = T"
},
{
    "assertion": "InterceptChord ( LINE: R, CONICSECTION: j ) equals ImaginaryAxis ( ELLIPSE: o )",
    "id": 1085,
    "declarations": "R: LINE; j: CONICSECTION; o: ELLIPSE",
    "facts": "InterceptChord(R, j) = ImaginaryAxis(o)"
},
{
    "assertion": "CircumCircle ( TriangleOf ( LowerVertex ( CONICSECTION: U ), POINT: o, UpperVertex ( CONICSECTION: N ) ) ) equals CIRCLE: f",
    "id": 1086,
    "declarations": "U: CONICSECTION; o: POINT; N: CONICSECTION; f: CIRCLE",
    "facts": "CircumCircle(TriangleOf(LowerVertex(U), o, UpperVertex(N))) = f"
},
{
    "assertion": "PointOnCurve ( POINT: p, LeftPart ( HYPERBOLA: E ) ) equals BOOL: False",
    "id": 1087,
    "declarations": "p: POINT; E: HYPERBOLA; False: BOOL",
    "facts": "PointOnCurve(p, LeftPart(E)) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: x ) equals LowerVertex ( CONICSECTION: y )",
    "id": 1088,
    "declarations": "x: CONICSECTION; y: CONICSECTION",
    "facts": "UpperFocus(x) = LowerVertex(y)"
},
{
    "assertion": "Slope ( LINE: U ) equals InterReciprocal ( NUMBER: -89 )",
    "id": 1089,
    "declarations": "U: LINE; -89: NUMBER",
    "facts": "Slope(U) = InterReciprocal(-89)"
},
{
    "assertion": "Radius ( CIRCLE: m ) equals NUMBER: 9",
    "id": 1090,
    "declarations": "m: CIRCLE; 9: NUMBER",
    "facts": "Radius(m) = 9"
},
{
    "assertion": "LowerVertex ( CONICSECTION: o ) equals POINT: B",
    "id": 1091,
    "declarations": "o: CONICSECTION; B: POINT",
    "facts": "LowerVertex(o) = B"
},
{
    "assertion": "Length ( ImaginaryAxis ( ELLIPSE: E ) ) equals Min ( Slope ( LINE: a ) )",
    "id": 1092,
    "declarations": "E: ELLIPSE; a: LINE",
    "facts": "Length(ImaginaryAxis(E)) = Min(Slope(a))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: O ) equals LINESEGMENT: M",
    "id": 1093,
    "declarations": "O: ELLIPSE; M: LINESEGMENT",
    "facts": "MajorAxis(O) = M"
},
{
    "assertion": "AngleOf ( MidPoint ( LINESEGMENT: W ), LowerVertex ( CONICSECTION: z ), Orthocenter ( TRIANGLE: g ) ) equals ApplyUnit ( NumIntersection ( CURVE: h, CURVE: O ), DEGREESTR: degree )",
    "id": 1094,
    "declarations": "W: LINESEGMENT; z: CONICSECTION; g: TRIANGLE; h: CURVE; O: CURVE; degree: DEGREESTR",
    "facts": "AngleOf(MidPoint(W), LowerVertex(z), Orthocenter(g)) = ApplyUnit(NumIntersection(h, O), degree)"
},
{
    "assertion": "Vertex ( CONICSECTION: i ) equals LowerFocus ( CONICSECTION: T )",
    "id": 1095,
    "declarations": "i: CONICSECTION; T: CONICSECTION",
    "facts": "Vertex(i) = LowerFocus(T)"
},
{
    "assertion": "Quadrant ( UpperFocus ( CONICSECTION: A ) ) equals lg ( NUMBER: -16 )",
    "id": 1096,
    "declarations": "A: CONICSECTION; -16: NUMBER",
    "facts": "Quadrant(UpperFocus(A)) = lg(-16)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: G ) equals OverlappingLine ( LINESEGMENT: D )",
    "id": 1097,
    "declarations": "G: CONICSECTION; D: LINESEGMENT",
    "facts": "RightDirectrix(G) = OverlappingLine(D)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: q ) equals Area ( CONICSECTION: W )",
    "id": 1098,
    "declarations": "q: CONICSECTION; W: CONICSECTION",
    "facts": "HalfFocalLength(q) = Area(W)"
},
{
    "assertion": "Negation ( LowerFocus ( CONICSECTION: y ) equals POINT: v ) equals BOOL: True",
    "id": 1099,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsOutTangent ( CIRCLE: J, CIRCLE: Y ) equals BOOL: False",
    "id": 1100,
    "declarations": "J: CIRCLE; Y: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(J, Y) = False"
},
{
    "assertion": "ApplyUnit ( Perimeter ( CONICSECTION: o ), DEGREESTR: degree )",
    "id": 1101,
    "declarations": "o: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Perimeter(o), degree) = dummy_operator()"
},
{
    "assertion": "ApplyUnit ( NUMBER: 40, DEGREESTR: degree )",
    "id": 1102,
    "declarations": "40: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(40, degree) = dummy_operator()"
},
{
    "assertion": "RightVertex ( CONICSECTION: i ) equals POINT: u",
    "id": 1103,
    "declarations": "i: CONICSECTION; u: POINT",
    "facts": "RightVertex(i) = u"
},
{
    "assertion": "Center ( CONICSECTION: e ) equals Orthocenter ( TRIANGLE: N )",
    "id": 1104,
    "declarations": "e: CONICSECTION; N: TRIANGLE",
    "facts": "Center(e) = Orthocenter(N)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: S ) equals CIRCLE: M",
    "id": 1105,
    "declarations": "S: TRIANGLE; M: CIRCLE",
    "facts": "CircumCircle(S) = M"
},
{
    "assertion": "Focus ( CONICSECTION: D ) equals RightVertex ( CONICSECTION: H )",
    "id": 1106,
    "declarations": "D: CONICSECTION; H: CONICSECTION",
    "facts": "Focus(D) = RightVertex(H)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: X ) equals NUMBER: 43",
    "id": 1107,
    "declarations": "X: CONICSECTION; 43: NUMBER",
    "facts": "Eccentricity(X) = 43"
},
{
    "assertion": "UpperVertex ( CONICSECTION: C ) equals RightVertex ( CONICSECTION: X )",
    "id": 1108,
    "declarations": "C: CONICSECTION; X: CONICSECTION",
    "facts": "UpperVertex(C) = RightVertex(X)"
},
{
    "assertion": "FootPoint ( LINE: M, LeftDirectrix ( CONICSECTION: z ) ) equals Circumcenter ( TRIANGLE: V )",
    "id": 1109,
    "declarations": "M: LINE; z: CONICSECTION; V: TRIANGLE",
    "facts": "FootPoint(M, LeftDirectrix(z)) = Circumcenter(V)"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: I ) ) equals LINE: X",
    "id": 1110,
    "declarations": "I: ELLIPSE; X: LINE",
    "facts": "OverlappingLine(MajorAxis(I)) = X"
},
{
    "assertion": "IsPerpendicular ( LINE: N, LINE: g ) equals BOOL: False",
    "id": 1111,
    "declarations": "N: LINE; g: LINE; False: BOOL",
    "facts": "IsPerpendicular(N, g) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: H ) equals POINT: l",
    "id": 1112,
    "declarations": "H: CONICSECTION; l: POINT",
    "facts": "LeftVertex(H) = l"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: p ) equals RealAxis ( ELLIPSE: u )",
    "id": 1113,
    "declarations": "p: ELLIPSE; u: ELLIPSE",
    "facts": "ImaginaryAxis(p) = RealAxis(u)"
},
{
    "assertion": "RealAxis ( ELLIPSE: L ) equals LINESEGMENT: A",
    "id": 1114,
    "declarations": "L: ELLIPSE; A: LINESEGMENT",
    "facts": "RealAxis(L) = A"
},
{
    "assertion": "Area ( CONICSECTION: d ) equals NUMBER: -59",
    "id": 1115,
    "declarations": "d: CONICSECTION; -59: NUMBER",
    "facts": "Area(d) = -59"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: e ) ) equals POINT: h",
    "id": 1116,
    "declarations": "e: ELLIPSE; h: POINT",
    "facts": "Endpoint(ImaginaryAxis(e)) = h"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: A ) equals NUMBER: -4",
    "id": 1117,
    "declarations": "A: CONICSECTION; -4: NUMBER",
    "facts": "HalfFocalLength(A) = -4"
},
{
    "assertion": "IsPerpendicular ( LeftDirectrix ( CONICSECTION: y ), LINE: G ) equals BOOL: True",
    "id": 1118,
    "declarations": "y: CONICSECTION; G: LINE; True: BOOL",
    "facts": "IsPerpendicular(LeftDirectrix(y), G) = True"
},
{
    "assertion": "Diameter ( CIRCLE: n ) equals NUMBER: 53",
    "id": 1119,
    "declarations": "n: CIRCLE; 53: NUMBER",
    "facts": "Diameter(n) = 53"
},
{
    "assertion": "Expression ( CURVE: N ) equals Expression ( CURVE: K )",
    "id": 1120,
    "declarations": "N: CURVE; K: CURVE",
    "facts": "Expression(N) = Expression(K)"
},
{
    "assertion": "LineSegmentOf ( Incenter ( TRIANGLE: A ), POINT: p ) equals LINESEGMENT: D",
    "id": 1121,
    "declarations": "A: TRIANGLE; p: POINT; D: LINESEGMENT",
    "facts": "LineSegmentOf(Incenter(A), p) = D"
},
{
    "assertion": "Quadrant ( POINT: o ) equals Radius ( CIRCLE: F )",
    "id": 1122,
    "declarations": "o: POINT; F: CIRCLE",
    "facts": "Quadrant(o) = Radius(F)"
},
{
    "assertion": "IsIntersect ( CURVE: g, CURVE: l ) equals BOOL: False",
    "id": 1123,
    "declarations": "g: CURVE; l: CURVE; False: BOOL",
    "facts": "IsIntersect(g, l) = False"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: q ) equals LINE: X",
    "id": 1124,
    "declarations": "q: CONICSECTION; X: LINE",
    "facts": "RightDirectrix(q) = X"
},
{
    "assertion": "LeftPart ( HYPERBOLA: a ) equals CURVE: p",
    "id": 1125,
    "declarations": "a: HYPERBOLA; p: CURVE",
    "facts": "LeftPart(a) = p"
},
{
    "assertion": "Intercept ( LINE: F, AXIS: xAxis ) equals Abs ( MinorAxis ( ELLIPSE: u ) )",
    "id": 1126,
    "declarations": "F: LINE; xAxis: AXIS; u: ELLIPSE",
    "facts": "Intercept(F, xAxis) = Abs(MinorAxis(u))"
},
{
    "assertion": "Min ( NUMBER: -7 ) equals NUMBER: -77",
    "id": 1127,
    "declarations": "-7: NUMBER; -77: NUMBER",
    "facts": "Min(-7) = -77"
},
{
    "assertion": "Intersection ( CURVE: G, CURVE: l ) equals MidPoint ( LINESEGMENT: j )",
    "id": 1128,
    "declarations": "G: CURVE; l: CURVE; j: LINESEGMENT",
    "facts": "Intersection(G, l) = MidPoint(j)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 0, DEGREESTR: degree )",
    "id": 1129,
    "declarations": "0: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(0, degree) = dummy_operator()"
},
{
    "assertion": "Orthocenter ( TRIANGLE: j ) equals LeftFocus ( CONICSECTION: E )",
    "id": 1130,
    "declarations": "j: TRIANGLE; E: CONICSECTION",
    "facts": "Orthocenter(j) = LeftFocus(E)"
},
{
    "assertion": "Length ( RealAxis ( ELLIPSE: H ) ) equals Area ( CONICSECTION: C )",
    "id": 1131,
    "declarations": "H: ELLIPSE; C: CONICSECTION",
    "facts": "Length(RealAxis(H)) = Area(C)"
},
{
    "assertion": "Slope ( TangentOfPoint ( LowerFocus ( CONICSECTION: S ), CURVE: T ) ) equals FocalLength ( CONICSECTION: y )",
    "id": 1132,
    "declarations": "S: CONICSECTION; T: CURVE; y: CONICSECTION",
    "facts": "Slope(TangentOfPoint(LowerFocus(S), T)) = FocalLength(y)"
},
{
    "assertion": "FootPoint ( OverlappingLine ( LINESEGMENT: V ), LINE: y ) equals Incenter ( TRIANGLE: d )",
    "id": 1133,
    "declarations": "V: LINESEGMENT; y: LINE; d: TRIANGLE",
    "facts": "FootPoint(OverlappingLine(V), y) = Incenter(d)"
},
{
    "assertion": "LineOf ( LeftFocus ( CONICSECTION: x ), RightVertex ( CONICSECTION: g ) ) equals LINE: M",
    "id": 1134,
    "declarations": "x: CONICSECTION; g: CONICSECTION; M: LINE",
    "facts": "LineOf(LeftFocus(x), RightVertex(g)) = M"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: P, CONICSECTION: l ) equals BOOL: False",
    "id": 1135,
    "declarations": "P: LINESEGMENT; l: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(P, l) = False"
},
{
    "assertion": "Length ( MajorAxis ( ELLIPSE: z ) ) equals NUMBER: 48",
    "id": 1136,
    "declarations": "z: ELLIPSE; 48: NUMBER",
    "facts": "Length(MajorAxis(z)) = 48"
},
{
    "assertion": "Locus ( LowerVertex ( CONICSECTION: O ) ) equals CURVE: a",
    "id": 1137,
    "declarations": "O: CONICSECTION; a: CURVE",
    "facts": "Locus(LowerVertex(O)) = a"
},
{
    "assertion": "lg ( NUMBER: -73 ) equals Abs ( LINESEGMENT: d )",
    "id": 1138,
    "declarations": "-73: NUMBER; d: LINESEGMENT",
    "facts": "lg(-73) = Abs(d)"
},
{
    "assertion": "Incenter ( TRIANGLE: t ) equals RightFocus ( CONICSECTION: p )",
    "id": 1139,
    "declarations": "t: TRIANGLE; p: CONICSECTION",
    "facts": "Incenter(t) = RightFocus(p)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: T, CIRCLE: e ) equals BOOL: False",
    "id": 1140,
    "declarations": "T: LINESEGMENT; e: CIRCLE; False: BOOL",
    "facts": "IsDiameter(T, e) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: E ) equals POINT: j",
    "id": 1141,
    "declarations": "E: TRIANGLE; j: POINT",
    "facts": "Incenter(E) = j"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: F ) equals Eccentricity ( CONICSECTION: q )",
    "id": 1142,
    "declarations": "F: CONICSECTION; q: CONICSECTION",
    "facts": "HalfFocalLength(F) = Eccentricity(q)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: Q, CIRCLE: l ) equals BOOL: False",
    "id": 1143,
    "declarations": "Q: LINESEGMENT; l: CIRCLE; False: BOOL",
    "facts": "IsDiameter(Q, l) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: q ) equals POINT: m",
    "id": 1144,
    "declarations": "q: TRIANGLE; m: POINT",
    "facts": "Incenter(q) = m"
},
{
    "assertion": "Endpoint ( LINESEGMENT: O ) equals LeftFocus ( CONICSECTION: g )",
    "id": 1145,
    "declarations": "O: LINESEGMENT; g: CONICSECTION",
    "facts": "Endpoint(O) = LeftFocus(g)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: N ) equals POINT: B",
    "id": 1146,
    "declarations": "N: CONICSECTION; B: POINT",
    "facts": "UpperVertex(N) = B"
},
{
    "assertion": "Radius ( CIRCLE: s ) equals YCoordinate ( POINT: X )",
    "id": 1147,
    "declarations": "s: CIRCLE; X: POINT",
    "facts": "Radius(s) = YCoordinate(X)"
},
{
    "assertion": "Quadrant ( POINT: r ) equals NUMBER: 72",
    "id": 1148,
    "declarations": "r: POINT; 72: NUMBER",
    "facts": "Quadrant(r) = 72"
},
{
    "assertion": "Projection ( LeftVertex ( CONICSECTION: U ), LINE: D ) equals POINT: v",
    "id": 1149,
    "declarations": "U: CONICSECTION; D: LINE; v: POINT",
    "facts": "Projection(LeftVertex(U), D) = v"
},
{
    "assertion": "Focus ( CONICSECTION: K ) equals UpperVertex ( CONICSECTION: R )",
    "id": 1150,
    "declarations": "K: CONICSECTION; R: CONICSECTION",
    "facts": "Focus(K) = UpperVertex(R)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: E ) equals POINT: j",
    "id": 1151,
    "declarations": "E: CONICSECTION; j: POINT",
    "facts": "LowerFocus(E) = j"
},
{
    "assertion": "TangentPoint ( OverlappingLine ( LINESEGMENT: q ), CIRCLE: D ) equals POINT: J",
    "id": 1152,
    "declarations": "q: LINESEGMENT; D: CIRCLE; J: POINT",
    "facts": "TangentPoint(OverlappingLine(q), D) = J"
},
{
    "assertion": "Eccentricity ( CONICSECTION: o ) equals NUMBER: 7",
    "id": 1153,
    "declarations": "o: CONICSECTION; 7: NUMBER",
    "facts": "Eccentricity(o) = 7"
},
{
    "assertion": "RightFocus ( CONICSECTION: d ) equals POINT: w",
    "id": 1154,
    "declarations": "d: CONICSECTION; w: POINT",
    "facts": "RightFocus(d) = w"
},
{
    "assertion": "Center ( CONICSECTION: Y ) equals LeftVertex ( CONICSECTION: B )",
    "id": 1155,
    "declarations": "Y: CONICSECTION; B: CONICSECTION",
    "facts": "Center(Y) = LeftVertex(B)"
},
{
    "assertion": "Radius ( CIRCLE: u ) equals XCoordinate ( LeftFocus ( CONICSECTION: r ) )",
    "id": 1156,
    "declarations": "u: CIRCLE; r: CONICSECTION",
    "facts": "Radius(u) = XCoordinate(LeftFocus(r))"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: g ) equals LINE: a",
    "id": 1157,
    "declarations": "g: CONICSECTION; a: LINE",
    "facts": "LeftDirectrix(g) = a"
},
{
    "assertion": "ApplyUnit ( XCoordinate ( POINT: e ), DEGREESTR: degree )",
    "id": 1158,
    "declarations": "e: POINT; degree: DEGREESTR",
    "facts": "ApplyUnit(XCoordinate(e), degree) = dummy_operator()"
},
{
    "assertion": "Slope ( PerpendicularBisector ( RealAxis ( ELLIPSE: K ) ) ) equals NUMBER: 57",
    "id": 1159,
    "declarations": "K: ELLIPSE; 57: NUMBER",
    "facts": "Slope(PerpendicularBisector(RealAxis(K))) = 57"
},
{
    "assertion": "Distance ( POINT: N, POINT: b ) equals Diameter ( CIRCLE: Z )",
    "id": 1160,
    "declarations": "N: POINT; b: POINT; Z: CIRCLE",
    "facts": "Distance(N, b) = Diameter(Z)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: K ) equals LowerFocus ( CONICSECTION: k )",
    "id": 1161,
    "declarations": "K: CONICSECTION; k: CONICSECTION",
    "facts": "LowerFocus(K) = LowerFocus(k)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: I ) equals POINT: T",
    "id": 1162,
    "declarations": "I: TRIANGLE; T: POINT",
    "facts": "Circumcenter(I) = T"
},
{
    "assertion": "lg ( Diameter ( CIRCLE: u ) ) equals HalfFocalLength ( CONICSECTION: C )",
    "id": 1163,
    "declarations": "u: CIRCLE; C: CONICSECTION",
    "facts": "lg(Diameter(u)) = HalfFocalLength(C)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: f ) equals UpperFocus ( CONICSECTION: T )",
    "id": 1164,
    "declarations": "f: TRIANGLE; T: CONICSECTION",
    "facts": "Circumcenter(f) = UpperFocus(T)"
},
{
    "assertion": "Abs ( LINESEGMENT: C ) equals NUMBER: -54",
    "id": 1165,
    "declarations": "C: LINESEGMENT; -54: NUMBER",
    "facts": "Abs(C) = -54"
},
{
    "assertion": "IsOutTangent ( CIRCLE: N, CIRCLE: m ) equals BOOL: False",
    "id": 1166,
    "declarations": "N: CIRCLE; m: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(N, m) = False"
},
{
    "assertion": "Negation ( Negation ( sqrt ( sqrt ( Area ( CONICSECTION: d ) ) ) equals FocalLength ( CONICSECTION: T ) ) equals BOOL: False ) equals BOOL: True",
    "id": 1167,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "FootPoint ( LINE: M, PerpendicularBisector ( LINESEGMENT: y ) ) equals POINT: a",
    "id": 1168,
    "declarations": "M: LINE; y: LINESEGMENT; a: POINT",
    "facts": "FootPoint(M, PerpendicularBisector(y)) = a"
},
{
    "assertion": "FocalLength ( CONICSECTION: V ) equals Abs ( LINESEGMENT: i )",
    "id": 1169,
    "declarations": "V: CONICSECTION; i: LINESEGMENT",
    "facts": "FocalLength(V) = Abs(i)"
},
{
    "assertion": "Circumcenter ( TriangleOf ( Orthocenter ( TRIANGLE: e ), POINT: A, MidPoint ( LINESEGMENT: e ) ) ) equals POINT: M",
    "id": 1170,
    "declarations": "e: TRIANGLE; A: POINT; e: LINESEGMENT; M: POINT",
    "facts": "Circumcenter(TriangleOf(Orthocenter(e), A, MidPoint(e))) = M"
},
{
    "assertion": "And ( Negation ( LineOf ( POINT: l, Incenter ( TRIANGLE: C ) ) equals OverlappingLine ( LINESEGMENT: L ) ) equals BOOL: False, LeftVertex ( CONICSECTION: T ) equals RightFocus ( CONICSECTION: o ) ) equals BOOL: False",
    "id": 1171,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: G ) equals LINE: U",
    "id": 1172,
    "declarations": "G: CONICSECTION; U: LINE",
    "facts": "LeftDirectrix(G) = U"
},
{
    "assertion": "Focus ( CONICSECTION: k ) equals POINT: O",
    "id": 1173,
    "declarations": "k: CONICSECTION; O: POINT",
    "facts": "Focus(k) = O"
},
{
    "assertion": "YCoordinate ( POINT: Q ) equals NUMBER: -1",
    "id": 1174,
    "declarations": "Q: POINT; -1: NUMBER",
    "facts": "YCoordinate(Q) = -1"
},
{
    "assertion": "ApplyUnit ( XCoordinate ( RightVertex ( CONICSECTION: U ) ), DEGREESTR: degree )",
    "id": 1175,
    "declarations": "U: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(XCoordinate(RightVertex(U)), degree) = dummy_operator()"
},
{
    "assertion": "Locus ( POINT: E ) equals CURVE: R",
    "id": 1176,
    "declarations": "E: POINT; R: CURVE",
    "facts": "Locus(E) = R"
},
{
    "assertion": "Area ( CONICSECTION: Z ) equals NUMBER: 40",
    "id": 1177,
    "declarations": "Z: CONICSECTION; 40: NUMBER",
    "facts": "Area(Z) = 40"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: M ) ) equals Diameter ( CIRCLE: V )",
    "id": 1178,
    "declarations": "M: TRIANGLE; V: CIRCLE",
    "facts": "Diameter(CircumCircle(M)) = Diameter(V)"
},
{
    "assertion": "Diameter ( CIRCLE: O ) equals Quadrant ( POINT: c )",
    "id": 1179,
    "declarations": "O: CIRCLE; c: POINT",
    "facts": "Diameter(O) = Quadrant(c)"
},
{
    "assertion": "RightVertex ( CONICSECTION: B ) equals RightVertex ( CONICSECTION: o )",
    "id": 1180,
    "declarations": "B: CONICSECTION; o: CONICSECTION",
    "facts": "RightVertex(B) = RightVertex(o)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: P ) equals LINE: a",
    "id": 1181,
    "declarations": "P: HYPERBOLA; a: LINE",
    "facts": "Asymptote(P) = a"
},
{
    "assertion": "UpperFocus ( CONICSECTION: A ) equals LowerFocus ( CONICSECTION: l )",
    "id": 1182,
    "declarations": "A: CONICSECTION; l: CONICSECTION",
    "facts": "UpperFocus(A) = LowerFocus(l)"
},
{
    "assertion": "Radius ( CIRCLE: I ) equals NUMBER: 81",
    "id": 1183,
    "declarations": "I: CIRCLE; 81: NUMBER",
    "facts": "Radius(I) = 81"
},
{
    "assertion": "Area ( CONICSECTION: n ) equals HalfFocalLength ( CONICSECTION: f )",
    "id": 1184,
    "declarations": "n: CONICSECTION; f: CONICSECTION",
    "facts": "Area(n) = HalfFocalLength(f)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: v ) equals LINE: s",
    "id": 1185,
    "declarations": "v: CONICSECTION; s: LINE",
    "facts": "RightDirectrix(v) = s"
},
{
    "assertion": "ApplyUnit ( NUMBER: 94, DEGREESTR: degree )",
    "id": 1186,
    "declarations": "94: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(94, degree) = dummy_operator()"
},
{
    "assertion": "LocusEquation ( UpperVertex ( CONICSECTION: z ) ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 1187,
    "declarations": "z: CONICSECTION; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "LocusEquation(UpperVertex(z)) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "LeftVertex ( CONICSECTION: X ) equals LeftFocus ( CONICSECTION: x )",
    "id": 1188,
    "declarations": "X: CONICSECTION; x: CONICSECTION",
    "facts": "LeftVertex(X) = LeftFocus(x)"
},
{
    "assertion": "Locus ( POINT: A ) equals CURVE: V",
    "id": 1189,
    "declarations": "A: POINT; V: CURVE",
    "facts": "Locus(A) = V"
},
{
    "assertion": "LeftFocus ( CONICSECTION: k ) equals Projection ( POINT: r, LINE: o )",
    "id": 1190,
    "declarations": "k: CONICSECTION; r: POINT; o: LINE",
    "facts": "LeftFocus(k) = Projection(r, o)"
},
{
    "assertion": "Negation ( RightPart ( HYPERBOLA: j ) equals CURVE: z ) equals BOOL: True",
    "id": 1191,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Circumcenter ( TRIANGLE: f ) equals MidPoint ( LINESEGMENT: d )",
    "id": 1192,
    "declarations": "f: TRIANGLE; d: LINESEGMENT",
    "facts": "Circumcenter(f) = MidPoint(d)"
},
{
    "assertion": "Area ( CONICSECTION: S ) equals Area ( CONICSECTION: i )",
    "id": 1193,
    "declarations": "S: CONICSECTION; i: CONICSECTION",
    "facts": "Area(S) = Area(i)"
},
{
    "assertion": "Abs ( MajorAxis ( ELLIPSE: I ) ) equals Intercept ( LINE: i, AXIS: yAxis )",
    "id": 1194,
    "declarations": "I: ELLIPSE; i: LINE; yAxis: AXIS",
    "facts": "Abs(MajorAxis(I)) = Intercept(i, yAxis)"
},
{
    "assertion": "RightFocus ( CONICSECTION: B ) equals LowerVertex ( CONICSECTION: n )",
    "id": 1195,
    "declarations": "B: CONICSECTION; n: CONICSECTION",
    "facts": "RightFocus(B) = LowerVertex(n)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: I ) equals Circumcenter ( TRIANGLE: T )",
    "id": 1196,
    "declarations": "I: LINESEGMENT; T: TRIANGLE",
    "facts": "Endpoint(I) = Circumcenter(T)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: O, TRIANGLE: E ) equals BOOL: False",
    "id": 1197,
    "declarations": "O: CIRCLE; E: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(O, E) = False"
},
{
    "assertion": "Min ( NUMBER: 23 ) equals NUMBER: 44",
    "id": 1198,
    "declarations": "23: NUMBER; 44: NUMBER",
    "facts": "Min(23) = 44"
},
{
    "assertion": "Asymptote ( HYPERBOLA: w ) equals LINE: W",
    "id": 1199,
    "declarations": "w: HYPERBOLA; W: LINE",
    "facts": "Asymptote(w) = W"
},
{
    "assertion": "Radius ( CIRCLE: S ) equals YCoordinate ( LeftVertex ( CONICSECTION: V ) )",
    "id": 1200,
    "declarations": "S: CIRCLE; V: CONICSECTION",
    "facts": "Radius(S) = YCoordinate(LeftVertex(V))"
},
{
    "assertion": "Distance ( POINT: X, POINT: W ) equals YCoordinate ( MidPoint ( LINESEGMENT: r ) )",
    "id": 1201,
    "declarations": "X: POINT; W: POINT; r: LINESEGMENT",
    "facts": "Distance(X, W) = YCoordinate(MidPoint(r))"
},
{
    "assertion": "Distance ( UpperFocus ( CONICSECTION: o ), RightFocus ( CONICSECTION: C ) ) equals Slope ( LINE: V )",
    "id": 1202,
    "declarations": "o: CONICSECTION; C: CONICSECTION; V: LINE",
    "facts": "Distance(UpperFocus(o), RightFocus(C)) = Slope(V)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 42, DEGREESTR: degree )",
    "id": 1203,
    "declarations": "42: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(42, degree) = dummy_operator()"
},
{
    "assertion": "MinorAxis ( ELLIPSE: S ) equals LINESEGMENT: E",
    "id": 1204,
    "declarations": "S: ELLIPSE; E: LINESEGMENT",
    "facts": "MinorAxis(S) = E"
},
{
    "assertion": "IsIntersect ( CURVE: W, CURVE: B ) equals BOOL: False",
    "id": 1205,
    "declarations": "W: CURVE; B: CURVE; False: BOOL",
    "facts": "IsIntersect(W, B) = False"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: w, CircumCircle ( TRIANGLE: H ) ) equals BOOL: True",
    "id": 1206,
    "declarations": "w: LINESEGMENT; H: TRIANGLE; True: BOOL",
    "facts": "IsDiameter(w, CircumCircle(H)) = True"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: L, TRIANGLE: V ) equals BOOL: False",
    "id": 1207,
    "declarations": "L: CIRCLE; V: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(L, V) = False"
},
{
    "assertion": "MidPoint ( LINESEGMENT: r ) equals UpperFocus ( CONICSECTION: d )",
    "id": 1208,
    "declarations": "r: LINESEGMENT; d: CONICSECTION",
    "facts": "MidPoint(r) = UpperFocus(d)"
},
{
    "assertion": "Radius ( CIRCLE: T ) equals sqrt ( NUMBER: 41 )",
    "id": 1209,
    "declarations": "T: CIRCLE; 41: NUMBER",
    "facts": "Radius(T) = sqrt(41)"
},
{
    "assertion": "Projection ( POINT: j, RightDirectrix ( CONICSECTION: q ) ) equals RightVertex ( CONICSECTION: p )",
    "id": 1210,
    "declarations": "j: POINT; q: CONICSECTION; p: CONICSECTION",
    "facts": "Projection(j, RightDirectrix(q)) = RightVertex(p)"
},
{
    "assertion": "And ( ApplyUnit ( InterReciprocal ( sqrt ( NUMBER: -81 ) ), DEGREESTR: degree ), Orthocenter ( TRIANGLE: L ) equals POINT: l ) equals BOOL: False",
    "id": 1211,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "XCoordinate ( Projection ( UpperFocus ( CONICSECTION: L ), LINE: L ) ) equals NUMBER: 78",
    "id": 1212,
    "declarations": "L: CONICSECTION; L: LINE; 78: NUMBER",
    "facts": "XCoordinate(Projection(UpperFocus(L), L)) = 78"
},
{
    "assertion": "Distance ( FootPoint ( LINE: f, LINE: s ), Circumcenter ( TRIANGLE: g ) ) equals XCoordinate ( LowerVertex ( CONICSECTION: r ) )",
    "id": 1213,
    "declarations": "f: LINE; s: LINE; g: TRIANGLE; r: CONICSECTION",
    "facts": "Distance(FootPoint(f, s), Circumcenter(g)) = XCoordinate(LowerVertex(r))"
},
{
    "assertion": "Focus ( CONICSECTION: X ) equals LeftFocus ( CONICSECTION: Y )",
    "id": 1214,
    "declarations": "X: CONICSECTION; Y: CONICSECTION",
    "facts": "Focus(X) = LeftFocus(Y)"
},
{
    "assertion": "Radius ( CIRCLE: N ) equals InterReciprocal ( Radius ( CIRCLE: y ) )",
    "id": 1215,
    "declarations": "N: CIRCLE; y: CIRCLE",
    "facts": "Radius(N) = InterReciprocal(Radius(y))"
},
{
    "assertion": "Min ( YCoordinate ( LowerVertex ( CONICSECTION: c ) ) ) equals Radius ( CIRCLE: d )",
    "id": 1216,
    "declarations": "c: CONICSECTION; d: CIRCLE",
    "facts": "Min(YCoordinate(LowerVertex(c))) = Radius(d)"
},
{
    "assertion": "Min ( sqrt ( NUMBER: -34 ) ) equals Eccentricity ( CONICSECTION: h )",
    "id": 1217,
    "declarations": "-34: NUMBER; h: CONICSECTION",
    "facts": "Min(sqrt(-34)) = Eccentricity(h)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: X ) equals POINT: n",
    "id": 1218,
    "declarations": "X: CONICSECTION; n: POINT",
    "facts": "UpperFocus(X) = n"
},
{
    "assertion": "LeftPart ( HYPERBOLA: Y ) equals LeftPart ( HYPERBOLA: s )",
    "id": 1219,
    "declarations": "Y: HYPERBOLA; s: HYPERBOLA",
    "facts": "LeftPart(Y) = LeftPart(s)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: m ) equals NUMBER: -54",
    "id": 1220,
    "declarations": "m: CONICSECTION; -54: NUMBER",
    "facts": "HalfFocalLength(m) = -54"
},
{
    "assertion": "Asymptote ( HYPERBOLA: E ) equals LINE: d",
    "id": 1221,
    "declarations": "E: HYPERBOLA; d: LINE",
    "facts": "Asymptote(E) = d"
},
{
    "assertion": "sqrt ( NUMBER: 90 ) equals InterReciprocal ( HalfFocalLength ( CONICSECTION: d ) )",
    "id": 1222,
    "declarations": "90: NUMBER; d: CONICSECTION",
    "facts": "sqrt(90) = InterReciprocal(HalfFocalLength(d))"
},
{
    "assertion": "Radius ( CIRCLE: A ) equals Abs ( ImaginaryAxis ( ELLIPSE: R ) )",
    "id": 1223,
    "declarations": "A: CIRCLE; R: ELLIPSE",
    "facts": "Radius(A) = Abs(ImaginaryAxis(R))"
},
{
    "assertion": "sqrt ( Area ( CONICSECTION: x ) ) equals lg ( NUMBER: 41 )",
    "id": 1224,
    "declarations": "x: CONICSECTION; 41: NUMBER",
    "facts": "sqrt(Area(x)) = lg(41)"
},
{
    "assertion": "Area ( CONICSECTION: i ) equals Perimeter ( CONICSECTION: L )",
    "id": 1225,
    "declarations": "i: CONICSECTION; L: CONICSECTION",
    "facts": "Area(i) = Perimeter(L)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: F ) equals CIRCLE: j",
    "id": 1226,
    "declarations": "F: TRIANGLE; j: CIRCLE",
    "facts": "CircumCircle(F) = j"
},
{
    "assertion": "Quadrant ( POINT: f ) equals Abs ( MajorAxis ( ELLIPSE: q ) )",
    "id": 1227,
    "declarations": "f: POINT; q: ELLIPSE",
    "facts": "Quadrant(f) = Abs(MajorAxis(q))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: z ) equals CURVE: E",
    "id": 1228,
    "declarations": "z: HYPERBOLA; E: CURVE",
    "facts": "LeftPart(z) = E"
},
{
    "assertion": "Abs ( LINESEGMENT: M ) equals sqrt ( XCoordinate ( UpperFocus ( CONICSECTION: h ) ) )",
    "id": 1229,
    "declarations": "M: LINESEGMENT; h: CONICSECTION",
    "facts": "Abs(M) = sqrt(XCoordinate(UpperFocus(h)))"
},
{
    "assertion": "TangentOfPoint ( POINT: f, CURVE: e ) equals LINE: w",
    "id": 1230,
    "declarations": "f: POINT; e: CURVE; w: LINE",
    "facts": "TangentOfPoint(f, e) = w"
},
{
    "assertion": "CircumCircle ( TRIANGLE: K ) equals CIRCLE: c",
    "id": 1231,
    "declarations": "K: TRIANGLE; c: CIRCLE",
    "facts": "CircumCircle(K) = c"
},
{
    "assertion": "LowerFocus ( CONICSECTION: T ) equals LeftFocus ( CONICSECTION: g )",
    "id": 1232,
    "declarations": "T: CONICSECTION; g: CONICSECTION",
    "facts": "LowerFocus(T) = LeftFocus(g)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: G ) equals AXIS: xAxis",
    "id": 1233,
    "declarations": "G: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(G) = xAxis"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: Q ) equals AXIS: xAxis",
    "id": 1234,
    "declarations": "Q: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(Q) = xAxis"
},
{
    "assertion": "IsInTangent ( CircumCircle ( TRIANGLE: i ), CIRCLE: R ) equals BOOL: False",
    "id": 1235,
    "declarations": "i: TRIANGLE; R: CIRCLE; False: BOOL",
    "facts": "IsInTangent(CircumCircle(i), R) = False"
},
{
    "assertion": "FocalLength ( CONICSECTION: E ) equals NUMBER: -42",
    "id": 1236,
    "declarations": "E: CONICSECTION; -42: NUMBER",
    "facts": "FocalLength(E) = -42"
},
{
    "assertion": "Inclination ( LINE: Z ) equals NUMBER: -62",
    "id": 1237,
    "declarations": "Z: LINE; -62: NUMBER",
    "facts": "Inclination(Z) = -62"
},
{
    "assertion": "LeftFocus ( CONICSECTION: W ) equals RightFocus ( CONICSECTION: W )",
    "id": 1238,
    "declarations": "W: CONICSECTION; W: CONICSECTION",
    "facts": "LeftFocus(W) = RightFocus(W)"
},
{
    "assertion": "TangentPoint ( LINE: L, CIRCLE: G ) equals POINT: y",
    "id": 1239,
    "declarations": "L: LINE; G: CIRCLE; y: POINT",
    "facts": "TangentPoint(L, G) = y"
},
{
    "assertion": "Negation ( DotProduct ( VECTOR: B, VECTOR: J ) equals NUMBER: 26 ) equals BOOL: False",
    "id": 1240,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "InterReciprocal ( Quadrant ( LeftFocus ( CONICSECTION: A ) ) ) equals YCoordinate ( POINT: V )",
    "id": 1241,
    "declarations": "A: CONICSECTION; V: POINT",
    "facts": "InterReciprocal(Quadrant(LeftFocus(A))) = YCoordinate(V)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: u ) equals Center ( CONICSECTION: N )",
    "id": 1242,
    "declarations": "u: CONICSECTION; N: CONICSECTION",
    "facts": "LeftFocus(u) = Center(N)"
},
{
    "assertion": "Focus ( CONICSECTION: x ) equals Projection ( POINT: Q, RightDirectrix ( CONICSECTION: P ) )",
    "id": 1243,
    "declarations": "x: CONICSECTION; Q: POINT; P: CONICSECTION",
    "facts": "Focus(x) = Projection(Q, RightDirectrix(P))"
},
{
    "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: N ) ) equals Quadrant ( POINT: a )",
    "id": 1244,
    "declarations": "N: CONICSECTION; a: POINT",
    "facts": "YCoordinate(LowerVertex(N)) = Quadrant(a)"
},
{
    "assertion": "TangentOnPoint ( POINT: o, CURVE: L ) equals LINE: j",
    "id": 1245,
    "declarations": "o: POINT; L: CURVE; j: LINE",
    "facts": "TangentOnPoint(o, L) = j"
},
{
    "assertion": "IsInTangent ( CIRCLE: r, CIRCLE: c ) equals BOOL: False",
    "id": 1246,
    "declarations": "r: CIRCLE; c: CIRCLE; False: BOOL",
    "facts": "IsInTangent(r, c) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: R ) equals sqrt ( Radius ( CIRCLE: b ) )",
    "id": 1247,
    "declarations": "R: CONICSECTION; b: CIRCLE",
    "facts": "Perimeter(R) = sqrt(Radius(b))"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: K, CONICSECTION: u ) equals BOOL: False",
    "id": 1248,
    "declarations": "K: LINESEGMENT; u: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(K, u) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: O ) equals LeftFocus ( CONICSECTION: k )",
    "id": 1249,
    "declarations": "O: CONICSECTION; k: CONICSECTION",
    "facts": "LowerFocus(O) = LeftFocus(k)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: p ) equals LINESEGMENT: Z",
    "id": 1250,
    "declarations": "p: ELLIPSE; Z: LINESEGMENT",
    "facts": "ImaginaryAxis(p) = Z"
},
{
    "assertion": "DotProduct ( VECTOR: g, VECTOR: x ) equals Slope ( PerpendicularBisector ( LINESEGMENT: F ) )",
    "id": 1251,
    "declarations": "g: VECTOR; x: VECTOR; F: LINESEGMENT",
    "facts": "DotProduct(g, x) = Slope(PerpendicularBisector(F))"
},
{
    "assertion": "FocalLength ( CONICSECTION: g ) equals NumIntersection ( CURVE: r, CURVE: p )",
    "id": 1252,
    "declarations": "g: CONICSECTION; r: CURVE; p: CURVE",
    "facts": "FocalLength(g) = NumIntersection(r, p)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: f ) equals POINT: w",
    "id": 1253,
    "declarations": "f: CONICSECTION; w: POINT",
    "facts": "LeftVertex(f) = w"
},
{
    "assertion": "VectorOf ( POINT: Q, POINT: A ) equals VECTOR: I",
    "id": 1254,
    "declarations": "Q: POINT; A: POINT; I: VECTOR",
    "facts": "VectorOf(Q, A) = I"
},
{
    "assertion": "UpperFocus ( CONICSECTION: y ) equals POINT: A",
    "id": 1256,
    "declarations": "y: CONICSECTION; A: POINT",
    "facts": "UpperFocus(y) = A"
},
{
    "assertion": "RightPart ( HYPERBOLA: W ) equals CURVE: I",
    "id": 1257,
    "declarations": "W: HYPERBOLA; I: CURVE",
    "facts": "RightPart(W) = I"
},
{
    "assertion": "RightPart ( HYPERBOLA: w ) equals CURVE: t",
    "id": 1258,
    "declarations": "w: HYPERBOLA; t: CURVE",
    "facts": "RightPart(w) = t"
},
{
    "assertion": "InterReciprocal ( YCoordinate ( Incenter ( TRIANGLE: C ) ) ) equals InterReciprocal ( HalfFocalLength ( CONICSECTION: m ) )",
    "id": 1259,
    "declarations": "C: TRIANGLE; m: CONICSECTION",
    "facts": "InterReciprocal(YCoordinate(Incenter(C))) = InterReciprocal(HalfFocalLength(m))"
},
{
    "assertion": "RightPart ( HYPERBOLA: A ) equals CURVE: o",
    "id": 1260,
    "declarations": "A: HYPERBOLA; o: CURVE",
    "facts": "RightPart(A) = o"
},
{
    "assertion": "UpperVertex ( CONICSECTION: M ) equals Incenter ( TRIANGLE: U )",
    "id": 1261,
    "declarations": "M: CONICSECTION; U: TRIANGLE",
    "facts": "UpperVertex(M) = Incenter(U)"
},
{
    "assertion": "Intersection ( Locus ( UpperFocus ( CONICSECTION: M ) ), LeftPart ( HYPERBOLA: T ) ) equals LowerFocus ( CONICSECTION: F )",
    "id": 1262,
    "declarations": "M: CONICSECTION; T: HYPERBOLA; F: CONICSECTION",
    "facts": "Intersection(Locus(UpperFocus(M)), LeftPart(T)) = LowerFocus(F)"
},
{
    "assertion": "XCoordinate ( POINT: E ) equals NUMBER: 11",
    "id": 1263,
    "declarations": "E: POINT; 11: NUMBER",
    "facts": "XCoordinate(E) = 11"
},
{
    "assertion": "Incenter ( TRIANGLE: t ) equals POINT: N",
    "id": 1264,
    "declarations": "t: TRIANGLE; N: POINT",
    "facts": "Incenter(t) = N"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: i ) ) equals POINT: q",
    "id": 1265,
    "declarations": "i: ELLIPSE; q: POINT",
    "facts": "Endpoint(ImaginaryAxis(i)) = q"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: h ) equals TangentOnPoint ( POINT: a, CURVE: q )",
    "id": 1266,
    "declarations": "h: LINESEGMENT; a: POINT; q: CURVE",
    "facts": "PerpendicularBisector(h) = TangentOnPoint(a, q)"
},
{
    "assertion": "PointOnCurve ( LowerFocus ( CONICSECTION: X ), CURVE: m ) equals BOOL: False",
    "id": 1267,
    "declarations": "X: CONICSECTION; m: CURVE; False: BOOL",
    "facts": "PointOnCurve(LowerFocus(X), m) = False"
},
{
    "assertion": "Between ( LowerVertex ( CONICSECTION: W ), UpperFocus ( CONICSECTION: f ), LowerVertex ( CONICSECTION: a ) ) equals BOOL: True",
    "id": 1268,
    "declarations": "W: CONICSECTION; f: CONICSECTION; a: CONICSECTION; True: BOOL",
    "facts": "Between(LowerVertex(W), UpperFocus(f), LowerVertex(a)) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: y ) equals POINT: w",
    "id": 1269,
    "declarations": "y: CONICSECTION; w: POINT",
    "facts": "LeftFocus(y) = w"
},
{
    "assertion": "MidPoint ( LINESEGMENT: q ) equals POINT: f",
    "id": 1270,
    "declarations": "q: LINESEGMENT; f: POINT",
    "facts": "MidPoint(q) = f"
},
{
    "assertion": "LowerFocus ( CONICSECTION: d ) equals RightVertex ( CONICSECTION: c )",
    "id": 1271,
    "declarations": "d: CONICSECTION; c: CONICSECTION",
    "facts": "LowerFocus(d) = RightVertex(c)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: h ) equals LINE: T",
    "id": 1272,
    "declarations": "h: CONICSECTION; T: LINE",
    "facts": "LeftDirectrix(h) = T"
},
{
    "assertion": "XCoordinate ( MidPoint ( LINESEGMENT: r ) ) equals Min ( NUMBER: 82 )",
    "id": 1273,
    "declarations": "r: LINESEGMENT; 82: NUMBER",
    "facts": "XCoordinate(MidPoint(r)) = Min(82)"
},
{
    "assertion": "Vertex ( CONICSECTION: n ) equals POINT: f",
    "id": 1274,
    "declarations": "n: CONICSECTION; f: POINT",
    "facts": "Vertex(n) = f"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Z ) equals UpperFocus ( CONICSECTION: w )",
    "id": 1275,
    "declarations": "Z: CONICSECTION; w: CONICSECTION",
    "facts": "LeftFocus(Z) = UpperFocus(w)"
},
{
    "assertion": "TangentOnPoint ( Incenter ( TRIANGLE: x ), CURVE: H ) equals LINE: p",
    "id": 1276,
    "declarations": "x: TRIANGLE; H: CURVE; p: LINE",
    "facts": "TangentOnPoint(Incenter(x), H) = p"
},
{
    "assertion": "XCoordinate ( Incenter ( TRIANGLE: t ) ) equals NUMBER: 44",
    "id": 1277,
    "declarations": "t: TRIANGLE; 44: NUMBER",
    "facts": "XCoordinate(Incenter(t)) = 44"
},
{
    "assertion": "Length ( LINESEGMENT: l ) equals Length ( RealAxis ( ELLIPSE: K ) )",
    "id": 1278,
    "declarations": "l: LINESEGMENT; K: ELLIPSE",
    "facts": "Length(l) = Length(RealAxis(K))"
},
{
    "assertion": "YCoordinate ( UpperFocus ( CONICSECTION: h ) ) equals NUMBER: -2",
    "id": 1279,
    "declarations": "h: CONICSECTION; -2: NUMBER",
    "facts": "YCoordinate(UpperFocus(h)) = -2"
},
{
    "assertion": "Slope ( LINE: f ) equals Diameter ( CIRCLE: Y )",
    "id": 1280,
    "declarations": "f: LINE; Y: CIRCLE",
    "facts": "Slope(f) = Diameter(Y)"
},
{
    "assertion": "TangentOnPoint ( UpperFocus ( CONICSECTION: g ), CURVE: N ) equals TangentOfPoint ( FootPoint ( PerpendicularBisector ( LINESEGMENT: f ), LINE: s ), CURVE: w )",
    "id": 1281,
    "declarations": "g: CONICSECTION; N: CURVE; f: LINESEGMENT; s: LINE; w: CURVE",
    "facts": "TangentOnPoint(UpperFocus(g), N) = TangentOfPoint(FootPoint(PerpendicularBisector(f), s), w)"
},
{
    "assertion": "Intercept ( LeftDirectrix ( CONICSECTION: n ), AXIS: xAxis ) equals Quadrant ( LowerVertex ( CONICSECTION: e ) )",
    "id": 1282,
    "declarations": "n: CONICSECTION; xAxis: AXIS; e: CONICSECTION",
    "facts": "Intercept(LeftDirectrix(n), xAxis) = Quadrant(LowerVertex(e))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: v ) equals CIRCLE: r",
    "id": 1283,
    "declarations": "v: TRIANGLE; r: CIRCLE",
    "facts": "CircumCircle(v) = r"
},
{
    "assertion": "Length ( LINESEGMENT: w ) equals YCoordinate ( LeftFocus ( CONICSECTION: s ) )",
    "id": 1285,
    "declarations": "w: LINESEGMENT; s: CONICSECTION",
    "facts": "Length(w) = YCoordinate(LeftFocus(s))"
},
{
    "assertion": "MidPoint ( LINESEGMENT: B ) equals Center ( CONICSECTION: V )",
    "id": 1286,
    "declarations": "B: LINESEGMENT; V: CONICSECTION",
    "facts": "MidPoint(B) = Center(V)"
},
{
    "assertion": "Area ( CONICSECTION: Q ) equals Length ( LINESEGMENT: D )",
    "id": 1287,
    "declarations": "Q: CONICSECTION; D: LINESEGMENT",
    "facts": "Area(Q) = Length(D)"
},
{
    "assertion": "Diameter ( CIRCLE: C ) equals NUMBER: 28",
    "id": 1288,
    "declarations": "C: CIRCLE; 28: NUMBER",
    "facts": "Diameter(C) = 28"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: Y ) equals AXIS: yAxis",
    "id": 1289,
    "declarations": "Y: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(Y) = yAxis"
},
{
    "assertion": "Projection ( RightVertex ( CONICSECTION: S ), OverlappingLine ( LINESEGMENT: h ) ) equals LowerVertex ( CONICSECTION: w )",
    "id": 1290,
    "declarations": "S: CONICSECTION; h: LINESEGMENT; w: CONICSECTION",
    "facts": "Projection(RightVertex(S), OverlappingLine(h)) = LowerVertex(w)"
},
{
    "assertion": "DotProduct ( VECTOR: c, VECTOR: Z ) equals Inclination ( LINE: q )",
    "id": 1291,
    "declarations": "c: VECTOR; Z: VECTOR; q: LINE",
    "facts": "DotProduct(c, Z) = Inclination(q)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: K ) equals CIRCLE: O",
    "id": 1292,
    "declarations": "K: TRIANGLE; O: CIRCLE",
    "facts": "CircumCircle(K) = O"
},
{
    "assertion": "PointOnCurve ( POINT: R, RightPart ( HYPERBOLA: q ) ) equals BOOL: False",
    "id": 1293,
    "declarations": "R: POINT; q: HYPERBOLA; False: BOOL",
    "facts": "PointOnCurve(R, RightPart(q)) = False"
},
{
    "assertion": "Locus ( UpperFocus ( CONICSECTION: b ) ) equals CURVE: S",
    "id": 1294,
    "declarations": "b: CONICSECTION; S: CURVE",
    "facts": "Locus(UpperFocus(b)) = S"
},
{
    "assertion": "OverlappingLine ( LineSegmentOf ( POINT: e, POINT: g ) ) equals LINE: u",
    "id": 1295,
    "declarations": "e: POINT; g: POINT; u: LINE",
    "facts": "OverlappingLine(LineSegmentOf(e, g)) = u"
},
{
    "assertion": "Intersection ( CURVE: d, CURVE: F ) equals POINT: w",
    "id": 1296,
    "declarations": "d: CURVE; F: CURVE; w: POINT",
    "facts": "Intersection(d, F) = w"
},
{
    "assertion": "NumIntersection ( CURVE: d, CURVE: A ) equals NUMBER: -19",
    "id": 1297,
    "declarations": "d: CURVE; A: CURVE; -19: NUMBER",
    "facts": "NumIntersection(d, A) = -19"
},
{
    "assertion": "Directrix ( CONICSECTION: g ) equals TangentOfPoint ( UpperFocus ( CONICSECTION: E ), CURVE: e )",
    "id": 1298,
    "declarations": "g: CONICSECTION; E: CONICSECTION; e: CURVE",
    "facts": "Directrix(g) = TangentOfPoint(UpperFocus(E), e)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: S ) equals LeftVertex ( CONICSECTION: Y )",
    "id": 1299,
    "declarations": "S: TRIANGLE; Y: CONICSECTION",
    "facts": "Orthocenter(S) = LeftVertex(Y)"
},
{
    "assertion": "lg ( Diameter ( CIRCLE: L ) ) equals Slope ( PerpendicularBisector ( LineSegmentOf ( Projection ( RightVertex ( CONICSECTION: x ), LINE: V ), POINT: I ) ) )",
    "id": 1300,
    "declarations": "L: CIRCLE; x: CONICSECTION; V: LINE; I: POINT",
    "facts": "lg(Diameter(L)) = Slope(PerpendicularBisector(LineSegmentOf(Projection(RightVertex(x), V), I)))"
},
{
    "assertion": "RightFocus ( CONICSECTION: u ) equals LowerVertex ( CONICSECTION: J )",
    "id": 1301,
    "declarations": "u: CONICSECTION; J: CONICSECTION",
    "facts": "RightFocus(u) = LowerVertex(J)"
},
{
    "assertion": "IsIntersect ( CURVE: B, CURVE: V ) equals BOOL: True",
    "id": 1302,
    "declarations": "B: CURVE; V: CURVE; True: BOOL",
    "facts": "IsIntersect(B, V) = True"
},
{
    "assertion": "Abs ( LINESEGMENT: j ) equals NUMBER: -15",
    "id": 1303,
    "declarations": "j: LINESEGMENT; -15: NUMBER",
    "facts": "Abs(j) = -15"
},
{
    "assertion": "Negation ( Orthocenter ( TRIANGLE: H ) equals POINT: W ) equals BOOL: True",
    "id": 1304,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsIntersect ( CURVE: s, CURVE: F ) equals BOOL: False",
    "id": 1305,
    "declarations": "s: CURVE; F: CURVE; False: BOOL",
    "facts": "IsIntersect(s, F) = False"
},
{
    "assertion": "FootPoint ( RightDirectrix ( CONICSECTION: i ), RightDirectrix ( CONICSECTION: W ) ) equals LeftFocus ( CONICSECTION: U )",
    "id": 1306,
    "declarations": "i: CONICSECTION; W: CONICSECTION; U: CONICSECTION",
    "facts": "FootPoint(RightDirectrix(i), RightDirectrix(W)) = LeftFocus(U)"
},
{
    "assertion": "RightVertex ( CONICSECTION: E ) equals LeftFocus ( CONICSECTION: s )",
    "id": 1307,
    "declarations": "E: CONICSECTION; s: CONICSECTION",
    "facts": "RightVertex(E) = LeftFocus(s)"
},
{
    "assertion": "RightFocus ( CONICSECTION: v ) equals POINT: X",
    "id": 1308,
    "declarations": "v: CONICSECTION; X: POINT",
    "facts": "RightFocus(v) = X"
},
{
    "assertion": "Max ( Distance ( LowerFocus ( CONICSECTION: g ), LeftVertex ( CONICSECTION: k ) ) ) equals HalfFocalLength ( CONICSECTION: r )",
    "id": 1309,
    "declarations": "g: CONICSECTION; k: CONICSECTION; r: CONICSECTION",
    "facts": "Max(Distance(LowerFocus(g), LeftVertex(k))) = HalfFocalLength(r)"
},
{
    "assertion": "IsParallel ( LINE: d, LINE: q ) equals BOOL: True",
    "id": 1310,
    "declarations": "d: LINE; q: LINE; True: BOOL",
    "facts": "IsParallel(d, q) = True"
},
{
    "assertion": "And ( RightFocus ( CONICSECTION: O ) equals POINT: b, Diameter ( CIRCLE: a ) equals Inclination ( PerpendicularBisector ( LINESEGMENT: U ) ) ) equals BOOL: True",
    "id": 1311,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: L ) equals OverlappingLine ( RealAxis ( ELLIPSE: h ) )",
    "id": 1312,
    "declarations": "L: LINESEGMENT; h: ELLIPSE",
    "facts": "PerpendicularBisector(L) = OverlappingLine(RealAxis(h))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: o, TRIANGLE: c ) equals BOOL: True",
    "id": 1313,
    "declarations": "o: CIRCLE; c: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(o, c) = True"
},
{
    "assertion": "XCoordinate ( POINT: R ) equals Slope ( OverlappingLine ( LINESEGMENT: H ) )",
    "id": 1314,
    "declarations": "R: POINT; H: LINESEGMENT",
    "facts": "XCoordinate(R) = Slope(OverlappingLine(H))"
},
{
    "assertion": "sqrt ( YCoordinate ( UpperVertex ( CONICSECTION: J ) ) ) equals Perimeter ( CONICSECTION: V )",
    "id": 1315,
    "declarations": "J: CONICSECTION; V: CONICSECTION",
    "facts": "sqrt(YCoordinate(UpperVertex(J))) = Perimeter(V)"
},
{
    "assertion": "RightPart ( HYPERBOLA: m ) equals Locus ( POINT: N )",
    "id": 1316,
    "declarations": "m: HYPERBOLA; N: POINT",
    "facts": "RightPart(m) = Locus(N)"
},
{
    "assertion": "Focus ( CONICSECTION: h ) equals POINT: H",
    "id": 1317,
    "declarations": "h: CONICSECTION; H: POINT",
    "facts": "Focus(h) = H"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: s ) ) equals YCoordinate ( POINT: B )",
    "id": 1318,
    "declarations": "s: TRIANGLE; B: POINT",
    "facts": "Diameter(CircumCircle(s)) = YCoordinate(B)"
},
{
    "assertion": "Between ( Orthocenter ( TRIANGLE: e ), Incenter ( TRIANGLE: z ), LeftVertex ( CONICSECTION: u ) ) equals BOOL: True",
    "id": 1319,
    "declarations": "e: TRIANGLE; z: TRIANGLE; u: CONICSECTION; True: BOOL",
    "facts": "Between(Orthocenter(e), Incenter(z), LeftVertex(u)) = True"
},
{
    "assertion": "CircumCircle ( TRIANGLE: r ) equals CIRCLE: U",
    "id": 1320,
    "declarations": "r: TRIANGLE; U: CIRCLE",
    "facts": "CircumCircle(r) = U"
},
{
    "assertion": "YCoordinate ( Orthocenter ( TRIANGLE: p ) ) equals NUMBER: 40",
    "id": 1321,
    "declarations": "p: TRIANGLE; 40: NUMBER",
    "facts": "YCoordinate(Orthocenter(p)) = 40"
},
{
    "assertion": "Quadrant ( LeftFocus ( CONICSECTION: H ) ) equals NUMBER: 98",
    "id": 1322,
    "declarations": "H: CONICSECTION; 98: NUMBER",
    "facts": "Quadrant(LeftFocus(H)) = 98"
},
{
    "assertion": "Inclination ( LINE: L ) equals NUMBER: 19",
    "id": 1323,
    "declarations": "L: LINE; 19: NUMBER",
    "facts": "Inclination(L) = 19"
},
{
    "assertion": "IsIntersect ( LeftPart ( HYPERBOLA: s ), CURVE: z ) equals BOOL: False",
    "id": 1324,
    "declarations": "s: HYPERBOLA; z: CURVE; False: BOOL",
    "facts": "IsIntersect(LeftPart(s), z) = False"
},
{
    "assertion": "XCoordinate ( UpperFocus ( CONICSECTION: B ) ) equals NumIntersection ( CURVE: k, CURVE: Y )",
    "id": 1325,
    "declarations": "B: CONICSECTION; k: CURVE; Y: CURVE",
    "facts": "XCoordinate(UpperFocus(B)) = NumIntersection(k, Y)"
},
{
    "assertion": "TangentPoint ( OverlappingLine ( LINESEGMENT: b ), CircumCircle ( TRIANGLE: f ) ) equals POINT: d",
    "id": 1326,
    "declarations": "b: LINESEGMENT; f: TRIANGLE; d: POINT",
    "facts": "TangentPoint(OverlappingLine(b), CircumCircle(f)) = d"
},
{
    "assertion": "Incenter ( TRIANGLE: i ) equals Incenter ( TRIANGLE: a )",
    "id": 1327,
    "declarations": "i: TRIANGLE; a: TRIANGLE",
    "facts": "Incenter(i) = Incenter(a)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: D ) equals UpperFocus ( CONICSECTION: h )",
    "id": 1328,
    "declarations": "D: CONICSECTION; h: CONICSECTION",
    "facts": "UpperVertex(D) = UpperFocus(h)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: W ) equals POINT: L",
    "id": 1329,
    "declarations": "W: CONICSECTION; L: POINT",
    "facts": "LowerVertex(W) = L"
},
{
    "assertion": "MinorAxis ( ELLIPSE: j ) equals LINESEGMENT: X",
    "id": 1330,
    "declarations": "j: ELLIPSE; X: LINESEGMENT",
    "facts": "MinorAxis(j) = X"
},
{
    "assertion": "VectorOf ( Incenter ( TriangleOf ( LowerFocus ( CONICSECTION: D ), POINT: L, LowerFocus ( CONICSECTION: s ) ) ), POINT: s ) equals VECTOR: t",
    "id": 1331,
    "declarations": "D: CONICSECTION; L: POINT; s: CONICSECTION; s: POINT; t: VECTOR",
    "facts": "VectorOf(Incenter(TriangleOf(LowerFocus(D), L, LowerFocus(s))), s) = t"
},
{
    "assertion": "LeftFocus ( CONICSECTION: O ) equals Incenter ( TRIANGLE: E )",
    "id": 1332,
    "declarations": "O: CONICSECTION; E: TRIANGLE",
    "facts": "LeftFocus(O) = Incenter(E)"
},
{
    "assertion": "Abs ( LINESEGMENT: f ) equals Abs ( LINESEGMENT: H )",
    "id": 1333,
    "declarations": "f: LINESEGMENT; H: LINESEGMENT",
    "facts": "Abs(f) = Abs(H)"
},
{
    "assertion": "Inclination ( LINE: O ) equals Quadrant ( POINT: w )",
    "id": 1334,
    "declarations": "O: LINE; w: POINT",
    "facts": "Inclination(O) = Quadrant(w)"
},
{
    "assertion": "Directrix ( CONICSECTION: j ) equals LINE: j",
    "id": 1335,
    "declarations": "j: CONICSECTION; j: LINE",
    "facts": "Directrix(j) = j"
},
{
    "assertion": "XCoordinate ( POINT: e ) equals Min ( XCoordinate ( LeftFocus ( CONICSECTION: V ) ) )",
    "id": 1336,
    "declarations": "e: POINT; V: CONICSECTION",
    "facts": "XCoordinate(e) = Min(XCoordinate(LeftFocus(V)))"
},
{
    "assertion": "RightFocus ( CONICSECTION: I ) equals FootPoint ( LINE: r, LINE: G )",
    "id": 1337,
    "declarations": "I: CONICSECTION; r: LINE; G: LINE",
    "facts": "RightFocus(I) = FootPoint(r, G)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Y ) equals POINT: s",
    "id": 1338,
    "declarations": "Y: TRIANGLE; s: POINT",
    "facts": "Orthocenter(Y) = s"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: m, CONICSECTION: k ) equals BOOL: False",
    "id": 1339,
    "declarations": "m: LINESEGMENT; k: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(m, k) = False"
},
{
    "assertion": "IsParallel ( LINE: a, LINE: h ) equals BOOL: False",
    "id": 1340,
    "declarations": "a: LINE; h: LINE; False: BOOL",
    "facts": "IsParallel(a, h) = False"
},
{
    "assertion": "Quadrant ( LowerFocus ( CONICSECTION: n ) ) equals NUMBER: 18",
    "id": 1341,
    "declarations": "n: CONICSECTION; 18: NUMBER",
    "facts": "Quadrant(LowerFocus(n)) = 18"
},
{
    "assertion": "Max ( FocalLength ( CONICSECTION: i ) ) equals Area ( CONICSECTION: l )",
    "id": 1342,
    "declarations": "i: CONICSECTION; l: CONICSECTION",
    "facts": "Max(FocalLength(i)) = Area(l)"
},
{
    "assertion": "LineOf ( LeftVertex ( CONICSECTION: U ), POINT: D ) equals LINE: K",
    "id": 1343,
    "declarations": "U: CONICSECTION; D: POINT; K: LINE",
    "facts": "LineOf(LeftVertex(U), D) = K"
},
{
    "assertion": "LocusEquation ( UpperFocus ( CONICSECTION: g ) ) equals EXPRESSION: x^2*space+*spacexy*space+*spacey^2*space=*space1",
    "id": 1344,
    "declarations": "g: CONICSECTION; x^2*space+*spacexy*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(UpperFocus(g)) = x^2*space+*spacexy*space+*spacey^2*space=*space1"
},
{
    "assertion": "lg ( NUMBER: 57 ) equals InterReciprocal ( NUMBER: -78 )",
    "id": 1345,
    "declarations": "57: NUMBER; -78: NUMBER",
    "facts": "lg(57) = InterReciprocal(-78)"
},
{
    "assertion": "Area ( CONICSECTION: f ) equals Diameter ( CIRCLE: Q )",
    "id": 1346,
    "declarations": "f: CONICSECTION; Q: CIRCLE",
    "facts": "Area(f) = Diameter(Q)"
},
{
    "assertion": "Abs ( LINESEGMENT: T ) equals Quadrant ( POINT: t )",
    "id": 1347,
    "declarations": "T: LINESEGMENT; t: POINT",
    "facts": "Abs(T) = Quadrant(t)"
},
{
    "assertion": "PointOnCurve ( Incenter ( TRIANGLE: S ), Locus ( POINT: P ) ) equals BOOL: True",
    "id": 1348,
    "declarations": "S: TRIANGLE; P: POINT; True: BOOL",
    "facts": "PointOnCurve(Incenter(S), Locus(P)) = True"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: Z, TRIANGLE: d ) equals BOOL: True",
    "id": 1349,
    "declarations": "Z: CIRCLE; d: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(Z, d) = True"
},
{
    "assertion": "Max ( NUMBER: -78 ) equals Area ( CONICSECTION: p )",
    "id": 1350,
    "declarations": "-78: NUMBER; p: CONICSECTION",
    "facts": "Max(-78) = Area(p)"
},
{
    "assertion": "Slope ( LINE: t ) equals Abs ( LINESEGMENT: V )",
    "id": 1351,
    "declarations": "t: LINE; V: LINESEGMENT",
    "facts": "Slope(t) = Abs(V)"
},
{
    "assertion": "Locus ( LowerVertex ( CONICSECTION: I ) ) equals CURVE: s",
    "id": 1352,
    "declarations": "I: CONICSECTION; s: CURVE",
    "facts": "Locus(LowerVertex(I)) = s"
},
{
    "assertion": "Projection ( POINT: H, TangentOnPoint ( RightFocus ( CONICSECTION: I ), CURVE: K ) ) equals UpperFocus ( CONICSECTION: e )",
    "id": 1353,
    "declarations": "H: POINT; I: CONICSECTION; K: CURVE; e: CONICSECTION",
    "facts": "Projection(H, TangentOnPoint(RightFocus(I), K)) = UpperFocus(e)"
},
{
    "assertion": "Intersection ( CURVE: K, CURVE: U ) equals POINT: Z",
    "id": 1354,
    "declarations": "K: CURVE; U: CURVE; Z: POINT",
    "facts": "Intersection(K, U) = Z"
},
{
    "assertion": "IsParallel ( OverlappingLine ( LINESEGMENT: R ), LINE: i ) equals BOOL: True",
    "id": 1355,
    "declarations": "R: LINESEGMENT; i: LINE; True: BOOL",
    "facts": "IsParallel(OverlappingLine(R), i) = True"
},
{
    "assertion": "IsInTangent ( CIRCLE: W, CIRCLE: j ) equals BOOL: True",
    "id": 1356,
    "declarations": "W: CIRCLE; j: CIRCLE; True: BOOL",
    "facts": "IsInTangent(W, j) = True"
},
{
    "assertion": "Max ( Distance ( POINT: i, UpperVertex ( CONICSECTION: p ) ) ) equals Diameter ( CIRCLE: J )",
    "id": 1357,
    "declarations": "i: POINT; p: CONICSECTION; J: CIRCLE",
    "facts": "Max(Distance(i, UpperVertex(p))) = Diameter(J)"
},
{
    "assertion": "Center ( CONICSECTION: D ) equals LeftFocus ( CONICSECTION: c )",
    "id": 1358,
    "declarations": "D: CONICSECTION; c: CONICSECTION",
    "facts": "Center(D) = LeftFocus(c)"
},
{
    "assertion": "Diameter ( CIRCLE: a ) equals InterReciprocal ( Inclination ( LINE: s ) )",
    "id": 1359,
    "declarations": "a: CIRCLE; s: LINE",
    "facts": "Diameter(a) = InterReciprocal(Inclination(s))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: r ) equals POINT: T",
    "id": 1360,
    "declarations": "r: TRIANGLE; T: POINT",
    "facts": "Circumcenter(r) = T"
},
{
    "assertion": "Radius ( CIRCLE: o ) equals NUMBER: -94",
    "id": 1361,
    "declarations": "o: CIRCLE; -94: NUMBER",
    "facts": "Radius(o) = -94"
},
{
    "assertion": "TangentPoint ( LINE: U, CIRCLE: q ) equals UpperVertex ( CONICSECTION: b )",
    "id": 1362,
    "declarations": "U: LINE; q: CIRCLE; b: CONICSECTION",
    "facts": "TangentPoint(U, q) = UpperVertex(b)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: L, TRIANGLE: z ) equals BOOL: False",
    "id": 1363,
    "declarations": "L: CIRCLE; z: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(L, z) = False"
},
{
    "assertion": "Focus ( CONICSECTION: M ) equals POINT: f",
    "id": 1364,
    "declarations": "M: CONICSECTION; f: POINT",
    "facts": "Focus(M) = f"
},
{
    "assertion": "RealAxis ( ELLIPSE: x ) equals LINESEGMENT: L",
    "id": 1365,
    "declarations": "x: ELLIPSE; L: LINESEGMENT",
    "facts": "RealAxis(x) = L"
},
{
    "assertion": "MajorAxis ( ELLIPSE: E ) equals ImaginaryAxis ( ELLIPSE: d )",
    "id": 1366,
    "declarations": "E: ELLIPSE; d: ELLIPSE",
    "facts": "MajorAxis(E) = ImaginaryAxis(d)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: q, TRIANGLE: d ) equals BOOL: False",
    "id": 1367,
    "declarations": "q: CIRCLE; d: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(q, d) = False"
},
{
    "assertion": "Asymptote ( HYPERBOLA: e ) equals LINE: c",
    "id": 1368,
    "declarations": "e: HYPERBOLA; c: LINE",
    "facts": "Asymptote(e) = c"
},
{
    "assertion": "YCoordinate ( RightFocus ( CONICSECTION: F ) ) equals Slope ( OverlappingLine ( LINESEGMENT: N ) )",
    "id": 1369,
    "declarations": "F: CONICSECTION; N: LINESEGMENT",
    "facts": "YCoordinate(RightFocus(F)) = Slope(OverlappingLine(N))"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: y ) ) equals NUMBER: 59",
    "id": 1370,
    "declarations": "y: ELLIPSE; 59: NUMBER",
    "facts": "Abs(MinorAxis(y)) = 59"
},
{
    "assertion": "IsInTangent ( CIRCLE: D, CIRCLE: c ) equals BOOL: True",
    "id": 1371,
    "declarations": "D: CIRCLE; c: CIRCLE; True: BOOL",
    "facts": "IsInTangent(D, c) = True"
},
{
    "assertion": "CircumCircle ( TRIANGLE: o ) equals CIRCLE: h",
    "id": 1372,
    "declarations": "o: TRIANGLE; h: CIRCLE",
    "facts": "CircumCircle(o) = h"
},
{
    "assertion": "RightPart ( HYPERBOLA: T ) equals CURVE: o",
    "id": 1373,
    "declarations": "T: HYPERBOLA; o: CURVE",
    "facts": "RightPart(T) = o"
},
{
    "assertion": "Negation ( LineSegmentOf ( POINT: b, Incenter ( TRIANGLE: i ) ) equals LINESEGMENT: O ) equals BOOL: True",
    "id": 1374,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsDiameter ( MajorAxis ( ELLIPSE: y ), CIRCLE: M ) equals BOOL: True",
    "id": 1375,
    "declarations": "y: ELLIPSE; M: CIRCLE; True: BOOL",
    "facts": "IsDiameter(MajorAxis(y), M) = True"
},
{
    "assertion": "Endpoint ( LINESEGMENT: t ) equals RightVertex ( CONICSECTION: m )",
    "id": 1376,
    "declarations": "t: LINESEGMENT; m: CONICSECTION",
    "facts": "Endpoint(t) = RightVertex(m)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: M ) equals UpperFocus ( CONICSECTION: v )",
    "id": 1377,
    "declarations": "M: CONICSECTION; v: CONICSECTION",
    "facts": "UpperFocus(M) = UpperFocus(v)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: P ) equals LINE: u",
    "id": 1378,
    "declarations": "P: CONICSECTION; u: LINE",
    "facts": "RightDirectrix(P) = u"
},
{
    "assertion": "Center ( CONICSECTION: l ) equals RightFocus ( CONICSECTION: r )",
    "id": 1379,
    "declarations": "l: CONICSECTION; r: CONICSECTION",
    "facts": "Center(l) = RightFocus(r)"
},
{
    "assertion": "VectorOf ( POINT: c, POINT: i ) equals VECTOR: R",
    "id": 1380,
    "declarations": "c: POINT; i: POINT; R: VECTOR",
    "facts": "VectorOf(c, i) = R"
},
{
    "assertion": "Slope ( LINE: s ) equals Eccentricity ( CONICSECTION: b )",
    "id": 1381,
    "declarations": "s: LINE; b: CONICSECTION",
    "facts": "Slope(s) = Eccentricity(b)"
},
{
    "assertion": "Distance ( RightVertex ( CONICSECTION: k ), POINT: R ) equals XCoordinate ( POINT: k )",
    "id": 1382,
    "declarations": "k: CONICSECTION; R: POINT; k: POINT",
    "facts": "Distance(RightVertex(k), R) = XCoordinate(k)"
},
{
    "assertion": "Inclination ( LINE: t ) equals NUMBER: 92",
    "id": 1383,
    "declarations": "t: LINE; 92: NUMBER",
    "facts": "Inclination(t) = 92"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: d ) equals LINE: Q",
    "id": 1384,
    "declarations": "d: CONICSECTION; Q: LINE",
    "facts": "LeftDirectrix(d) = Q"
},
{
    "assertion": "sqrt ( NUMBER: 41 ) equals NUMBER: -55",
    "id": 1385,
    "declarations": "41: NUMBER; -55: NUMBER",
    "facts": "sqrt(41) = -55"
},
{
    "assertion": "Focus ( CONICSECTION: Y ) equals POINT: y",
    "id": 1386,
    "declarations": "Y: CONICSECTION; y: POINT",
    "facts": "Focus(Y) = y"
},
{
    "assertion": "IsOutTangent ( CIRCLE: M, CIRCLE: S ) equals BOOL: True",
    "id": 1387,
    "declarations": "M: CIRCLE; S: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(M, S) = True"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: f, TRIANGLE: W ) equals BOOL: False",
    "id": 1388,
    "declarations": "f: CIRCLE; W: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(f, W) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: R ) equals Incenter ( TRIANGLE: z )",
    "id": 1389,
    "declarations": "R: CONICSECTION; z: TRIANGLE",
    "facts": "UpperFocus(R) = Incenter(z)"
},
{
    "assertion": "Center ( CONICSECTION: Q ) equals Incenter ( TRIANGLE: q )",
    "id": 1390,
    "declarations": "Q: CONICSECTION; q: TRIANGLE",
    "facts": "Center(Q) = Incenter(q)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: Y ) equals CIRCLE: g",
    "id": 1391,
    "declarations": "Y: TRIANGLE; g: CIRCLE",
    "facts": "CircumCircle(Y) = g"
},
{
    "assertion": "Expression ( CURVE: v ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 1392,
    "declarations": "v: CURVE; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "Expression(v) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: S ) equals HalfFocalLength ( CONICSECTION: b )",
    "id": 1393,
    "declarations": "S: CONICSECTION; b: CONICSECTION",
    "facts": "HalfFocalLength(S) = HalfFocalLength(b)"
},
{
    "assertion": "Expression ( CURVE: f ) equals EXPRESSION: x*space=*spacey^2*space-*space4*y*space+*space4",
    "id": 1394,
    "declarations": "f: CURVE; x*space=*spacey^2*space-*space4*y*space+*space4: EXPRESSION",
    "facts": "Expression(f) = x*space=*spacey^2*space-*space4*y*space+*space4"
},
{
    "assertion": "RightFocus ( CONICSECTION: w ) equals UpperVertex ( CONICSECTION: E )",
    "id": 1395,
    "declarations": "w: CONICSECTION; E: CONICSECTION",
    "facts": "RightFocus(w) = UpperVertex(E)"
},
{
    "assertion": "InterReciprocal ( NUMBER: 66 ) equals Area ( CONICSECTION: A )",
    "id": 1396,
    "declarations": "66: NUMBER; A: CONICSECTION",
    "facts": "InterReciprocal(66) = Area(A)"
},
{
    "assertion": "Radius ( CIRCLE: v ) equals Abs ( ImaginaryAxis ( ELLIPSE: v ) )",
    "id": 1397,
    "declarations": "v: CIRCLE; v: ELLIPSE",
    "facts": "Radius(v) = Abs(ImaginaryAxis(v))"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: Y ) ) equals Length ( LINESEGMENT: N )",
    "id": 1398,
    "declarations": "Y: ELLIPSE; N: LINESEGMENT",
    "facts": "Abs(MinorAxis(Y)) = Length(N)"
},
{
    "assertion": "And ( InterceptChord ( LINE: w, CONICSECTION: d ) equals ImaginaryAxis ( ELLIPSE: H ), LineOf ( POINT: Z, POINT: S ) equals LINE: i ) equals BOOL: True",
    "id": 1399,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Orthocenter ( TRIANGLE: x ) equals LowerFocus ( CONICSECTION: n )",
    "id": 1400,
    "declarations": "x: TRIANGLE; n: CONICSECTION",
    "facts": "Orthocenter(x) = LowerFocus(n)"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: t ) ) equals NUMBER: -73",
    "id": 1401,
    "declarations": "t: ELLIPSE; -73: NUMBER",
    "facts": "Abs(RealAxis(t)) = -73"
},
{
    "assertion": "LocusEquation ( UpperFocus ( CONICSECTION: U ) ) equals EXPRESSION: y*space=*spacee^x",
    "id": 1402,
    "declarations": "U: CONICSECTION; y*space=*spacee^x: EXPRESSION",
    "facts": "LocusEquation(UpperFocus(U)) = y*space=*spacee^x"
},
{
    "assertion": "DotProduct ( VECTOR: Y, VECTOR: P ) equals InterReciprocal ( NUMBER: 1 )",
    "id": 1403,
    "declarations": "Y: VECTOR; P: VECTOR; 1: NUMBER",
    "facts": "DotProduct(Y, P) = InterReciprocal(1)"
},
{
    "assertion": "LineOf ( LeftFocus ( CONICSECTION: j ), LowerVertex ( CONICSECTION: t ) ) equals LINE: N",
    "id": 1404,
    "declarations": "j: CONICSECTION; t: CONICSECTION; N: LINE",
    "facts": "LineOf(LeftFocus(j), LowerVertex(t)) = N"
},
{
    "assertion": "TangentPoint ( LeftDirectrix ( CONICSECTION: r ), CircumCircle ( TRIANGLE: A ) ) equals RightFocus ( CONICSECTION: Y )",
    "id": 1405,
    "declarations": "r: CONICSECTION; A: TRIANGLE; Y: CONICSECTION",
    "facts": "TangentPoint(LeftDirectrix(r), CircumCircle(A)) = RightFocus(Y)"
},
{
    "assertion": "Area ( CONICSECTION: s ) equals Diameter ( CIRCLE: J )",
    "id": 1406,
    "declarations": "s: CONICSECTION; J: CIRCLE",
    "facts": "Area(s) = Diameter(J)"
},
{
    "assertion": "RightFocus ( CONICSECTION: O ) equals Center ( CONICSECTION: S )",
    "id": 1407,
    "declarations": "O: CONICSECTION; S: CONICSECTION",
    "facts": "RightFocus(O) = Center(S)"
},
{
    "assertion": "FootPoint ( LINE: M, LINE: u ) equals POINT: a",
    "id": 1408,
    "declarations": "M: LINE; u: LINE; a: POINT",
    "facts": "FootPoint(M, u) = a"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: R ) equals LINESEGMENT: v",
    "id": 1409,
    "declarations": "R: ELLIPSE; v: LINESEGMENT",
    "facts": "ImaginaryAxis(R) = v"
},
{
    "assertion": "IsChordOf ( ImaginaryAxis ( ELLIPSE: X ), CONICSECTION: C ) equals BOOL: True",
    "id": 1410,
    "declarations": "X: ELLIPSE; C: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(ImaginaryAxis(X), C) = True"
},
{
    "assertion": "Center ( CONICSECTION: j ) equals POINT: W",
    "id": 1411,
    "declarations": "j: CONICSECTION; W: POINT",
    "facts": "Center(j) = W"
},
{
    "assertion": "LeftPart ( HYPERBOLA: S ) equals CURVE: h",
    "id": 1412,
    "declarations": "S: HYPERBOLA; h: CURVE",
    "facts": "LeftPart(S) = h"
},
{
    "assertion": "TangentPoint ( LINE: F, CIRCLE: S ) equals POINT: h",
    "id": 1413,
    "declarations": "F: LINE; S: CIRCLE; h: POINT",
    "facts": "TangentPoint(F, S) = h"
},
{
    "assertion": "Abs ( LINESEGMENT: v ) equals Perimeter ( CONICSECTION: M )",
    "id": 1414,
    "declarations": "v: LINESEGMENT; M: CONICSECTION",
    "facts": "Abs(v) = Perimeter(M)"
},
{
    "assertion": "TangentOfPoint ( Center ( CONICSECTION: X ), CURVE: c ) equals LINE: V",
    "id": 1415,
    "declarations": "X: CONICSECTION; c: CURVE; V: LINE",
    "facts": "TangentOfPoint(Center(X), c) = V"
},
{
    "assertion": "Asymptote ( HYPERBOLA: T ) equals OverlappingLine ( LINESEGMENT: v )",
    "id": 1416,
    "declarations": "T: HYPERBOLA; v: LINESEGMENT",
    "facts": "Asymptote(T) = OverlappingLine(v)"
},
{
    "assertion": "Perimeter ( CONICSECTION: B ) equals NUMBER: -94",
    "id": 1417,
    "declarations": "B: CONICSECTION; -94: NUMBER",
    "facts": "Perimeter(B) = -94"
},
{
    "assertion": "Radius ( CIRCLE: s ) equals Radius ( CircumCircle ( TRIANGLE: k ) )",
    "id": 1418,
    "declarations": "s: CIRCLE; k: TRIANGLE",
    "facts": "Radius(s) = Radius(CircumCircle(k))"
},
{
    "assertion": "FootPoint ( LineOf ( POINT: y, POINT: J ), LINE: z ) equals POINT: a",
    "id": 1419,
    "declarations": "y: POINT; J: POINT; z: LINE; a: POINT",
    "facts": "FootPoint(LineOf(y, J), z) = a"
},
{
    "assertion": "PointOnCurve ( Incenter ( TRIANGLE: E ), CURVE: u ) equals BOOL: False",
    "id": 1420,
    "declarations": "E: TRIANGLE; u: CURVE; False: BOOL",
    "facts": "PointOnCurve(Incenter(E), u) = False"
},
{
    "assertion": "YCoordinate ( Center ( CONICSECTION: m ) ) equals NUMBER: -74",
    "id": 1421,
    "declarations": "m: CONICSECTION; -74: NUMBER",
    "facts": "YCoordinate(Center(m)) = -74"
},
{
    "assertion": "LeftVertex ( CONICSECTION: c ) equals LowerFocus ( CONICSECTION: P )",
    "id": 1422,
    "declarations": "c: CONICSECTION; P: CONICSECTION",
    "facts": "LeftVertex(c) = LowerFocus(P)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: H ) equals ImaginaryAxis ( ELLIPSE: y )",
    "id": 1423,
    "declarations": "H: ELLIPSE; y: ELLIPSE",
    "facts": "MinorAxis(H) = ImaginaryAxis(y)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: W ) equals MidPoint ( LINESEGMENT: n )",
    "id": 1424,
    "declarations": "W: CONICSECTION; n: LINESEGMENT",
    "facts": "UpperVertex(W) = MidPoint(n)"
},
{
    "assertion": "Abs ( LINESEGMENT: l ) equals Diameter ( CIRCLE: P )",
    "id": 1425,
    "declarations": "l: LINESEGMENT; P: CIRCLE",
    "facts": "Abs(l) = Diameter(P)"
},
{
    "assertion": "FootPoint ( OverlappingLine ( LINESEGMENT: r ), LINE: G ) equals POINT: O",
    "id": 1426,
    "declarations": "r: LINESEGMENT; G: LINE; O: POINT",
    "facts": "FootPoint(OverlappingLine(r), G) = O"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: v ) equals LINESEGMENT: o",
    "id": 1427,
    "declarations": "v: ELLIPSE; o: LINESEGMENT",
    "facts": "ImaginaryAxis(v) = o"
},
{
    "assertion": "lg ( sqrt ( NUMBER: -62 ) ) equals Length ( LINESEGMENT: A )",
    "id": 1428,
    "declarations": "-62: NUMBER; A: LINESEGMENT",
    "facts": "lg(sqrt(-62)) = Length(A)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: a ) equals RightFocus ( CONICSECTION: o )",
    "id": 1429,
    "declarations": "a: CONICSECTION; o: CONICSECTION",
    "facts": "LeftFocus(a) = RightFocus(o)"
},
{
    "assertion": "lg ( Quadrant ( POINT: Y ) ) equals Length ( LINESEGMENT: u )",
    "id": 1430,
    "declarations": "Y: POINT; u: LINESEGMENT",
    "facts": "lg(Quadrant(Y)) = Length(u)"
},
{
    "assertion": "IsParallel ( TangentOfPoint ( POINT: u, LeftPart ( HYPERBOLA: D ) ), LINE: J ) equals BOOL: False",
    "id": 1431,
    "declarations": "u: POINT; D: HYPERBOLA; J: LINE; False: BOOL",
    "facts": "IsParallel(TangentOfPoint(u, LeftPart(D)), J) = False"
},
{
    "assertion": "IsDiameter ( MinorAxis ( ELLIPSE: d ), CIRCLE: g ) equals BOOL: False",
    "id": 1432,
    "declarations": "d: ELLIPSE; g: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MinorAxis(d), g) = False"
},
{
    "assertion": "Focus ( CONICSECTION: y ) equals UpperVertex ( CONICSECTION: I )",
    "id": 1433,
    "declarations": "y: CONICSECTION; I: CONICSECTION",
    "facts": "Focus(y) = UpperVertex(I)"
},
{
    "assertion": "Intercept ( LINE: A, AXIS: yAxis ) equals NUMBER: -2",
    "id": 1434,
    "declarations": "A: LINE; yAxis: AXIS; -2: NUMBER",
    "facts": "Intercept(A, yAxis) = -2"
},
{
    "assertion": "Projection ( RightVertex ( CONICSECTION: Y ), LINE: W ) equals POINT: A",
    "id": 1435,
    "declarations": "Y: CONICSECTION; W: LINE; A: POINT",
    "facts": "Projection(RightVertex(Y), W) = A"
},
{
    "assertion": "IsOutTangent ( CIRCLE: B, CIRCLE: r ) equals BOOL: True",
    "id": 1436,
    "declarations": "B: CIRCLE; r: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(B, r) = True"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: d ) equals LINESEGMENT: e",
    "id": 1437,
    "declarations": "d: ELLIPSE; e: LINESEGMENT",
    "facts": "ImaginaryAxis(d) = e"
},
{
    "assertion": "Quadrant ( POINT: K ) equals NUMBER: 4",
    "id": 1438,
    "declarations": "K: POINT; 4: NUMBER",
    "facts": "Quadrant(K) = 4"
},
{
    "assertion": "CircumCircle ( TRIANGLE: P ) equals CIRCLE: y",
    "id": 1439,
    "declarations": "P: TRIANGLE; y: CIRCLE",
    "facts": "CircumCircle(P) = y"
},
{
    "assertion": "ApplyUnit ( NUMBER: 27, DEGREESTR: degree )",
    "id": 1440,
    "declarations": "27: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(27, degree) = dummy_operator()"
},
{
    "assertion": "IsDiameter ( MajorAxis ( ELLIPSE: r ), CIRCLE: B ) equals BOOL: False",
    "id": 1441,
    "declarations": "r: ELLIPSE; B: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MajorAxis(r), B) = False"
},
{
    "assertion": "TriangleOf ( Orthocenter ( TRIANGLE: T ), Center ( CONICSECTION: l ), MidPoint ( MajorAxis ( ELLIPSE: V ) ) ) equals TRIANGLE: d",
    "id": 1442,
    "declarations": "T: TRIANGLE; l: CONICSECTION; V: ELLIPSE; d: TRIANGLE",
    "facts": "TriangleOf(Orthocenter(T), Center(l), MidPoint(MajorAxis(V))) = d"
},
{
    "assertion": "FootPoint ( LINE: M, TangentOfPoint ( Incenter ( TRIANGLE: j ), CURVE: f ) ) equals LowerVertex ( CONICSECTION: l )",
    "id": 1443,
    "declarations": "M: LINE; j: TRIANGLE; f: CURVE; l: CONICSECTION",
    "facts": "FootPoint(M, TangentOfPoint(Incenter(j), f)) = LowerVertex(l)"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: X ) ) equals Abs ( LINESEGMENT: I )",
    "id": 1445,
    "declarations": "X: ELLIPSE; I: LINESEGMENT",
    "facts": "Abs(RealAxis(X)) = Abs(I)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: O ) equals POINT: K",
    "id": 1446,
    "declarations": "O: CONICSECTION; K: POINT",
    "facts": "LeftFocus(O) = K"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: y, TRIANGLE: k ) equals BOOL: False",
    "id": 1447,
    "declarations": "y: CIRCLE; k: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(y, k) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: B ) equals YCoordinate ( POINT: j )",
    "id": 1448,
    "declarations": "B: CONICSECTION; j: POINT",
    "facts": "Perimeter(B) = YCoordinate(j)"
},
{
    "assertion": "Min ( Diameter ( CIRCLE: k ) ) equals NUMBER: 68",
    "id": 1449,
    "declarations": "k: CIRCLE; 68: NUMBER",
    "facts": "Min(Diameter(k)) = 68"
},
{
    "assertion": "Length ( MajorAxis ( ELLIPSE: y ) ) equals Area ( CONICSECTION: l )",
    "id": 1450,
    "declarations": "y: ELLIPSE; l: CONICSECTION",
    "facts": "Length(MajorAxis(y)) = Area(l)"
},
{
    "assertion": "TriangleOf ( POINT: N, MidPoint ( LineSegmentOf ( LowerFocus ( CONICSECTION: o ), UpperVertex ( CONICSECTION: U ) ) ), POINT: h ) equals TRIANGLE: r",
    "id": 1451,
    "declarations": "N: POINT; o: CONICSECTION; U: CONICSECTION; h: POINT; r: TRIANGLE",
    "facts": "TriangleOf(N, MidPoint(LineSegmentOf(LowerFocus(o), UpperVertex(U))), h) = r"
},
{
    "assertion": "Abs ( ImaginaryAxis ( ELLIPSE: M ) ) equals NUMBER: -81",
    "id": 1452,
    "declarations": "M: ELLIPSE; -81: NUMBER",
    "facts": "Abs(ImaginaryAxis(M)) = -81"
},
{
    "assertion": "InterReciprocal ( NUMBER: -34 ) equals NUMBER: -66",
    "id": 1453,
    "declarations": "-34: NUMBER; -66: NUMBER",
    "facts": "InterReciprocal(-34) = -66"
},
{
    "assertion": "Focus ( CONICSECTION: O ) equals RightVertex ( CONICSECTION: b )",
    "id": 1454,
    "declarations": "O: CONICSECTION; b: CONICSECTION",
    "facts": "Focus(O) = RightVertex(b)"
},
{
    "assertion": "IsParallel ( LINE: W, LINE: D ) equals BOOL: True",
    "id": 1455,
    "declarations": "W: LINE; D: LINE; True: BOOL",
    "facts": "IsParallel(W, D) = True"
},
{
    "assertion": "LocusEquation ( POINT: r ) equals EXPRESSION: y*space=*space3x*space+*space2",
    "id": 1456,
    "declarations": "r: POINT; y*space=*space3x*space+*space2: EXPRESSION",
    "facts": "LocusEquation(r) = y*space=*space3x*space+*space2"
},
{
    "assertion": "LowerFocus ( CONICSECTION: O ) equals POINT: E",
    "id": 1457,
    "declarations": "O: CONICSECTION; E: POINT",
    "facts": "LowerFocus(O) = E"
},
{
    "assertion": "IsInTangent ( CIRCLE: R, CIRCLE: M ) equals BOOL: False",
    "id": 1458,
    "declarations": "R: CIRCLE; M: CIRCLE; False: BOOL",
    "facts": "IsInTangent(R, M) = False"
},
{
    "assertion": "InterceptChord ( LINE: j, CONICSECTION: P ) equals LINESEGMENT: p",
    "id": 1459,
    "declarations": "j: LINE; P: CONICSECTION; p: LINESEGMENT",
    "facts": "InterceptChord(j, P) = p"
},
{
    "assertion": "LineOf ( Incenter ( TRIANGLE: B ), POINT: r ) equals LineOf ( POINT: u, POINT: N )",
    "id": 1460,
    "declarations": "B: TRIANGLE; r: POINT; u: POINT; N: POINT",
    "facts": "LineOf(Incenter(B), r) = LineOf(u, N)"
},
{
    "assertion": "Diameter ( CIRCLE: A ) equals Distance ( POINT: m, POINT: D )",
    "id": 1461,
    "declarations": "A: CIRCLE; m: POINT; D: POINT",
    "facts": "Diameter(A) = Distance(m, D)"
},
{
    "assertion": "Intersection ( CURVE: j, CURVE: K ) equals RightVertex ( CONICSECTION: F )",
    "id": 1462,
    "declarations": "j: CURVE; K: CURVE; F: CONICSECTION",
    "facts": "Intersection(j, K) = RightVertex(F)"
},
{
    "assertion": "LineSegmentOf ( POINT: K, LeftVertex ( CONICSECTION: y ) ) equals LINESEGMENT: W",
    "id": 1463,
    "declarations": "K: POINT; y: CONICSECTION; W: LINESEGMENT",
    "facts": "LineSegmentOf(K, LeftVertex(y)) = W"
},
{
    "assertion": "Diameter ( CIRCLE: d ) equals Perimeter ( CONICSECTION: P )",
    "id": 1464,
    "declarations": "d: CIRCLE; P: CONICSECTION",
    "facts": "Diameter(d) = Perimeter(P)"
},
{
    "assertion": "Projection ( Orthocenter ( TRIANGLE: v ), LINE: T ) equals UpperFocus ( CONICSECTION: Q )",
    "id": 1465,
    "declarations": "v: TRIANGLE; T: LINE; Q: CONICSECTION",
    "facts": "Projection(Orthocenter(v), T) = UpperFocus(Q)"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: G ) ) equals PerpendicularBisector ( RealAxis ( ELLIPSE: C ) )",
    "id": 1466,
    "declarations": "G: ELLIPSE; C: ELLIPSE",
    "facts": "PerpendicularBisector(ImaginaryAxis(G)) = PerpendicularBisector(RealAxis(C))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: b ) equals PerpendicularBisector ( LINESEGMENT: O )",
    "id": 1467,
    "declarations": "b: HYPERBOLA; O: LINESEGMENT",
    "facts": "Asymptote(b) = PerpendicularBisector(O)"
},
{
    "assertion": "Abs ( InterceptChord ( LINE: y, CONICSECTION: W ) ) equals Min ( Area ( CONICSECTION: T ) )",
    "id": 1468,
    "declarations": "y: LINE; W: CONICSECTION; T: CONICSECTION",
    "facts": "Abs(InterceptChord(y, W)) = Min(Area(T))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: w ) equals LINESEGMENT: p",
    "id": 1469,
    "declarations": "w: ELLIPSE; p: LINESEGMENT",
    "facts": "MajorAxis(w) = p"
},
{
    "assertion": "Expression ( CURVE: o ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 1470,
    "declarations": "o: CURVE; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(o) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "TangentOnPoint ( Projection ( Incenter ( TRIANGLE: m ), LINE: X ), RightPart ( HYPERBOLA: f ) ) equals LINE: f",
    "id": 1471,
    "declarations": "m: TRIANGLE; X: LINE; f: HYPERBOLA; f: LINE",
    "facts": "TangentOnPoint(Projection(Incenter(m), X), RightPart(f)) = f"
},
{
    "assertion": "FocalLength ( CONICSECTION: p ) equals lg ( Inclination ( LINE: A ) )",
    "id": 1472,
    "declarations": "p: CONICSECTION; A: LINE",
    "facts": "FocalLength(p) = lg(Inclination(A))"
},
{
    "assertion": "IsInTangent ( CIRCLE: K, CIRCLE: f ) equals BOOL: False",
    "id": 1473,
    "declarations": "K: CIRCLE; f: CIRCLE; False: BOOL",
    "facts": "IsInTangent(K, f) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: R ) equals RightFocus ( CONICSECTION: I )",
    "id": 1474,
    "declarations": "R: CONICSECTION; I: CONICSECTION",
    "facts": "RightFocus(R) = RightFocus(I)"
},
{
    "assertion": "FocalLength ( CONICSECTION: T ) equals Length ( LINESEGMENT: G )",
    "id": 1475,
    "declarations": "T: CONICSECTION; G: LINESEGMENT",
    "facts": "FocalLength(T) = Length(G)"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: A ) ) equals Diameter ( CIRCLE: f )",
    "id": 1476,
    "declarations": "A: ELLIPSE; f: CIRCLE",
    "facts": "Abs(MinorAxis(A)) = Diameter(f)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: x ) equals RightFocus ( CONICSECTION: E )",
    "id": 1477,
    "declarations": "x: CONICSECTION; E: CONICSECTION",
    "facts": "UpperVertex(x) = RightFocus(E)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: O, TRIANGLE: V ) equals BOOL: True",
    "id": 1478,
    "declarations": "O: CIRCLE; V: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(O, V) = True"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: r ) ) equals LINE: g",
    "id": 1479,
    "declarations": "r: ELLIPSE; g: LINE",
    "facts": "OverlappingLine(MinorAxis(r)) = g"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: j ) equals LINE: j",
    "id": 1480,
    "declarations": "j: CONICSECTION; j: LINE",
    "facts": "LeftDirectrix(j) = j"
},
{
    "assertion": "sqrt ( lg ( Abs ( LINESEGMENT: c ) ) ) equals Length ( LINESEGMENT: Z )",
    "id": 1481,
    "declarations": "c: LINESEGMENT; Z: LINESEGMENT",
    "facts": "sqrt(lg(Abs(c))) = Length(Z)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: D, TRIANGLE: d ) equals BOOL: True",
    "id": 1482,
    "declarations": "D: CIRCLE; d: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(D, d) = True"
},
{
    "assertion": "XCoordinate ( POINT: a ) equals lg ( Diameter ( CIRCLE: K ) )",
    "id": 1483,
    "declarations": "a: POINT; K: CIRCLE",
    "facts": "XCoordinate(a) = lg(Diameter(K))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: C ) equals LINE: u",
    "id": 1484,
    "declarations": "C: CONICSECTION; u: LINE",
    "facts": "RightDirectrix(C) = u"
},
{
    "assertion": "Radius ( CIRCLE: y ) equals HalfFocalLength ( CONICSECTION: D )",
    "id": 1485,
    "declarations": "y: CIRCLE; D: CONICSECTION",
    "facts": "Radius(y) = HalfFocalLength(D)"
},
{
    "assertion": "DotProduct ( VECTOR: I, VECTOR: g ) equals NUMBER: -60",
    "id": 1486,
    "declarations": "I: VECTOR; g: VECTOR; -60: NUMBER",
    "facts": "DotProduct(I, g) = -60"
},
{
    "assertion": "MajorAxis ( ELLIPSE: V ) equals MinorAxis ( ELLIPSE: K )",
    "id": 1487,
    "declarations": "V: ELLIPSE; K: ELLIPSE",
    "facts": "MajorAxis(V) = MinorAxis(K)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: F ) equals POINT: A",
    "id": 1488,
    "declarations": "F: CONICSECTION; A: POINT",
    "facts": "UpperVertex(F) = A"
},
{
    "assertion": "Focus ( CONICSECTION: L ) equals LowerFocus ( CONICSECTION: w )",
    "id": 1489,
    "declarations": "L: CONICSECTION; w: CONICSECTION",
    "facts": "Focus(L) = LowerFocus(w)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: T, CIRCLE: v ) equals BOOL: False",
    "id": 1490,
    "declarations": "T: LINESEGMENT; v: CIRCLE; False: BOOL",
    "facts": "IsDiameter(T, v) = False"
},
{
    "assertion": "Length ( LINESEGMENT: M ) equals DotProduct ( VECTOR: H, VECTOR: R )",
    "id": 1491,
    "declarations": "M: LINESEGMENT; H: VECTOR; R: VECTOR",
    "facts": "Length(M) = DotProduct(H, R)"
},
{
    "assertion": "RightPart ( HYPERBOLA: p ) equals LeftPart ( HYPERBOLA: l )",
    "id": 1492,
    "declarations": "p: HYPERBOLA; l: HYPERBOLA",
    "facts": "RightPart(p) = LeftPart(l)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: E ) equals LINE: E",
    "id": 1493,
    "declarations": "E: HYPERBOLA; E: LINE",
    "facts": "Asymptote(E) = E"
},
{
    "assertion": "Inclination ( LINE: V ) equals sqrt ( YCoordinate ( POINT: f ) )",
    "id": 1494,
    "declarations": "V: LINE; f: POINT",
    "facts": "Inclination(V) = sqrt(YCoordinate(f))"
},
{
    "assertion": "Center ( CONICSECTION: O ) equals POINT: A",
    "id": 1495,
    "declarations": "O: CONICSECTION; A: POINT",
    "facts": "Center(O) = A"
},
{
    "assertion": "Vertex ( CONICSECTION: Y ) equals RightVertex ( CONICSECTION: N )",
    "id": 1496,
    "declarations": "Y: CONICSECTION; N: CONICSECTION",
    "facts": "Vertex(Y) = RightVertex(N)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: h ) equals CircumCircle ( TRIANGLE: E )",
    "id": 1497,
    "declarations": "h: TRIANGLE; E: TRIANGLE",
    "facts": "CircumCircle(h) = CircumCircle(E)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: f ) equals CURVE: u",
    "id": 1498,
    "declarations": "f: HYPERBOLA; u: CURVE",
    "facts": "LeftPart(f) = u"
},
{
    "assertion": "IsOutTangent ( CIRCLE: J, CIRCLE: K ) equals BOOL: False",
    "id": 1499,
    "declarations": "J: CIRCLE; K: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(J, K) = False"
},
{
    "assertion": "IsParallel ( TangentOnPoint ( Incenter ( TRIANGLE: l ), CURVE: O ), LINE: z ) equals BOOL: False",
    "id": 1500,
    "declarations": "l: TRIANGLE; O: CURVE; z: LINE; False: BOOL",
    "facts": "IsParallel(TangentOnPoint(Incenter(l), O), z) = False"
},
{
    "assertion": "LineOf ( LowerVertex ( CONICSECTION: p ), LeftFocus ( CONICSECTION: C ) ) equals LINE: I",
    "id": 1501,
    "declarations": "p: CONICSECTION; C: CONICSECTION; I: LINE",
    "facts": "LineOf(LowerVertex(p), LeftFocus(C)) = I"
},
{
    "assertion": "NumIntersection ( CURVE: R, LeftPart ( HYPERBOLA: K ) ) equals NUMBER: 65",
    "id": 1502,
    "declarations": "R: CURVE; K: HYPERBOLA; 65: NUMBER",
    "facts": "NumIntersection(R, LeftPart(K)) = 65"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: J ) equals LINE: T",
    "id": 1503,
    "declarations": "J: CONICSECTION; T: LINE",
    "facts": "LeftDirectrix(J) = T"
},
{
    "assertion": "ApplyUnit ( Abs ( MajorAxis ( ELLIPSE: o ) ), DEGREESTR: degree )",
    "id": 1504,
    "declarations": "o: ELLIPSE; degree: DEGREESTR",
    "facts": "ApplyUnit(Abs(MajorAxis(o)), degree) = dummy_operator()"
},
{
    "assertion": "LowerVertex ( CONICSECTION: h ) equals POINT: v",
    "id": 1505,
    "declarations": "h: CONICSECTION; v: POINT",
    "facts": "LowerVertex(h) = v"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: O ) equals RightDirectrix ( CONICSECTION: n )",
    "id": 1507,
    "declarations": "O: LINESEGMENT; n: CONICSECTION",
    "facts": "PerpendicularBisector(O) = RightDirectrix(n)"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: v ) ) equals Abs ( MinorAxis ( ELLIPSE: X ) )",
    "id": 1508,
    "declarations": "v: ELLIPSE; X: ELLIPSE",
    "facts": "Abs(RealAxis(v)) = Abs(MinorAxis(X))"
},
{
    "assertion": "Quadrant ( RightVertex ( CONICSECTION: d ) ) equals XCoordinate ( MidPoint ( LINESEGMENT: u ) )",
    "id": 1509,
    "declarations": "d: CONICSECTION; u: LINESEGMENT",
    "facts": "Quadrant(RightVertex(d)) = XCoordinate(MidPoint(u))"
},
{
    "assertion": "TangentOfPoint ( MidPoint ( LINESEGMENT: E ), CURVE: a ) equals LINE: e",
    "id": 1510,
    "declarations": "E: LINESEGMENT; a: CURVE; e: LINE",
    "facts": "TangentOfPoint(MidPoint(E), a) = e"
},
{
    "assertion": "Slope ( LINE: j ) equals Intercept ( LINE: y, AXIS: yAxis )",
    "id": 1511,
    "declarations": "j: LINE; y: LINE; yAxis: AXIS",
    "facts": "Slope(j) = Intercept(y, yAxis)"
},
{
    "assertion": "Diameter ( CIRCLE: v ) equals InterReciprocal ( Min ( YCoordinate ( POINT: c ) ) )",
    "id": 1512,
    "declarations": "v: CIRCLE; c: POINT",
    "facts": "Diameter(v) = InterReciprocal(Min(YCoordinate(c)))"
},
{
    "assertion": "LocusEquation ( POINT: T ) equals LocusEquation ( RightVertex ( CONICSECTION: X ) )",
    "id": 1513,
    "declarations": "T: POINT; X: CONICSECTION",
    "facts": "LocusEquation(T) = LocusEquation(RightVertex(X))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: w, TRIANGLE: c ) equals BOOL: True",
    "id": 1514,
    "declarations": "w: CIRCLE; c: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(w, c) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: P ) equals LINESEGMENT: l",
    "id": 1515,
    "declarations": "P: ELLIPSE; l: LINESEGMENT",
    "facts": "MinorAxis(P) = l"
},
{
    "assertion": "LineOf ( Circumcenter ( TRIANGLE: p ), POINT: i ) equals OverlappingLine ( ImaginaryAxis ( ELLIPSE: R ) )",
    "id": 1516,
    "declarations": "p: TRIANGLE; i: POINT; R: ELLIPSE",
    "facts": "LineOf(Circumcenter(p), i) = OverlappingLine(ImaginaryAxis(R))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: m ) equals LINESEGMENT: b",
    "id": 1517,
    "declarations": "m: ELLIPSE; b: LINESEGMENT",
    "facts": "MajorAxis(m) = b"
},
{
    "assertion": "Eccentricity ( CONICSECTION: v ) equals NUMBER: 78",
    "id": 1518,
    "declarations": "v: CONICSECTION; 78: NUMBER",
    "facts": "Eccentricity(v) = 78"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: L ) equals OverlappingLine ( InterceptChord ( LINE: C, CONICSECTION: e ) )",
    "id": 1519,
    "declarations": "L: LINESEGMENT; C: LINE; e: CONICSECTION",
    "facts": "PerpendicularBisector(L) = OverlappingLine(InterceptChord(C, e))"
},
{
    "assertion": "Length ( LINESEGMENT: Z ) equals XCoordinate ( POINT: L )",
    "id": 1520,
    "declarations": "Z: LINESEGMENT; L: POINT",
    "facts": "Length(Z) = XCoordinate(L)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: e ) equals POINT: z",
    "id": 1521,
    "declarations": "e: TRIANGLE; z: POINT",
    "facts": "Circumcenter(e) = z"
},
{
    "assertion": "LocusEquation ( FootPoint ( PerpendicularBisector ( LINESEGMENT: J ), RightDirectrix ( CONICSECTION: T ) ) ) equals Expression ( CURVE: L )",
    "id": 1522,
    "declarations": "J: LINESEGMENT; T: CONICSECTION; L: CURVE",
    "facts": "LocusEquation(FootPoint(PerpendicularBisector(J), RightDirectrix(T))) = Expression(L)"
},
{
    "assertion": "AngleOf ( LowerFocus ( CONICSECTION: U ), Center ( CONICSECTION: O ), Center ( CONICSECTION: e ) ) equals AngleOf ( Circumcenter ( TRIANGLE: a ), Center ( CONICSECTION: X ), POINT: R )",
    "id": 1523,
    "declarations": "U: CONICSECTION; O: CONICSECTION; e: CONICSECTION; a: TRIANGLE; X: CONICSECTION; R: POINT",
    "facts": "AngleOf(LowerFocus(U), Center(O), Center(e)) = AngleOf(Circumcenter(a), Center(X), R)"
},
{
    "assertion": "Projection ( UpperVertex ( CONICSECTION: i ), LeftDirectrix ( CONICSECTION: B ) ) equals LeftVertex ( CONICSECTION: g )",
    "id": 1524,
    "declarations": "i: CONICSECTION; B: CONICSECTION; g: CONICSECTION",
    "facts": "Projection(UpperVertex(i), LeftDirectrix(B)) = LeftVertex(g)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: r ) equals lg ( Perimeter ( CONICSECTION: e ) )",
    "id": 1525,
    "declarations": "r: CONICSECTION; e: CONICSECTION",
    "facts": "Eccentricity(r) = lg(Perimeter(e))"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: T ) equals LINE: W",
    "id": 1526,
    "declarations": "T: LINESEGMENT; W: LINE",
    "facts": "PerpendicularBisector(T) = W"
},
{
    "assertion": "LowerFocus ( CONICSECTION: W ) equals POINT: K",
    "id": 1527,
    "declarations": "W: CONICSECTION; K: POINT",
    "facts": "LowerFocus(W) = K"
},
{
    "assertion": "Eccentricity ( CONICSECTION: D ) equals Slope ( OverlappingLine ( LINESEGMENT: N ) )",
    "id": 1528,
    "declarations": "D: CONICSECTION; N: LINESEGMENT",
    "facts": "Eccentricity(D) = Slope(OverlappingLine(N))"
},
{
    "assertion": "VectorOf ( RightFocus ( CONICSECTION: Q ), POINT: A ) equals VECTOR: B",
    "id": 1529,
    "declarations": "Q: CONICSECTION; A: POINT; B: VECTOR",
    "facts": "VectorOf(RightFocus(Q), A) = B"
},
{
    "assertion": "LeftFocus ( CONICSECTION: a ) equals LeftFocus ( CONICSECTION: g )",
    "id": 1530,
    "declarations": "a: CONICSECTION; g: CONICSECTION",
    "facts": "LeftFocus(a) = LeftFocus(g)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: E ) equals POINT: x",
    "id": 1531,
    "declarations": "E: CONICSECTION; x: POINT",
    "facts": "UpperFocus(E) = x"
},
{
    "assertion": "UpperFocus ( CONICSECTION: E ) equals UpperVertex ( CONICSECTION: X )",
    "id": 1532,
    "declarations": "E: CONICSECTION; X: CONICSECTION",
    "facts": "UpperFocus(E) = UpperVertex(X)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: s ) equals RightFocus ( CONICSECTION: L )",
    "id": 1533,
    "declarations": "s: CONICSECTION; L: CONICSECTION",
    "facts": "LowerFocus(s) = RightFocus(L)"
},
{
    "assertion": "Directrix ( CONICSECTION: E ) equals LINE: w",
    "id": 1534,
    "declarations": "E: CONICSECTION; w: LINE",
    "facts": "Directrix(E) = w"
},
{
    "assertion": "Max ( lg ( NUMBER: 96 ) ) equals NUMBER: -89",
    "id": 1535,
    "declarations": "96: NUMBER; -89: NUMBER",
    "facts": "Max(lg(96)) = -89"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: n, TRIANGLE: U ) equals BOOL: True",
    "id": 1536,
    "declarations": "n: CIRCLE; U: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(n, U) = True"
},
{
    "assertion": "IsInTangent ( CIRCLE: h, CIRCLE: r ) equals BOOL: True",
    "id": 1537,
    "declarations": "h: CIRCLE; r: CIRCLE; True: BOOL",
    "facts": "IsInTangent(h, r) = True"
},
{
    "assertion": "LineSegmentOf ( LowerVertex ( CONICSECTION: k ), Projection ( POINT: f, OverlappingLine ( RealAxis ( ELLIPSE: Z ) ) ) ) equals LINESEGMENT: Z",
    "id": 1538,
    "declarations": "k: CONICSECTION; f: POINT; Z: ELLIPSE; Z: LINESEGMENT",
    "facts": "LineSegmentOf(LowerVertex(k), Projection(f, OverlappingLine(RealAxis(Z)))) = Z"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: S, CIRCLE: i ) equals BOOL: False",
    "id": 1539,
    "declarations": "S: LINESEGMENT; i: CIRCLE; False: BOOL",
    "facts": "IsDiameter(S, i) = False"
},
{
    "assertion": "MidPoint ( LINESEGMENT: T ) equals RightFocus ( CONICSECTION: x )",
    "id": 1540,
    "declarations": "T: LINESEGMENT; x: CONICSECTION",
    "facts": "MidPoint(T) = RightFocus(x)"
},
{
    "assertion": "Abs ( MajorAxis ( ELLIPSE: g ) ) equals Diameter ( CIRCLE: f )",
    "id": 1541,
    "declarations": "g: ELLIPSE; f: CIRCLE",
    "facts": "Abs(MajorAxis(g)) = Diameter(f)"
},
{
    "assertion": "FootPoint ( LineOf ( Projection ( UpperFocus ( CONICSECTION: Q ), LINE: L ), POINT: Q ), LINE: s ) equals Incenter ( TRIANGLE: V )",
    "id": 1542,
    "declarations": "Q: CONICSECTION; L: LINE; Q: POINT; s: LINE; V: TRIANGLE",
    "facts": "FootPoint(LineOf(Projection(UpperFocus(Q), L), Q), s) = Incenter(V)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: f ) equals NUMBER: -30",
    "id": 1543,
    "declarations": "f: CONICSECTION; -30: NUMBER",
    "facts": "HalfFocalLength(f) = -30"
},
{
    "assertion": "LowerVertex ( CONICSECTION: f ) equals Circumcenter ( TriangleOf ( POINT: w, Incenter ( TRIANGLE: A ), Center ( CONICSECTION: z ) ) )",
    "id": 1544,
    "declarations": "f: CONICSECTION; w: POINT; A: TRIANGLE; z: CONICSECTION",
    "facts": "LowerVertex(f) = Circumcenter(TriangleOf(w, Incenter(A), Center(z)))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: n ) equals CURVE: Y",
    "id": 1545,
    "declarations": "n: HYPERBOLA; Y: CURVE",
    "facts": "LeftPart(n) = Y"
},
{
    "assertion": "PointOnCurve ( Orthocenter ( TRIANGLE: P ), CURVE: K ) equals BOOL: True",
    "id": 1546,
    "declarations": "P: TRIANGLE; K: CURVE; True: BOOL",
    "facts": "PointOnCurve(Orthocenter(P), K) = True"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: G ) equals AXIS: yAxis",
    "id": 1547,
    "declarations": "G: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(G) = yAxis"
},
{
    "assertion": "TangentOfPoint ( POINT: V, CURVE: m ) equals TangentOnPoint ( LeftFocus ( CONICSECTION: u ), CURVE: z )",
    "id": 1548,
    "declarations": "V: POINT; m: CURVE; u: CONICSECTION; z: CURVE",
    "facts": "TangentOfPoint(V, m) = TangentOnPoint(LeftFocus(u), z)"
},
{
    "assertion": "RightPart ( HYPERBOLA: k ) equals CURVE: n",
    "id": 1549,
    "declarations": "k: HYPERBOLA; n: CURVE",
    "facts": "RightPart(k) = n"
},
{
    "assertion": "Locus ( Center ( CONICSECTION: O ) ) equals CURVE: N",
    "id": 1550,
    "declarations": "O: CONICSECTION; N: CURVE",
    "facts": "Locus(Center(O)) = N"
},
{
    "assertion": "Incenter ( TRIANGLE: r ) equals Center ( CONICSECTION: y )",
    "id": 1551,
    "declarations": "r: TRIANGLE; y: CONICSECTION",
    "facts": "Incenter(r) = Center(y)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: s ) equals AXIS: xAxis",
    "id": 1552,
    "declarations": "s: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(s) = xAxis"
},
{
    "assertion": "IsTangent ( LINE: H, CONICSECTION: i ) equals BOOL: False",
    "id": 1553,
    "declarations": "H: LINE; i: CONICSECTION; False: BOOL",
    "facts": "IsTangent(H, i) = False"
},
{
    "assertion": "FocalLength ( CONICSECTION: b ) equals sqrt ( YCoordinate ( Orthocenter ( TRIANGLE: P ) ) )",
    "id": 1554,
    "declarations": "b: CONICSECTION; P: TRIANGLE",
    "facts": "FocalLength(b) = sqrt(YCoordinate(Orthocenter(P)))"
},
{
    "assertion": "InterReciprocal ( Slope ( LINE: Z ) ) equals XCoordinate ( POINT: d )",
    "id": 1555,
    "declarations": "Z: LINE; d: POINT",
    "facts": "InterReciprocal(Slope(Z)) = XCoordinate(d)"
},
{
    "assertion": "Distance ( LeftFocus ( CONICSECTION: J ), POINT: l ) equals sqrt ( NUMBER: -32 )",
    "id": 1556,
    "declarations": "J: CONICSECTION; l: POINT; -32: NUMBER",
    "facts": "Distance(LeftFocus(J), l) = sqrt(-32)"
},
{
    "assertion": "Quadrant ( POINT: w ) equals NUMBER: 44",
    "id": 1557,
    "declarations": "w: POINT; 44: NUMBER",
    "facts": "Quadrant(w) = 44"
},
{
    "assertion": "Asymptote ( HYPERBOLA: K ) equals LINE: V",
    "id": 1558,
    "declarations": "K: HYPERBOLA; V: LINE",
    "facts": "Asymptote(K) = V"
},
{
    "assertion": "Inclination ( LINE: b ) equals InterReciprocal ( Quadrant ( POINT: S ) )",
    "id": 1559,
    "declarations": "b: LINE; S: POINT",
    "facts": "Inclination(b) = InterReciprocal(Quadrant(S))"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: p, CIRCLE: U ) equals BOOL: True",
    "id": 1560,
    "declarations": "p: LINESEGMENT; U: CIRCLE; True: BOOL",
    "facts": "IsDiameter(p, U) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: O ) equals LINE: n",
    "id": 1561,
    "declarations": "O: CONICSECTION; n: LINE",
    "facts": "Directrix(O) = n"
},
{
    "assertion": "MajorAxis ( ELLIPSE: s ) equals LINESEGMENT: r",
    "id": 1562,
    "declarations": "s: ELLIPSE; r: LINESEGMENT",
    "facts": "MajorAxis(s) = r"
},
{
    "assertion": "LeftVertex ( CONICSECTION: i ) equals RightVertex ( CONICSECTION: c )",
    "id": 1563,
    "declarations": "i: CONICSECTION; c: CONICSECTION",
    "facts": "LeftVertex(i) = RightVertex(c)"
},
{
    "assertion": "RightFocus ( CONICSECTION: Z ) equals UpperVertex ( CONICSECTION: G )",
    "id": 1564,
    "declarations": "Z: CONICSECTION; G: CONICSECTION",
    "facts": "RightFocus(Z) = UpperVertex(G)"
},
{
    "assertion": "RightFocus ( CONICSECTION: V ) equals POINT: a",
    "id": 1565,
    "declarations": "V: CONICSECTION; a: POINT",
    "facts": "RightFocus(V) = a"
},
{
    "assertion": "Radius ( CIRCLE: u ) equals NUMBER: 46",
    "id": 1566,
    "declarations": "u: CIRCLE; 46: NUMBER",
    "facts": "Radius(u) = 46"
},
{
    "assertion": "TriangleOf ( Circumcenter ( TRIANGLE: x ), RightFocus ( CONICSECTION: H ), POINT: p ) equals TRIANGLE: I",
    "id": 1568,
    "declarations": "x: TRIANGLE; H: CONICSECTION; p: POINT; I: TRIANGLE",
    "facts": "TriangleOf(Circumcenter(x), RightFocus(H), p) = I"
},
{
    "assertion": "lg ( Quadrant ( POINT: z ) ) equals NUMBER: -95",
    "id": 1569,
    "declarations": "z: POINT; -95: NUMBER",
    "facts": "lg(Quadrant(z)) = -95"
},
{
    "assertion": "IsIntersect ( CURVE: U, LeftPart ( HYPERBOLA: m ) ) equals BOOL: False",
    "id": 1570,
    "declarations": "U: CURVE; m: HYPERBOLA; False: BOOL",
    "facts": "IsIntersect(U, LeftPart(m)) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: i ) equals UpperVertex ( CONICSECTION: L )",
    "id": 1571,
    "declarations": "i: TRIANGLE; L: CONICSECTION",
    "facts": "Incenter(i) = UpperVertex(L)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: q ) equals LINE: R",
    "id": 1572,
    "declarations": "q: LINESEGMENT; R: LINE",
    "facts": "PerpendicularBisector(q) = R"
},
{
    "assertion": "LineSegmentOf ( Orthocenter ( TRIANGLE: N ), Incenter ( TRIANGLE: R ) ) equals LINESEGMENT: n",
    "id": 1573,
    "declarations": "N: TRIANGLE; R: TRIANGLE; n: LINESEGMENT",
    "facts": "LineSegmentOf(Orthocenter(N), Incenter(R)) = n"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: s ) equals Inclination ( LINE: d )",
    "id": 1574,
    "declarations": "s: CONICSECTION; d: LINE",
    "facts": "HalfFocalLength(s) = Inclination(d)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: l ) equals LINESEGMENT: K",
    "id": 1575,
    "declarations": "l: ELLIPSE; K: LINESEGMENT",
    "facts": "ImaginaryAxis(l) = K"
},
{
    "assertion": "MinorAxis ( ELLIPSE: J ) equals LINESEGMENT: v",
    "id": 1576,
    "declarations": "J: ELLIPSE; v: LINESEGMENT",
    "facts": "MinorAxis(J) = v"
},
{
    "assertion": "TangentOnPoint ( POINT: E, LeftPart ( HYPERBOLA: d ) ) equals LINE: o",
    "id": 1577,
    "declarations": "E: POINT; d: HYPERBOLA; o: LINE",
    "facts": "TangentOnPoint(E, LeftPart(d)) = o"
},
{
    "assertion": "Radius ( CIRCLE: j ) equals Abs ( MinorAxis ( ELLIPSE: X ) )",
    "id": 1578,
    "declarations": "j: CIRCLE; X: ELLIPSE",
    "facts": "Radius(j) = Abs(MinorAxis(X))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: I ) equals CIRCLE: I",
    "id": 1579,
    "declarations": "I: TRIANGLE; I: CIRCLE",
    "facts": "CircumCircle(I) = I"
},
{
    "assertion": "Incenter ( TRIANGLE: V ) equals LeftFocus ( CONICSECTION: Y )",
    "id": 1580,
    "declarations": "V: TRIANGLE; Y: CONICSECTION",
    "facts": "Incenter(V) = LeftFocus(Y)"
},
{
    "assertion": "Expression ( CURVE: h ) equals EXPRESSION: y*space=*spacee^x",
    "id": 1581,
    "declarations": "h: CURVE; y*space=*spacee^x: EXPRESSION",
    "facts": "Expression(h) = y*space=*spacee^x"
},
{
    "assertion": "RightPart ( HYPERBOLA: v ) equals LeftPart ( HYPERBOLA: s )",
    "id": 1582,
    "declarations": "v: HYPERBOLA; s: HYPERBOLA",
    "facts": "RightPart(v) = LeftPart(s)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: p ) equals LINE: h",
    "id": 1583,
    "declarations": "p: CONICSECTION; h: LINE",
    "facts": "LeftDirectrix(p) = h"
},
{
    "assertion": "Perimeter ( CONICSECTION: i ) equals NUMBER: -88",
    "id": 1585,
    "declarations": "i: CONICSECTION; -88: NUMBER",
    "facts": "Perimeter(i) = -88"
},
{
    "assertion": "Endpoint ( InterceptChord ( LeftDirectrix ( CONICSECTION: K ), CONICSECTION: d ) ) equals LeftFocus ( CONICSECTION: W )",
    "id": 1586,
    "declarations": "K: CONICSECTION; d: CONICSECTION; W: CONICSECTION",
    "facts": "Endpoint(InterceptChord(LeftDirectrix(K), d)) = LeftFocus(W)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: G ) equals InterceptChord ( LINE: L, CONICSECTION: V )",
    "id": 1587,
    "declarations": "G: ELLIPSE; L: LINE; V: CONICSECTION",
    "facts": "ImaginaryAxis(G) = InterceptChord(L, V)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: Z ) equals AXIS: xAxis",
    "id": 1588,
    "declarations": "Z: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(Z) = xAxis"
},
{
    "assertion": "TangentPoint ( LINE: w, CIRCLE: k ) equals RightVertex ( CONICSECTION: Q )",
    "id": 1589,
    "declarations": "w: LINE; k: CIRCLE; Q: CONICSECTION",
    "facts": "TangentPoint(w, k) = RightVertex(Q)"
},
{
    "assertion": "Vertex ( CONICSECTION: h ) equals POINT: g",
    "id": 1590,
    "declarations": "h: CONICSECTION; g: POINT",
    "facts": "Vertex(h) = g"
},
{
    "assertion": "Diameter ( CIRCLE: Y ) equals Min ( XCoordinate ( RightFocus ( CONICSECTION: M ) ) )",
    "id": 1591,
    "declarations": "Y: CIRCLE; M: CONICSECTION",
    "facts": "Diameter(Y) = Min(XCoordinate(RightFocus(M)))"
},
{
    "assertion": "PointOnCurve ( POINT: n, CURVE: B ) equals BOOL: True",
    "id": 1592,
    "declarations": "n: POINT; B: CURVE; True: BOOL",
    "facts": "PointOnCurve(n, B) = True"
},
{
    "assertion": "FootPoint ( LINE: j, PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: K ) ) ) equals LeftFocus ( CONICSECTION: y )",
    "id": 1593,
    "declarations": "j: LINE; K: ELLIPSE; y: CONICSECTION",
    "facts": "FootPoint(j, PerpendicularBisector(ImaginaryAxis(K))) = LeftFocus(y)"
},
{
    "assertion": "TriangleOf ( POINT: T, Incenter ( TRIANGLE: r ), RightFocus ( CONICSECTION: j ) ) equals TRIANGLE: S",
    "id": 1594,
    "declarations": "T: POINT; r: TRIANGLE; j: CONICSECTION; S: TRIANGLE",
    "facts": "TriangleOf(T, Incenter(r), RightFocus(j)) = S"
},
{
    "assertion": "Quadrant ( POINT: B ) equals Quadrant ( UpperVertex ( CONICSECTION: X ) )",
    "id": 1595,
    "declarations": "B: POINT; X: CONICSECTION",
    "facts": "Quadrant(B) = Quadrant(UpperVertex(X))"
},
{
    "assertion": "YCoordinate ( RightFocus ( CONICSECTION: Q ) ) equals HalfFocalLength ( CONICSECTION: H )",
    "id": 1596,
    "declarations": "Q: CONICSECTION; H: CONICSECTION",
    "facts": "YCoordinate(RightFocus(Q)) = HalfFocalLength(H)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: h ) equals CIRCLE: O",
    "id": 1597,
    "declarations": "h: TRIANGLE; O: CIRCLE",
    "facts": "CircumCircle(h) = O"
},
{
    "assertion": "LineOf ( Orthocenter ( TriangleOf ( POINT: p, POINT: F, Center ( CONICSECTION: Y ) ) ), POINT: T ) equals LeftDirectrix ( CONICSECTION: w )",
    "id": 1598,
    "declarations": "p: POINT; F: POINT; Y: CONICSECTION; T: POINT; w: CONICSECTION",
    "facts": "LineOf(Orthocenter(TriangleOf(p, F, Center(Y))), T) = LeftDirectrix(w)"
},
{
    "assertion": "Vertex ( CONICSECTION: a ) equals POINT: Z",
    "id": 1599,
    "declarations": "a: CONICSECTION; Z: POINT",
    "facts": "Vertex(a) = Z"
},
{
    "assertion": "TangentOnPoint ( Center ( CONICSECTION: u ), CURVE: h ) equals RightDirectrix ( CONICSECTION: W )",
    "id": 1600,
    "declarations": "u: CONICSECTION; h: CURVE; W: CONICSECTION",
    "facts": "TangentOnPoint(Center(u), h) = RightDirectrix(W)"
},
{
    "assertion": "AngleOf ( LowerFocus ( CONICSECTION: F ), POINT: C, POINT: y ) equals AngleOf ( POINT: M, MidPoint ( LINESEGMENT: d ), POINT: p )",
    "id": 1601,
    "declarations": "F: CONICSECTION; C: POINT; y: POINT; M: POINT; d: LINESEGMENT; p: POINT",
    "facts": "AngleOf(LowerFocus(F), C, y) = AngleOf(M, MidPoint(d), p)"
},
{
    "assertion": "Diameter ( CIRCLE: s ) equals Slope ( LINE: L )",
    "id": 1602,
    "declarations": "s: CIRCLE; L: LINE",
    "facts": "Diameter(s) = Slope(L)"
},
{
    "assertion": "LineSegmentOf ( Center ( CONICSECTION: L ), RightVertex ( CONICSECTION: j ) ) equals LINESEGMENT: K",
    "id": 1603,
    "declarations": "L: CONICSECTION; j: CONICSECTION; K: LINESEGMENT",
    "facts": "LineSegmentOf(Center(L), RightVertex(j)) = K"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: Z, TRIANGLE: X ) equals BOOL: False",
    "id": 1604,
    "declarations": "Z: CIRCLE; X: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(Z, X) = False"
},
{
    "assertion": "LineSegmentOf ( RightVertex ( CONICSECTION: B ), MidPoint ( LINESEGMENT: a ) ) equals LINESEGMENT: K",
    "id": 1605,
    "declarations": "B: CONICSECTION; a: LINESEGMENT; K: LINESEGMENT",
    "facts": "LineSegmentOf(RightVertex(B), MidPoint(a)) = K"
},
{
    "assertion": "Distance ( Center ( CONICSECTION: B ), LowerFocus ( CONICSECTION: g ) ) equals Diameter ( CIRCLE: n )",
    "id": 1606,
    "declarations": "B: CONICSECTION; g: CONICSECTION; n: CIRCLE",
    "facts": "Distance(Center(B), LowerFocus(g)) = Diameter(n)"
},
{
    "assertion": "RightPart ( HYPERBOLA: K ) equals CURVE: Y",
    "id": 1607,
    "declarations": "K: HYPERBOLA; Y: CURVE",
    "facts": "RightPart(K) = Y"
},
{
    "assertion": "IsPerpendicular ( LINE: W, LINE: P ) equals BOOL: True",
    "id": 1608,
    "declarations": "W: LINE; P: LINE; True: BOOL",
    "facts": "IsPerpendicular(W, P) = True"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: z ) equals AXIS: yAxis",
    "id": 1609,
    "declarations": "z: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(z) = yAxis"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: u, CIRCLE: D ) equals BOOL: False",
    "id": 1610,
    "declarations": "u: LINESEGMENT; D: CIRCLE; False: BOOL",
    "facts": "IsDiameter(u, D) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: q ) equals POINT: g",
    "id": 1611,
    "declarations": "q: CONICSECTION; g: POINT",
    "facts": "UpperFocus(q) = g"
},
{
    "assertion": "FootPoint ( LINE: G, LINE: d ) equals Projection ( UpperVertex ( CONICSECTION: H ), RightDirectrix ( CONICSECTION: w ) )",
    "id": 1612,
    "declarations": "G: LINE; d: LINE; H: CONICSECTION; w: CONICSECTION",
    "facts": "FootPoint(G, d) = Projection(UpperVertex(H), RightDirectrix(w))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: c ) equals Center ( CONICSECTION: R )",
    "id": 1613,
    "declarations": "c: TRIANGLE; R: CONICSECTION",
    "facts": "Circumcenter(c) = Center(R)"
},
{
    "assertion": "Slope ( LINE: G ) equals Slope ( TangentOnPoint ( LowerFocus ( CONICSECTION: W ), CURVE: R ) )",
    "id": 1614,
    "declarations": "G: LINE; W: CONICSECTION; R: CURVE",
    "facts": "Slope(G) = Slope(TangentOnPoint(LowerFocus(W), R))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: j ) equals POINT: o",
    "id": 1615,
    "declarations": "j: TRIANGLE; o: POINT",
    "facts": "Circumcenter(j) = o"
},
{
    "assertion": "Vertex ( CONICSECTION: b ) equals POINT: g",
    "id": 1616,
    "declarations": "b: CONICSECTION; g: POINT",
    "facts": "Vertex(b) = g"
},
{
    "assertion": "And ( InterReciprocal ( NumIntersection ( RightPart ( HYPERBOLA: A ), CURVE: Z ) ) equals HalfFocalLength ( CONICSECTION: Q ), RightPart ( HYPERBOLA: i ) equals LeftPart ( HYPERBOLA: B ) ) equals BOOL: False",
    "id": 1617,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftPart ( HYPERBOLA: d ) equals CURVE: f",
    "id": 1618,
    "declarations": "d: HYPERBOLA; f: CURVE",
    "facts": "LeftPart(d) = f"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: b, CONICSECTION: V ) equals BOOL: True",
    "id": 1619,
    "declarations": "b: LINESEGMENT; V: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(b, V) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: u ) equals PerpendicularBisector ( MajorAxis ( ELLIPSE: R ) )",
    "id": 1620,
    "declarations": "u: CONICSECTION; R: ELLIPSE",
    "facts": "Directrix(u) = PerpendicularBisector(MajorAxis(R))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Z ) equals LowerFocus ( CONICSECTION: P )",
    "id": 1621,
    "declarations": "Z: CONICSECTION; P: CONICSECTION",
    "facts": "LeftFocus(Z) = LowerFocus(P)"
},
{
    "assertion": "YCoordinate ( LowerFocus ( CONICSECTION: H ) ) equals NUMBER: -50",
    "id": 1622,
    "declarations": "H: CONICSECTION; -50: NUMBER",
    "facts": "YCoordinate(LowerFocus(H)) = -50"
},
{
    "assertion": "IsIntersect ( Locus ( POINT: d ), CURVE: n ) equals BOOL: False",
    "id": 1623,
    "declarations": "d: POINT; n: CURVE; False: BOOL",
    "facts": "IsIntersect(Locus(d), n) = False"
},
{
    "assertion": "InterReciprocal ( NUMBER: -44 ) equals NUMBER: -1",
    "id": 1624,
    "declarations": "-44: NUMBER; -1: NUMBER",
    "facts": "InterReciprocal(-44) = -1"
},
{
    "assertion": "Perimeter ( CONICSECTION: S ) equals NUMBER: 28",
    "id": 1625,
    "declarations": "S: CONICSECTION; 28: NUMBER",
    "facts": "Perimeter(S) = 28"
},
{
    "assertion": "MajorAxis ( ELLIPSE: x ) equals ImaginaryAxis ( ELLIPSE: A )",
    "id": 1626,
    "declarations": "x: ELLIPSE; A: ELLIPSE",
    "facts": "MajorAxis(x) = ImaginaryAxis(A)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: O ) equals CURVE: S",
    "id": 1627,
    "declarations": "O: HYPERBOLA; S: CURVE",
    "facts": "LeftPart(O) = S"
},
{
    "assertion": "Radius ( CIRCLE: m ) equals NUMBER: 5",
    "id": 1628,
    "declarations": "m: CIRCLE; 5: NUMBER",
    "facts": "Radius(m) = 5"
},
{
    "assertion": "Area ( CONICSECTION: b ) equals NUMBER: 14",
    "id": 1629,
    "declarations": "b: CONICSECTION; 14: NUMBER",
    "facts": "Area(b) = 14"
},
{
    "assertion": "Directrix ( CONICSECTION: T ) equals LINE: U",
    "id": 1630,
    "declarations": "T: CONICSECTION; U: LINE",
    "facts": "Directrix(T) = U"
},
{
    "assertion": "Max ( NUMBER: 78 ) equals InterReciprocal ( NUMBER: 31 )",
    "id": 1631,
    "declarations": "78: NUMBER; 31: NUMBER",
    "facts": "Max(78) = InterReciprocal(31)"
},
{
    "assertion": "Expression ( RightPart ( HYPERBOLA: M ) ) equals EXPRESSION: x*space=*spacey^2*space-*space4*y*space+*space4",
    "id": 1632,
    "declarations": "M: HYPERBOLA; x*space=*spacey^2*space-*space4*y*space+*space4: EXPRESSION",
    "facts": "Expression(RightPart(M)) = x*space=*spacey^2*space-*space4*y*space+*space4"
},
{
    "assertion": "CircumCircle ( TRIANGLE: D ) equals CIRCLE: U",
    "id": 1633,
    "declarations": "D: TRIANGLE; U: CIRCLE",
    "facts": "CircumCircle(D) = U"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: u ) equals RightDirectrix ( CONICSECTION: Y )",
    "id": 1634,
    "declarations": "u: LINESEGMENT; Y: CONICSECTION",
    "facts": "OverlappingLine(u) = RightDirectrix(Y)"
},
{
    "assertion": "Negation ( RightFocus ( CONICSECTION: j ) equals LowerVertex ( CONICSECTION: r ) ) equals BOOL: False",
    "id": 1635,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Inclination ( LINE: B ) equals InterReciprocal ( NUMBER: -12 )",
    "id": 1636,
    "declarations": "B: LINE; -12: NUMBER",
    "facts": "Inclination(B) = InterReciprocal(-12)"
},
{
    "assertion": "Slope ( PerpendicularBisector ( LINESEGMENT: c ) ) equals NUMBER: -68",
    "id": 1637,
    "declarations": "c: LINESEGMENT; -68: NUMBER",
    "facts": "Slope(PerpendicularBisector(c)) = -68"
},
{
    "assertion": "Perimeter ( CONICSECTION: E ) equals NUMBER: 90",
    "id": 1638,
    "declarations": "E: CONICSECTION; 90: NUMBER",
    "facts": "Perimeter(E) = 90"
},
{
    "assertion": "Perimeter ( CONICSECTION: q ) equals NUMBER: 77",
    "id": 1639,
    "declarations": "q: CONICSECTION; 77: NUMBER",
    "facts": "Perimeter(q) = 77"
},
{
    "assertion": "UpperVertex ( CONICSECTION: m ) equals MidPoint ( LINESEGMENT: e )",
    "id": 1640,
    "declarations": "m: CONICSECTION; e: LINESEGMENT",
    "facts": "UpperVertex(m) = MidPoint(e)"
},
{
    "assertion": "PerpendicularBisector ( RealAxis ( ELLIPSE: c ) ) equals TangentOfPoint ( POINT: k, CURVE: U )",
    "id": 1641,
    "declarations": "c: ELLIPSE; k: POINT; U: CURVE",
    "facts": "PerpendicularBisector(RealAxis(c)) = TangentOfPoint(k, U)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: s ) equals CURVE: B",
    "id": 1642,
    "declarations": "s: HYPERBOLA; B: CURVE",
    "facts": "LeftPart(s) = B"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: j ) equals LINESEGMENT: m",
    "id": 1643,
    "declarations": "j: ELLIPSE; m: LINESEGMENT",
    "facts": "ImaginaryAxis(j) = m"
},
{
    "assertion": "IsChordOf ( LineSegmentOf ( POINT: U, LeftVertex ( CONICSECTION: w ) ), CONICSECTION: t ) equals BOOL: True",
    "id": 1644,
    "declarations": "U: POINT; w: CONICSECTION; t: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(LineSegmentOf(U, LeftVertex(w)), t) = True"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: B ) equals LINE: c",
    "id": 1645,
    "declarations": "B: LINESEGMENT; c: LINE",
    "facts": "PerpendicularBisector(B) = c"
},
{
    "assertion": "Inclination ( LINE: y ) equals Quadrant ( Incenter ( TRIANGLE: B ) )",
    "id": 1646,
    "declarations": "y: LINE; B: TRIANGLE",
    "facts": "Inclination(y) = Quadrant(Incenter(B))"
},
{
    "assertion": "Abs ( InterceptChord ( LINE: c, CONICSECTION: T ) ) equals XCoordinate ( Projection ( LowerVertex ( CONICSECTION: a ), LINE: y ) )",
    "id": 1647,
    "declarations": "c: LINE; T: CONICSECTION; a: CONICSECTION; y: LINE",
    "facts": "Abs(InterceptChord(c, T)) = XCoordinate(Projection(LowerVertex(a), y))"
},
{
    "assertion": "Intersection ( CURVE: Z, CURVE: n ) equals MidPoint ( LINESEGMENT: p )",
    "id": 1648,
    "declarations": "Z: CURVE; n: CURVE; p: LINESEGMENT",
    "facts": "Intersection(Z, n) = MidPoint(p)"
},
{
    "assertion": "Directrix ( CONICSECTION: M ) equals LINE: I",
    "id": 1649,
    "declarations": "M: CONICSECTION; I: LINE",
    "facts": "Directrix(M) = I"
},
{
    "assertion": "RealAxis ( ELLIPSE: L ) equals LINESEGMENT: V",
    "id": 1650,
    "declarations": "L: ELLIPSE; V: LINESEGMENT",
    "facts": "RealAxis(L) = V"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: y ) equals YCoordinate ( LeftVertex ( CONICSECTION: x ) )",
    "id": 1651,
    "declarations": "y: CONICSECTION; x: CONICSECTION",
    "facts": "HalfFocalLength(y) = YCoordinate(LeftVertex(x))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: n ) equals POINT: E",
    "id": 1652,
    "declarations": "n: CONICSECTION; E: POINT",
    "facts": "LowerFocus(n) = E"
},
{
    "assertion": "LineSegmentOf ( POINT: H, LowerVertex ( CONICSECTION: i ) ) equals LINESEGMENT: w",
    "id": 1653,
    "declarations": "H: POINT; i: CONICSECTION; w: LINESEGMENT",
    "facts": "LineSegmentOf(H, LowerVertex(i)) = w"
},
{
    "assertion": "Intercept ( LINE: D, AXIS: yAxis ) equals HalfFocalLength ( CONICSECTION: P )",
    "id": 1654,
    "declarations": "D: LINE; yAxis: AXIS; P: CONICSECTION",
    "facts": "Intercept(D, yAxis) = HalfFocalLength(P)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: f ) equals POINT: H",
    "id": 1655,
    "declarations": "f: CONICSECTION; H: POINT",
    "facts": "UpperVertex(f) = H"
},
{
    "assertion": "UpperFocus ( CONICSECTION: P ) equals UpperFocus ( CONICSECTION: M )",
    "id": 1656,
    "declarations": "P: CONICSECTION; M: CONICSECTION",
    "facts": "UpperFocus(P) = UpperFocus(M)"
},
{
    "assertion": "Perimeter ( CONICSECTION: r ) equals FocalLength ( CONICSECTION: E )",
    "id": 1657,
    "declarations": "r: CONICSECTION; E: CONICSECTION",
    "facts": "Perimeter(r) = FocalLength(E)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: U ) equals NUMBER: 8",
    "id": 1658,
    "declarations": "U: CONICSECTION; 8: NUMBER",
    "facts": "HalfFocalLength(U) = 8"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: l, TRIANGLE: o ) equals BOOL: True",
    "id": 1659,
    "declarations": "l: CIRCLE; o: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(l, o) = True"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: v ) ) equals TangentOnPoint ( POINT: F, CURVE: I )",
    "id": 1660,
    "declarations": "v: ELLIPSE; F: POINT; I: CURVE",
    "facts": "OverlappingLine(MajorAxis(v)) = TangentOnPoint(F, I)"
},
{
    "assertion": "Min ( NUMBER: 19 ) equals Intercept ( LINE: U, AXIS: xAxis )",
    "id": 1661,
    "declarations": "19: NUMBER; U: LINE; xAxis: AXIS",
    "facts": "Min(19) = Intercept(U, xAxis)"
},
{
    "assertion": "Slope ( LINE: p ) equals sqrt ( Min ( XCoordinate ( POINT: O ) ) )",
    "id": 1662,
    "declarations": "p: LINE; O: POINT",
    "facts": "Slope(p) = sqrt(Min(XCoordinate(O)))"
},
{
    "assertion": "FootPoint ( LINE: O, LINE: G ) equals UpperVertex ( CONICSECTION: z )",
    "id": 1663,
    "declarations": "O: LINE; G: LINE; z: CONICSECTION",
    "facts": "FootPoint(O, G) = UpperVertex(z)"
},
{
    "assertion": "YCoordinate ( Incenter ( TRIANGLE: e ) ) equals NUMBER: 70",
    "id": 1664,
    "declarations": "e: TRIANGLE; 70: NUMBER",
    "facts": "YCoordinate(Incenter(e)) = 70"
},
{
    "assertion": "InterceptChord ( LINE: A, CONICSECTION: k ) equals MajorAxis ( ELLIPSE: R )",
    "id": 1665,
    "declarations": "A: LINE; k: CONICSECTION; R: ELLIPSE",
    "facts": "InterceptChord(A, k) = MajorAxis(R)"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: J ) ) equals CURVE: N",
    "id": 1666,
    "declarations": "J: CONICSECTION; N: CURVE",
    "facts": "Locus(LeftFocus(J)) = N"
},
{
    "assertion": "Locus ( UpperVertex ( CONICSECTION: a ) ) equals CURVE: v",
    "id": 1667,
    "declarations": "a: CONICSECTION; v: CURVE",
    "facts": "Locus(UpperVertex(a)) = v"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: J, CIRCLE: A ) equals BOOL: True",
    "id": 1668,
    "declarations": "J: LINESEGMENT; A: CIRCLE; True: BOOL",
    "facts": "IsDiameter(J, A) = True"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: E ) ) equals InterReciprocal ( lg ( NUMBER: -12 ) )",
    "id": 1669,
    "declarations": "E: TRIANGLE; -12: NUMBER",
    "facts": "Radius(CircumCircle(E)) = InterReciprocal(lg(-12))"
},
{
    "assertion": "RightPart ( HYPERBOLA: h ) equals CURVE: t",
    "id": 1670,
    "declarations": "h: HYPERBOLA; t: CURVE",
    "facts": "RightPart(h) = t"
},
{
    "assertion": "lg ( NUMBER: 21 ) equals NUMBER: 95",
    "id": 1671,
    "declarations": "21: NUMBER; 95: NUMBER",
    "facts": "lg(21) = 95"
},
{
    "assertion": "NumIntersection ( RightPart ( HYPERBOLA: p ), CURVE: l ) equals Slope ( TangentOnPoint ( POINT: r, CURVE: U ) )",
    "id": 1672,
    "declarations": "p: HYPERBOLA; l: CURVE; r: POINT; U: CURVE",
    "facts": "NumIntersection(RightPart(p), l) = Slope(TangentOnPoint(r, U))"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: u, CONICSECTION: j ) equals BOOL: False",
    "id": 1673,
    "declarations": "u: LINESEGMENT; j: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(u, j) = False"
},
{
    "assertion": "And ( Projection ( POINT: v, LINE: d ) equals LeftVertex ( CONICSECTION: D ), HalfFocalLength ( CONICSECTION: f ) equals NUMBER: 54 ) equals BOOL: False",
    "id": 1674,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MinorAxis ( ELLIPSE: n ) equals LINESEGMENT: e",
    "id": 1675,
    "declarations": "n: ELLIPSE; e: LINESEGMENT",
    "facts": "MinorAxis(n) = e"
},
{
    "assertion": "CircumCircle ( TRIANGLE: v ) equals CIRCLE: t",
    "id": 1676,
    "declarations": "v: TRIANGLE; t: CIRCLE",
    "facts": "CircumCircle(v) = t"
},
{
    "assertion": "TriangleOf ( LowerVertex ( CONICSECTION: q ), POINT: n, POINT: i ) equals TriangleOf ( POINT: y, POINT: n, POINT: u )",
    "id": 1677,
    "declarations": "q: CONICSECTION; n: POINT; i: POINT; y: POINT; n: POINT; u: POINT",
    "facts": "TriangleOf(LowerVertex(q), n, i) = TriangleOf(y, n, u)"
},
{
    "assertion": "RightFocus ( CONICSECTION: B ) equals POINT: N",
    "id": 1678,
    "declarations": "B: CONICSECTION; N: POINT",
    "facts": "RightFocus(B) = N"
},
{
    "assertion": "Diameter ( CIRCLE: f ) equals HalfFocalLength ( CONICSECTION: Q )",
    "id": 1679,
    "declarations": "f: CIRCLE; Q: CONICSECTION",
    "facts": "Diameter(f) = HalfFocalLength(Q)"
},
{
    "assertion": "Max ( DotProduct ( VECTOR: r, VECTOR: W ) ) equals sqrt ( sqrt ( NUMBER: -81 ) )",
    "id": 1680,
    "declarations": "r: VECTOR; W: VECTOR; -81: NUMBER",
    "facts": "Max(DotProduct(r, W)) = sqrt(sqrt(-81))"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: A ) ) equals Radius ( CIRCLE: T )",
    "id": 1681,
    "declarations": "A: CONICSECTION; T: CIRCLE",
    "facts": "XCoordinate(LeftFocus(A)) = Radius(T)"
},
{
    "assertion": "ApplyUnit ( Eccentricity ( CONICSECTION: L ), DEGREESTR: degree )",
    "id": 1682,
    "declarations": "L: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Eccentricity(L), degree) = dummy_operator()"
},
{
    "assertion": "RightFocus ( CONICSECTION: X ) equals MidPoint ( MinorAxis ( ELLIPSE: e ) )",
    "id": 1683,
    "declarations": "X: CONICSECTION; e: ELLIPSE",
    "facts": "RightFocus(X) = MidPoint(MinorAxis(e))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: P ) equals CIRCLE: M",
    "id": 1684,
    "declarations": "P: TRIANGLE; M: CIRCLE",
    "facts": "CircumCircle(P) = M"
},
{
    "assertion": "VectorOf ( LeftFocus ( CONICSECTION: r ), UpperFocus ( CONICSECTION: y ) ) equals VECTOR: c",
    "id": 1685,
    "declarations": "r: CONICSECTION; y: CONICSECTION; c: VECTOR",
    "facts": "VectorOf(LeftFocus(r), UpperFocus(y)) = c"
},
{
    "assertion": "Orthocenter ( TRIANGLE: j ) equals Orthocenter ( TRIANGLE: l )",
    "id": 1686,
    "declarations": "j: TRIANGLE; l: TRIANGLE",
    "facts": "Orthocenter(j) = Orthocenter(l)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: F ) equals LINESEGMENT: n",
    "id": 1687,
    "declarations": "F: ELLIPSE; n: LINESEGMENT",
    "facts": "MinorAxis(F) = n"
},
{
    "assertion": "Radius ( CIRCLE: k ) equals Abs ( LINESEGMENT: q )",
    "id": 1688,
    "declarations": "k: CIRCLE; q: LINESEGMENT",
    "facts": "Radius(k) = Abs(q)"
},
{
    "assertion": "Focus ( CONICSECTION: h ) equals LowerVertex ( CONICSECTION: F )",
    "id": 1689,
    "declarations": "h: CONICSECTION; F: CONICSECTION",
    "facts": "Focus(h) = LowerVertex(F)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: u ) equals LINESEGMENT: X",
    "id": 1690,
    "declarations": "u: ELLIPSE; X: LINESEGMENT",
    "facts": "ImaginaryAxis(u) = X"
},
{
    "assertion": "YCoordinate ( RightVertex ( CONICSECTION: M ) ) equals lg ( Min ( Eccentricity ( CONICSECTION: s ) ) )",
    "id": 1691,
    "declarations": "M: CONICSECTION; s: CONICSECTION",
    "facts": "YCoordinate(RightVertex(M)) = lg(Min(Eccentricity(s)))"
},
{
    "assertion": "Focus ( CONICSECTION: y ) equals MidPoint ( LINESEGMENT: I )",
    "id": 1692,
    "declarations": "y: CONICSECTION; I: LINESEGMENT",
    "facts": "Focus(y) = MidPoint(I)"
},
{
    "assertion": "Negation ( Diameter ( CIRCLE: Y ) equals NUMBER: 25 ) equals BOOL: False",
    "id": 1693,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MinorAxis ( ELLIPSE: T ) equals LINESEGMENT: T",
    "id": 1694,
    "declarations": "T: ELLIPSE; T: LINESEGMENT",
    "facts": "MinorAxis(T) = T"
},
{
    "assertion": "Focus ( CONICSECTION: k ) equals POINT: i",
    "id": 1696,
    "declarations": "k: CONICSECTION; i: POINT",
    "facts": "Focus(k) = i"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: L ) equals LINE: M",
    "id": 1697,
    "declarations": "L: LINESEGMENT; M: LINE",
    "facts": "OverlappingLine(L) = M"
},
{
    "assertion": "LeftVertex ( CONICSECTION: a ) equals LowerFocus ( CONICSECTION: I )",
    "id": 1698,
    "declarations": "a: CONICSECTION; I: CONICSECTION",
    "facts": "LeftVertex(a) = LowerFocus(I)"
},
{
    "assertion": "Slope ( LINE: B ) equals NUMBER: -18",
    "id": 1699,
    "declarations": "B: LINE; -18: NUMBER",
    "facts": "Slope(B) = -18"
},
{
    "assertion": "FocalLength ( CONICSECTION: d ) equals Eccentricity ( CONICSECTION: H )",
    "id": 1700,
    "declarations": "d: CONICSECTION; H: CONICSECTION",
    "facts": "FocalLength(d) = Eccentricity(H)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: Y ) equals OverlappingLine ( LINESEGMENT: A )",
    "id": 1701,
    "declarations": "Y: LINESEGMENT; A: LINESEGMENT",
    "facts": "PerpendicularBisector(Y) = OverlappingLine(A)"
},
{
    "assertion": "Distance ( POINT: Q, Circumcenter ( TRIANGLE: G ) ) equals NUMBER: 32",
    "id": 1702,
    "declarations": "Q: POINT; G: TRIANGLE; 32: NUMBER",
    "facts": "Distance(Q, Circumcenter(G)) = 32"
},
{
    "assertion": "InterceptChord ( LINE: l, CONICSECTION: Y ) equals LINESEGMENT: n",
    "id": 1703,
    "declarations": "l: LINE; Y: CONICSECTION; n: LINESEGMENT",
    "facts": "InterceptChord(l, Y) = n"
},
{
    "assertion": "Abs ( LINESEGMENT: r ) equals Min ( NUMBER: 69 )",
    "id": 1704,
    "declarations": "r: LINESEGMENT; 69: NUMBER",
    "facts": "Abs(r) = Min(69)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: r ) equals POINT: m",
    "id": 1705,
    "declarations": "r: TRIANGLE; m: POINT",
    "facts": "Circumcenter(r) = m"
},
{
    "assertion": "MinorAxis ( ELLIPSE: j ) equals LINESEGMENT: p",
    "id": 1706,
    "declarations": "j: ELLIPSE; p: LINESEGMENT",
    "facts": "MinorAxis(j) = p"
},
{
    "assertion": "NumIntersection ( CURVE: o, Locus ( RightFocus ( CONICSECTION: E ) ) ) equals Eccentricity ( CONICSECTION: z )",
    "id": 1707,
    "declarations": "o: CURVE; E: CONICSECTION; z: CONICSECTION",
    "facts": "NumIntersection(o, Locus(RightFocus(E))) = Eccentricity(z)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: M ) equals AXIS: xAxis",
    "id": 1708,
    "declarations": "M: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(M) = xAxis"
},
{
    "assertion": "PerpendicularBisector ( InterceptChord ( LINE: B, CONICSECTION: r ) ) equals LINE: f",
    "id": 1709,
    "declarations": "B: LINE; r: CONICSECTION; f: LINE",
    "facts": "PerpendicularBisector(InterceptChord(B, r)) = f"
},
{
    "assertion": "Between ( POINT: t, Orthocenter ( TRIANGLE: E ), POINT: g ) equals BOOL: False",
    "id": 1710,
    "declarations": "t: POINT; E: TRIANGLE; g: POINT; False: BOOL",
    "facts": "Between(t, Orthocenter(E), g) = False"
},
{
    "assertion": "Intersection ( Locus ( POINT: f ), LeftPart ( HYPERBOLA: E ) ) equals RightFocus ( CONICSECTION: U )",
    "id": 1711,
    "declarations": "f: POINT; E: HYPERBOLA; U: CONICSECTION",
    "facts": "Intersection(Locus(f), LeftPart(E)) = RightFocus(U)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: Z ) equals CIRCLE: T",
    "id": 1712,
    "declarations": "Z: TRIANGLE; T: CIRCLE",
    "facts": "CircumCircle(Z) = T"
},
{
    "assertion": "IsPerpendicular ( TangentOnPoint ( Incenter ( TRIANGLE: x ), CURVE: R ), LINE: v ) equals BOOL: True",
    "id": 1713,
    "declarations": "x: TRIANGLE; R: CURVE; v: LINE; True: BOOL",
    "facts": "IsPerpendicular(TangentOnPoint(Incenter(x), R), v) = True"
},
{
    "assertion": "Quadrant ( UpperVertex ( CONICSECTION: V ) ) equals HalfFocalLength ( CONICSECTION: C )",
    "id": 1714,
    "declarations": "V: CONICSECTION; C: CONICSECTION",
    "facts": "Quadrant(UpperVertex(V)) = HalfFocalLength(C)"
},
{
    "assertion": "RealAxis ( ELLIPSE: v ) equals LINESEGMENT: z",
    "id": 1715,
    "declarations": "v: ELLIPSE; z: LINESEGMENT",
    "facts": "RealAxis(v) = z"
},
{
    "assertion": "Max ( Length ( MinorAxis ( ELLIPSE: T ) ) ) equals sqrt ( NUMBER: -19 )",
    "id": 1716,
    "declarations": "T: ELLIPSE; -19: NUMBER",
    "facts": "Max(Length(MinorAxis(T))) = sqrt(-19)"
},
{
    "assertion": "RealAxis ( ELLIPSE: x ) equals LINESEGMENT: d",
    "id": 1717,
    "declarations": "x: ELLIPSE; d: LINESEGMENT",
    "facts": "RealAxis(x) = d"
},
{
    "assertion": "Orthocenter ( TRIANGLE: K ) equals FootPoint ( LINE: d, LINE: X )",
    "id": 1718,
    "declarations": "K: TRIANGLE; d: LINE; X: LINE",
    "facts": "Orthocenter(K) = FootPoint(d, X)"
},
{
    "assertion": "RightPart ( HYPERBOLA: R ) equals CURVE: S",
    "id": 1719,
    "declarations": "R: HYPERBOLA; S: CURVE",
    "facts": "RightPart(R) = S"
},
{
    "assertion": "TriangleOf ( Orthocenter ( TRIANGLE: Y ), UpperFocus ( CONICSECTION: X ), POINT: R ) equals TRIANGLE: N",
    "id": 1720,
    "declarations": "Y: TRIANGLE; X: CONICSECTION; R: POINT; N: TRIANGLE",
    "facts": "TriangleOf(Orthocenter(Y), UpperFocus(X), R) = N"
},
{
    "assertion": "Eccentricity ( CONICSECTION: m ) equals Min ( Distance ( RightVertex ( CONICSECTION: v ), POINT: n ) )",
    "id": 1721,
    "declarations": "m: CONICSECTION; v: CONICSECTION; n: POINT",
    "facts": "Eccentricity(m) = Min(Distance(RightVertex(v), n))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: g ) equals POINT: o",
    "id": 1722,
    "declarations": "g: CONICSECTION; o: POINT",
    "facts": "LowerVertex(g) = o"
},
{
    "assertion": "LeftPart ( HYPERBOLA: U ) equals CURVE: v",
    "id": 1723,
    "declarations": "U: HYPERBOLA; v: CURVE",
    "facts": "LeftPart(U) = v"
},
{
    "assertion": "UpperVertex ( CONICSECTION: s ) equals Orthocenter ( TRIANGLE: q )",
    "id": 1724,
    "declarations": "s: CONICSECTION; q: TRIANGLE",
    "facts": "UpperVertex(s) = Orthocenter(q)"
},
{
    "assertion": "Center ( CONICSECTION: x ) equals POINT: d",
    "id": 1725,
    "declarations": "x: CONICSECTION; d: POINT",
    "facts": "Center(x) = d"
},
{
    "assertion": "InterReciprocal ( Diameter ( CIRCLE: L ) ) equals Eccentricity ( CONICSECTION: X )",
    "id": 1726,
    "declarations": "L: CIRCLE; X: CONICSECTION",
    "facts": "InterReciprocal(Diameter(L)) = Eccentricity(X)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 44, DEGREESTR: degree )",
    "id": 1727,
    "declarations": "44: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(44, degree) = dummy_operator()"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: n, TRIANGLE: d ) equals BOOL: False",
    "id": 1728,
    "declarations": "n: CIRCLE; d: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(n, d) = False"
},
{
    "assertion": "lg ( Perimeter ( CONICSECTION: T ) ) equals NUMBER: -64",
    "id": 1729,
    "declarations": "T: CONICSECTION; -64: NUMBER",
    "facts": "lg(Perimeter(T)) = -64"
},
{
    "assertion": "TangentOfPoint ( RightFocus ( CONICSECTION: h ), CURVE: i ) equals PerpendicularBisector ( LINESEGMENT: v )",
    "id": 1730,
    "declarations": "h: CONICSECTION; i: CURVE; v: LINESEGMENT",
    "facts": "TangentOfPoint(RightFocus(h), i) = PerpendicularBisector(v)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: q ) equals LeftFocus ( CONICSECTION: j )",
    "id": 1731,
    "declarations": "q: LINESEGMENT; j: CONICSECTION",
    "facts": "Endpoint(q) = LeftFocus(j)"
},
{
    "assertion": "Directrix ( CONICSECTION: s ) equals LINE: j",
    "id": 1732,
    "declarations": "s: CONICSECTION; j: LINE",
    "facts": "Directrix(s) = j"
},
{
    "assertion": "Vertex ( CONICSECTION: e ) equals POINT: i",
    "id": 1733,
    "declarations": "e: CONICSECTION; i: POINT",
    "facts": "Vertex(e) = i"
},
{
    "assertion": "TangentOfPoint ( MidPoint ( LINESEGMENT: H ), CURVE: c ) equals LINE: p",
    "id": 1734,
    "declarations": "H: LINESEGMENT; c: CURVE; p: LINE",
    "facts": "TangentOfPoint(MidPoint(H), c) = p"
},
{
    "assertion": "IsIntersect ( CURVE: m, Locus ( POINT: V ) ) equals BOOL: False",
    "id": 1735,
    "declarations": "m: CURVE; V: POINT; False: BOOL",
    "facts": "IsIntersect(m, Locus(V)) = False"
},
{
    "assertion": "RealAxis ( ELLIPSE: Y ) equals ImaginaryAxis ( ELLIPSE: P )",
    "id": 1736,
    "declarations": "Y: ELLIPSE; P: ELLIPSE",
    "facts": "RealAxis(Y) = ImaginaryAxis(P)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: M ) equals POINT: d",
    "id": 1737,
    "declarations": "M: CONICSECTION; d: POINT",
    "facts": "LowerVertex(M) = d"
},
{
    "assertion": "Negation ( VectorOf ( MidPoint ( LINESEGMENT: M ), POINT: r ) equals VECTOR: v ) equals BOOL: True",
    "id": 1738,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: Q ) equals LineOf ( LeftFocus ( CONICSECTION: K ), Orthocenter ( TRIANGLE: R ) )",
    "id": 1739,
    "declarations": "Q: LINESEGMENT; K: CONICSECTION; R: TRIANGLE",
    "facts": "OverlappingLine(Q) = LineOf(LeftFocus(K), Orthocenter(R))"
},
{
    "assertion": "LineSegmentOf ( POINT: K, POINT: B ) equals LINESEGMENT: Y",
    "id": 1740,
    "declarations": "K: POINT; B: POINT; Y: LINESEGMENT",
    "facts": "LineSegmentOf(K, B) = Y"
},
{
    "assertion": "RealAxis ( ELLIPSE: E ) equals LINESEGMENT: Q",
    "id": 1741,
    "declarations": "E: ELLIPSE; Q: LINESEGMENT",
    "facts": "RealAxis(E) = Q"
},
{
    "assertion": "LeftVertex ( CONICSECTION: f ) equals POINT: N",
    "id": 1742,
    "declarations": "f: CONICSECTION; N: POINT",
    "facts": "LeftVertex(f) = N"
},
{
    "assertion": "LeftVertex ( CONICSECTION: y ) equals LeftVertex ( CONICSECTION: v )",
    "id": 1743,
    "declarations": "y: CONICSECTION; v: CONICSECTION",
    "facts": "LeftVertex(y) = LeftVertex(v)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: L ) equals Center ( CONICSECTION: K )",
    "id": 1744,
    "declarations": "L: CONICSECTION; K: CONICSECTION",
    "facts": "UpperVertex(L) = Center(K)"
},
{
    "assertion": "Max ( Diameter ( CIRCLE: Z ) ) equals NUMBER: -77",
    "id": 1745,
    "declarations": "Z: CIRCLE; -77: NUMBER",
    "facts": "Max(Diameter(Z)) = -77"
},
{
    "assertion": "Quadrant ( POINT: z ) equals Quadrant ( POINT: Y )",
    "id": 1746,
    "declarations": "z: POINT; Y: POINT",
    "facts": "Quadrant(z) = Quadrant(Y)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: K ) equals Orthocenter ( TRIANGLE: J )",
    "id": 1747,
    "declarations": "K: CONICSECTION; J: TRIANGLE",
    "facts": "UpperFocus(K) = Orthocenter(J)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: d ) equals LINESEGMENT: s",
    "id": 1748,
    "declarations": "d: ELLIPSE; s: LINESEGMENT",
    "facts": "ImaginaryAxis(d) = s"
},
{
    "assertion": "LowerVertex ( CONICSECTION: V ) equals MidPoint ( LINESEGMENT: n )",
    "id": 1749,
    "declarations": "V: CONICSECTION; n: LINESEGMENT",
    "facts": "LowerVertex(V) = MidPoint(n)"
},
{
    "assertion": "LocusEquation ( Incenter ( TRIANGLE: o ) ) equals EXPRESSION: y*space=*spacee^x",
    "id": 1750,
    "declarations": "o: TRIANGLE; y*space=*spacee^x: EXPRESSION",
    "facts": "LocusEquation(Incenter(o)) = y*space=*spacee^x"
},
{
    "assertion": "LeftPart ( HYPERBOLA: l ) equals LeftPart ( HYPERBOLA: Y )",
    "id": 1751,
    "declarations": "l: HYPERBOLA; Y: HYPERBOLA",
    "facts": "LeftPart(l) = LeftPart(Y)"
},
{
    "assertion": "sqrt ( FocalLength ( CONICSECTION: K ) ) equals NUMBER: -39",
    "id": 1752,
    "declarations": "K: CONICSECTION; -39: NUMBER",
    "facts": "sqrt(FocalLength(K)) = -39"
},
{
    "assertion": "Vertex ( CONICSECTION: Q ) equals LowerFocus ( CONICSECTION: P )",
    "id": 1753,
    "declarations": "Q: CONICSECTION; P: CONICSECTION",
    "facts": "Vertex(Q) = LowerFocus(P)"
},
{
    "assertion": "IsInTangent ( CIRCLE: L, CIRCLE: y ) equals BOOL: False",
    "id": 1754,
    "declarations": "L: CIRCLE; y: CIRCLE; False: BOOL",
    "facts": "IsInTangent(L, y) = False"
},
{
    "assertion": "Area ( CONICSECTION: Q ) equals NUMBER: 11",
    "id": 1755,
    "declarations": "Q: CONICSECTION; 11: NUMBER",
    "facts": "Area(Q) = 11"
},
{
    "assertion": "LowerVertex ( CONICSECTION: Q ) equals Circumcenter ( TRIANGLE: T )",
    "id": 1756,
    "declarations": "Q: CONICSECTION; T: TRIANGLE",
    "facts": "LowerVertex(Q) = Circumcenter(T)"
},
{
    "assertion": "InterceptChord ( LINE: I, CONICSECTION: Q ) equals LINESEGMENT: j",
    "id": 1757,
    "declarations": "I: LINE; Q: CONICSECTION; j: LINESEGMENT",
    "facts": "InterceptChord(I, Q) = j"
},
{
    "assertion": "IsDiameter ( RealAxis ( ELLIPSE: l ), CIRCLE: F ) equals BOOL: False",
    "id": 1758,
    "declarations": "l: ELLIPSE; F: CIRCLE; False: BOOL",
    "facts": "IsDiameter(RealAxis(l), F) = False"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: l ) ) equals LINE: q",
    "id": 1759,
    "declarations": "l: ELLIPSE; q: LINE",
    "facts": "PerpendicularBisector(ImaginaryAxis(l)) = q"
},
{
    "assertion": "UpperFocus ( CONICSECTION: j ) equals POINT: k",
    "id": 1760,
    "declarations": "j: CONICSECTION; k: POINT",
    "facts": "UpperFocus(j) = k"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: s ) equals AXIS: yAxis",
    "id": 1761,
    "declarations": "s: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(s) = yAxis"
},
{
    "assertion": "Eccentricity ( CONICSECTION: g ) equals NUMBER: -2",
    "id": 1762,
    "declarations": "g: CONICSECTION; -2: NUMBER",
    "facts": "Eccentricity(g) = -2"
},
{
    "assertion": "CircumCircle ( TRIANGLE: F ) equals CIRCLE: e",
    "id": 1763,
    "declarations": "F: TRIANGLE; e: CIRCLE",
    "facts": "CircumCircle(F) = e"
},
{
    "assertion": "VectorOf ( POINT: q, MidPoint ( LINESEGMENT: t ) ) equals VectorOf ( Center ( CONICSECTION: z ), POINT: S )",
    "id": 1764,
    "declarations": "q: POINT; t: LINESEGMENT; z: CONICSECTION; S: POINT",
    "facts": "VectorOf(q, MidPoint(t)) = VectorOf(Center(z), S)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: j, TRIANGLE: J ) equals BOOL: True",
    "id": 1765,
    "declarations": "j: CIRCLE; J: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(j, J) = True"
},
{
    "assertion": "FocalLength ( CONICSECTION: L ) equals NUMBER: 82",
    "id": 1766,
    "declarations": "L: CONICSECTION; 82: NUMBER",
    "facts": "FocalLength(L) = 82"
},
{
    "assertion": "DotProduct ( VECTOR: v, VECTOR: t ) equals Diameter ( CIRCLE: B )",
    "id": 1767,
    "declarations": "v: VECTOR; t: VECTOR; B: CIRCLE",
    "facts": "DotProduct(v, t) = Diameter(B)"
},
{
    "assertion": "FocalLength ( CONICSECTION: W ) equals Diameter ( CIRCLE: p )",
    "id": 1768,
    "declarations": "W: CONICSECTION; p: CIRCLE",
    "facts": "FocalLength(W) = Diameter(p)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: E ) equals POINT: N",
    "id": 1769,
    "declarations": "E: CONICSECTION; N: POINT",
    "facts": "LeftVertex(E) = N"
},
{
    "assertion": "Focus ( CONICSECTION: G ) equals UpperFocus ( CONICSECTION: l )",
    "id": 1770,
    "declarations": "G: CONICSECTION; l: CONICSECTION",
    "facts": "Focus(G) = UpperFocus(l)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: s ) equals OverlappingLine ( LINESEGMENT: F )",
    "id": 1771,
    "declarations": "s: HYPERBOLA; F: LINESEGMENT",
    "facts": "Asymptote(s) = OverlappingLine(F)"
},
{
    "assertion": "IsIntersect ( CURVE: P, CURVE: Q ) equals BOOL: True",
    "id": 1772,
    "declarations": "P: CURVE; Q: CURVE; True: BOOL",
    "facts": "IsIntersect(P, Q) = True"
},
{
    "assertion": "VectorOf ( UpperVertex ( CONICSECTION: S ), POINT: J ) equals VECTOR: S",
    "id": 1773,
    "declarations": "S: CONICSECTION; J: POINT; S: VECTOR",
    "facts": "VectorOf(UpperVertex(S), J) = S"
},
{
    "assertion": "Center ( CONICSECTION: G ) equals Center ( CONICSECTION: U )",
    "id": 1774,
    "declarations": "G: CONICSECTION; U: CONICSECTION",
    "facts": "Center(G) = Center(U)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: q ) equals Center ( CONICSECTION: F )",
    "id": 1775,
    "declarations": "q: TRIANGLE; F: CONICSECTION",
    "facts": "Circumcenter(q) = Center(F)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: d ) equals LINE: N",
    "id": 1776,
    "declarations": "d: LINESEGMENT; N: LINE",
    "facts": "OverlappingLine(d) = N"
},
{
    "assertion": "Length ( RealAxis ( ELLIPSE: n ) ) equals Slope ( PerpendicularBisector ( LINESEGMENT: p ) )",
    "id": 1777,
    "declarations": "n: ELLIPSE; p: LINESEGMENT",
    "facts": "Length(RealAxis(n)) = Slope(PerpendicularBisector(p))"
},
{
    "assertion": "TangentOfPoint ( LowerVertex ( CONICSECTION: C ), CURVE: y ) equals LINE: c",
    "id": 1778,
    "declarations": "C: CONICSECTION; y: CURVE; c: LINE",
    "facts": "TangentOfPoint(LowerVertex(C), y) = c"
},
{
    "assertion": "Perimeter ( CONICSECTION: B ) equals NUMBER: 14",
    "id": 1779,
    "declarations": "B: CONICSECTION; 14: NUMBER",
    "facts": "Perimeter(B) = 14"
},
{
    "assertion": "Diameter ( CIRCLE: j ) equals Quadrant ( Incenter ( TRIANGLE: S ) )",
    "id": 1780,
    "declarations": "j: CIRCLE; S: TRIANGLE",
    "facts": "Diameter(j) = Quadrant(Incenter(S))"
},
{
    "assertion": "AngleOf ( MidPoint ( LINESEGMENT: M ), POINT: u, UpperVertex ( CONICSECTION: y ) ) equals AngleOf ( Incenter ( TRIANGLE: b ), POINT: J, POINT: T )",
    "id": 1781,
    "declarations": "M: LINESEGMENT; u: POINT; y: CONICSECTION; b: TRIANGLE; J: POINT; T: POINT",
    "facts": "AngleOf(MidPoint(M), u, UpperVertex(y)) = AngleOf(Incenter(b), J, T)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: R ) equals Incenter ( TRIANGLE: O )",
    "id": 1782,
    "declarations": "R: CONICSECTION; O: TRIANGLE",
    "facts": "UpperFocus(R) = Incenter(O)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: Y ) equals LeftVertex ( CONICSECTION: A )",
    "id": 1783,
    "declarations": "Y: CONICSECTION; A: CONICSECTION",
    "facts": "LowerVertex(Y) = LeftVertex(A)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: H ) equals LINE: G",
    "id": 1784,
    "declarations": "H: CONICSECTION; G: LINE",
    "facts": "LeftDirectrix(H) = G"
},
{
    "assertion": "IsIntersect ( CURVE: v, CURVE: A ) equals BOOL: False",
    "id": 1785,
    "declarations": "v: CURVE; A: CURVE; False: BOOL",
    "facts": "IsIntersect(v, A) = False"
},
{
    "assertion": "LocusEquation ( POINT: w ) equals EXPRESSION: y*space=*spacex^3*space-*space2*x*space+*space1",
    "id": 1786,
    "declarations": "w: POINT; y*space=*spacex^3*space-*space2*x*space+*space1: EXPRESSION",
    "facts": "LocusEquation(w) = y*space=*spacex^3*space-*space2*x*space+*space1"
},
{
    "assertion": "RealAxis ( ELLIPSE: G ) equals LINESEGMENT: J",
    "id": 1787,
    "declarations": "G: ELLIPSE; J: LINESEGMENT",
    "facts": "RealAxis(G) = J"
},
{
    "assertion": "Negation ( Slope ( LINE: u ) equals sqrt ( NUMBER: 36 ) ) equals BOOL: True",
    "id": 1788,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: x ) equals OverlappingLine ( LINESEGMENT: h )",
    "id": 1789,
    "declarations": "x: LINESEGMENT; h: LINESEGMENT",
    "facts": "OverlappingLine(x) = OverlappingLine(h)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: Y ) equals LINE: J",
    "id": 1790,
    "declarations": "Y: HYPERBOLA; J: LINE",
    "facts": "Asymptote(Y) = J"
},
{
    "assertion": "And ( Locus ( POINT: K ) equals CURVE: k, XCoordinate ( RightVertex ( CONICSECTION: l ) ) equals NUMBER: 1 ) equals BOOL: False",
    "id": 1791,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Inclination ( LINE: v ) equals NUMBER: 51",
    "id": 1792,
    "declarations": "v: LINE; 51: NUMBER",
    "facts": "Inclination(v) = 51"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: y, TRIANGLE: y ) equals BOOL: True",
    "id": 1793,
    "declarations": "y: CIRCLE; y: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(y, y) = True"
},
{
    "assertion": "Min ( YCoordinate ( POINT: g ) ) equals YCoordinate ( POINT: J )",
    "id": 1794,
    "declarations": "g: POINT; J: POINT",
    "facts": "Min(YCoordinate(g)) = YCoordinate(J)"
},
{
    "assertion": "Vertex ( CONICSECTION: C ) equals LeftVertex ( CONICSECTION: F )",
    "id": 1795,
    "declarations": "C: CONICSECTION; F: CONICSECTION",
    "facts": "Vertex(C) = LeftVertex(F)"
},
{
    "assertion": "IsParallel ( LINE: P, LINE: D ) equals BOOL: True",
    "id": 1796,
    "declarations": "P: LINE; D: LINE; True: BOOL",
    "facts": "IsParallel(P, D) = True"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: C, TRIANGLE: L ) equals BOOL: False",
    "id": 1797,
    "declarations": "C: CIRCLE; L: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(C, L) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: g ) equals LeftVertex ( CONICSECTION: d )",
    "id": 1798,
    "declarations": "g: CONICSECTION; d: CONICSECTION",
    "facts": "LeftVertex(g) = LeftVertex(d)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: x ) equals CIRCLE: E",
    "id": 1799,
    "declarations": "x: TRIANGLE; E: CIRCLE",
    "facts": "CircumCircle(x) = E"
},
{
    "assertion": "lg ( XCoordinate ( POINT: J ) ) equals Inclination ( LeftDirectrix ( CONICSECTION: x ) )",
    "id": 1800,
    "declarations": "J: POINT; x: CONICSECTION",
    "facts": "lg(XCoordinate(J)) = Inclination(LeftDirectrix(x))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: v ) equals ImaginaryAxis ( ELLIPSE: x )",
    "id": 1801,
    "declarations": "v: ELLIPSE; x: ELLIPSE",
    "facts": "MinorAxis(v) = ImaginaryAxis(x)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: A ) equals PerpendicularBisector ( LINESEGMENT: L )",
    "id": 1802,
    "declarations": "A: CONICSECTION; L: LINESEGMENT",
    "facts": "LeftDirectrix(A) = PerpendicularBisector(L)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: N ) equals Eccentricity ( CONICSECTION: L )",
    "id": 1803,
    "declarations": "N: CONICSECTION; L: CONICSECTION",
    "facts": "Eccentricity(N) = Eccentricity(L)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: n ) equals POINT: h",
    "id": 1804,
    "declarations": "n: CONICSECTION; h: POINT",
    "facts": "LeftFocus(n) = h"
},
{
    "assertion": "Distance ( LeftVertex ( CONICSECTION: G ), RightVertex ( CONICSECTION: g ) ) equals NUMBER: 47",
    "id": 1805,
    "declarations": "G: CONICSECTION; g: CONICSECTION; 47: NUMBER",
    "facts": "Distance(LeftVertex(G), RightVertex(g)) = 47"
},
{
    "assertion": "IsOutTangent ( CIRCLE: x, CircumCircle ( TRIANGLE: V ) ) equals BOOL: False",
    "id": 1806,
    "declarations": "x: CIRCLE; V: TRIANGLE; False: BOOL",
    "facts": "IsOutTangent(x, CircumCircle(V)) = False"
},
{
    "assertion": "sqrt ( NumIntersection ( CURVE: n, LeftPart ( HYPERBOLA: i ) ) ) equals Min ( NUMBER: 66 )",
    "id": 1807,
    "declarations": "n: CURVE; i: HYPERBOLA; 66: NUMBER",
    "facts": "sqrt(NumIntersection(n, LeftPart(i))) = Min(66)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: S ) equals LINE: o",
    "id": 1808,
    "declarations": "S: CONICSECTION; o: LINE",
    "facts": "RightDirectrix(S) = o"
},
{
    "assertion": "lg ( FocalLength ( CONICSECTION: E ) ) equals NUMBER: -42",
    "id": 1809,
    "declarations": "E: CONICSECTION; -42: NUMBER",
    "facts": "lg(FocalLength(E)) = -42"
},
{
    "assertion": "RightFocus ( CONICSECTION: g ) equals MidPoint ( LINESEGMENT: F )",
    "id": 1810,
    "declarations": "g: CONICSECTION; F: LINESEGMENT",
    "facts": "RightFocus(g) = MidPoint(F)"
},
{
    "assertion": "VectorOf ( UpperVertex ( CONICSECTION: i ), LeftFocus ( CONICSECTION: X ) ) equals VECTOR: o",
    "id": 1811,
    "declarations": "i: CONICSECTION; X: CONICSECTION; o: VECTOR",
    "facts": "VectorOf(UpperVertex(i), LeftFocus(X)) = o"
},
{
    "assertion": "Locus ( RightFocus ( CONICSECTION: r ) ) equals CURVE: A",
    "id": 1812,
    "declarations": "r: CONICSECTION; A: CURVE",
    "facts": "Locus(RightFocus(r)) = A"
},
{
    "assertion": "RealAxis ( ELLIPSE: Q ) equals LINESEGMENT: v",
    "id": 1813,
    "declarations": "Q: ELLIPSE; v: LINESEGMENT",
    "facts": "RealAxis(Q) = v"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: d ) equals LINE: R",
    "id": 1814,
    "declarations": "d: LINESEGMENT; R: LINE",
    "facts": "PerpendicularBisector(d) = R"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: g ) equals LINESEGMENT: A",
    "id": 1815,
    "declarations": "g: ELLIPSE; A: LINESEGMENT",
    "facts": "ImaginaryAxis(g) = A"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: d, TRIANGLE: s ) equals BOOL: False",
    "id": 1816,
    "declarations": "d: CIRCLE; s: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(d, s) = False"
},
{
    "assertion": "TangentPoint ( LINE: N, CIRCLE: F ) equals LeftVertex ( CONICSECTION: A )",
    "id": 1817,
    "declarations": "N: LINE; F: CIRCLE; A: CONICSECTION",
    "facts": "TangentPoint(N, F) = LeftVertex(A)"
},
{
    "assertion": "Incenter ( TRIANGLE: l ) equals POINT: U",
    "id": 1818,
    "declarations": "l: TRIANGLE; U: POINT",
    "facts": "Incenter(l) = U"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: j ) equals RightDirectrix ( CONICSECTION: H )",
    "id": 1819,
    "declarations": "j: CONICSECTION; H: CONICSECTION",
    "facts": "LeftDirectrix(j) = RightDirectrix(H)"
},
{
    "assertion": "InterReciprocal ( lg ( NUMBER: -9 ) ) equals Perimeter ( CONICSECTION: c )",
    "id": 1820,
    "declarations": "-9: NUMBER; c: CONICSECTION",
    "facts": "InterReciprocal(lg(-9)) = Perimeter(c)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: S, CIRCLE: D ) equals BOOL: False",
    "id": 1821,
    "declarations": "S: CIRCLE; D: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(S, D) = False"
},
{
    "assertion": "TangentOfPoint ( POINT: X, CURVE: a ) equals LINE: h",
    "id": 1823,
    "declarations": "X: POINT; a: CURVE; h: LINE",
    "facts": "TangentOfPoint(X, a) = h"
},
{
    "assertion": "IsInTangent ( CIRCLE: V, CIRCLE: s ) equals BOOL: True",
    "id": 1824,
    "declarations": "V: CIRCLE; s: CIRCLE; True: BOOL",
    "facts": "IsInTangent(V, s) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: U ) equals NUMBER: -78",
    "id": 1825,
    "declarations": "U: CONICSECTION; -78: NUMBER",
    "facts": "HalfFocalLength(U) = -78"
},
{
    "assertion": "VectorOf ( POINT: t, POINT: O ) equals VECTOR: J",
    "id": 1826,
    "declarations": "t: POINT; O: POINT; J: VECTOR",
    "facts": "VectorOf(t, O) = J"
},
{
    "assertion": "Diameter ( CIRCLE: o ) equals InterReciprocal ( NumIntersection ( CURVE: R, CURVE: Y ) )",
    "id": 1827,
    "declarations": "o: CIRCLE; R: CURVE; Y: CURVE",
    "facts": "Diameter(o) = InterReciprocal(NumIntersection(R, Y))"
},
{
    "assertion": "sqrt ( FocalLength ( CONICSECTION: z ) ) equals Inclination ( LineOf ( Center ( CONICSECTION: L ), LeftVertex ( CONICSECTION: R ) ) )",
    "id": 1828,
    "declarations": "z: CONICSECTION; L: CONICSECTION; R: CONICSECTION",
    "facts": "sqrt(FocalLength(z)) = Inclination(LineOf(Center(L), LeftVertex(R)))"
},
{
    "assertion": "Center ( CONICSECTION: I ) equals LowerVertex ( CONICSECTION: l )",
    "id": 1829,
    "declarations": "I: CONICSECTION; l: CONICSECTION",
    "facts": "Center(I) = LowerVertex(l)"
},
{
    "assertion": "Distance ( LowerFocus ( CONICSECTION: m ), RightFocus ( CONICSECTION: K ) ) equals FocalLength ( CONICSECTION: o )",
    "id": 1830,
    "declarations": "m: CONICSECTION; K: CONICSECTION; o: CONICSECTION",
    "facts": "Distance(LowerFocus(m), RightFocus(K)) = FocalLength(o)"
},
{
    "assertion": "Vertex ( CONICSECTION: g ) equals POINT: Q",
    "id": 1831,
    "declarations": "g: CONICSECTION; Q: POINT",
    "facts": "Vertex(g) = Q"
},
{
    "assertion": "LeftFocus ( CONICSECTION: L ) equals POINT: j",
    "id": 1832,
    "declarations": "L: CONICSECTION; j: POINT",
    "facts": "LeftFocus(L) = j"
},
{
    "assertion": "Orthocenter ( TRIANGLE: o ) equals POINT: n",
    "id": 1833,
    "declarations": "o: TRIANGLE; n: POINT",
    "facts": "Orthocenter(o) = n"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: Y ) equals LINESEGMENT: G",
    "id": 1834,
    "declarations": "Y: ELLIPSE; G: LINESEGMENT",
    "facts": "ImaginaryAxis(Y) = G"
},
{
    "assertion": "Directrix ( CONICSECTION: q ) equals LINE: X",
    "id": 1835,
    "declarations": "q: CONICSECTION; X: LINE",
    "facts": "Directrix(q) = X"
},
{
    "assertion": "LeftFocus ( CONICSECTION: I ) equals LowerVertex ( CONICSECTION: c )",
    "id": 1836,
    "declarations": "I: CONICSECTION; c: CONICSECTION",
    "facts": "LeftFocus(I) = LowerVertex(c)"
},
{
    "assertion": "FocalLength ( CONICSECTION: S ) equals NUMBER: 18",
    "id": 1837,
    "declarations": "S: CONICSECTION; 18: NUMBER",
    "facts": "FocalLength(S) = 18"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: K, CIRCLE: e ) equals BOOL: False",
    "id": 1838,
    "declarations": "K: LINESEGMENT; e: CIRCLE; False: BOOL",
    "facts": "IsDiameter(K, e) = False"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: j ) equals LINESEGMENT: C",
    "id": 1839,
    "declarations": "j: ELLIPSE; C: LINESEGMENT",
    "facts": "ImaginaryAxis(j) = C"
},
{
    "assertion": "Perimeter ( CONICSECTION: F ) equals NUMBER: -93",
    "id": 1840,
    "declarations": "F: CONICSECTION; -93: NUMBER",
    "facts": "Perimeter(F) = -93"
},
{
    "assertion": "lg ( Diameter ( CIRCLE: d ) ) equals Diameter ( CIRCLE: k )",
    "id": 1841,
    "declarations": "d: CIRCLE; k: CIRCLE",
    "facts": "lg(Diameter(d)) = Diameter(k)"
},
{
    "assertion": "Incenter ( TRIANGLE: J ) equals Orthocenter ( TRIANGLE: G )",
    "id": 1842,
    "declarations": "J: TRIANGLE; G: TRIANGLE",
    "facts": "Incenter(J) = Orthocenter(G)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: p ) equals Center ( CONICSECTION: O )",
    "id": 1843,
    "declarations": "p: CONICSECTION; O: CONICSECTION",
    "facts": "LowerFocus(p) = Center(O)"
},
{
    "assertion": "TangentOnPoint ( POINT: F, Locus ( Incenter ( TRIANGLE: j ) ) ) equals LINE: R",
    "id": 1844,
    "declarations": "F: POINT; j: TRIANGLE; R: LINE",
    "facts": "TangentOnPoint(F, Locus(Incenter(j))) = R"
},
{
    "assertion": "PointOnCurve ( POINT: W, RightPart ( HYPERBOLA: T ) ) equals BOOL: True",
    "id": 1845,
    "declarations": "W: POINT; T: HYPERBOLA; True: BOOL",
    "facts": "PointOnCurve(W, RightPart(T)) = True"
},
{
    "assertion": "LineSegmentOf ( POINT: X, UpperFocus ( CONICSECTION: v ) ) equals InterceptChord ( TangentOnPoint ( POINT: k, CURVE: p ), CONICSECTION: Q )",
    "id": 1846,
    "declarations": "X: POINT; v: CONICSECTION; k: POINT; p: CURVE; Q: CONICSECTION",
    "facts": "LineSegmentOf(X, UpperFocus(v)) = InterceptChord(TangentOnPoint(k, p), Q)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: z, TRIANGLE: o ) equals BOOL: True",
    "id": 1847,
    "declarations": "z: CIRCLE; o: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(z, o) = True"
},
{
    "assertion": "PointOnCurve ( LowerFocus ( CONICSECTION: F ), CURVE: U ) equals BOOL: False",
    "id": 1848,
    "declarations": "F: CONICSECTION; U: CURVE; False: BOOL",
    "facts": "PointOnCurve(LowerFocus(F), U) = False"
},
{
    "assertion": "UpperVertex ( CONICSECTION: W ) equals LeftFocus ( CONICSECTION: A )",
    "id": 1849,
    "declarations": "W: CONICSECTION; A: CONICSECTION",
    "facts": "UpperVertex(W) = LeftFocus(A)"
},
{
    "assertion": "IsIntersect ( CURVE: T, CURVE: X ) equals BOOL: False",
    "id": 1850,
    "declarations": "T: CURVE; X: CURVE; False: BOOL",
    "facts": "IsIntersect(T, X) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: x ) equals LowerVertex ( CONICSECTION: J )",
    "id": 1851,
    "declarations": "x: CONICSECTION; J: CONICSECTION",
    "facts": "RightFocus(x) = LowerVertex(J)"
},
{
    "assertion": "Inclination ( LINE: r ) equals Slope ( LINE: w )",
    "id": 1852,
    "declarations": "r: LINE; w: LINE",
    "facts": "Inclination(r) = Slope(w)"
},
{
    "assertion": "DotProduct ( VECTOR: o, VECTOR: y ) equals Distance ( POINT: L, POINT: b )",
    "id": 1853,
    "declarations": "o: VECTOR; y: VECTOR; L: POINT; b: POINT",
    "facts": "DotProduct(o, y) = Distance(L, b)"
},
{
    "assertion": "lg ( Min ( Perimeter ( CONICSECTION: f ) ) ) equals Slope ( LINE: f )",
    "id": 1854,
    "declarations": "f: CONICSECTION; f: LINE",
    "facts": "lg(Min(Perimeter(f))) = Slope(f)"
},
{
    "assertion": "Intersection ( LeftPart ( HYPERBOLA: O ), CURVE: D ) equals FootPoint ( TangentOnPoint ( Projection ( RightVertex ( CONICSECTION: a ), TangentOnPoint ( POINT: A, CURVE: P ) ), CURVE: D ), LeftDirectrix ( CONICSECTION: h ) )",
    "id": 1855,
    "declarations": "O: HYPERBOLA; D: CURVE; a: CONICSECTION; A: POINT; P: CURVE; D: CURVE; h: CONICSECTION",
    "facts": "Intersection(LeftPart(O), D) = FootPoint(TangentOnPoint(Projection(RightVertex(a), TangentOnPoint(A, P)), D), LeftDirectrix(h))"
},
{
    "assertion": "Distance ( Projection ( POINT: j, LINE: l ), POINT: j ) equals Min ( XCoordinate ( POINT: S ) )",
    "id": 1856,
    "declarations": "j: POINT; l: LINE; j: POINT; S: POINT",
    "facts": "Distance(Projection(j, l), j) = Min(XCoordinate(S))"
},
{
    "assertion": "RightVertex ( CONICSECTION: O ) equals POINT: E",
    "id": 1857,
    "declarations": "O: CONICSECTION; E: POINT",
    "facts": "RightVertex(O) = E"
},
{
    "assertion": "Negation ( IsDiameter ( LINESEGMENT: c, CIRCLE: c ) equals BOOL: False ) equals BOOL: False",
    "id": 1858,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Focus ( CONICSECTION: M ) equals LowerFocus ( CONICSECTION: a )",
    "id": 1859,
    "declarations": "M: CONICSECTION; a: CONICSECTION",
    "facts": "Focus(M) = LowerFocus(a)"
},
{
    "assertion": "Negation ( IsChordOf ( MajorAxis ( ELLIPSE: m ), CONICSECTION: A ) equals BOOL: False ) equals BOOL: True",
    "id": 1860,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsPerpendicular ( RightDirectrix ( CONICSECTION: Y ), RightDirectrix ( CONICSECTION: x ) ) equals BOOL: False",
    "id": 1861,
    "declarations": "Y: CONICSECTION; x: CONICSECTION; False: BOOL",
    "facts": "IsPerpendicular(RightDirectrix(Y), RightDirectrix(x)) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: C ) equals POINT: H",
    "id": 1862,
    "declarations": "C: CONICSECTION; H: POINT",
    "facts": "RightVertex(C) = H"
},
{
    "assertion": "LowerFocus ( CONICSECTION: e ) equals FootPoint ( LINE: f, TangentOnPoint ( Orthocenter ( TRIANGLE: J ), CURVE: l ) )",
    "id": 1863,
    "declarations": "e: CONICSECTION; f: LINE; J: TRIANGLE; l: CURVE",
    "facts": "LowerFocus(e) = FootPoint(f, TangentOnPoint(Orthocenter(J), l))"
},
{
    "assertion": "Between ( POINT: y, Projection ( LeftVertex ( CONICSECTION: L ), OverlappingLine ( LINESEGMENT: T ) ), POINT: X ) equals BOOL: True",
    "id": 1864,
    "declarations": "y: POINT; L: CONICSECTION; T: LINESEGMENT; X: POINT; True: BOOL",
    "facts": "Between(y, Projection(LeftVertex(L), OverlappingLine(T)), X) = True"
},
{
    "assertion": "Negation ( MidPoint ( LINESEGMENT: O ) equals Orthocenter ( TRIANGLE: g ) ) equals BOOL: True",
    "id": 1865,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "lg ( Perimeter ( CONICSECTION: M ) ) equals Length ( LINESEGMENT: I )",
    "id": 1866,
    "declarations": "M: CONICSECTION; I: LINESEGMENT",
    "facts": "lg(Perimeter(M)) = Length(I)"
},
{
    "assertion": "LocusEquation ( Circumcenter ( TRIANGLE: t ) ) equals EXPRESSION: x^2*space+*spacey*space=*space4",
    "id": 1867,
    "declarations": "t: TRIANGLE; x^2*space+*spacey*space=*space4: EXPRESSION",
    "facts": "LocusEquation(Circumcenter(t)) = x^2*space+*spacey*space=*space4"
},
{
    "assertion": "NumIntersection ( CURVE: V, RightPart ( HYPERBOLA: Z ) ) equals Length ( InterceptChord ( RightDirectrix ( CONICSECTION: i ), CONICSECTION: W ) )",
    "id": 1868,
    "declarations": "V: CURVE; Z: HYPERBOLA; i: CONICSECTION; W: CONICSECTION",
    "facts": "NumIntersection(V, RightPart(Z)) = Length(InterceptChord(RightDirectrix(i), W))"
},
{
    "assertion": "PointOnCurve ( LowerFocus ( CONICSECTION: O ), CURVE: M ) equals BOOL: False",
    "id": 1869,
    "declarations": "O: CONICSECTION; M: CURVE; False: BOOL",
    "facts": "PointOnCurve(LowerFocus(O), M) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: R ) equals POINT: L",
    "id": 1870,
    "declarations": "R: CONICSECTION; L: POINT",
    "facts": "LowerFocus(R) = L"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: z ) equals LINE: u",
    "id": 1871,
    "declarations": "z: CONICSECTION; u: LINE",
    "facts": "LeftDirectrix(z) = u"
},
{
    "assertion": "Slope ( LINE: N ) equals Quadrant ( POINT: l )",
    "id": 1872,
    "declarations": "N: LINE; l: POINT",
    "facts": "Slope(N) = Quadrant(l)"
},
{
    "assertion": "Area ( CONICSECTION: V ) equals NUMBER: -31",
    "id": 1873,
    "declarations": "V: CONICSECTION; -31: NUMBER",
    "facts": "Area(V) = -31"
},
{
    "assertion": "Perimeter ( CONICSECTION: x ) equals NUMBER: -89",
    "id": 1874,
    "declarations": "x: CONICSECTION; -89: NUMBER",
    "facts": "Perimeter(x) = -89"
},
{
    "assertion": "Directrix ( CONICSECTION: H ) equals TangentOnPoint ( POINT: I, CURVE: E )",
    "id": 1875,
    "declarations": "H: CONICSECTION; I: POINT; E: CURVE",
    "facts": "Directrix(H) = TangentOnPoint(I, E)"
},
{
    "assertion": "Center ( CONICSECTION: C ) equals POINT: G",
    "id": 1876,
    "declarations": "C: CONICSECTION; G: POINT",
    "facts": "Center(C) = G"
},
{
    "assertion": "lg ( Abs ( LINESEGMENT: e ) ) equals HalfFocalLength ( CONICSECTION: X )",
    "id": 1877,
    "declarations": "e: LINESEGMENT; X: CONICSECTION",
    "facts": "lg(Abs(e)) = HalfFocalLength(X)"
},
{
    "assertion": "LineOf ( POINT: O, UpperVertex ( CONICSECTION: G ) ) equals LINE: G",
    "id": 1878,
    "declarations": "O: POINT; G: CONICSECTION; G: LINE",
    "facts": "LineOf(O, UpperVertex(G)) = G"
},
{
    "assertion": "CircumCircle ( TRIANGLE: J ) equals CircumCircle ( TriangleOf ( Orthocenter ( TRIANGLE: P ), UpperFocus ( CONICSECTION: B ), UpperVertex ( CONICSECTION: C ) ) )",
    "id": 1879,
    "declarations": "J: TRIANGLE; P: TRIANGLE; B: CONICSECTION; C: CONICSECTION",
    "facts": "CircumCircle(J) = CircumCircle(TriangleOf(Orthocenter(P), UpperFocus(B), UpperVertex(C)))"
},
{
    "assertion": "TangentPoint ( LineOf ( Incenter ( TRIANGLE: B ), Orthocenter ( TRIANGLE: k ) ), CIRCLE: e ) equals UpperVertex ( CONICSECTION: t )",
    "id": 1880,
    "declarations": "B: TRIANGLE; k: TRIANGLE; e: CIRCLE; t: CONICSECTION",
    "facts": "TangentPoint(LineOf(Incenter(B), Orthocenter(k)), e) = UpperVertex(t)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: v ) equals LINESEGMENT: V",
    "id": 1881,
    "declarations": "v: ELLIPSE; V: LINESEGMENT",
    "facts": "ImaginaryAxis(v) = V"
},
{
    "assertion": "TangentOnPoint ( POINT: T, CURVE: e ) equals PerpendicularBisector ( LINESEGMENT: Q )",
    "id": 1882,
    "declarations": "T: POINT; e: CURVE; Q: LINESEGMENT",
    "facts": "TangentOnPoint(T, e) = PerpendicularBisector(Q)"
},
{
    "assertion": "Distance ( POINT: w, POINT: X ) equals YCoordinate ( UpperVertex ( CONICSECTION: l ) )",
    "id": 1883,
    "declarations": "w: POINT; X: POINT; l: CONICSECTION",
    "facts": "Distance(w, X) = YCoordinate(UpperVertex(l))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: u ) equals CIRCLE: u",
    "id": 1884,
    "declarations": "u: TRIANGLE; u: CIRCLE",
    "facts": "CircumCircle(u) = u"
},
{
    "assertion": "Circumcenter ( TRIANGLE: e ) equals LeftVertex ( CONICSECTION: h )",
    "id": 1885,
    "declarations": "e: TRIANGLE; h: CONICSECTION",
    "facts": "Circumcenter(e) = LeftVertex(h)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: O ) equals UpperVertex ( CONICSECTION: E )",
    "id": 1886,
    "declarations": "O: TRIANGLE; E: CONICSECTION",
    "facts": "Orthocenter(O) = UpperVertex(E)"
},
{
    "assertion": "PerpendicularBisector ( MinorAxis ( ELLIPSE: p ) ) equals LINE: F",
    "id": 1887,
    "declarations": "p: ELLIPSE; F: LINE",
    "facts": "PerpendicularBisector(MinorAxis(p)) = F"
},
{
    "assertion": "Radius ( CIRCLE: n ) equals NUMBER: 50",
    "id": 1888,
    "declarations": "n: CIRCLE; 50: NUMBER",
    "facts": "Radius(n) = 50"
},
{
    "assertion": "Locus ( POINT: n ) equals CURVE: s",
    "id": 1889,
    "declarations": "n: POINT; s: CURVE",
    "facts": "Locus(n) = s"
},
{
    "assertion": "FocalLength ( CONICSECTION: l ) equals InterReciprocal ( Radius ( CIRCLE: U ) )",
    "id": 1890,
    "declarations": "l: CONICSECTION; U: CIRCLE",
    "facts": "FocalLength(l) = InterReciprocal(Radius(U))"
},
{
    "assertion": "XCoordinate ( POINT: S ) equals NumIntersection ( CURVE: g, CURVE: H )",
    "id": 1891,
    "declarations": "S: POINT; g: CURVE; H: CURVE",
    "facts": "XCoordinate(S) = NumIntersection(g, H)"
},
{
    "assertion": "XCoordinate ( LeftVertex ( CONICSECTION: E ) ) equals lg ( FocalLength ( CONICSECTION: b ) )",
    "id": 1892,
    "declarations": "E: CONICSECTION; b: CONICSECTION",
    "facts": "XCoordinate(LeftVertex(E)) = lg(FocalLength(b))"
},
{
    "assertion": "IsTangent ( LINE: z, CONICSECTION: a ) equals BOOL: False",
    "id": 1893,
    "declarations": "z: LINE; a: CONICSECTION; False: BOOL",
    "facts": "IsTangent(z, a) = False"
},
{
    "assertion": "LineOf ( UpperVertex ( CONICSECTION: b ), Orthocenter ( TRIANGLE: N ) ) equals LINE: Y",
    "id": 1894,
    "declarations": "b: CONICSECTION; N: TRIANGLE; Y: LINE",
    "facts": "LineOf(UpperVertex(b), Orthocenter(N)) = Y"
},
{
    "assertion": "IsOutTangent ( CIRCLE: F, CIRCLE: S ) equals BOOL: False",
    "id": 1895,
    "declarations": "F: CIRCLE; S: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(F, S) = False"
},
{
    "assertion": "CircumCircle ( TRIANGLE: T ) equals CIRCLE: W",
    "id": 1896,
    "declarations": "T: TRIANGLE; W: CIRCLE",
    "facts": "CircumCircle(T) = W"
},
{
    "assertion": "Max ( NUMBER: 19 ) equals NUMBER: -82",
    "id": 1897,
    "declarations": "19: NUMBER; -82: NUMBER",
    "facts": "Max(19) = -82"
},
{
    "assertion": "MidPoint ( LINESEGMENT: l ) equals UpperVertex ( CONICSECTION: J )",
    "id": 1898,
    "declarations": "l: LINESEGMENT; J: CONICSECTION",
    "facts": "MidPoint(l) = UpperVertex(J)"
},
{
    "assertion": "And ( Radius ( CIRCLE: X ) equals lg ( sqrt ( Slope ( LINE: k ) ) ), Incenter ( TRIANGLE: c ) equals POINT: O ) equals BOOL: False",
    "id": 1899,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Distance ( POINT: A, POINT: c ) equals NUMBER: 10",
    "id": 1900,
    "declarations": "A: POINT; c: POINT; 10: NUMBER",
    "facts": "Distance(A, c) = 10"
},
{
    "assertion": "Expression ( CURVE: S ) equals LocusEquation ( POINT: d )",
    "id": 1901,
    "declarations": "S: CURVE; d: POINT",
    "facts": "Expression(S) = LocusEquation(d)"
},
{
    "assertion": "LineOf ( POINT: H, RightVertex ( CONICSECTION: f ) ) equals LINE: S",
    "id": 1902,
    "declarations": "H: POINT; f: CONICSECTION; S: LINE",
    "facts": "LineOf(H, RightVertex(f)) = S"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Z ) equals TangentOnPoint ( Incenter ( TRIANGLE: o ), CURVE: C )",
    "id": 1903,
    "declarations": "Z: CONICSECTION; o: TRIANGLE; C: CURVE",
    "facts": "LeftDirectrix(Z) = TangentOnPoint(Incenter(o), C)"
},
{
    "assertion": "RightPart ( HYPERBOLA: k ) equals RightPart ( HYPERBOLA: P )",
    "id": 1904,
    "declarations": "k: HYPERBOLA; P: HYPERBOLA",
    "facts": "RightPart(k) = RightPart(P)"
},
{
    "assertion": "IsParallel ( LineOf ( UpperFocus ( CONICSECTION: C ), UpperVertex ( CONICSECTION: P ) ), LINE: o ) equals BOOL: True",
    "id": 1905,
    "declarations": "C: CONICSECTION; P: CONICSECTION; o: LINE; True: BOOL",
    "facts": "IsParallel(LineOf(UpperFocus(C), UpperVertex(P)), o) = True"
},
{
    "assertion": "Vertex ( CONICSECTION: C ) equals POINT: q",
    "id": 1906,
    "declarations": "C: CONICSECTION; q: POINT",
    "facts": "Vertex(C) = q"
},
{
    "assertion": "Eccentricity ( CONICSECTION: r ) equals Length ( MajorAxis ( ELLIPSE: N ) )",
    "id": 1907,
    "declarations": "r: CONICSECTION; N: ELLIPSE",
    "facts": "Eccentricity(r) = Length(MajorAxis(N))"
},
{
    "assertion": "InterReciprocal ( HalfFocalLength ( CONICSECTION: x ) ) equals InterReciprocal ( Eccentricity ( CONICSECTION: P ) )",
    "id": 1908,
    "declarations": "x: CONICSECTION; P: CONICSECTION",
    "facts": "InterReciprocal(HalfFocalLength(x)) = InterReciprocal(Eccentricity(P))"
},
{
    "assertion": "DotProduct ( VECTOR: O, VectorOf ( POINT: g, POINT: A ) ) equals lg ( NUMBER: -1 )",
    "id": 1909,
    "declarations": "O: VECTOR; g: POINT; A: POINT; -1: NUMBER",
    "facts": "DotProduct(O, VectorOf(g, A)) = lg(-1)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: C, CONICSECTION: y ) equals BOOL: True",
    "id": 1910,
    "declarations": "C: LINESEGMENT; y: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(C, y) = True"
},
{
    "assertion": "LocusEquation ( UpperVertex ( CONICSECTION: C ) ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 1911,
    "declarations": "C: CONICSECTION; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "LocusEquation(UpperVertex(C)) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: e ) equals RealAxis ( ELLIPSE: N )",
    "id": 1912,
    "declarations": "e: ELLIPSE; N: ELLIPSE",
    "facts": "ImaginaryAxis(e) = RealAxis(N)"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: R ) ) equals Distance ( LeftFocus ( CONICSECTION: g ), Projection ( POINT: S, PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: k ) ) ) )",
    "id": 1913,
    "declarations": "R: ELLIPSE; g: CONICSECTION; S: POINT; k: ELLIPSE",
    "facts": "Abs(RealAxis(R)) = Distance(LeftFocus(g), Projection(S, PerpendicularBisector(ImaginaryAxis(k))))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: r ) equals MidPoint ( LINESEGMENT: V )",
    "id": 1914,
    "declarations": "r: LINESEGMENT; V: LINESEGMENT",
    "facts": "Endpoint(r) = MidPoint(V)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: j ) equals LowerVertex ( CONICSECTION: k )",
    "id": 1915,
    "declarations": "j: LINESEGMENT; k: CONICSECTION",
    "facts": "Endpoint(j) = LowerVertex(k)"
},
{
    "assertion": "Length ( LINESEGMENT: Z ) equals Radius ( CIRCLE: D )",
    "id": 1916,
    "declarations": "Z: LINESEGMENT; D: CIRCLE",
    "facts": "Length(Z) = Radius(D)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: B, TRIANGLE: L ) equals BOOL: True",
    "id": 1917,
    "declarations": "B: CIRCLE; L: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(B, L) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: T ) equals LINESEGMENT: P",
    "id": 1918,
    "declarations": "T: ELLIPSE; P: LINESEGMENT",
    "facts": "MajorAxis(T) = P"
},
{
    "assertion": "Locus ( POINT: s ) equals Locus ( POINT: Z )",
    "id": 1919,
    "declarations": "s: POINT; Z: POINT",
    "facts": "Locus(s) = Locus(Z)"
},
{
    "assertion": "Radius ( CIRCLE: z ) equals HalfFocalLength ( CONICSECTION: R )",
    "id": 1920,
    "declarations": "z: CIRCLE; R: CONICSECTION",
    "facts": "Radius(z) = HalfFocalLength(R)"
},
{
    "assertion": "InterReciprocal ( NUMBER: -75 ) equals HalfFocalLength ( CONICSECTION: O )",
    "id": 1921,
    "declarations": "-75: NUMBER; O: CONICSECTION",
    "facts": "InterReciprocal(-75) = HalfFocalLength(O)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: Y ) equals LowerVertex ( CONICSECTION: d )",
    "id": 1922,
    "declarations": "Y: LINESEGMENT; d: CONICSECTION",
    "facts": "MidPoint(Y) = LowerVertex(d)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: A ) equals RightFocus ( CONICSECTION: c )",
    "id": 1923,
    "declarations": "A: CONICSECTION; c: CONICSECTION",
    "facts": "LowerFocus(A) = RightFocus(c)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: x ) equals LINESEGMENT: I",
    "id": 1924,
    "declarations": "x: ELLIPSE; I: LINESEGMENT",
    "facts": "ImaginaryAxis(x) = I"
},
{
    "assertion": "IsPerpendicular ( LINE: C, LINE: Q ) equals BOOL: False",
    "id": 1925,
    "declarations": "C: LINE; Q: LINE; False: BOOL",
    "facts": "IsPerpendicular(C, Q) = False"
},
{
    "assertion": "InterReciprocal ( NUMBER: 43 ) equals InterReciprocal ( Eccentricity ( CONICSECTION: E ) )",
    "id": 1926,
    "declarations": "43: NUMBER; E: CONICSECTION",
    "facts": "InterReciprocal(43) = InterReciprocal(Eccentricity(E))"
},
{
    "assertion": "AngleOf ( RightVertex ( CONICSECTION: Q ), POINT: I, LeftVertex ( CONICSECTION: Q ) ) equals ApplyUnit ( NUMBER: 63, DEGREESTR: degree )",
    "id": 1927,
    "declarations": "Q: CONICSECTION; I: POINT; Q: CONICSECTION; 63: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(RightVertex(Q), I, LeftVertex(Q)) = ApplyUnit(63, degree)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: R, TRIANGLE: U ) equals BOOL: False",
    "id": 1928,
    "declarations": "R: CIRCLE; U: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(R, U) = False"
},
{
    "assertion": "Intersection ( CURVE: h, CURVE: g ) equals LeftFocus ( CONICSECTION: q )",
    "id": 1929,
    "declarations": "h: CURVE; g: CURVE; q: CONICSECTION",
    "facts": "Intersection(h, g) = LeftFocus(q)"
},
{
    "assertion": "LocusEquation ( RightVertex ( CONICSECTION: w ) ) equals Expression ( CURVE: w )",
    "id": 1930,
    "declarations": "w: CONICSECTION; w: CURVE",
    "facts": "LocusEquation(RightVertex(w)) = Expression(w)"
},
{
    "assertion": "Incenter ( TRIANGLE: I ) equals Center ( CONICSECTION: a )",
    "id": 1931,
    "declarations": "I: TRIANGLE; a: CONICSECTION",
    "facts": "Incenter(I) = Center(a)"
},
{
    "assertion": "Negation ( And ( Abs ( LINESEGMENT: b ) equals NUMBER: -100, MajorAxis ( ELLIPSE: r ) equals LINESEGMENT: G ) equals BOOL: False ) equals BOOL: False",
    "id": 1932,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "PointOnCurve ( Center ( CONICSECTION: i ), RightPart ( HYPERBOLA: k ) ) equals BOOL: True",
    "id": 1934,
    "declarations": "i: CONICSECTION; k: HYPERBOLA; True: BOOL",
    "facts": "PointOnCurve(Center(i), RightPart(k)) = True"
},
{
    "assertion": "TangentOfPoint ( Orthocenter ( TRIANGLE: R ), CURVE: C ) equals RightDirectrix ( CONICSECTION: O )",
    "id": 1935,
    "declarations": "R: TRIANGLE; C: CURVE; O: CONICSECTION",
    "facts": "TangentOfPoint(Orthocenter(R), C) = RightDirectrix(O)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: P ) equals Radius ( CIRCLE: m )",
    "id": 1936,
    "declarations": "P: CONICSECTION; m: CIRCLE",
    "facts": "HalfFocalLength(P) = Radius(m)"
},
{
    "assertion": "TangentOfPoint ( POINT: C, Locus ( MidPoint ( LINESEGMENT: g ) ) ) equals LINE: Q",
    "id": 1937,
    "declarations": "C: POINT; g: LINESEGMENT; Q: LINE",
    "facts": "TangentOfPoint(C, Locus(MidPoint(g))) = Q"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: X ) equals sqrt ( XCoordinate ( POINT: O ) )",
    "id": 1938,
    "declarations": "X: CONICSECTION; O: POINT",
    "facts": "HalfFocalLength(X) = sqrt(XCoordinate(O))"
},
{
    "assertion": "InterReciprocal ( NUMBER: -86 ) equals YCoordinate ( POINT: b )",
    "id": 1939,
    "declarations": "-86: NUMBER; b: POINT",
    "facts": "InterReciprocal(-86) = YCoordinate(b)"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: n ) ) equals LINE: V",
    "id": 1940,
    "declarations": "n: ELLIPSE; V: LINE",
    "facts": "OverlappingLine(MajorAxis(n)) = V"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: e ) equals AXIS: yAxis",
    "id": 1941,
    "declarations": "e: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(e) = yAxis"
},
{
    "assertion": "Min ( NUMBER: 69 ) equals NUMBER: -83",
    "id": 1942,
    "declarations": "69: NUMBER; -83: NUMBER",
    "facts": "Min(69) = -83"
},
{
    "assertion": "Between ( POINT: J, POINT: i, LeftFocus ( CONICSECTION: Q ) ) equals BOOL: False",
    "id": 1943,
    "declarations": "J: POINT; i: POINT; Q: CONICSECTION; False: BOOL",
    "facts": "Between(J, i, LeftFocus(Q)) = False"
},
{
    "assertion": "FootPoint ( LineOf ( POINT: O, LeftVertex ( CONICSECTION: y ) ), LINE: M ) equals POINT: b",
    "id": 1944,
    "declarations": "O: POINT; y: CONICSECTION; M: LINE; b: POINT",
    "facts": "FootPoint(LineOf(O, LeftVertex(y)), M) = b"
},
{
    "assertion": "Inclination ( LINE: T ) equals NUMBER: -70",
    "id": 1945,
    "declarations": "T: LINE; -70: NUMBER",
    "facts": "Inclination(T) = -70"
},
{
    "assertion": "DotProduct ( VECTOR: m, VECTOR: n ) equals NUMBER: -58",
    "id": 1946,
    "declarations": "m: VECTOR; n: VECTOR; -58: NUMBER",
    "facts": "DotProduct(m, n) = -58"
},
{
    "assertion": "Eccentricity ( CONICSECTION: Q ) equals Inclination ( PerpendicularBisector ( LINESEGMENT: N ) )",
    "id": 1947,
    "declarations": "Q: CONICSECTION; N: LINESEGMENT",
    "facts": "Eccentricity(Q) = Inclination(PerpendicularBisector(N))"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: h ) ) equals LINE: v",
    "id": 1948,
    "declarations": "h: ELLIPSE; v: LINE",
    "facts": "OverlappingLine(MajorAxis(h)) = v"
},
{
    "assertion": "Distance ( Projection ( POINT: a, LINE: U ), LowerFocus ( CONICSECTION: r ) ) equals HalfFocalLength ( CONICSECTION: N )",
    "id": 1949,
    "declarations": "a: POINT; U: LINE; r: CONICSECTION; N: CONICSECTION",
    "facts": "Distance(Projection(a, U), LowerFocus(r)) = HalfFocalLength(N)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: J ) equals LINE: s",
    "id": 1950,
    "declarations": "J: LINESEGMENT; s: LINE",
    "facts": "OverlappingLine(J) = s"
},
{
    "assertion": "InterReciprocal ( XCoordinate ( POINT: Q ) ) equals Inclination ( LINE: X )",
    "id": 1951,
    "declarations": "Q: POINT; X: LINE",
    "facts": "InterReciprocal(XCoordinate(Q)) = Inclination(X)"
},
{
    "assertion": "Negation ( AngleOf ( POINT: L, POINT: C, POINT: U ) equals ApplyUnit ( NUMBER: -26, DEGREESTR: degree ) ) equals BOOL: False",
    "id": 1952,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LocusEquation ( POINT: U ) equals EXPRESSION: x^2*space+*spacey*space=*space4",
    "id": 1953,
    "declarations": "U: POINT; x^2*space+*spacey*space=*space4: EXPRESSION",
    "facts": "LocusEquation(U) = x^2*space+*spacey*space=*space4"
},
{
    "assertion": "OverlappingLine ( InterceptChord ( LINE: C, CONICSECTION: D ) ) equals LeftDirectrix ( CONICSECTION: R )",
    "id": 1954,
    "declarations": "C: LINE; D: CONICSECTION; R: CONICSECTION",
    "facts": "OverlappingLine(InterceptChord(C, D)) = LeftDirectrix(R)"
},
{
    "assertion": "Min ( FocalLength ( CONICSECTION: k ) ) equals NUMBER: -22",
    "id": 1955,
    "declarations": "k: CONICSECTION; -22: NUMBER",
    "facts": "Min(FocalLength(k)) = -22"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: s ) ) equals LeftVertex ( CONICSECTION: o )",
    "id": 1956,
    "declarations": "s: ELLIPSE; o: CONICSECTION",
    "facts": "Endpoint(ImaginaryAxis(s)) = LeftVertex(o)"
},
{
    "assertion": "InterReciprocal ( Radius ( CircumCircle ( TRIANGLE: W ) ) ) equals FocalLength ( CONICSECTION: c )",
    "id": 1957,
    "declarations": "W: TRIANGLE; c: CONICSECTION",
    "facts": "InterReciprocal(Radius(CircumCircle(W))) = FocalLength(c)"
},
{
    "assertion": "NumIntersection ( Locus ( RightVertex ( CONICSECTION: v ) ), CURVE: A ) equals lg ( Distance ( POINT: U, LeftFocus ( CONICSECTION: l ) ) )",
    "id": 1958,
    "declarations": "v: CONICSECTION; A: CURVE; U: POINT; l: CONICSECTION",
    "facts": "NumIntersection(Locus(RightVertex(v)), A) = lg(Distance(U, LeftFocus(l)))"
},
{
    "assertion": "YCoordinate ( RightVertex ( CONICSECTION: v ) ) equals HalfFocalLength ( CONICSECTION: L )",
    "id": 1959,
    "declarations": "v: CONICSECTION; L: CONICSECTION",
    "facts": "YCoordinate(RightVertex(v)) = HalfFocalLength(L)"
},
{
    "assertion": "RightPart ( HYPERBOLA: b ) equals LeftPart ( HYPERBOLA: F )",
    "id": 1960,
    "declarations": "b: HYPERBOLA; F: HYPERBOLA",
    "facts": "RightPart(b) = LeftPart(F)"
},
{
    "assertion": "Max ( XCoordinate ( Center ( CONICSECTION: S ) ) ) equals NUMBER: -39",
    "id": 1961,
    "declarations": "S: CONICSECTION; -39: NUMBER",
    "facts": "Max(XCoordinate(Center(S))) = -39"
},
{
    "assertion": "UpperFocus ( CONICSECTION: Q ) equals POINT: B",
    "id": 1962,
    "declarations": "Q: CONICSECTION; B: POINT",
    "facts": "UpperFocus(Q) = B"
},
{
    "assertion": "RightFocus ( CONICSECTION: j ) equals Circumcenter ( TRIANGLE: L )",
    "id": 1963,
    "declarations": "j: CONICSECTION; L: TRIANGLE",
    "facts": "RightFocus(j) = Circumcenter(L)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: x, TRIANGLE: g ) equals BOOL: False",
    "id": 1964,
    "declarations": "x: CIRCLE; g: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(x, g) = False"
},
{
    "assertion": "NumIntersection ( CURVE: P, CURVE: d ) equals NUMBER: -69",
    "id": 1965,
    "declarations": "P: CURVE; d: CURVE; -69: NUMBER",
    "facts": "NumIntersection(P, d) = -69"
},
{
    "assertion": "Eccentricity ( CONICSECTION: Z ) equals NUMBER: -43",
    "id": 1966,
    "declarations": "Z: CONICSECTION; -43: NUMBER",
    "facts": "Eccentricity(Z) = -43"
},
{
    "assertion": "Vertex ( CONICSECTION: r ) equals LeftFocus ( CONICSECTION: n )",
    "id": 1967,
    "declarations": "r: CONICSECTION; n: CONICSECTION",
    "facts": "Vertex(r) = LeftFocus(n)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: J ) equals Circumcenter ( TRIANGLE: T )",
    "id": 1968,
    "declarations": "J: CONICSECTION; T: TRIANGLE",
    "facts": "LeftVertex(J) = Circumcenter(T)"
},
{
    "assertion": "InterReciprocal ( Perimeter ( CONICSECTION: P ) ) equals Abs ( LINESEGMENT: J )",
    "id": 1969,
    "declarations": "P: CONICSECTION; J: LINESEGMENT",
    "facts": "InterReciprocal(Perimeter(P)) = Abs(J)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: d ) equals Diameter ( CIRCLE: U )",
    "id": 1970,
    "declarations": "d: CONICSECTION; U: CIRCLE",
    "facts": "Eccentricity(d) = Diameter(U)"
},
{
    "assertion": "Perimeter ( CONICSECTION: f ) equals NUMBER: -17",
    "id": 1971,
    "declarations": "f: CONICSECTION; -17: NUMBER",
    "facts": "Perimeter(f) = -17"
},
{
    "assertion": "AngleOf ( POINT: I, POINT: d, POINT: B ) equals ApplyUnit ( Min ( Perimeter ( CONICSECTION: O ) ), DEGREESTR: degree )",
    "id": 1972,
    "declarations": "I: POINT; d: POINT; B: POINT; O: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(I, d, B) = ApplyUnit(Min(Perimeter(O)), degree)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: j ) equals AXIS: yAxis",
    "id": 1973,
    "declarations": "j: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(j) = yAxis"
},
{
    "assertion": "Length ( LINESEGMENT: u ) equals NUMBER: 64",
    "id": 1974,
    "declarations": "u: LINESEGMENT; 64: NUMBER",
    "facts": "Length(u) = 64"
},
{
    "assertion": "MinorAxis ( ELLIPSE: Y ) equals ImaginaryAxis ( ELLIPSE: x )",
    "id": 1975,
    "declarations": "Y: ELLIPSE; x: ELLIPSE",
    "facts": "MinorAxis(Y) = ImaginaryAxis(x)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: V ) equals LINE: M",
    "id": 1976,
    "declarations": "V: CONICSECTION; M: LINE",
    "facts": "RightDirectrix(V) = M"
},
{
    "assertion": "Locus ( Circumcenter ( TRIANGLE: w ) ) equals RightPart ( HYPERBOLA: z )",
    "id": 1977,
    "declarations": "w: TRIANGLE; z: HYPERBOLA",
    "facts": "Locus(Circumcenter(w)) = RightPart(z)"
},
{
    "assertion": "sqrt ( NUMBER: -8 ) equals NUMBER: 22",
    "id": 1978,
    "declarations": "-8: NUMBER; 22: NUMBER",
    "facts": "sqrt(-8) = 22"
},
{
    "assertion": "Max ( Inclination ( TangentOfPoint ( POINT: a, CURVE: a ) ) ) equals Diameter ( CIRCLE: H )",
    "id": 1979,
    "declarations": "a: POINT; a: CURVE; H: CIRCLE",
    "facts": "Max(Inclination(TangentOfPoint(a, a))) = Diameter(H)"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( LINESEGMENT: Z ) ) equals Quadrant ( POINT: D )",
    "id": 1981,
    "declarations": "Z: LINESEGMENT; D: POINT",
    "facts": "Inclination(PerpendicularBisector(Z)) = Quadrant(D)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: x, CIRCLE: w ) equals BOOL: False",
    "id": 1982,
    "declarations": "x: LINESEGMENT; w: CIRCLE; False: BOOL",
    "facts": "IsDiameter(x, w) = False"
},
{
    "assertion": "Abs ( LINESEGMENT: T ) equals Diameter ( CIRCLE: H )",
    "id": 1983,
    "declarations": "T: LINESEGMENT; H: CIRCLE",
    "facts": "Abs(T) = Diameter(H)"
},
{
    "assertion": "TangentOnPoint ( POINT: S, CURVE: T ) equals LINE: A",
    "id": 1984,
    "declarations": "S: POINT; T: CURVE; A: LINE",
    "facts": "TangentOnPoint(S, T) = A"
},
{
    "assertion": "LowerFocus ( CONICSECTION: A ) equals POINT: m",
    "id": 1985,
    "declarations": "A: CONICSECTION; m: POINT",
    "facts": "LowerFocus(A) = m"
},
{
    "assertion": "Endpoint ( LINESEGMENT: Y ) equals POINT: F",
    "id": 1986,
    "declarations": "Y: LINESEGMENT; F: POINT",
    "facts": "Endpoint(Y) = F"
},
{
    "assertion": "FocalLength ( CONICSECTION: X ) equals NUMBER: 86",
    "id": 1987,
    "declarations": "X: CONICSECTION; 86: NUMBER",
    "facts": "FocalLength(X) = 86"
},
{
    "assertion": "Abs ( LINESEGMENT: m ) equals NumIntersection ( CURVE: M, CURVE: t )",
    "id": 1988,
    "declarations": "m: LINESEGMENT; M: CURVE; t: CURVE",
    "facts": "Abs(m) = NumIntersection(M, t)"
},
{
    "assertion": "Endpoint ( MinorAxis ( ELLIPSE: n ) ) equals UpperVertex ( CONICSECTION: M )",
    "id": 1989,
    "declarations": "n: ELLIPSE; M: CONICSECTION",
    "facts": "Endpoint(MinorAxis(n)) = UpperVertex(M)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: d ) equals RealAxis ( ELLIPSE: e )",
    "id": 1990,
    "declarations": "d: ELLIPSE; e: ELLIPSE",
    "facts": "ImaginaryAxis(d) = RealAxis(e)"
},
{
    "assertion": "Area ( CONICSECTION: S ) equals Length ( LINESEGMENT: K )",
    "id": 1991,
    "declarations": "S: CONICSECTION; K: LINESEGMENT",
    "facts": "Area(S) = Length(K)"
},
{
    "assertion": "IsIntersect ( CURVE: X, CURVE: H ) equals BOOL: False",
    "id": 1992,
    "declarations": "X: CURVE; H: CURVE; False: BOOL",
    "facts": "IsIntersect(X, H) = False"
},
{
    "assertion": "Circumcenter ( TRIANGLE: r ) equals RightFocus ( CONICSECTION: S )",
    "id": 1993,
    "declarations": "r: TRIANGLE; S: CONICSECTION",
    "facts": "Circumcenter(r) = RightFocus(S)"
},
{
    "assertion": "IsTangent ( LINE: e, CONICSECTION: L ) equals BOOL: False",
    "id": 1994,
    "declarations": "e: LINE; L: CONICSECTION; False: BOOL",
    "facts": "IsTangent(e, L) = False"
},
{
    "assertion": "Slope ( LINE: Y ) equals NUMBER: 86",
    "id": 1995,
    "declarations": "Y: LINE; 86: NUMBER",
    "facts": "Slope(Y) = 86"
},
{
    "assertion": "LineOf ( Projection ( POINT: H, LINE: x ), POINT: n ) equals LINE: z",
    "id": 1996,
    "declarations": "H: POINT; x: LINE; n: POINT; z: LINE",
    "facts": "LineOf(Projection(H, x), n) = z"
},
{
    "assertion": "Incenter ( TRIANGLE: k ) equals Center ( CONICSECTION: M )",
    "id": 1997,
    "declarations": "k: TRIANGLE; M: CONICSECTION",
    "facts": "Incenter(k) = Center(M)"
},
{
    "assertion": "Quadrant ( POINT: f ) equals Min ( Eccentricity ( CONICSECTION: u ) )",
    "id": 1998,
    "declarations": "f: POINT; u: CONICSECTION",
    "facts": "Quadrant(f) = Min(Eccentricity(u))"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: H ) equals LINE: P",
    "id": 1999,
    "declarations": "H: LINESEGMENT; P: LINE",
    "facts": "OverlappingLine(H) = P"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: H, TRIANGLE: n ) equals BOOL: True",
    "id": 2000,
    "declarations": "H: CIRCLE; n: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(H, n) = True"
},
{
    "assertion": "LineOf ( POINT: r, POINT: F ) equals LineOf ( Center ( CONICSECTION: Q ), LowerVertex ( CONICSECTION: C ) )",
    "id": 2001,
    "declarations": "r: POINT; F: POINT; Q: CONICSECTION; C: CONICSECTION",
    "facts": "LineOf(r, F) = LineOf(Center(Q), LowerVertex(C))"
},
{
    "assertion": "DotProduct ( VECTOR: l, VECTOR: F ) equals InterReciprocal ( Radius ( CIRCLE: z ) )",
    "id": 2002,
    "declarations": "l: VECTOR; F: VECTOR; z: CIRCLE",
    "facts": "DotProduct(l, F) = InterReciprocal(Radius(z))"
},
{
    "assertion": "Projection ( POINT: J, LINE: j ) equals POINT: g",
    "id": 2003,
    "declarations": "J: POINT; j: LINE; g: POINT",
    "facts": "Projection(J, j) = g"
},
{
    "assertion": "RealAxis ( ELLIPSE: y ) equals LINESEGMENT: z",
    "id": 2004,
    "declarations": "y: ELLIPSE; z: LINESEGMENT",
    "facts": "RealAxis(y) = z"
},
{
    "assertion": "UpperVertex ( CONICSECTION: r ) equals UpperFocus ( CONICSECTION: f )",
    "id": 2005,
    "declarations": "r: CONICSECTION; f: CONICSECTION",
    "facts": "UpperVertex(r) = UpperFocus(f)"
},
{
    "assertion": "InterReciprocal ( Area ( CONICSECTION: i ) ) equals Abs ( RealAxis ( ELLIPSE: b ) )",
    "id": 2006,
    "declarations": "i: CONICSECTION; b: ELLIPSE",
    "facts": "InterReciprocal(Area(i)) = Abs(RealAxis(b))"
},
{
    "assertion": "RealAxis ( ELLIPSE: c ) equals LINESEGMENT: L",
    "id": 2007,
    "declarations": "c: ELLIPSE; L: LINESEGMENT",
    "facts": "RealAxis(c) = L"
},
{
    "assertion": "FocalLength ( CONICSECTION: R ) equals Slope ( OverlappingLine ( LINESEGMENT: A ) )",
    "id": 2008,
    "declarations": "R: CONICSECTION; A: LINESEGMENT",
    "facts": "FocalLength(R) = Slope(OverlappingLine(A))"
},
{
    "assertion": "RightPart ( HYPERBOLA: r ) equals CURVE: l",
    "id": 2009,
    "declarations": "r: HYPERBOLA; l: CURVE",
    "facts": "RightPart(r) = l"
},
{
    "assertion": "Inclination ( LINE: p ) equals Radius ( CircumCircle ( TRIANGLE: N ) )",
    "id": 2010,
    "declarations": "p: LINE; N: TRIANGLE",
    "facts": "Inclination(p) = Radius(CircumCircle(N))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: F ) equals sqrt ( NUMBER: -40 )",
    "id": 2011,
    "declarations": "F: CONICSECTION; -40: NUMBER",
    "facts": "HalfFocalLength(F) = sqrt(-40)"
},
{
    "assertion": "Radius ( CIRCLE: x ) equals Inclination ( RightDirectrix ( CONICSECTION: G ) )",
    "id": 2012,
    "declarations": "x: CIRCLE; G: CONICSECTION",
    "facts": "Radius(x) = Inclination(RightDirectrix(G))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: I ) equals LINESEGMENT: t",
    "id": 2014,
    "declarations": "I: ELLIPSE; t: LINESEGMENT",
    "facts": "MinorAxis(I) = t"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: I ) equals LINE: R",
    "id": 2015,
    "declarations": "I: CONICSECTION; R: LINE",
    "facts": "RightDirectrix(I) = R"
},
{
    "assertion": "LowerFocus ( CONICSECTION: N ) equals POINT: i",
    "id": 2016,
    "declarations": "N: CONICSECTION; i: POINT",
    "facts": "LowerFocus(N) = i"
},
{
    "assertion": "Eccentricity ( CONICSECTION: X ) equals NUMBER: 87",
    "id": 2017,
    "declarations": "X: CONICSECTION; 87: NUMBER",
    "facts": "Eccentricity(X) = 87"
},
{
    "assertion": "FootPoint ( LineOf ( LeftFocus ( CONICSECTION: f ), FootPoint ( LINE: F, LINE: S ) ), LINE: Q ) equals LowerVertex ( CONICSECTION: u )",
    "id": 2018,
    "declarations": "f: CONICSECTION; F: LINE; S: LINE; Q: LINE; u: CONICSECTION",
    "facts": "FootPoint(LineOf(LeftFocus(f), FootPoint(F, S)), Q) = LowerVertex(u)"
},
{
    "assertion": "LineSegmentOf ( POINT: r, FootPoint ( LINE: m, PerpendicularBisector ( LINESEGMENT: T ) ) ) equals LINESEGMENT: n",
    "id": 2019,
    "declarations": "r: POINT; m: LINE; T: LINESEGMENT; n: LINESEGMENT",
    "facts": "LineSegmentOf(r, FootPoint(m, PerpendicularBisector(T))) = n"
},
{
    "assertion": "Area ( CONICSECTION: k ) equals NUMBER: 81",
    "id": 2020,
    "declarations": "k: CONICSECTION; 81: NUMBER",
    "facts": "Area(k) = 81"
},
{
    "assertion": "IsParallel ( LeftDirectrix ( CONICSECTION: I ), LINE: t ) equals BOOL: False",
    "id": 2021,
    "declarations": "I: CONICSECTION; t: LINE; False: BOOL",
    "facts": "IsParallel(LeftDirectrix(I), t) = False"
},
{
    "assertion": "Inclination ( LINE: v ) equals NUMBER: -45",
    "id": 2022,
    "declarations": "v: LINE; -45: NUMBER",
    "facts": "Inclination(v) = -45"
},
{
    "assertion": "InterceptChord ( LINE: S, CONICSECTION: u ) equals LINESEGMENT: j",
    "id": 2023,
    "declarations": "S: LINE; u: CONICSECTION; j: LINESEGMENT",
    "facts": "InterceptChord(S, u) = j"
},
{
    "assertion": "Expression ( CURVE: T ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 2024,
    "declarations": "T: CURVE; y*space=*spacesin(x): EXPRESSION",
    "facts": "Expression(T) = y*space=*spacesin(x)"
},
{
    "assertion": "Center ( CONICSECTION: m ) equals POINT: g",
    "id": 2025,
    "declarations": "m: CONICSECTION; g: POINT",
    "facts": "Center(m) = g"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: g ) ) equals Distance ( MidPoint ( ImaginaryAxis ( ELLIPSE: i ) ), RightVertex ( CONICSECTION: b ) )",
    "id": 2026,
    "declarations": "g: TRIANGLE; i: ELLIPSE; b: CONICSECTION",
    "facts": "Diameter(CircumCircle(g)) = Distance(MidPoint(ImaginaryAxis(i)), RightVertex(b))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: Y ) equals POINT: j",
    "id": 2027,
    "declarations": "Y: TRIANGLE; j: POINT",
    "facts": "Circumcenter(Y) = j"
},
{
    "assertion": "MinorAxis ( ELLIPSE: X ) equals LINESEGMENT: Z",
    "id": 2028,
    "declarations": "X: ELLIPSE; Z: LINESEGMENT",
    "facts": "MinorAxis(X) = Z"
},
{
    "assertion": "sqrt ( Diameter ( CircumCircle ( TRIANGLE: N ) ) ) equals Eccentricity ( CONICSECTION: a )",
    "id": 2029,
    "declarations": "N: TRIANGLE; a: CONICSECTION",
    "facts": "sqrt(Diameter(CircumCircle(N))) = Eccentricity(a)"
},
{
    "assertion": "FootPoint ( LeftDirectrix ( CONICSECTION: A ), LINE: L ) equals LeftFocus ( CONICSECTION: O )",
    "id": 2030,
    "declarations": "A: CONICSECTION; L: LINE; O: CONICSECTION",
    "facts": "FootPoint(LeftDirectrix(A), L) = LeftFocus(O)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: M ) equals Center ( CONICSECTION: N )",
    "id": 2031,
    "declarations": "M: CONICSECTION; N: CONICSECTION",
    "facts": "LeftFocus(M) = Center(N)"
},
{
    "assertion": "RightFocus ( CONICSECTION: C ) equals Center ( CONICSECTION: l )",
    "id": 2032,
    "declarations": "C: CONICSECTION; l: CONICSECTION",
    "facts": "RightFocus(C) = Center(l)"
},
{
    "assertion": "lg ( NUMBER: 48 ) equals Abs ( LINESEGMENT: B )",
    "id": 2033,
    "declarations": "48: NUMBER; B: LINESEGMENT",
    "facts": "lg(48) = Abs(B)"
},
{
    "assertion": "Intersection ( LeftPart ( HYPERBOLA: p ), CURVE: m ) equals POINT: O",
    "id": 2034,
    "declarations": "p: HYPERBOLA; m: CURVE; O: POINT",
    "facts": "Intersection(LeftPart(p), m) = O"
},
{
    "assertion": "Endpoint ( LINESEGMENT: X ) equals FootPoint ( LINE: j, LINE: E )",
    "id": 2035,
    "declarations": "X: LINESEGMENT; j: LINE; E: LINE",
    "facts": "Endpoint(X) = FootPoint(j, E)"
},
{
    "assertion": "TangentOfPoint ( POINT: k, LeftPart ( HYPERBOLA: u ) ) equals PerpendicularBisector ( LINESEGMENT: L )",
    "id": 2036,
    "declarations": "k: POINT; u: HYPERBOLA; L: LINESEGMENT",
    "facts": "TangentOfPoint(k, LeftPart(u)) = PerpendicularBisector(L)"
},
{
    "assertion": "Expression ( CURVE: d ) equals EXPRESSION: y*space=*spacetan(x)",
    "id": 2037,
    "declarations": "d: CURVE; y*space=*spacetan(x): EXPRESSION",
    "facts": "Expression(d) = y*space=*spacetan(x)"
},
{
    "assertion": "Quadrant ( POINT: n ) equals NUMBER: -38",
    "id": 2038,
    "declarations": "n: POINT; -38: NUMBER",
    "facts": "Quadrant(n) = -38"
},
{
    "assertion": "Inclination ( LINE: Q ) equals lg ( NumIntersection ( CURVE: F, RightPart ( HYPERBOLA: P ) ) )",
    "id": 2039,
    "declarations": "Q: LINE; F: CURVE; P: HYPERBOLA",
    "facts": "Inclination(Q) = lg(NumIntersection(F, RightPart(P)))"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: t ) equals SymmetryAxis ( CONICSECTION: Y )",
    "id": 2040,
    "declarations": "t: CONICSECTION; Y: CONICSECTION",
    "facts": "SymmetryAxis(t) = SymmetryAxis(Y)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: P, TRIANGLE: V ) equals BOOL: True",
    "id": 2041,
    "declarations": "P: CIRCLE; V: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(P, V) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: S ) equals Orthocenter ( TRIANGLE: i )",
    "id": 2042,
    "declarations": "S: CONICSECTION; i: TRIANGLE",
    "facts": "LeftVertex(S) = Orthocenter(i)"
},
{
    "assertion": "sqrt ( NUMBER: -86 ) equals Length ( LINESEGMENT: C )",
    "id": 2043,
    "declarations": "-86: NUMBER; C: LINESEGMENT",
    "facts": "sqrt(-86) = Length(C)"
},
{
    "assertion": "Negation ( Distance ( Projection ( UpperVertex ( CONICSECTION: u ), LeftDirectrix ( CONICSECTION: x ) ), POINT: b ) equals Slope ( LineOf ( POINT: a, POINT: M ) ) ) equals BOOL: True",
    "id": 2044,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Slope ( LINE: D ) equals InterReciprocal ( NUMBER: -71 )",
    "id": 2045,
    "declarations": "D: LINE; -71: NUMBER",
    "facts": "Slope(D) = InterReciprocal(-71)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: Y ) equals RightDirectrix ( CONICSECTION: r )",
    "id": 2046,
    "declarations": "Y: CONICSECTION; r: CONICSECTION",
    "facts": "RightDirectrix(Y) = RightDirectrix(r)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: R ) equals POINT: f",
    "id": 2047,
    "declarations": "R: CONICSECTION; f: POINT",
    "facts": "LowerVertex(R) = f"
},
{
    "assertion": "Slope ( LINE: h ) equals NUMBER: -44",
    "id": 2048,
    "declarations": "h: LINE; -44: NUMBER",
    "facts": "Slope(h) = -44"
},
{
    "assertion": "Intercept ( PerpendicularBisector ( LINESEGMENT: i ), AXIS: yAxis ) equals InterReciprocal ( NUMBER: 12 )",
    "id": 2049,
    "declarations": "i: LINESEGMENT; yAxis: AXIS; 12: NUMBER",
    "facts": "Intercept(PerpendicularBisector(i), yAxis) = InterReciprocal(12)"
},
{
    "assertion": "Incenter ( TRIANGLE: t ) equals POINT: Y",
    "id": 2050,
    "declarations": "t: TRIANGLE; Y: POINT",
    "facts": "Incenter(t) = Y"
},
{
    "assertion": "Endpoint ( LINESEGMENT: M ) equals POINT: x",
    "id": 2051,
    "declarations": "M: LINESEGMENT; x: POINT",
    "facts": "Endpoint(M) = x"
},
{
    "assertion": "And ( LeftPart ( HYPERBOLA: W ) equals CURVE: d, MidPoint ( LINESEGMENT: o ) equals RightFocus ( CONICSECTION: N ) ) equals BOOL: True",
    "id": 2052,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: G, CircumCircle ( TRIANGLE: T ) ) equals BOOL: False",
    "id": 2053,
    "declarations": "G: LINESEGMENT; T: TRIANGLE; False: BOOL",
    "facts": "IsDiameter(G, CircumCircle(T)) = False"
},
{
    "assertion": "Endpoint ( LINESEGMENT: N ) equals POINT: R",
    "id": 2054,
    "declarations": "N: LINESEGMENT; R: POINT",
    "facts": "Endpoint(N) = R"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: P ) equals NUMBER: -75",
    "id": 2055,
    "declarations": "P: CONICSECTION; -75: NUMBER",
    "facts": "HalfFocalLength(P) = -75"
},
{
    "assertion": "IsOutTangent ( CIRCLE: o, CircumCircle ( TRIANGLE: M ) ) equals BOOL: True",
    "id": 2056,
    "declarations": "o: CIRCLE; M: TRIANGLE; True: BOOL",
    "facts": "IsOutTangent(o, CircumCircle(M)) = True"
},
{
    "assertion": "Vertex ( CONICSECTION: o ) equals RightFocus ( CONICSECTION: Q )",
    "id": 2057,
    "declarations": "o: CONICSECTION; Q: CONICSECTION",
    "facts": "Vertex(o) = RightFocus(Q)"
},
{
    "assertion": "VectorOf ( Center ( CONICSECTION: i ), Orthocenter ( TRIANGLE: S ) ) equals VectorOf ( POINT: D, POINT: x )",
    "id": 2058,
    "declarations": "i: CONICSECTION; S: TRIANGLE; D: POINT; x: POINT",
    "facts": "VectorOf(Center(i), Orthocenter(S)) = VectorOf(D, x)"
},
{
    "assertion": "TangentOnPoint ( MidPoint ( LINESEGMENT: r ), CURVE: k ) equals PerpendicularBisector ( LINESEGMENT: t )",
    "id": 2059,
    "declarations": "r: LINESEGMENT; k: CURVE; t: LINESEGMENT",
    "facts": "TangentOnPoint(MidPoint(r), k) = PerpendicularBisector(t)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: S ) equals LowerVertex ( CONICSECTION: v )",
    "id": 2060,
    "declarations": "S: CONICSECTION; v: CONICSECTION",
    "facts": "LeftFocus(S) = LowerVertex(v)"
},
{
    "assertion": "IsTangent ( LINE: c, CONICSECTION: N ) equals BOOL: True",
    "id": 2061,
    "declarations": "c: LINE; N: CONICSECTION; True: BOOL",
    "facts": "IsTangent(c, N) = True"
},
{
    "assertion": "RightPart ( HYPERBOLA: y ) equals CURVE: C",
    "id": 2062,
    "declarations": "y: HYPERBOLA; C: CURVE",
    "facts": "RightPart(y) = C"
},
{
    "assertion": "VectorOf ( Circumcenter ( TriangleOf ( LeftFocus ( CONICSECTION: f ), RightVertex ( CONICSECTION: S ), LowerFocus ( CONICSECTION: n ) ) ), POINT: Y ) equals VECTOR: w",
    "id": 2063,
    "declarations": "f: CONICSECTION; S: CONICSECTION; n: CONICSECTION; Y: POINT; w: VECTOR",
    "facts": "VectorOf(Circumcenter(TriangleOf(LeftFocus(f), RightVertex(S), LowerFocus(n))), Y) = w"
},
{
    "assertion": "Orthocenter ( TRIANGLE: K ) equals POINT: Z",
    "id": 2064,
    "declarations": "K: TRIANGLE; Z: POINT",
    "facts": "Orthocenter(K) = Z"
},
{
    "assertion": "NumIntersection ( CURVE: T, CURVE: c ) equals Distance ( UpperFocus ( CONICSECTION: N ), Center ( CONICSECTION: S ) )",
    "id": 2065,
    "declarations": "T: CURVE; c: CURVE; N: CONICSECTION; S: CONICSECTION",
    "facts": "NumIntersection(T, c) = Distance(UpperFocus(N), Center(S))"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: b ) equals LINESEGMENT: k",
    "id": 2066,
    "declarations": "b: ELLIPSE; k: LINESEGMENT",
    "facts": "ImaginaryAxis(b) = k"
},
{
    "assertion": "InterceptChord ( OverlappingLine ( RealAxis ( ELLIPSE: q ) ), CONICSECTION: e ) equals LINESEGMENT: w",
    "id": 2067,
    "declarations": "q: ELLIPSE; e: CONICSECTION; w: LINESEGMENT",
    "facts": "InterceptChord(OverlappingLine(RealAxis(q)), e) = w"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: A ) equals LINESEGMENT: r",
    "id": 2068,
    "declarations": "A: ELLIPSE; r: LINESEGMENT",
    "facts": "ImaginaryAxis(A) = r"
},
{
    "assertion": "Directrix ( CONICSECTION: Y ) equals LINE: S",
    "id": 2069,
    "declarations": "Y: CONICSECTION; S: LINE",
    "facts": "Directrix(Y) = S"
},
{
    "assertion": "AngleOf ( Projection ( POINT: k, LineOf ( POINT: I, POINT: t ) ), POINT: j, Projection ( UpperFocus ( CONICSECTION: d ), LINE: G ) ) equals ApplyUnit ( Slope ( LINE: B ), DEGREESTR: degree )",
    "id": 2070,
    "declarations": "k: POINT; I: POINT; t: POINT; j: POINT; d: CONICSECTION; G: LINE; B: LINE; degree: DEGREESTR",
    "facts": "AngleOf(Projection(k, LineOf(I, t)), j, Projection(UpperFocus(d), G)) = ApplyUnit(Slope(B), degree)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: k ) equals LeftFocus ( CONICSECTION: H )",
    "id": 2071,
    "declarations": "k: CONICSECTION; H: CONICSECTION",
    "facts": "LowerVertex(k) = LeftFocus(H)"
},
{
    "assertion": "NumIntersection ( CURVE: y, CURVE: w ) equals NUMBER: -92",
    "id": 2072,
    "declarations": "y: CURVE; w: CURVE; -92: NUMBER",
    "facts": "NumIntersection(y, w) = -92"
},
{
    "assertion": "Perimeter ( CONICSECTION: Y ) equals Min ( NUMBER: -19 )",
    "id": 2073,
    "declarations": "Y: CONICSECTION; -19: NUMBER",
    "facts": "Perimeter(Y) = Min(-19)"
},
{
    "assertion": "Focus ( CONICSECTION: L ) equals RightFocus ( CONICSECTION: U )",
    "id": 2074,
    "declarations": "L: CONICSECTION; U: CONICSECTION",
    "facts": "Focus(L) = RightFocus(U)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: F ) equals LINE: p",
    "id": 2075,
    "declarations": "F: CONICSECTION; p: LINE",
    "facts": "RightDirectrix(F) = p"
},
{
    "assertion": "Negation ( MidPoint ( LINESEGMENT: x ) equals POINT: W ) equals BOOL: True",
    "id": 2076,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Radius ( CIRCLE: D ) equals NUMBER: -58",
    "id": 2077,
    "declarations": "D: CIRCLE; -58: NUMBER",
    "facts": "Radius(D) = -58"
},
{
    "assertion": "TangentOnPoint ( POINT: v, LeftPart ( HYPERBOLA: s ) ) equals LINE: N",
    "id": 2078,
    "declarations": "v: POINT; s: HYPERBOLA; N: LINE",
    "facts": "TangentOnPoint(v, LeftPart(s)) = N"
},
{
    "assertion": "Locus ( LeftVertex ( CONICSECTION: H ) ) equals CURVE: f",
    "id": 2079,
    "declarations": "H: CONICSECTION; f: CURVE",
    "facts": "Locus(LeftVertex(H)) = f"
},
{
    "assertion": "Length ( LINESEGMENT: G ) equals Inclination ( PerpendicularBisector ( LINESEGMENT: o ) )",
    "id": 2080,
    "declarations": "G: LINESEGMENT; o: LINESEGMENT",
    "facts": "Length(G) = Inclination(PerpendicularBisector(o))"
},
{
    "assertion": "Expression ( CURVE: h ) equals EXPRESSION: x^2*space+*spacey*space=*space4",
    "id": 2081,
    "declarations": "h: CURVE; x^2*space+*spacey*space=*space4: EXPRESSION",
    "facts": "Expression(h) = x^2*space+*spacey*space=*space4"
},
{
    "assertion": "And ( NumIntersection ( CURVE: l, CURVE: D ) equals Quadrant ( POINT: M ), Eccentricity ( CONICSECTION: n ) equals XCoordinate ( LowerVertex ( CONICSECTION: d ) ) ) equals BOOL: True",
    "id": 2082,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Diameter ( CIRCLE: P ) equals NUMBER: 10",
    "id": 2083,
    "declarations": "P: CIRCLE; 10: NUMBER",
    "facts": "Diameter(P) = 10"
},
{
    "assertion": "ApplyUnit ( Length ( LINESEGMENT: l ), DEGREESTR: degree )",
    "id": 2084,
    "declarations": "l: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(Length(l), degree) = dummy_operator()"
},
{
    "assertion": "LineOf ( UpperFocus ( CONICSECTION: N ), POINT: d ) equals LINE: p",
    "id": 2085,
    "declarations": "N: CONICSECTION; d: POINT; p: LINE",
    "facts": "LineOf(UpperFocus(N), d) = p"
},
{
    "assertion": "LeftFocus ( CONICSECTION: q ) equals Orthocenter ( TRIANGLE: i )",
    "id": 2086,
    "declarations": "q: CONICSECTION; i: TRIANGLE",
    "facts": "LeftFocus(q) = Orthocenter(i)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: a ) equals POINT: L",
    "id": 2087,
    "declarations": "a: CONICSECTION; L: POINT",
    "facts": "UpperFocus(a) = L"
},
{
    "assertion": "UpperVertex ( CONICSECTION: U ) equals LowerVertex ( CONICSECTION: w )",
    "id": 2088,
    "declarations": "U: CONICSECTION; w: CONICSECTION",
    "facts": "UpperVertex(U) = LowerVertex(w)"
},
{
    "assertion": "TangentOfPoint ( MidPoint ( MinorAxis ( ELLIPSE: B ) ), LeftPart ( HYPERBOLA: c ) ) equals LINE: H",
    "id": 2089,
    "declarations": "B: ELLIPSE; c: HYPERBOLA; H: LINE",
    "facts": "TangentOfPoint(MidPoint(MinorAxis(B)), LeftPart(c)) = H"
},
{
    "assertion": "Focus ( CONICSECTION: Z ) equals RightFocus ( CONICSECTION: O )",
    "id": 2090,
    "declarations": "Z: CONICSECTION; O: CONICSECTION",
    "facts": "Focus(Z) = RightFocus(O)"
},
{
    "assertion": "XCoordinate ( POINT: y ) equals Abs ( LINESEGMENT: R )",
    "id": 2091,
    "declarations": "y: POINT; R: LINESEGMENT",
    "facts": "XCoordinate(y) = Abs(R)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Q ) equals POINT: V",
    "id": 2092,
    "declarations": "Q: TRIANGLE; V: POINT",
    "facts": "Orthocenter(Q) = V"
},
{
    "assertion": "LeftPart ( HYPERBOLA: C ) equals CURVE: a",
    "id": 2093,
    "declarations": "C: HYPERBOLA; a: CURVE",
    "facts": "LeftPart(C) = a"
},
{
    "assertion": "TangentOfPoint ( Projection ( MidPoint ( LINESEGMENT: y ), LINE: t ), LeftPart ( HYPERBOLA: x ) ) equals LINE: g",
    "id": 2094,
    "declarations": "y: LINESEGMENT; t: LINE; x: HYPERBOLA; g: LINE",
    "facts": "TangentOfPoint(Projection(MidPoint(y), t), LeftPart(x)) = g"
},
{
    "assertion": "LowerFocus ( CONICSECTION: W ) equals RightVertex ( CONICSECTION: E )",
    "id": 2095,
    "declarations": "W: CONICSECTION; E: CONICSECTION",
    "facts": "LowerFocus(W) = RightVertex(E)"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: x ) ) equals FocalLength ( CONICSECTION: V )",
    "id": 2096,
    "declarations": "x: CONICSECTION; V: CONICSECTION",
    "facts": "Quadrant(LeftVertex(x)) = FocalLength(V)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: w ) equals POINT: O",
    "id": 2097,
    "declarations": "w: CONICSECTION; O: POINT",
    "facts": "LeftFocus(w) = O"
},
{
    "assertion": "Min ( HalfFocalLength ( CONICSECTION: H ) ) equals NUMBER: 44",
    "id": 2098,
    "declarations": "H: CONICSECTION; 44: NUMBER",
    "facts": "Min(HalfFocalLength(H)) = 44"
},
{
    "assertion": "Intercept ( LINE: k, AXIS: xAxis ) equals Abs ( LINESEGMENT: d )",
    "id": 2099,
    "declarations": "k: LINE; xAxis: AXIS; d: LINESEGMENT",
    "facts": "Intercept(k, xAxis) = Abs(d)"
},
{
    "assertion": "RealAxis ( ELLIPSE: I ) equals MajorAxis ( ELLIPSE: q )",
    "id": 2100,
    "declarations": "I: ELLIPSE; q: ELLIPSE",
    "facts": "RealAxis(I) = MajorAxis(q)"
},
{
    "assertion": "Expression ( CURVE: i ) equals EXPRESSION: y*space=*spacetan(x)",
    "id": 2101,
    "declarations": "i: CURVE; y*space=*spacetan(x): EXPRESSION",
    "facts": "Expression(i) = y*space=*spacetan(x)"
},
{
    "assertion": "Locus ( LowerFocus ( CONICSECTION: l ) ) equals CURVE: P",
    "id": 2102,
    "declarations": "l: CONICSECTION; P: CURVE",
    "facts": "Locus(LowerFocus(l)) = P"
},
{
    "assertion": "And ( RightVertex ( CONICSECTION: R ) equals Center ( CONICSECTION: t ), Perimeter ( CONICSECTION: g ) equals lg ( NUMBER: 8 ) ) equals BOOL: True",
    "id": 2103,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Circumcenter ( TRIANGLE: w ) equals POINT: U",
    "id": 2104,
    "declarations": "w: TRIANGLE; U: POINT",
    "facts": "Circumcenter(w) = U"
},
{
    "assertion": "Expression ( Locus ( LeftFocus ( CONICSECTION: l ) ) ) equals Expression ( RightPart ( HYPERBOLA: M ) )",
    "id": 2105,
    "declarations": "l: CONICSECTION; M: HYPERBOLA",
    "facts": "Expression(Locus(LeftFocus(l))) = Expression(RightPart(M))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: d ) equals POINT: l",
    "id": 2106,
    "declarations": "d: CONICSECTION; l: POINT",
    "facts": "LeftFocus(d) = l"
},
{
    "assertion": "Inclination ( LINE: S ) equals Distance ( LeftVertex ( CONICSECTION: j ), RightFocus ( CONICSECTION: R ) )",
    "id": 2107,
    "declarations": "S: LINE; j: CONICSECTION; R: CONICSECTION",
    "facts": "Inclination(S) = Distance(LeftVertex(j), RightFocus(R))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: s ) equals POINT: a",
    "id": 2108,
    "declarations": "s: CONICSECTION; a: POINT",
    "facts": "LeftVertex(s) = a"
},
{
    "assertion": "Incenter ( TRIANGLE: d ) equals POINT: n",
    "id": 2109,
    "declarations": "d: TRIANGLE; n: POINT",
    "facts": "Incenter(d) = n"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: K ) equals LINE: P",
    "id": 2110,
    "declarations": "K: LINESEGMENT; P: LINE",
    "facts": "PerpendicularBisector(K) = P"
},
{
    "assertion": "Between ( UpperVertex ( CONICSECTION: T ), POINT: l, LowerVertex ( CONICSECTION: t ) ) equals BOOL: False",
    "id": 2111,
    "declarations": "T: CONICSECTION; l: POINT; t: CONICSECTION; False: BOOL",
    "facts": "Between(UpperVertex(T), l, LowerVertex(t)) = False"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: F ) ) equals NUMBER: 71",
    "id": 2112,
    "declarations": "F: ELLIPSE; 71: NUMBER",
    "facts": "Abs(MinorAxis(F)) = 71"
},
{
    "assertion": "IsIntersect ( CURVE: n, RightPart ( HYPERBOLA: Q ) ) equals BOOL: True",
    "id": 2113,
    "declarations": "n: CURVE; Q: HYPERBOLA; True: BOOL",
    "facts": "IsIntersect(n, RightPart(Q)) = True"
},
{
    "assertion": "Asymptote ( HYPERBOLA: E ) equals LINE: U",
    "id": 2114,
    "declarations": "E: HYPERBOLA; U: LINE",
    "facts": "Asymptote(E) = U"
},
{
    "assertion": "XCoordinate ( POINT: n ) equals InterReciprocal ( Intercept ( LINE: b, AXIS: xAxis ) )",
    "id": 2115,
    "declarations": "n: POINT; b: LINE; xAxis: AXIS",
    "facts": "XCoordinate(n) = InterReciprocal(Intercept(b, xAxis))"
},
{
    "assertion": "Negation ( LeftPart ( HYPERBOLA: b ) equals CURVE: C ) equals BOOL: False",
    "id": 2116,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Y ) equals LINE: K",
    "id": 2117,
    "declarations": "Y: CONICSECTION; K: LINE",
    "facts": "LeftDirectrix(Y) = K"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: L ) ) equals LineOf ( POINT: L, Projection ( POINT: u, LINE: w ) )",
    "id": 2118,
    "declarations": "L: ELLIPSE; L: POINT; u: POINT; w: LINE",
    "facts": "OverlappingLine(MajorAxis(L)) = LineOf(L, Projection(u, w))"
},
{
    "assertion": "TangentOfPoint ( RightFocus ( CONICSECTION: j ), Locus ( LeftFocus ( CONICSECTION: o ) ) ) equals LINE: B",
    "id": 2119,
    "declarations": "j: CONICSECTION; o: CONICSECTION; B: LINE",
    "facts": "TangentOfPoint(RightFocus(j), Locus(LeftFocus(o))) = B"
},
{
    "assertion": "Distance ( Projection ( Center ( CONICSECTION: R ), RightDirectrix ( CONICSECTION: t ) ), LowerVertex ( CONICSECTION: J ) ) equals NUMBER: -91",
    "id": 2120,
    "declarations": "R: CONICSECTION; t: CONICSECTION; J: CONICSECTION; -91: NUMBER",
    "facts": "Distance(Projection(Center(R), RightDirectrix(t)), LowerVertex(J)) = -91"
},
{
    "assertion": "DotProduct ( VECTOR: i, VECTOR: W ) equals NUMBER: -4",
    "id": 2121,
    "declarations": "i: VECTOR; W: VECTOR; -4: NUMBER",
    "facts": "DotProduct(i, W) = -4"
},
{
    "assertion": "Negation ( ApplyUnit ( Length ( LineSegmentOf ( POINT: S, POINT: P ) ), DEGREESTR: degree ) ) equals BOOL: False",
    "id": 2122,
    "declarations": "S: POINT; P: POINT; degree: DEGREESTR; False: BOOL",
    "facts": "Negation(ApplyUnit(Length(LineSegmentOf(S, P)), degree)) = False"
},
{
    "assertion": "IsDiameter ( ImaginaryAxis ( ELLIPSE: p ), CIRCLE: d ) equals BOOL: False",
    "id": 2123,
    "declarations": "p: ELLIPSE; d: CIRCLE; False: BOOL",
    "facts": "IsDiameter(ImaginaryAxis(p), d) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: J ) equals Abs ( LINESEGMENT: H )",
    "id": 2124,
    "declarations": "J: CONICSECTION; H: LINESEGMENT",
    "facts": "Perimeter(J) = Abs(H)"
},
{
    "assertion": "Area ( CONICSECTION: U ) equals NUMBER: -28",
    "id": 2125,
    "declarations": "U: CONICSECTION; -28: NUMBER",
    "facts": "Area(U) = -28"
},
{
    "assertion": "ApplyUnit ( Eccentricity ( CONICSECTION: m ), DEGREESTR: degree )",
    "id": 2127,
    "declarations": "m: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Eccentricity(m), degree) = dummy_operator()"
},
{
    "assertion": "Between ( POINT: R, POINT: z, FootPoint ( LINE: m, OverlappingLine ( LINESEGMENT: b ) ) ) equals BOOL: True",
    "id": 2128,
    "declarations": "R: POINT; z: POINT; m: LINE; b: LINESEGMENT; True: BOOL",
    "facts": "Between(R, z, FootPoint(m, OverlappingLine(b))) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: D ) equals LINESEGMENT: B",
    "id": 2129,
    "declarations": "D: ELLIPSE; B: LINESEGMENT",
    "facts": "MinorAxis(D) = B"
},
{
    "assertion": "Vertex ( CONICSECTION: h ) equals POINT: X",
    "id": 2130,
    "declarations": "h: CONICSECTION; X: POINT",
    "facts": "Vertex(h) = X"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: b ) equals Distance ( POINT: w, LowerVertex ( CONICSECTION: Y ) )",
    "id": 2131,
    "declarations": "b: CONICSECTION; w: POINT; Y: CONICSECTION",
    "facts": "HalfFocalLength(b) = Distance(w, LowerVertex(Y))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: k, TRIANGLE: v ) equals BOOL: False",
    "id": 2132,
    "declarations": "k: CIRCLE; v: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(k, v) = False"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: f ) equals Quadrant ( POINT: t )",
    "id": 2133,
    "declarations": "f: CONICSECTION; t: POINT",
    "facts": "HalfFocalLength(f) = Quadrant(t)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: c, TRIANGLE: z ) equals BOOL: True",
    "id": 2134,
    "declarations": "c: CIRCLE; z: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(c, z) = True"
},
{
    "assertion": "Negation ( RightVertex ( CONICSECTION: g ) equals RightFocus ( CONICSECTION: H ) ) equals BOOL: False",
    "id": 2135,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "TangentOnPoint ( POINT: y, CURVE: A ) equals RightDirectrix ( CONICSECTION: e )",
    "id": 2136,
    "declarations": "y: POINT; A: CURVE; e: CONICSECTION",
    "facts": "TangentOnPoint(y, A) = RightDirectrix(e)"
},
{
    "assertion": "FocalLength ( CONICSECTION: M ) equals InterReciprocal ( Slope ( RightDirectrix ( CONICSECTION: T ) ) )",
    "id": 2137,
    "declarations": "M: CONICSECTION; T: CONICSECTION",
    "facts": "FocalLength(M) = InterReciprocal(Slope(RightDirectrix(T)))"
},
{
    "assertion": "IsInTangent ( CIRCLE: k, CIRCLE: K ) equals BOOL: True",
    "id": 2138,
    "declarations": "k: CIRCLE; K: CIRCLE; True: BOOL",
    "facts": "IsInTangent(k, K) = True"
},
{
    "assertion": "Slope ( LINE: l ) equals Slope ( LINE: y )",
    "id": 2139,
    "declarations": "l: LINE; y: LINE",
    "facts": "Slope(l) = Slope(y)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: p ) equals POINT: F",
    "id": 2140,
    "declarations": "p: CONICSECTION; F: POINT",
    "facts": "LeftVertex(p) = F"
},
{
    "assertion": "Area ( CONICSECTION: o ) equals InterReciprocal ( NUMBER: 24 )",
    "id": 2141,
    "declarations": "o: CONICSECTION; 24: NUMBER",
    "facts": "Area(o) = InterReciprocal(24)"
},
{
    "assertion": "lg ( NUMBER: -24 ) equals Abs ( LINESEGMENT: Y )",
    "id": 2142,
    "declarations": "-24: NUMBER; Y: LINESEGMENT",
    "facts": "lg(-24) = Abs(Y)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: i ) equals Center ( CONICSECTION: A )",
    "id": 2143,
    "declarations": "i: CONICSECTION; A: CONICSECTION",
    "facts": "LeftFocus(i) = Center(A)"
},
{
    "assertion": "Max ( FocalLength ( CONICSECTION: U ) ) equals NUMBER: 28",
    "id": 2144,
    "declarations": "U: CONICSECTION; 28: NUMBER",
    "facts": "Max(FocalLength(U)) = 28"
},
{
    "assertion": "VectorOf ( POINT: R, LeftFocus ( CONICSECTION: t ) ) equals VECTOR: W",
    "id": 2145,
    "declarations": "R: POINT; t: CONICSECTION; W: VECTOR",
    "facts": "VectorOf(R, LeftFocus(t)) = W"
},
{
    "assertion": "Min ( InterReciprocal ( NumIntersection ( CURVE: B, LeftPart ( HYPERBOLA: v ) ) ) ) equals InterReciprocal ( Radius ( CIRCLE: s ) )",
    "id": 2146,
    "declarations": "B: CURVE; v: HYPERBOLA; s: CIRCLE",
    "facts": "Min(InterReciprocal(NumIntersection(B, LeftPart(v)))) = InterReciprocal(Radius(s))"
},
{
    "assertion": "Quadrant ( LowerFocus ( CONICSECTION: P ) ) equals NUMBER: -60",
    "id": 2147,
    "declarations": "P: CONICSECTION; -60: NUMBER",
    "facts": "Quadrant(LowerFocus(P)) = -60"
},
{
    "assertion": "PointOnCurve ( Circumcenter ( TRIANGLE: I ), CURVE: M ) equals BOOL: True",
    "id": 2148,
    "declarations": "I: TRIANGLE; M: CURVE; True: BOOL",
    "facts": "PointOnCurve(Circumcenter(I), M) = True"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: R ) equals LINESEGMENT: p",
    "id": 2149,
    "declarations": "R: ELLIPSE; p: LINESEGMENT",
    "facts": "ImaginaryAxis(R) = p"
},
{
    "assertion": "Negation ( Radius ( CIRCLE: i ) equals Abs ( ImaginaryAxis ( ELLIPSE: I ) ) ) equals BOOL: True",
    "id": 2150,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: D ) equals HalfFocalLength ( CONICSECTION: L )",
    "id": 2151,
    "declarations": "D: CONICSECTION; L: CONICSECTION",
    "facts": "HalfFocalLength(D) = HalfFocalLength(L)"
},
{
    "assertion": "Quadrant ( POINT: j ) equals InterReciprocal ( Area ( CONICSECTION: Q ) )",
    "id": 2152,
    "declarations": "j: POINT; Q: CONICSECTION",
    "facts": "Quadrant(j) = InterReciprocal(Area(Q))"
},
{
    "assertion": "IsOutTangent ( CIRCLE: i, CIRCLE: G ) equals BOOL: True",
    "id": 2153,
    "declarations": "i: CIRCLE; G: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(i, G) = True"
},
{
    "assertion": "ApplyUnit ( NUMBER: -38, DEGREESTR: degree )",
    "id": 2154,
    "declarations": "-38: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-38, degree) = dummy_operator()"
},
{
    "assertion": "Circumcenter ( TRIANGLE: l ) equals POINT: B",
    "id": 2155,
    "declarations": "l: TRIANGLE; B: POINT",
    "facts": "Circumcenter(l) = B"
},
{
    "assertion": "LowerVertex ( CONICSECTION: E ) equals MidPoint ( LINESEGMENT: C )",
    "id": 2156,
    "declarations": "E: CONICSECTION; C: LINESEGMENT",
    "facts": "LowerVertex(E) = MidPoint(C)"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: E ) ) equals LINE: U",
    "id": 2157,
    "declarations": "E: ELLIPSE; U: LINE",
    "facts": "OverlappingLine(MajorAxis(E)) = U"
},
{
    "assertion": "Incenter ( TRIANGLE: v ) equals FootPoint ( RightDirectrix ( CONICSECTION: P ), LINE: n )",
    "id": 2158,
    "declarations": "v: TRIANGLE; P: CONICSECTION; n: LINE",
    "facts": "Incenter(v) = FootPoint(RightDirectrix(P), n)"
},
{
    "assertion": "RightVertex ( CONICSECTION: z ) equals LeftVertex ( CONICSECTION: z )",
    "id": 2159,
    "declarations": "z: CONICSECTION; z: CONICSECTION",
    "facts": "RightVertex(z) = LeftVertex(z)"
},
{
    "assertion": "YCoordinate ( Incenter ( TRIANGLE: u ) ) equals NUMBER: -65",
    "id": 2160,
    "declarations": "u: TRIANGLE; -65: NUMBER",
    "facts": "YCoordinate(Incenter(u)) = -65"
},
{
    "assertion": "Expression ( CURVE: c ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 2161,
    "declarations": "c: CURVE; y*space=*spacesin(x): EXPRESSION",
    "facts": "Expression(c) = y*space=*spacesin(x)"
},
{
    "assertion": "Slope ( TangentOnPoint ( POINT: P, RightPart ( HYPERBOLA: r ) ) ) equals NUMBER: 85",
    "id": 2162,
    "declarations": "P: POINT; r: HYPERBOLA; 85: NUMBER",
    "facts": "Slope(TangentOnPoint(P, RightPart(r))) = 85"
},
{
    "assertion": "AngleOf ( POINT: c, Circumcenter ( TRIANGLE: T ), LowerFocus ( CONICSECTION: y ) ) equals AngleOf ( POINT: Z, Incenter ( TRIANGLE: m ), Center ( CONICSECTION: h ) )",
    "id": 2163,
    "declarations": "c: POINT; T: TRIANGLE; y: CONICSECTION; Z: POINT; m: TRIANGLE; h: CONICSECTION",
    "facts": "AngleOf(c, Circumcenter(T), LowerFocus(y)) = AngleOf(Z, Incenter(m), Center(h))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: x ) equals POINT: a",
    "id": 2164,
    "declarations": "x: CONICSECTION; a: POINT",
    "facts": "LowerVertex(x) = a"
},
{
    "assertion": "InterceptChord ( LINE: N, CONICSECTION: X ) equals RealAxis ( ELLIPSE: Q )",
    "id": 2165,
    "declarations": "N: LINE; X: CONICSECTION; Q: ELLIPSE",
    "facts": "InterceptChord(N, X) = RealAxis(Q)"
},
{
    "assertion": "RightVertex ( CONICSECTION: d ) equals POINT: d",
    "id": 2166,
    "declarations": "d: CONICSECTION; d: POINT",
    "facts": "RightVertex(d) = d"
},
{
    "assertion": "Distance ( POINT: h, POINT: U ) equals FocalLength ( CONICSECTION: Q )",
    "id": 2167,
    "declarations": "h: POINT; U: POINT; Q: CONICSECTION",
    "facts": "Distance(h, U) = FocalLength(Q)"
},
{
    "assertion": "sqrt ( Length ( LINESEGMENT: k ) ) equals Quadrant ( POINT: T )",
    "id": 2168,
    "declarations": "k: LINESEGMENT; T: POINT",
    "facts": "sqrt(Length(k)) = Quadrant(T)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: q ) equals LINESEGMENT: n",
    "id": 2169,
    "declarations": "q: ELLIPSE; n: LINESEGMENT",
    "facts": "MajorAxis(q) = n"
},
{
    "assertion": "Inclination ( LINE: X ) equals NUMBER: -6",
    "id": 2170,
    "declarations": "X: LINE; -6: NUMBER",
    "facts": "Inclination(X) = -6"
},
{
    "assertion": "IsInTangent ( CIRCLE: h, CIRCLE: v ) equals BOOL: False",
    "id": 2171,
    "declarations": "h: CIRCLE; v: CIRCLE; False: BOOL",
    "facts": "IsInTangent(h, v) = False"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: r, CONICSECTION: S ) equals BOOL: False",
    "id": 2172,
    "declarations": "r: LINESEGMENT; S: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(r, S) = False"
},
{
    "assertion": "Intersection ( CURVE: T, CURVE: V ) equals MidPoint ( LINESEGMENT: V )",
    "id": 2173,
    "declarations": "T: CURVE; V: CURVE; V: LINESEGMENT",
    "facts": "Intersection(T, V) = MidPoint(V)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: E, CONICSECTION: t ) equals BOOL: True",
    "id": 2174,
    "declarations": "E: LINESEGMENT; t: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(E, t) = True"
},
{
    "assertion": "Abs ( LINESEGMENT: y ) equals Intercept ( LeftDirectrix ( CONICSECTION: m ), AXIS: xAxis )",
    "id": 2175,
    "declarations": "y: LINESEGMENT; m: CONICSECTION; xAxis: AXIS",
    "facts": "Abs(y) = Intercept(LeftDirectrix(m), xAxis)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: C ) equals LineOf ( LeftVertex ( CONICSECTION: R ), POINT: r )",
    "id": 2176,
    "declarations": "C: HYPERBOLA; R: CONICSECTION; r: POINT",
    "facts": "Asymptote(C) = LineOf(LeftVertex(R), r)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: p ) equals LINE: P",
    "id": 2177,
    "declarations": "p: LINESEGMENT; P: LINE",
    "facts": "OverlappingLine(p) = P"
},
{
    "assertion": "UpperFocus ( CONICSECTION: R ) equals POINT: V",
    "id": 2178,
    "declarations": "R: CONICSECTION; V: POINT",
    "facts": "UpperFocus(R) = V"
},
{
    "assertion": "sqrt ( NUMBER: 75 ) equals FocalLength ( CONICSECTION: w )",
    "id": 2179,
    "declarations": "75: NUMBER; w: CONICSECTION",
    "facts": "sqrt(75) = FocalLength(w)"
},
{
    "assertion": "Length ( LINESEGMENT: r ) equals NUMBER: -24",
    "id": 2180,
    "declarations": "r: LINESEGMENT; -24: NUMBER",
    "facts": "Length(r) = -24"
},
{
    "assertion": "Expression ( CURVE: Q ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 2181,
    "declarations": "Q: CURVE; y*space=*spacesin(x): EXPRESSION",
    "facts": "Expression(Q) = y*space=*spacesin(x)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: H ) equals RightFocus ( CONICSECTION: t )",
    "id": 2182,
    "declarations": "H: CONICSECTION; t: CONICSECTION",
    "facts": "LowerFocus(H) = RightFocus(t)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: E, CIRCLE: D ) equals BOOL: False",
    "id": 2183,
    "declarations": "E: LINESEGMENT; D: CIRCLE; False: BOOL",
    "facts": "IsDiameter(E, D) = False"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: K ) ) equals NUMBER: -81",
    "id": 2184,
    "declarations": "K: TRIANGLE; -81: NUMBER",
    "facts": "Radius(CircumCircle(K)) = -81"
},
{
    "assertion": "Min ( Slope ( LINE: C ) ) equals NUMBER: 97",
    "id": 2185,
    "declarations": "C: LINE; 97: NUMBER",
    "facts": "Min(Slope(C)) = 97"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: X ) ) equals POINT: H",
    "id": 2186,
    "declarations": "X: ELLIPSE; H: POINT",
    "facts": "Endpoint(ImaginaryAxis(X)) = H"
},
{
    "assertion": "Negation ( IsInTangent ( CIRCLE: e, CIRCLE: w ) equals BOOL: False ) equals BOOL: True",
    "id": 2187,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MajorAxis ( ELLIPSE: Z ) equals MajorAxis ( ELLIPSE: K )",
    "id": 2188,
    "declarations": "Z: ELLIPSE; K: ELLIPSE",
    "facts": "MajorAxis(Z) = MajorAxis(K)"
},
{
    "assertion": "Locus ( POINT: d ) equals CURVE: i",
    "id": 2189,
    "declarations": "d: POINT; i: CURVE",
    "facts": "Locus(d) = i"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: o, TRIANGLE: q ) equals BOOL: True",
    "id": 2190,
    "declarations": "o: CIRCLE; q: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(o, q) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: A ) equals LINE: e",
    "id": 2191,
    "declarations": "A: CONICSECTION; e: LINE",
    "facts": "RightDirectrix(A) = e"
},
{
    "assertion": "RightVertex ( CONICSECTION: s ) equals POINT: O",
    "id": 2192,
    "declarations": "s: CONICSECTION; O: POINT",
    "facts": "RightVertex(s) = O"
},
{
    "assertion": "Directrix ( CONICSECTION: m ) equals OverlappingLine ( LINESEGMENT: n )",
    "id": 2193,
    "declarations": "m: CONICSECTION; n: LINESEGMENT",
    "facts": "Directrix(m) = OverlappingLine(n)"
},
{
    "assertion": "FocalLength ( CONICSECTION: n ) equals NUMBER: 60",
    "id": 2194,
    "declarations": "n: CONICSECTION; 60: NUMBER",
    "facts": "FocalLength(n) = 60"
},
{
    "assertion": "Eccentricity ( CONICSECTION: U ) equals NUMBER: 25",
    "id": 2195,
    "declarations": "U: CONICSECTION; 25: NUMBER",
    "facts": "Eccentricity(U) = 25"
},
{
    "assertion": "Max ( FocalLength ( CONICSECTION: v ) ) equals HalfFocalLength ( CONICSECTION: m )",
    "id": 2196,
    "declarations": "v: CONICSECTION; m: CONICSECTION",
    "facts": "Max(FocalLength(v)) = HalfFocalLength(m)"
},
{
    "assertion": "Between ( UpperVertex ( CONICSECTION: p ), UpperFocus ( CONICSECTION: w ), LowerFocus ( CONICSECTION: L ) ) equals BOOL: False",
    "id": 2197,
    "declarations": "p: CONICSECTION; w: CONICSECTION; L: CONICSECTION; False: BOOL",
    "facts": "Between(UpperVertex(p), UpperFocus(w), LowerFocus(L)) = False"
},
{
    "assertion": "IsChordOf ( InterceptChord ( LINE: F, CONICSECTION: B ), CONICSECTION: J ) equals BOOL: True",
    "id": 2198,
    "declarations": "F: LINE; B: CONICSECTION; J: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(InterceptChord(F, B), J) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: S ) equals LINESEGMENT: H",
    "id": 2199,
    "declarations": "S: ELLIPSE; H: LINESEGMENT",
    "facts": "MajorAxis(S) = H"
},
{
    "assertion": "RealAxis ( ELLIPSE: Y ) equals InterceptChord ( TangentOnPoint ( RightVertex ( CONICSECTION: J ), CURVE: x ), CONICSECTION: B )",
    "id": 2200,
    "declarations": "Y: ELLIPSE; J: CONICSECTION; x: CURVE; B: CONICSECTION",
    "facts": "RealAxis(Y) = InterceptChord(TangentOnPoint(RightVertex(J), x), B)"
},
{
    "assertion": "Abs ( LINESEGMENT: h ) equals Quadrant ( Center ( CONICSECTION: A ) )",
    "id": 2201,
    "declarations": "h: LINESEGMENT; A: CONICSECTION",
    "facts": "Abs(h) = Quadrant(Center(A))"
},
{
    "assertion": "MidPoint ( LINESEGMENT: P ) equals UpperFocus ( CONICSECTION: l )",
    "id": 2202,
    "declarations": "P: LINESEGMENT; l: CONICSECTION",
    "facts": "MidPoint(P) = UpperFocus(l)"
},
{
    "assertion": "PointOnCurve ( Center ( CONICSECTION: R ), CURVE: m ) equals BOOL: False",
    "id": 2203,
    "declarations": "R: CONICSECTION; m: CURVE; False: BOOL",
    "facts": "PointOnCurve(Center(R), m) = False"
},
{
    "assertion": "VectorOf ( POINT: u, Circumcenter ( TRIANGLE: A ) ) equals VECTOR: q",
    "id": 2204,
    "declarations": "u: POINT; A: TRIANGLE; q: VECTOR",
    "facts": "VectorOf(u, Circumcenter(A)) = q"
},
{
    "assertion": "Locus ( MidPoint ( LINESEGMENT: a ) ) equals CURVE: R",
    "id": 2205,
    "declarations": "a: LINESEGMENT; R: CURVE",
    "facts": "Locus(MidPoint(a)) = R"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Y ) equals RightVertex ( CONICSECTION: c )",
    "id": 2206,
    "declarations": "Y: TRIANGLE; c: CONICSECTION",
    "facts": "Orthocenter(Y) = RightVertex(c)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: v ) equals LeftVertex ( CONICSECTION: p )",
    "id": 2207,
    "declarations": "v: TRIANGLE; p: CONICSECTION",
    "facts": "Orthocenter(v) = LeftVertex(p)"
},
{
    "assertion": "lg ( NUMBER: -47 ) equals NUMBER: -94",
    "id": 2208,
    "declarations": "-47: NUMBER; -94: NUMBER",
    "facts": "lg(-47) = -94"
},
{
    "assertion": "Intercept ( PerpendicularBisector ( RealAxis ( ELLIPSE: B ) ), AXIS: xAxis ) equals NUMBER: 73",
    "id": 2209,
    "declarations": "B: ELLIPSE; xAxis: AXIS; 73: NUMBER",
    "facts": "Intercept(PerpendicularBisector(RealAxis(B)), xAxis) = 73"
},
{
    "assertion": "Asymptote ( HYPERBOLA: E ) equals LINE: V",
    "id": 2210,
    "declarations": "E: HYPERBOLA; V: LINE",
    "facts": "Asymptote(E) = V"
},
{
    "assertion": "MidPoint ( LINESEGMENT: S ) equals POINT: d",
    "id": 2212,
    "declarations": "S: LINESEGMENT; d: POINT",
    "facts": "MidPoint(S) = d"
},
{
    "assertion": "Eccentricity ( CONICSECTION: C ) equals Abs ( LINESEGMENT: G )",
    "id": 2213,
    "declarations": "C: CONICSECTION; G: LINESEGMENT",
    "facts": "Eccentricity(C) = Abs(G)"
},
{
    "assertion": "Vertex ( CONICSECTION: e ) equals RightFocus ( CONICSECTION: i )",
    "id": 2214,
    "declarations": "e: CONICSECTION; i: CONICSECTION",
    "facts": "Vertex(e) = RightFocus(i)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: c ) equals POINT: F",
    "id": 2215,
    "declarations": "c: CONICSECTION; F: POINT",
    "facts": "LeftVertex(c) = F"
},
{
    "assertion": "MinorAxis ( ELLIPSE: V ) equals ImaginaryAxis ( ELLIPSE: B )",
    "id": 2216,
    "declarations": "V: ELLIPSE; B: ELLIPSE",
    "facts": "MinorAxis(V) = ImaginaryAxis(B)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: z ) equals InterceptChord ( LINE: Y, CONICSECTION: B )",
    "id": 2217,
    "declarations": "z: ELLIPSE; Y: LINE; B: CONICSECTION",
    "facts": "ImaginaryAxis(z) = InterceptChord(Y, B)"
},
{
    "assertion": "Incenter ( TRIANGLE: K ) equals UpperVertex ( CONICSECTION: H )",
    "id": 2218,
    "declarations": "K: TRIANGLE; H: CONICSECTION",
    "facts": "Incenter(K) = UpperVertex(H)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: h ) equals POINT: E",
    "id": 2219,
    "declarations": "h: CONICSECTION; E: POINT",
    "facts": "LeftFocus(h) = E"
},
{
    "assertion": "MajorAxis ( ELLIPSE: F ) equals RealAxis ( ELLIPSE: M )",
    "id": 2220,
    "declarations": "F: ELLIPSE; M: ELLIPSE",
    "facts": "MajorAxis(F) = RealAxis(M)"
},
{
    "assertion": "InterceptChord ( PerpendicularBisector ( MajorAxis ( ELLIPSE: V ) ), CONICSECTION: j ) equals LINESEGMENT: V",
    "id": 2221,
    "declarations": "V: ELLIPSE; j: CONICSECTION; V: LINESEGMENT",
    "facts": "InterceptChord(PerpendicularBisector(MajorAxis(V)), j) = V"
},
{
    "assertion": "RightFocus ( CONICSECTION: V ) equals MidPoint ( LINESEGMENT: c )",
    "id": 2222,
    "declarations": "V: CONICSECTION; c: LINESEGMENT",
    "facts": "RightFocus(V) = MidPoint(c)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: b ) equals PerpendicularBisector ( LINESEGMENT: h )",
    "id": 2223,
    "declarations": "b: LINESEGMENT; h: LINESEGMENT",
    "facts": "PerpendicularBisector(b) = PerpendicularBisector(h)"
},
{
    "assertion": "Quadrant ( LowerVertex ( CONICSECTION: k ) ) equals NUMBER: 55",
    "id": 2224,
    "declarations": "k: CONICSECTION; 55: NUMBER",
    "facts": "Quadrant(LowerVertex(k)) = 55"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: K ) ) equals HalfFocalLength ( CONICSECTION: D )",
    "id": 2225,
    "declarations": "K: CONICSECTION; D: CONICSECTION",
    "facts": "Quadrant(LeftVertex(K)) = HalfFocalLength(D)"
},
{
    "assertion": "Area ( CONICSECTION: Q ) equals InterReciprocal ( YCoordinate ( LeftFocus ( CONICSECTION: p ) ) )",
    "id": 2226,
    "declarations": "Q: CONICSECTION; p: CONICSECTION",
    "facts": "Area(Q) = InterReciprocal(YCoordinate(LeftFocus(p)))"
},
{
    "assertion": "Vertex ( CONICSECTION: M ) equals POINT: f",
    "id": 2227,
    "declarations": "M: CONICSECTION; f: POINT",
    "facts": "Vertex(M) = f"
},
{
    "assertion": "Intersection ( CURVE: n, CURVE: I ) equals UpperFocus ( CONICSECTION: w )",
    "id": 2228,
    "declarations": "n: CURVE; I: CURVE; w: CONICSECTION",
    "facts": "Intersection(n, I) = UpperFocus(w)"
},
{
    "assertion": "Max ( NUMBER: -35 ) equals lg ( NumIntersection ( CURVE: y, CURVE: k ) )",
    "id": 2229,
    "declarations": "-35: NUMBER; y: CURVE; k: CURVE",
    "facts": "Max(-35) = lg(NumIntersection(y, k))"
},
{
    "assertion": "Expression ( CURVE: P ) equals EXPRESSION: x^2*space+*space4*y^2*space=*space16",
    "id": 2230,
    "declarations": "P: CURVE; x^2*space+*space4*y^2*space=*space16: EXPRESSION",
    "facts": "Expression(P) = x^2*space+*space4*y^2*space=*space16"
},
{
    "assertion": "CircumCircle ( TriangleOf ( LowerVertex ( CONICSECTION: l ), LowerVertex ( CONICSECTION: M ), Circumcenter ( TRIANGLE: B ) ) ) equals CIRCLE: u",
    "id": 2231,
    "declarations": "l: CONICSECTION; M: CONICSECTION; B: TRIANGLE; u: CIRCLE",
    "facts": "CircumCircle(TriangleOf(LowerVertex(l), LowerVertex(M), Circumcenter(B))) = u"
},
{
    "assertion": "LowerVertex ( CONICSECTION: Q ) equals LeftFocus ( CONICSECTION: G )",
    "id": 2232,
    "declarations": "Q: CONICSECTION; G: CONICSECTION",
    "facts": "LowerVertex(Q) = LeftFocus(G)"
},
{
    "assertion": "Quadrant ( POINT: e ) equals sqrt ( NUMBER: -67 )",
    "id": 2233,
    "declarations": "e: POINT; -67: NUMBER",
    "facts": "Quadrant(e) = sqrt(-67)"
},
{
    "assertion": "PointOnCurve ( UpperFocus ( CONICSECTION: b ), CURVE: c ) equals BOOL: True",
    "id": 2234,
    "declarations": "b: CONICSECTION; c: CURVE; True: BOOL",
    "facts": "PointOnCurve(UpperFocus(b), c) = True"
},
{
    "assertion": "Length ( LineSegmentOf ( LowerFocus ( CONICSECTION: Q ), LowerVertex ( CONICSECTION: S ) ) ) equals Slope ( LINE: K )",
    "id": 2235,
    "declarations": "Q: CONICSECTION; S: CONICSECTION; K: LINE",
    "facts": "Length(LineSegmentOf(LowerFocus(Q), LowerVertex(S))) = Slope(K)"
},
{
    "assertion": "LineOf ( MidPoint ( LINESEGMENT: A ), POINT: a ) equals RightDirectrix ( CONICSECTION: f )",
    "id": 2236,
    "declarations": "A: LINESEGMENT; a: POINT; f: CONICSECTION",
    "facts": "LineOf(MidPoint(A), a) = RightDirectrix(f)"
},
{
    "assertion": "Abs ( LINESEGMENT: U ) equals HalfFocalLength ( CONICSECTION: T )",
    "id": 2237,
    "declarations": "U: LINESEGMENT; T: CONICSECTION",
    "facts": "Abs(U) = HalfFocalLength(T)"
},
{
    "assertion": "Min ( NUMBER: 71 ) equals NUMBER: 94",
    "id": 2238,
    "declarations": "71: NUMBER; 94: NUMBER",
    "facts": "Min(71) = 94"
},
{
    "assertion": "XCoordinate ( POINT: U ) equals NUMBER: -45",
    "id": 2239,
    "declarations": "U: POINT; -45: NUMBER",
    "facts": "XCoordinate(U) = -45"
},
{
    "assertion": "PointOnCurve ( RightVertex ( CONICSECTION: I ), CURVE: S ) equals BOOL: False",
    "id": 2240,
    "declarations": "I: CONICSECTION; S: CURVE; False: BOOL",
    "facts": "PointOnCurve(RightVertex(I), S) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: z, TRIANGLE: Z ) equals BOOL: True",
    "id": 2241,
    "declarations": "z: CIRCLE; Z: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(z, Z) = True"
},
{
    "assertion": "TangentOfPoint ( RightVertex ( CONICSECTION: m ), CURVE: m ) equals LINE: B",
    "id": 2242,
    "declarations": "m: CONICSECTION; m: CURVE; B: LINE",
    "facts": "TangentOfPoint(RightVertex(m), m) = B"
},
{
    "assertion": "Asymptote ( HYPERBOLA: g ) equals LINE: o",
    "id": 2243,
    "declarations": "g: HYPERBOLA; o: LINE",
    "facts": "Asymptote(g) = o"
},
{
    "assertion": "RightFocus ( CONICSECTION: p ) equals POINT: J",
    "id": 2244,
    "declarations": "p: CONICSECTION; J: POINT",
    "facts": "RightFocus(p) = J"
},
{
    "assertion": "TangentOnPoint ( LowerFocus ( CONICSECTION: O ), LeftPart ( HYPERBOLA: J ) ) equals RightDirectrix ( CONICSECTION: n )",
    "id": 2245,
    "declarations": "O: CONICSECTION; J: HYPERBOLA; n: CONICSECTION",
    "facts": "TangentOnPoint(LowerFocus(O), LeftPart(J)) = RightDirectrix(n)"
},
{
    "assertion": "MidPoint ( RealAxis ( ELLIPSE: H ) ) equals Projection ( Circumcenter ( TRIANGLE: Q ), LINE: V )",
    "id": 2246,
    "declarations": "H: ELLIPSE; Q: TRIANGLE; V: LINE",
    "facts": "MidPoint(RealAxis(H)) = Projection(Circumcenter(Q), V)"
},
{
    "assertion": "RightPart ( HYPERBOLA: C ) equals CURVE: B",
    "id": 2247,
    "declarations": "C: HYPERBOLA; B: CURVE",
    "facts": "RightPart(C) = B"
},
{
    "assertion": "UpperFocus ( CONICSECTION: b ) equals POINT: A",
    "id": 2248,
    "declarations": "b: CONICSECTION; A: POINT",
    "facts": "UpperFocus(b) = A"
},
{
    "assertion": "UpperVertex ( CONICSECTION: j ) equals LeftVertex ( CONICSECTION: i )",
    "id": 2249,
    "declarations": "j: CONICSECTION; i: CONICSECTION",
    "facts": "UpperVertex(j) = LeftVertex(i)"
},
{
    "assertion": "Focus ( CONICSECTION: d ) equals LowerVertex ( CONICSECTION: u )",
    "id": 2250,
    "declarations": "d: CONICSECTION; u: CONICSECTION",
    "facts": "Focus(d) = LowerVertex(u)"
},
{
    "assertion": "FocalLength ( CONICSECTION: C ) equals InterReciprocal ( YCoordinate ( Orthocenter ( TRIANGLE: I ) ) )",
    "id": 2251,
    "declarations": "C: CONICSECTION; I: TRIANGLE",
    "facts": "FocalLength(C) = InterReciprocal(YCoordinate(Orthocenter(I)))"
},
{
    "assertion": "Perimeter ( CONICSECTION: k ) equals Min ( NUMBER: 61 )",
    "id": 2252,
    "declarations": "k: CONICSECTION; 61: NUMBER",
    "facts": "Perimeter(k) = Min(61)"
},
{
    "assertion": "Inclination ( OverlappingLine ( LINESEGMENT: I ) ) equals Inclination ( LINE: r )",
    "id": 2253,
    "declarations": "I: LINESEGMENT; r: LINE",
    "facts": "Inclination(OverlappingLine(I)) = Inclination(r)"
},
{
    "assertion": "Quadrant ( POINT: D ) equals NUMBER: -78",
    "id": 2254,
    "declarations": "D: POINT; -78: NUMBER",
    "facts": "Quadrant(D) = -78"
},
{
    "assertion": "ApplyUnit ( NUMBER: -84, DEGREESTR: degree )",
    "id": 2255,
    "declarations": "-84: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-84, degree) = dummy_operator()"
},
{
    "assertion": "PointOnCurve ( LeftVertex ( CONICSECTION: O ), LeftPart ( HYPERBOLA: y ) ) equals BOOL: False",
    "id": 2256,
    "declarations": "O: CONICSECTION; y: HYPERBOLA; False: BOOL",
    "facts": "PointOnCurve(LeftVertex(O), LeftPart(y)) = False"
},
{
    "assertion": "InterceptChord ( OverlappingLine ( LINESEGMENT: R ), CONICSECTION: K ) equals MinorAxis ( ELLIPSE: f )",
    "id": 2257,
    "declarations": "R: LINESEGMENT; K: CONICSECTION; f: ELLIPSE",
    "facts": "InterceptChord(OverlappingLine(R), K) = MinorAxis(f)"
},
{
    "assertion": "lg ( Quadrant ( POINT: C ) ) equals HalfFocalLength ( CONICSECTION: e )",
    "id": 2258,
    "declarations": "C: POINT; e: CONICSECTION",
    "facts": "lg(Quadrant(C)) = HalfFocalLength(e)"
},
{
    "assertion": "RightPart ( HYPERBOLA: Q ) equals CURVE: h",
    "id": 2259,
    "declarations": "Q: HYPERBOLA; h: CURVE",
    "facts": "RightPart(Q) = h"
},
{
    "assertion": "Diameter ( CIRCLE: w ) equals sqrt ( Perimeter ( CONICSECTION: r ) )",
    "id": 2260,
    "declarations": "w: CIRCLE; r: CONICSECTION",
    "facts": "Diameter(w) = sqrt(Perimeter(r))"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: F ) equals LINE: L",
    "id": 2261,
    "declarations": "F: LINESEGMENT; L: LINE",
    "facts": "PerpendicularBisector(F) = L"
},
{
    "assertion": "Directrix ( CONICSECTION: C ) equals LINE: R",
    "id": 2262,
    "declarations": "C: CONICSECTION; R: LINE",
    "facts": "Directrix(C) = R"
},
{
    "assertion": "Orthocenter ( TRIANGLE: K ) equals POINT: O",
    "id": 2263,
    "declarations": "K: TRIANGLE; O: POINT",
    "facts": "Orthocenter(K) = O"
},
{
    "assertion": "RightPart ( HYPERBOLA: J ) equals CURVE: D",
    "id": 2264,
    "declarations": "J: HYPERBOLA; D: CURVE",
    "facts": "RightPart(J) = D"
},
{
    "assertion": "LocusEquation ( POINT: S ) equals LocusEquation ( LeftVertex ( CONICSECTION: r ) )",
    "id": 2265,
    "declarations": "S: POINT; r: CONICSECTION",
    "facts": "LocusEquation(S) = LocusEquation(LeftVertex(r))"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: Z ) equals OverlappingLine ( RealAxis ( ELLIPSE: h ) )",
    "id": 2266,
    "declarations": "Z: LINESEGMENT; h: ELLIPSE",
    "facts": "OverlappingLine(Z) = OverlappingLine(RealAxis(h))"
},
{
    "assertion": "Abs ( LINESEGMENT: h ) equals NUMBER: -83",
    "id": 2269,
    "declarations": "h: LINESEGMENT; -83: NUMBER",
    "facts": "Abs(h) = -83"
},
{
    "assertion": "ApplyUnit ( Slope ( LINE: N ), DEGREESTR: degree )",
    "id": 2270,
    "declarations": "N: LINE; degree: DEGREESTR",
    "facts": "ApplyUnit(Slope(N), degree) = dummy_operator()"
},
{
    "assertion": "LeftFocus ( CONICSECTION: d ) equals Projection ( POINT: N, PerpendicularBisector ( LINESEGMENT: w ) )",
    "id": 2271,
    "declarations": "d: CONICSECTION; N: POINT; w: LINESEGMENT",
    "facts": "LeftFocus(d) = Projection(N, PerpendicularBisector(w))"
},
{
    "assertion": "FocalLength ( CONICSECTION: G ) equals Length ( MinorAxis ( ELLIPSE: d ) )",
    "id": 2272,
    "declarations": "G: CONICSECTION; d: ELLIPSE",
    "facts": "FocalLength(G) = Length(MinorAxis(d))"
},
{
    "assertion": "Quadrant ( POINT: o ) equals NumIntersection ( CURVE: b, CURVE: U )",
    "id": 2273,
    "declarations": "o: POINT; b: CURVE; U: CURVE",
    "facts": "Quadrant(o) = NumIntersection(b, U)"
},
{
    "assertion": "Radius ( CIRCLE: c ) equals sqrt ( DotProduct ( VECTOR: o, VECTOR: W ) )",
    "id": 2274,
    "declarations": "c: CIRCLE; o: VECTOR; W: VECTOR",
    "facts": "Radius(c) = sqrt(DotProduct(o, W))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: F ) equals TangentOfPoint ( LeftVertex ( CONICSECTION: M ), CURVE: q )",
    "id": 2275,
    "declarations": "F: HYPERBOLA; M: CONICSECTION; q: CURVE",
    "facts": "Asymptote(F) = TangentOfPoint(LeftVertex(M), q)"
},
{
    "assertion": "Projection ( POINT: P, LINE: B ) equals POINT: d",
    "id": 2276,
    "declarations": "P: POINT; B: LINE; d: POINT",
    "facts": "Projection(P, B) = d"
},
{
    "assertion": "Area ( CONICSECTION: Q ) equals NUMBER: -17",
    "id": 2277,
    "declarations": "Q: CONICSECTION; -17: NUMBER",
    "facts": "Area(Q) = -17"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: q ) equals LINE: l",
    "id": 2278,
    "declarations": "q: LINESEGMENT; l: LINE",
    "facts": "PerpendicularBisector(q) = l"
},
{
    "assertion": "IsParallel ( LINE: P, LINE: l ) equals BOOL: True",
    "id": 2279,
    "declarations": "P: LINE; l: LINE; True: BOOL",
    "facts": "IsParallel(P, l) = True"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: V ) equals LINESEGMENT: P",
    "id": 2280,
    "declarations": "V: ELLIPSE; P: LINESEGMENT",
    "facts": "ImaginaryAxis(V) = P"
},
{
    "assertion": "sqrt ( Diameter ( CIRCLE: Z ) ) equals NUMBER: 32",
    "id": 2281,
    "declarations": "Z: CIRCLE; 32: NUMBER",
    "facts": "sqrt(Diameter(Z)) = 32"
},
{
    "assertion": "YCoordinate ( POINT: X ) equals YCoordinate ( RightVertex ( CONICSECTION: w ) )",
    "id": 2282,
    "declarations": "X: POINT; w: CONICSECTION",
    "facts": "YCoordinate(X) = YCoordinate(RightVertex(w))"
},
{
    "assertion": "Max ( NUMBER: -97 ) equals YCoordinate ( POINT: j )",
    "id": 2283,
    "declarations": "-97: NUMBER; j: POINT",
    "facts": "Max(-97) = YCoordinate(j)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: Y ) equals FootPoint ( LINE: V, LINE: b )",
    "id": 2284,
    "declarations": "Y: CONICSECTION; V: LINE; b: LINE",
    "facts": "LeftVertex(Y) = FootPoint(V, b)"
},
{
    "assertion": "TangentOnPoint ( LeftFocus ( CONICSECTION: x ), CURVE: r ) equals LINE: f",
    "id": 2285,
    "declarations": "x: CONICSECTION; r: CURVE; f: LINE",
    "facts": "TangentOnPoint(LeftFocus(x), r) = f"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: E ) equals TangentOfPoint ( POINT: R, CURVE: n )",
    "id": 2286,
    "declarations": "E: CONICSECTION; R: POINT; n: CURVE",
    "facts": "LeftDirectrix(E) = TangentOfPoint(R, n)"
},
{
    "assertion": "Intersection ( CURVE: B, CURVE: G ) equals POINT: Y",
    "id": 2287,
    "declarations": "B: CURVE; G: CURVE; Y: POINT",
    "facts": "Intersection(B, G) = Y"
},
{
    "assertion": "LeftFocus ( CONICSECTION: I ) equals Center ( CONICSECTION: c )",
    "id": 2288,
    "declarations": "I: CONICSECTION; c: CONICSECTION",
    "facts": "LeftFocus(I) = Center(c)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: h, CIRCLE: Q ) equals BOOL: True",
    "id": 2289,
    "declarations": "h: CIRCLE; Q: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(h, Q) = True"
},
{
    "assertion": "Vertex ( CONICSECTION: o ) equals POINT: G",
    "id": 2290,
    "declarations": "o: CONICSECTION; G: POINT",
    "facts": "Vertex(o) = G"
},
{
    "assertion": "MidPoint ( LINESEGMENT: h ) equals POINT: x",
    "id": 2291,
    "declarations": "h: LINESEGMENT; x: POINT",
    "facts": "MidPoint(h) = x"
},
{
    "assertion": "MinorAxis ( ELLIPSE: L ) equals LINESEGMENT: T",
    "id": 2292,
    "declarations": "L: ELLIPSE; T: LINESEGMENT",
    "facts": "MinorAxis(L) = T"
},
{
    "assertion": "Abs ( LINESEGMENT: n ) equals NUMBER: 33",
    "id": 2293,
    "declarations": "n: LINESEGMENT; 33: NUMBER",
    "facts": "Abs(n) = 33"
},
{
    "assertion": "IsOutTangent ( CIRCLE: P, CircumCircle ( TRIANGLE: E ) ) equals BOOL: False",
    "id": 2294,
    "declarations": "P: CIRCLE; E: TRIANGLE; False: BOOL",
    "facts": "IsOutTangent(P, CircumCircle(E)) = False"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: h ) ) equals UpperFocus ( CONICSECTION: R )",
    "id": 2295,
    "declarations": "h: ELLIPSE; R: CONICSECTION",
    "facts": "Endpoint(ImaginaryAxis(h)) = UpperFocus(R)"
},
{
    "assertion": "VectorOf ( LeftVertex ( CONICSECTION: h ), POINT: E ) equals VECTOR: k",
    "id": 2296,
    "declarations": "h: CONICSECTION; E: POINT; k: VECTOR",
    "facts": "VectorOf(LeftVertex(h), E) = k"
},
{
    "assertion": "PointOnCurve ( Incenter ( TRIANGLE: I ), CURVE: I ) equals BOOL: False",
    "id": 2297,
    "declarations": "I: TRIANGLE; I: CURVE; False: BOOL",
    "facts": "PointOnCurve(Incenter(I), I) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: k ) equals MidPoint ( LINESEGMENT: q )",
    "id": 2298,
    "declarations": "k: CONICSECTION; q: LINESEGMENT",
    "facts": "UpperFocus(k) = MidPoint(q)"
},
{
    "assertion": "Negation ( Length ( LINESEGMENT: F ) equals NUMBER: 64 ) equals BOOL: True",
    "id": 2299,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Inclination ( LINE: t ) equals HalfFocalLength ( CONICSECTION: Z )",
    "id": 2300,
    "declarations": "t: LINE; Z: CONICSECTION",
    "facts": "Inclination(t) = HalfFocalLength(Z)"
},
{
    "assertion": "Quadrant ( POINT: X ) equals Quadrant ( POINT: n )",
    "id": 2301,
    "declarations": "X: POINT; n: POINT",
    "facts": "Quadrant(X) = Quadrant(n)"
},
{
    "assertion": "Negation ( RightPart ( HYPERBOLA: P ) equals CURVE: e ) equals BOOL: False",
    "id": 2302,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Max ( Abs ( LINESEGMENT: D ) ) equals NUMBER: 59",
    "id": 2303,
    "declarations": "D: LINESEGMENT; 59: NUMBER",
    "facts": "Max(Abs(D)) = 59"
},
{
    "assertion": "RealAxis ( ELLIPSE: G ) equals LINESEGMENT: Q",
    "id": 2304,
    "declarations": "G: ELLIPSE; Q: LINESEGMENT",
    "facts": "RealAxis(G) = Q"
},
{
    "assertion": "MidPoint ( RealAxis ( ELLIPSE: C ) ) equals UpperVertex ( CONICSECTION: O )",
    "id": 2305,
    "declarations": "C: ELLIPSE; O: CONICSECTION",
    "facts": "MidPoint(RealAxis(C)) = UpperVertex(O)"
},
{
    "assertion": "InterReciprocal ( Inclination ( TangentOnPoint ( UpperFocus ( CONICSECTION: K ), CURVE: V ) ) ) equals Abs ( ImaginaryAxis ( ELLIPSE: B ) )",
    "id": 2306,
    "declarations": "K: CONICSECTION; V: CURVE; B: ELLIPSE",
    "facts": "InterReciprocal(Inclination(TangentOnPoint(UpperFocus(K), V))) = Abs(ImaginaryAxis(B))"
},
{
    "assertion": "Expression ( CURVE: C ) equals Expression ( CURVE: H )",
    "id": 2307,
    "declarations": "C: CURVE; H: CURVE",
    "facts": "Expression(C) = Expression(H)"
},
{
    "assertion": "MidPoint ( MinorAxis ( ELLIPSE: A ) ) equals Circumcenter ( TRIANGLE: p )",
    "id": 2308,
    "declarations": "A: ELLIPSE; p: TRIANGLE",
    "facts": "MidPoint(MinorAxis(A)) = Circumcenter(p)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: v ) equals MinorAxis ( ELLIPSE: X )",
    "id": 2309,
    "declarations": "v: ELLIPSE; X: ELLIPSE",
    "facts": "MajorAxis(v) = MinorAxis(X)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: M ) equals Radius ( CIRCLE: v )",
    "id": 2310,
    "declarations": "M: CONICSECTION; v: CIRCLE",
    "facts": "HalfFocalLength(M) = Radius(v)"
},
{
    "assertion": "Quadrant ( MidPoint ( LINESEGMENT: c ) ) equals NUMBER: 27",
    "id": 2311,
    "declarations": "c: LINESEGMENT; 27: NUMBER",
    "facts": "Quadrant(MidPoint(c)) = 27"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: x ) equals LINESEGMENT: w",
    "id": 2312,
    "declarations": "x: ELLIPSE; w: LINESEGMENT",
    "facts": "ImaginaryAxis(x) = w"
},
{
    "assertion": "PointOnCurve ( POINT: Z, CURVE: U ) equals BOOL: True",
    "id": 2313,
    "declarations": "Z: POINT; U: CURVE; True: BOOL",
    "facts": "PointOnCurve(Z, U) = True"
},
{
    "assertion": "TangentPoint ( LINE: I, CIRCLE: T ) equals POINT: x",
    "id": 2314,
    "declarations": "I: LINE; T: CIRCLE; x: POINT",
    "facts": "TangentPoint(I, T) = x"
},
{
    "assertion": "Inclination ( LINE: K ) equals Min ( Slope ( RightDirectrix ( CONICSECTION: H ) ) )",
    "id": 2315,
    "declarations": "K: LINE; H: CONICSECTION",
    "facts": "Inclination(K) = Min(Slope(RightDirectrix(H)))"
},
{
    "assertion": "RightVertex ( CONICSECTION: X ) equals POINT: U",
    "id": 2316,
    "declarations": "X: CONICSECTION; U: POINT",
    "facts": "RightVertex(X) = U"
},
{
    "assertion": "Negation ( ImaginaryAxis ( ELLIPSE: D ) equals MinorAxis ( ELLIPSE: U ) ) equals BOOL: False",
    "id": 2317,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsPerpendicular ( PerpendicularBisector ( LINESEGMENT: R ), LineOf ( FootPoint ( LINE: d, LINE: e ), POINT: R ) ) equals BOOL: True",
    "id": 2318,
    "declarations": "R: LINESEGMENT; d: LINE; e: LINE; R: POINT; True: BOOL",
    "facts": "IsPerpendicular(PerpendicularBisector(R), LineOf(FootPoint(d, e), R)) = True"
},
{
    "assertion": "NumIntersection ( CURVE: w, CURVE: K ) equals NUMBER: -79",
    "id": 2319,
    "declarations": "w: CURVE; K: CURVE; -79: NUMBER",
    "facts": "NumIntersection(w, K) = -79"
},
{
    "assertion": "MinorAxis ( ELLIPSE: m ) equals LINESEGMENT: c",
    "id": 2320,
    "declarations": "m: ELLIPSE; c: LINESEGMENT",
    "facts": "MinorAxis(m) = c"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: w ) ) equals HalfFocalLength ( CONICSECTION: W )",
    "id": 2321,
    "declarations": "w: TRIANGLE; W: CONICSECTION",
    "facts": "Radius(CircumCircle(w)) = HalfFocalLength(W)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: i ) equals LowerFocus ( CONICSECTION: W )",
    "id": 2322,
    "declarations": "i: CONICSECTION; W: CONICSECTION",
    "facts": "LeftFocus(i) = LowerFocus(W)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: j ) equals AXIS: xAxis",
    "id": 2323,
    "declarations": "j: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(j) = xAxis"
},
{
    "assertion": "Directrix ( CONICSECTION: s ) equals LINE: G",
    "id": 2324,
    "declarations": "s: CONICSECTION; G: LINE",
    "facts": "Directrix(s) = G"
},
{
    "assertion": "Endpoint ( LINESEGMENT: b ) equals Center ( CONICSECTION: G )",
    "id": 2325,
    "declarations": "b: LINESEGMENT; G: CONICSECTION",
    "facts": "Endpoint(b) = Center(G)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: e ) equals POINT: h",
    "id": 2326,
    "declarations": "e: CONICSECTION; h: POINT",
    "facts": "LeftFocus(e) = h"
},
{
    "assertion": "Orthocenter ( TRIANGLE: t ) equals POINT: R",
    "id": 2327,
    "declarations": "t: TRIANGLE; R: POINT",
    "facts": "Orthocenter(t) = R"
},
{
    "assertion": "XCoordinate ( Circumcenter ( TRIANGLE: Z ) ) equals NUMBER: -89",
    "id": 2328,
    "declarations": "Z: TRIANGLE; -89: NUMBER",
    "facts": "XCoordinate(Circumcenter(Z)) = -89"
},
{
    "assertion": "Intercept ( LineOf ( POINT: Q, POINT: f ), AXIS: xAxis ) equals NUMBER: -59",
    "id": 2329,
    "declarations": "Q: POINT; f: POINT; xAxis: AXIS; -59: NUMBER",
    "facts": "Intercept(LineOf(Q, f), xAxis) = -59"
},
{
    "assertion": "LowerVertex ( CONICSECTION: F ) equals FootPoint ( LINE: L, LineOf ( LeftVertex ( CONICSECTION: i ), LowerFocus ( CONICSECTION: G ) ) )",
    "id": 2330,
    "declarations": "F: CONICSECTION; L: LINE; i: CONICSECTION; G: CONICSECTION",
    "facts": "LowerVertex(F) = FootPoint(L, LineOf(LeftVertex(i), LowerFocus(G)))"
},
{
    "assertion": "Locus ( POINT: h ) equals CURVE: D",
    "id": 2331,
    "declarations": "h: POINT; D: CURVE",
    "facts": "Locus(h) = D"
},
{
    "assertion": "LineOf ( Center ( CONICSECTION: Y ), POINT: P ) equals LINE: x",
    "id": 2332,
    "declarations": "Y: CONICSECTION; P: POINT; x: LINE",
    "facts": "LineOf(Center(Y), P) = x"
},
{
    "assertion": "Radius ( CIRCLE: S ) equals NUMBER: -8",
    "id": 2333,
    "declarations": "S: CIRCLE; -8: NUMBER",
    "facts": "Radius(S) = -8"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: n, CIRCLE: U ) equals BOOL: False",
    "id": 2334,
    "declarations": "n: LINESEGMENT; U: CIRCLE; False: BOOL",
    "facts": "IsDiameter(n, U) = False"
},
{
    "assertion": "TriangleOf ( POINT: k, Orthocenter ( TRIANGLE: M ), POINT: w ) equals TRIANGLE: w",
    "id": 2335,
    "declarations": "k: POINT; M: TRIANGLE; w: POINT; w: TRIANGLE",
    "facts": "TriangleOf(k, Orthocenter(M), w) = w"
},
{
    "assertion": "Vertex ( CONICSECTION: v ) equals RightVertex ( CONICSECTION: x )",
    "id": 2336,
    "declarations": "v: CONICSECTION; x: CONICSECTION",
    "facts": "Vertex(v) = RightVertex(x)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: f ) equals AXIS: yAxis",
    "id": 2337,
    "declarations": "f: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(f) = yAxis"
},
{
    "assertion": "Focus ( CONICSECTION: Q ) equals LeftFocus ( CONICSECTION: O )",
    "id": 2338,
    "declarations": "Q: CONICSECTION; O: CONICSECTION",
    "facts": "Focus(Q) = LeftFocus(O)"
},
{
    "assertion": "Vertex ( CONICSECTION: N ) equals FootPoint ( LINE: m, LINE: J )",
    "id": 2339,
    "declarations": "N: CONICSECTION; m: LINE; J: LINE",
    "facts": "Vertex(N) = FootPoint(m, J)"
},
{
    "assertion": "Radius ( CIRCLE: H ) equals NUMBER: 71",
    "id": 2340,
    "declarations": "H: CIRCLE; 71: NUMBER",
    "facts": "Radius(H) = 71"
},
{
    "assertion": "Quadrant ( Incenter ( TRIANGLE: k ) ) equals Slope ( LINE: G )",
    "id": 2341,
    "declarations": "k: TRIANGLE; G: LINE",
    "facts": "Quadrant(Incenter(k)) = Slope(G)"
},
{
    "assertion": "lg ( NUMBER: -25 ) equals InterReciprocal ( Intercept ( LINE: e, AXIS: xAxis ) )",
    "id": 2342,
    "declarations": "-25: NUMBER; e: LINE; xAxis: AXIS",
    "facts": "lg(-25) = InterReciprocal(Intercept(e, xAxis))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: n ) equals POINT: B",
    "id": 2343,
    "declarations": "n: CONICSECTION; B: POINT",
    "facts": "UpperVertex(n) = B"
},
{
    "assertion": "VectorOf ( POINT: J, POINT: k ) equals VECTOR: O",
    "id": 2344,
    "declarations": "J: POINT; k: POINT; O: VECTOR",
    "facts": "VectorOf(J, k) = O"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: o ) equals LINE: r",
    "id": 2345,
    "declarations": "o: CONICSECTION; r: LINE",
    "facts": "LeftDirectrix(o) = r"
},
{
    "assertion": "Negation ( Distance ( POINT: J, POINT: Z ) equals Slope ( LINE: y ) ) equals BOOL: False",
    "id": 2346,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightPart ( HYPERBOLA: k ) equals CURVE: A",
    "id": 2347,
    "declarations": "k: HYPERBOLA; A: CURVE",
    "facts": "RightPart(k) = A"
},
{
    "assertion": "Vertex ( CONICSECTION: Q ) equals Center ( CONICSECTION: j )",
    "id": 2348,
    "declarations": "Q: CONICSECTION; j: CONICSECTION",
    "facts": "Vertex(Q) = Center(j)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: f ) equals LINESEGMENT: q",
    "id": 2349,
    "declarations": "f: ELLIPSE; q: LINESEGMENT",
    "facts": "MinorAxis(f) = q"
},
{
    "assertion": "LeftVertex ( CONICSECTION: s ) equals POINT: u",
    "id": 2350,
    "declarations": "s: CONICSECTION; u: POINT",
    "facts": "LeftVertex(s) = u"
},
{
    "assertion": "DotProduct ( VECTOR: G, VECTOR: l ) equals NumIntersection ( CURVE: k, CURVE: V )",
    "id": 2351,
    "declarations": "G: VECTOR; l: VECTOR; k: CURVE; V: CURVE",
    "facts": "DotProduct(G, l) = NumIntersection(k, V)"
},
{
    "assertion": "FootPoint ( LINE: u, OverlappingLine ( LINESEGMENT: D ) ) equals RightVertex ( CONICSECTION: a )",
    "id": 2352,
    "declarations": "u: LINE; D: LINESEGMENT; a: CONICSECTION",
    "facts": "FootPoint(u, OverlappingLine(D)) = RightVertex(a)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: X ) equals LINESEGMENT: n",
    "id": 2353,
    "declarations": "X: ELLIPSE; n: LINESEGMENT",
    "facts": "MinorAxis(X) = n"
},
{
    "assertion": "And ( LocusEquation ( LowerFocus ( CONICSECTION: D ) ) equals EXPRESSION: y*space=*spacee^x, RightPart ( HYPERBOLA: D ) equals CURVE: x ) equals BOOL: True",
    "id": 2354,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LowerVertex ( CONICSECTION: k ) equals LowerFocus ( CONICSECTION: F )",
    "id": 2355,
    "declarations": "k: CONICSECTION; F: CONICSECTION",
    "facts": "LowerVertex(k) = LowerFocus(F)"
},
{
    "assertion": "LineSegmentOf ( UpperVertex ( CONICSECTION: Z ), POINT: B ) equals LINESEGMENT: q",
    "id": 2356,
    "declarations": "Z: CONICSECTION; B: POINT; q: LINESEGMENT",
    "facts": "LineSegmentOf(UpperVertex(Z), B) = q"
},
{
    "assertion": "MajorAxis ( ELLIPSE: O ) equals LINESEGMENT: J",
    "id": 2357,
    "declarations": "O: ELLIPSE; J: LINESEGMENT",
    "facts": "MajorAxis(O) = J"
},
{
    "assertion": "FootPoint ( LINE: b, LINE: c ) equals Circumcenter ( TRIANGLE: o )",
    "id": 2358,
    "declarations": "b: LINE; c: LINE; o: TRIANGLE",
    "facts": "FootPoint(b, c) = Circumcenter(o)"
},
{
    "assertion": "Center ( CONICSECTION: F ) equals POINT: R",
    "id": 2359,
    "declarations": "F: CONICSECTION; R: POINT",
    "facts": "Center(F) = R"
},
{
    "assertion": "Distance ( Center ( CONICSECTION: U ), Center ( CONICSECTION: U ) ) equals Area ( CONICSECTION: L )",
    "id": 2360,
    "declarations": "U: CONICSECTION; U: CONICSECTION; L: CONICSECTION",
    "facts": "Distance(Center(U), Center(U)) = Area(L)"
},
{
    "assertion": "TriangleOf ( POINT: p, Center ( CONICSECTION: K ), Orthocenter ( TRIANGLE: H ) ) equals TRIANGLE: p",
    "id": 2361,
    "declarations": "p: POINT; K: CONICSECTION; H: TRIANGLE; p: TRIANGLE",
    "facts": "TriangleOf(p, Center(K), Orthocenter(H)) = p"
},
{
    "assertion": "TangentOnPoint ( LeftFocus ( CONICSECTION: m ), CURVE: V ) equals LINE: g",
    "id": 2362,
    "declarations": "m: CONICSECTION; V: CURVE; g: LINE",
    "facts": "TangentOnPoint(LeftFocus(m), V) = g"
},
{
    "assertion": "lg ( NUMBER: -6 ) equals NUMBER: 29",
    "id": 2363,
    "declarations": "-6: NUMBER; 29: NUMBER",
    "facts": "lg(-6) = 29"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: M, TRIANGLE: d ) equals BOOL: True",
    "id": 2364,
    "declarations": "M: CIRCLE; d: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(M, d) = True"
},
{
    "assertion": "Min ( sqrt ( Slope ( LINE: Y ) ) ) equals DotProduct ( VECTOR: l, VECTOR: x )",
    "id": 2365,
    "declarations": "Y: LINE; l: VECTOR; x: VECTOR",
    "facts": "Min(sqrt(Slope(Y))) = DotProduct(l, x)"
},
{
    "assertion": "Expression ( CURVE: C ) equals EXPRESSION: x^2/4*space+*spacey^2/9*space=*space1",
    "id": 2366,
    "declarations": "C: CURVE; x^2/4*space+*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "Expression(C) = x^2/4*space+*spacey^2/9*space=*space1"
},
{
    "assertion": "Eccentricity ( CONICSECTION: K ) equals Area ( CONICSECTION: w )",
    "id": 2367,
    "declarations": "K: CONICSECTION; w: CONICSECTION",
    "facts": "Eccentricity(K) = Area(w)"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: B ) ) equals Inclination ( PerpendicularBisector ( MinorAxis ( ELLIPSE: m ) ) )",
    "id": 2368,
    "declarations": "B: CONICSECTION; m: ELLIPSE",
    "facts": "Slope(RightDirectrix(B)) = Inclination(PerpendicularBisector(MinorAxis(m)))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: J ) equals PerpendicularBisector ( LINESEGMENT: p )",
    "id": 2369,
    "declarations": "J: CONICSECTION; p: LINESEGMENT",
    "facts": "RightDirectrix(J) = PerpendicularBisector(p)"
},
{
    "assertion": "Center ( CONICSECTION: F ) equals LowerVertex ( CONICSECTION: B )",
    "id": 2370,
    "declarations": "F: CONICSECTION; B: CONICSECTION",
    "facts": "Center(F) = LowerVertex(B)"
},
{
    "assertion": "Projection ( LowerFocus ( CONICSECTION: G ), LINE: y ) equals POINT: J",
    "id": 2371,
    "declarations": "G: CONICSECTION; y: LINE; J: POINT",
    "facts": "Projection(LowerFocus(G), y) = J"
},
{
    "assertion": "FocalLength ( CONICSECTION: I ) equals XCoordinate ( Incenter ( TriangleOf ( FootPoint ( LINE: F, TangentOfPoint ( MidPoint ( LINESEGMENT: t ), CURVE: e ) ), POINT: C, Circumcenter ( TRIANGLE: s ) ) ) )",
    "id": 2372,
    "declarations": "I: CONICSECTION; F: LINE; t: LINESEGMENT; e: CURVE; C: POINT; s: TRIANGLE",
    "facts": "FocalLength(I) = XCoordinate(Incenter(TriangleOf(FootPoint(F, TangentOfPoint(MidPoint(t), e)), C, Circumcenter(s))))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: m ) equals LeftFocus ( CONICSECTION: q )",
    "id": 2373,
    "declarations": "m: TRIANGLE; q: CONICSECTION",
    "facts": "Orthocenter(m) = LeftFocus(q)"
},
{
    "assertion": "TangentOnPoint ( UpperVertex ( CONICSECTION: X ), CURVE: t ) equals LINE: W",
    "id": 2374,
    "declarations": "X: CONICSECTION; t: CURVE; W: LINE",
    "facts": "TangentOnPoint(UpperVertex(X), t) = W"
},
{
    "assertion": "Endpoint ( LINESEGMENT: V ) equals POINT: k",
    "id": 2375,
    "declarations": "V: LINESEGMENT; k: POINT",
    "facts": "Endpoint(V) = k"
},
{
    "assertion": "LocusEquation ( POINT: C ) equals EXPRESSION: y*space=*spacetan(x)",
    "id": 2376,
    "declarations": "C: POINT; y*space=*spacetan(x): EXPRESSION",
    "facts": "LocusEquation(C) = y*space=*spacetan(x)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: F, CONICSECTION: y ) equals BOOL: True",
    "id": 2377,
    "declarations": "F: LINESEGMENT; y: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(F, y) = True"
},
{
    "assertion": "Expression ( CURVE: j ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 2378,
    "declarations": "j: CURVE; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "Expression(j) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "TangentOnPoint ( UpperFocus ( CONICSECTION: p ), CURVE: I ) equals LINE: s",
    "id": 2379,
    "declarations": "p: CONICSECTION; I: CURVE; s: LINE",
    "facts": "TangentOnPoint(UpperFocus(p), I) = s"
},
{
    "assertion": "MidPoint ( InterceptChord ( PerpendicularBisector ( MinorAxis ( ELLIPSE: e ) ), CONICSECTION: X ) ) equals POINT: X",
    "id": 2380,
    "declarations": "e: ELLIPSE; X: CONICSECTION; X: POINT",
    "facts": "MidPoint(InterceptChord(PerpendicularBisector(MinorAxis(e)), X)) = X"
},
{
    "assertion": "Directrix ( CONICSECTION: G ) equals LINE: E",
    "id": 2381,
    "declarations": "G: CONICSECTION; E: LINE",
    "facts": "Directrix(G) = E"
},
{
    "assertion": "Negation ( UpperVertex ( CONICSECTION: V ) equals POINT: F ) equals BOOL: False",
    "id": 2382,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RealAxis ( ELLIPSE: P ) equals ImaginaryAxis ( ELLIPSE: I )",
    "id": 2383,
    "declarations": "P: ELLIPSE; I: ELLIPSE",
    "facts": "RealAxis(P) = ImaginaryAxis(I)"
},
{
    "assertion": "DotProduct ( VECTOR: s, VECTOR: a ) equals Area ( CONICSECTION: J )",
    "id": 2384,
    "declarations": "s: VECTOR; a: VECTOR; J: CONICSECTION",
    "facts": "DotProduct(s, a) = Area(J)"
},
{
    "assertion": "Abs ( LINESEGMENT: g ) equals FocalLength ( CONICSECTION: B )",
    "id": 2385,
    "declarations": "g: LINESEGMENT; B: CONICSECTION",
    "facts": "Abs(g) = FocalLength(B)"
},
{
    "assertion": "Intercept ( LINE: V, AXIS: yAxis ) equals Slope ( PerpendicularBisector ( LINESEGMENT: D ) )",
    "id": 2386,
    "declarations": "V: LINE; yAxis: AXIS; D: LINESEGMENT",
    "facts": "Intercept(V, yAxis) = Slope(PerpendicularBisector(D))"
},
{
    "assertion": "Diameter ( CircumCircle ( TriangleOf ( LowerVertex ( CONICSECTION: K ), POINT: t, POINT: Z ) ) ) equals NUMBER: -68",
    "id": 2387,
    "declarations": "K: CONICSECTION; t: POINT; Z: POINT; -68: NUMBER",
    "facts": "Diameter(CircumCircle(TriangleOf(LowerVertex(K), t, Z))) = -68"
},
{
    "assertion": "Abs ( MajorAxis ( ELLIPSE: O ) ) equals Length ( LINESEGMENT: A )",
    "id": 2388,
    "declarations": "O: ELLIPSE; A: LINESEGMENT",
    "facts": "Abs(MajorAxis(O)) = Length(A)"
},
{
    "assertion": "Distance ( Incenter ( TRIANGLE: H ), Circumcenter ( TRIANGLE: Y ) ) equals Slope ( LINE: E )",
    "id": 2389,
    "declarations": "H: TRIANGLE; Y: TRIANGLE; E: LINE",
    "facts": "Distance(Incenter(H), Circumcenter(Y)) = Slope(E)"
},
{
    "assertion": "RightVertex ( CONICSECTION: Y ) equals POINT: N",
    "id": 2390,
    "declarations": "Y: CONICSECTION; N: POINT",
    "facts": "RightVertex(Y) = N"
},
{
    "assertion": "Intercept ( LINE: w, AXIS: yAxis ) equals YCoordinate ( Circumcenter ( TRIANGLE: R ) )",
    "id": 2391,
    "declarations": "w: LINE; yAxis: AXIS; R: TRIANGLE",
    "facts": "Intercept(w, yAxis) = YCoordinate(Circumcenter(R))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: W ) equals Min ( Radius ( CIRCLE: N ) )",
    "id": 2392,
    "declarations": "W: CONICSECTION; N: CIRCLE",
    "facts": "HalfFocalLength(W) = Min(Radius(N))"
},
{
    "assertion": "InterceptChord ( LINE: x, CONICSECTION: o ) equals LINESEGMENT: n",
    "id": 2393,
    "declarations": "x: LINE; o: CONICSECTION; n: LINESEGMENT",
    "facts": "InterceptChord(x, o) = n"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: B, CONICSECTION: e ) equals BOOL: True",
    "id": 2394,
    "declarations": "B: LINESEGMENT; e: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(B, e) = True"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: j ) equals LINESEGMENT: j",
    "id": 2395,
    "declarations": "j: ELLIPSE; j: LINESEGMENT",
    "facts": "ImaginaryAxis(j) = j"
},
{
    "assertion": "RealAxis ( ELLIPSE: S ) equals LINESEGMENT: Y",
    "id": 2396,
    "declarations": "S: ELLIPSE; Y: LINESEGMENT",
    "facts": "RealAxis(S) = Y"
},
{
    "assertion": "TriangleOf ( MidPoint ( LINESEGMENT: D ), RightVertex ( CONICSECTION: B ), POINT: o ) equals TRIANGLE: J",
    "id": 2397,
    "declarations": "D: LINESEGMENT; B: CONICSECTION; o: POINT; J: TRIANGLE",
    "facts": "TriangleOf(MidPoint(D), RightVertex(B), o) = J"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: D ) equals LINE: L",
    "id": 2398,
    "declarations": "D: LINESEGMENT; L: LINE",
    "facts": "PerpendicularBisector(D) = L"
},
{
    "assertion": "Abs ( LINESEGMENT: K ) equals NumIntersection ( CURVE: N, CURVE: z )",
    "id": 2399,
    "declarations": "K: LINESEGMENT; N: CURVE; z: CURVE",
    "facts": "Abs(K) = NumIntersection(N, z)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: M ) equals POINT: b",
    "id": 2400,
    "declarations": "M: TRIANGLE; b: POINT",
    "facts": "Orthocenter(M) = b"
},
{
    "assertion": "XCoordinate ( POINT: V ) equals NUMBER: -90",
    "id": 2401,
    "declarations": "V: POINT; -90: NUMBER",
    "facts": "XCoordinate(V) = -90"
},
{
    "assertion": "RightPart ( HYPERBOLA: Y ) equals CURVE: W",
    "id": 2402,
    "declarations": "Y: HYPERBOLA; W: CURVE",
    "facts": "RightPart(Y) = W"
},
{
    "assertion": "XCoordinate ( POINT: N ) equals sqrt ( XCoordinate ( LeftFocus ( CONICSECTION: f ) ) )",
    "id": 2403,
    "declarations": "N: POINT; f: CONICSECTION",
    "facts": "XCoordinate(N) = sqrt(XCoordinate(LeftFocus(f)))"
},
{
    "assertion": "Area ( CONICSECTION: k ) equals YCoordinate ( Projection ( LowerFocus ( CONICSECTION: G ), LINE: K ) )",
    "id": 2404,
    "declarations": "k: CONICSECTION; G: CONICSECTION; K: LINE",
    "facts": "Area(k) = YCoordinate(Projection(LowerFocus(G), K))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: T ) equals LINE: g",
    "id": 2405,
    "declarations": "T: HYPERBOLA; g: LINE",
    "facts": "Asymptote(T) = g"
},
{
    "assertion": "And ( Perimeter ( CONICSECTION: H ) equals Intercept ( LINE: C, AXIS: yAxis ), TangentOnPoint ( POINT: a, CURVE: o ) equals LINE: v ) equals BOOL: True",
    "id": 2406,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MajorAxis ( ELLIPSE: O ) equals LINESEGMENT: p",
    "id": 2407,
    "declarations": "O: ELLIPSE; p: LINESEGMENT",
    "facts": "MajorAxis(O) = p"
},
{
    "assertion": "LowerFocus ( CONICSECTION: l ) equals MidPoint ( LINESEGMENT: k )",
    "id": 2408,
    "declarations": "l: CONICSECTION; k: LINESEGMENT",
    "facts": "LowerFocus(l) = MidPoint(k)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: G ) equals LeftVertex ( CONICSECTION: C )",
    "id": 2409,
    "declarations": "G: CONICSECTION; C: CONICSECTION",
    "facts": "LeftFocus(G) = LeftVertex(C)"
},
{
    "assertion": "Negation ( ImaginaryAxis ( ELLIPSE: g ) equals ImaginaryAxis ( ELLIPSE: J ) ) equals BOOL: True",
    "id": 2410,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "FootPoint ( LINE: a, RightDirectrix ( CONICSECTION: m ) ) equals UpperFocus ( CONICSECTION: v )",
    "id": 2411,
    "declarations": "a: LINE; m: CONICSECTION; v: CONICSECTION",
    "facts": "FootPoint(a, RightDirectrix(m)) = UpperFocus(v)"
},
{
    "assertion": "And ( PointOnCurve ( POINT: L, CURVE: u ) equals BOOL: False, Center ( CONICSECTION: j ) equals POINT: h ) equals BOOL: True",
    "id": 2412,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Perimeter ( CONICSECTION: A ) equals NUMBER: 85",
    "id": 2413,
    "declarations": "A: CONICSECTION; 85: NUMBER",
    "facts": "Perimeter(A) = 85"
},
{
    "assertion": "MajorAxis ( ELLIPSE: L ) equals LINESEGMENT: N",
    "id": 2414,
    "declarations": "L: ELLIPSE; N: LINESEGMENT",
    "facts": "MajorAxis(L) = N"
},
{
    "assertion": "Length ( LINESEGMENT: v ) equals XCoordinate ( POINT: r )",
    "id": 2415,
    "declarations": "v: LINESEGMENT; r: POINT",
    "facts": "Length(v) = XCoordinate(r)"
},
{
    "assertion": "Max ( Inclination ( LINE: W ) ) equals NUMBER: -13",
    "id": 2416,
    "declarations": "W: LINE; -13: NUMBER",
    "facts": "Max(Inclination(W)) = -13"
},
{
    "assertion": "LocusEquation ( POINT: p ) equals Expression ( CURVE: g )",
    "id": 2417,
    "declarations": "p: POINT; g: CURVE",
    "facts": "LocusEquation(p) = Expression(g)"
},
{
    "assertion": "IsInTangent ( CIRCLE: R, CIRCLE: e ) equals BOOL: False",
    "id": 2418,
    "declarations": "R: CIRCLE; e: CIRCLE; False: BOOL",
    "facts": "IsInTangent(R, e) = False"
},
{
    "assertion": "Orthocenter ( TRIANGLE: p ) equals RightFocus ( CONICSECTION: x )",
    "id": 2419,
    "declarations": "p: TRIANGLE; x: CONICSECTION",
    "facts": "Orthocenter(p) = RightFocus(x)"
},
{
    "assertion": "Diameter ( CIRCLE: h ) equals Abs ( ImaginaryAxis ( ELLIPSE: y ) )",
    "id": 2420,
    "declarations": "h: CIRCLE; y: ELLIPSE",
    "facts": "Diameter(h) = Abs(ImaginaryAxis(y))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: n ) equals POINT: a",
    "id": 2421,
    "declarations": "n: CONICSECTION; a: POINT",
    "facts": "LowerFocus(n) = a"
},
{
    "assertion": "TangentPoint ( LineOf ( RightVertex ( CONICSECTION: d ), LeftVertex ( CONICSECTION: B ) ), CIRCLE: t ) equals POINT: F",
    "id": 2422,
    "declarations": "d: CONICSECTION; B: CONICSECTION; t: CIRCLE; F: POINT",
    "facts": "TangentPoint(LineOf(RightVertex(d), LeftVertex(B)), t) = F"
},
{
    "assertion": "Directrix ( CONICSECTION: U ) equals LINE: x",
    "id": 2423,
    "declarations": "U: CONICSECTION; x: LINE",
    "facts": "Directrix(U) = x"
},
{
    "assertion": "Radius ( CIRCLE: Y ) equals Abs ( LINESEGMENT: c )",
    "id": 2424,
    "declarations": "Y: CIRCLE; c: LINESEGMENT",
    "facts": "Radius(Y) = Abs(c)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: M ) equals LeftFocus ( CONICSECTION: c )",
    "id": 2425,
    "declarations": "M: CONICSECTION; c: CONICSECTION",
    "facts": "UpperVertex(M) = LeftFocus(c)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: y ) equals RightVertex ( CONICSECTION: A )",
    "id": 2426,
    "declarations": "y: CONICSECTION; A: CONICSECTION",
    "facts": "UpperVertex(y) = RightVertex(A)"
},
{
    "assertion": "RealAxis ( ELLIPSE: O ) equals LINESEGMENT: D",
    "id": 2427,
    "declarations": "O: ELLIPSE; D: LINESEGMENT",
    "facts": "RealAxis(O) = D"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: B ) equals LINE: V",
    "id": 2428,
    "declarations": "B: LINESEGMENT; V: LINE",
    "facts": "PerpendicularBisector(B) = V"
},
{
    "assertion": "CircumCircle ( TRIANGLE: o ) equals CIRCLE: J",
    "id": 2429,
    "declarations": "o: TRIANGLE; J: CIRCLE",
    "facts": "CircumCircle(o) = J"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: O ) equals NUMBER: -63",
    "id": 2430,
    "declarations": "O: CONICSECTION; -63: NUMBER",
    "facts": "HalfFocalLength(O) = -63"
},
{
    "assertion": "Diameter ( CIRCLE: q ) equals HalfFocalLength ( CONICSECTION: l )",
    "id": 2431,
    "declarations": "q: CIRCLE; l: CONICSECTION",
    "facts": "Diameter(q) = HalfFocalLength(l)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: S, CIRCLE: U ) equals BOOL: True",
    "id": 2432,
    "declarations": "S: CIRCLE; U: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(S, U) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: z ) equals UpperVertex ( CONICSECTION: J )",
    "id": 2433,
    "declarations": "z: CONICSECTION; J: CONICSECTION",
    "facts": "LeftFocus(z) = UpperVertex(J)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: g ) equals LeftFocus ( CONICSECTION: r )",
    "id": 2434,
    "declarations": "g: CONICSECTION; r: CONICSECTION",
    "facts": "LowerVertex(g) = LeftFocus(r)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: t ) equals RightPart ( HYPERBOLA: K )",
    "id": 2435,
    "declarations": "t: HYPERBOLA; K: HYPERBOLA",
    "facts": "LeftPart(t) = RightPart(K)"
},
{
    "assertion": "FootPoint ( LINE: I, LeftDirectrix ( CONICSECTION: p ) ) equals Circumcenter ( TRIANGLE: n )",
    "id": 2436,
    "declarations": "I: LINE; p: CONICSECTION; n: TRIANGLE",
    "facts": "FootPoint(I, LeftDirectrix(p)) = Circumcenter(n)"
},
{
    "assertion": "Focus ( CONICSECTION: T ) equals LeftFocus ( CONICSECTION: s )",
    "id": 2437,
    "declarations": "T: CONICSECTION; s: CONICSECTION",
    "facts": "Focus(T) = LeftFocus(s)"
},
{
    "assertion": "RightPart ( HYPERBOLA: o ) equals CURVE: M",
    "id": 2438,
    "declarations": "o: HYPERBOLA; M: CURVE",
    "facts": "RightPart(o) = M"
},
{
    "assertion": "Eccentricity ( CONICSECTION: m ) equals Radius ( CIRCLE: p )",
    "id": 2439,
    "declarations": "m: CONICSECTION; p: CIRCLE",
    "facts": "Eccentricity(m) = Radius(p)"
},
{
    "assertion": "LocusEquation ( LeftFocus ( CONICSECTION: J ) ) equals Expression ( CURVE: Y )",
    "id": 2440,
    "declarations": "J: CONICSECTION; Y: CURVE",
    "facts": "LocusEquation(LeftFocus(J)) = Expression(Y)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: h ) equals CIRCLE: B",
    "id": 2441,
    "declarations": "h: TRIANGLE; B: CIRCLE",
    "facts": "CircumCircle(h) = B"
},
{
    "assertion": "RightVertex ( CONICSECTION: f ) equals Circumcenter ( TRIANGLE: S )",
    "id": 2442,
    "declarations": "f: CONICSECTION; S: TRIANGLE",
    "facts": "RightVertex(f) = Circumcenter(S)"
},
{
    "assertion": "RightFocus ( CONICSECTION: U ) equals RightVertex ( CONICSECTION: o )",
    "id": 2443,
    "declarations": "U: CONICSECTION; o: CONICSECTION",
    "facts": "RightFocus(U) = RightVertex(o)"
},
{
    "assertion": "RightPart ( HYPERBOLA: B ) equals LeftPart ( HYPERBOLA: I )",
    "id": 2444,
    "declarations": "B: HYPERBOLA; I: HYPERBOLA",
    "facts": "RightPart(B) = LeftPart(I)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: b ) equals LINE: N",
    "id": 2445,
    "declarations": "b: HYPERBOLA; N: LINE",
    "facts": "Asymptote(b) = N"
},
{
    "assertion": "IsTangent ( LeftDirectrix ( CONICSECTION: u ), CONICSECTION: b ) equals BOOL: False",
    "id": 2446,
    "declarations": "u: CONICSECTION; b: CONICSECTION; False: BOOL",
    "facts": "IsTangent(LeftDirectrix(u), b) = False"
},
{
    "assertion": "MajorAxis ( ELLIPSE: A ) equals MajorAxis ( ELLIPSE: o )",
    "id": 2447,
    "declarations": "A: ELLIPSE; o: ELLIPSE",
    "facts": "MajorAxis(A) = MajorAxis(o)"
},
{
    "assertion": "FocalLength ( CONICSECTION: V ) equals NUMBER: 60",
    "id": 2448,
    "declarations": "V: CONICSECTION; 60: NUMBER",
    "facts": "FocalLength(V) = 60"
},
{
    "assertion": "Slope ( LINE: i ) equals Perimeter ( CONICSECTION: z )",
    "id": 2449,
    "declarations": "i: LINE; z: CONICSECTION",
    "facts": "Slope(i) = Perimeter(z)"
},
{
    "assertion": "FootPoint ( LINE: l, LINE: K ) equals UpperFocus ( CONICSECTION: q )",
    "id": 2450,
    "declarations": "l: LINE; K: LINE; q: CONICSECTION",
    "facts": "FootPoint(l, K) = UpperFocus(q)"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: k ) ) equals Radius ( CIRCLE: O )",
    "id": 2451,
    "declarations": "k: ELLIPSE; O: CIRCLE",
    "facts": "Abs(RealAxis(k)) = Radius(O)"
},
{
    "assertion": "Area ( CONICSECTION: x ) equals InterReciprocal ( NUMBER: -94 )",
    "id": 2452,
    "declarations": "x: CONICSECTION; -94: NUMBER",
    "facts": "Area(x) = InterReciprocal(-94)"
},
{
    "assertion": "Abs ( LINESEGMENT: F ) equals NUMBER: 4",
    "id": 2453,
    "declarations": "F: LINESEGMENT; 4: NUMBER",
    "facts": "Abs(F) = 4"
},
{
    "assertion": "LineOf ( POINT: k, POINT: Y ) equals LINE: O",
    "id": 2454,
    "declarations": "k: POINT; Y: POINT; O: LINE",
    "facts": "LineOf(k, Y) = O"
},
{
    "assertion": "LeftFocus ( CONICSECTION: z ) equals Projection ( UpperVertex ( CONICSECTION: E ), LineOf ( LeftVertex ( CONICSECTION: N ), Circumcenter ( TRIANGLE: P ) ) )",
    "id": 2455,
    "declarations": "z: CONICSECTION; E: CONICSECTION; N: CONICSECTION; P: TRIANGLE",
    "facts": "LeftFocus(z) = Projection(UpperVertex(E), LineOf(LeftVertex(N), Circumcenter(P)))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: t ) equals NUMBER: -97",
    "id": 2456,
    "declarations": "t: CONICSECTION; -97: NUMBER",
    "facts": "Eccentricity(t) = -97"
},
{
    "assertion": "MinorAxis ( ELLIPSE: F ) equals MinorAxis ( ELLIPSE: R )",
    "id": 2457,
    "declarations": "F: ELLIPSE; R: ELLIPSE",
    "facts": "MinorAxis(F) = MinorAxis(R)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: M, TRIANGLE: S ) equals BOOL: False",
    "id": 2458,
    "declarations": "M: CIRCLE; S: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(M, S) = False"
},
{
    "assertion": "Asymptote ( HYPERBOLA: O ) equals PerpendicularBisector ( LINESEGMENT: D )",
    "id": 2459,
    "declarations": "O: HYPERBOLA; D: LINESEGMENT",
    "facts": "Asymptote(O) = PerpendicularBisector(D)"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: S ) ) equals YCoordinate ( POINT: I )",
    "id": 2460,
    "declarations": "S: CONICSECTION; I: POINT",
    "facts": "Quadrant(LeftVertex(S)) = YCoordinate(I)"
},
{
    "assertion": "sqrt ( NUMBER: -1 ) equals Quadrant ( POINT: E )",
    "id": 2461,
    "declarations": "-1: NUMBER; E: POINT",
    "facts": "sqrt(-1) = Quadrant(E)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: i ) equals TangentOfPoint ( Center ( CONICSECTION: Q ), CURVE: T )",
    "id": 2462,
    "declarations": "i: CONICSECTION; Q: CONICSECTION; T: CURVE",
    "facts": "RightDirectrix(i) = TangentOfPoint(Center(Q), T)"
},
{
    "assertion": "DotProduct ( VECTOR: B, VECTOR: h ) equals NUMBER: 65",
    "id": 2463,
    "declarations": "B: VECTOR; h: VECTOR; 65: NUMBER",
    "facts": "DotProduct(B, h) = 65"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: u ) equals NUMBER: 4",
    "id": 2465,
    "declarations": "u: CONICSECTION; 4: NUMBER",
    "facts": "HalfFocalLength(u) = 4"
},
{
    "assertion": "MidPoint ( LINESEGMENT: l ) equals LowerFocus ( CONICSECTION: z )",
    "id": 2466,
    "declarations": "l: LINESEGMENT; z: CONICSECTION",
    "facts": "MidPoint(l) = LowerFocus(z)"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: y ) ) equals LeftPart ( HYPERBOLA: O )",
    "id": 2467,
    "declarations": "y: CONICSECTION; O: HYPERBOLA",
    "facts": "Locus(LeftFocus(y)) = LeftPart(O)"
},
{
    "assertion": "LineOf ( LowerFocus ( CONICSECTION: i ), Orthocenter ( TRIANGLE: h ) ) equals LINE: k",
    "id": 2468,
    "declarations": "i: CONICSECTION; h: TRIANGLE; k: LINE",
    "facts": "LineOf(LowerFocus(i), Orthocenter(h)) = k"
},
{
    "assertion": "lg ( Area ( CONICSECTION: p ) ) equals Inclination ( LINE: A )",
    "id": 2469,
    "declarations": "p: CONICSECTION; A: LINE",
    "facts": "lg(Area(p)) = Inclination(A)"
},
{
    "assertion": "RightFocus ( CONICSECTION: j ) equals MidPoint ( LINESEGMENT: A )",
    "id": 2470,
    "declarations": "j: CONICSECTION; A: LINESEGMENT",
    "facts": "RightFocus(j) = MidPoint(A)"
},
{
    "assertion": "Distance ( MidPoint ( MajorAxis ( ELLIPSE: c ) ), Orthocenter ( TRIANGLE: R ) ) equals NUMBER: 67",
    "id": 2471,
    "declarations": "c: ELLIPSE; R: TRIANGLE; 67: NUMBER",
    "facts": "Distance(MidPoint(MajorAxis(c)), Orthocenter(R)) = 67"
},
{
    "assertion": "LeftPart ( HYPERBOLA: t ) equals CURVE: q",
    "id": 2472,
    "declarations": "t: HYPERBOLA; q: CURVE",
    "facts": "LeftPart(t) = q"
},
{
    "assertion": "Intersection ( LeftPart ( HYPERBOLA: s ), RightPart ( HYPERBOLA: u ) ) equals LowerVertex ( CONICSECTION: q )",
    "id": 2473,
    "declarations": "s: HYPERBOLA; u: HYPERBOLA; q: CONICSECTION",
    "facts": "Intersection(LeftPart(s), RightPart(u)) = LowerVertex(q)"
},
{
    "assertion": "Quadrant ( Orthocenter ( TRIANGLE: l ) ) equals Inclination ( LINE: h )",
    "id": 2474,
    "declarations": "l: TRIANGLE; h: LINE",
    "facts": "Quadrant(Orthocenter(l)) = Inclination(h)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: o, TRIANGLE: h ) equals BOOL: True",
    "id": 2475,
    "declarations": "o: CIRCLE; h: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(o, h) = True"
},
{
    "assertion": "TangentOnPoint ( UpperFocus ( CONICSECTION: I ), CURVE: x ) equals LINE: m",
    "id": 2476,
    "declarations": "I: CONICSECTION; x: CURVE; m: LINE",
    "facts": "TangentOnPoint(UpperFocus(I), x) = m"
},
{
    "assertion": "PointOnCurve ( POINT: r, CURVE: d ) equals BOOL: True",
    "id": 2477,
    "declarations": "r: POINT; d: CURVE; True: BOOL",
    "facts": "PointOnCurve(r, d) = True"
},
{
    "assertion": "Expression ( CURVE: w ) equals EXPRESSION: x^2*space+*spacey^2*space+*space6*x*space-*space4*y*space=*space12",
    "id": 2478,
    "declarations": "w: CURVE; x^2*space+*spacey^2*space+*space6*x*space-*space4*y*space=*space12: EXPRESSION",
    "facts": "Expression(w) = x^2*space+*spacey^2*space+*space6*x*space-*space4*y*space=*space12"
},
{
    "assertion": "LeftFocus ( CONICSECTION: w ) equals RightFocus ( CONICSECTION: H )",
    "id": 2479,
    "declarations": "w: CONICSECTION; H: CONICSECTION",
    "facts": "LeftFocus(w) = RightFocus(H)"
},
{
    "assertion": "Area ( CONICSECTION: D ) equals YCoordinate ( POINT: E )",
    "id": 2480,
    "declarations": "D: CONICSECTION; E: POINT",
    "facts": "Area(D) = YCoordinate(E)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: h ) equals POINT: I",
    "id": 2481,
    "declarations": "h: LINESEGMENT; I: POINT",
    "facts": "Endpoint(h) = I"
},
{
    "assertion": "lg ( NUMBER: -57 ) equals Perimeter ( CONICSECTION: d )",
    "id": 2482,
    "declarations": "-57: NUMBER; d: CONICSECTION",
    "facts": "lg(-57) = Perimeter(d)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: e ) equals POINT: L",
    "id": 2483,
    "declarations": "e: CONICSECTION; L: POINT",
    "facts": "LowerVertex(e) = L"
},
{
    "assertion": "InterReciprocal ( NUMBER: -9 ) equals Inclination ( OverlappingLine ( LineSegmentOf ( Center ( CONICSECTION: A ), LeftVertex ( CONICSECTION: w ) ) ) )",
    "id": 2484,
    "declarations": "-9: NUMBER; A: CONICSECTION; w: CONICSECTION",
    "facts": "InterReciprocal(-9) = Inclination(OverlappingLine(LineSegmentOf(Center(A), LeftVertex(w))))"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: B ) equals TangentOfPoint ( Orthocenter ( TRIANGLE: W ), CURVE: j )",
    "id": 2485,
    "declarations": "B: CONICSECTION; W: TRIANGLE; j: CURVE",
    "facts": "LeftDirectrix(B) = TangentOfPoint(Orthocenter(W), j)"
},
{
    "assertion": "YCoordinate ( POINT: W ) equals XCoordinate ( POINT: s )",
    "id": 2486,
    "declarations": "W: POINT; s: POINT",
    "facts": "YCoordinate(W) = XCoordinate(s)"
},
{
    "assertion": "Locus ( Orthocenter ( TRIANGLE: G ) ) equals CURVE: K",
    "id": 2487,
    "declarations": "G: TRIANGLE; K: CURVE",
    "facts": "Locus(Orthocenter(G)) = K"
},
{
    "assertion": "PointOnCurve ( RightFocus ( CONICSECTION: K ), CURVE: B ) equals BOOL: False",
    "id": 2488,
    "declarations": "K: CONICSECTION; B: CURVE; False: BOOL",
    "facts": "PointOnCurve(RightFocus(K), B) = False"
},
{
    "assertion": "RightPart ( HYPERBOLA: J ) equals CURVE: o",
    "id": 2489,
    "declarations": "J: HYPERBOLA; o: CURVE",
    "facts": "RightPart(J) = o"
},
{
    "assertion": "LeftPart ( HYPERBOLA: K ) equals CURVE: q",
    "id": 2490,
    "declarations": "K: HYPERBOLA; q: CURVE",
    "facts": "LeftPart(K) = q"
},
{
    "assertion": "LowerFocus ( CONICSECTION: W ) equals POINT: t",
    "id": 2491,
    "declarations": "W: CONICSECTION; t: POINT",
    "facts": "LowerFocus(W) = t"
},
{
    "assertion": "Distance ( RightVertex ( CONICSECTION: U ), POINT: t ) equals sqrt ( NUMBER: -14 )",
    "id": 2492,
    "declarations": "U: CONICSECTION; t: POINT; -14: NUMBER",
    "facts": "Distance(RightVertex(U), t) = sqrt(-14)"
},
{
    "assertion": "IsIntersect ( CURVE: W, CURVE: J ) equals BOOL: True",
    "id": 2493,
    "declarations": "W: CURVE; J: CURVE; True: BOOL",
    "facts": "IsIntersect(W, J) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: d ) equals POINT: X",
    "id": 2494,
    "declarations": "d: TRIANGLE; X: POINT",
    "facts": "Circumcenter(d) = X"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: M, TRIANGLE: M ) equals BOOL: False",
    "id": 2495,
    "declarations": "M: CIRCLE; M: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(M, M) = False"
},
{
    "assertion": "FocalLength ( CONICSECTION: H ) equals Length ( LINESEGMENT: d )",
    "id": 2496,
    "declarations": "H: CONICSECTION; d: LINESEGMENT",
    "facts": "FocalLength(H) = Length(d)"
},
{
    "assertion": "InterReciprocal ( NUMBER: 36 ) equals NUMBER: 50",
    "id": 2497,
    "declarations": "36: NUMBER; 50: NUMBER",
    "facts": "InterReciprocal(36) = 50"
},
{
    "assertion": "Center ( CONICSECTION: F ) equals POINT: B",
    "id": 2498,
    "declarations": "F: CONICSECTION; B: POINT",
    "facts": "Center(F) = B"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: u ) equals LINE: O",
    "id": 2499,
    "declarations": "u: CONICSECTION; O: LINE",
    "facts": "LeftDirectrix(u) = O"
},
{
    "assertion": "Min ( Distance ( RightVertex ( CONICSECTION: d ), RightFocus ( CONICSECTION: n ) ) ) equals Inclination ( LINE: J )",
    "id": 2500,
    "declarations": "d: CONICSECTION; n: CONICSECTION; J: LINE",
    "facts": "Min(Distance(RightVertex(d), RightFocus(n))) = Inclination(J)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: x, TRIANGLE: e ) equals BOOL: True",
    "id": 2501,
    "declarations": "x: CIRCLE; e: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(x, e) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: h ) equals UpperFocus ( CONICSECTION: M )",
    "id": 2502,
    "declarations": "h: TRIANGLE; M: CONICSECTION",
    "facts": "Circumcenter(h) = UpperFocus(M)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: x, TRIANGLE: G ) equals BOOL: False",
    "id": 2503,
    "declarations": "x: CIRCLE; G: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(x, G) = False"
},
{
    "assertion": "Abs ( LINESEGMENT: J ) equals HalfFocalLength ( CONICSECTION: X )",
    "id": 2504,
    "declarations": "J: LINESEGMENT; X: CONICSECTION",
    "facts": "Abs(J) = HalfFocalLength(X)"
},
{
    "assertion": "LineOf ( POINT: p, Center ( CONICSECTION: u ) ) equals LINE: f",
    "id": 2505,
    "declarations": "p: POINT; u: CONICSECTION; f: LINE",
    "facts": "LineOf(p, Center(u)) = f"
},
{
    "assertion": "Area ( CONICSECTION: D ) equals Distance ( Projection ( POINT: P, LeftDirectrix ( CONICSECTION: a ) ), POINT: v )",
    "id": 2506,
    "declarations": "D: CONICSECTION; P: POINT; a: CONICSECTION; v: POINT",
    "facts": "Area(D) = Distance(Projection(P, LeftDirectrix(a)), v)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: O, TRIANGLE: p ) equals BOOL: True",
    "id": 2507,
    "declarations": "O: CIRCLE; p: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(O, p) = True"
},
{
    "assertion": "UpperVertex ( CONICSECTION: O ) equals POINT: M",
    "id": 2508,
    "declarations": "O: CONICSECTION; M: POINT",
    "facts": "UpperVertex(O) = M"
},
{
    "assertion": "FootPoint ( LINE: V, LeftDirectrix ( CONICSECTION: U ) ) equals LeftVertex ( CONICSECTION: h )",
    "id": 2509,
    "declarations": "V: LINE; U: CONICSECTION; h: CONICSECTION",
    "facts": "FootPoint(V, LeftDirectrix(U)) = LeftVertex(h)"
},
{
    "assertion": "Max ( Area ( CONICSECTION: P ) ) equals NUMBER: -67",
    "id": 2510,
    "declarations": "P: CONICSECTION; -67: NUMBER",
    "facts": "Max(Area(P)) = -67"
},
{
    "assertion": "Intercept ( LINE: e, AXIS: xAxis ) equals sqrt ( Distance ( LowerVertex ( CONICSECTION: p ), POINT: l ) )",
    "id": 2511,
    "declarations": "e: LINE; xAxis: AXIS; p: CONICSECTION; l: POINT",
    "facts": "Intercept(e, xAxis) = sqrt(Distance(LowerVertex(p), l))"
},
{
    "assertion": "VectorOf ( Incenter ( TRIANGLE: H ), POINT: D ) equals VECTOR: y",
    "id": 2512,
    "declarations": "H: TRIANGLE; D: POINT; y: VECTOR",
    "facts": "VectorOf(Incenter(H), D) = y"
},
{
    "assertion": "Intersection ( CURVE: K, CURVE: h ) equals POINT: s",
    "id": 2513,
    "declarations": "K: CURVE; h: CURVE; s: POINT",
    "facts": "Intersection(K, h) = s"
},
{
    "assertion": "LeftPart ( HYPERBOLA: v ) equals CURVE: K",
    "id": 2514,
    "declarations": "v: HYPERBOLA; K: CURVE",
    "facts": "LeftPart(v) = K"
},
{
    "assertion": "Negation ( Expression ( LeftPart ( HYPERBOLA: g ) ) equals EXPRESSION: y*space=*space3*x*space+*space2 ) equals BOOL: False",
    "id": 2515,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: f ) equals LINE: F",
    "id": 2516,
    "declarations": "f: CONICSECTION; F: LINE",
    "facts": "RightDirectrix(f) = F"
},
{
    "assertion": "LocusEquation ( POINT: X ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 2517,
    "declarations": "X: POINT; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "LocusEquation(X) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: T, TRIANGLE: s ) equals BOOL: True",
    "id": 2518,
    "declarations": "T: CIRCLE; s: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(T, s) = True"
},
{
    "assertion": "MidPoint ( InterceptChord ( LINE: U, CONICSECTION: C ) ) equals POINT: p",
    "id": 2519,
    "declarations": "U: LINE; C: CONICSECTION; p: POINT",
    "facts": "MidPoint(InterceptChord(U, C)) = p"
},
{
    "assertion": "And ( Focus ( CONICSECTION: j ) equals Center ( CONICSECTION: h ), LeftVertex ( CONICSECTION: V ) equals LeftFocus ( CONICSECTION: w ) ) equals BOOL: False",
    "id": 2520,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Incenter ( TRIANGLE: b ) equals RightVertex ( CONICSECTION: i )",
    "id": 2521,
    "declarations": "b: TRIANGLE; i: CONICSECTION",
    "facts": "Incenter(b) = RightVertex(i)"
},
{
    "assertion": "LineSegmentOf ( Orthocenter ( TRIANGLE: B ), POINT: J ) equals RealAxis ( ELLIPSE: s )",
    "id": 2522,
    "declarations": "B: TRIANGLE; J: POINT; s: ELLIPSE",
    "facts": "LineSegmentOf(Orthocenter(B), J) = RealAxis(s)"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: a ) ) equals DotProduct ( VECTOR: b, VECTOR: C )",
    "id": 2525,
    "declarations": "a: CONICSECTION; b: VECTOR; C: VECTOR",
    "facts": "Inclination(LeftDirectrix(a)) = DotProduct(b, C)"
},
{
    "assertion": "YCoordinate ( Circumcenter ( TRIANGLE: T ) ) equals NUMBER: 68",
    "id": 2526,
    "declarations": "T: TRIANGLE; 68: NUMBER",
    "facts": "YCoordinate(Circumcenter(T)) = 68"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: E ) equals RightDirectrix ( CONICSECTION: e )",
    "id": 2527,
    "declarations": "E: CONICSECTION; e: CONICSECTION",
    "facts": "RightDirectrix(E) = RightDirectrix(e)"
},
{
    "assertion": "Min ( NUMBER: 4 ) equals Min ( Diameter ( CIRCLE: U ) )",
    "id": 2528,
    "declarations": "4: NUMBER; U: CIRCLE",
    "facts": "Min(4) = Min(Diameter(U))"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: P ) equals LINE: x",
    "id": 2529,
    "declarations": "P: LINESEGMENT; x: LINE",
    "facts": "OverlappingLine(P) = x"
},
{
    "assertion": "DotProduct ( VECTOR: d, VECTOR: a ) equals NUMBER: 12",
    "id": 2530,
    "declarations": "d: VECTOR; a: VECTOR; 12: NUMBER",
    "facts": "DotProduct(d, a) = 12"
},
{
    "assertion": "LeftFocus ( CONICSECTION: k ) equals POINT: g",
    "id": 2531,
    "declarations": "k: CONICSECTION; g: POINT",
    "facts": "LeftFocus(k) = g"
},
{
    "assertion": "Quadrant ( Center ( CONICSECTION: y ) ) equals NUMBER: -67",
    "id": 2532,
    "declarations": "y: CONICSECTION; -67: NUMBER",
    "facts": "Quadrant(Center(y)) = -67"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: F ) equals LINE: y",
    "id": 2533,
    "declarations": "F: CONICSECTION; y: LINE",
    "facts": "LeftDirectrix(F) = y"
},
{
    "assertion": "IsInTangent ( CIRCLE: M, CIRCLE: B ) equals BOOL: True",
    "id": 2534,
    "declarations": "M: CIRCLE; B: CIRCLE; True: BOOL",
    "facts": "IsInTangent(M, B) = True"
},
{
    "assertion": "LeftPart ( HYPERBOLA: T ) equals CURVE: H",
    "id": 2535,
    "declarations": "T: HYPERBOLA; H: CURVE",
    "facts": "LeftPart(T) = H"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: q ) ) equals LocusEquation ( POINT: p )",
    "id": 2536,
    "declarations": "q: HYPERBOLA; p: POINT",
    "facts": "Expression(LeftPart(q)) = LocusEquation(p)"
},
{
    "assertion": "And ( LeftPart ( HYPERBOLA: G ) equals CURVE: U, Directrix ( CONICSECTION: W ) equals LeftDirectrix ( CONICSECTION: k ) ) equals BOOL: True",
    "id": 2537,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LowerVertex ( CONICSECTION: X ) equals RightVertex ( CONICSECTION: X )",
    "id": 2538,
    "declarations": "X: CONICSECTION; X: CONICSECTION",
    "facts": "LowerVertex(X) = RightVertex(X)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: r ) equals CURVE: r",
    "id": 2539,
    "declarations": "r: HYPERBOLA; r: CURVE",
    "facts": "LeftPart(r) = r"
},
{
    "assertion": "Locus ( LowerFocus ( CONICSECTION: n ) ) equals CURVE: L",
    "id": 2540,
    "declarations": "n: CONICSECTION; L: CURVE",
    "facts": "Locus(LowerFocus(n)) = L"
},
{
    "assertion": "lg ( InterReciprocal ( Area ( CONICSECTION: D ) ) ) equals Inclination ( LINE: j )",
    "id": 2541,
    "declarations": "D: CONICSECTION; j: LINE",
    "facts": "lg(InterReciprocal(Area(D))) = Inclination(j)"
},
{
    "assertion": "FocalLength ( CONICSECTION: s ) equals Area ( CONICSECTION: h )",
    "id": 2542,
    "declarations": "s: CONICSECTION; h: CONICSECTION",
    "facts": "FocalLength(s) = Area(h)"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: E ) ) equals RightVertex ( CONICSECTION: C )",
    "id": 2543,
    "declarations": "E: ELLIPSE; C: CONICSECTION",
    "facts": "Endpoint(MajorAxis(E)) = RightVertex(C)"
},
{
    "assertion": "Between ( POINT: t, POINT: n, UpperVertex ( CONICSECTION: I ) ) equals BOOL: False",
    "id": 2544,
    "declarations": "t: POINT; n: POINT; I: CONICSECTION; False: BOOL",
    "facts": "Between(t, n, UpperVertex(I)) = False"
},
{
    "assertion": "Radius ( CIRCLE: T ) equals Min ( NUMBER: 54 )",
    "id": 2545,
    "declarations": "T: CIRCLE; 54: NUMBER",
    "facts": "Radius(T) = Min(54)"
},
{
    "assertion": "InterReciprocal ( NUMBER: -10 ) equals Quadrant ( FootPoint ( LINE: L, LINE: C ) )",
    "id": 2546,
    "declarations": "-10: NUMBER; L: LINE; C: LINE",
    "facts": "InterReciprocal(-10) = Quadrant(FootPoint(L, C))"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: S ) equals LINE: w",
    "id": 2547,
    "declarations": "S: LINESEGMENT; w: LINE",
    "facts": "PerpendicularBisector(S) = w"
},
{
    "assertion": "RightVertex ( CONICSECTION: S ) equals POINT: y",
    "id": 2548,
    "declarations": "S: CONICSECTION; y: POINT",
    "facts": "RightVertex(S) = y"
},
{
    "assertion": "Quadrant ( POINT: W ) equals Slope ( LINE: c )",
    "id": 2549,
    "declarations": "W: POINT; c: LINE",
    "facts": "Quadrant(W) = Slope(c)"
},
{
    "assertion": "MidPoint ( RealAxis ( ELLIPSE: p ) ) equals POINT: V",
    "id": 2550,
    "declarations": "p: ELLIPSE; V: POINT",
    "facts": "MidPoint(RealAxis(p)) = V"
},
{
    "assertion": "IsTangent ( LINE: w, CONICSECTION: m ) equals BOOL: True",
    "id": 2551,
    "declarations": "w: LINE; m: CONICSECTION; True: BOOL",
    "facts": "IsTangent(w, m) = True"
},
{
    "assertion": "Focus ( CONICSECTION: g ) equals Projection ( POINT: j, PerpendicularBisector ( LINESEGMENT: W ) )",
    "id": 2552,
    "declarations": "g: CONICSECTION; j: POINT; W: LINESEGMENT",
    "facts": "Focus(g) = Projection(j, PerpendicularBisector(W))"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: l ) ) equals Area ( CONICSECTION: a )",
    "id": 2553,
    "declarations": "l: ELLIPSE; a: CONICSECTION",
    "facts": "Abs(MinorAxis(l)) = Area(a)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: A ) equals POINT: I",
    "id": 2554,
    "declarations": "A: CONICSECTION; I: POINT",
    "facts": "LowerFocus(A) = I"
},
{
    "assertion": "Quadrant ( Orthocenter ( TRIANGLE: u ) ) equals InterReciprocal ( NUMBER: 62 )",
    "id": 2555,
    "declarations": "u: TRIANGLE; 62: NUMBER",
    "facts": "Quadrant(Orthocenter(u)) = InterReciprocal(62)"
},
{
    "assertion": "Radius ( CIRCLE: B ) equals XCoordinate ( POINT: P )",
    "id": 2556,
    "declarations": "B: CIRCLE; P: POINT",
    "facts": "Radius(B) = XCoordinate(P)"
},
{
    "assertion": "ApplyUnit ( Perimeter ( CONICSECTION: e ), DEGREESTR: degree )",
    "id": 2557,
    "declarations": "e: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Perimeter(e), degree) = dummy_operator()"
},
{
    "assertion": "Slope ( LINE: s ) equals lg ( sqrt ( lg ( NUMBER: -18 ) ) )",
    "id": 2558,
    "declarations": "s: LINE; -18: NUMBER",
    "facts": "Slope(s) = lg(sqrt(lg(-18)))"
},
{
    "assertion": "DotProduct ( VECTOR: B, VECTOR: D ) equals Perimeter ( CONICSECTION: m )",
    "id": 2559,
    "declarations": "B: VECTOR; D: VECTOR; m: CONICSECTION",
    "facts": "DotProduct(B, D) = Perimeter(m)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: W ) equals POINT: C",
    "id": 2560,
    "declarations": "W: LINESEGMENT; C: POINT",
    "facts": "MidPoint(W) = C"
},
{
    "assertion": "UpperVertex ( CONICSECTION: c ) equals Center ( CONICSECTION: n )",
    "id": 2561,
    "declarations": "c: CONICSECTION; n: CONICSECTION",
    "facts": "UpperVertex(c) = Center(n)"
},
{
    "assertion": "Locus ( POINT: g ) equals CURVE: q",
    "id": 2562,
    "declarations": "g: POINT; q: CURVE",
    "facts": "Locus(g) = q"
},
{
    "assertion": "LeftVertex ( CONICSECTION: b ) equals Projection ( Circumcenter ( TRIANGLE: N ), LeftDirectrix ( CONICSECTION: x ) )",
    "id": 2563,
    "declarations": "b: CONICSECTION; N: TRIANGLE; x: CONICSECTION",
    "facts": "LeftVertex(b) = Projection(Circumcenter(N), LeftDirectrix(x))"
},
{
    "assertion": "RightPart ( HYPERBOLA: z ) equals CURVE: z",
    "id": 2564,
    "declarations": "z: HYPERBOLA; z: CURVE",
    "facts": "RightPart(z) = z"
},
{
    "assertion": "Orthocenter ( TRIANGLE: O ) equals LeftVertex ( CONICSECTION: j )",
    "id": 2565,
    "declarations": "O: TRIANGLE; j: CONICSECTION",
    "facts": "Orthocenter(O) = LeftVertex(j)"
},
{
    "assertion": "Area ( CONICSECTION: w ) equals Area ( CONICSECTION: j )",
    "id": 2566,
    "declarations": "w: CONICSECTION; j: CONICSECTION",
    "facts": "Area(w) = Area(j)"
},
{
    "assertion": "TangentPoint ( TangentOfPoint ( POINT: m, CURVE: x ), CIRCLE: E ) equals Projection ( POINT: P, LINE: k )",
    "id": 2567,
    "declarations": "m: POINT; x: CURVE; E: CIRCLE; P: POINT; k: LINE",
    "facts": "TangentPoint(TangentOfPoint(m, x), E) = Projection(P, k)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: m ) equals YCoordinate ( POINT: S )",
    "id": 2568,
    "declarations": "m: CONICSECTION; S: POINT",
    "facts": "Eccentricity(m) = YCoordinate(S)"
},
{
    "assertion": "Negation ( Vertex ( CONICSECTION: t ) equals Circumcenter ( TRIANGLE: J ) ) equals BOOL: True",
    "id": 2569,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: l ) ) equals OverlappingLine ( LINESEGMENT: I )",
    "id": 2570,
    "declarations": "l: ELLIPSE; I: LINESEGMENT",
    "facts": "OverlappingLine(MajorAxis(l)) = OverlappingLine(I)"
},
{
    "assertion": "Length ( LINESEGMENT: b ) equals NUMBER: 86",
    "id": 2571,
    "declarations": "b: LINESEGMENT; 86: NUMBER",
    "facts": "Length(b) = 86"
},
{
    "assertion": "Max ( Min ( Eccentricity ( CONICSECTION: Y ) ) ) equals NUMBER: -24",
    "id": 2572,
    "declarations": "Y: CONICSECTION; -24: NUMBER",
    "facts": "Max(Min(Eccentricity(Y))) = -24"
},
{
    "assertion": "PerpendicularBisector ( MajorAxis ( ELLIPSE: K ) ) equals OverlappingLine ( LINESEGMENT: D )",
    "id": 2573,
    "declarations": "K: ELLIPSE; D: LINESEGMENT",
    "facts": "PerpendicularBisector(MajorAxis(K)) = OverlappingLine(D)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: t ) equals CIRCLE: j",
    "id": 2574,
    "declarations": "t: TRIANGLE; j: CIRCLE",
    "facts": "CircumCircle(t) = j"
},
{
    "assertion": "LeftFocus ( CONICSECTION: R ) equals POINT: k",
    "id": 2575,
    "declarations": "R: CONICSECTION; k: POINT",
    "facts": "LeftFocus(R) = k"
},
{
    "assertion": "LeftVertex ( CONICSECTION: s ) equals Orthocenter ( TRIANGLE: E )",
    "id": 2576,
    "declarations": "s: CONICSECTION; E: TRIANGLE",
    "facts": "LeftVertex(s) = Orthocenter(E)"
},
{
    "assertion": "Area ( CONICSECTION: k ) equals NUMBER: 94",
    "id": 2577,
    "declarations": "k: CONICSECTION; 94: NUMBER",
    "facts": "Area(k) = 94"
},
{
    "assertion": "LeftFocus ( CONICSECTION: w ) equals UpperFocus ( CONICSECTION: H )",
    "id": 2578,
    "declarations": "w: CONICSECTION; H: CONICSECTION",
    "facts": "LeftFocus(w) = UpperFocus(H)"
},
{
    "assertion": "Radius ( CIRCLE: B ) equals NUMBER: -39",
    "id": 2579,
    "declarations": "B: CIRCLE; -39: NUMBER",
    "facts": "Radius(B) = -39"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: o ) equals LINE: V",
    "id": 2580,
    "declarations": "o: LINESEGMENT; V: LINE",
    "facts": "PerpendicularBisector(o) = V"
},
{
    "assertion": "InterceptChord ( LINE: v, CONICSECTION: Z ) equals LINESEGMENT: N",
    "id": 2581,
    "declarations": "v: LINE; Z: CONICSECTION; N: LINESEGMENT",
    "facts": "InterceptChord(v, Z) = N"
},
{
    "assertion": "Locus ( RightFocus ( CONICSECTION: R ) ) equals CURVE: M",
    "id": 2582,
    "declarations": "R: CONICSECTION; M: CURVE",
    "facts": "Locus(RightFocus(R)) = M"
},
{
    "assertion": "Orthocenter ( TRIANGLE: p ) equals LowerFocus ( CONICSECTION: Y )",
    "id": 2583,
    "declarations": "p: TRIANGLE; Y: CONICSECTION",
    "facts": "Orthocenter(p) = LowerFocus(Y)"
},
{
    "assertion": "IsIntersect ( CURVE: v, CURVE: h ) equals BOOL: False",
    "id": 2584,
    "declarations": "v: CURVE; h: CURVE; False: BOOL",
    "facts": "IsIntersect(v, h) = False"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: m ) equals TangentOfPoint ( UpperVertex ( CONICSECTION: K ), LeftPart ( HYPERBOLA: H ) )",
    "id": 2585,
    "declarations": "m: CONICSECTION; K: CONICSECTION; H: HYPERBOLA",
    "facts": "LeftDirectrix(m) = TangentOfPoint(UpperVertex(K), LeftPart(H))"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: i ) equals AXIS: xAxis",
    "id": 2587,
    "declarations": "i: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(i) = xAxis"
},
{
    "assertion": "Projection ( RightFocus ( CONICSECTION: e ), OverlappingLine ( LINESEGMENT: s ) ) equals POINT: J",
    "id": 2588,
    "declarations": "e: CONICSECTION; s: LINESEGMENT; J: POINT",
    "facts": "Projection(RightFocus(e), OverlappingLine(s)) = J"
},
{
    "assertion": "IsTangent ( LINE: G, CONICSECTION: E ) equals BOOL: False",
    "id": 2589,
    "declarations": "G: LINE; E: CONICSECTION; False: BOOL",
    "facts": "IsTangent(G, E) = False"
},
{
    "assertion": "IsOutTangent ( CIRCLE: f, CIRCLE: D ) equals BOOL: True",
    "id": 2590,
    "declarations": "f: CIRCLE; D: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(f, D) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: e ) equals InterceptChord ( LINE: D, CONICSECTION: i )",
    "id": 2591,
    "declarations": "e: ELLIPSE; D: LINE; i: CONICSECTION",
    "facts": "MinorAxis(e) = InterceptChord(D, i)"
},
{
    "assertion": "RightFocus ( CONICSECTION: R ) equals POINT: A",
    "id": 2592,
    "declarations": "R: CONICSECTION; A: POINT",
    "facts": "RightFocus(R) = A"
},
{
    "assertion": "Diameter ( CIRCLE: k ) equals NUMBER: -55",
    "id": 2593,
    "declarations": "k: CIRCLE; -55: NUMBER",
    "facts": "Diameter(k) = -55"
},
{
    "assertion": "Inclination ( LINE: Q ) equals InterReciprocal ( YCoordinate ( LowerFocus ( CONICSECTION: B ) ) )",
    "id": 2594,
    "declarations": "Q: LINE; B: CONICSECTION",
    "facts": "Inclination(Q) = InterReciprocal(YCoordinate(LowerFocus(B)))"
},
{
    "assertion": "TangentOfPoint ( POINT: O, LeftPart ( HYPERBOLA: U ) ) equals OverlappingLine ( LINESEGMENT: V )",
    "id": 2595,
    "declarations": "O: POINT; U: HYPERBOLA; V: LINESEGMENT",
    "facts": "TangentOfPoint(O, LeftPart(U)) = OverlappingLine(V)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: n ) equals POINT: e",
    "id": 2596,
    "declarations": "n: CONICSECTION; e: POINT",
    "facts": "LeftVertex(n) = e"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: R, CIRCLE: X ) equals BOOL: False",
    "id": 2597,
    "declarations": "R: LINESEGMENT; X: CIRCLE; False: BOOL",
    "facts": "IsDiameter(R, X) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: i ) equals LINESEGMENT: y",
    "id": 2598,
    "declarations": "i: ELLIPSE; y: LINESEGMENT",
    "facts": "MinorAxis(i) = y"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: x, TRIANGLE: E ) equals BOOL: False",
    "id": 2599,
    "declarations": "x: CIRCLE; E: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(x, E) = False"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: c ) equals OverlappingLine ( LINESEGMENT: R )",
    "id": 2600,
    "declarations": "c: LINESEGMENT; R: LINESEGMENT",
    "facts": "OverlappingLine(c) = OverlappingLine(R)"
},
{
    "assertion": "Incenter ( TRIANGLE: e ) equals UpperVertex ( CONICSECTION: o )",
    "id": 2601,
    "declarations": "e: TRIANGLE; o: CONICSECTION",
    "facts": "Incenter(e) = UpperVertex(o)"
},
{
    "assertion": "RealAxis ( ELLIPSE: C ) equals RealAxis ( ELLIPSE: g )",
    "id": 2602,
    "declarations": "C: ELLIPSE; g: ELLIPSE",
    "facts": "RealAxis(C) = RealAxis(g)"
},
{
    "assertion": "TangentOfPoint ( RightFocus ( CONICSECTION: R ), CURVE: t ) equals LINE: b",
    "id": 2603,
    "declarations": "R: CONICSECTION; t: CURVE; b: LINE",
    "facts": "TangentOfPoint(RightFocus(R), t) = b"
},
{
    "assertion": "MajorAxis ( ELLIPSE: e ) equals RealAxis ( ELLIPSE: w )",
    "id": 2604,
    "declarations": "e: ELLIPSE; w: ELLIPSE",
    "facts": "MajorAxis(e) = RealAxis(w)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: p, TRIANGLE: j ) equals BOOL: False",
    "id": 2605,
    "declarations": "p: CIRCLE; j: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(p, j) = False"
},
{
    "assertion": "UpperVertex ( CONICSECTION: u ) equals POINT: m",
    "id": 2606,
    "declarations": "u: CONICSECTION; m: POINT",
    "facts": "UpperVertex(u) = m"
},
{
    "assertion": "Abs ( ImaginaryAxis ( ELLIPSE: L ) ) equals Eccentricity ( CONICSECTION: n )",
    "id": 2607,
    "declarations": "L: ELLIPSE; n: CONICSECTION",
    "facts": "Abs(ImaginaryAxis(L)) = Eccentricity(n)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: g ) equals LINE: E",
    "id": 2608,
    "declarations": "g: HYPERBOLA; E: LINE",
    "facts": "Asymptote(g) = E"
},
{
    "assertion": "InterReciprocal ( NUMBER: 2 ) equals FocalLength ( CONICSECTION: C )",
    "id": 2609,
    "declarations": "2: NUMBER; C: CONICSECTION",
    "facts": "InterReciprocal(2) = FocalLength(C)"
},
{
    "assertion": "XCoordinate ( POINT: V ) equals NUMBER: -98",
    "id": 2610,
    "declarations": "V: POINT; -98: NUMBER",
    "facts": "XCoordinate(V) = -98"
},
{
    "assertion": "Eccentricity ( CONICSECTION: n ) equals Abs ( InterceptChord ( LeftDirectrix ( CONICSECTION: M ), CONICSECTION: u ) )",
    "id": 2611,
    "declarations": "n: CONICSECTION; M: CONICSECTION; u: CONICSECTION",
    "facts": "Eccentricity(n) = Abs(InterceptChord(LeftDirectrix(M), u))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: x ) equals POINT: i",
    "id": 2612,
    "declarations": "x: LINESEGMENT; i: POINT",
    "facts": "Endpoint(x) = i"
},
{
    "assertion": "ApplyUnit ( Eccentricity ( CONICSECTION: V ), DEGREESTR: degree )",
    "id": 2613,
    "declarations": "V: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Eccentricity(V), degree) = dummy_operator()"
},
{
    "assertion": "MidPoint ( MinorAxis ( ELLIPSE: d ) ) equals POINT: J",
    "id": 2614,
    "declarations": "d: ELLIPSE; J: POINT",
    "facts": "MidPoint(MinorAxis(d)) = J"
},
{
    "assertion": "TangentOnPoint ( LeftVertex ( CONICSECTION: V ), CURVE: t ) equals LINE: z",
    "id": 2615,
    "declarations": "V: CONICSECTION; t: CURVE; z: LINE",
    "facts": "TangentOnPoint(LeftVertex(V), t) = z"
},
{
    "assertion": "RightPart ( HYPERBOLA: h ) equals CURVE: C",
    "id": 2616,
    "declarations": "h: HYPERBOLA; C: CURVE",
    "facts": "RightPart(h) = C"
},
{
    "assertion": "RightVertex ( CONICSECTION: F ) equals FootPoint ( LINE: E, LINE: a )",
    "id": 2617,
    "declarations": "F: CONICSECTION; E: LINE; a: LINE",
    "facts": "RightVertex(F) = FootPoint(E, a)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: m ) equals InterReciprocal ( XCoordinate ( Center ( CONICSECTION: u ) ) )",
    "id": 2618,
    "declarations": "m: CONICSECTION; u: CONICSECTION",
    "facts": "Eccentricity(m) = InterReciprocal(XCoordinate(Center(u)))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: k ) equals RightFocus ( CONICSECTION: A )",
    "id": 2619,
    "declarations": "k: LINESEGMENT; A: CONICSECTION",
    "facts": "Endpoint(k) = RightFocus(A)"
},
{
    "assertion": "XCoordinate ( LowerVertex ( CONICSECTION: U ) ) equals NUMBER: 46",
    "id": 2620,
    "declarations": "U: CONICSECTION; 46: NUMBER",
    "facts": "XCoordinate(LowerVertex(U)) = 46"
},
{
    "assertion": "ApplyUnit ( Length ( MajorAxis ( ELLIPSE: x ) ), DEGREESTR: degree )",
    "id": 2621,
    "declarations": "x: ELLIPSE; degree: DEGREESTR",
    "facts": "ApplyUnit(Length(MajorAxis(x)), degree) = dummy_operator()"
},
{
    "assertion": "Asymptote ( HYPERBOLA: U ) equals LINE: e",
    "id": 2622,
    "declarations": "U: HYPERBOLA; e: LINE",
    "facts": "Asymptote(U) = e"
},
{
    "assertion": "MinorAxis ( ELLIPSE: R ) equals LINESEGMENT: F",
    "id": 2623,
    "declarations": "R: ELLIPSE; F: LINESEGMENT",
    "facts": "MinorAxis(R) = F"
},
{
    "assertion": "Quadrant ( UpperFocus ( CONICSECTION: b ) ) equals NUMBER: 41",
    "id": 2624,
    "declarations": "b: CONICSECTION; 41: NUMBER",
    "facts": "Quadrant(UpperFocus(b)) = 41"
},
{
    "assertion": "XCoordinate ( LowerFocus ( CONICSECTION: k ) ) equals NUMBER: 26",
    "id": 2625,
    "declarations": "k: CONICSECTION; 26: NUMBER",
    "facts": "XCoordinate(LowerFocus(k)) = 26"
},
{
    "assertion": "Incenter ( TRIANGLE: g ) equals RightVertex ( CONICSECTION: N )",
    "id": 2626,
    "declarations": "g: TRIANGLE; N: CONICSECTION",
    "facts": "Incenter(g) = RightVertex(N)"
},
{
    "assertion": "ApplyUnit ( sqrt ( sqrt ( Area ( CONICSECTION: x ) ) ), DEGREESTR: degree )",
    "id": 2627,
    "declarations": "x: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(sqrt(sqrt(Area(x))), degree) = dummy_operator()"
},
{
    "assertion": "YCoordinate ( UpperFocus ( CONICSECTION: I ) ) equals lg ( NUMBER: 97 )",
    "id": 2628,
    "declarations": "I: CONICSECTION; 97: NUMBER",
    "facts": "YCoordinate(UpperFocus(I)) = lg(97)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: m ) equals CURVE: m",
    "id": 2629,
    "declarations": "m: HYPERBOLA; m: CURVE",
    "facts": "LeftPart(m) = m"
},
{
    "assertion": "LowerFocus ( CONICSECTION: P ) equals LowerVertex ( CONICSECTION: s )",
    "id": 2630,
    "declarations": "P: CONICSECTION; s: CONICSECTION",
    "facts": "LowerFocus(P) = LowerVertex(s)"
},
{
    "assertion": "IsIntersect ( RightPart ( HYPERBOLA: R ), CURVE: g ) equals BOOL: False",
    "id": 2631,
    "declarations": "R: HYPERBOLA; g: CURVE; False: BOOL",
    "facts": "IsIntersect(RightPart(R), g) = False"
},
{
    "assertion": "lg ( YCoordinate ( POINT: d ) ) equals NumIntersection ( RightPart ( HYPERBOLA: d ), CURVE: c )",
    "id": 2632,
    "declarations": "d: POINT; d: HYPERBOLA; c: CURVE",
    "facts": "lg(YCoordinate(d)) = NumIntersection(RightPart(d), c)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: x ) equals LINESEGMENT: A",
    "id": 2633,
    "declarations": "x: ELLIPSE; A: LINESEGMENT",
    "facts": "MinorAxis(x) = A"
},
{
    "assertion": "YCoordinate ( POINT: i ) equals Inclination ( LINE: I )",
    "id": 2634,
    "declarations": "i: POINT; I: LINE",
    "facts": "YCoordinate(i) = Inclination(I)"
},
{
    "assertion": "lg ( NUMBER: -69 ) equals DotProduct ( VECTOR: X, VectorOf ( MidPoint ( LINESEGMENT: o ), POINT: Q ) )",
    "id": 2635,
    "declarations": "-69: NUMBER; X: VECTOR; o: LINESEGMENT; Q: POINT",
    "facts": "lg(-69) = DotProduct(X, VectorOf(MidPoint(o), Q))"
},
{
    "assertion": "DotProduct ( VECTOR: g, VECTOR: c ) equals XCoordinate ( POINT: x )",
    "id": 2636,
    "declarations": "g: VECTOR; c: VECTOR; x: POINT",
    "facts": "DotProduct(g, c) = XCoordinate(x)"
},
{
    "assertion": "sqrt ( FocalLength ( CONICSECTION: s ) ) equals NUMBER: -73",
    "id": 2637,
    "declarations": "s: CONICSECTION; -73: NUMBER",
    "facts": "sqrt(FocalLength(s)) = -73"
},
{
    "assertion": "Intersection ( CURVE: X, CURVE: S ) equals POINT: a",
    "id": 2638,
    "declarations": "X: CURVE; S: CURVE; a: POINT",
    "facts": "Intersection(X, S) = a"
},
{
    "assertion": "MajorAxis ( ELLIPSE: q ) equals LINESEGMENT: l",
    "id": 2639,
    "declarations": "q: ELLIPSE; l: LINESEGMENT",
    "facts": "MajorAxis(q) = l"
},
{
    "assertion": "lg ( NUMBER: 9 ) equals DotProduct ( VECTOR: O, VECTOR: z )",
    "id": 2640,
    "declarations": "9: NUMBER; O: VECTOR; z: VECTOR",
    "facts": "lg(9) = DotProduct(O, z)"
},
{
    "assertion": "TriangleOf ( POINT: z, POINT: Q, LowerFocus ( CONICSECTION: p ) ) equals TRIANGLE: Q",
    "id": 2641,
    "declarations": "z: POINT; Q: POINT; p: CONICSECTION; Q: TRIANGLE",
    "facts": "TriangleOf(z, Q, LowerFocus(p)) = Q"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: o ) equals LINE: U",
    "id": 2642,
    "declarations": "o: CONICSECTION; U: LINE",
    "facts": "LeftDirectrix(o) = U"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: R, TRIANGLE: U ) equals BOOL: True",
    "id": 2643,
    "declarations": "R: CIRCLE; U: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(R, U) = True"
},
{
    "assertion": "LowerVertex ( CONICSECTION: j ) equals Projection ( Incenter ( TRIANGLE: z ), PerpendicularBisector ( LINESEGMENT: Y ) )",
    "id": 2644,
    "declarations": "j: CONICSECTION; z: TRIANGLE; Y: LINESEGMENT",
    "facts": "LowerVertex(j) = Projection(Incenter(z), PerpendicularBisector(Y))"
},
{
    "assertion": "TangentPoint ( RightDirectrix ( CONICSECTION: t ), CIRCLE: z ) equals POINT: r",
    "id": 2645,
    "declarations": "t: CONICSECTION; z: CIRCLE; r: POINT",
    "facts": "TangentPoint(RightDirectrix(t), z) = r"
},
{
    "assertion": "AngleOf ( UpperFocus ( CONICSECTION: t ), RightFocus ( CONICSECTION: t ), POINT: L ) equals AngleOf ( POINT: x, POINT: I, UpperFocus ( CONICSECTION: Y ) )",
    "id": 2646,
    "declarations": "t: CONICSECTION; t: CONICSECTION; L: POINT; x: POINT; I: POINT; Y: CONICSECTION",
    "facts": "AngleOf(UpperFocus(t), RightFocus(t), L) = AngleOf(x, I, UpperFocus(Y))"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: i ) ) equals LINE: y",
    "id": 2647,
    "declarations": "i: ELLIPSE; y: LINE",
    "facts": "OverlappingLine(MinorAxis(i)) = y"
},
{
    "assertion": "MajorAxis ( ELLIPSE: E ) equals LINESEGMENT: q",
    "id": 2648,
    "declarations": "E: ELLIPSE; q: LINESEGMENT",
    "facts": "MajorAxis(E) = q"
},
{
    "assertion": "Directrix ( CONICSECTION: p ) equals LINE: a",
    "id": 2649,
    "declarations": "p: CONICSECTION; a: LINE",
    "facts": "Directrix(p) = a"
},
{
    "assertion": "ApplyUnit ( Perimeter ( CONICSECTION: O ), DEGREESTR: degree )",
    "id": 2650,
    "declarations": "O: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Perimeter(O), degree) = dummy_operator()"
},
{
    "assertion": "LocusEquation ( LeftVertex ( CONICSECTION: k ) ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 2651,
    "declarations": "k: CONICSECTION; y*space=*spacesin(x): EXPRESSION",
    "facts": "LocusEquation(LeftVertex(k)) = y*space=*spacesin(x)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: s ) equals POINT: j",
    "id": 2652,
    "declarations": "s: CONICSECTION; j: POINT",
    "facts": "LeftVertex(s) = j"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: b ) equals ImaginaryAxis ( ELLIPSE: k )",
    "id": 2655,
    "declarations": "b: ELLIPSE; k: ELLIPSE",
    "facts": "ImaginaryAxis(b) = ImaginaryAxis(k)"
},
{
    "assertion": "DotProduct ( VECTOR: a, VECTOR: d ) equals HalfFocalLength ( CONICSECTION: g )",
    "id": 2656,
    "declarations": "a: VECTOR; d: VECTOR; g: CONICSECTION",
    "facts": "DotProduct(a, d) = HalfFocalLength(g)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: G ) equals LINESEGMENT: M",
    "id": 2657,
    "declarations": "G: ELLIPSE; M: LINESEGMENT",
    "facts": "ImaginaryAxis(G) = M"
},
{
    "assertion": "FocalLength ( CONICSECTION: h ) equals Inclination ( LINE: i )",
    "id": 2658,
    "declarations": "h: CONICSECTION; i: LINE",
    "facts": "FocalLength(h) = Inclination(i)"
},
{
    "assertion": "AngleOf ( Incenter ( TRIANGLE: Y ), POINT: S, UpperFocus ( CONICSECTION: F ) ) equals ApplyUnit ( NUMBER: 69, DEGREESTR: degree )",
    "id": 2659,
    "declarations": "Y: TRIANGLE; S: POINT; F: CONICSECTION; 69: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(Incenter(Y), S, UpperFocus(F)) = ApplyUnit(69, degree)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: p ) equals CIRCLE: i",
    "id": 2660,
    "declarations": "p: TRIANGLE; i: CIRCLE",
    "facts": "CircumCircle(p) = i"
},
{
    "assertion": "Length ( MajorAxis ( ELLIPSE: D ) ) equals InterReciprocal ( YCoordinate ( Incenter ( TRIANGLE: a ) ) )",
    "id": 2661,
    "declarations": "D: ELLIPSE; a: TRIANGLE",
    "facts": "Length(MajorAxis(D)) = InterReciprocal(YCoordinate(Incenter(a)))"
},
{
    "assertion": "PointOnCurve ( POINT: f, CURVE: O ) equals BOOL: False",
    "id": 2662,
    "declarations": "f: POINT; O: CURVE; False: BOOL",
    "facts": "PointOnCurve(f, O) = False"
},
{
    "assertion": "LeftFocus ( CONICSECTION: N ) equals UpperVertex ( CONICSECTION: p )",
    "id": 2663,
    "declarations": "N: CONICSECTION; p: CONICSECTION",
    "facts": "LeftFocus(N) = UpperVertex(p)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: E ) equals UpperFocus ( CONICSECTION: E )",
    "id": 2664,
    "declarations": "E: TRIANGLE; E: CONICSECTION",
    "facts": "Orthocenter(E) = UpperFocus(E)"
},
{
    "assertion": "YCoordinate ( MidPoint ( LINESEGMENT: N ) ) equals Slope ( TangentOfPoint ( POINT: P, CURVE: r ) )",
    "id": 2665,
    "declarations": "N: LINESEGMENT; P: POINT; r: CURVE",
    "facts": "YCoordinate(MidPoint(N)) = Slope(TangentOfPoint(P, r))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: L, TRIANGLE: B ) equals BOOL: True",
    "id": 2666,
    "declarations": "L: CIRCLE; B: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(L, B) = True"
},
{
    "assertion": "lg ( Inclination ( LINE: K ) ) equals HalfFocalLength ( CONICSECTION: c )",
    "id": 2667,
    "declarations": "K: LINE; c: CONICSECTION",
    "facts": "lg(Inclination(K)) = HalfFocalLength(c)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -53, DEGREESTR: degree )",
    "id": 2668,
    "declarations": "-53: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-53, degree) = dummy_operator()"
},
{
    "assertion": "RightPart ( HYPERBOLA: i ) equals CURVE: z",
    "id": 2669,
    "declarations": "i: HYPERBOLA; z: CURVE",
    "facts": "RightPart(i) = z"
},
{
    "assertion": "Area ( CONICSECTION: C ) equals Distance ( POINT: a, POINT: u )",
    "id": 2670,
    "declarations": "C: CONICSECTION; a: POINT; u: POINT",
    "facts": "Area(C) = Distance(a, u)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: R ) equals RightFocus ( CONICSECTION: W )",
    "id": 2671,
    "declarations": "R: TRIANGLE; W: CONICSECTION",
    "facts": "Circumcenter(R) = RightFocus(W)"
},
{
    "assertion": "Incenter ( TRIANGLE: t ) equals POINT: w",
    "id": 2672,
    "declarations": "t: TRIANGLE; w: POINT",
    "facts": "Incenter(t) = w"
},
{
    "assertion": "UpperVertex ( CONICSECTION: F ) equals Orthocenter ( TRIANGLE: G )",
    "id": 2673,
    "declarations": "F: CONICSECTION; G: TRIANGLE",
    "facts": "UpperVertex(F) = Orthocenter(G)"
},
{
    "assertion": "RealAxis ( ELLIPSE: u ) equals LINESEGMENT: O",
    "id": 2674,
    "declarations": "u: ELLIPSE; O: LINESEGMENT",
    "facts": "RealAxis(u) = O"
},
{
    "assertion": "IsOutTangent ( CIRCLE: N, CIRCLE: m ) equals BOOL: True",
    "id": 2675,
    "declarations": "N: CIRCLE; m: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(N, m) = True"
},
{
    "assertion": "Locus ( POINT: l ) equals CURVE: i",
    "id": 2676,
    "declarations": "l: POINT; i: CURVE",
    "facts": "Locus(l) = i"
},
{
    "assertion": "IsTangent ( LINE: F, CONICSECTION: Q ) equals BOOL: True",
    "id": 2677,
    "declarations": "F: LINE; Q: CONICSECTION; True: BOOL",
    "facts": "IsTangent(F, Q) = True"
},
{
    "assertion": "sqrt ( Eccentricity ( CONICSECTION: i ) ) equals XCoordinate ( Circumcenter ( TRIANGLE: C ) )",
    "id": 2678,
    "declarations": "i: CONICSECTION; C: TRIANGLE",
    "facts": "sqrt(Eccentricity(i)) = XCoordinate(Circumcenter(C))"
},
{
    "assertion": "Vertex ( CONICSECTION: P ) equals Orthocenter ( TRIANGLE: S )",
    "id": 2679,
    "declarations": "P: CONICSECTION; S: TRIANGLE",
    "facts": "Vertex(P) = Orthocenter(S)"
},
{
    "assertion": "Length ( LINESEGMENT: H ) equals Diameter ( CIRCLE: E )",
    "id": 2680,
    "declarations": "H: LINESEGMENT; E: CIRCLE",
    "facts": "Length(H) = Diameter(E)"
},
{
    "assertion": "Directrix ( CONICSECTION: U ) equals LINE: C",
    "id": 2681,
    "declarations": "U: CONICSECTION; C: LINE",
    "facts": "Directrix(U) = C"
},
{
    "assertion": "Eccentricity ( CONICSECTION: o ) equals XCoordinate ( Incenter ( TRIANGLE: h ) )",
    "id": 2682,
    "declarations": "o: CONICSECTION; h: TRIANGLE",
    "facts": "Eccentricity(o) = XCoordinate(Incenter(h))"
},
{
    "assertion": "Locus ( Incenter ( TriangleOf ( UpperFocus ( CONICSECTION: V ), RightVertex ( CONICSECTION: X ), MidPoint ( LINESEGMENT: v ) ) ) ) equals CURVE: y",
    "id": 2683,
    "declarations": "V: CONICSECTION; X: CONICSECTION; v: LINESEGMENT; y: CURVE",
    "facts": "Locus(Incenter(TriangleOf(UpperFocus(V), RightVertex(X), MidPoint(v)))) = y"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: q ) equals LINESEGMENT: A",
    "id": 2684,
    "declarations": "q: ELLIPSE; A: LINESEGMENT",
    "facts": "ImaginaryAxis(q) = A"
},
{
    "assertion": "Intercept ( LINE: k, AXIS: xAxis ) equals InterReciprocal ( Eccentricity ( CONICSECTION: o ) )",
    "id": 2685,
    "declarations": "k: LINE; xAxis: AXIS; o: CONICSECTION",
    "facts": "Intercept(k, xAxis) = InterReciprocal(Eccentricity(o))"
},
{
    "assertion": "Area ( CONICSECTION: k ) equals InterReciprocal ( NUMBER: 89 )",
    "id": 2686,
    "declarations": "k: CONICSECTION; 89: NUMBER",
    "facts": "Area(k) = InterReciprocal(89)"
},
{
    "assertion": "Inclination ( RightDirectrix ( CONICSECTION: n ) ) equals NUMBER: 86",
    "id": 2687,
    "declarations": "n: CONICSECTION; 86: NUMBER",
    "facts": "Inclination(RightDirectrix(n)) = 86"
},
{
    "assertion": "XCoordinate ( UpperFocus ( CONICSECTION: y ) ) equals NUMBER: -2",
    "id": 2688,
    "declarations": "y: CONICSECTION; -2: NUMBER",
    "facts": "XCoordinate(UpperFocus(y)) = -2"
},
{
    "assertion": "IsIntersect ( Locus ( LeftFocus ( CONICSECTION: K ) ), CURVE: Y ) equals BOOL: False",
    "id": 2689,
    "declarations": "K: CONICSECTION; Y: CURVE; False: BOOL",
    "facts": "IsIntersect(Locus(LeftFocus(K)), Y) = False"
},
{
    "assertion": "Max ( Diameter ( CircumCircle ( TRIANGLE: Y ) ) ) equals NUMBER: -60",
    "id": 2690,
    "declarations": "Y: TRIANGLE; -60: NUMBER",
    "facts": "Max(Diameter(CircumCircle(Y))) = -60"
},
{
    "assertion": "Area ( CONICSECTION: g ) equals NUMBER: 84",
    "id": 2691,
    "declarations": "g: CONICSECTION; 84: NUMBER",
    "facts": "Area(g) = 84"
},
{
    "assertion": "Eccentricity ( CONICSECTION: F ) equals Abs ( LINESEGMENT: a )",
    "id": 2692,
    "declarations": "F: CONICSECTION; a: LINESEGMENT",
    "facts": "Eccentricity(F) = Abs(a)"
},
{
    "assertion": "VectorOf ( Orthocenter ( TRIANGLE: I ), UpperVertex ( CONICSECTION: Z ) ) equals VECTOR: h",
    "id": 2693,
    "declarations": "I: TRIANGLE; Z: CONICSECTION; h: VECTOR",
    "facts": "VectorOf(Orthocenter(I), UpperVertex(Z)) = h"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: g, CONICSECTION: z ) equals BOOL: True",
    "id": 2694,
    "declarations": "g: LINESEGMENT; z: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(g, z) = True"
},
{
    "assertion": "lg ( Radius ( CIRCLE: N ) ) equals NUMBER: 96",
    "id": 2695,
    "declarations": "N: CIRCLE; 96: NUMBER",
    "facts": "lg(Radius(N)) = 96"
},
{
    "assertion": "DotProduct ( VECTOR: a, VECTOR: H ) equals NUMBER: -31",
    "id": 2696,
    "declarations": "a: VECTOR; H: VECTOR; -31: NUMBER",
    "facts": "DotProduct(a, H) = -31"
},
{
    "assertion": "sqrt ( FocalLength ( CONICSECTION: E ) ) equals NUMBER: 7",
    "id": 2697,
    "declarations": "E: CONICSECTION; 7: NUMBER",
    "facts": "sqrt(FocalLength(E)) = 7"
},
{
    "assertion": "DotProduct ( VECTOR: r, VECTOR: v ) equals FocalLength ( CONICSECTION: f )",
    "id": 2698,
    "declarations": "r: VECTOR; v: VECTOR; f: CONICSECTION",
    "facts": "DotProduct(r, v) = FocalLength(f)"
},
{
    "assertion": "RightPart ( HYPERBOLA: H ) equals CURVE: Z",
    "id": 2699,
    "declarations": "H: HYPERBOLA; Z: CURVE",
    "facts": "RightPart(H) = Z"
},
{
    "assertion": "PointOnCurve ( POINT: g, CURVE: t ) equals BOOL: True",
    "id": 2700,
    "declarations": "g: POINT; t: CURVE; True: BOOL",
    "facts": "PointOnCurve(g, t) = True"
},
{
    "assertion": "Asymptote ( HYPERBOLA: E ) equals PerpendicularBisector ( LINESEGMENT: V )",
    "id": 2701,
    "declarations": "E: HYPERBOLA; V: LINESEGMENT",
    "facts": "Asymptote(E) = PerpendicularBisector(V)"
},
{
    "assertion": "Inclination ( LINE: W ) equals NUMBER: 15",
    "id": 2702,
    "declarations": "W: LINE; 15: NUMBER",
    "facts": "Inclination(W) = 15"
},
{
    "assertion": "VectorOf ( UpperFocus ( CONICSECTION: y ), Circumcenter ( TRIANGLE: d ) ) equals VectorOf ( Incenter ( TRIANGLE: w ), Orthocenter ( TRIANGLE: W ) )",
    "id": 2703,
    "declarations": "y: CONICSECTION; d: TRIANGLE; w: TRIANGLE; W: TRIANGLE",
    "facts": "VectorOf(UpperFocus(y), Circumcenter(d)) = VectorOf(Incenter(w), Orthocenter(W))"
},
{
    "assertion": "IsInTangent ( CIRCLE: z, CIRCLE: U ) equals BOOL: False",
    "id": 2704,
    "declarations": "z: CIRCLE; U: CIRCLE; False: BOOL",
    "facts": "IsInTangent(z, U) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: x ) equals LINESEGMENT: W",
    "id": 2705,
    "declarations": "x: ELLIPSE; W: LINESEGMENT",
    "facts": "MinorAxis(x) = W"
},
{
    "assertion": "Diameter ( CIRCLE: K ) equals sqrt ( Length ( LINESEGMENT: A ) )",
    "id": 2706,
    "declarations": "K: CIRCLE; A: LINESEGMENT",
    "facts": "Diameter(K) = sqrt(Length(A))"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: C ), TRIANGLE: L ) equals BOOL: False",
    "id": 2707,
    "declarations": "C: TRIANGLE; L: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(C), L) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: Q, TRIANGLE: H ) equals BOOL: True",
    "id": 2708,
    "declarations": "Q: CIRCLE; H: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(Q, H) = True"
},
{
    "assertion": "XCoordinate ( POINT: S ) equals Perimeter ( CONICSECTION: b )",
    "id": 2709,
    "declarations": "S: POINT; b: CONICSECTION",
    "facts": "XCoordinate(S) = Perimeter(b)"
},
{
    "assertion": "Inclination ( LINE: p ) equals Radius ( CIRCLE: T )",
    "id": 2710,
    "declarations": "p: LINE; T: CIRCLE",
    "facts": "Inclination(p) = Radius(T)"
},
{
    "assertion": "Quadrant ( POINT: p ) equals DotProduct ( VECTOR: A, VECTOR: s )",
    "id": 2711,
    "declarations": "p: POINT; A: VECTOR; s: VECTOR",
    "facts": "Quadrant(p) = DotProduct(A, s)"
},
{
    "assertion": "Intersection ( LeftPart ( HYPERBOLA: V ), CURVE: O ) equals POINT: c",
    "id": 2712,
    "declarations": "V: HYPERBOLA; O: CURVE; c: POINT",
    "facts": "Intersection(LeftPart(V), O) = c"
},
{
    "assertion": "Min ( YCoordinate ( POINT: z ) ) equals Eccentricity ( CONICSECTION: v )",
    "id": 2713,
    "declarations": "z: POINT; v: CONICSECTION",
    "facts": "Min(YCoordinate(z)) = Eccentricity(v)"
},
{
    "assertion": "sqrt ( NUMBER: -37 ) equals lg ( NUMBER: 90 )",
    "id": 2714,
    "declarations": "-37: NUMBER; 90: NUMBER",
    "facts": "sqrt(-37) = lg(90)"
},
{
    "assertion": "RealAxis ( ELLIPSE: O ) equals LINESEGMENT: L",
    "id": 2715,
    "declarations": "O: ELLIPSE; L: LINESEGMENT",
    "facts": "RealAxis(O) = L"
},
{
    "assertion": "LeftVertex ( CONICSECTION: h ) equals POINT: u",
    "id": 2716,
    "declarations": "h: CONICSECTION; u: POINT",
    "facts": "LeftVertex(h) = u"
},
{
    "assertion": "IsInTangent ( CIRCLE: P, CIRCLE: o ) equals BOOL: True",
    "id": 2717,
    "declarations": "P: CIRCLE; o: CIRCLE; True: BOOL",
    "facts": "IsInTangent(P, o) = True"
},
{
    "assertion": "Quadrant ( POINT: x ) equals NUMBER: -39",
    "id": 2718,
    "declarations": "x: POINT; -39: NUMBER",
    "facts": "Quadrant(x) = -39"
},
{
    "assertion": "UpperVertex ( CONICSECTION: l ) equals POINT: f",
    "id": 2719,
    "declarations": "l: CONICSECTION; f: POINT",
    "facts": "UpperVertex(l) = f"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: R ) equals AXIS: xAxis",
    "id": 2720,
    "declarations": "R: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(R) = xAxis"
},
{
    "assertion": "Slope ( TangentOfPoint ( POINT: J, Locus ( UpperFocus ( CONICSECTION: O ) ) ) ) equals YCoordinate ( LowerFocus ( CONICSECTION: M ) )",
    "id": 2721,
    "declarations": "J: POINT; O: CONICSECTION; M: CONICSECTION",
    "facts": "Slope(TangentOfPoint(J, Locus(UpperFocus(O)))) = YCoordinate(LowerFocus(M))"
},
{
    "assertion": "Diameter ( CIRCLE: w ) equals NUMBER: 80",
    "id": 2722,
    "declarations": "w: CIRCLE; 80: NUMBER",
    "facts": "Diameter(w) = 80"
},
{
    "assertion": "Center ( CONICSECTION: m ) equals Projection ( POINT: Q, LINE: d )",
    "id": 2723,
    "declarations": "m: CONICSECTION; Q: POINT; d: LINE",
    "facts": "Center(m) = Projection(Q, d)"
},
{
    "assertion": "NumIntersection ( CURVE: d, CURVE: C ) equals Length ( LINESEGMENT: j )",
    "id": 2724,
    "declarations": "d: CURVE; C: CURVE; j: LINESEGMENT",
    "facts": "NumIntersection(d, C) = Length(j)"
},
{
    "assertion": "DotProduct ( VECTOR: V, VECTOR: T ) equals Min ( Eccentricity ( CONICSECTION: d ) )",
    "id": 2725,
    "declarations": "V: VECTOR; T: VECTOR; d: CONICSECTION",
    "facts": "DotProduct(V, T) = Min(Eccentricity(d))"
},
{
    "assertion": "Perimeter ( CONICSECTION: M ) equals lg ( HalfFocalLength ( CONICSECTION: f ) )",
    "id": 2726,
    "declarations": "M: CONICSECTION; f: CONICSECTION",
    "facts": "Perimeter(M) = lg(HalfFocalLength(f))"
},
{
    "assertion": "IsParallel ( LINE: K, LINE: U ) equals BOOL: True",
    "id": 2727,
    "declarations": "K: LINE; U: LINE; True: BOOL",
    "facts": "IsParallel(K, U) = True"
},
{
    "assertion": "FocalLength ( CONICSECTION: R ) equals NUMBER: -52",
    "id": 2728,
    "declarations": "R: CONICSECTION; -52: NUMBER",
    "facts": "FocalLength(R) = -52"
},
{
    "assertion": "MinorAxis ( ELLIPSE: u ) equals LINESEGMENT: U",
    "id": 2729,
    "declarations": "u: ELLIPSE; U: LINESEGMENT",
    "facts": "MinorAxis(u) = U"
},
{
    "assertion": "Distance ( LeftFocus ( CONICSECTION: L ), POINT: H ) equals InterReciprocal ( NUMBER: 76 )",
    "id": 2730,
    "declarations": "L: CONICSECTION; H: POINT; 76: NUMBER",
    "facts": "Distance(LeftFocus(L), H) = InterReciprocal(76)"
},
{
    "assertion": "IsChordOf ( MinorAxis ( ELLIPSE: f ), CONICSECTION: p ) equals BOOL: False",
    "id": 2731,
    "declarations": "f: ELLIPSE; p: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(MinorAxis(f), p) = False"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: b, CIRCLE: U ) equals BOOL: False",
    "id": 2732,
    "declarations": "b: LINESEGMENT; U: CIRCLE; False: BOOL",
    "facts": "IsDiameter(b, U) = False"
},
{
    "assertion": "Quadrant ( POINT: a ) equals XCoordinate ( RightFocus ( CONICSECTION: a ) )",
    "id": 2733,
    "declarations": "a: POINT; a: CONICSECTION",
    "facts": "Quadrant(a) = XCoordinate(RightFocus(a))"
},
{
    "assertion": "Focus ( CONICSECTION: R ) equals POINT: s",
    "id": 2734,
    "declarations": "R: CONICSECTION; s: POINT",
    "facts": "Focus(R) = s"
},
{
    "assertion": "Orthocenter ( TRIANGLE: W ) equals Orthocenter ( TRIANGLE: G )",
    "id": 2735,
    "declarations": "W: TRIANGLE; G: TRIANGLE",
    "facts": "Orthocenter(W) = Orthocenter(G)"
},
{
    "assertion": "Intercept ( LINE: x, AXIS: yAxis ) equals NUMBER: -21",
    "id": 2736,
    "declarations": "x: LINE; yAxis: AXIS; -21: NUMBER",
    "facts": "Intercept(x, yAxis) = -21"
},
{
    "assertion": "Abs ( LINESEGMENT: g ) equals HalfFocalLength ( CONICSECTION: q )",
    "id": 2737,
    "declarations": "g: LINESEGMENT; q: CONICSECTION",
    "facts": "Abs(g) = HalfFocalLength(q)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: j, TRIANGLE: U ) equals BOOL: False",
    "id": 2738,
    "declarations": "j: CIRCLE; U: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(j, U) = False"
},
{
    "assertion": "FootPoint ( LINE: l, LINE: D ) equals MidPoint ( LINESEGMENT: l )",
    "id": 2739,
    "declarations": "l: LINE; D: LINE; l: LINESEGMENT",
    "facts": "FootPoint(l, D) = MidPoint(l)"
},
{
    "assertion": "IsPerpendicular ( LINE: m, LINE: r ) equals BOOL: False",
    "id": 2740,
    "declarations": "m: LINE; r: LINE; False: BOOL",
    "facts": "IsPerpendicular(m, r) = False"
},
{
    "assertion": "sqrt ( Abs ( LINESEGMENT: z ) ) equals NUMBER: -64",
    "id": 2741,
    "declarations": "z: LINESEGMENT; -64: NUMBER",
    "facts": "sqrt(Abs(z)) = -64"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: K, TRIANGLE: q ) equals BOOL: True",
    "id": 2742,
    "declarations": "K: CIRCLE; q: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(K, q) = True"
},
{
    "assertion": "Expression ( CURVE: b ) equals EXPRESSION: x^3*space+*spacey^3*space=*space1",
    "id": 2743,
    "declarations": "b: CURVE; x^3*space+*spacey^3*space=*space1: EXPRESSION",
    "facts": "Expression(b) = x^3*space+*spacey^3*space=*space1"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: m ) ) equals CURVE: f",
    "id": 2744,
    "declarations": "m: CONICSECTION; f: CURVE",
    "facts": "Locus(LeftFocus(m)) = f"
},
{
    "assertion": "RealAxis ( ELLIPSE: u ) equals LINESEGMENT: M",
    "id": 2745,
    "declarations": "u: ELLIPSE; M: LINESEGMENT",
    "facts": "RealAxis(u) = M"
},
{
    "assertion": "UpperVertex ( CONICSECTION: R ) equals Circumcenter ( TRIANGLE: Q )",
    "id": 2746,
    "declarations": "R: CONICSECTION; Q: TRIANGLE",
    "facts": "UpperVertex(R) = Circumcenter(Q)"
},
{
    "assertion": "IsIntersect ( RightPart ( HYPERBOLA: j ), CURVE: n ) equals BOOL: True",
    "id": 2747,
    "declarations": "j: HYPERBOLA; n: CURVE; True: BOOL",
    "facts": "IsIntersect(RightPart(j), n) = True"
},
{
    "assertion": "LowerFocus ( CONICSECTION: i ) equals POINT: o",
    "id": 2748,
    "declarations": "i: CONICSECTION; o: POINT",
    "facts": "LowerFocus(i) = o"
},
{
    "assertion": "Max ( Length ( MajorAxis ( ELLIPSE: W ) ) ) equals Min ( DotProduct ( VECTOR: F, VECTOR: b ) )",
    "id": 2749,
    "declarations": "W: ELLIPSE; F: VECTOR; b: VECTOR",
    "facts": "Max(Length(MajorAxis(W))) = Min(DotProduct(F, b))"
},
{
    "assertion": "Distance ( POINT: e, POINT: Z ) equals DotProduct ( VECTOR: D, VECTOR: E )",
    "id": 2750,
    "declarations": "e: POINT; Z: POINT; D: VECTOR; E: VECTOR",
    "facts": "Distance(e, Z) = DotProduct(D, E)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: n ) equals Orthocenter ( TRIANGLE: x )",
    "id": 2751,
    "declarations": "n: CONICSECTION; x: TRIANGLE",
    "facts": "LowerVertex(n) = Orthocenter(x)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: e ) equals LINESEGMENT: b",
    "id": 2752,
    "declarations": "e: ELLIPSE; b: LINESEGMENT",
    "facts": "MajorAxis(e) = b"
},
{
    "assertion": "ApplyUnit ( HalfFocalLength ( CONICSECTION: X ), DEGREESTR: degree )",
    "id": 2753,
    "declarations": "X: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(HalfFocalLength(X), degree) = dummy_operator()"
},
{
    "assertion": "PerpendicularBisector ( MajorAxis ( ELLIPSE: H ) ) equals LINE: W",
    "id": 2754,
    "declarations": "H: ELLIPSE; W: LINE",
    "facts": "PerpendicularBisector(MajorAxis(H)) = W"
},
{
    "assertion": "Vertex ( CONICSECTION: V ) equals POINT: z",
    "id": 2755,
    "declarations": "V: CONICSECTION; z: POINT",
    "facts": "Vertex(V) = z"
},
{
    "assertion": "MajorAxis ( ELLIPSE: y ) equals LINESEGMENT: P",
    "id": 2756,
    "declarations": "y: ELLIPSE; P: LINESEGMENT",
    "facts": "MajorAxis(y) = P"
},
{
    "assertion": "Eccentricity ( CONICSECTION: E ) equals NumIntersection ( Locus ( Orthocenter ( TRIANGLE: x ) ), RightPart ( HYPERBOLA: j ) )",
    "id": 2757,
    "declarations": "E: CONICSECTION; x: TRIANGLE; j: HYPERBOLA",
    "facts": "Eccentricity(E) = NumIntersection(Locus(Orthocenter(x)), RightPart(j))"
},
{
    "assertion": "Incenter ( TRIANGLE: e ) equals FootPoint ( TangentOfPoint ( Orthocenter ( TRIANGLE: H ), LeftPart ( HYPERBOLA: d ) ), LeftDirectrix ( CONICSECTION: m ) )",
    "id": 2758,
    "declarations": "e: TRIANGLE; H: TRIANGLE; d: HYPERBOLA; m: CONICSECTION",
    "facts": "Incenter(e) = FootPoint(TangentOfPoint(Orthocenter(H), LeftPart(d)), LeftDirectrix(m))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: X, TRIANGLE: y ) equals BOOL: False",
    "id": 2759,
    "declarations": "X: CIRCLE; y: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(X, y) = False"
},
{
    "assertion": "Quadrant ( POINT: g ) equals lg ( Eccentricity ( CONICSECTION: C ) )",
    "id": 2760,
    "declarations": "g: POINT; C: CONICSECTION",
    "facts": "Quadrant(g) = lg(Eccentricity(C))"
},
{
    "assertion": "Negation ( TangentPoint ( LINE: V, CIRCLE: W ) equals POINT: x ) equals BOOL: False",
    "id": 2761,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "TangentOnPoint ( LowerVertex ( CONICSECTION: d ), CURVE: J ) equals LINE: I",
    "id": 2762,
    "declarations": "d: CONICSECTION; J: CURVE; I: LINE",
    "facts": "TangentOnPoint(LowerVertex(d), J) = I"
},
{
    "assertion": "Intercept ( LeftDirectrix ( CONICSECTION: S ), AXIS: yAxis ) equals NUMBER: 29",
    "id": 2763,
    "declarations": "S: CONICSECTION; yAxis: AXIS; 29: NUMBER",
    "facts": "Intercept(LeftDirectrix(S), yAxis) = 29"
},
{
    "assertion": "lg ( NUMBER: 81 ) equals Min ( NUMBER: -81 )",
    "id": 2764,
    "declarations": "81: NUMBER; -81: NUMBER",
    "facts": "lg(81) = Min(-81)"
},
{
    "assertion": "Min ( NUMBER: 79 ) equals HalfFocalLength ( CONICSECTION: W )",
    "id": 2765,
    "declarations": "79: NUMBER; W: CONICSECTION",
    "facts": "Min(79) = HalfFocalLength(W)"
},
{
    "assertion": "Projection ( MidPoint ( MajorAxis ( ELLIPSE: w ) ), LINE: z ) equals Center ( CONICSECTION: S )",
    "id": 2766,
    "declarations": "w: ELLIPSE; z: LINE; S: CONICSECTION",
    "facts": "Projection(MidPoint(MajorAxis(w)), z) = Center(S)"
},
{
    "assertion": "TangentOnPoint ( POINT: N, CURVE: y ) equals LINE: a",
    "id": 2767,
    "declarations": "N: POINT; y: CURVE; a: LINE",
    "facts": "TangentOnPoint(N, y) = a"
},
{
    "assertion": "RealAxis ( ELLIPSE: t ) equals MajorAxis ( ELLIPSE: X )",
    "id": 2768,
    "declarations": "t: ELLIPSE; X: ELLIPSE",
    "facts": "RealAxis(t) = MajorAxis(X)"
},
{
    "assertion": "Expression ( CURVE: k ) equals EXPRESSION: x^2*space+*spacey^2*space=*space25",
    "id": 2769,
    "declarations": "k: CURVE; x^2*space+*spacey^2*space=*space25: EXPRESSION",
    "facts": "Expression(k) = x^2*space+*spacey^2*space=*space25"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: T ) equals LINESEGMENT: n",
    "id": 2770,
    "declarations": "T: ELLIPSE; n: LINESEGMENT",
    "facts": "ImaginaryAxis(T) = n"
},
{
    "assertion": "UpperFocus ( CONICSECTION: n ) equals Circumcenter ( TRIANGLE: x )",
    "id": 2771,
    "declarations": "n: CONICSECTION; x: TRIANGLE",
    "facts": "UpperFocus(n) = Circumcenter(x)"
},
{
    "assertion": "Locus ( MidPoint ( LINESEGMENT: m ) ) equals CURVE: z",
    "id": 2772,
    "declarations": "m: LINESEGMENT; z: CURVE",
    "facts": "Locus(MidPoint(m)) = z"
},
{
    "assertion": "MidPoint ( LINESEGMENT: B ) equals UpperVertex ( CONICSECTION: F )",
    "id": 2773,
    "declarations": "B: LINESEGMENT; F: CONICSECTION",
    "facts": "MidPoint(B) = UpperVertex(F)"
},
{
    "assertion": "VectorOf ( RightVertex ( CONICSECTION: C ), LeftFocus ( CONICSECTION: G ) ) equals VECTOR: h",
    "id": 2774,
    "declarations": "C: CONICSECTION; G: CONICSECTION; h: VECTOR",
    "facts": "VectorOf(RightVertex(C), LeftFocus(G)) = h"
},
{
    "assertion": "LeftPart ( HYPERBOLA: Q ) equals CURVE: p",
    "id": 2775,
    "declarations": "Q: HYPERBOLA; p: CURVE",
    "facts": "LeftPart(Q) = p"
},
{
    "assertion": "Inclination ( TangentOfPoint ( Orthocenter ( TRIANGLE: t ), LeftPart ( HYPERBOLA: i ) ) ) equals NUMBER: 44",
    "id": 2776,
    "declarations": "t: TRIANGLE; i: HYPERBOLA; 44: NUMBER",
    "facts": "Inclination(TangentOfPoint(Orthocenter(t), LeftPart(i))) = 44"
},
{
    "assertion": "InterReciprocal ( YCoordinate ( RightFocus ( CONICSECTION: f ) ) ) equals NUMBER: 49",
    "id": 2777,
    "declarations": "f: CONICSECTION; 49: NUMBER",
    "facts": "InterReciprocal(YCoordinate(RightFocus(f))) = 49"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: i ) equals LINE: o",
    "id": 2778,
    "declarations": "i: CONICSECTION; o: LINE",
    "facts": "LeftDirectrix(i) = o"
},
{
    "assertion": "MajorAxis ( ELLIPSE: R ) equals LINESEGMENT: J",
    "id": 2779,
    "declarations": "R: ELLIPSE; J: LINESEGMENT",
    "facts": "MajorAxis(R) = J"
},
{
    "assertion": "Diameter ( CIRCLE: H ) equals NUMBER: -68",
    "id": 2780,
    "declarations": "H: CIRCLE; -68: NUMBER",
    "facts": "Diameter(H) = -68"
},
{
    "assertion": "Focus ( CONICSECTION: J ) equals Orthocenter ( TRIANGLE: i )",
    "id": 2781,
    "declarations": "J: CONICSECTION; i: TRIANGLE",
    "facts": "Focus(J) = Orthocenter(i)"
},
{
    "assertion": "Length ( LINESEGMENT: U ) equals Perimeter ( CONICSECTION: H )",
    "id": 2782,
    "declarations": "U: LINESEGMENT; H: CONICSECTION",
    "facts": "Length(U) = Perimeter(H)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: N ) equals POINT: g",
    "id": 2783,
    "declarations": "N: CONICSECTION; g: POINT",
    "facts": "UpperFocus(N) = g"
},
{
    "assertion": "LineSegmentOf ( LowerFocus ( CONICSECTION: s ), POINT: i ) equals LINESEGMENT: Y",
    "id": 2784,
    "declarations": "s: CONICSECTION; i: POINT; Y: LINESEGMENT",
    "facts": "LineSegmentOf(LowerFocus(s), i) = Y"
},
{
    "assertion": "VectorOf ( POINT: K, POINT: a ) equals VECTOR: L",
    "id": 2785,
    "declarations": "K: POINT; a: POINT; L: VECTOR",
    "facts": "VectorOf(K, a) = L"
},
{
    "assertion": "Diameter ( CIRCLE: J ) equals NUMBER: -63",
    "id": 2786,
    "declarations": "J: CIRCLE; -63: NUMBER",
    "facts": "Diameter(J) = -63"
},
{
    "assertion": "MajorAxis ( ELLIPSE: A ) equals LINESEGMENT: U",
    "id": 2787,
    "declarations": "A: ELLIPSE; U: LINESEGMENT",
    "facts": "MajorAxis(A) = U"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: O ) equals LINE: d",
    "id": 2788,
    "declarations": "O: LINESEGMENT; d: LINE",
    "facts": "PerpendicularBisector(O) = d"
},
{
    "assertion": "MajorAxis ( ELLIPSE: y ) equals ImaginaryAxis ( ELLIPSE: w )",
    "id": 2789,
    "declarations": "y: ELLIPSE; w: ELLIPSE",
    "facts": "MajorAxis(y) = ImaginaryAxis(w)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: q, CIRCLE: m ) equals BOOL: False",
    "id": 2790,
    "declarations": "q: CIRCLE; m: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(q, m) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: S, TriangleOf ( RightFocus ( CONICSECTION: e ), LowerVertex ( CONICSECTION: K ), LowerFocus ( CONICSECTION: W ) ) ) equals BOOL: False",
    "id": 2791,
    "declarations": "S: CIRCLE; e: CONICSECTION; K: CONICSECTION; W: CONICSECTION; False: BOOL",
    "facts": "IsInscribedCircle(S, TriangleOf(RightFocus(e), LowerVertex(K), LowerFocus(W))) = False"
},
{
    "assertion": "IsParallel ( LINE: Z, LINE: T ) equals BOOL: True",
    "id": 2792,
    "declarations": "Z: LINE; T: LINE; True: BOOL",
    "facts": "IsParallel(Z, T) = True"
},
{
    "assertion": "Min ( Eccentricity ( CONICSECTION: r ) ) equals Intercept ( LINE: O, AXIS: xAxis )",
    "id": 2793,
    "declarations": "r: CONICSECTION; O: LINE; xAxis: AXIS",
    "facts": "Min(Eccentricity(r)) = Intercept(O, xAxis)"
},
{
    "assertion": "Intercept ( LINE: h, AXIS: yAxis ) equals InterReciprocal ( NUMBER: 40 )",
    "id": 2794,
    "declarations": "h: LINE; yAxis: AXIS; 40: NUMBER",
    "facts": "Intercept(h, yAxis) = InterReciprocal(40)"
},
{
    "assertion": "Vertex ( CONICSECTION: G ) equals POINT: F",
    "id": 2795,
    "declarations": "G: CONICSECTION; F: POINT",
    "facts": "Vertex(G) = F"
},
{
    "assertion": "RightFocus ( CONICSECTION: e ) equals POINT: D",
    "id": 2796,
    "declarations": "e: CONICSECTION; D: POINT",
    "facts": "RightFocus(e) = D"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: r ) equals TangentOnPoint ( POINT: J, CURVE: m )",
    "id": 2797,
    "declarations": "r: LINESEGMENT; J: POINT; m: CURVE",
    "facts": "OverlappingLine(r) = TangentOnPoint(J, m)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: D ) equals Orthocenter ( TRIANGLE: P )",
    "id": 2798,
    "declarations": "D: CONICSECTION; P: TRIANGLE",
    "facts": "LeftVertex(D) = Orthocenter(P)"
},
{
    "assertion": "YCoordinate ( POINT: R ) equals NUMBER: 96",
    "id": 2799,
    "declarations": "R: POINT; 96: NUMBER",
    "facts": "YCoordinate(R) = 96"
},
{
    "assertion": "MidPoint ( LINESEGMENT: N ) equals Incenter ( TRIANGLE: l )",
    "id": 2800,
    "declarations": "N: LINESEGMENT; l: TRIANGLE",
    "facts": "MidPoint(N) = Incenter(l)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: y ) equals LINE: b",
    "id": 2801,
    "declarations": "y: CONICSECTION; b: LINE",
    "facts": "RightDirectrix(y) = b"
},
{
    "assertion": "DotProduct ( VECTOR: C, VECTOR: D ) equals InterReciprocal ( NUMBER: -83 )",
    "id": 2802,
    "declarations": "C: VECTOR; D: VECTOR; -83: NUMBER",
    "facts": "DotProduct(C, D) = InterReciprocal(-83)"
},
{
    "assertion": "Incenter ( TRIANGLE: O ) equals Orthocenter ( TRIANGLE: o )",
    "id": 2803,
    "declarations": "O: TRIANGLE; o: TRIANGLE",
    "facts": "Incenter(O) = Orthocenter(o)"
},
{
    "assertion": "Radius ( CIRCLE: d ) equals NUMBER: -54",
    "id": 2804,
    "declarations": "d: CIRCLE; -54: NUMBER",
    "facts": "Radius(d) = -54"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: B ) equals LINE: f",
    "id": 2805,
    "declarations": "B: LINESEGMENT; f: LINE",
    "facts": "PerpendicularBisector(B) = f"
},
{
    "assertion": "LeftFocus ( CONICSECTION: r ) equals MidPoint ( MajorAxis ( ELLIPSE: R ) )",
    "id": 2806,
    "declarations": "r: CONICSECTION; R: ELLIPSE",
    "facts": "LeftFocus(r) = MidPoint(MajorAxis(R))"
},
{
    "assertion": "Radius ( CIRCLE: b ) equals NUMBER: -45",
    "id": 2807,
    "declarations": "b: CIRCLE; -45: NUMBER",
    "facts": "Radius(b) = -45"
},
{
    "assertion": "Orthocenter ( TRIANGLE: C ) equals Incenter ( TRIANGLE: w )",
    "id": 2808,
    "declarations": "C: TRIANGLE; w: TRIANGLE",
    "facts": "Orthocenter(C) = Incenter(w)"
},
{
    "assertion": "LocusEquation ( UpperVertex ( CONICSECTION: L ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 2809,
    "declarations": "L: CONICSECTION; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(UpperVertex(L)) = y*space=*spacelog(x)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: w ) equals LINESEGMENT: M",
    "id": 2810,
    "declarations": "w: ELLIPSE; M: LINESEGMENT",
    "facts": "ImaginaryAxis(w) = M"
},
{
    "assertion": "Endpoint ( LINESEGMENT: u ) equals Orthocenter ( TRIANGLE: V )",
    "id": 2811,
    "declarations": "u: LINESEGMENT; V: TRIANGLE",
    "facts": "Endpoint(u) = Orthocenter(V)"
},
{
    "assertion": "Length ( LINESEGMENT: G ) equals NUMBER: 48",
    "id": 2812,
    "declarations": "G: LINESEGMENT; 48: NUMBER",
    "facts": "Length(G) = 48"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: Y, TRIANGLE: M ) equals BOOL: False",
    "id": 2813,
    "declarations": "Y: CIRCLE; M: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(Y, M) = False"
},
{
    "assertion": "Intersection ( CURVE: a, CURVE: C ) equals POINT: k",
    "id": 2814,
    "declarations": "a: CURVE; C: CURVE; k: POINT",
    "facts": "Intersection(a, C) = k"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: x ) equals AXIS: xAxis",
    "id": 2815,
    "declarations": "x: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(x) = xAxis"
},
{
    "assertion": "Asymptote ( HYPERBOLA: X ) equals RightDirectrix ( CONICSECTION: D )",
    "id": 2816,
    "declarations": "X: HYPERBOLA; D: CONICSECTION",
    "facts": "Asymptote(X) = RightDirectrix(D)"
},
{
    "assertion": "IsInTangent ( CIRCLE: w, CIRCLE: r ) equals BOOL: True",
    "id": 2817,
    "declarations": "w: CIRCLE; r: CIRCLE; True: BOOL",
    "facts": "IsInTangent(w, r) = True"
},
{
    "assertion": "Projection ( LowerVertex ( CONICSECTION: l ), LeftDirectrix ( CONICSECTION: u ) ) equals POINT: u",
    "id": 2818,
    "declarations": "l: CONICSECTION; u: CONICSECTION; u: POINT",
    "facts": "Projection(LowerVertex(l), LeftDirectrix(u)) = u"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: h ) equals LINE: b",
    "id": 2819,
    "declarations": "h: CONICSECTION; b: LINE",
    "facts": "RightDirectrix(h) = b"
},
{
    "assertion": "Slope ( LINE: O ) equals sqrt ( HalfFocalLength ( CONICSECTION: D ) )",
    "id": 2820,
    "declarations": "O: LINE; D: CONICSECTION",
    "facts": "Slope(O) = sqrt(HalfFocalLength(D))"
},
{
    "assertion": "AngleOf ( UpperVertex ( CONICSECTION: V ), POINT: j, POINT: y ) equals AngleOf ( LowerFocus ( CONICSECTION: J ), LeftVertex ( CONICSECTION: R ), Orthocenter ( TRIANGLE: a ) )",
    "id": 2821,
    "declarations": "V: CONICSECTION; j: POINT; y: POINT; J: CONICSECTION; R: CONICSECTION; a: TRIANGLE",
    "facts": "AngleOf(UpperVertex(V), j, y) = AngleOf(LowerFocus(J), LeftVertex(R), Orthocenter(a))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: r ) equals NUMBER: -53",
    "id": 2822,
    "declarations": "r: CONICSECTION; -53: NUMBER",
    "facts": "HalfFocalLength(r) = -53"
},
{
    "assertion": "Circumcenter ( TRIANGLE: e ) equals POINT: S",
    "id": 2823,
    "declarations": "e: TRIANGLE; S: POINT",
    "facts": "Circumcenter(e) = S"
},
{
    "assertion": "RightFocus ( CONICSECTION: x ) equals POINT: C",
    "id": 2824,
    "declarations": "x: CONICSECTION; C: POINT",
    "facts": "RightFocus(x) = C"
},
{
    "assertion": "Center ( CONICSECTION: q ) equals POINT: c",
    "id": 2825,
    "declarations": "q: CONICSECTION; c: POINT",
    "facts": "Center(q) = c"
},
{
    "assertion": "Max ( Intercept ( LINE: h, AXIS: xAxis ) ) equals Inclination ( LINE: A )",
    "id": 2826,
    "declarations": "h: LINE; xAxis: AXIS; A: LINE",
    "facts": "Max(Intercept(h, xAxis)) = Inclination(A)"
},
{
    "assertion": "InterceptChord ( LINE: y, CONICSECTION: N ) equals MinorAxis ( ELLIPSE: x )",
    "id": 2827,
    "declarations": "y: LINE; N: CONICSECTION; x: ELLIPSE",
    "facts": "InterceptChord(y, N) = MinorAxis(x)"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: x ) ) equals XCoordinate ( POINT: b )",
    "id": 2828,
    "declarations": "x: TRIANGLE; b: POINT",
    "facts": "Radius(CircumCircle(x)) = XCoordinate(b)"
},
{
    "assertion": "Incenter ( TRIANGLE: a ) equals Incenter ( TRIANGLE: B )",
    "id": 2829,
    "declarations": "a: TRIANGLE; B: TRIANGLE",
    "facts": "Incenter(a) = Incenter(B)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: Y, CONICSECTION: E ) equals BOOL: False",
    "id": 2830,
    "declarations": "Y: LINESEGMENT; E: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(Y, E) = False"
},
{
    "assertion": "CircumCircle ( TRIANGLE: i ) equals CIRCLE: x",
    "id": 2831,
    "declarations": "i: TRIANGLE; x: CIRCLE",
    "facts": "CircumCircle(i) = x"
},
{
    "assertion": "Focus ( CONICSECTION: C ) equals UpperVertex ( CONICSECTION: Z )",
    "id": 2832,
    "declarations": "C: CONICSECTION; Z: CONICSECTION",
    "facts": "Focus(C) = UpperVertex(Z)"
},
{
    "assertion": "Quadrant ( UpperFocus ( CONICSECTION: B ) ) equals NUMBER: -26",
    "id": 2833,
    "declarations": "B: CONICSECTION; -26: NUMBER",
    "facts": "Quadrant(UpperFocus(B)) = -26"
},
{
    "assertion": "LineSegmentOf ( POINT: Q, Circumcenter ( TRIANGLE: V ) ) equals LINESEGMENT: m",
    "id": 2834,
    "declarations": "Q: POINT; V: TRIANGLE; m: LINESEGMENT",
    "facts": "LineSegmentOf(Q, Circumcenter(V)) = m"
},
{
    "assertion": "TangentOfPoint ( Projection ( LowerVertex ( CONICSECTION: h ), TangentOnPoint ( POINT: b, CURVE: Q ) ), CURVE: P ) equals LINE: d",
    "id": 2835,
    "declarations": "h: CONICSECTION; b: POINT; Q: CURVE; P: CURVE; d: LINE",
    "facts": "TangentOfPoint(Projection(LowerVertex(h), TangentOnPoint(b, Q)), P) = d"
},
{
    "assertion": "LeftPart ( HYPERBOLA: G ) equals CURVE: R",
    "id": 2836,
    "declarations": "G: HYPERBOLA; R: CURVE",
    "facts": "LeftPart(G) = R"
},
{
    "assertion": "InterceptChord ( LineOf ( LeftFocus ( CONICSECTION: x ), RightVertex ( CONICSECTION: p ) ), CONICSECTION: E ) equals RealAxis ( ELLIPSE: y )",
    "id": 2837,
    "declarations": "x: CONICSECTION; p: CONICSECTION; E: CONICSECTION; y: ELLIPSE",
    "facts": "InterceptChord(LineOf(LeftFocus(x), RightVertex(p)), E) = RealAxis(y)"
},
{
    "assertion": "RightFocus ( CONICSECTION: w ) equals LowerFocus ( CONICSECTION: a )",
    "id": 2838,
    "declarations": "w: CONICSECTION; a: CONICSECTION",
    "facts": "RightFocus(w) = LowerFocus(a)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: n ) equals POINT: f",
    "id": 2839,
    "declarations": "n: CONICSECTION; f: POINT",
    "facts": "UpperFocus(n) = f"
},
{
    "assertion": "RightFocus ( CONICSECTION: D ) equals FootPoint ( PerpendicularBisector ( LINESEGMENT: N ), OverlappingLine ( LINESEGMENT: Y ) )",
    "id": 2840,
    "declarations": "D: CONICSECTION; N: LINESEGMENT; Y: LINESEGMENT",
    "facts": "RightFocus(D) = FootPoint(PerpendicularBisector(N), OverlappingLine(Y))"
},
{
    "assertion": "Center ( CONICSECTION: f ) equals RightVertex ( CONICSECTION: N )",
    "id": 2841,
    "declarations": "f: CONICSECTION; N: CONICSECTION",
    "facts": "Center(f) = RightVertex(N)"
},
{
    "assertion": "FocalLength ( CONICSECTION: T ) equals HalfFocalLength ( CONICSECTION: u )",
    "id": 2842,
    "declarations": "T: CONICSECTION; u: CONICSECTION",
    "facts": "FocalLength(T) = HalfFocalLength(u)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: j ) equals NUMBER: 20",
    "id": 2843,
    "declarations": "j: CONICSECTION; 20: NUMBER",
    "facts": "HalfFocalLength(j) = 20"
},
{
    "assertion": "Slope ( LINE: J ) equals NUMBER: 83",
    "id": 2844,
    "declarations": "J: LINE; 83: NUMBER",
    "facts": "Slope(J) = 83"
},
{
    "assertion": "Circumcenter ( TRIANGLE: M ) equals RightFocus ( CONICSECTION: p )",
    "id": 2845,
    "declarations": "M: TRIANGLE; p: CONICSECTION",
    "facts": "Circumcenter(M) = RightFocus(p)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: J ) equals LINESEGMENT: w",
    "id": 2846,
    "declarations": "J: ELLIPSE; w: LINESEGMENT",
    "facts": "MajorAxis(J) = w"
},
{
    "assertion": "LineSegmentOf ( FootPoint ( RightDirectrix ( CONICSECTION: g ), LINE: r ), LowerFocus ( CONICSECTION: h ) ) equals RealAxis ( ELLIPSE: A )",
    "id": 2847,
    "declarations": "g: CONICSECTION; r: LINE; h: CONICSECTION; A: ELLIPSE",
    "facts": "LineSegmentOf(FootPoint(RightDirectrix(g), r), LowerFocus(h)) = RealAxis(A)"
},
{
    "assertion": "ApplyUnit ( DotProduct ( VECTOR: O, VECTOR: t ), DEGREESTR: degree )",
    "id": 2848,
    "declarations": "O: VECTOR; t: VECTOR; degree: DEGREESTR",
    "facts": "ApplyUnit(DotProduct(O, t), degree) = dummy_operator()"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: n ) equals NUMBER: 89",
    "id": 2849,
    "declarations": "n: CONICSECTION; 89: NUMBER",
    "facts": "HalfFocalLength(n) = 89"
},
{
    "assertion": "Asymptote ( HYPERBOLA: c ) equals LINE: O",
    "id": 2850,
    "declarations": "c: HYPERBOLA; O: LINE",
    "facts": "Asymptote(c) = O"
},
{
    "assertion": "Radius ( CIRCLE: B ) equals Quadrant ( LeftVertex ( CONICSECTION: e ) )",
    "id": 2851,
    "declarations": "B: CIRCLE; e: CONICSECTION",
    "facts": "Radius(B) = Quadrant(LeftVertex(e))"
},
{
    "assertion": "Radius ( CIRCLE: k ) equals Distance ( POINT: O, POINT: p )",
    "id": 2852,
    "declarations": "k: CIRCLE; O: POINT; p: POINT",
    "facts": "Radius(k) = Distance(O, p)"
},
{
    "assertion": "Vertex ( CONICSECTION: D ) equals POINT: V",
    "id": 2853,
    "declarations": "D: CONICSECTION; V: POINT",
    "facts": "Vertex(D) = V"
},
{
    "assertion": "Min ( Slope ( LINE: S ) ) equals YCoordinate ( POINT: w )",
    "id": 2854,
    "declarations": "S: LINE; w: POINT",
    "facts": "Min(Slope(S)) = YCoordinate(w)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: s, CIRCLE: t ) equals BOOL: True",
    "id": 2855,
    "declarations": "s: LINESEGMENT; t: CIRCLE; True: BOOL",
    "facts": "IsDiameter(s, t) = True"
},
{
    "assertion": "Orthocenter ( TriangleOf ( POINT: B, POINT: M, UpperVertex ( CONICSECTION: c ) ) ) equals MidPoint ( ImaginaryAxis ( ELLIPSE: T ) )",
    "id": 2856,
    "declarations": "B: POINT; M: POINT; c: CONICSECTION; T: ELLIPSE",
    "facts": "Orthocenter(TriangleOf(B, M, UpperVertex(c))) = MidPoint(ImaginaryAxis(T))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: L ) equals LeftVertex ( CONICSECTION: z )",
    "id": 2857,
    "declarations": "L: LINESEGMENT; z: CONICSECTION",
    "facts": "Endpoint(L) = LeftVertex(z)"
},
{
    "assertion": "TangentOfPoint ( UpperFocus ( CONICSECTION: Z ), CURVE: b ) equals LINE: m",
    "id": 2858,
    "declarations": "Z: CONICSECTION; b: CURVE; m: LINE",
    "facts": "TangentOfPoint(UpperFocus(Z), b) = m"
},
{
    "assertion": "InterceptChord ( RightDirectrix ( CONICSECTION: R ), CONICSECTION: W ) equals LINESEGMENT: I",
    "id": 2859,
    "declarations": "R: CONICSECTION; W: CONICSECTION; I: LINESEGMENT",
    "facts": "InterceptChord(RightDirectrix(R), W) = I"
},
{
    "assertion": "FocalLength ( CONICSECTION: g ) equals XCoordinate ( LeftFocus ( CONICSECTION: v ) )",
    "id": 2860,
    "declarations": "g: CONICSECTION; v: CONICSECTION",
    "facts": "FocalLength(g) = XCoordinate(LeftFocus(v))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: k ) equals LineOf ( RightFocus ( CONICSECTION: M ), POINT: H )",
    "id": 2861,
    "declarations": "k: HYPERBOLA; M: CONICSECTION; H: POINT",
    "facts": "Asymptote(k) = LineOf(RightFocus(M), H)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: I ) equals CIRCLE: T",
    "id": 2862,
    "declarations": "I: TRIANGLE; T: CIRCLE",
    "facts": "CircumCircle(I) = T"
},
{
    "assertion": "FocalLength ( CONICSECTION: B ) equals NUMBER: 89",
    "id": 2863,
    "declarations": "B: CONICSECTION; 89: NUMBER",
    "facts": "FocalLength(B) = 89"
},
{
    "assertion": "Intersection ( CURVE: S, LeftPart ( HYPERBOLA: N ) ) equals POINT: I",
    "id": 2864,
    "declarations": "S: CURVE; N: HYPERBOLA; I: POINT",
    "facts": "Intersection(S, LeftPart(N)) = I"
},
{
    "assertion": "VectorOf ( Circumcenter ( TRIANGLE: b ), LowerFocus ( CONICSECTION: f ) ) equals VECTOR: a",
    "id": 2865,
    "declarations": "b: TRIANGLE; f: CONICSECTION; a: VECTOR",
    "facts": "VectorOf(Circumcenter(b), LowerFocus(f)) = a"
},
{
    "assertion": "Projection ( Incenter ( TRIANGLE: C ), LeftDirectrix ( CONICSECTION: s ) ) equals POINT: N",
    "id": 2866,
    "declarations": "C: TRIANGLE; s: CONICSECTION; N: POINT",
    "facts": "Projection(Incenter(C), LeftDirectrix(s)) = N"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: w ) equals LineSegmentOf ( Circumcenter ( TRIANGLE: w ), FootPoint ( LINE: Q, OverlappingLine ( LINESEGMENT: J ) ) )",
    "id": 2867,
    "declarations": "w: ELLIPSE; w: TRIANGLE; Q: LINE; J: LINESEGMENT",
    "facts": "ImaginaryAxis(w) = LineSegmentOf(Circumcenter(w), FootPoint(Q, OverlappingLine(J)))"
},
{
    "assertion": "Radius ( CIRCLE: p ) equals Area ( CONICSECTION: d )",
    "id": 2868,
    "declarations": "p: CIRCLE; d: CONICSECTION",
    "facts": "Radius(p) = Area(d)"
},
{
    "assertion": "Area ( CONICSECTION: i ) equals Area ( CONICSECTION: z )",
    "id": 2869,
    "declarations": "i: CONICSECTION; z: CONICSECTION",
    "facts": "Area(i) = Area(z)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: u ) equals Min ( HalfFocalLength ( CONICSECTION: S ) )",
    "id": 2870,
    "declarations": "u: CONICSECTION; S: CONICSECTION",
    "facts": "HalfFocalLength(u) = Min(HalfFocalLength(S))"
},
{
    "assertion": "lg ( Quadrant ( POINT: H ) ) equals NUMBER: 21",
    "id": 2871,
    "declarations": "H: POINT; 21: NUMBER",
    "facts": "lg(Quadrant(H)) = 21"
},
{
    "assertion": "MidPoint ( ImaginaryAxis ( ELLIPSE: a ) ) equals POINT: e",
    "id": 2872,
    "declarations": "a: ELLIPSE; e: POINT",
    "facts": "MidPoint(ImaginaryAxis(a)) = e"
},
{
    "assertion": "Vertex ( CONICSECTION: v ) equals POINT: n",
    "id": 2873,
    "declarations": "v: CONICSECTION; n: POINT",
    "facts": "Vertex(v) = n"
},
{
    "assertion": "Asymptote ( HYPERBOLA: p ) equals LINE: w",
    "id": 2874,
    "declarations": "p: HYPERBOLA; w: LINE",
    "facts": "Asymptote(p) = w"
},
{
    "assertion": "Center ( CONICSECTION: n ) equals Incenter ( TRIANGLE: W )",
    "id": 2875,
    "declarations": "n: CONICSECTION; W: TRIANGLE",
    "facts": "Center(n) = Incenter(W)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: l ) equals LeftPart ( HYPERBOLA: U )",
    "id": 2876,
    "declarations": "l: HYPERBOLA; U: HYPERBOLA",
    "facts": "LeftPart(l) = LeftPart(U)"
},
{
    "assertion": "Area ( CONICSECTION: D ) equals Eccentricity ( CONICSECTION: Z )",
    "id": 2877,
    "declarations": "D: CONICSECTION; Z: CONICSECTION",
    "facts": "Area(D) = Eccentricity(Z)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: U ) equals Distance ( POINT: A, POINT: L )",
    "id": 2878,
    "declarations": "U: CONICSECTION; A: POINT; L: POINT",
    "facts": "Eccentricity(U) = Distance(A, L)"
},
{
    "assertion": "RightFocus ( CONICSECTION: g ) equals LeftVertex ( CONICSECTION: j )",
    "id": 2879,
    "declarations": "g: CONICSECTION; j: CONICSECTION",
    "facts": "RightFocus(g) = LeftVertex(j)"
},
{
    "assertion": "ApplyUnit ( Radius ( CIRCLE: E ), DEGREESTR: degree )",
    "id": 2880,
    "declarations": "E: CIRCLE; degree: DEGREESTR",
    "facts": "ApplyUnit(Radius(E), degree) = dummy_operator()"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: E, CONICSECTION: s ) equals BOOL: False",
    "id": 2881,
    "declarations": "E: LINESEGMENT; s: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(E, s) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: f ) equals POINT: d",
    "id": 2882,
    "declarations": "f: CONICSECTION; d: POINT",
    "facts": "RightVertex(f) = d"
},
{
    "assertion": "Expression ( RightPart ( HYPERBOLA: m ) ) equals EXPRESSION: y*space=*space3x*space+*space2",
    "id": 2883,
    "declarations": "m: HYPERBOLA; y*space=*space3x*space+*space2: EXPRESSION",
    "facts": "Expression(RightPart(m)) = y*space=*space3x*space+*space2"
},
{
    "assertion": "Expression ( CURVE: i ) equals LocusEquation ( Orthocenter ( TRIANGLE: m ) )",
    "id": 2884,
    "declarations": "i: CURVE; m: TRIANGLE",
    "facts": "Expression(i) = LocusEquation(Orthocenter(m))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: k ) equals Area ( CONICSECTION: M )",
    "id": 2885,
    "declarations": "k: CONICSECTION; M: CONICSECTION",
    "facts": "Eccentricity(k) = Area(M)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: o ) equals Incenter ( TRIANGLE: Y )",
    "id": 2886,
    "declarations": "o: TRIANGLE; Y: TRIANGLE",
    "facts": "Circumcenter(o) = Incenter(Y)"
},
{
    "assertion": "TriangleOf ( MidPoint ( LINESEGMENT: W ), POINT: k, POINT: h ) equals TRIANGLE: S",
    "id": 2887,
    "declarations": "W: LINESEGMENT; k: POINT; h: POINT; S: TRIANGLE",
    "facts": "TriangleOf(MidPoint(W), k, h) = S"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: K ) equals AXIS: yAxis",
    "id": 2888,
    "declarations": "K: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(K) = yAxis"
},
{
    "assertion": "Slope ( LINE: F ) equals NUMBER: 59",
    "id": 2889,
    "declarations": "F: LINE; 59: NUMBER",
    "facts": "Slope(F) = 59"
},
{
    "assertion": "Negation ( Inclination ( LINE: V ) equals Radius ( CIRCLE: c ) ) equals BOOL: True",
    "id": 2890,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "And ( PerpendicularBisector ( LINESEGMENT: y ) equals TangentOnPoint ( LowerFocus ( CONICSECTION: D ), LeftPart ( HYPERBOLA: P ) ), VectorOf ( POINT: m, Center ( CONICSECTION: K ) ) equals VECTOR: Y ) equals BOOL: False",
    "id": 2891,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "InterReciprocal ( NUMBER: 38 ) equals sqrt ( Diameter ( CIRCLE: B ) )",
    "id": 2892,
    "declarations": "38: NUMBER; B: CIRCLE",
    "facts": "InterReciprocal(38) = sqrt(Diameter(B))"
},
{
    "assertion": "Incenter ( TRIANGLE: q ) equals LeftFocus ( CONICSECTION: F )",
    "id": 2893,
    "declarations": "q: TRIANGLE; F: CONICSECTION",
    "facts": "Incenter(q) = LeftFocus(F)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: F, CIRCLE: C ) equals BOOL: True",
    "id": 2894,
    "declarations": "F: LINESEGMENT; C: CIRCLE; True: BOOL",
    "facts": "IsDiameter(F, C) = True"
},
{
    "assertion": "RightVertex ( CONICSECTION: r ) equals LowerFocus ( CONICSECTION: W )",
    "id": 2895,
    "declarations": "r: CONICSECTION; W: CONICSECTION",
    "facts": "RightVertex(r) = LowerFocus(W)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: X ) equals NUMBER: -90",
    "id": 2896,
    "declarations": "X: CONICSECTION; -90: NUMBER",
    "facts": "HalfFocalLength(X) = -90"
},
{
    "assertion": "And ( ImaginaryAxis ( ELLIPSE: n ) equals InterceptChord ( LINE: Y, CONICSECTION: D ), MidPoint ( LineSegmentOf ( LowerFocus ( CONICSECTION: G ), Incenter ( TRIANGLE: R ) ) ) equals POINT: H ) equals BOOL: False",
    "id": 2897,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "FootPoint ( LINE: W, LINE: E ) equals POINT: n",
    "id": 2898,
    "declarations": "W: LINE; E: LINE; n: POINT",
    "facts": "FootPoint(W, E) = n"
},
{
    "assertion": "FootPoint ( LINE: u, LineOf ( POINT: G, POINT: w ) ) equals RightVertex ( CONICSECTION: a )",
    "id": 2899,
    "declarations": "u: LINE; G: POINT; w: POINT; a: CONICSECTION",
    "facts": "FootPoint(u, LineOf(G, w)) = RightVertex(a)"
},
{
    "assertion": "Area ( CONICSECTION: S ) equals Radius ( CIRCLE: V )",
    "id": 2900,
    "declarations": "S: CONICSECTION; V: CIRCLE",
    "facts": "Area(S) = Radius(V)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: H ) equals Circumcenter ( TRIANGLE: K )",
    "id": 2901,
    "declarations": "H: CONICSECTION; K: TRIANGLE",
    "facts": "LowerVertex(H) = Circumcenter(K)"
},
{
    "assertion": "LineOf ( POINT: C, POINT: r ) equals LINE: s",
    "id": 2902,
    "declarations": "C: POINT; r: POINT; s: LINE",
    "facts": "LineOf(C, r) = s"
},
{
    "assertion": "TangentPoint ( LeftDirectrix ( CONICSECTION: p ), CIRCLE: u ) equals RightVertex ( CONICSECTION: l )",
    "id": 2903,
    "declarations": "p: CONICSECTION; u: CIRCLE; l: CONICSECTION",
    "facts": "TangentPoint(LeftDirectrix(p), u) = RightVertex(l)"
},
{
    "assertion": "Slope ( LINE: a ) equals XCoordinate ( POINT: T )",
    "id": 2904,
    "declarations": "a: LINE; T: POINT",
    "facts": "Slope(a) = XCoordinate(T)"
},
{
    "assertion": "TangentPoint ( LINE: W, CIRCLE: v ) equals FootPoint ( LINE: t, LINE: B )",
    "id": 2905,
    "declarations": "W: LINE; v: CIRCLE; t: LINE; B: LINE",
    "facts": "TangentPoint(W, v) = FootPoint(t, B)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: j ) equals LINESEGMENT: u",
    "id": 2906,
    "declarations": "j: ELLIPSE; u: LINESEGMENT",
    "facts": "MinorAxis(j) = u"
},
{
    "assertion": "Endpoint ( LINESEGMENT: Z ) equals UpperVertex ( CONICSECTION: k )",
    "id": 2907,
    "declarations": "Z: LINESEGMENT; k: CONICSECTION",
    "facts": "Endpoint(Z) = UpperVertex(k)"
},
{
    "assertion": "Slope ( LineOf ( RightFocus ( CONICSECTION: V ), LowerFocus ( CONICSECTION: X ) ) ) equals NUMBER: -98",
    "id": 2908,
    "declarations": "V: CONICSECTION; X: CONICSECTION; -98: NUMBER",
    "facts": "Slope(LineOf(RightFocus(V), LowerFocus(X))) = -98"
},
{
    "assertion": "LeftPart ( HYPERBOLA: n ) equals CURVE: D",
    "id": 2909,
    "declarations": "n: HYPERBOLA; D: CURVE",
    "facts": "LeftPart(n) = D"
},
{
    "assertion": "Endpoint ( LINESEGMENT: V ) equals MidPoint ( LINESEGMENT: L )",
    "id": 2910,
    "declarations": "V: LINESEGMENT; L: LINESEGMENT",
    "facts": "Endpoint(V) = MidPoint(L)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: B ) equals CIRCLE: H",
    "id": 2911,
    "declarations": "B: TRIANGLE; H: CIRCLE",
    "facts": "CircumCircle(B) = H"
},
{
    "assertion": "LowerFocus ( CONICSECTION: f ) equals Orthocenter ( TRIANGLE: C )",
    "id": 2912,
    "declarations": "f: CONICSECTION; C: TRIANGLE",
    "facts": "LowerFocus(f) = Orthocenter(C)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: j ) equals POINT: C",
    "id": 2913,
    "declarations": "j: CONICSECTION; C: POINT",
    "facts": "LowerVertex(j) = C"
},
{
    "assertion": "RealAxis ( ELLIPSE: L ) equals LINESEGMENT: P",
    "id": 2914,
    "declarations": "L: ELLIPSE; P: LINESEGMENT",
    "facts": "RealAxis(L) = P"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: T ) equals Perimeter ( CONICSECTION: C )",
    "id": 2915,
    "declarations": "T: CONICSECTION; C: CONICSECTION",
    "facts": "HalfFocalLength(T) = Perimeter(C)"
},
{
    "assertion": "Radius ( CIRCLE: a ) equals NUMBER: -2",
    "id": 2916,
    "declarations": "a: CIRCLE; -2: NUMBER",
    "facts": "Radius(a) = -2"
},
{
    "assertion": "Locus ( POINT: s ) equals CURVE: J",
    "id": 2917,
    "declarations": "s: POINT; J: CURVE",
    "facts": "Locus(s) = J"
},
{
    "assertion": "MidPoint ( InterceptChord ( LINE: y, CONICSECTION: v ) ) equals LowerFocus ( CONICSECTION: s )",
    "id": 2918,
    "declarations": "y: LINE; v: CONICSECTION; s: CONICSECTION",
    "facts": "MidPoint(InterceptChord(y, v)) = LowerFocus(s)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: j, TRIANGLE: z ) equals BOOL: False",
    "id": 2919,
    "declarations": "j: CIRCLE; z: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(j, z) = False"
},
{
    "assertion": "InterReciprocal ( NUMBER: 55 ) equals Length ( LINESEGMENT: R )",
    "id": 2920,
    "declarations": "55: NUMBER; R: LINESEGMENT",
    "facts": "InterReciprocal(55) = Length(R)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: g ) equals Abs ( LineSegmentOf ( Circumcenter ( TriangleOf ( LeftVertex ( CONICSECTION: y ), RightFocus ( CONICSECTION: U ), POINT: e ) ), Circumcenter ( TRIANGLE: T ) ) )",
    "id": 2921,
    "declarations": "g: CONICSECTION; y: CONICSECTION; U: CONICSECTION; e: POINT; T: TRIANGLE",
    "facts": "HalfFocalLength(g) = Abs(LineSegmentOf(Circumcenter(TriangleOf(LeftVertex(y), RightFocus(U), e)), Circumcenter(T)))"
},
{
    "assertion": "TangentPoint ( LINE: Q, CIRCLE: F ) equals LeftVertex ( CONICSECTION: d )",
    "id": 2922,
    "declarations": "Q: LINE; F: CIRCLE; d: CONICSECTION",
    "facts": "TangentPoint(Q, F) = LeftVertex(d)"
},
{
    "assertion": "lg ( FocalLength ( CONICSECTION: h ) ) equals NUMBER: -49",
    "id": 2923,
    "declarations": "h: CONICSECTION; -49: NUMBER",
    "facts": "lg(FocalLength(h)) = -49"
},
{
    "assertion": "Eccentricity ( CONICSECTION: V ) equals lg ( Length ( RealAxis ( ELLIPSE: m ) ) )",
    "id": 2924,
    "declarations": "V: CONICSECTION; m: ELLIPSE",
    "facts": "Eccentricity(V) = lg(Length(RealAxis(m)))"
},
{
    "assertion": "Focus ( CONICSECTION: a ) equals POINT: b",
    "id": 2925,
    "declarations": "a: CONICSECTION; b: POINT",
    "facts": "Focus(a) = b"
},
{
    "assertion": "MidPoint ( LINESEGMENT: W ) equals LeftVertex ( CONICSECTION: j )",
    "id": 2926,
    "declarations": "W: LINESEGMENT; j: CONICSECTION",
    "facts": "MidPoint(W) = LeftVertex(j)"
},
{
    "assertion": "Vertex ( CONICSECTION: I ) equals POINT: u",
    "id": 2927,
    "declarations": "I: CONICSECTION; u: POINT",
    "facts": "Vertex(I) = u"
},
{
    "assertion": "CircumCircle ( TRIANGLE: G ) equals CIRCLE: u",
    "id": 2936,
    "declarations": "G: TRIANGLE; u: CIRCLE",
    "facts": "CircumCircle(G) = u"
},
{
    "assertion": "XCoordinate ( POINT: m ) equals XCoordinate ( LowerFocus ( CONICSECTION: h ) )",
    "id": 2937,
    "declarations": "m: POINT; h: CONICSECTION",
    "facts": "XCoordinate(m) = XCoordinate(LowerFocus(h))"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: J ) ) equals NUMBER: 33",
    "id": 2938,
    "declarations": "J: CONICSECTION; 33: NUMBER",
    "facts": "XCoordinate(LeftFocus(J)) = 33"
},
{
    "assertion": "CircumCircle ( TRIANGLE: m ) equals CIRCLE: N",
    "id": 2939,
    "declarations": "m: TRIANGLE; N: CIRCLE",
    "facts": "CircumCircle(m) = N"
},
{
    "assertion": "LineOf ( POINT: z, POINT: y ) equals LINE: c",
    "id": 2940,
    "declarations": "z: POINT; y: POINT; c: LINE",
    "facts": "LineOf(z, y) = c"
},
{
    "assertion": "Negation ( Vertex ( CONICSECTION: B ) equals Orthocenter ( TRIANGLE: K ) ) equals BOOL: False",
    "id": 2941,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Abs ( LINESEGMENT: v ) equals NUMBER: 83",
    "id": 2942,
    "declarations": "v: LINESEGMENT; 83: NUMBER",
    "facts": "Abs(v) = 83"
},
{
    "assertion": "Directrix ( CONICSECTION: v ) equals LINE: h",
    "id": 2943,
    "declarations": "v: CONICSECTION; h: LINE",
    "facts": "Directrix(v) = h"
},
{
    "assertion": "LowerFocus ( CONICSECTION: w ) equals POINT: L",
    "id": 2944,
    "declarations": "w: CONICSECTION; L: POINT",
    "facts": "LowerFocus(w) = L"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: G, TRIANGLE: Q ) equals BOOL: False",
    "id": 2945,
    "declarations": "G: CIRCLE; Q: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(G, Q) = False"
},
{
    "assertion": "lg ( Min ( NUMBER: -6 ) ) equals Eccentricity ( CONICSECTION: D )",
    "id": 2946,
    "declarations": "-6: NUMBER; D: CONICSECTION",
    "facts": "lg(Min(-6)) = Eccentricity(D)"
},
{
    "assertion": "YCoordinate ( RightFocus ( CONICSECTION: A ) ) equals NUMBER: -63",
    "id": 2947,
    "declarations": "A: CONICSECTION; -63: NUMBER",
    "facts": "YCoordinate(RightFocus(A)) = -63"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: Q ) ) equals Circumcenter ( TRIANGLE: O )",
    "id": 2948,
    "declarations": "Q: ELLIPSE; O: TRIANGLE",
    "facts": "MidPoint(MajorAxis(Q)) = Circumcenter(O)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: n, TRIANGLE: V ) equals BOOL: False",
    "id": 2949,
    "declarations": "n: CIRCLE; V: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(n, V) = False"
},
{
    "assertion": "Slope ( LINE: O ) equals NUMBER: 55",
    "id": 2950,
    "declarations": "O: LINE; 55: NUMBER",
    "facts": "Slope(O) = 55"
},
{
    "assertion": "Focus ( CONICSECTION: b ) equals POINT: N",
    "id": 2951,
    "declarations": "b: CONICSECTION; N: POINT",
    "facts": "Focus(b) = N"
},
{
    "assertion": "LeftVertex ( CONICSECTION: I ) equals FootPoint ( LeftDirectrix ( CONICSECTION: r ), LeftDirectrix ( CONICSECTION: D ) )",
    "id": 2952,
    "declarations": "I: CONICSECTION; r: CONICSECTION; D: CONICSECTION",
    "facts": "LeftVertex(I) = FootPoint(LeftDirectrix(r), LeftDirectrix(D))"
},
{
    "assertion": "Vertex ( CONICSECTION: V ) equals MidPoint ( ImaginaryAxis ( ELLIPSE: H ) )",
    "id": 2953,
    "declarations": "V: CONICSECTION; H: ELLIPSE",
    "facts": "Vertex(V) = MidPoint(ImaginaryAxis(H))"
},
{
    "assertion": "Incenter ( TRIANGLE: e ) equals RightVertex ( CONICSECTION: S )",
    "id": 2954,
    "declarations": "e: TRIANGLE; S: CONICSECTION",
    "facts": "Incenter(e) = RightVertex(S)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: n ) equals AXIS: yAxis",
    "id": 2955,
    "declarations": "n: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(n) = yAxis"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: r ) equals AXIS: yAxis",
    "id": 2956,
    "declarations": "r: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(r) = yAxis"
},
{
    "assertion": "MajorAxis ( ELLIPSE: S ) equals LINESEGMENT: j",
    "id": 2957,
    "declarations": "S: ELLIPSE; j: LINESEGMENT",
    "facts": "MajorAxis(S) = j"
},
{
    "assertion": "LowerVertex ( CONICSECTION: K ) equals POINT: L",
    "id": 2958,
    "declarations": "K: CONICSECTION; L: POINT",
    "facts": "LowerVertex(K) = L"
},
{
    "assertion": "LeftPart ( HYPERBOLA: w ) equals CURVE: C",
    "id": 2959,
    "declarations": "w: HYPERBOLA; C: CURVE",
    "facts": "LeftPart(w) = C"
},
{
    "assertion": "LineOf ( LowerVertex ( CONICSECTION: r ), RightFocus ( CONICSECTION: y ) ) equals LINE: b",
    "id": 2960,
    "declarations": "r: CONICSECTION; y: CONICSECTION; b: LINE",
    "facts": "LineOf(LowerVertex(r), RightFocus(y)) = b"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: w ) equals LINE: R",
    "id": 2961,
    "declarations": "w: CONICSECTION; R: LINE",
    "facts": "RightDirectrix(w) = R"
},
{
    "assertion": "YCoordinate ( LowerFocus ( CONICSECTION: E ) ) equals Diameter ( CIRCLE: i )",
    "id": 2962,
    "declarations": "E: CONICSECTION; i: CIRCLE",
    "facts": "YCoordinate(LowerFocus(E)) = Diameter(i)"
},
{
    "assertion": "And ( FocalLength ( CONICSECTION: T ) equals Perimeter ( CONICSECTION: P ), YCoordinate ( POINT: a ) equals lg ( NUMBER: 21 ) ) equals BOOL: False",
    "id": 2963,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "InterceptChord ( LINE: M, CONICSECTION: w ) equals MajorAxis ( ELLIPSE: S )",
    "id": 2964,
    "declarations": "M: LINE; w: CONICSECTION; S: ELLIPSE",
    "facts": "InterceptChord(M, w) = MajorAxis(S)"
},
{
    "assertion": "LocusEquation ( Circumcenter ( TRIANGLE: x ) ) equals EXPRESSION: x*space+*spacey^2*space=*space4",
    "id": 2965,
    "declarations": "x: TRIANGLE; x*space+*spacey^2*space=*space4: EXPRESSION",
    "facts": "LocusEquation(Circumcenter(x)) = x*space+*spacey^2*space=*space4"
},
{
    "assertion": "Asymptote ( HYPERBOLA: x ) equals LINE: o",
    "id": 2966,
    "declarations": "x: HYPERBOLA; o: LINE",
    "facts": "Asymptote(x) = o"
},
{
    "assertion": "lg ( NUMBER: 81 ) equals Area ( CONICSECTION: w )",
    "id": 2967,
    "declarations": "81: NUMBER; w: CONICSECTION",
    "facts": "lg(81) = Area(w)"
},
{
    "assertion": "Vertex ( CONICSECTION: z ) equals Center ( CONICSECTION: W )",
    "id": 2968,
    "declarations": "z: CONICSECTION; W: CONICSECTION",
    "facts": "Vertex(z) = Center(W)"
},
{
    "assertion": "Negation ( CircumCircle ( TRIANGLE: i ) equals CIRCLE: H ) equals BOOL: False",
    "id": 2969,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightPart ( HYPERBOLA: D ) equals CURVE: s",
    "id": 2970,
    "declarations": "D: HYPERBOLA; s: CURVE",
    "facts": "RightPart(D) = s"
},
{
    "assertion": "MidPoint ( LINESEGMENT: K ) equals RightVertex ( CONICSECTION: Z )",
    "id": 2971,
    "declarations": "K: LINESEGMENT; Z: CONICSECTION",
    "facts": "MidPoint(K) = RightVertex(Z)"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: D ) ) equals LineOf ( POINT: H, RightVertex ( CONICSECTION: H ) )",
    "id": 2972,
    "declarations": "D: ELLIPSE; H: POINT; H: CONICSECTION",
    "facts": "OverlappingLine(MajorAxis(D)) = LineOf(H, RightVertex(H))"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: U ) equals LINESEGMENT: o",
    "id": 2973,
    "declarations": "U: ELLIPSE; o: LINESEGMENT",
    "facts": "ImaginaryAxis(U) = o"
},
{
    "assertion": "XCoordinate ( Circumcenter ( TRIANGLE: u ) ) equals lg ( NUMBER: -11 )",
    "id": 2974,
    "declarations": "u: TRIANGLE; -11: NUMBER",
    "facts": "XCoordinate(Circumcenter(u)) = lg(-11)"
},
{
    "assertion": "InterReciprocal ( NUMBER: -75 ) equals NUMBER: 100",
    "id": 2975,
    "declarations": "-75: NUMBER; 100: NUMBER",
    "facts": "InterReciprocal(-75) = 100"
},
{
    "assertion": "And ( IsPerpendicular ( LINE: o, TangentOnPoint ( UpperVertex ( CONICSECTION: n ), CURVE: p ) ) equals BOOL: False, Expression ( CURVE: V ) equals EXPRESSION: x*space+*spacey^2*space=*space5 ) equals BOOL: True",
    "id": 2976,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: m ) equals LINE: s",
    "id": 2977,
    "declarations": "m: LINESEGMENT; s: LINE",
    "facts": "PerpendicularBisector(m) = s"
},
{
    "assertion": "IsTangent ( LINE: K, CONICSECTION: J ) equals BOOL: False",
    "id": 2978,
    "declarations": "K: LINE; J: CONICSECTION; False: BOOL",
    "facts": "IsTangent(K, J) = False"
},
{
    "assertion": "IsTangent ( TangentOnPoint ( POINT: V, CURVE: s ), CONICSECTION: c ) equals BOOL: False",
    "id": 2979,
    "declarations": "V: POINT; s: CURVE; c: CONICSECTION; False: BOOL",
    "facts": "IsTangent(TangentOnPoint(V, s), c) = False"
},
{
    "assertion": "XCoordinate ( POINT: b ) equals HalfFocalLength ( CONICSECTION: E )",
    "id": 2980,
    "declarations": "b: POINT; E: CONICSECTION",
    "facts": "XCoordinate(b) = HalfFocalLength(E)"
},
{
    "assertion": "Distance ( UpperVertex ( CONICSECTION: a ), LeftVertex ( CONICSECTION: L ) ) equals Perimeter ( CONICSECTION: g )",
    "id": 2981,
    "declarations": "a: CONICSECTION; L: CONICSECTION; g: CONICSECTION",
    "facts": "Distance(UpperVertex(a), LeftVertex(L)) = Perimeter(g)"
},
{
    "assertion": "RealAxis ( ELLIPSE: Y ) equals ImaginaryAxis ( ELLIPSE: A )",
    "id": 2982,
    "declarations": "Y: ELLIPSE; A: ELLIPSE",
    "facts": "RealAxis(Y) = ImaginaryAxis(A)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: F ) equals LINESEGMENT: w",
    "id": 2983,
    "declarations": "F: ELLIPSE; w: LINESEGMENT",
    "facts": "MinorAxis(F) = w"
},
{
    "assertion": "Length ( LINESEGMENT: L ) equals YCoordinate ( Center ( CONICSECTION: P ) )",
    "id": 2984,
    "declarations": "L: LINESEGMENT; P: CONICSECTION",
    "facts": "Length(L) = YCoordinate(Center(P))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: M ) equals InterReciprocal ( InterReciprocal ( Diameter ( CIRCLE: C ) ) )",
    "id": 2985,
    "declarations": "M: CONICSECTION; C: CIRCLE",
    "facts": "HalfFocalLength(M) = InterReciprocal(InterReciprocal(Diameter(C)))"
},
{
    "assertion": "Distance ( POINT: I, RightFocus ( CONICSECTION: W ) ) equals YCoordinate ( Circumcenter ( TRIANGLE: v ) )",
    "id": 2986,
    "declarations": "I: POINT; W: CONICSECTION; v: TRIANGLE",
    "facts": "Distance(I, RightFocus(W)) = YCoordinate(Circumcenter(v))"
},
{
    "assertion": "Area ( CONICSECTION: G ) equals InterReciprocal ( NUMBER: 13 )",
    "id": 2987,
    "declarations": "G: CONICSECTION; 13: NUMBER",
    "facts": "Area(G) = InterReciprocal(13)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: S ) equals UpperFocus ( CONICSECTION: t )",
    "id": 2988,
    "declarations": "S: TRIANGLE; t: CONICSECTION",
    "facts": "Orthocenter(S) = UpperFocus(t)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: A ) equals LowerFocus ( CONICSECTION: y )",
    "id": 2989,
    "declarations": "A: CONICSECTION; y: CONICSECTION",
    "facts": "UpperVertex(A) = LowerFocus(y)"
},
{
    "assertion": "Radius ( CIRCLE: M ) equals HalfFocalLength ( CONICSECTION: F )",
    "id": 2990,
    "declarations": "M: CIRCLE; F: CONICSECTION",
    "facts": "Radius(M) = HalfFocalLength(F)"
},
{
    "assertion": "RightFocus ( CONICSECTION: F ) equals Projection ( LeftFocus ( CONICSECTION: e ), LINE: W )",
    "id": 2991,
    "declarations": "F: CONICSECTION; e: CONICSECTION; W: LINE",
    "facts": "RightFocus(F) = Projection(LeftFocus(e), W)"
},
{
    "assertion": "Slope ( LINE: B ) equals sqrt ( Abs ( LINESEGMENT: e ) )",
    "id": 2992,
    "declarations": "B: LINE; e: LINESEGMENT",
    "facts": "Slope(B) = sqrt(Abs(e))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: a ) equals LeftVertex ( CONICSECTION: P )",
    "id": 2993,
    "declarations": "a: TRIANGLE; P: CONICSECTION",
    "facts": "Orthocenter(a) = LeftVertex(P)"
},
{
    "assertion": "RightFocus ( CONICSECTION: r ) equals Incenter ( TRIANGLE: z )",
    "id": 2994,
    "declarations": "r: CONICSECTION; z: TRIANGLE",
    "facts": "RightFocus(r) = Incenter(z)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: E ) equals Center ( CONICSECTION: j )",
    "id": 2995,
    "declarations": "E: CONICSECTION; j: CONICSECTION",
    "facts": "LowerFocus(E) = Center(j)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: t ) equals NUMBER: -38",
    "id": 2996,
    "declarations": "t: CONICSECTION; -38: NUMBER",
    "facts": "Eccentricity(t) = -38"
},
{
    "assertion": "LeftFocus ( CONICSECTION: t ) equals POINT: k",
    "id": 2997,
    "declarations": "t: CONICSECTION; k: POINT",
    "facts": "LeftFocus(t) = k"
},
{
    "assertion": "FocalLength ( CONICSECTION: N ) equals NUMBER: -47",
    "id": 2998,
    "declarations": "N: CONICSECTION; -47: NUMBER",
    "facts": "FocalLength(N) = -47"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: Z ) equals OverlappingLine ( LINESEGMENT: j )",
    "id": 2999,
    "declarations": "Z: LINESEGMENT; j: LINESEGMENT",
    "facts": "PerpendicularBisector(Z) = OverlappingLine(j)"
},
{
    "assertion": "InterReciprocal ( Intercept ( LINE: c, AXIS: xAxis ) ) equals NUMBER: 59",
    "id": 3000,
    "declarations": "c: LINE; xAxis: AXIS; 59: NUMBER",
    "facts": "InterReciprocal(Intercept(c, xAxis)) = 59"
},
{
    "assertion": "RightVertex ( CONICSECTION: R ) equals POINT: a",
    "id": 3001,
    "declarations": "R: CONICSECTION; a: POINT",
    "facts": "RightVertex(R) = a"
},
{
    "assertion": "ApplyUnit ( NUMBER: 9, DEGREESTR: degree )",
    "id": 3002,
    "declarations": "9: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(9, degree) = dummy_operator()"
},
{
    "assertion": "PointOnCurve ( POINT: K, CURVE: F ) equals BOOL: False",
    "id": 3003,
    "declarations": "K: POINT; F: CURVE; False: BOOL",
    "facts": "PointOnCurve(K, F) = False"
},
{
    "assertion": "Max ( NUMBER: 50 ) equals NUMBER: -28",
    "id": 3004,
    "declarations": "50: NUMBER; -28: NUMBER",
    "facts": "Max(50) = -28"
},
{
    "assertion": "UpperFocus ( CONICSECTION: W ) equals LowerFocus ( CONICSECTION: n )",
    "id": 3005,
    "declarations": "W: CONICSECTION; n: CONICSECTION",
    "facts": "UpperFocus(W) = LowerFocus(n)"
},
{
    "assertion": "Incenter ( TriangleOf ( MidPoint ( MinorAxis ( ELLIPSE: T ) ), LeftFocus ( CONICSECTION: C ), POINT: x ) ) equals POINT: i",
    "id": 3006,
    "declarations": "T: ELLIPSE; C: CONICSECTION; x: POINT; i: POINT",
    "facts": "Incenter(TriangleOf(MidPoint(MinorAxis(T)), LeftFocus(C), x)) = i"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: W ) equals NUMBER: -21",
    "id": 3007,
    "declarations": "W: CONICSECTION; -21: NUMBER",
    "facts": "HalfFocalLength(W) = -21"
},
{
    "assertion": "Focus ( CONICSECTION: w ) equals Orthocenter ( TRIANGLE: l )",
    "id": 3008,
    "declarations": "w: CONICSECTION; l: TRIANGLE",
    "facts": "Focus(w) = Orthocenter(l)"
},
{
    "assertion": "Center ( CONICSECTION: P ) equals Orthocenter ( TRIANGLE: Z )",
    "id": 3009,
    "declarations": "P: CONICSECTION; Z: TRIANGLE",
    "facts": "Center(P) = Orthocenter(Z)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: u ) equals CircumCircle ( TRIANGLE: x )",
    "id": 3010,
    "declarations": "u: TRIANGLE; x: TRIANGLE",
    "facts": "CircumCircle(u) = CircumCircle(x)"
},
{
    "assertion": "IsInTangent ( CIRCLE: E, CIRCLE: v ) equals BOOL: False",
    "id": 3011,
    "declarations": "E: CIRCLE; v: CIRCLE; False: BOOL",
    "facts": "IsInTangent(E, v) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: W ) equals POINT: m",
    "id": 3012,
    "declarations": "W: CONICSECTION; m: POINT",
    "facts": "Vertex(W) = m"
},
{
    "assertion": "Intercept ( TangentOfPoint ( POINT: W, CURVE: G ), AXIS: xAxis ) equals NUMBER: 37",
    "id": 3013,
    "declarations": "W: POINT; G: CURVE; xAxis: AXIS; 37: NUMBER",
    "facts": "Intercept(TangentOfPoint(W, G), xAxis) = 37"
},
{
    "assertion": "LowerVertex ( CONICSECTION: q ) equals LowerVertex ( CONICSECTION: N )",
    "id": 3014,
    "declarations": "q: CONICSECTION; N: CONICSECTION",
    "facts": "LowerVertex(q) = LowerVertex(N)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: s, TRIANGLE: D ) equals BOOL: True",
    "id": 3015,
    "declarations": "s: CIRCLE; D: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(s, D) = True"
},
{
    "assertion": "TangentOnPoint ( RightFocus ( CONICSECTION: H ), CURVE: X ) equals LineOf ( POINT: l, POINT: J )",
    "id": 3017,
    "declarations": "H: CONICSECTION; X: CURVE; l: POINT; J: POINT",
    "facts": "TangentOnPoint(RightFocus(H), X) = LineOf(l, J)"
},
{
    "assertion": "TriangleOf ( UpperVertex ( CONICSECTION: A ), POINT: z, LowerFocus ( CONICSECTION: H ) ) equals TRIANGLE: w",
    "id": 3018,
    "declarations": "A: CONICSECTION; z: POINT; H: CONICSECTION; w: TRIANGLE",
    "facts": "TriangleOf(UpperVertex(A), z, LowerFocus(H)) = w"
},
{
    "assertion": "VectorOf ( LeftFocus ( CONICSECTION: N ), POINT: r ) equals VECTOR: D",
    "id": 3019,
    "declarations": "N: CONICSECTION; r: POINT; D: VECTOR",
    "facts": "VectorOf(LeftFocus(N), r) = D"
},
{
    "assertion": "Directrix ( CONICSECTION: J ) equals LINE: n",
    "id": 3020,
    "declarations": "J: CONICSECTION; n: LINE",
    "facts": "Directrix(J) = n"
},
{
    "assertion": "Max ( Abs ( LINESEGMENT: I ) ) equals NUMBER: 65",
    "id": 3022,
    "declarations": "I: LINESEGMENT; 65: NUMBER",
    "facts": "Max(Abs(I)) = 65"
},
{
    "assertion": "Intersection ( CURVE: v, CURVE: L ) equals RightVertex ( CONICSECTION: W )",
    "id": 3023,
    "declarations": "v: CURVE; L: CURVE; W: CONICSECTION",
    "facts": "Intersection(v, L) = RightVertex(W)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: W ) equals Circumcenter ( TRIANGLE: n )",
    "id": 3024,
    "declarations": "W: TRIANGLE; n: TRIANGLE",
    "facts": "Circumcenter(W) = Circumcenter(n)"
},
{
    "assertion": "Intercept ( LINE: P, AXIS: yAxis ) equals XCoordinate ( POINT: p )",
    "id": 3025,
    "declarations": "P: LINE; yAxis: AXIS; p: POINT",
    "facts": "Intercept(P, yAxis) = XCoordinate(p)"
},
{
    "assertion": "RightPart ( HYPERBOLA: v ) equals CURVE: Z",
    "id": 3026,
    "declarations": "v: HYPERBOLA; Z: CURVE",
    "facts": "RightPart(v) = Z"
},
{
    "assertion": "Center ( CONICSECTION: p ) equals POINT: F",
    "id": 3027,
    "declarations": "p: CONICSECTION; F: POINT",
    "facts": "Center(p) = F"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: F ) equals HalfFocalLength ( CONICSECTION: D )",
    "id": 3028,
    "declarations": "F: CONICSECTION; D: CONICSECTION",
    "facts": "HalfFocalLength(F) = HalfFocalLength(D)"
},
{
    "assertion": "Inclination ( LINE: O ) equals NUMBER: -28",
    "id": 3029,
    "declarations": "O: LINE; -28: NUMBER",
    "facts": "Inclination(O) = -28"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: V, CIRCLE: o ) equals BOOL: True",
    "id": 3030,
    "declarations": "V: LINESEGMENT; o: CIRCLE; True: BOOL",
    "facts": "IsDiameter(V, o) = True"
},
{
    "assertion": "Eccentricity ( CONICSECTION: h ) equals Abs ( InterceptChord ( LINE: T, CONICSECTION: t ) )",
    "id": 3031,
    "declarations": "h: CONICSECTION; T: LINE; t: CONICSECTION",
    "facts": "Eccentricity(h) = Abs(InterceptChord(T, t))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: q ) equals LowerFocus ( CONICSECTION: H )",
    "id": 3032,
    "declarations": "q: CONICSECTION; H: CONICSECTION",
    "facts": "LeftVertex(q) = LowerFocus(H)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: C ) equals Orthocenter ( TRIANGLE: s )",
    "id": 3033,
    "declarations": "C: TRIANGLE; s: TRIANGLE",
    "facts": "Orthocenter(C) = Orthocenter(s)"
},
{
    "assertion": "RightPart ( HYPERBOLA: B ) equals CURVE: h",
    "id": 3034,
    "declarations": "B: HYPERBOLA; h: CURVE",
    "facts": "RightPart(B) = h"
},
{
    "assertion": "RightVertex ( CONICSECTION: X ) equals MidPoint ( LINESEGMENT: V )",
    "id": 3035,
    "declarations": "X: CONICSECTION; V: LINESEGMENT",
    "facts": "RightVertex(X) = MidPoint(V)"
},
{
    "assertion": "RightFocus ( CONICSECTION: j ) equals RightFocus ( CONICSECTION: a )",
    "id": 3036,
    "declarations": "j: CONICSECTION; a: CONICSECTION",
    "facts": "RightFocus(j) = RightFocus(a)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: w ) equals MidPoint ( LINESEGMENT: n )",
    "id": 3037,
    "declarations": "w: CONICSECTION; n: LINESEGMENT",
    "facts": "LeftVertex(w) = MidPoint(n)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: Y ) equals LINE: B",
    "id": 3038,
    "declarations": "Y: CONICSECTION; B: LINE",
    "facts": "RightDirectrix(Y) = B"
},
{
    "assertion": "MinorAxis ( ELLIPSE: M ) equals LINESEGMENT: K",
    "id": 3039,
    "declarations": "M: ELLIPSE; K: LINESEGMENT",
    "facts": "MinorAxis(M) = K"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: x ) equals LINESEGMENT: n",
    "id": 3040,
    "declarations": "x: ELLIPSE; n: LINESEGMENT",
    "facts": "ImaginaryAxis(x) = n"
},
{
    "assertion": "TangentPoint ( PerpendicularBisector ( LINESEGMENT: S ), CIRCLE: v ) equals POINT: j",
    "id": 3041,
    "declarations": "S: LINESEGMENT; v: CIRCLE; j: POINT",
    "facts": "TangentPoint(PerpendicularBisector(S), v) = j"
},
{
    "assertion": "Diameter ( CIRCLE: k ) equals NUMBER: 80",
    "id": 3042,
    "declarations": "k: CIRCLE; 80: NUMBER",
    "facts": "Diameter(k) = 80"
},
{
    "assertion": "Locus ( Orthocenter ( TRIANGLE: Y ) ) equals CURVE: f",
    "id": 3043,
    "declarations": "Y: TRIANGLE; f: CURVE",
    "facts": "Locus(Orthocenter(Y)) = f"
},
{
    "assertion": "Focus ( CONICSECTION: W ) equals POINT: v",
    "id": 3044,
    "declarations": "W: CONICSECTION; v: POINT",
    "facts": "Focus(W) = v"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: B ) equals LINE: k",
    "id": 3045,
    "declarations": "B: LINESEGMENT; k: LINE",
    "facts": "PerpendicularBisector(B) = k"
},
{
    "assertion": "Perimeter ( CONICSECTION: r ) equals Eccentricity ( CONICSECTION: b )",
    "id": 3046,
    "declarations": "r: CONICSECTION; b: CONICSECTION",
    "facts": "Perimeter(r) = Eccentricity(b)"
},
{
    "assertion": "Inclination ( LINE: h ) equals NUMBER: 32",
    "id": 3047,
    "declarations": "h: LINE; 32: NUMBER",
    "facts": "Inclination(h) = 32"
},
{
    "assertion": "Locus ( Incenter ( TRIANGLE: O ) ) equals RightPart ( HYPERBOLA: w )",
    "id": 3048,
    "declarations": "O: TRIANGLE; w: HYPERBOLA",
    "facts": "Locus(Incenter(O)) = RightPart(w)"
},
{
    "assertion": "lg ( NumIntersection ( CURVE: H, CURVE: I ) ) equals NUMBER: 36",
    "id": 3049,
    "declarations": "H: CURVE; I: CURVE; 36: NUMBER",
    "facts": "lg(NumIntersection(H, I)) = 36"
},
{
    "assertion": "RightPart ( HYPERBOLA: m ) equals CURVE: R",
    "id": 3050,
    "declarations": "m: HYPERBOLA; R: CURVE",
    "facts": "RightPart(m) = R"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: p ) ) equals LINE: K",
    "id": 3051,
    "declarations": "p: ELLIPSE; K: LINE",
    "facts": "OverlappingLine(MajorAxis(p)) = K"
},
{
    "assertion": "Intersection ( LeftPart ( HYPERBOLA: O ), LeftPart ( HYPERBOLA: W ) ) equals Circumcenter ( TRIANGLE: V )",
    "id": 3052,
    "declarations": "O: HYPERBOLA; W: HYPERBOLA; V: TRIANGLE",
    "facts": "Intersection(LeftPart(O), LeftPart(W)) = Circumcenter(V)"
},
{
    "assertion": "InterReciprocal ( FocalLength ( CONICSECTION: y ) ) equals HalfFocalLength ( CONICSECTION: Y )",
    "id": 3053,
    "declarations": "y: CONICSECTION; Y: CONICSECTION",
    "facts": "InterReciprocal(FocalLength(y)) = HalfFocalLength(Y)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: M ) equals RightVertex ( CONICSECTION: F )",
    "id": 3054,
    "declarations": "M: CONICSECTION; F: CONICSECTION",
    "facts": "UpperVertex(M) = RightVertex(F)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: R ) equals LINESEGMENT: V",
    "id": 3055,
    "declarations": "R: ELLIPSE; V: LINESEGMENT",
    "facts": "ImaginaryAxis(R) = V"
},
{
    "assertion": "AngleOf ( POINT: j, POINT: o, Circumcenter ( TRIANGLE: O ) ) equals AngleOf ( POINT: v, Circumcenter ( TRIANGLE: B ), POINT: Q )",
    "id": 3056,
    "declarations": "j: POINT; o: POINT; O: TRIANGLE; v: POINT; B: TRIANGLE; Q: POINT",
    "facts": "AngleOf(j, o, Circumcenter(O)) = AngleOf(v, Circumcenter(B), Q)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: J ) equals Quadrant ( RightVertex ( CONICSECTION: I ) )",
    "id": 3057,
    "declarations": "J: CONICSECTION; I: CONICSECTION",
    "facts": "Eccentricity(J) = Quadrant(RightVertex(I))"
},
{
    "assertion": "IsOutTangent ( CIRCLE: j, CIRCLE: M ) equals BOOL: True",
    "id": 3058,
    "declarations": "j: CIRCLE; M: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(j, M) = True"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: r ) ) equals LINE: U",
    "id": 3059,
    "declarations": "r: ELLIPSE; U: LINE",
    "facts": "OverlappingLine(MinorAxis(r)) = U"
},
{
    "assertion": "YCoordinate ( MidPoint ( RealAxis ( ELLIPSE: C ) ) ) equals FocalLength ( CONICSECTION: D )",
    "id": 3060,
    "declarations": "C: ELLIPSE; D: CONICSECTION",
    "facts": "YCoordinate(MidPoint(RealAxis(C))) = FocalLength(D)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: c ) equals LeftDirectrix ( CONICSECTION: j )",
    "id": 3061,
    "declarations": "c: HYPERBOLA; j: CONICSECTION",
    "facts": "Asymptote(c) = LeftDirectrix(j)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: c ) equals NUMBER: 26",
    "id": 3062,
    "declarations": "c: CONICSECTION; 26: NUMBER",
    "facts": "Eccentricity(c) = 26"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: Z ) equals LINE: Y",
    "id": 3063,
    "declarations": "Z: CONICSECTION; Y: LINE",
    "facts": "RightDirectrix(Z) = Y"
},
{
    "assertion": "DotProduct ( VECTOR: K, VECTOR: D ) equals NUMBER: -55",
    "id": 3064,
    "declarations": "K: VECTOR; D: VECTOR; -55: NUMBER",
    "facts": "DotProduct(K, D) = -55"
},
{
    "assertion": "Vertex ( CONICSECTION: F ) equals Orthocenter ( TRIANGLE: z )",
    "id": 3065,
    "declarations": "F: CONICSECTION; z: TRIANGLE",
    "facts": "Vertex(F) = Orthocenter(z)"
},
{
    "assertion": "Quadrant ( LowerVertex ( CONICSECTION: C ) ) equals NUMBER: 61",
    "id": 3066,
    "declarations": "C: CONICSECTION; 61: NUMBER",
    "facts": "Quadrant(LowerVertex(C)) = 61"
},
{
    "assertion": "FootPoint ( PerpendicularBisector ( LINESEGMENT: K ), LINE: M ) equals UpperVertex ( CONICSECTION: u )",
    "id": 3067,
    "declarations": "K: LINESEGMENT; M: LINE; u: CONICSECTION",
    "facts": "FootPoint(PerpendicularBisector(K), M) = UpperVertex(u)"
},
{
    "assertion": "Abs ( LINESEGMENT: t ) equals FocalLength ( CONICSECTION: W )",
    "id": 3068,
    "declarations": "t: LINESEGMENT; W: CONICSECTION",
    "facts": "Abs(t) = FocalLength(W)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: M ) equals NUMBER: -11",
    "id": 3069,
    "declarations": "M: CONICSECTION; -11: NUMBER",
    "facts": "Eccentricity(M) = -11"
},
{
    "assertion": "Asymptote ( HYPERBOLA: B ) equals TangentOfPoint ( POINT: M, CURVE: N )",
    "id": 3070,
    "declarations": "B: HYPERBOLA; M: POINT; N: CURVE",
    "facts": "Asymptote(B) = TangentOfPoint(M, N)"
},
{
    "assertion": "TangentPoint ( LINE: Z, CIRCLE: R ) equals LeftFocus ( CONICSECTION: s )",
    "id": 3071,
    "declarations": "Z: LINE; R: CIRCLE; s: CONICSECTION",
    "facts": "TangentPoint(Z, R) = LeftFocus(s)"
},
{
    "assertion": "FootPoint ( LINE: R, LINE: n ) equals MidPoint ( LINESEGMENT: c )",
    "id": 3072,
    "declarations": "R: LINE; n: LINE; c: LINESEGMENT",
    "facts": "FootPoint(R, n) = MidPoint(c)"
},
{
    "assertion": "TangentOfPoint ( UpperFocus ( CONICSECTION: W ), CURVE: b ) equals LeftDirectrix ( CONICSECTION: z )",
    "id": 3073,
    "declarations": "W: CONICSECTION; b: CURVE; z: CONICSECTION",
    "facts": "TangentOfPoint(UpperFocus(W), b) = LeftDirectrix(z)"
},
{
    "assertion": "Locus ( POINT: X ) equals Locus ( POINT: A )",
    "id": 3074,
    "declarations": "X: POINT; A: POINT",
    "facts": "Locus(X) = Locus(A)"
},
{
    "assertion": "Projection ( UpperVertex ( CONICSECTION: V ), LINE: P ) equals LowerFocus ( CONICSECTION: u )",
    "id": 3075,
    "declarations": "V: CONICSECTION; P: LINE; u: CONICSECTION",
    "facts": "Projection(UpperVertex(V), P) = LowerFocus(u)"
},
{
    "assertion": "TangentOfPoint ( POINT: L, Locus ( POINT: M ) ) equals LINE: V",
    "id": 3076,
    "declarations": "L: POINT; M: POINT; V: LINE",
    "facts": "TangentOfPoint(L, Locus(M)) = V"
},
{
    "assertion": "PointOnCurve ( POINT: N, CURVE: L ) equals BOOL: False",
    "id": 3077,
    "declarations": "N: POINT; L: CURVE; False: BOOL",
    "facts": "PointOnCurve(N, L) = False"
},
{
    "assertion": "UpperVertex ( CONICSECTION: k ) equals Circumcenter ( TRIANGLE: j )",
    "id": 3078,
    "declarations": "k: CONICSECTION; j: TRIANGLE",
    "facts": "UpperVertex(k) = Circumcenter(j)"
},
{
    "assertion": "NumIntersection ( CURVE: l, CURVE: h ) equals InterReciprocal ( NUMBER: -93 )",
    "id": 3079,
    "declarations": "l: CURVE; h: CURVE; -93: NUMBER",
    "facts": "NumIntersection(l, h) = InterReciprocal(-93)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: B ) equals Incenter ( TRIANGLE: c )",
    "id": 3080,
    "declarations": "B: CONICSECTION; c: TRIANGLE",
    "facts": "UpperFocus(B) = Incenter(c)"
},
{
    "assertion": "RightFocus ( CONICSECTION: s ) equals POINT: m",
    "id": 3081,
    "declarations": "s: CONICSECTION; m: POINT",
    "facts": "RightFocus(s) = m"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: D ) equals Perimeter ( CONICSECTION: x )",
    "id": 3082,
    "declarations": "D: CONICSECTION; x: CONICSECTION",
    "facts": "HalfFocalLength(D) = Perimeter(x)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: t ) equals UpperVertex ( CONICSECTION: t )",
    "id": 3083,
    "declarations": "t: TRIANGLE; t: CONICSECTION",
    "facts": "Orthocenter(t) = UpperVertex(t)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: V, CONICSECTION: b ) equals BOOL: True",
    "id": 3084,
    "declarations": "V: LINESEGMENT; b: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(V, b) = True"
},
{
    "assertion": "LowerVertex ( CONICSECTION: b ) equals POINT: r",
    "id": 3085,
    "declarations": "b: CONICSECTION; r: POINT",
    "facts": "LowerVertex(b) = r"
},
{
    "assertion": "Inclination ( LINE: j ) equals NUMBER: -53",
    "id": 3086,
    "declarations": "j: LINE; -53: NUMBER",
    "facts": "Inclination(j) = -53"
},
{
    "assertion": "LocusEquation ( Incenter ( TRIANGLE: z ) ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 3087,
    "declarations": "z: TRIANGLE; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "LocusEquation(Incenter(z)) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "Length ( LINESEGMENT: L ) equals Min ( NUMBER: -31 )",
    "id": 3088,
    "declarations": "L: LINESEGMENT; -31: NUMBER",
    "facts": "Length(L) = Min(-31)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: B ) equals LINE: g",
    "id": 3089,
    "declarations": "B: HYPERBOLA; g: LINE",
    "facts": "Asymptote(B) = g"
},
{
    "assertion": "Eccentricity ( CONICSECTION: r ) equals FocalLength ( CONICSECTION: C )",
    "id": 3090,
    "declarations": "r: CONICSECTION; C: CONICSECTION",
    "facts": "Eccentricity(r) = FocalLength(C)"
},
{
    "assertion": "Vertex ( CONICSECTION: z ) equals POINT: a",
    "id": 3091,
    "declarations": "z: CONICSECTION; a: POINT",
    "facts": "Vertex(z) = a"
},
{
    "assertion": "NumIntersection ( CURVE: A, CURVE: f ) equals FocalLength ( CONICSECTION: J )",
    "id": 3092,
    "declarations": "A: CURVE; f: CURVE; J: CONICSECTION",
    "facts": "NumIntersection(A, f) = FocalLength(J)"
},
{
    "assertion": "lg ( Min ( Abs ( MajorAxis ( ELLIPSE: a ) ) ) ) equals NUMBER: -1",
    "id": 3093,
    "declarations": "a: ELLIPSE; -1: NUMBER",
    "facts": "lg(Min(Abs(MajorAxis(a)))) = -1"
},
{
    "assertion": "Locus ( UpperFocus ( CONICSECTION: C ) ) equals CURVE: H",
    "id": 3094,
    "declarations": "C: CONICSECTION; H: CURVE",
    "facts": "Locus(UpperFocus(C)) = H"
},
{
    "assertion": "Radius ( CIRCLE: Y ) equals NUMBER: -53",
    "id": 3095,
    "declarations": "Y: CIRCLE; -53: NUMBER",
    "facts": "Radius(Y) = -53"
},
{
    "assertion": "UpperVertex ( CONICSECTION: w ) equals LeftVertex ( CONICSECTION: L )",
    "id": 3096,
    "declarations": "w: CONICSECTION; L: CONICSECTION",
    "facts": "UpperVertex(w) = LeftVertex(L)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: x ) equals LINESEGMENT: U",
    "id": 3097,
    "declarations": "x: ELLIPSE; U: LINESEGMENT",
    "facts": "ImaginaryAxis(x) = U"
},
{
    "assertion": "Between ( POINT: s, POINT: j, UpperFocus ( CONICSECTION: Q ) ) equals BOOL: True",
    "id": 3098,
    "declarations": "s: POINT; j: POINT; Q: CONICSECTION; True: BOOL",
    "facts": "Between(s, j, UpperFocus(Q)) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Y ) equals UpperVertex ( CONICSECTION: Z )",
    "id": 3099,
    "declarations": "Y: CONICSECTION; Z: CONICSECTION",
    "facts": "LeftFocus(Y) = UpperVertex(Z)"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: U ) ) equals NUMBER: 47",
    "id": 3100,
    "declarations": "U: TRIANGLE; 47: NUMBER",
    "facts": "Diameter(CircumCircle(U)) = 47"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: E ) ) equals Perimeter ( CONICSECTION: n )",
    "id": 3101,
    "declarations": "E: CONICSECTION; n: CONICSECTION",
    "facts": "XCoordinate(LeftFocus(E)) = Perimeter(n)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: Y ) equals Circumcenter ( TRIANGLE: c )",
    "id": 3102,
    "declarations": "Y: CONICSECTION; c: TRIANGLE",
    "facts": "LowerFocus(Y) = Circumcenter(c)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: T ) equals LINESEGMENT: L",
    "id": 3103,
    "declarations": "T: ELLIPSE; L: LINESEGMENT",
    "facts": "ImaginaryAxis(T) = L"
},
{
    "assertion": "LineSegmentOf ( MidPoint ( LINESEGMENT: U ), Projection ( LeftVertex ( CONICSECTION: l ), LeftDirectrix ( CONICSECTION: u ) ) ) equals InterceptChord ( LINE: Z, CONICSECTION: N )",
    "id": 3104,
    "declarations": "U: LINESEGMENT; l: CONICSECTION; u: CONICSECTION; Z: LINE; N: CONICSECTION",
    "facts": "LineSegmentOf(MidPoint(U), Projection(LeftVertex(l), LeftDirectrix(u))) = InterceptChord(Z, N)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: Q ) equals LINESEGMENT: Q",
    "id": 3105,
    "declarations": "Q: ELLIPSE; Q: LINESEGMENT",
    "facts": "MajorAxis(Q) = Q"
},
{
    "assertion": "Area ( CONICSECTION: J ) equals Inclination ( LINE: N )",
    "id": 3106,
    "declarations": "J: CONICSECTION; N: LINE",
    "facts": "Area(J) = Inclination(N)"
},
{
    "assertion": "Diameter ( CIRCLE: H ) equals Abs ( LINESEGMENT: P )",
    "id": 3107,
    "declarations": "H: CIRCLE; P: LINESEGMENT",
    "facts": "Diameter(H) = Abs(P)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: g, CircumCircle ( TriangleOf ( POINT: i, POINT: E, POINT: p ) ) ) equals BOOL: True",
    "id": 3108,
    "declarations": "g: CIRCLE; i: POINT; E: POINT; p: POINT; True: BOOL",
    "facts": "IsOutTangent(g, CircumCircle(TriangleOf(i, E, p))) = True"
},
{
    "assertion": "Intersection ( CURVE: P, CURVE: W ) equals POINT: P",
    "id": 3109,
    "declarations": "P: CURVE; W: CURVE; P: POINT",
    "facts": "Intersection(P, W) = P"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: m ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 3110,
    "declarations": "m: HYPERBOLA; y*space=*spacelog(x): EXPRESSION",
    "facts": "Expression(LeftPart(m)) = y*space=*spacelog(x)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: A ) equals POINT: y",
    "id": 3111,
    "declarations": "A: TRIANGLE; y: POINT",
    "facts": "Circumcenter(A) = y"
},
{
    "assertion": "Eccentricity ( CONICSECTION: v ) equals NUMBER: -71",
    "id": 3112,
    "declarations": "v: CONICSECTION; -71: NUMBER",
    "facts": "Eccentricity(v) = -71"
},
{
    "assertion": "MinorAxis ( ELLIPSE: c ) equals LINESEGMENT: B",
    "id": 3113,
    "declarations": "c: ELLIPSE; B: LINESEGMENT",
    "facts": "MinorAxis(c) = B"
},
{
    "assertion": "Diameter ( CIRCLE: W ) equals NumIntersection ( LeftPart ( HYPERBOLA: G ), CURVE: L )",
    "id": 3114,
    "declarations": "W: CIRCLE; G: HYPERBOLA; L: CURVE",
    "facts": "Diameter(W) = NumIntersection(LeftPart(G), L)"
},
{
    "assertion": "LocusEquation ( POINT: F ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 3115,
    "declarations": "F: POINT; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "LocusEquation(F) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "LocusEquation ( UpperFocus ( CONICSECTION: c ) ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 3116,
    "declarations": "c: CONICSECTION; y*space=*spacesin(x): EXPRESSION",
    "facts": "LocusEquation(UpperFocus(c)) = y*space=*spacesin(x)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: O, TRIANGLE: K ) equals BOOL: True",
    "id": 3117,
    "declarations": "O: CIRCLE; K: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(O, K) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: a ) equals LINE: x",
    "id": 3118,
    "declarations": "a: CONICSECTION; x: LINE",
    "facts": "Directrix(a) = x"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: B ) equals Slope ( RightDirectrix ( CONICSECTION: G ) )",
    "id": 3119,
    "declarations": "B: CONICSECTION; G: CONICSECTION",
    "facts": "HalfFocalLength(B) = Slope(RightDirectrix(G))"
},
{
    "assertion": "Vertex ( CONICSECTION: L ) equals POINT: T",
    "id": 3120,
    "declarations": "L: CONICSECTION; T: POINT",
    "facts": "Vertex(L) = T"
},
{
    "assertion": "Center ( CONICSECTION: P ) equals RightFocus ( CONICSECTION: o )",
    "id": 3121,
    "declarations": "P: CONICSECTION; o: CONICSECTION",
    "facts": "Center(P) = RightFocus(o)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: i ) equals LINE: T",
    "id": 3122,
    "declarations": "i: LINESEGMENT; T: LINE",
    "facts": "OverlappingLine(i) = T"
},
{
    "assertion": "PointOnCurve ( POINT: a, CURVE: v ) equals BOOL: False",
    "id": 3123,
    "declarations": "a: POINT; v: CURVE; False: BOOL",
    "facts": "PointOnCurve(a, v) = False"
},
{
    "assertion": "Endpoint ( LINESEGMENT: p ) equals POINT: i",
    "id": 3124,
    "declarations": "p: LINESEGMENT; i: POINT",
    "facts": "Endpoint(p) = i"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: u ) equals LeftDirectrix ( CONICSECTION: W )",
    "id": 3125,
    "declarations": "u: LINESEGMENT; W: CONICSECTION",
    "facts": "PerpendicularBisector(u) = LeftDirectrix(W)"
},
{
    "assertion": "TriangleOf ( POINT: T, POINT: t, POINT: w ) equals TRIANGLE: q",
    "id": 3126,
    "declarations": "T: POINT; t: POINT; w: POINT; q: TRIANGLE",
    "facts": "TriangleOf(T, t, w) = q"
},
{
    "assertion": "Max ( NUMBER: -81 ) equals Slope ( LINE: V )",
    "id": 3127,
    "declarations": "-81: NUMBER; V: LINE",
    "facts": "Max(-81) = Slope(V)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: v, CIRCLE: A ) equals BOOL: False",
    "id": 3128,
    "declarations": "v: LINESEGMENT; A: CIRCLE; False: BOOL",
    "facts": "IsDiameter(v, A) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: T ) equals LeftVertex ( CONICSECTION: G )",
    "id": 3129,
    "declarations": "T: TRIANGLE; G: CONICSECTION",
    "facts": "Incenter(T) = LeftVertex(G)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: Z ) equals LINE: U",
    "id": 3130,
    "declarations": "Z: CONICSECTION; U: LINE",
    "facts": "RightDirectrix(Z) = U"
},
{
    "assertion": "Min ( Eccentricity ( CONICSECTION: b ) ) equals Perimeter ( CONICSECTION: F )",
    "id": 3131,
    "declarations": "b: CONICSECTION; F: CONICSECTION",
    "facts": "Min(Eccentricity(b)) = Perimeter(F)"
},
{
    "assertion": "Quadrant ( LeftFocus ( CONICSECTION: C ) ) equals lg ( Distance ( POINT: y, LowerVertex ( CONICSECTION: w ) ) )",
    "id": 3132,
    "declarations": "C: CONICSECTION; y: POINT; w: CONICSECTION",
    "facts": "Quadrant(LeftFocus(C)) = lg(Distance(y, LowerVertex(w)))"
},
{
    "assertion": "Incenter ( TRIANGLE: u ) equals POINT: A",
    "id": 3133,
    "declarations": "u: TRIANGLE; A: POINT",
    "facts": "Incenter(u) = A"
},
{
    "assertion": "LowerFocus ( CONICSECTION: s ) equals LowerFocus ( CONICSECTION: c )",
    "id": 3134,
    "declarations": "s: CONICSECTION; c: CONICSECTION",
    "facts": "LowerFocus(s) = LowerFocus(c)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: u ) equals TangentOfPoint ( UpperFocus ( CONICSECTION: W ), CURVE: u )",
    "id": 3135,
    "declarations": "u: LINESEGMENT; W: CONICSECTION; u: CURVE",
    "facts": "PerpendicularBisector(u) = TangentOfPoint(UpperFocus(W), u)"
},
{
    "assertion": "Length ( LINESEGMENT: O ) equals YCoordinate ( POINT: T )",
    "id": 3136,
    "declarations": "O: LINESEGMENT; T: POINT",
    "facts": "Length(O) = YCoordinate(T)"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: I ) ) equals LINE: m",
    "id": 3137,
    "declarations": "I: ELLIPSE; m: LINE",
    "facts": "OverlappingLine(MajorAxis(I)) = m"
},
{
    "assertion": "Expression ( CURVE: I ) equals EXPRESSION: x^2*space+*spacey*space=*space4",
    "id": 3138,
    "declarations": "I: CURVE; x^2*space+*spacey*space=*space4: EXPRESSION",
    "facts": "Expression(I) = x^2*space+*spacey*space=*space4"
},
{
    "assertion": "UpperFocus ( CONICSECTION: A ) equals Circumcenter ( TRIANGLE: g )",
    "id": 3139,
    "declarations": "A: CONICSECTION; g: TRIANGLE",
    "facts": "UpperFocus(A) = Circumcenter(g)"
},
{
    "assertion": "RealAxis ( ELLIPSE: n ) equals LINESEGMENT: G",
    "id": 3140,
    "declarations": "n: ELLIPSE; G: LINESEGMENT",
    "facts": "RealAxis(n) = G"
},
{
    "assertion": "UpperFocus ( CONICSECTION: O ) equals LeftFocus ( CONICSECTION: m )",
    "id": 3141,
    "declarations": "O: CONICSECTION; m: CONICSECTION",
    "facts": "UpperFocus(O) = LeftFocus(m)"
},
{
    "assertion": "Intercept ( LineOf ( Incenter ( TRIANGLE: y ), UpperFocus ( CONICSECTION: K ) ), AXIS: xAxis ) equals Quadrant ( POINT: L )",
    "id": 3142,
    "declarations": "y: TRIANGLE; K: CONICSECTION; xAxis: AXIS; L: POINT",
    "facts": "Intercept(LineOf(Incenter(y), UpperFocus(K)), xAxis) = Quadrant(L)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: s ) equals LINESEGMENT: g",
    "id": 3143,
    "declarations": "s: ELLIPSE; g: LINESEGMENT",
    "facts": "MajorAxis(s) = g"
},
{
    "assertion": "Expression ( CURVE: Z ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 3144,
    "declarations": "Z: CURVE; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "Expression(Z) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "sqrt ( Intercept ( LINE: Y, AXIS: yAxis ) ) equals NUMBER: -24",
    "id": 3145,
    "declarations": "Y: LINE; yAxis: AXIS; -24: NUMBER",
    "facts": "sqrt(Intercept(Y, yAxis)) = -24"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: E, CIRCLE: B ) equals BOOL: False",
    "id": 3146,
    "declarations": "E: LINESEGMENT; B: CIRCLE; False: BOOL",
    "facts": "IsDiameter(E, B) = False"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: w ) equals LINESEGMENT: j",
    "id": 3147,
    "declarations": "w: ELLIPSE; j: LINESEGMENT",
    "facts": "ImaginaryAxis(w) = j"
},
{
    "assertion": "IsInTangent ( CIRCLE: K, CIRCLE: z ) equals BOOL: False",
    "id": 3148,
    "declarations": "K: CIRCLE; z: CIRCLE; False: BOOL",
    "facts": "IsInTangent(K, z) = False"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: D ) equals AXIS: xAxis",
    "id": 3149,
    "declarations": "D: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(D) = xAxis"
},
{
    "assertion": "RightPart ( HYPERBOLA: C ) equals CURVE: R",
    "id": 3150,
    "declarations": "C: HYPERBOLA; R: CURVE",
    "facts": "RightPart(C) = R"
},
{
    "assertion": "FocalLength ( CONICSECTION: S ) equals NUMBER: 43",
    "id": 3151,
    "declarations": "S: CONICSECTION; 43: NUMBER",
    "facts": "FocalLength(S) = 43"
},
{
    "assertion": "ApplyUnit ( Inclination ( OverlappingLine ( MinorAxis ( ELLIPSE: m ) ) ), DEGREESTR: degree )",
    "id": 3152,
    "declarations": "m: ELLIPSE; degree: DEGREESTR",
    "facts": "ApplyUnit(Inclination(OverlappingLine(MinorAxis(m))), degree) = dummy_operator()"
},
{
    "assertion": "Area ( CONICSECTION: y ) equals Intercept ( LeftDirectrix ( CONICSECTION: w ), AXIS: xAxis )",
    "id": 3153,
    "declarations": "y: CONICSECTION; w: CONICSECTION; xAxis: AXIS",
    "facts": "Area(y) = Intercept(LeftDirectrix(w), xAxis)"
},
{
    "assertion": "Inclination ( LINE: Q ) equals FocalLength ( CONICSECTION: a )",
    "id": 3154,
    "declarations": "Q: LINE; a: CONICSECTION",
    "facts": "Inclination(Q) = FocalLength(a)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: w ) equals Incenter ( TRIANGLE: A )",
    "id": 3155,
    "declarations": "w: TRIANGLE; A: TRIANGLE",
    "facts": "Orthocenter(w) = Incenter(A)"
},
{
    "assertion": "Inclination ( LINE: N ) equals NUMBER: -71",
    "id": 3156,
    "declarations": "N: LINE; -71: NUMBER",
    "facts": "Inclination(N) = -71"
},
{
    "assertion": "LeftPart ( HYPERBOLA: v ) equals Locus ( Projection ( POINT: e, LINE: W ) )",
    "id": 3157,
    "declarations": "v: HYPERBOLA; e: POINT; W: LINE",
    "facts": "LeftPart(v) = Locus(Projection(e, W))"
},
{
    "assertion": "Intercept ( LineOf ( UpperFocus ( CONICSECTION: E ), RightFocus ( CONICSECTION: P ) ), AXIS: xAxis ) equals NUMBER: -87",
    "id": 3158,
    "declarations": "E: CONICSECTION; P: CONICSECTION; xAxis: AXIS; -87: NUMBER",
    "facts": "Intercept(LineOf(UpperFocus(E), RightFocus(P)), xAxis) = -87"
},
{
    "assertion": "UpperVertex ( CONICSECTION: f ) equals LowerVertex ( CONICSECTION: j )",
    "id": 3159,
    "declarations": "f: CONICSECTION; j: CONICSECTION",
    "facts": "UpperVertex(f) = LowerVertex(j)"
},
{
    "assertion": "Distance ( LowerFocus ( CONICSECTION: b ), LeftFocus ( CONICSECTION: K ) ) equals NUMBER: 9",
    "id": 3160,
    "declarations": "b: CONICSECTION; K: CONICSECTION; 9: NUMBER",
    "facts": "Distance(LowerFocus(b), LeftFocus(K)) = 9"
},
{
    "assertion": "IsPerpendicular ( LINE: g, LINE: x ) equals BOOL: False",
    "id": 3161,
    "declarations": "g: LINE; x: LINE; False: BOOL",
    "facts": "IsPerpendicular(g, x) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: X ) equals LeftDirectrix ( CONICSECTION: R )",
    "id": 3162,
    "declarations": "X: CONICSECTION; R: CONICSECTION",
    "facts": "Directrix(X) = LeftDirectrix(R)"
},
{
    "assertion": "Focus ( CONICSECTION: K ) equals POINT: G",
    "id": 3163,
    "declarations": "K: CONICSECTION; G: POINT",
    "facts": "Focus(K) = G"
},
{
    "assertion": "Center ( CONICSECTION: c ) equals POINT: y",
    "id": 3164,
    "declarations": "c: CONICSECTION; y: POINT",
    "facts": "Center(c) = y"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: v ) equals AXIS: yAxis",
    "id": 3165,
    "declarations": "v: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(v) = yAxis"
},
{
    "assertion": "InterceptChord ( LINE: Z, CONICSECTION: S ) equals LINESEGMENT: U",
    "id": 3166,
    "declarations": "Z: LINE; S: CONICSECTION; U: LINESEGMENT",
    "facts": "InterceptChord(Z, S) = U"
},
{
    "assertion": "LowerVertex ( CONICSECTION: n ) equals RightVertex ( CONICSECTION: i )",
    "id": 3167,
    "declarations": "n: CONICSECTION; i: CONICSECTION",
    "facts": "LowerVertex(n) = RightVertex(i)"
},
{
    "assertion": "RightPart ( HYPERBOLA: u ) equals LeftPart ( HYPERBOLA: F )",
    "id": 3168,
    "declarations": "u: HYPERBOLA; F: HYPERBOLA",
    "facts": "RightPart(u) = LeftPart(F)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: V ) equals POINT: d",
    "id": 3169,
    "declarations": "V: TRIANGLE; d: POINT",
    "facts": "Circumcenter(V) = d"
},
{
    "assertion": "Center ( CONICSECTION: Q ) equals RightVertex ( CONICSECTION: y )",
    "id": 3170,
    "declarations": "Q: CONICSECTION; y: CONICSECTION",
    "facts": "Center(Q) = RightVertex(y)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: U ) equals LINE: K",
    "id": 3172,
    "declarations": "U: HYPERBOLA; K: LINE",
    "facts": "Asymptote(U) = K"
},
{
    "assertion": "Circumcenter ( TRIANGLE: e ) equals RightVertex ( CONICSECTION: o )",
    "id": 3173,
    "declarations": "e: TRIANGLE; o: CONICSECTION",
    "facts": "Circumcenter(e) = RightVertex(o)"
},
{
    "assertion": "TangentOfPoint ( Incenter ( TRIANGLE: Y ), CURVE: N ) equals LINE: V",
    "id": 3174,
    "declarations": "Y: TRIANGLE; N: CURVE; V: LINE",
    "facts": "TangentOfPoint(Incenter(Y), N) = V"
},
{
    "assertion": "sqrt ( NUMBER: 26 ) equals NUMBER: -77",
    "id": 3175,
    "declarations": "26: NUMBER; -77: NUMBER",
    "facts": "sqrt(26) = -77"
},
{
    "assertion": "Min ( Eccentricity ( CONICSECTION: u ) ) equals NUMBER: -88",
    "id": 3176,
    "declarations": "u: CONICSECTION; -88: NUMBER",
    "facts": "Min(Eccentricity(u)) = -88"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: k ) equals TangentOfPoint ( POINT: A, CURVE: t )",
    "id": 3177,
    "declarations": "k: CONICSECTION; A: POINT; t: CURVE",
    "facts": "RightDirectrix(k) = TangentOfPoint(A, t)"
},
{
    "assertion": "IsParallel ( LINE: b, LeftDirectrix ( CONICSECTION: Y ) ) equals BOOL: True",
    "id": 3178,
    "declarations": "b: LINE; Y: CONICSECTION; True: BOOL",
    "facts": "IsParallel(b, LeftDirectrix(Y)) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: q ) equals POINT: B",
    "id": 3179,
    "declarations": "q: CONICSECTION; B: POINT",
    "facts": "LeftVertex(q) = B"
},
{
    "assertion": "Expression ( CURVE: q ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 3180,
    "declarations": "q: CURVE; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "Expression(q) = x*space+*spacey*space=*space5"
},
{
    "assertion": "LeftPart ( HYPERBOLA: q ) equals Locus ( POINT: U )",
    "id": 3181,
    "declarations": "q: HYPERBOLA; U: POINT",
    "facts": "LeftPart(q) = Locus(U)"
},
{
    "assertion": "LocusEquation ( POINT: d ) equals EXPRESSION: y*space=*space3*x*space+*space2",
    "id": 3182,
    "declarations": "d: POINT; y*space=*space3*x*space+*space2: EXPRESSION",
    "facts": "LocusEquation(d) = y*space=*space3*x*space+*space2"
},
{
    "assertion": "FocalLength ( CONICSECTION: m ) equals Intercept ( LINE: l, AXIS: xAxis )",
    "id": 3183,
    "declarations": "m: CONICSECTION; l: LINE; xAxis: AXIS",
    "facts": "FocalLength(m) = Intercept(l, xAxis)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: B ) equals POINT: F",
    "id": 3184,
    "declarations": "B: LINESEGMENT; F: POINT",
    "facts": "Endpoint(B) = F"
},
{
    "assertion": "IsChordOf ( RealAxis ( ELLIPSE: p ), CONICSECTION: B ) equals BOOL: False",
    "id": 3185,
    "declarations": "p: ELLIPSE; B: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(RealAxis(p), B) = False"
},
{
    "assertion": "Length ( LineSegmentOf ( POINT: t, Circumcenter ( TRIANGLE: K ) ) ) equals sqrt ( InterReciprocal ( sqrt ( NUMBER: -65 ) ) )",
    "id": 3186,
    "declarations": "t: POINT; K: TRIANGLE; -65: NUMBER",
    "facts": "Length(LineSegmentOf(t, Circumcenter(K))) = sqrt(InterReciprocal(sqrt(-65)))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: s ) equals POINT: b",
    "id": 3187,
    "declarations": "s: CONICSECTION; b: POINT",
    "facts": "LowerFocus(s) = b"
},
{
    "assertion": "Intersection ( CURVE: v, CURVE: J ) equals POINT: C",
    "id": 3188,
    "declarations": "v: CURVE; J: CURVE; C: POINT",
    "facts": "Intersection(v, J) = C"
},
{
    "assertion": "LowerVertex ( CONICSECTION: I ) equals UpperFocus ( CONICSECTION: G )",
    "id": 3189,
    "declarations": "I: CONICSECTION; G: CONICSECTION",
    "facts": "LowerVertex(I) = UpperFocus(G)"
},
{
    "assertion": "Incenter ( TRIANGLE: L ) equals RightFocus ( CONICSECTION: x )",
    "id": 3190,
    "declarations": "L: TRIANGLE; x: CONICSECTION",
    "facts": "Incenter(L) = RightFocus(x)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: T ) equals Slope ( LINE: R )",
    "id": 3191,
    "declarations": "T: CONICSECTION; R: LINE",
    "facts": "Eccentricity(T) = Slope(R)"
},
{
    "assertion": "Max ( Abs ( LINESEGMENT: Z ) ) equals Quadrant ( POINT: a )",
    "id": 3192,
    "declarations": "Z: LINESEGMENT; a: POINT",
    "facts": "Max(Abs(Z)) = Quadrant(a)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Z ) equals POINT: n",
    "id": 3193,
    "declarations": "Z: CONICSECTION; n: POINT",
    "facts": "UpperVertex(Z) = n"
},
{
    "assertion": "MajorAxis ( ELLIPSE: z ) equals LINESEGMENT: d",
    "id": 3194,
    "declarations": "z: ELLIPSE; d: LINESEGMENT",
    "facts": "MajorAxis(z) = d"
},
{
    "assertion": "Endpoint ( LINESEGMENT: W ) equals LeftVertex ( CONICSECTION: c )",
    "id": 3195,
    "declarations": "W: LINESEGMENT; c: CONICSECTION",
    "facts": "Endpoint(W) = LeftVertex(c)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: O ) equals LINE: v",
    "id": 3196,
    "declarations": "O: HYPERBOLA; v: LINE",
    "facts": "Asymptote(O) = v"
},
{
    "assertion": "NumIntersection ( CURVE: H, CURVE: e ) equals Radius ( CIRCLE: J )",
    "id": 3197,
    "declarations": "H: CURVE; e: CURVE; J: CIRCLE",
    "facts": "NumIntersection(H, e) = Radius(J)"
},
{
    "assertion": "Focus ( CONICSECTION: H ) equals Circumcenter ( TRIANGLE: C )",
    "id": 3198,
    "declarations": "H: CONICSECTION; C: TRIANGLE",
    "facts": "Focus(H) = Circumcenter(C)"
},
{
    "assertion": "Intersection ( CURVE: n, Locus ( POINT: p ) ) equals POINT: r",
    "id": 3199,
    "declarations": "n: CURVE; p: POINT; r: POINT",
    "facts": "Intersection(n, Locus(p)) = r"
},
{
    "assertion": "LowerVertex ( CONICSECTION: p ) equals RightVertex ( CONICSECTION: T )",
    "id": 3200,
    "declarations": "p: CONICSECTION; T: CONICSECTION",
    "facts": "LowerVertex(p) = RightVertex(T)"
},
{
    "assertion": "sqrt ( NUMBER: 2 ) equals Diameter ( CIRCLE: M )",
    "id": 3201,
    "declarations": "2: NUMBER; M: CIRCLE",
    "facts": "sqrt(2) = Diameter(M)"
},
{
    "assertion": "IsPerpendicular ( LINE: Q, TangentOfPoint ( POINT: W, CURVE: o ) ) equals BOOL: False",
    "id": 3202,
    "declarations": "Q: LINE; W: POINT; o: CURVE; False: BOOL",
    "facts": "IsPerpendicular(Q, TangentOfPoint(W, o)) = False"
},
{
    "assertion": "Area ( CONICSECTION: n ) equals Area ( CONICSECTION: P )",
    "id": 3203,
    "declarations": "n: CONICSECTION; P: CONICSECTION",
    "facts": "Area(n) = Area(P)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: R ) equals LineSegmentOf ( Incenter ( TRIANGLE: b ), LeftVertex ( CONICSECTION: u ) )",
    "id": 3204,
    "declarations": "R: ELLIPSE; b: TRIANGLE; u: CONICSECTION",
    "facts": "MinorAxis(R) = LineSegmentOf(Incenter(b), LeftVertex(u))"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: k ) equals LINE: Z",
    "id": 3205,
    "declarations": "k: LINESEGMENT; Z: LINE",
    "facts": "PerpendicularBisector(k) = Z"
},
{
    "assertion": "TangentOfPoint ( POINT: Z, Locus ( POINT: A ) ) equals TangentOnPoint ( FootPoint ( LINE: x, LINE: W ), CURVE: L )",
    "id": 3206,
    "declarations": "Z: POINT; A: POINT; x: LINE; W: LINE; L: CURVE",
    "facts": "TangentOfPoint(Z, Locus(A)) = TangentOnPoint(FootPoint(x, W), L)"
},
{
    "assertion": "XCoordinate ( Center ( CONICSECTION: V ) ) equals NUMBER: -45",
    "id": 3207,
    "declarations": "V: CONICSECTION; -45: NUMBER",
    "facts": "XCoordinate(Center(V)) = -45"
},
{
    "assertion": "LowerVertex ( CONICSECTION: K ) equals LowerVertex ( CONICSECTION: B )",
    "id": 3208,
    "declarations": "K: CONICSECTION; B: CONICSECTION",
    "facts": "LowerVertex(K) = LowerVertex(B)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: o, CONICSECTION: K ) equals BOOL: True",
    "id": 3209,
    "declarations": "o: LINESEGMENT; K: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(o, K) = True"
},
{
    "assertion": "XCoordinate ( POINT: g ) equals Slope ( OverlappingLine ( LINESEGMENT: N ) )",
    "id": 3210,
    "declarations": "g: POINT; N: LINESEGMENT",
    "facts": "XCoordinate(g) = Slope(OverlappingLine(N))"
},
{
    "assertion": "Quadrant ( POINT: y ) equals HalfFocalLength ( CONICSECTION: V )",
    "id": 3211,
    "declarations": "y: POINT; V: CONICSECTION",
    "facts": "Quadrant(y) = HalfFocalLength(V)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: L ) equals POINT: w",
    "id": 3212,
    "declarations": "L: LINESEGMENT; w: POINT",
    "facts": "Endpoint(L) = w"
},
{
    "assertion": "Projection ( UpperFocus ( CONICSECTION: G ), LINE: L ) equals POINT: g",
    "id": 3213,
    "declarations": "G: CONICSECTION; L: LINE; g: POINT",
    "facts": "Projection(UpperFocus(G), L) = g"
},
{
    "assertion": "Abs ( LINESEGMENT: Z ) equals NUMBER: 68",
    "id": 3214,
    "declarations": "Z: LINESEGMENT; 68: NUMBER",
    "facts": "Abs(Z) = 68"
},
{
    "assertion": "LineOf ( POINT: I, Incenter ( TRIANGLE: p ) ) equals LINE: B",
    "id": 3215,
    "declarations": "I: POINT; p: TRIANGLE; B: LINE",
    "facts": "LineOf(I, Incenter(p)) = B"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: f ) equals NUMBER: -20",
    "id": 3216,
    "declarations": "f: CONICSECTION; -20: NUMBER",
    "facts": "HalfFocalLength(f) = -20"
},
{
    "assertion": "LineOf ( UpperFocus ( CONICSECTION: f ), RightFocus ( CONICSECTION: m ) ) equals LINE: B",
    "id": 3217,
    "declarations": "f: CONICSECTION; m: CONICSECTION; B: LINE",
    "facts": "LineOf(UpperFocus(f), RightFocus(m)) = B"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: Y ) equals LINE: B",
    "id": 3218,
    "declarations": "Y: LINESEGMENT; B: LINE",
    "facts": "OverlappingLine(Y) = B"
},
{
    "assertion": "lg ( NUMBER: -95 ) equals FocalLength ( CONICSECTION: X )",
    "id": 3219,
    "declarations": "-95: NUMBER; X: CONICSECTION",
    "facts": "lg(-95) = FocalLength(X)"
},
{
    "assertion": "TangentPoint ( LINE: F, CIRCLE: C ) equals Center ( CONICSECTION: G )",
    "id": 3220,
    "declarations": "F: LINE; C: CIRCLE; G: CONICSECTION",
    "facts": "TangentPoint(F, C) = Center(G)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: Z, CIRCLE: M ) equals BOOL: False",
    "id": 3221,
    "declarations": "Z: LINESEGMENT; M: CIRCLE; False: BOOL",
    "facts": "IsDiameter(Z, M) = False"
},
{
    "assertion": "TriangleOf ( POINT: V, MidPoint ( RealAxis ( ELLIPSE: b ) ), POINT: Y ) equals TRIANGLE: S",
    "id": 3222,
    "declarations": "V: POINT; b: ELLIPSE; Y: POINT; S: TRIANGLE",
    "facts": "TriangleOf(V, MidPoint(RealAxis(b)), Y) = S"
},
{
    "assertion": "Eccentricity ( CONICSECTION: Z ) equals NUMBER: -61",
    "id": 3223,
    "declarations": "Z: CONICSECTION; -61: NUMBER",
    "facts": "Eccentricity(Z) = -61"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: G, TRIANGLE: p ) equals BOOL: True",
    "id": 3224,
    "declarations": "G: CIRCLE; p: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(G, p) = True"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: U ), TRIANGLE: i ) equals BOOL: True",
    "id": 3225,
    "declarations": "U: TRIANGLE; i: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(U), i) = True"
},
{
    "assertion": "UpperVertex ( CONICSECTION: N ) equals POINT: j",
    "id": 3226,
    "declarations": "N: CONICSECTION; j: POINT",
    "facts": "UpperVertex(N) = j"
},
{
    "assertion": "Directrix ( CONICSECTION: W ) equals LINE: y",
    "id": 3227,
    "declarations": "W: CONICSECTION; y: LINE",
    "facts": "Directrix(W) = y"
},
{
    "assertion": "Incenter ( TRIANGLE: E ) equals POINT: p",
    "id": 3228,
    "declarations": "E: TRIANGLE; p: POINT",
    "facts": "Incenter(E) = p"
},
{
    "assertion": "IsOutTangent ( CIRCLE: M, CIRCLE: l ) equals BOOL: True",
    "id": 3229,
    "declarations": "M: CIRCLE; l: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(M, l) = True"
},
{
    "assertion": "Slope ( LINE: r ) equals sqrt ( NUMBER: 80 )",
    "id": 3230,
    "declarations": "r: LINE; 80: NUMBER",
    "facts": "Slope(r) = sqrt(80)"
},
{
    "assertion": "Vertex ( CONICSECTION: X ) equals UpperVertex ( CONICSECTION: o )",
    "id": 3231,
    "declarations": "X: CONICSECTION; o: CONICSECTION",
    "facts": "Vertex(X) = UpperVertex(o)"
},
{
    "assertion": "Negation ( UpperFocus ( CONICSECTION: r ) equals POINT: z ) equals BOOL: True",
    "id": 3232,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: W ) equals TangentOnPoint ( POINT: A, CURVE: w )",
    "id": 3233,
    "declarations": "W: CONICSECTION; A: POINT; w: CURVE",
    "facts": "LeftDirectrix(W) = TangentOnPoint(A, w)"
},
{
    "assertion": "Between ( Orthocenter ( TRIANGLE: X ), POINT: g, Circumcenter ( TRIANGLE: o ) ) equals BOOL: False",
    "id": 3234,
    "declarations": "X: TRIANGLE; g: POINT; o: TRIANGLE; False: BOOL",
    "facts": "Between(Orthocenter(X), g, Circumcenter(o)) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: W ) equals POINT: D",
    "id": 3235,
    "declarations": "W: CONICSECTION; D: POINT",
    "facts": "Vertex(W) = D"
},
{
    "assertion": "Inclination ( LINE: L ) equals lg ( NUMBER: 21 )",
    "id": 3236,
    "declarations": "L: LINE; 21: NUMBER",
    "facts": "Inclination(L) = lg(21)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: J ) equals AXIS: yAxis",
    "id": 3237,
    "declarations": "J: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(J) = yAxis"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: N ) equals LINESEGMENT: i",
    "id": 3238,
    "declarations": "N: ELLIPSE; i: LINESEGMENT",
    "facts": "ImaginaryAxis(N) = i"
},
{
    "assertion": "LocusEquation ( POINT: Z ) equals EXPRESSION: x*space+*spacey^2*space=*space9",
    "id": 3239,
    "declarations": "Z: POINT; x*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "LocusEquation(Z) = x*space+*spacey^2*space=*space9"
},
{
    "assertion": "RightVertex ( CONICSECTION: Y ) equals POINT: W",
    "id": 3240,
    "declarations": "Y: CONICSECTION; W: POINT",
    "facts": "RightVertex(Y) = W"
},
{
    "assertion": "RealAxis ( ELLIPSE: g ) equals ImaginaryAxis ( ELLIPSE: K )",
    "id": 3241,
    "declarations": "g: ELLIPSE; K: ELLIPSE",
    "facts": "RealAxis(g) = ImaginaryAxis(K)"
},
{
    "assertion": "VectorOf ( Center ( CONICSECTION: m ), POINT: I ) equals VECTOR: n",
    "id": 3242,
    "declarations": "m: CONICSECTION; I: POINT; n: VECTOR",
    "facts": "VectorOf(Center(m), I) = n"
},
{
    "assertion": "RightVertex ( CONICSECTION: F ) equals LowerFocus ( CONICSECTION: M )",
    "id": 3243,
    "declarations": "F: CONICSECTION; M: CONICSECTION",
    "facts": "RightVertex(F) = LowerFocus(M)"
},
{
    "assertion": "sqrt ( NUMBER: 52 ) equals lg ( NUMBER: -69 )",
    "id": 3244,
    "declarations": "52: NUMBER; -69: NUMBER",
    "facts": "sqrt(52) = lg(-69)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: a ) equals LINE: G",
    "id": 3245,
    "declarations": "a: HYPERBOLA; G: LINE",
    "facts": "Asymptote(a) = G"
},
{
    "assertion": "NumIntersection ( CURVE: s, CURVE: x ) equals NUMBER: 3",
    "id": 3246,
    "declarations": "s: CURVE; x: CURVE; 3: NUMBER",
    "facts": "NumIntersection(s, x) = 3"
},
{
    "assertion": "Diameter ( CIRCLE: v ) equals Inclination ( TangentOnPoint ( Circumcenter ( TRIANGLE: U ), CURVE: S ) )",
    "id": 3247,
    "declarations": "v: CIRCLE; U: TRIANGLE; S: CURVE",
    "facts": "Diameter(v) = Inclination(TangentOnPoint(Circumcenter(U), S))"
},
{
    "assertion": "Intercept ( LINE: C, AXIS: yAxis ) equals Quadrant ( LowerFocus ( CONICSECTION: S ) )",
    "id": 3248,
    "declarations": "C: LINE; yAxis: AXIS; S: CONICSECTION",
    "facts": "Intercept(C, yAxis) = Quadrant(LowerFocus(S))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: G ) equals Locus ( POINT: b )",
    "id": 3249,
    "declarations": "G: HYPERBOLA; b: POINT",
    "facts": "LeftPart(G) = Locus(b)"
},
{
    "assertion": "Focus ( CONICSECTION: l ) equals POINT: P",
    "id": 3250,
    "declarations": "l: CONICSECTION; P: POINT",
    "facts": "Focus(l) = P"
},
{
    "assertion": "lg ( NUMBER: 50 ) equals YCoordinate ( Orthocenter ( TRIANGLE: f ) )",
    "id": 3251,
    "declarations": "50: NUMBER; f: TRIANGLE",
    "facts": "lg(50) = YCoordinate(Orthocenter(f))"
},
{
    "assertion": "Length ( RealAxis ( ELLIPSE: x ) ) equals NUMBER: 78",
    "id": 3252,
    "declarations": "x: ELLIPSE; 78: NUMBER",
    "facts": "Length(RealAxis(x)) = 78"
},
{
    "assertion": "LowerFocus ( CONICSECTION: L ) equals POINT: y",
    "id": 3253,
    "declarations": "L: CONICSECTION; y: POINT",
    "facts": "LowerFocus(L) = y"
},
{
    "assertion": "IsParallel ( LINE: n, TangentOnPoint ( Center ( CONICSECTION: u ), CURVE: p ) ) equals BOOL: False",
    "id": 3254,
    "declarations": "n: LINE; u: CONICSECTION; p: CURVE; False: BOOL",
    "facts": "IsParallel(n, TangentOnPoint(Center(u), p)) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: s ) equals POINT: j",
    "id": 3255,
    "declarations": "s: CONICSECTION; j: POINT",
    "facts": "LowerFocus(s) = j"
},
{
    "assertion": "InterReciprocal ( NUMBER: -92 ) equals Length ( LINESEGMENT: e )",
    "id": 3256,
    "declarations": "-92: NUMBER; e: LINESEGMENT",
    "facts": "InterReciprocal(-92) = Length(e)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: i ) equals LINE: i",
    "id": 3257,
    "declarations": "i: CONICSECTION; i: LINE",
    "facts": "RightDirectrix(i) = i"
},
{
    "assertion": "IsOutTangent ( CIRCLE: C, CIRCLE: h ) equals BOOL: False",
    "id": 3258,
    "declarations": "C: CIRCLE; h: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(C, h) = False"
},
{
    "assertion": "AngleOf ( POINT: T, POINT: M, POINT: D ) equals ApplyUnit ( NUMBER: -3, DEGREESTR: degree )",
    "id": 3259,
    "declarations": "T: POINT; M: POINT; D: POINT; -3: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(T, M, D) = ApplyUnit(-3, degree)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: B ) equals CIRCLE: X",
    "id": 3260,
    "declarations": "B: TRIANGLE; X: CIRCLE",
    "facts": "CircumCircle(B) = X"
},
{
    "assertion": "Eccentricity ( CONICSECTION: I ) equals NUMBER: -25",
    "id": 3261,
    "declarations": "I: CONICSECTION; -25: NUMBER",
    "facts": "Eccentricity(I) = -25"
},
{
    "assertion": "Distance ( MidPoint ( LineSegmentOf ( POINT: v, LowerVertex ( CONICSECTION: L ) ) ), MidPoint ( MajorAxis ( ELLIPSE: o ) ) ) equals YCoordinate ( POINT: H )",
    "id": 3262,
    "declarations": "v: POINT; L: CONICSECTION; o: ELLIPSE; H: POINT",
    "facts": "Distance(MidPoint(LineSegmentOf(v, LowerVertex(L))), MidPoint(MajorAxis(o))) = YCoordinate(H)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: L ) equals POINT: y",
    "id": 3263,
    "declarations": "L: TRIANGLE; y: POINT",
    "facts": "Orthocenter(L) = y"
},
{
    "assertion": "Focus ( CONICSECTION: n ) equals POINT: d",
    "id": 3264,
    "declarations": "n: CONICSECTION; d: POINT",
    "facts": "Focus(n) = d"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: b ) ) equals LINE: V",
    "id": 3265,
    "declarations": "b: ELLIPSE; V: LINE",
    "facts": "OverlappingLine(MinorAxis(b)) = V"
},
{
    "assertion": "Asymptote ( HYPERBOLA: L ) equals LINE: H",
    "id": 3266,
    "declarations": "L: HYPERBOLA; H: LINE",
    "facts": "Asymptote(L) = H"
},
{
    "assertion": "PointOnCurve ( LowerVertex ( CONICSECTION: Y ), CURVE: S ) equals BOOL: False",
    "id": 3267,
    "declarations": "Y: CONICSECTION; S: CURVE; False: BOOL",
    "facts": "PointOnCurve(LowerVertex(Y), S) = False"
},
{
    "assertion": "TangentOfPoint ( LeftFocus ( CONICSECTION: B ), CURVE: z ) equals LINE: c",
    "id": 3268,
    "declarations": "B: CONICSECTION; z: CURVE; c: LINE",
    "facts": "TangentOfPoint(LeftFocus(B), z) = c"
},
{
    "assertion": "Perimeter ( CONICSECTION: K ) equals sqrt ( YCoordinate ( Center ( CONICSECTION: Z ) ) )",
    "id": 3269,
    "declarations": "K: CONICSECTION; Z: CONICSECTION",
    "facts": "Perimeter(K) = sqrt(YCoordinate(Center(Z)))"
},
{
    "assertion": "RightPart ( HYPERBOLA: o ) equals CURVE: x",
    "id": 3270,
    "declarations": "o: HYPERBOLA; x: CURVE",
    "facts": "RightPart(o) = x"
},
{
    "assertion": "LeftFocus ( CONICSECTION: D ) equals POINT: F",
    "id": 3271,
    "declarations": "D: CONICSECTION; F: POINT",
    "facts": "LeftFocus(D) = F"
},
{
    "assertion": "NumIntersection ( RightPart ( HYPERBOLA: v ), CURVE: m ) equals NUMBER: -70",
    "id": 3272,
    "declarations": "v: HYPERBOLA; m: CURVE; -70: NUMBER",
    "facts": "NumIntersection(RightPart(v), m) = -70"
},
{
    "assertion": "LowerFocus ( CONICSECTION: K ) equals POINT: z",
    "id": 3273,
    "declarations": "K: CONICSECTION; z: POINT",
    "facts": "LowerFocus(K) = z"
},
{
    "assertion": "Vertex ( CONICSECTION: h ) equals POINT: j",
    "id": 3274,
    "declarations": "h: CONICSECTION; j: POINT",
    "facts": "Vertex(h) = j"
},
{
    "assertion": "Asymptote ( HYPERBOLA: h ) equals PerpendicularBisector ( LINESEGMENT: b )",
    "id": 3275,
    "declarations": "h: HYPERBOLA; b: LINESEGMENT",
    "facts": "Asymptote(h) = PerpendicularBisector(b)"
},
{
    "assertion": "LineSegmentOf ( LeftVertex ( CONICSECTION: H ), POINT: L ) equals MajorAxis ( ELLIPSE: E )",
    "id": 3276,
    "declarations": "H: CONICSECTION; L: POINT; E: ELLIPSE",
    "facts": "LineSegmentOf(LeftVertex(H), L) = MajorAxis(E)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: Z ) equals Incenter ( TRIANGLE: g )",
    "id": 3277,
    "declarations": "Z: CONICSECTION; g: TRIANGLE",
    "facts": "LowerVertex(Z) = Incenter(g)"
},
{
    "assertion": "Directrix ( CONICSECTION: z ) equals LINE: V",
    "id": 3278,
    "declarations": "z: CONICSECTION; V: LINE",
    "facts": "Directrix(z) = V"
},
{
    "assertion": "Eccentricity ( CONICSECTION: S ) equals Distance ( POINT: o, POINT: x )",
    "id": 3279,
    "declarations": "S: CONICSECTION; o: POINT; x: POINT",
    "facts": "Eccentricity(S) = Distance(o, x)"
},
{
    "assertion": "Abs ( MajorAxis ( ELLIPSE: C ) ) equals Length ( LINESEGMENT: J )",
    "id": 3280,
    "declarations": "C: ELLIPSE; J: LINESEGMENT",
    "facts": "Abs(MajorAxis(C)) = Length(J)"
},
{
    "assertion": "Min ( NUMBER: 3 ) equals NUMBER: -71",
    "id": 3281,
    "declarations": "3: NUMBER; -71: NUMBER",
    "facts": "Min(3) = -71"
},
{
    "assertion": "DotProduct ( VECTOR: e, VECTOR: Q ) equals Perimeter ( CONICSECTION: d )",
    "id": 3282,
    "declarations": "e: VECTOR; Q: VECTOR; d: CONICSECTION",
    "facts": "DotProduct(e, Q) = Perimeter(d)"
},
{
    "assertion": "Focus ( CONICSECTION: V ) equals POINT: e",
    "id": 3283,
    "declarations": "V: CONICSECTION; e: POINT",
    "facts": "Focus(V) = e"
},
{
    "assertion": "Length ( MinorAxis ( ELLIPSE: L ) ) equals Abs ( LINESEGMENT: c )",
    "id": 3284,
    "declarations": "L: ELLIPSE; c: LINESEGMENT",
    "facts": "Length(MinorAxis(L)) = Abs(c)"
},
{
    "assertion": "FootPoint ( LINE: L, PerpendicularBisector ( MajorAxis ( ELLIPSE: b ) ) ) equals LeftVertex ( CONICSECTION: i )",
    "id": 3285,
    "declarations": "L: LINE; b: ELLIPSE; i: CONICSECTION",
    "facts": "FootPoint(L, PerpendicularBisector(MajorAxis(b))) = LeftVertex(i)"
},
{
    "assertion": "YCoordinate ( Incenter ( TRIANGLE: Y ) ) equals NUMBER: 1",
    "id": 3286,
    "declarations": "Y: TRIANGLE; 1: NUMBER",
    "facts": "YCoordinate(Incenter(Y)) = 1"
},
{
    "assertion": "RightPart ( HYPERBOLA: X ) equals CURVE: r",
    "id": 3287,
    "declarations": "X: HYPERBOLA; r: CURVE",
    "facts": "RightPart(X) = r"
},
{
    "assertion": "Vertex ( CONICSECTION: d ) equals POINT: z",
    "id": 3288,
    "declarations": "d: CONICSECTION; z: POINT",
    "facts": "Vertex(d) = z"
},
{
    "assertion": "Asymptote ( HYPERBOLA: k ) equals LINE: P",
    "id": 3289,
    "declarations": "k: HYPERBOLA; P: LINE",
    "facts": "Asymptote(k) = P"
},
{
    "assertion": "Intercept ( LINE: z, SymmetryAxis ( CONICSECTION: G ) ) equals NUMBER: 43",
    "id": 3290,
    "declarations": "z: LINE; G: CONICSECTION; 43: NUMBER",
    "facts": "Intercept(z, SymmetryAxis(G)) = 43"
},
{
    "assertion": "Slope ( LINE: Z ) equals sqrt ( NUMBER: 92 )",
    "id": 3291,
    "declarations": "Z: LINE; 92: NUMBER",
    "facts": "Slope(Z) = sqrt(92)"
},
{
    "assertion": "Negation ( Vertex ( CONICSECTION: e ) equals LeftFocus ( CONICSECTION: X ) ) equals BOOL: True",
    "id": 3292,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LineSegmentOf ( Center ( CONICSECTION: D ), POINT: A ) equals ImaginaryAxis ( ELLIPSE: y )",
    "id": 3293,
    "declarations": "D: CONICSECTION; A: POINT; y: ELLIPSE",
    "facts": "LineSegmentOf(Center(D), A) = ImaginaryAxis(y)"
},
{
    "assertion": "Intersection ( Locus ( UpperFocus ( CONICSECTION: g ) ), CURVE: n ) equals LowerVertex ( CONICSECTION: S )",
    "id": 3294,
    "declarations": "g: CONICSECTION; n: CURVE; S: CONICSECTION",
    "facts": "Intersection(Locus(UpperFocus(g)), n) = LowerVertex(S)"
},
{
    "assertion": "TangentPoint ( OverlappingLine ( LINESEGMENT: e ), CIRCLE: e ) equals Center ( CONICSECTION: h )",
    "id": 3295,
    "declarations": "e: LINESEGMENT; e: CIRCLE; h: CONICSECTION",
    "facts": "TangentPoint(OverlappingLine(e), e) = Center(h)"
},
{
    "assertion": "VectorOf ( Incenter ( TRIANGLE: s ), POINT: L ) equals VECTOR: T",
    "id": 3296,
    "declarations": "s: TRIANGLE; L: POINT; T: VECTOR",
    "facts": "VectorOf(Incenter(s), L) = T"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: C ) equals AXIS: yAxis",
    "id": 3297,
    "declarations": "C: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(C) = yAxis"
},
{
    "assertion": "Circumcenter ( TRIANGLE: z ) equals POINT: a",
    "id": 3298,
    "declarations": "z: TRIANGLE; a: POINT",
    "facts": "Circumcenter(z) = a"
},
{
    "assertion": "LineOf ( MidPoint ( LINESEGMENT: w ), LeftVertex ( CONICSECTION: j ) ) equals LINE: u",
    "id": 3299,
    "declarations": "w: LINESEGMENT; j: CONICSECTION; u: LINE",
    "facts": "LineOf(MidPoint(w), LeftVertex(j)) = u"
},
{
    "assertion": "ApplyUnit ( Eccentricity ( CONICSECTION: k ), DEGREESTR: degree )",
    "id": 3311,
    "declarations": "k: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Eccentricity(k), degree) = dummy_operator()"
},
{
    "assertion": "LineSegmentOf ( POINT: w, POINT: Y ) equals LINESEGMENT: C",
    "id": 3313,
    "declarations": "w: POINT; Y: POINT; C: LINESEGMENT",
    "facts": "LineSegmentOf(w, Y) = C"
},
{
    "assertion": "Negation ( LeftFocus ( CONICSECTION: T ) equals FootPoint ( LINE: Q, LINE: d ) ) equals BOOL: True",
    "id": 3314,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "AngleOf ( POINT: U, RightVertex ( CONICSECTION: x ), POINT: D ) equals AngleOf ( POINT: J, Projection ( Center ( CONICSECTION: t ), LINE: V ), FootPoint ( RightDirectrix ( CONICSECTION: u ), LINE: M ) )",
    "id": 3316,
    "declarations": "U: POINT; x: CONICSECTION; D: POINT; J: POINT; t: CONICSECTION; V: LINE; u: CONICSECTION; M: LINE",
    "facts": "AngleOf(U, RightVertex(x), D) = AngleOf(J, Projection(Center(t), V), FootPoint(RightDirectrix(u), M))"
},
{
    "assertion": "Perimeter ( CONICSECTION: L ) equals NUMBER: -56",
    "id": 3317,
    "declarations": "L: CONICSECTION; -56: NUMBER",
    "facts": "Perimeter(L) = -56"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: o ) ) equals sqrt ( Min ( XCoordinate ( RightVertex ( CONICSECTION: b ) ) ) )",
    "id": 3318,
    "declarations": "o: CONICSECTION; b: CONICSECTION",
    "facts": "Quadrant(LeftVertex(o)) = sqrt(Min(XCoordinate(RightVertex(b))))"
},
{
    "assertion": "LineOf ( POINT: w, LowerVertex ( CONICSECTION: U ) ) equals LeftDirectrix ( CONICSECTION: n )",
    "id": 3319,
    "declarations": "w: POINT; U: CONICSECTION; n: CONICSECTION",
    "facts": "LineOf(w, LowerVertex(U)) = LeftDirectrix(n)"
},
{
    "assertion": "sqrt ( NUMBER: 58 ) equals Inclination ( OverlappingLine ( LineSegmentOf ( Circumcenter ( TriangleOf ( POINT: X, POINT: F, LeftVertex ( CONICSECTION: m ) ) ), LeftVertex ( CONICSECTION: U ) ) ) )",
    "id": 3320,
    "declarations": "58: NUMBER; X: POINT; F: POINT; m: CONICSECTION; U: CONICSECTION",
    "facts": "sqrt(58) = Inclination(OverlappingLine(LineSegmentOf(Circumcenter(TriangleOf(X, F, LeftVertex(m))), LeftVertex(U))))"
},
{
    "assertion": "lg ( Quadrant ( POINT: f ) ) equals XCoordinate ( POINT: z )",
    "id": 3321,
    "declarations": "f: POINT; z: POINT",
    "facts": "lg(Quadrant(f)) = XCoordinate(z)"
},
{
    "assertion": "FootPoint ( LINE: V, LINE: B ) equals POINT: J",
    "id": 3322,
    "declarations": "V: LINE; B: LINE; J: POINT",
    "facts": "FootPoint(V, B) = J"
},
{
    "assertion": "Vertex ( CONICSECTION: w ) equals LowerVertex ( CONICSECTION: h )",
    "id": 3323,
    "declarations": "w: CONICSECTION; h: CONICSECTION",
    "facts": "Vertex(w) = LowerVertex(h)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: w ) equals LINESEGMENT: x",
    "id": 3324,
    "declarations": "w: ELLIPSE; x: LINESEGMENT",
    "facts": "MinorAxis(w) = x"
},
{
    "assertion": "CircumCircle ( TRIANGLE: y ) equals CIRCLE: w",
    "id": 3325,
    "declarations": "y: TRIANGLE; w: CIRCLE",
    "facts": "CircumCircle(y) = w"
},
{
    "assertion": "RightVertex ( CONICSECTION: X ) equals POINT: O",
    "id": 3326,
    "declarations": "X: CONICSECTION; O: POINT",
    "facts": "RightVertex(X) = O"
},
{
    "assertion": "UpperFocus ( CONICSECTION: s ) equals POINT: X",
    "id": 3327,
    "declarations": "s: CONICSECTION; X: POINT",
    "facts": "UpperFocus(s) = X"
},
{
    "assertion": "LowerFocus ( CONICSECTION: S ) equals Center ( CONICSECTION: z )",
    "id": 3328,
    "declarations": "S: CONICSECTION; z: CONICSECTION",
    "facts": "LowerFocus(S) = Center(z)"
},
{
    "assertion": "Abs ( LINESEGMENT: n ) equals NUMBER: -47",
    "id": 3329,
    "declarations": "n: LINESEGMENT; -47: NUMBER",
    "facts": "Abs(n) = -47"
},
{
    "assertion": "FocalLength ( CONICSECTION: f ) equals YCoordinate ( Center ( CONICSECTION: f ) )",
    "id": 3330,
    "declarations": "f: CONICSECTION; f: CONICSECTION",
    "facts": "FocalLength(f) = YCoordinate(Center(f))"
},
{
    "assertion": "Focus ( CONICSECTION: p ) equals POINT: p",
    "id": 3331,
    "declarations": "p: CONICSECTION; p: POINT",
    "facts": "Focus(p) = p"
},
{
    "assertion": "FocalLength ( CONICSECTION: F ) equals NUMBER: 24",
    "id": 3332,
    "declarations": "F: CONICSECTION; 24: NUMBER",
    "facts": "FocalLength(F) = 24"
},
{
    "assertion": "LowerFocus ( CONICSECTION: h ) equals LowerFocus ( CONICSECTION: G )",
    "id": 3333,
    "declarations": "h: CONICSECTION; G: CONICSECTION",
    "facts": "LowerFocus(h) = LowerFocus(G)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: q ) equals HalfFocalLength ( CONICSECTION: h )",
    "id": 3334,
    "declarations": "q: CONICSECTION; h: CONICSECTION",
    "facts": "HalfFocalLength(q) = HalfFocalLength(h)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: T ) equals POINT: k",
    "id": 3335,
    "declarations": "T: LINESEGMENT; k: POINT",
    "facts": "MidPoint(T) = k"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Y ) equals POINT: C",
    "id": 3336,
    "declarations": "Y: CONICSECTION; C: POINT",
    "facts": "LeftFocus(Y) = C"
},
{
    "assertion": "Endpoint ( InterceptChord ( TangentOfPoint ( POINT: t, CURVE: V ), CONICSECTION: l ) ) equals MidPoint ( LINESEGMENT: K )",
    "id": 3337,
    "declarations": "t: POINT; V: CURVE; l: CONICSECTION; K: LINESEGMENT",
    "facts": "Endpoint(InterceptChord(TangentOfPoint(t, V), l)) = MidPoint(K)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: j ) equals RightFocus ( CONICSECTION: j )",
    "id": 3338,
    "declarations": "j: CONICSECTION; j: CONICSECTION",
    "facts": "LowerVertex(j) = RightFocus(j)"
},
{
    "assertion": "Slope ( LINE: m ) equals Radius ( CIRCLE: D )",
    "id": 3339,
    "declarations": "m: LINE; D: CIRCLE",
    "facts": "Slope(m) = Radius(D)"
},
{
    "assertion": "RightPart ( HYPERBOLA: B ) equals CURVE: G",
    "id": 3340,
    "declarations": "B: HYPERBOLA; G: CURVE",
    "facts": "RightPart(B) = G"
},
{
    "assertion": "Eccentricity ( CONICSECTION: M ) equals Abs ( LINESEGMENT: E )",
    "id": 3341,
    "declarations": "M: CONICSECTION; E: LINESEGMENT",
    "facts": "Eccentricity(M) = Abs(E)"
},
{
    "assertion": "IsPerpendicular ( LINE: N, LINE: Y ) equals BOOL: True",
    "id": 3342,
    "declarations": "N: LINE; Y: LINE; True: BOOL",
    "facts": "IsPerpendicular(N, Y) = True"
},
{
    "assertion": "Endpoint ( LINESEGMENT: Y ) equals POINT: A",
    "id": 3343,
    "declarations": "Y: LINESEGMENT; A: POINT",
    "facts": "Endpoint(Y) = A"
},
{
    "assertion": "LeftFocus ( CONICSECTION: U ) equals Circumcenter ( TRIANGLE: f )",
    "id": 3344,
    "declarations": "U: CONICSECTION; f: TRIANGLE",
    "facts": "LeftFocus(U) = Circumcenter(f)"
},
{
    "assertion": "NumIntersection ( CURVE: K, CURVE: d ) equals Length ( LINESEGMENT: o )",
    "id": 3345,
    "declarations": "K: CURVE; d: CURVE; o: LINESEGMENT",
    "facts": "NumIntersection(K, d) = Length(o)"
},
{
    "assertion": "RealAxis ( ELLIPSE: a ) equals LINESEGMENT: F",
    "id": 3346,
    "declarations": "a: ELLIPSE; F: LINESEGMENT",
    "facts": "RealAxis(a) = F"
},
{
    "assertion": "IsIntersect ( LeftPart ( HYPERBOLA: w ), CURVE: s ) equals BOOL: True",
    "id": 3347,
    "declarations": "w: HYPERBOLA; s: CURVE; True: BOOL",
    "facts": "IsIntersect(LeftPart(w), s) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: t ) equals RightVertex ( CONICSECTION: p )",
    "id": 3348,
    "declarations": "t: CONICSECTION; p: CONICSECTION",
    "facts": "LeftVertex(t) = RightVertex(p)"
},
{
    "assertion": "ApplyUnit ( Eccentricity ( CONICSECTION: u ), DEGREESTR: degree )",
    "id": 3349,
    "declarations": "u: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Eccentricity(u), degree) = dummy_operator()"
},
{
    "assertion": "IsIntersect ( CURVE: O, CURVE: x ) equals BOOL: True",
    "id": 3350,
    "declarations": "O: CURVE; x: CURVE; True: BOOL",
    "facts": "IsIntersect(O, x) = True"
},
{
    "assertion": "LowerFocus ( CONICSECTION: e ) equals POINT: i",
    "id": 3351,
    "declarations": "e: CONICSECTION; i: POINT",
    "facts": "LowerFocus(e) = i"
},
{
    "assertion": "VectorOf ( FootPoint ( LINE: r, LINE: F ), RightFocus ( CONICSECTION: F ) ) equals VECTOR: q",
    "id": 3352,
    "declarations": "r: LINE; F: LINE; F: CONICSECTION; q: VECTOR",
    "facts": "VectorOf(FootPoint(r, F), RightFocus(F)) = q"
},
{
    "assertion": "ApplyUnit ( NUMBER: -81, DEGREESTR: degree )",
    "id": 3353,
    "declarations": "-81: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-81, degree) = dummy_operator()"
},
{
    "assertion": "Negation ( TriangleOf ( POINT: F, POINT: y, POINT: u ) equals TRIANGLE: J ) equals BOOL: True",
    "id": 3354,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Asymptote ( HYPERBOLA: R ) equals OverlappingLine ( LINESEGMENT: e )",
    "id": 3355,
    "declarations": "R: HYPERBOLA; e: LINESEGMENT",
    "facts": "Asymptote(R) = OverlappingLine(e)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: n, TRIANGLE: c ) equals BOOL: False",
    "id": 3356,
    "declarations": "n: CIRCLE; c: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(n, c) = False"
},
{
    "assertion": "Circumcenter ( TRIANGLE: r ) equals POINT: a",
    "id": 3357,
    "declarations": "r: TRIANGLE; a: POINT",
    "facts": "Circumcenter(r) = a"
},
{
    "assertion": "Perimeter ( CONICSECTION: r ) equals Diameter ( CIRCLE: c )",
    "id": 3358,
    "declarations": "r: CONICSECTION; c: CIRCLE",
    "facts": "Perimeter(r) = Diameter(c)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: O ) equals UpperVertex ( CONICSECTION: O )",
    "id": 3359,
    "declarations": "O: CONICSECTION; O: CONICSECTION",
    "facts": "LowerFocus(O) = UpperVertex(O)"
},
{
    "assertion": "Vertex ( CONICSECTION: T ) equals POINT: t",
    "id": 3360,
    "declarations": "T: CONICSECTION; t: POINT",
    "facts": "Vertex(T) = t"
},
{
    "assertion": "RightPart ( HYPERBOLA: j ) equals CURVE: Z",
    "id": 3361,
    "declarations": "j: HYPERBOLA; Z: CURVE",
    "facts": "RightPart(j) = Z"
},
{
    "assertion": "LowerVertex ( CONICSECTION: D ) equals RightVertex ( CONICSECTION: n )",
    "id": 3362,
    "declarations": "D: CONICSECTION; n: CONICSECTION",
    "facts": "LowerVertex(D) = RightVertex(n)"
},
{
    "assertion": "Min ( lg ( Abs ( LINESEGMENT: l ) ) ) equals lg ( sqrt ( Perimeter ( CONICSECTION: M ) ) )",
    "id": 3363,
    "declarations": "l: LINESEGMENT; M: CONICSECTION",
    "facts": "Min(lg(Abs(l))) = lg(sqrt(Perimeter(M)))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: a ) equals POINT: k",
    "id": 3364,
    "declarations": "a: CONICSECTION; k: POINT",
    "facts": "UpperVertex(a) = k"
},
{
    "assertion": "IsTangent ( LINE: y, CONICSECTION: W ) equals BOOL: False",
    "id": 3365,
    "declarations": "y: LINE; W: CONICSECTION; False: BOOL",
    "facts": "IsTangent(y, W) = False"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: n ) equals LINE: P",
    "id": 3366,
    "declarations": "n: CONICSECTION; P: LINE",
    "facts": "LeftDirectrix(n) = P"
},
{
    "assertion": "Asymptote ( HYPERBOLA: x ) equals LINE: Y",
    "id": 3367,
    "declarations": "x: HYPERBOLA; Y: LINE",
    "facts": "Asymptote(x) = Y"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: k, TRIANGLE: d ) equals BOOL: True",
    "id": 3368,
    "declarations": "k: CIRCLE; d: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(k, d) = True"
},
{
    "assertion": "RightPart ( HYPERBOLA: U ) equals CURVE: P",
    "id": 3369,
    "declarations": "U: HYPERBOLA; P: CURVE",
    "facts": "RightPart(U) = P"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: p ) ) equals NUMBER: 7",
    "id": 3370,
    "declarations": "p: CONICSECTION; 7: NUMBER",
    "facts": "Slope(RightDirectrix(p)) = 7"
},
{
    "assertion": "LineOf ( POINT: J, POINT: a ) equals OverlappingLine ( LINESEGMENT: o )",
    "id": 3371,
    "declarations": "J: POINT; a: POINT; o: LINESEGMENT",
    "facts": "LineOf(J, a) = OverlappingLine(o)"
},
{
    "assertion": "IsIntersect ( CURVE: D, CURVE: z ) equals BOOL: False",
    "id": 3372,
    "declarations": "D: CURVE; z: CURVE; False: BOOL",
    "facts": "IsIntersect(D, z) = False"
},
{
    "assertion": "Projection ( POINT: S, OverlappingLine ( LINESEGMENT: s ) ) equals RightVertex ( CONICSECTION: d )",
    "id": 3373,
    "declarations": "S: POINT; s: LINESEGMENT; d: CONICSECTION",
    "facts": "Projection(S, OverlappingLine(s)) = RightVertex(d)"
},
{
    "assertion": "Intercept ( LINE: h, AXIS: xAxis ) equals Min ( NUMBER: 4 )",
    "id": 3374,
    "declarations": "h: LINE; xAxis: AXIS; 4: NUMBER",
    "facts": "Intercept(h, xAxis) = Min(4)"
},
{
    "assertion": "Focus ( CONICSECTION: h ) equals LowerVertex ( CONICSECTION: S )",
    "id": 3375,
    "declarations": "h: CONICSECTION; S: CONICSECTION",
    "facts": "Focus(h) = LowerVertex(S)"
},
{
    "assertion": "InterReciprocal ( Perimeter ( CONICSECTION: y ) ) equals XCoordinate ( POINT: p )",
    "id": 3376,
    "declarations": "y: CONICSECTION; p: POINT",
    "facts": "InterReciprocal(Perimeter(y)) = XCoordinate(p)"
},
{
    "assertion": "Area ( CONICSECTION: z ) equals Distance ( UpperFocus ( CONICSECTION: Q ), Orthocenter ( TRIANGLE: n ) )",
    "id": 3377,
    "declarations": "z: CONICSECTION; Q: CONICSECTION; n: TRIANGLE",
    "facts": "Area(z) = Distance(UpperFocus(Q), Orthocenter(n))"
},
{
    "assertion": "Inclination ( LINE: u ) equals NUMBER: 25",
    "id": 3378,
    "declarations": "u: LINE; 25: NUMBER",
    "facts": "Inclination(u) = 25"
},
{
    "assertion": "Area ( CONICSECTION: U ) equals Diameter ( CIRCLE: Q )",
    "id": 3379,
    "declarations": "U: CONICSECTION; Q: CIRCLE",
    "facts": "Area(U) = Diameter(Q)"
},
{
    "assertion": "RightPart ( HYPERBOLA: r ) equals CURVE: g",
    "id": 3380,
    "declarations": "r: HYPERBOLA; g: CURVE",
    "facts": "RightPart(r) = g"
},
{
    "assertion": "RightVertex ( CONICSECTION: R ) equals POINT: A",
    "id": 3381,
    "declarations": "R: CONICSECTION; A: POINT",
    "facts": "RightVertex(R) = A"
},
{
    "assertion": "MinorAxis ( ELLIPSE: e ) equals LINESEGMENT: E",
    "id": 3382,
    "declarations": "e: ELLIPSE; E: LINESEGMENT",
    "facts": "MinorAxis(e) = E"
},
{
    "assertion": "Abs ( LINESEGMENT: f ) equals Intercept ( OverlappingLine ( LINESEGMENT: L ), AXIS: xAxis )",
    "id": 3383,
    "declarations": "f: LINESEGMENT; L: LINESEGMENT; xAxis: AXIS",
    "facts": "Abs(f) = Intercept(OverlappingLine(L), xAxis)"
},
{
    "assertion": "MidPoint ( LineSegmentOf ( RightFocus ( CONICSECTION: h ), LeftFocus ( CONICSECTION: J ) ) ) equals POINT: n",
    "id": 3384,
    "declarations": "h: CONICSECTION; J: CONICSECTION; n: POINT",
    "facts": "MidPoint(LineSegmentOf(RightFocus(h), LeftFocus(J))) = n"
},
{
    "assertion": "Intersection ( CURVE: q, Locus ( UpperVertex ( CONICSECTION: o ) ) ) equals LeftFocus ( CONICSECTION: e )",
    "id": 3385,
    "declarations": "q: CURVE; o: CONICSECTION; e: CONICSECTION",
    "facts": "Intersection(q, Locus(UpperVertex(o))) = LeftFocus(e)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: q ) equals POINT: k",
    "id": 3386,
    "declarations": "q: CONICSECTION; k: POINT",
    "facts": "UpperFocus(q) = k"
},
{
    "assertion": "TangentPoint ( TangentOfPoint ( POINT: g, CURVE: Z ), CIRCLE: M ) equals Center ( CONICSECTION: K )",
    "id": 3387,
    "declarations": "g: POINT; Z: CURVE; M: CIRCLE; K: CONICSECTION",
    "facts": "TangentPoint(TangentOfPoint(g, Z), M) = Center(K)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: b ) equals CURVE: F",
    "id": 3388,
    "declarations": "b: HYPERBOLA; F: CURVE",
    "facts": "LeftPart(b) = F"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: y ) equals PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: C ) )",
    "id": 3389,
    "declarations": "y: LINESEGMENT; C: ELLIPSE",
    "facts": "PerpendicularBisector(y) = PerpendicularBisector(ImaginaryAxis(C))"
},
{
    "assertion": "Locus ( Center ( CONICSECTION: M ) ) equals CURVE: K",
    "id": 3390,
    "declarations": "M: CONICSECTION; K: CURVE",
    "facts": "Locus(Center(M)) = K"
},
{
    "assertion": "Distance ( POINT: R, POINT: V ) equals FocalLength ( CONICSECTION: E )",
    "id": 3391,
    "declarations": "R: POINT; V: POINT; E: CONICSECTION",
    "facts": "Distance(R, V) = FocalLength(E)"
},
{
    "assertion": "Min ( NUMBER: -65 ) equals Length ( LINESEGMENT: j )",
    "id": 3392,
    "declarations": "-65: NUMBER; j: LINESEGMENT",
    "facts": "Min(-65) = Length(j)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: U ) equals Distance ( UpperVertex ( CONICSECTION: v ), RightFocus ( CONICSECTION: H ) )",
    "id": 3393,
    "declarations": "U: CONICSECTION; v: CONICSECTION; H: CONICSECTION",
    "facts": "HalfFocalLength(U) = Distance(UpperVertex(v), RightFocus(H))"
},
{
    "assertion": "Directrix ( CONICSECTION: O ) equals TangentOfPoint ( Orthocenter ( TRIANGLE: d ), CURVE: o )",
    "id": 3394,
    "declarations": "O: CONICSECTION; d: TRIANGLE; o: CURVE",
    "facts": "Directrix(O) = TangentOfPoint(Orthocenter(d), o)"
},
{
    "assertion": "LineSegmentOf ( FootPoint ( LINE: u, OverlappingLine ( LINESEGMENT: k ) ), MidPoint ( LINESEGMENT: L ) ) equals LINESEGMENT: A",
    "id": 3395,
    "declarations": "u: LINE; k: LINESEGMENT; L: LINESEGMENT; A: LINESEGMENT",
    "facts": "LineSegmentOf(FootPoint(u, OverlappingLine(k)), MidPoint(L)) = A"
},
{
    "assertion": "CircumCircle ( TRIANGLE: K ) equals CIRCLE: k",
    "id": 3396,
    "declarations": "K: TRIANGLE; k: CIRCLE",
    "facts": "CircumCircle(K) = k"
},
{
    "assertion": "LocusEquation ( POINT: v ) equals EXPRESSION: y*space=*spacex^3*space-*space2x*space+*space1",
    "id": 3397,
    "declarations": "v: POINT; y*space=*spacex^3*space-*space2x*space+*space1: EXPRESSION",
    "facts": "LocusEquation(v) = y*space=*spacex^3*space-*space2x*space+*space1"
},
{
    "assertion": "LineOf ( Circumcenter ( TRIANGLE: d ), LeftVertex ( CONICSECTION: Y ) ) equals LINE: D",
    "id": 3398,
    "declarations": "d: TRIANGLE; Y: CONICSECTION; D: LINE",
    "facts": "LineOf(Circumcenter(d), LeftVertex(Y)) = D"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: O ) equals TangentOnPoint ( POINT: r, CURVE: w )",
    "id": 3399,
    "declarations": "O: CONICSECTION; r: POINT; w: CURVE",
    "facts": "RightDirectrix(O) = TangentOnPoint(r, w)"
},
{
    "assertion": "Focus ( CONICSECTION: w ) equals RightFocus ( CONICSECTION: X )",
    "id": 3400,
    "declarations": "w: CONICSECTION; X: CONICSECTION",
    "facts": "Focus(w) = RightFocus(X)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: E ) equals POINT: v",
    "id": 3401,
    "declarations": "E: LINESEGMENT; v: POINT",
    "facts": "Endpoint(E) = v"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: p ) equals InterceptChord ( TangentOfPoint ( POINT: r, CURVE: N ), CONICSECTION: n )",
    "id": 3402,
    "declarations": "p: ELLIPSE; r: POINT; N: CURVE; n: CONICSECTION",
    "facts": "ImaginaryAxis(p) = InterceptChord(TangentOfPoint(r, N), n)"
},
{
    "assertion": "IsPerpendicular ( LINE: w, LINE: c ) equals BOOL: True",
    "id": 3403,
    "declarations": "w: LINE; c: LINE; True: BOOL",
    "facts": "IsPerpendicular(w, c) = True"
},
{
    "assertion": "ApplyUnit ( Slope ( LINE: v ), DEGREESTR: degree )",
    "id": 3404,
    "declarations": "v: LINE; degree: DEGREESTR",
    "facts": "ApplyUnit(Slope(v), degree) = dummy_operator()"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: x ) equals LINE: n",
    "id": 3405,
    "declarations": "x: CONICSECTION; n: LINE",
    "facts": "LeftDirectrix(x) = n"
},
{
    "assertion": "And ( Min ( DotProduct ( VECTOR: h, VECTOR: J ) ) equals NUMBER: -59, Min ( Quadrant ( RightFocus ( CONICSECTION: p ) ) ) equals Area ( CONICSECTION: v ) ) equals BOOL: True",
    "id": 3406,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "InterReciprocal ( XCoordinate ( POINT: f ) ) equals NUMBER: -1",
    "id": 3407,
    "declarations": "f: POINT; -1: NUMBER",
    "facts": "InterReciprocal(XCoordinate(f)) = -1"
},
{
    "assertion": "IsOutTangent ( CIRCLE: I, CIRCLE: K ) equals BOOL: False",
    "id": 3408,
    "declarations": "I: CIRCLE; K: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(I, K) = False"
},
{
    "assertion": "Locus ( POINT: b ) equals CURVE: B",
    "id": 3409,
    "declarations": "b: POINT; B: CURVE",
    "facts": "Locus(b) = B"
},
{
    "assertion": "RightVertex ( CONICSECTION: a ) equals POINT: w",
    "id": 3410,
    "declarations": "a: CONICSECTION; w: POINT",
    "facts": "RightVertex(a) = w"
},
{
    "assertion": "IsDiameter ( MinorAxis ( ELLIPSE: a ), CIRCLE: Y ) equals BOOL: True",
    "id": 3411,
    "declarations": "a: ELLIPSE; Y: CIRCLE; True: BOOL",
    "facts": "IsDiameter(MinorAxis(a), Y) = True"
},
{
    "assertion": "Perimeter ( CONICSECTION: R ) equals NUMBER: -84",
    "id": 3412,
    "declarations": "R: CONICSECTION; -84: NUMBER",
    "facts": "Perimeter(R) = -84"
},
{
    "assertion": "LineOf ( LowerFocus ( CONICSECTION: G ), POINT: V ) equals LINE: m",
    "id": 3413,
    "declarations": "G: CONICSECTION; V: POINT; m: LINE",
    "facts": "LineOf(LowerFocus(G), V) = m"
},
{
    "assertion": "IsOutTangent ( CIRCLE: V, CIRCLE: v ) equals BOOL: True",
    "id": 3414,
    "declarations": "V: CIRCLE; v: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(V, v) = True"
},
{
    "assertion": "Asymptote ( HYPERBOLA: t ) equals LINE: N",
    "id": 3415,
    "declarations": "t: HYPERBOLA; N: LINE",
    "facts": "Asymptote(t) = N"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: N, TRIANGLE: X ) equals BOOL: False",
    "id": 3416,
    "declarations": "N: CIRCLE; X: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(N, X) = False"
},
{
    "assertion": "LineOf ( LeftFocus ( CONICSECTION: i ), LowerVertex ( CONICSECTION: e ) ) equals LINE: c",
    "id": 3417,
    "declarations": "i: CONICSECTION; e: CONICSECTION; c: LINE",
    "facts": "LineOf(LeftFocus(i), LowerVertex(e)) = c"
},
{
    "assertion": "YCoordinate ( Orthocenter ( TRIANGLE: Z ) ) equals NUMBER: -58",
    "id": 3418,
    "declarations": "Z: TRIANGLE; -58: NUMBER",
    "facts": "YCoordinate(Orthocenter(Z)) = -58"
},
{
    "assertion": "PointOnCurve ( UpperFocus ( CONICSECTION: C ), CURVE: P ) equals BOOL: True",
    "id": 3419,
    "declarations": "C: CONICSECTION; P: CURVE; True: BOOL",
    "facts": "PointOnCurve(UpperFocus(C), P) = True"
},
{
    "assertion": "LocusEquation ( POINT: o ) equals LocusEquation ( Circumcenter ( TRIANGLE: J ) )",
    "id": 3420,
    "declarations": "o: POINT; J: TRIANGLE",
    "facts": "LocusEquation(o) = LocusEquation(Circumcenter(J))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: Y ) equals POINT: o",
    "id": 3421,
    "declarations": "Y: LINESEGMENT; o: POINT",
    "facts": "Endpoint(Y) = o"
},
{
    "assertion": "RightPart ( HYPERBOLA: P ) equals CURVE: S",
    "id": 3422,
    "declarations": "P: HYPERBOLA; S: CURVE",
    "facts": "RightPart(P) = S"
},
{
    "assertion": "CircumCircle ( TRIANGLE: K ) equals CIRCLE: n",
    "id": 3423,
    "declarations": "K: TRIANGLE; n: CIRCLE",
    "facts": "CircumCircle(K) = n"
},
{
    "assertion": "Circumcenter ( TRIANGLE: x ) equals POINT: W",
    "id": 3424,
    "declarations": "x: TRIANGLE; W: POINT",
    "facts": "Circumcenter(x) = W"
},
{
    "assertion": "TangentOnPoint ( POINT: F, CURVE: w ) equals LeftDirectrix ( CONICSECTION: u )",
    "id": 3425,
    "declarations": "F: POINT; w: CURVE; u: CONICSECTION",
    "facts": "TangentOnPoint(F, w) = LeftDirectrix(u)"
},
{
    "assertion": "TangentOfPoint ( POINT: L, CURVE: v ) equals LINE: o",
    "id": 3426,
    "declarations": "L: POINT; v: CURVE; o: LINE",
    "facts": "TangentOfPoint(L, v) = o"
},
{
    "assertion": "Orthocenter ( TRIANGLE: d ) equals POINT: o",
    "id": 3427,
    "declarations": "d: TRIANGLE; o: POINT",
    "facts": "Orthocenter(d) = o"
},
{
    "assertion": "IsOutTangent ( CIRCLE: F, CircumCircle ( TRIANGLE: O ) ) equals BOOL: True",
    "id": 3428,
    "declarations": "F: CIRCLE; O: TRIANGLE; True: BOOL",
    "facts": "IsOutTangent(F, CircumCircle(O)) = True"
},
{
    "assertion": "Focus ( CONICSECTION: W ) equals POINT: m",
    "id": 3429,
    "declarations": "W: CONICSECTION; m: POINT",
    "facts": "Focus(W) = m"
},
{
    "assertion": "InterceptChord ( LINE: u, CONICSECTION: O ) equals LINESEGMENT: n",
    "id": 3430,
    "declarations": "u: LINE; O: CONICSECTION; n: LINESEGMENT",
    "facts": "InterceptChord(u, O) = n"
},
{
    "assertion": "RealAxis ( ELLIPSE: u ) equals LINESEGMENT: f",
    "id": 3431,
    "declarations": "u: ELLIPSE; f: LINESEGMENT",
    "facts": "RealAxis(u) = f"
},
{
    "assertion": "Perimeter ( CONICSECTION: b ) equals HalfFocalLength ( CONICSECTION: j )",
    "id": 3432,
    "declarations": "b: CONICSECTION; j: CONICSECTION",
    "facts": "Perimeter(b) = HalfFocalLength(j)"
},
{
    "assertion": "Incenter ( TRIANGLE: P ) equals RightFocus ( CONICSECTION: r )",
    "id": 3433,
    "declarations": "P: TRIANGLE; r: CONICSECTION",
    "facts": "Incenter(P) = RightFocus(r)"
},
{
    "assertion": "AngleOf ( POINT: a, Orthocenter ( TRIANGLE: J ), Circumcenter ( TRIANGLE: T ) ) equals ApplyUnit ( NUMBER: 22, DEGREESTR: degree )",
    "id": 3434,
    "declarations": "a: POINT; J: TRIANGLE; T: TRIANGLE; 22: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(a, Orthocenter(J), Circumcenter(T)) = ApplyUnit(22, degree)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: p ) equals NUMBER: 85",
    "id": 3435,
    "declarations": "p: CONICSECTION; 85: NUMBER",
    "facts": "Eccentricity(p) = 85"
},
{
    "assertion": "Perimeter ( CONICSECTION: C ) equals NUMBER: -55",
    "id": 3436,
    "declarations": "C: CONICSECTION; -55: NUMBER",
    "facts": "Perimeter(C) = -55"
},
{
    "assertion": "LocusEquation ( Center ( CONICSECTION: e ) ) equals LocusEquation ( POINT: s )",
    "id": 3437,
    "declarations": "e: CONICSECTION; s: POINT",
    "facts": "LocusEquation(Center(e)) = LocusEquation(s)"
},
{
    "assertion": "TangentPoint ( LINE: G, CIRCLE: b ) equals LeftFocus ( CONICSECTION: h )",
    "id": 3438,
    "declarations": "G: LINE; b: CIRCLE; h: CONICSECTION",
    "facts": "TangentPoint(G, b) = LeftFocus(h)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: R, CIRCLE: d ) equals BOOL: False",
    "id": 3439,
    "declarations": "R: CIRCLE; d: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(R, d) = False"
},
{
    "assertion": "TangentPoint ( OverlappingLine ( LINESEGMENT: D ), CircumCircle ( TRIANGLE: e ) ) equals Center ( CONICSECTION: E )",
    "id": 3440,
    "declarations": "D: LINESEGMENT; e: TRIANGLE; E: CONICSECTION",
    "facts": "TangentPoint(OverlappingLine(D), CircumCircle(e)) = Center(E)"
},
{
    "assertion": "Intersection ( CURVE: y, CURVE: o ) equals UpperFocus ( CONICSECTION: n )",
    "id": 3441,
    "declarations": "y: CURVE; o: CURVE; n: CONICSECTION",
    "facts": "Intersection(y, o) = UpperFocus(n)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: Q ) equals LINE: r",
    "id": 3442,
    "declarations": "Q: CONICSECTION; r: LINE",
    "facts": "RightDirectrix(Q) = r"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Z ) equals Circumcenter ( TRIANGLE: E )",
    "id": 3443,
    "declarations": "Z: TRIANGLE; E: TRIANGLE",
    "facts": "Orthocenter(Z) = Circumcenter(E)"
},
{
    "assertion": "Between ( POINT: U, POINT: z, POINT: G ) equals BOOL: True",
    "id": 3444,
    "declarations": "U: POINT; z: POINT; G: POINT; True: BOOL",
    "facts": "Between(U, z, G) = True"
},
{
    "assertion": "Area ( CONICSECTION: N ) equals Area ( CONICSECTION: U )",
    "id": 3445,
    "declarations": "N: CONICSECTION; U: CONICSECTION",
    "facts": "Area(N) = Area(U)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: t ) equals LINE: X",
    "id": 3446,
    "declarations": "t: CONICSECTION; X: LINE",
    "facts": "LeftDirectrix(t) = X"
},
{
    "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: X ) ) equals InterReciprocal ( Distance ( POINT: w, POINT: A ) )",
    "id": 3447,
    "declarations": "X: CONICSECTION; w: POINT; A: POINT",
    "facts": "YCoordinate(UpperVertex(X)) = InterReciprocal(Distance(w, A))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: D ) equals Center ( CONICSECTION: S )",
    "id": 3448,
    "declarations": "D: CONICSECTION; S: CONICSECTION",
    "facts": "UpperFocus(D) = Center(S)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: U ) equals RightVertex ( CONICSECTION: T )",
    "id": 3449,
    "declarations": "U: CONICSECTION; T: CONICSECTION",
    "facts": "LowerVertex(U) = RightVertex(T)"
},
{
    "assertion": "Negation ( LineOf ( Circumcenter ( TRIANGLE: t ), UpperVertex ( CONICSECTION: K ) ) equals LINE: P ) equals BOOL: True",
    "id": 3450,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Radius ( CIRCLE: m ) equals Min ( Distance ( POINT: e, POINT: R ) )",
    "id": 3451,
    "declarations": "m: CIRCLE; e: POINT; R: POINT",
    "facts": "Radius(m) = Min(Distance(e, R))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: V ) equals CircumCircle ( TRIANGLE: Y )",
    "id": 3452,
    "declarations": "V: TRIANGLE; Y: TRIANGLE",
    "facts": "CircumCircle(V) = CircumCircle(Y)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: K ) equals LINESEGMENT: k",
    "id": 3453,
    "declarations": "K: ELLIPSE; k: LINESEGMENT",
    "facts": "MinorAxis(K) = k"
},
{
    "assertion": "Quadrant ( POINT: A ) equals YCoordinate ( MidPoint ( LINESEGMENT: N ) )",
    "id": 3454,
    "declarations": "A: POINT; N: LINESEGMENT",
    "facts": "Quadrant(A) = YCoordinate(MidPoint(N))"
},
{
    "assertion": "Area ( CONICSECTION: R ) equals Radius ( CIRCLE: E )",
    "id": 3455,
    "declarations": "R: CONICSECTION; E: CIRCLE",
    "facts": "Area(R) = Radius(E)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: b ) equals LineOf ( POINT: C, Circumcenter ( TRIANGLE: z ) )",
    "id": 3456,
    "declarations": "b: LINESEGMENT; C: POINT; z: TRIANGLE",
    "facts": "OverlappingLine(b) = LineOf(C, Circumcenter(z))"
},
{
    "assertion": "VectorOf ( Circumcenter ( TRIANGLE: B ), POINT: s ) equals VECTOR: a",
    "id": 3457,
    "declarations": "B: TRIANGLE; s: POINT; a: VECTOR",
    "facts": "VectorOf(Circumcenter(B), s) = a"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: h ) ) equals PerpendicularBisector ( LINESEGMENT: r )",
    "id": 3458,
    "declarations": "h: ELLIPSE; r: LINESEGMENT",
    "facts": "PerpendicularBisector(ImaginaryAxis(h)) = PerpendicularBisector(r)"
},
{
    "assertion": "Abs ( LINESEGMENT: f ) equals Distance ( POINT: H, POINT: q )",
    "id": 3459,
    "declarations": "f: LINESEGMENT; H: POINT; q: POINT",
    "facts": "Abs(f) = Distance(H, q)"
},
{
    "assertion": "lg ( NUMBER: 48 ) equals Intercept ( LINE: V, AXIS: yAxis )",
    "id": 3460,
    "declarations": "48: NUMBER; V: LINE; yAxis: AXIS",
    "facts": "lg(48) = Intercept(V, yAxis)"
},
{
    "assertion": "Distance ( UpperVertex ( CONICSECTION: k ), LowerVertex ( CONICSECTION: e ) ) equals NUMBER: 88",
    "id": 3461,
    "declarations": "k: CONICSECTION; e: CONICSECTION; 88: NUMBER",
    "facts": "Distance(UpperVertex(k), LowerVertex(e)) = 88"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: G ), TRIANGLE: z ) equals BOOL: True",
    "id": 3462,
    "declarations": "G: TRIANGLE; z: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(G), z) = True"
},
{
    "assertion": "UpperVertex ( CONICSECTION: I ) equals POINT: s",
    "id": 3463,
    "declarations": "I: CONICSECTION; s: POINT",
    "facts": "UpperVertex(I) = s"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: K ) equals LINE: i",
    "id": 3464,
    "declarations": "K: CONICSECTION; i: LINE",
    "facts": "RightDirectrix(K) = i"
},
{
    "assertion": "RightPart ( HYPERBOLA: Q ) equals CURVE: F",
    "id": 3465,
    "declarations": "Q: HYPERBOLA; F: CURVE",
    "facts": "RightPart(Q) = F"
},
{
    "assertion": "DotProduct ( VECTOR: m, VECTOR: V ) equals Radius ( CIRCLE: D )",
    "id": 3466,
    "declarations": "m: VECTOR; V: VECTOR; D: CIRCLE",
    "facts": "DotProduct(m, V) = Radius(D)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: r ) equals Center ( CONICSECTION: P )",
    "id": 3467,
    "declarations": "r: CONICSECTION; P: CONICSECTION",
    "facts": "UpperVertex(r) = Center(P)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: F ) equals NUMBER: 86",
    "id": 3468,
    "declarations": "F: CONICSECTION; 86: NUMBER",
    "facts": "HalfFocalLength(F) = 86"
},
{
    "assertion": "Radius ( CIRCLE: R ) equals NUMBER: -97",
    "id": 3469,
    "declarations": "R: CIRCLE; -97: NUMBER",
    "facts": "Radius(R) = -97"
},
{
    "assertion": "Min ( Distance ( POINT: C, RightFocus ( CONICSECTION: c ) ) ) equals XCoordinate ( POINT: l )",
    "id": 3470,
    "declarations": "C: POINT; c: CONICSECTION; l: POINT",
    "facts": "Min(Distance(C, RightFocus(c))) = XCoordinate(l)"
},
{
    "assertion": "RightVertex ( CONICSECTION: M ) equals LowerVertex ( CONICSECTION: f )",
    "id": 3471,
    "declarations": "M: CONICSECTION; f: CONICSECTION",
    "facts": "RightVertex(M) = LowerVertex(f)"
},
{
    "assertion": "IsPerpendicular ( TangentOnPoint ( POINT: K, CURVE: r ), LineOf ( FootPoint ( LINE: o, LINE: t ), POINT: Q ) ) equals BOOL: False",
    "id": 3472,
    "declarations": "K: POINT; r: CURVE; o: LINE; t: LINE; Q: POINT; False: BOOL",
    "facts": "IsPerpendicular(TangentOnPoint(K, r), LineOf(FootPoint(o, t), Q)) = False"
},
{
    "assertion": "Negation ( RightPart ( HYPERBOLA: Q ) equals CURVE: S ) equals BOOL: True",
    "id": 3473,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "CircumCircle ( TRIANGLE: r ) equals CIRCLE: h",
    "id": 3474,
    "declarations": "r: TRIANGLE; h: CIRCLE",
    "facts": "CircumCircle(r) = h"
},
{
    "assertion": "LineOf ( POINT: c, LowerVertex ( CONICSECTION: T ) ) equals OverlappingLine ( LINESEGMENT: r )",
    "id": 3475,
    "declarations": "c: POINT; T: CONICSECTION; r: LINESEGMENT",
    "facts": "LineOf(c, LowerVertex(T)) = OverlappingLine(r)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: v ) equals RealAxis ( ELLIPSE: l )",
    "id": 3476,
    "declarations": "v: ELLIPSE; l: ELLIPSE",
    "facts": "MinorAxis(v) = RealAxis(l)"
},
{
    "assertion": "InterReciprocal ( Area ( CONICSECTION: C ) ) equals NUMBER: 39",
    "id": 3477,
    "declarations": "C: CONICSECTION; 39: NUMBER",
    "facts": "InterReciprocal(Area(C)) = 39"
},
{
    "assertion": "lg ( Area ( CONICSECTION: m ) ) equals NUMBER: -81",
    "id": 3478,
    "declarations": "m: CONICSECTION; -81: NUMBER",
    "facts": "lg(Area(m)) = -81"
},
{
    "assertion": "Circumcenter ( TRIANGLE: b ) equals Center ( CONICSECTION: p )",
    "id": 3479,
    "declarations": "b: TRIANGLE; p: CONICSECTION",
    "facts": "Circumcenter(b) = Center(p)"
},
{
    "assertion": "LineOf ( LeftVertex ( CONICSECTION: n ), UpperFocus ( CONICSECTION: F ) ) equals PerpendicularBisector ( LINESEGMENT: m )",
    "id": 3480,
    "declarations": "n: CONICSECTION; F: CONICSECTION; m: LINESEGMENT",
    "facts": "LineOf(LeftVertex(n), UpperFocus(F)) = PerpendicularBisector(m)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: m ) equals POINT: m",
    "id": 3481,
    "declarations": "m: CONICSECTION; m: POINT",
    "facts": "LeftFocus(m) = m"
},
{
    "assertion": "XCoordinate ( RightFocus ( CONICSECTION: N ) ) equals NUMBER: -61",
    "id": 3482,
    "declarations": "N: CONICSECTION; -61: NUMBER",
    "facts": "XCoordinate(RightFocus(N)) = -61"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: C ) equals LINE: i",
    "id": 3483,
    "declarations": "C: CONICSECTION; i: LINE",
    "facts": "LeftDirectrix(C) = i"
},
{
    "assertion": "Directrix ( CONICSECTION: Y ) equals RightDirectrix ( CONICSECTION: F )",
    "id": 3484,
    "declarations": "Y: CONICSECTION; F: CONICSECTION",
    "facts": "Directrix(Y) = RightDirectrix(F)"
},
{
    "assertion": "Min ( YCoordinate ( POINT: C ) ) equals FocalLength ( CONICSECTION: O )",
    "id": 3485,
    "declarations": "C: POINT; O: CONICSECTION",
    "facts": "Min(YCoordinate(C)) = FocalLength(O)"
},
{
    "assertion": "Negation ( Vertex ( CONICSECTION: x ) equals UpperVertex ( CONICSECTION: c ) ) equals BOOL: True",
    "id": 3486,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "sqrt ( XCoordinate ( POINT: M ) ) equals Eccentricity ( CONICSECTION: S )",
    "id": 3487,
    "declarations": "M: POINT; S: CONICSECTION",
    "facts": "sqrt(XCoordinate(M)) = Eccentricity(S)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: x ) equals POINT: E",
    "id": 3488,
    "declarations": "x: TRIANGLE; E: POINT",
    "facts": "Circumcenter(x) = E"
},
{
    "assertion": "Min ( Diameter ( CIRCLE: l ) ) equals DotProduct ( VECTOR: e, VECTOR: b )",
    "id": 3489,
    "declarations": "l: CIRCLE; e: VECTOR; b: VECTOR",
    "facts": "Min(Diameter(l)) = DotProduct(e, b)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: Q ) equals ImaginaryAxis ( ELLIPSE: i )",
    "id": 3490,
    "declarations": "Q: ELLIPSE; i: ELLIPSE",
    "facts": "MinorAxis(Q) = ImaginaryAxis(i)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: C ) equals Orthocenter ( TRIANGLE: T )",
    "id": 3491,
    "declarations": "C: CONICSECTION; T: TRIANGLE",
    "facts": "LowerVertex(C) = Orthocenter(T)"
},
{
    "assertion": "Directrix ( CONICSECTION: A ) equals LINE: R",
    "id": 3492,
    "declarations": "A: CONICSECTION; R: LINE",
    "facts": "Directrix(A) = R"
},
{
    "assertion": "RightPart ( HYPERBOLA: A ) equals CURVE: Q",
    "id": 3493,
    "declarations": "A: HYPERBOLA; Q: CURVE",
    "facts": "RightPart(A) = Q"
},
{
    "assertion": "IsPerpendicular ( LINE: m, LINE: W ) equals BOOL: False",
    "id": 3495,
    "declarations": "m: LINE; W: LINE; False: BOOL",
    "facts": "IsPerpendicular(m, W) = False"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Y ) equals POINT: B",
    "id": 3496,
    "declarations": "Y: TRIANGLE; B: POINT",
    "facts": "Orthocenter(Y) = B"
},
{
    "assertion": "LeftVertex ( CONICSECTION: U ) equals MidPoint ( LINESEGMENT: j )",
    "id": 3497,
    "declarations": "U: CONICSECTION; j: LINESEGMENT",
    "facts": "LeftVertex(U) = MidPoint(j)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: h ) equals RightVertex ( CONICSECTION: a )",
    "id": 3498,
    "declarations": "h: CONICSECTION; a: CONICSECTION",
    "facts": "LowerVertex(h) = RightVertex(a)"
},
{
    "assertion": "TangentPoint ( PerpendicularBisector ( MinorAxis ( ELLIPSE: f ) ), CIRCLE: G ) equals POINT: S",
    "id": 3499,
    "declarations": "f: ELLIPSE; G: CIRCLE; S: POINT",
    "facts": "TangentPoint(PerpendicularBisector(MinorAxis(f)), G) = S"
},
{
    "assertion": "Quadrant ( RightFocus ( CONICSECTION: V ) ) equals sqrt ( NUMBER: 78 )",
    "id": 3500,
    "declarations": "V: CONICSECTION; 78: NUMBER",
    "facts": "Quadrant(RightFocus(V)) = sqrt(78)"
},
{
    "assertion": "Slope ( LINE: w ) equals Quadrant ( Projection ( Circumcenter ( TRIANGLE: a ), LINE: g ) )",
    "id": 3501,
    "declarations": "w: LINE; a: TRIANGLE; g: LINE",
    "facts": "Slope(w) = Quadrant(Projection(Circumcenter(a), g))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: o ) equals UpperVertex ( CONICSECTION: L )",
    "id": 3502,
    "declarations": "o: LINESEGMENT; L: CONICSECTION",
    "facts": "Endpoint(o) = UpperVertex(L)"
},
{
    "assertion": "LocusEquation ( POINT: A ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 3503,
    "declarations": "A: POINT; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(A) = y*space=*spacelog(x)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: b ) equals TangentOfPoint ( POINT: A, CURVE: u )",
    "id": 3504,
    "declarations": "b: CONICSECTION; A: POINT; u: CURVE",
    "facts": "RightDirectrix(b) = TangentOfPoint(A, u)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: N ) equals POINT: w",
    "id": 3505,
    "declarations": "N: CONICSECTION; w: POINT",
    "facts": "LowerVertex(N) = w"
},
{
    "assertion": "Distance ( POINT: r, POINT: L ) equals Inclination ( LINE: a )",
    "id": 3506,
    "declarations": "r: POINT; L: POINT; a: LINE",
    "facts": "Distance(r, L) = Inclination(a)"
},
{
    "assertion": "And ( YCoordinate ( LowerVertex ( CONICSECTION: v ) ) equals Length ( LINESEGMENT: k ), RightFocus ( CONICSECTION: V ) equals POINT: M ) equals BOOL: True",
    "id": 3507,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Quadrant ( RightVertex ( CONICSECTION: l ) ) equals NUMBER: -5",
    "id": 3508,
    "declarations": "l: CONICSECTION; -5: NUMBER",
    "facts": "Quadrant(RightVertex(l)) = -5"
},
{
    "assertion": "MidPoint ( InterceptChord ( LINE: A, CONICSECTION: R ) ) equals RightVertex ( CONICSECTION: z )",
    "id": 3509,
    "declarations": "A: LINE; R: CONICSECTION; z: CONICSECTION",
    "facts": "MidPoint(InterceptChord(A, R)) = RightVertex(z)"
},
{
    "assertion": "LocusEquation ( UpperVertex ( CONICSECTION: P ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 3510,
    "declarations": "P: CONICSECTION; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(UpperVertex(P)) = y*space=*spacelog(x)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: e ) equals CURVE: y",
    "id": 3511,
    "declarations": "e: HYPERBOLA; y: CURVE",
    "facts": "LeftPart(e) = y"
},
{
    "assertion": "IsIntersect ( CURVE: C, CURVE: G ) equals BOOL: True",
    "id": 3512,
    "declarations": "C: CURVE; G: CURVE; True: BOOL",
    "facts": "IsIntersect(C, G) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: Z ) equals POINT: h",
    "id": 3513,
    "declarations": "Z: TRIANGLE; h: POINT",
    "facts": "Incenter(Z) = h"
},
{
    "assertion": "UpperVertex ( CONICSECTION: U ) equals MidPoint ( LINESEGMENT: c )",
    "id": 3514,
    "declarations": "U: CONICSECTION; c: LINESEGMENT",
    "facts": "UpperVertex(U) = MidPoint(c)"
},
{
    "assertion": "Focus ( CONICSECTION: z ) equals POINT: u",
    "id": 3515,
    "declarations": "z: CONICSECTION; u: POINT",
    "facts": "Focus(z) = u"
},
{
    "assertion": "Expression ( CURVE: n ) equals LocusEquation ( POINT: i )",
    "id": 3516,
    "declarations": "n: CURVE; i: POINT",
    "facts": "Expression(n) = LocusEquation(i)"
},
{
    "assertion": "Vertex ( CONICSECTION: p ) equals Circumcenter ( TRIANGLE: s )",
    "id": 3517,
    "declarations": "p: CONICSECTION; s: TRIANGLE",
    "facts": "Vertex(p) = Circumcenter(s)"
},
{
    "assertion": "Intersection ( Locus ( UpperFocus ( CONICSECTION: R ) ), CURVE: P ) equals POINT: j",
    "id": 3518,
    "declarations": "R: CONICSECTION; P: CURVE; j: POINT",
    "facts": "Intersection(Locus(UpperFocus(R)), P) = j"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: Q ) ) equals LINE: x",
    "id": 3519,
    "declarations": "Q: ELLIPSE; x: LINE",
    "facts": "OverlappingLine(MinorAxis(Q)) = x"
},
{
    "assertion": "Area ( CONICSECTION: x ) equals NUMBER: 38",
    "id": 3520,
    "declarations": "x: CONICSECTION; 38: NUMBER",
    "facts": "Area(x) = 38"
},
{
    "assertion": "Perimeter ( CONICSECTION: Y ) equals Min ( NUMBER: -68 )",
    "id": 3521,
    "declarations": "Y: CONICSECTION; -68: NUMBER",
    "facts": "Perimeter(Y) = Min(-68)"
},
{
    "assertion": "Locus ( POINT: I ) equals CURVE: T",
    "id": 3522,
    "declarations": "I: POINT; T: CURVE",
    "facts": "Locus(I) = T"
},
{
    "assertion": "LowerFocus ( CONICSECTION: b ) equals Incenter ( TRIANGLE: p )",
    "id": 3523,
    "declarations": "b: CONICSECTION; p: TRIANGLE",
    "facts": "LowerFocus(b) = Incenter(p)"
},
{
    "assertion": "And ( Locus ( POINT: l ) equals CURVE: o, IsCircumCircle ( CIRCLE: O, TRIANGLE: N ) equals BOOL: True ) equals BOOL: True",
    "id": 3524,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Intersection ( CURVE: N, RightPart ( HYPERBOLA: J ) ) equals POINT: H",
    "id": 3525,
    "declarations": "N: CURVE; J: HYPERBOLA; H: POINT",
    "facts": "Intersection(N, RightPart(J)) = H"
},
{
    "assertion": "RightVertex ( CONICSECTION: d ) equals POINT: E",
    "id": 3526,
    "declarations": "d: CONICSECTION; E: POINT",
    "facts": "RightVertex(d) = E"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: F ) equals lg ( NUMBER: 55 )",
    "id": 3527,
    "declarations": "F: CONICSECTION; 55: NUMBER",
    "facts": "HalfFocalLength(F) = lg(55)"
},
{
    "assertion": "IsPerpendicular ( LINE: U, LINE: i ) equals BOOL: True",
    "id": 3528,
    "declarations": "U: LINE; i: LINE; True: BOOL",
    "facts": "IsPerpendicular(U, i) = True"
},
{
    "assertion": "Distance ( POINT: h, POINT: o ) equals InterReciprocal ( NUMBER: 42 )",
    "id": 3529,
    "declarations": "h: POINT; o: POINT; 42: NUMBER",
    "facts": "Distance(h, o) = InterReciprocal(42)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: A ) equals POINT: t",
    "id": 3530,
    "declarations": "A: LINESEGMENT; t: POINT",
    "facts": "MidPoint(A) = t"
},
{
    "assertion": "LowerFocus ( CONICSECTION: S ) equals POINT: N",
    "id": 3531,
    "declarations": "S: CONICSECTION; N: POINT",
    "facts": "LowerFocus(S) = N"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: H, TRIANGLE: Q ) equals BOOL: True",
    "id": 3532,
    "declarations": "H: CIRCLE; Q: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(H, Q) = True"
},
{
    "assertion": "Diameter ( CIRCLE: K ) equals InterReciprocal ( NumIntersection ( CURVE: e, Locus ( Orthocenter ( TRIANGLE: X ) ) ) )",
    "id": 3533,
    "declarations": "K: CIRCLE; e: CURVE; X: TRIANGLE",
    "facts": "Diameter(K) = InterReciprocal(NumIntersection(e, Locus(Orthocenter(X))))"
},
{
    "assertion": "TangentPoint ( LINE: o, CIRCLE: F ) equals POINT: S",
    "id": 3534,
    "declarations": "o: LINE; F: CIRCLE; S: POINT",
    "facts": "TangentPoint(o, F) = S"
},
{
    "assertion": "Intersection ( CURVE: H, CURVE: j ) equals POINT: e",
    "id": 3535,
    "declarations": "H: CURVE; j: CURVE; e: POINT",
    "facts": "Intersection(H, j) = e"
},
{
    "assertion": "Abs ( LINESEGMENT: L ) equals HalfFocalLength ( CONICSECTION: y )",
    "id": 3536,
    "declarations": "L: LINESEGMENT; y: CONICSECTION",
    "facts": "Abs(L) = HalfFocalLength(y)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: h ) equals LowerFocus ( CONICSECTION: x )",
    "id": 3537,
    "declarations": "h: TRIANGLE; x: CONICSECTION",
    "facts": "Orthocenter(h) = LowerFocus(x)"
},
{
    "assertion": "Inclination ( LINE: d ) equals DotProduct ( VECTOR: V, VectorOf ( UpperFocus ( CONICSECTION: v ), Orthocenter ( TRIANGLE: o ) ) )",
    "id": 3538,
    "declarations": "d: LINE; V: VECTOR; v: CONICSECTION; o: TRIANGLE",
    "facts": "Inclination(d) = DotProduct(V, VectorOf(UpperFocus(v), Orthocenter(o)))"
},
{
    "assertion": "IsOutTangent ( CIRCLE: w, CIRCLE: E ) equals BOOL: True",
    "id": 3539,
    "declarations": "w: CIRCLE; E: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(w, E) = True"
},
{
    "assertion": "Min ( Length ( LINESEGMENT: v ) ) equals Slope ( LINE: c )",
    "id": 3540,
    "declarations": "v: LINESEGMENT; c: LINE",
    "facts": "Min(Length(v)) = Slope(c)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: B, TRIANGLE: r ) equals BOOL: False",
    "id": 3541,
    "declarations": "B: CIRCLE; r: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(B, r) = False"
},
{
    "assertion": "ApplyUnit ( Eccentricity ( CONICSECTION: Q ), DEGREESTR: degree )",
    "id": 3542,
    "declarations": "Q: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Eccentricity(Q), degree) = dummy_operator()"
},
{
    "assertion": "RightVertex ( CONICSECTION: h ) equals POINT: U",
    "id": 3543,
    "declarations": "h: CONICSECTION; U: POINT",
    "facts": "RightVertex(h) = U"
},
{
    "assertion": "XCoordinate ( POINT: P ) equals NUMBER: -52",
    "id": 3544,
    "declarations": "P: POINT; -52: NUMBER",
    "facts": "XCoordinate(P) = -52"
},
{
    "assertion": "TangentOnPoint ( POINT: s, CURVE: M ) equals LINE: o",
    "id": 3545,
    "declarations": "s: POINT; M: CURVE; o: LINE",
    "facts": "TangentOnPoint(s, M) = o"
},
{
    "assertion": "Abs ( LineSegmentOf ( POINT: V, POINT: L ) ) equals Abs ( InterceptChord ( LINE: w, CONICSECTION: b ) )",
    "id": 3546,
    "declarations": "V: POINT; L: POINT; w: LINE; b: CONICSECTION",
    "facts": "Abs(LineSegmentOf(V, L)) = Abs(InterceptChord(w, b))"
},
{
    "assertion": "RightFocus ( CONICSECTION: v ) equals POINT: R",
    "id": 3547,
    "declarations": "v: CONICSECTION; R: POINT",
    "facts": "RightFocus(v) = R"
},
{
    "assertion": "IsTangent ( LINE: T, CONICSECTION: F ) equals BOOL: False",
    "id": 3548,
    "declarations": "T: LINE; F: CONICSECTION; False: BOOL",
    "facts": "IsTangent(T, F) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: y ) equals RightVertex ( CONICSECTION: D )",
    "id": 3549,
    "declarations": "y: CONICSECTION; D: CONICSECTION",
    "facts": "LowerVertex(y) = RightVertex(D)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: i ) equals LINESEGMENT: a",
    "id": 3550,
    "declarations": "i: ELLIPSE; a: LINESEGMENT",
    "facts": "MajorAxis(i) = a"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: A ) equals LINE: V",
    "id": 3551,
    "declarations": "A: LINESEGMENT; V: LINE",
    "facts": "PerpendicularBisector(A) = V"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: c ) ) equals NUMBER: 91",
    "id": 3552,
    "declarations": "c: CONICSECTION; 91: NUMBER",
    "facts": "Slope(RightDirectrix(c)) = 91"
},
{
    "assertion": "MajorAxis ( ELLIPSE: F ) equals InterceptChord ( OverlappingLine ( LINESEGMENT: c ), CONICSECTION: D )",
    "id": 3553,
    "declarations": "F: ELLIPSE; c: LINESEGMENT; D: CONICSECTION",
    "facts": "MajorAxis(F) = InterceptChord(OverlappingLine(c), D)"
},
{
    "assertion": "TangentOnPoint ( RightVertex ( CONICSECTION: n ), Locus ( LeftVertex ( CONICSECTION: S ) ) ) equals LeftDirectrix ( CONICSECTION: J )",
    "id": 3554,
    "declarations": "n: CONICSECTION; S: CONICSECTION; J: CONICSECTION",
    "facts": "TangentOnPoint(RightVertex(n), Locus(LeftVertex(S))) = LeftDirectrix(J)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: g, TRIANGLE: K ) equals BOOL: False",
    "id": 3555,
    "declarations": "g: CIRCLE; K: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(g, K) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: c ) equals MidPoint ( LINESEGMENT: P )",
    "id": 3556,
    "declarations": "c: CONICSECTION; P: LINESEGMENT",
    "facts": "RightFocus(c) = MidPoint(P)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: J ) equals LINESEGMENT: c",
    "id": 3557,
    "declarations": "J: ELLIPSE; c: LINESEGMENT",
    "facts": "MajorAxis(J) = c"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: D ) equals Quadrant ( POINT: g )",
    "id": 3558,
    "declarations": "D: CONICSECTION; g: POINT",
    "facts": "HalfFocalLength(D) = Quadrant(g)"
},
{
    "assertion": "Length ( LINESEGMENT: A ) equals NUMBER: -68",
    "id": 3559,
    "declarations": "A: LINESEGMENT; -68: NUMBER",
    "facts": "Length(A) = -68"
},
{
    "assertion": "RightPart ( HYPERBOLA: I ) equals Locus ( Circumcenter ( TRIANGLE: U ) )",
    "id": 3560,
    "declarations": "I: HYPERBOLA; U: TRIANGLE",
    "facts": "RightPart(I) = Locus(Circumcenter(U))"
},
{
    "assertion": "IsInTangent ( CIRCLE: l, CircumCircle ( TRIANGLE: y ) ) equals BOOL: False",
    "id": 3561,
    "declarations": "l: CIRCLE; y: TRIANGLE; False: BOOL",
    "facts": "IsInTangent(l, CircumCircle(y)) = False"
},
{
    "assertion": "Center ( CONICSECTION: E ) equals POINT: l",
    "id": 3562,
    "declarations": "E: CONICSECTION; l: POINT",
    "facts": "Center(E) = l"
},
{
    "assertion": "sqrt ( NUMBER: -98 ) equals YCoordinate ( UpperFocus ( CONICSECTION: f ) )",
    "id": 3563,
    "declarations": "-98: NUMBER; f: CONICSECTION",
    "facts": "sqrt(-98) = YCoordinate(UpperFocus(f))"
},
{
    "assertion": "RealAxis ( ELLIPSE: k ) equals LINESEGMENT: r",
    "id": 3564,
    "declarations": "k: ELLIPSE; r: LINESEGMENT",
    "facts": "RealAxis(k) = r"
},
{
    "assertion": "Area ( CONICSECTION: e ) equals NUMBER: -15",
    "id": 3565,
    "declarations": "e: CONICSECTION; -15: NUMBER",
    "facts": "Area(e) = -15"
},
{
    "assertion": "LocusEquation ( UpperVertex ( CONICSECTION: i ) ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 3566,
    "declarations": "i: CONICSECTION; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "LocusEquation(UpperVertex(i)) = x*space+*spacey*space=*space5"
},
{
    "assertion": "Intercept ( LeftDirectrix ( CONICSECTION: U ), AXIS: xAxis ) equals Quadrant ( Incenter ( TRIANGLE: m ) )",
    "id": 3567,
    "declarations": "U: CONICSECTION; xAxis: AXIS; m: TRIANGLE",
    "facts": "Intercept(LeftDirectrix(U), xAxis) = Quadrant(Incenter(m))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: l ) equals POINT: u",
    "id": 3568,
    "declarations": "l: TRIANGLE; u: POINT",
    "facts": "Orthocenter(l) = u"
},
{
    "assertion": "RightPart ( HYPERBOLA: T ) equals CURVE: D",
    "id": 3569,
    "declarations": "T: HYPERBOLA; D: CURVE",
    "facts": "RightPart(T) = D"
},
{
    "assertion": "DotProduct ( VECTOR: m, VECTOR: r ) equals DotProduct ( VECTOR: n, VECTOR: u )",
    "id": 3570,
    "declarations": "m: VECTOR; r: VECTOR; n: VECTOR; u: VECTOR",
    "facts": "DotProduct(m, r) = DotProduct(n, u)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: v ) equals LINE: T",
    "id": 3571,
    "declarations": "v: HYPERBOLA; T: LINE",
    "facts": "Asymptote(v) = T"
},
{
    "assertion": "Eccentricity ( CONICSECTION: Q ) equals Inclination ( LeftDirectrix ( CONICSECTION: M ) )",
    "id": 3572,
    "declarations": "Q: CONICSECTION; M: CONICSECTION",
    "facts": "Eccentricity(Q) = Inclination(LeftDirectrix(M))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: w ) equals LeftVertex ( CONICSECTION: G )",
    "id": 3573,
    "declarations": "w: TRIANGLE; G: CONICSECTION",
    "facts": "Circumcenter(w) = LeftVertex(G)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: d ) equals POINT: a",
    "id": 3574,
    "declarations": "d: CONICSECTION; a: POINT",
    "facts": "LowerFocus(d) = a"
},
{
    "assertion": "LeftVertex ( CONICSECTION: Y ) equals RightFocus ( CONICSECTION: o )",
    "id": 3575,
    "declarations": "Y: CONICSECTION; o: CONICSECTION",
    "facts": "LeftVertex(Y) = RightFocus(o)"
},
{
    "assertion": "InterReciprocal ( Quadrant ( POINT: q ) ) equals XCoordinate ( POINT: T )",
    "id": 3576,
    "declarations": "q: POINT; T: POINT",
    "facts": "InterReciprocal(Quadrant(q)) = XCoordinate(T)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 25, DEGREESTR: degree )",
    "id": 3577,
    "declarations": "25: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(25, degree) = dummy_operator()"
},
{
    "assertion": "MidPoint ( LINESEGMENT: Z ) equals POINT: h",
    "id": 3578,
    "declarations": "Z: LINESEGMENT; h: POINT",
    "facts": "MidPoint(Z) = h"
},
{
    "assertion": "FocalLength ( CONICSECTION: U ) equals sqrt ( NUMBER: 12 )",
    "id": 3579,
    "declarations": "U: CONICSECTION; 12: NUMBER",
    "facts": "FocalLength(U) = sqrt(12)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: j ) equals LeftFocus ( CONICSECTION: w )",
    "id": 3580,
    "declarations": "j: CONICSECTION; w: CONICSECTION",
    "facts": "LowerVertex(j) = LeftFocus(w)"
},
{
    "assertion": "PointOnCurve ( POINT: E, RightPart ( HYPERBOLA: s ) ) equals BOOL: False",
    "id": 3581,
    "declarations": "E: POINT; s: HYPERBOLA; False: BOOL",
    "facts": "PointOnCurve(E, RightPart(s)) = False"
},
{
    "assertion": "PointOnCurve ( POINT: H, CURVE: F ) equals BOOL: True",
    "id": 3582,
    "declarations": "H: POINT; F: CURVE; True: BOOL",
    "facts": "PointOnCurve(H, F) = True"
},
{
    "assertion": "IsInTangent ( CIRCLE: n, CIRCLE: F ) equals BOOL: False",
    "id": 3583,
    "declarations": "n: CIRCLE; F: CIRCLE; False: BOOL",
    "facts": "IsInTangent(n, F) = False"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: P ), TRIANGLE: D ) equals BOOL: True",
    "id": 3584,
    "declarations": "P: TRIANGLE; D: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(P), D) = True"
},
{
    "assertion": "lg ( Distance ( LowerVertex ( CONICSECTION: d ), UpperVertex ( CONICSECTION: J ) ) ) equals NUMBER: 53",
    "id": 3585,
    "declarations": "d: CONICSECTION; J: CONICSECTION; 53: NUMBER",
    "facts": "lg(Distance(LowerVertex(d), UpperVertex(J))) = 53"
},
{
    "assertion": "CircumCircle ( TRIANGLE: v ) equals CIRCLE: C",
    "id": 3586,
    "declarations": "v: TRIANGLE; C: CIRCLE",
    "facts": "CircumCircle(v) = C"
},
{
    "assertion": "Intersection ( Locus ( POINT: q ), CURVE: z ) equals RightVertex ( CONICSECTION: O )",
    "id": 3587,
    "declarations": "q: POINT; z: CURVE; O: CONICSECTION",
    "facts": "Intersection(Locus(q), z) = RightVertex(O)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: T ) equals AXIS: xAxis",
    "id": 3588,
    "declarations": "T: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(T) = xAxis"
},
{
    "assertion": "LowerVertex ( CONICSECTION: d ) equals Center ( CONICSECTION: h )",
    "id": 3589,
    "declarations": "d: CONICSECTION; h: CONICSECTION",
    "facts": "LowerVertex(d) = Center(h)"
},
{
    "assertion": "Projection ( POINT: O, LINE: P ) equals POINT: G",
    "id": 3590,
    "declarations": "O: POINT; P: LINE; G: POINT",
    "facts": "Projection(O, P) = G"
},
{
    "assertion": "RightFocus ( CONICSECTION: e ) equals Orthocenter ( TRIANGLE: O )",
    "id": 3591,
    "declarations": "e: CONICSECTION; O: TRIANGLE",
    "facts": "RightFocus(e) = Orthocenter(O)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: s ) equals POINT: r",
    "id": 3592,
    "declarations": "s: CONICSECTION; r: POINT",
    "facts": "LeftVertex(s) = r"
},
{
    "assertion": "Area ( CONICSECTION: i ) equals Radius ( CIRCLE: F )",
    "id": 3593,
    "declarations": "i: CONICSECTION; F: CIRCLE",
    "facts": "Area(i) = Radius(F)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: i ) equals LINESEGMENT: A",
    "id": 3594,
    "declarations": "i: ELLIPSE; A: LINESEGMENT",
    "facts": "MinorAxis(i) = A"
},
{
    "assertion": "Circumcenter ( TRIANGLE: F ) equals POINT: s",
    "id": 3595,
    "declarations": "F: TRIANGLE; s: POINT",
    "facts": "Circumcenter(F) = s"
},
{
    "assertion": "Incenter ( TRIANGLE: b ) equals POINT: M",
    "id": 3596,
    "declarations": "b: TRIANGLE; M: POINT",
    "facts": "Incenter(b) = M"
},
{
    "assertion": "Incenter ( TRIANGLE: b ) equals POINT: M",
    "id": 3596,
    "declarations": "b: TRIANGLE; M: POINT",
    "facts": "Incenter(b) = M"
},
{
    "assertion": "LeftVertex ( CONICSECTION: z ) equals LowerVertex ( CONICSECTION: D )",
    "id": 3598,
    "declarations": "z: CONICSECTION; D: CONICSECTION",
    "facts": "LeftVertex(z) = LowerVertex(D)"
},
{
    "assertion": "Diameter ( CIRCLE: K ) equals NUMBER: -15",
    "id": 3599,
    "declarations": "K: CIRCLE; -15: NUMBER",
    "facts": "Diameter(K) = -15"
},
{
    "assertion": "LowerFocus ( CONICSECTION: K ) equals MidPoint ( LINESEGMENT: H )",
    "id": 3600,
    "declarations": "K: CONICSECTION; H: LINESEGMENT",
    "facts": "LowerFocus(K) = MidPoint(H)"
},
{
    "assertion": "Center ( CONICSECTION: R ) equals POINT: M",
    "id": 3601,
    "declarations": "R: CONICSECTION; M: POINT",
    "facts": "Center(R) = M"
},
{
    "assertion": "VectorOf ( UpperVertex ( CONICSECTION: A ), LeftFocus ( CONICSECTION: h ) ) equals VECTOR: x",
    "id": 3602,
    "declarations": "A: CONICSECTION; h: CONICSECTION; x: VECTOR",
    "facts": "VectorOf(UpperVertex(A), LeftFocus(h)) = x"
},
{
    "assertion": "Expression ( CURVE: B ) equals EXPRESSION: y*space=*spacee^x",
    "id": 3603,
    "declarations": "B: CURVE; y*space=*spacee^x: EXPRESSION",
    "facts": "Expression(B) = y*space=*spacee^x"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: a ) equals AXIS: xAxis",
    "id": 3604,
    "declarations": "a: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(a) = xAxis"
},
{
    "assertion": "LeftVertex ( CONICSECTION: L ) equals POINT: b",
    "id": 3605,
    "declarations": "L: CONICSECTION; b: POINT",
    "facts": "LeftVertex(L) = b"
},
{
    "assertion": "YCoordinate ( LowerFocus ( CONICSECTION: Q ) ) equals Diameter ( CIRCLE: a )",
    "id": 3606,
    "declarations": "Q: CONICSECTION; a: CIRCLE",
    "facts": "YCoordinate(LowerFocus(Q)) = Diameter(a)"
},
{
    "assertion": "PointOnCurve ( Circumcenter ( TRIANGLE: q ), CURVE: u ) equals BOOL: True",
    "id": 3607,
    "declarations": "q: TRIANGLE; u: CURVE; True: BOOL",
    "facts": "PointOnCurve(Circumcenter(q), u) = True"
},
{
    "assertion": "LineOf ( POINT: K, LeftVertex ( CONICSECTION: N ) ) equals RightDirectrix ( CONICSECTION: o )",
    "id": 3608,
    "declarations": "K: POINT; N: CONICSECTION; o: CONICSECTION",
    "facts": "LineOf(K, LeftVertex(N)) = RightDirectrix(o)"
},
{
    "assertion": "IsParallel ( PerpendicularBisector ( LINESEGMENT: y ), LINE: Y ) equals BOOL: False",
    "id": 3609,
    "declarations": "y: LINESEGMENT; Y: LINE; False: BOOL",
    "facts": "IsParallel(PerpendicularBisector(y), Y) = False"
},
{
    "assertion": "Expression ( CURVE: Q ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 3610,
    "declarations": "Q: CURVE; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(Q) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "Center ( CONICSECTION: m ) equals POINT: j",
    "id": 3611,
    "declarations": "m: CONICSECTION; j: POINT",
    "facts": "Center(m) = j"
},
{
    "assertion": "InterReciprocal ( Abs ( LINESEGMENT: b ) ) equals NUMBER: 38",
    "id": 3612,
    "declarations": "b: LINESEGMENT; 38: NUMBER",
    "facts": "InterReciprocal(Abs(b)) = 38"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: d, CircumCircle ( TRIANGLE: T ) ) equals BOOL: True",
    "id": 3613,
    "declarations": "d: LINESEGMENT; T: TRIANGLE; True: BOOL",
    "facts": "IsDiameter(d, CircumCircle(T)) = True"
},
{
    "assertion": "LeftPart ( HYPERBOLA: t ) equals CURVE: X",
    "id": 3614,
    "declarations": "t: HYPERBOLA; X: CURVE",
    "facts": "LeftPart(t) = X"
},
{
    "assertion": "And ( XCoordinate ( POINT: N ) equals FocalLength ( CONICSECTION: g ), IsPerpendicular ( LINE: Y, LINE: N ) equals BOOL: False ) equals BOOL: False",
    "id": 3615,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Incenter ( TRIANGLE: G ) equals POINT: d",
    "id": 3616,
    "declarations": "G: TRIANGLE; d: POINT",
    "facts": "Incenter(G) = d"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: h, TRIANGLE: d ) equals BOOL: False",
    "id": 3617,
    "declarations": "h: CIRCLE; d: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(h, d) = False"
},
{
    "assertion": "Diameter ( CIRCLE: r ) equals Area ( CONICSECTION: h )",
    "id": 3618,
    "declarations": "r: CIRCLE; h: CONICSECTION",
    "facts": "Diameter(r) = Area(h)"
},
{
    "assertion": "Vertex ( CONICSECTION: h ) equals LeftVertex ( CONICSECTION: K )",
    "id": 3619,
    "declarations": "h: CONICSECTION; K: CONICSECTION",
    "facts": "Vertex(h) = LeftVertex(K)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: a ) equals MidPoint ( LINESEGMENT: l )",
    "id": 3620,
    "declarations": "a: CONICSECTION; l: LINESEGMENT",
    "facts": "UpperFocus(a) = MidPoint(l)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: Z ) equals POINT: X",
    "id": 3621,
    "declarations": "Z: CONICSECTION; X: POINT",
    "facts": "LowerVertex(Z) = X"
},
{
    "assertion": "Negation ( LocusEquation ( UpperVertex ( CONICSECTION: O ) ) equals EXPRESSION: x*space+*spacey^2*space=*space5 ) equals BOOL: True",
    "id": 3622,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Inclination ( LINE: x ) equals Quadrant ( Orthocenter ( TRIANGLE: u ) )",
    "id": 3623,
    "declarations": "x: LINE; u: TRIANGLE",
    "facts": "Inclination(x) = Quadrant(Orthocenter(u))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: p ) equals MinorAxis ( ELLIPSE: Y )",
    "id": 3624,
    "declarations": "p: ELLIPSE; Y: ELLIPSE",
    "facts": "MinorAxis(p) = MinorAxis(Y)"
},
{
    "assertion": "TangentPoint ( LINE: g, CIRCLE: u ) equals FootPoint ( LINE: T, LINE: c )",
    "id": 3625,
    "declarations": "g: LINE; u: CIRCLE; T: LINE; c: LINE",
    "facts": "TangentPoint(g, u) = FootPoint(T, c)"
},
{
    "assertion": "Vertex ( CONICSECTION: m ) equals Projection ( POINT: c, LINE: n )",
    "id": 3626,
    "declarations": "m: CONICSECTION; c: POINT; n: LINE",
    "facts": "Vertex(m) = Projection(c, n)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: S ) equals Circumcenter ( TRIANGLE: S )",
    "id": 3627,
    "declarations": "S: CONICSECTION; S: TRIANGLE",
    "facts": "LowerFocus(S) = Circumcenter(S)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: i ) equals MajorAxis ( ELLIPSE: K )",
    "id": 3628,
    "declarations": "i: ELLIPSE; K: ELLIPSE",
    "facts": "MajorAxis(i) = MajorAxis(K)"
},
{
    "assertion": "IsPerpendicular ( RightDirectrix ( CONICSECTION: Y ), LINE: a ) equals BOOL: False",
    "id": 3629,
    "declarations": "Y: CONICSECTION; a: LINE; False: BOOL",
    "facts": "IsPerpendicular(RightDirectrix(Y), a) = False"
},
{
    "assertion": "Between ( POINT: v, POINT: H, RightVertex ( CONICSECTION: V ) ) equals BOOL: False",
    "id": 3631,
    "declarations": "v: POINT; H: POINT; V: CONICSECTION; False: BOOL",
    "facts": "Between(v, H, RightVertex(V)) = False"
},
{
    "assertion": "Projection ( Circumcenter ( TRIANGLE: X ), OverlappingLine ( LINESEGMENT: g ) ) equals POINT: r",
    "id": 3632,
    "declarations": "X: TRIANGLE; g: LINESEGMENT; r: POINT",
    "facts": "Projection(Circumcenter(X), OverlappingLine(g)) = r"
},
{
    "assertion": "LocusEquation ( LowerFocus ( CONICSECTION: v ) ) equals EXPRESSION: y*space=*spacee^x",
    "id": 3633,
    "declarations": "v: CONICSECTION; y*space=*spacee^x: EXPRESSION",
    "facts": "LocusEquation(LowerFocus(v)) = y*space=*spacee^x"
},
{
    "assertion": "RightFocus ( CONICSECTION: m ) equals POINT: A",
    "id": 3634,
    "declarations": "m: CONICSECTION; A: POINT",
    "facts": "RightFocus(m) = A"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: w ) equals AXIS: xAxis",
    "id": 3635,
    "declarations": "w: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(w) = xAxis"
},
{
    "assertion": "Orthocenter ( TRIANGLE: W ) equals POINT: r",
    "id": 3636,
    "declarations": "W: TRIANGLE; r: POINT",
    "facts": "Orthocenter(W) = r"
},
{
    "assertion": "Slope ( LINE: E ) equals Eccentricity ( CONICSECTION: F )",
    "id": 3637,
    "declarations": "E: LINE; F: CONICSECTION",
    "facts": "Slope(E) = Eccentricity(F)"
},
{
    "assertion": "Slope ( LINE: I ) equals YCoordinate ( LowerFocus ( CONICSECTION: A ) )",
    "id": 3638,
    "declarations": "I: LINE; A: CONICSECTION",
    "facts": "Slope(I) = YCoordinate(LowerFocus(A))"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: b ) ) equals Abs ( LINESEGMENT: q )",
    "id": 3639,
    "declarations": "b: ELLIPSE; q: LINESEGMENT",
    "facts": "Abs(RealAxis(b)) = Abs(q)"
},
{
    "assertion": "Abs ( LINESEGMENT: N ) equals NUMBER: -83",
    "id": 3640,
    "declarations": "N: LINESEGMENT; -83: NUMBER",
    "facts": "Abs(N) = -83"
},
{
    "assertion": "MidPoint ( RealAxis ( ELLIPSE: W ) ) equals LowerVertex ( CONICSECTION: M )",
    "id": 3641,
    "declarations": "W: ELLIPSE; M: CONICSECTION",
    "facts": "MidPoint(RealAxis(W)) = LowerVertex(M)"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: i ) ) equals NUMBER: 38",
    "id": 3642,
    "declarations": "i: TRIANGLE; 38: NUMBER",
    "facts": "Radius(CircumCircle(i)) = 38"
},
{
    "assertion": "RightFocus ( CONICSECTION: r ) equals FootPoint ( LINE: r, LINE: p )",
    "id": 3643,
    "declarations": "r: CONICSECTION; r: LINE; p: LINE",
    "facts": "RightFocus(r) = FootPoint(r, p)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: E ) equals UpperVertex ( CONICSECTION: y )",
    "id": 3644,
    "declarations": "E: CONICSECTION; y: CONICSECTION",
    "facts": "UpperVertex(E) = UpperVertex(y)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: t ) equals LINESEGMENT: l",
    "id": 3645,
    "declarations": "t: ELLIPSE; l: LINESEGMENT",
    "facts": "ImaginaryAxis(t) = l"
},
{
    "assertion": "TangentOfPoint ( Orthocenter ( TRIANGLE: R ), CURVE: a ) equals LINE: B",
    "id": 3646,
    "declarations": "R: TRIANGLE; a: CURVE; B: LINE",
    "facts": "TangentOfPoint(Orthocenter(R), a) = B"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: N ) equals AXIS: yAxis",
    "id": 3647,
    "declarations": "N: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(N) = yAxis"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: I, TRIANGLE: T ) equals BOOL: False",
    "id": 3648,
    "declarations": "I: CIRCLE; T: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(I, T) = False"
},
{
    "assertion": "TriangleOf ( Center ( CONICSECTION: p ), RightFocus ( CONICSECTION: I ), Circumcenter ( TRIANGLE: D ) ) equals TRIANGLE: r",
    "id": 3649,
    "declarations": "p: CONICSECTION; I: CONICSECTION; D: TRIANGLE; r: TRIANGLE",
    "facts": "TriangleOf(Center(p), RightFocus(I), Circumcenter(D)) = r"
},
{
    "assertion": "RealAxis ( ELLIPSE: X ) equals LINESEGMENT: M",
    "id": 3650,
    "declarations": "X: ELLIPSE; M: LINESEGMENT",
    "facts": "RealAxis(X) = M"
},
{
    "assertion": "Diameter ( CIRCLE: R ) equals NUMBER: 1",
    "id": 3651,
    "declarations": "R: CIRCLE; 1: NUMBER",
    "facts": "Diameter(R) = 1"
},
{
    "assertion": "Inclination ( TangentOfPoint ( UpperFocus ( CONICSECTION: b ), CURVE: h ) ) equals Diameter ( CIRCLE: b )",
    "id": 3652,
    "declarations": "b: CONICSECTION; h: CURVE; b: CIRCLE",
    "facts": "Inclination(TangentOfPoint(UpperFocus(b), h)) = Diameter(b)"
},
{
    "assertion": "Vertex ( CONICSECTION: U ) equals POINT: q",
    "id": 3653,
    "declarations": "U: CONICSECTION; q: POINT",
    "facts": "Vertex(U) = q"
},
{
    "assertion": "Min ( FocalLength ( CONICSECTION: e ) ) equals NUMBER: -24",
    "id": 3654,
    "declarations": "e: CONICSECTION; -24: NUMBER",
    "facts": "Min(FocalLength(e)) = -24"
},
{
    "assertion": "RealAxis ( ELLIPSE: k ) equals LINESEGMENT: g",
    "id": 3655,
    "declarations": "k: ELLIPSE; g: LINESEGMENT",
    "facts": "RealAxis(k) = g"
},
{
    "assertion": "Length ( LINESEGMENT: E ) equals NUMBER: -17",
    "id": 3656,
    "declarations": "E: LINESEGMENT; -17: NUMBER",
    "facts": "Length(E) = -17"
},
{
    "assertion": "TangentOnPoint ( POINT: h, CURVE: u ) equals LINE: r",
    "id": 3657,
    "declarations": "h: POINT; u: CURVE; r: LINE",
    "facts": "TangentOnPoint(h, u) = r"
},
{
    "assertion": "TangentOfPoint ( UpperFocus ( CONICSECTION: U ), LeftPart ( HYPERBOLA: e ) ) equals TangentOfPoint ( UpperFocus ( CONICSECTION: e ), Locus ( POINT: l ) )",
    "id": 3658,
    "declarations": "U: CONICSECTION; e: HYPERBOLA; e: CONICSECTION; l: POINT",
    "facts": "TangentOfPoint(UpperFocus(U), LeftPart(e)) = TangentOfPoint(UpperFocus(e), Locus(l))"
},
{
    "assertion": "LineOf ( LeftFocus ( CONICSECTION: W ), LowerVertex ( CONICSECTION: n ) ) equals LINE: m",
    "id": 3659,
    "declarations": "W: CONICSECTION; n: CONICSECTION; m: LINE",
    "facts": "LineOf(LeftFocus(W), LowerVertex(n)) = m"
},
{
    "assertion": "RightPart ( HYPERBOLA: W ) equals RightPart ( HYPERBOLA: K )",
    "id": 3660,
    "declarations": "W: HYPERBOLA; K: HYPERBOLA",
    "facts": "RightPart(W) = RightPart(K)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: P ) equals LINE: F",
    "id": 3661,
    "declarations": "P: HYPERBOLA; F: LINE",
    "facts": "Asymptote(P) = F"
},
{
    "assertion": "YCoordinate ( Center ( CONICSECTION: u ) ) equals Length ( LINESEGMENT: U )",
    "id": 3662,
    "declarations": "u: CONICSECTION; U: LINESEGMENT",
    "facts": "YCoordinate(Center(u)) = Length(U)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: G ) equals LINESEGMENT: U",
    "id": 3663,
    "declarations": "G: ELLIPSE; U: LINESEGMENT",
    "facts": "MinorAxis(G) = U"
},
{
    "assertion": "Focus ( CONICSECTION: k ) equals POINT: w",
    "id": 3664,
    "declarations": "k: CONICSECTION; w: POINT",
    "facts": "Focus(k) = w"
},
{
    "assertion": "Focus ( CONICSECTION: R ) equals POINT: b",
    "id": 3665,
    "declarations": "R: CONICSECTION; b: POINT",
    "facts": "Focus(R) = b"
},
{
    "assertion": "Directrix ( CONICSECTION: s ) equals LineOf ( RightVertex ( CONICSECTION: R ), Center ( CONICSECTION: M ) )",
    "id": 3666,
    "declarations": "s: CONICSECTION; R: CONICSECTION; M: CONICSECTION",
    "facts": "Directrix(s) = LineOf(RightVertex(R), Center(M))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: j ) equals RealAxis ( ELLIPSE: U )",
    "id": 3667,
    "declarations": "j: ELLIPSE; U: ELLIPSE",
    "facts": "MajorAxis(j) = RealAxis(U)"
},
{
    "assertion": "Min ( Quadrant ( FootPoint ( LINE: p, RightDirectrix ( CONICSECTION: k ) ) ) ) equals Min ( HalfFocalLength ( CONICSECTION: w ) )",
    "id": 3668,
    "declarations": "p: LINE; k: CONICSECTION; w: CONICSECTION",
    "facts": "Min(Quadrant(FootPoint(p, RightDirectrix(k)))) = Min(HalfFocalLength(w))"
},
{
    "assertion": "IsParallel ( LINE: c, LINE: W ) equals BOOL: True",
    "id": 3669,
    "declarations": "c: LINE; W: LINE; True: BOOL",
    "facts": "IsParallel(c, W) = True"
},
{
    "assertion": "Area ( CONICSECTION: J ) equals NUMBER: -10",
    "id": 3670,
    "declarations": "J: CONICSECTION; -10: NUMBER",
    "facts": "Area(J) = -10"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: u, TRIANGLE: h ) equals BOOL: True",
    "id": 3671,
    "declarations": "u: CIRCLE; h: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(u, h) = True"
},
{
    "assertion": "Focus ( CONICSECTION: g ) equals POINT: d",
    "id": 3672,
    "declarations": "g: CONICSECTION; d: POINT",
    "facts": "Focus(g) = d"
},
{
    "assertion": "And ( Eccentricity ( CONICSECTION: U ) equals NUMBER: 67, Intersection ( CURVE: p, CURVE: V ) equals Circumcenter ( TRIANGLE: k ) ) equals BOOL: False",
    "id": 3673,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Locus ( MidPoint ( LineSegmentOf ( MidPoint ( LINESEGMENT: S ), LeftFocus ( CONICSECTION: j ) ) ) ) equals CURVE: I",
    "id": 3674,
    "declarations": "S: LINESEGMENT; j: CONICSECTION; I: CURVE",
    "facts": "Locus(MidPoint(LineSegmentOf(MidPoint(S), LeftFocus(j)))) = I"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: u ) equals LeftDirectrix ( CONICSECTION: E )",
    "id": 3675,
    "declarations": "u: LINESEGMENT; E: CONICSECTION",
    "facts": "OverlappingLine(u) = LeftDirectrix(E)"
},
{
    "assertion": "RealAxis ( ELLIPSE: K ) equals LINESEGMENT: m",
    "id": 3676,
    "declarations": "K: ELLIPSE; m: LINESEGMENT",
    "facts": "RealAxis(K) = m"
},
{
    "assertion": "Max ( NUMBER: -48 ) equals Radius ( CIRCLE: u )",
    "id": 3677,
    "declarations": "-48: NUMBER; u: CIRCLE",
    "facts": "Max(-48) = Radius(u)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: j ) equals LINE: p",
    "id": 3678,
    "declarations": "j: LINESEGMENT; p: LINE",
    "facts": "OverlappingLine(j) = p"
},
{
    "assertion": "Endpoint ( InterceptChord ( PerpendicularBisector ( LINESEGMENT: H ), CONICSECTION: K ) ) equals MidPoint ( LINESEGMENT: u )",
    "id": 3679,
    "declarations": "H: LINESEGMENT; K: CONICSECTION; u: LINESEGMENT",
    "facts": "Endpoint(InterceptChord(PerpendicularBisector(H), K)) = MidPoint(u)"
},
{
    "assertion": "sqrt ( FocalLength ( CONICSECTION: p ) ) equals Perimeter ( CONICSECTION: m )",
    "id": 3680,
    "declarations": "p: CONICSECTION; m: CONICSECTION",
    "facts": "sqrt(FocalLength(p)) = Perimeter(m)"
},
{
    "assertion": "VectorOf ( POINT: U, Orthocenter ( TRIANGLE: B ) ) equals VECTOR: D",
    "id": 3681,
    "declarations": "U: POINT; B: TRIANGLE; D: VECTOR",
    "facts": "VectorOf(U, Orthocenter(B)) = D"
},
{
    "assertion": "LeftPart ( HYPERBOLA: b ) equals CURVE: n",
    "id": 3682,
    "declarations": "b: HYPERBOLA; n: CURVE",
    "facts": "LeftPart(b) = n"
},
{
    "assertion": "NumIntersection ( CURVE: z, CURVE: n ) equals HalfFocalLength ( CONICSECTION: N )",
    "id": 3683,
    "declarations": "z: CURVE; n: CURVE; N: CONICSECTION",
    "facts": "NumIntersection(z, n) = HalfFocalLength(N)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: G ) equals Circumcenter ( TRIANGLE: j )",
    "id": 3684,
    "declarations": "G: TRIANGLE; j: TRIANGLE",
    "facts": "Orthocenter(G) = Circumcenter(j)"
},
{
    "assertion": "lg ( sqrt ( InterReciprocal ( NUMBER: -70 ) ) ) equals NUMBER: 34",
    "id": 3685,
    "declarations": "-70: NUMBER; 34: NUMBER",
    "facts": "lg(sqrt(InterReciprocal(-70))) = 34"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: d ) equals RightDirectrix ( CONICSECTION: X )",
    "id": 3686,
    "declarations": "d: CONICSECTION; X: CONICSECTION",
    "facts": "LeftDirectrix(d) = RightDirectrix(X)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: j ) equals NUMBER: -8",
    "id": 3687,
    "declarations": "j: CONICSECTION; -8: NUMBER",
    "facts": "HalfFocalLength(j) = -8"
},
{
    "assertion": "ApplyUnit ( Abs ( LINESEGMENT: K ), DEGREESTR: degree )",
    "id": 3688,
    "declarations": "K: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(Abs(K), degree) = dummy_operator()"
},
{
    "assertion": "Asymptote ( HYPERBOLA: l ) equals LINE: F",
    "id": 3689,
    "declarations": "l: HYPERBOLA; F: LINE",
    "facts": "Asymptote(l) = F"
},
{
    "assertion": "MinorAxis ( ELLIPSE: i ) equals LINESEGMENT: q",
    "id": 3690,
    "declarations": "i: ELLIPSE; q: LINESEGMENT",
    "facts": "MinorAxis(i) = q"
},
{
    "assertion": "IsDiameter ( MajorAxis ( ELLIPSE: I ), CIRCLE: a ) equals BOOL: False",
    "id": 3691,
    "declarations": "I: ELLIPSE; a: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MajorAxis(I), a) = False"
},
{
    "assertion": "CircumCircle ( TRIANGLE: g ) equals CIRCLE: d",
    "id": 3692,
    "declarations": "g: TRIANGLE; d: CIRCLE",
    "facts": "CircumCircle(g) = d"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: U ) equals LINE: S",
    "id": 3693,
    "declarations": "U: LINESEGMENT; S: LINE",
    "facts": "PerpendicularBisector(U) = S"
},
{
    "assertion": "LineOf ( POINT: t, POINT: p ) equals LineOf ( POINT: a, POINT: f )",
    "id": 3694,
    "declarations": "t: POINT; p: POINT; a: POINT; f: POINT",
    "facts": "LineOf(t, p) = LineOf(a, f)"
},
{
    "assertion": "IsChordOf ( MajorAxis ( ELLIPSE: n ), CONICSECTION: g ) equals BOOL: True",
    "id": 3695,
    "declarations": "n: ELLIPSE; g: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(MajorAxis(n), g) = True"
},
{
    "assertion": "UpperFocus ( CONICSECTION: y ) equals POINT: g",
    "id": 3696,
    "declarations": "y: CONICSECTION; g: POINT",
    "facts": "UpperFocus(y) = g"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: G ) equals OverlappingLine ( LINESEGMENT: S )",
    "id": 3697,
    "declarations": "G: CONICSECTION; S: LINESEGMENT",
    "facts": "LeftDirectrix(G) = OverlappingLine(S)"
},
{
    "assertion": "Negation ( ImaginaryAxis ( ELLIPSE: s ) equals LINESEGMENT: w ) equals BOOL: True",
    "id": 3698,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Inclination ( LINE: q ) equals Length ( MajorAxis ( ELLIPSE: Y ) )",
    "id": 3699,
    "declarations": "q: LINE; Y: ELLIPSE",
    "facts": "Inclination(q) = Length(MajorAxis(Y))"
},
{
    "assertion": "Perimeter ( CONICSECTION: i ) equals Length ( RealAxis ( ELLIPSE: f ) )",
    "id": 3700,
    "declarations": "i: CONICSECTION; f: ELLIPSE",
    "facts": "Perimeter(i) = Length(RealAxis(f))"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: a ) ) equals NUMBER: 75",
    "id": 3701,
    "declarations": "a: CONICSECTION; 75: NUMBER",
    "facts": "Quadrant(LeftVertex(a)) = 75"
},
{
    "assertion": "Negation ( LeftVertex ( CONICSECTION: y ) equals POINT: F ) equals BOOL: True",
    "id": 3702,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: W ) equals XCoordinate ( Incenter ( TRIANGLE: x ) )",
    "id": 3703,
    "declarations": "W: CONICSECTION; x: TRIANGLE",
    "facts": "HalfFocalLength(W) = XCoordinate(Incenter(x))"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: e ) equals LeftDirectrix ( CONICSECTION: b )",
    "id": 3704,
    "declarations": "e: LINESEGMENT; b: CONICSECTION",
    "facts": "OverlappingLine(e) = LeftDirectrix(b)"
},
{
    "assertion": "Min ( NUMBER: 60 ) equals Inclination ( LINE: j )",
    "id": 3705,
    "declarations": "60: NUMBER; j: LINE",
    "facts": "Min(60) = Inclination(j)"
},
{
    "assertion": "InterReciprocal ( Diameter ( CIRCLE: E ) ) equals Eccentricity ( CONICSECTION: t )",
    "id": 3706,
    "declarations": "E: CIRCLE; t: CONICSECTION",
    "facts": "InterReciprocal(Diameter(E)) = Eccentricity(t)"
},
{
    "assertion": "Intersection ( CURVE: N, CURVE: r ) equals POINT: d",
    "id": 3707,
    "declarations": "N: CURVE; r: CURVE; d: POINT",
    "facts": "Intersection(N, r) = d"
},
{
    "assertion": "Asymptote ( HYPERBOLA: O ) equals LeftDirectrix ( CONICSECTION: v )",
    "id": 3708,
    "declarations": "O: HYPERBOLA; v: CONICSECTION",
    "facts": "Asymptote(O) = LeftDirectrix(v)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: P ) equals LINE: u",
    "id": 3709,
    "declarations": "P: CONICSECTION; u: LINE",
    "facts": "LeftDirectrix(P) = u"
},
{
    "assertion": "Area ( CONICSECTION: K ) equals Radius ( CIRCLE: j )",
    "id": 3710,
    "declarations": "K: CONICSECTION; j: CIRCLE",
    "facts": "Area(K) = Radius(j)"
},
{
    "assertion": "Slope ( LINE: K ) equals NUMBER: 86",
    "id": 3711,
    "declarations": "K: LINE; 86: NUMBER",
    "facts": "Slope(K) = 86"
},
{
    "assertion": "Distance ( Center ( CONICSECTION: H ), RightFocus ( CONICSECTION: o ) ) equals NUMBER: -44",
    "id": 3712,
    "declarations": "H: CONICSECTION; o: CONICSECTION; -44: NUMBER",
    "facts": "Distance(Center(H), RightFocus(o)) = -44"
},
{
    "assertion": "IsPerpendicular ( RightDirectrix ( CONICSECTION: p ), LINE: n ) equals BOOL: True",
    "id": 3713,
    "declarations": "p: CONICSECTION; n: LINE; True: BOOL",
    "facts": "IsPerpendicular(RightDirectrix(p), n) = True"
},
{
    "assertion": "IsParallel ( PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: Z ) ), PerpendicularBisector ( LINESEGMENT: F ) ) equals BOOL: False",
    "id": 3714,
    "declarations": "Z: ELLIPSE; F: LINESEGMENT; False: BOOL",
    "facts": "IsParallel(PerpendicularBisector(ImaginaryAxis(Z)), PerpendicularBisector(F)) = False"
},
{
    "assertion": "IsInTangent ( CIRCLE: K, CIRCLE: N ) equals BOOL: False",
    "id": 3715,
    "declarations": "K: CIRCLE; N: CIRCLE; False: BOOL",
    "facts": "IsInTangent(K, N) = False"
},
{
    "assertion": "LineOf ( RightVertex ( CONICSECTION: i ), POINT: o ) equals RightDirectrix ( CONICSECTION: v )",
    "id": 3716,
    "declarations": "i: CONICSECTION; o: POINT; v: CONICSECTION",
    "facts": "LineOf(RightVertex(i), o) = RightDirectrix(v)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: c ) equals LINE: v",
    "id": 3717,
    "declarations": "c: LINESEGMENT; v: LINE",
    "facts": "PerpendicularBisector(c) = v"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: h, CIRCLE: X ) equals BOOL: False",
    "id": 3718,
    "declarations": "h: LINESEGMENT; X: CIRCLE; False: BOOL",
    "facts": "IsDiameter(h, X) = False"
},
{
    "assertion": "RealAxis ( ELLIPSE: x ) equals LINESEGMENT: h",
    "id": 3719,
    "declarations": "x: ELLIPSE; h: LINESEGMENT",
    "facts": "RealAxis(x) = h"
},
{
    "assertion": "Length ( LINESEGMENT: g ) equals NUMBER: 78",
    "id": 3720,
    "declarations": "g: LINESEGMENT; 78: NUMBER",
    "facts": "Length(g) = 78"
},
{
    "assertion": "lg ( NUMBER: 12 ) equals Quadrant ( POINT: c )",
    "id": 3721,
    "declarations": "12: NUMBER; c: POINT",
    "facts": "lg(12) = Quadrant(c)"
},
{
    "assertion": "Slope ( LeftDirectrix ( CONICSECTION: q ) ) equals NUMBER: -44",
    "id": 3722,
    "declarations": "q: CONICSECTION; -44: NUMBER",
    "facts": "Slope(LeftDirectrix(q)) = -44"
},
{
    "assertion": "Perimeter ( CONICSECTION: S ) equals NUMBER: 71",
    "id": 3723,
    "declarations": "S: CONICSECTION; 71: NUMBER",
    "facts": "Perimeter(S) = 71"
},
{
    "assertion": "Expression ( CURVE: h ) equals Expression ( RightPart ( HYPERBOLA: g ) )",
    "id": 3724,
    "declarations": "h: CURVE; g: HYPERBOLA",
    "facts": "Expression(h) = Expression(RightPart(g))"
},
{
    "assertion": "IsTangent ( LINE: a, CONICSECTION: S ) equals BOOL: True",
    "id": 3725,
    "declarations": "a: LINE; S: CONICSECTION; True: BOOL",
    "facts": "IsTangent(a, S) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: p ) equals LINE: l",
    "id": 3726,
    "declarations": "p: CONICSECTION; l: LINE",
    "facts": "Directrix(p) = l"
},
{
    "assertion": "VectorOf ( LowerFocus ( CONICSECTION: q ), FootPoint ( LINE: r, PerpendicularBisector ( LINESEGMENT: J ) ) ) equals VECTOR: n",
    "id": 3727,
    "declarations": "q: CONICSECTION; r: LINE; J: LINESEGMENT; n: VECTOR",
    "facts": "VectorOf(LowerFocus(q), FootPoint(r, PerpendicularBisector(J))) = n"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: n ) equals LINESEGMENT: u",
    "id": 3728,
    "declarations": "n: ELLIPSE; u: LINESEGMENT",
    "facts": "ImaginaryAxis(n) = u"
},
{
    "assertion": "Orthocenter ( TRIANGLE: G ) equals POINT: W",
    "id": 3730,
    "declarations": "G: TRIANGLE; W: POINT",
    "facts": "Orthocenter(G) = W"
},
{
    "assertion": "LeftFocus ( CONICSECTION: l ) equals POINT: a",
    "id": 3731,
    "declarations": "l: CONICSECTION; a: POINT",
    "facts": "LeftFocus(l) = a"
},
{
    "assertion": "RightVertex ( CONICSECTION: l ) equals LowerFocus ( CONICSECTION: N )",
    "id": 3732,
    "declarations": "l: CONICSECTION; N: CONICSECTION",
    "facts": "RightVertex(l) = LowerFocus(N)"
},
{
    "assertion": "Quadrant ( Orthocenter ( TRIANGLE: o ) ) equals sqrt ( Abs ( LINESEGMENT: Z ) )",
    "id": 3733,
    "declarations": "o: TRIANGLE; Z: LINESEGMENT",
    "facts": "Quadrant(Orthocenter(o)) = sqrt(Abs(Z))"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: v, CONICSECTION: H ) equals BOOL: True",
    "id": 3734,
    "declarations": "v: LINESEGMENT; H: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(v, H) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: m ) equals POINT: q",
    "id": 3735,
    "declarations": "m: CONICSECTION; q: POINT",
    "facts": "LeftFocus(m) = q"
},
{
    "assertion": "VectorOf ( POINT: t, POINT: X ) equals VECTOR: F",
    "id": 3736,
    "declarations": "t: POINT; X: POINT; F: VECTOR",
    "facts": "VectorOf(t, X) = F"
},
{
    "assertion": "FocalLength ( CONICSECTION: e ) equals Eccentricity ( CONICSECTION: O )",
    "id": 3737,
    "declarations": "e: CONICSECTION; O: CONICSECTION",
    "facts": "FocalLength(e) = Eccentricity(O)"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: i ) ) equals lg ( Inclination ( PerpendicularBisector ( LINESEGMENT: M ) ) )",
    "id": 3738,
    "declarations": "i: CONICSECTION; M: LINESEGMENT",
    "facts": "Inclination(LeftDirectrix(i)) = lg(Inclination(PerpendicularBisector(M)))"
},
{
    "assertion": "Quadrant ( POINT: L ) equals Slope ( LineOf ( POINT: k, POINT: M ) )",
    "id": 3739,
    "declarations": "L: POINT; k: POINT; M: POINT",
    "facts": "Quadrant(L) = Slope(LineOf(k, M))"
},
{
    "assertion": "Intercept ( LINE: h, AXIS: yAxis ) equals NUMBER: 44",
    "id": 3740,
    "declarations": "h: LINE; yAxis: AXIS; 44: NUMBER",
    "facts": "Intercept(h, yAxis) = 44"
},
{
    "assertion": "MajorAxis ( ELLIPSE: o ) equals LINESEGMENT: u",
    "id": 3741,
    "declarations": "o: ELLIPSE; u: LINESEGMENT",
    "facts": "MajorAxis(o) = u"
},
{
    "assertion": "Distance ( MidPoint ( LINESEGMENT: j ), POINT: k ) equals NUMBER: -74",
    "id": 3742,
    "declarations": "j: LINESEGMENT; k: POINT; -74: NUMBER",
    "facts": "Distance(MidPoint(j), k) = -74"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: i ) equals PerpendicularBisector ( LINESEGMENT: Z )",
    "id": 3743,
    "declarations": "i: LINESEGMENT; Z: LINESEGMENT",
    "facts": "PerpendicularBisector(i) = PerpendicularBisector(Z)"
},
{
    "assertion": "Inclination ( LINE: G ) equals NUMBER: 41",
    "id": 3744,
    "declarations": "G: LINE; 41: NUMBER",
    "facts": "Inclination(G) = 41"
},
{
    "assertion": "Min ( HalfFocalLength ( CONICSECTION: l ) ) equals YCoordinate ( POINT: Z )",
    "id": 3745,
    "declarations": "l: CONICSECTION; Z: POINT",
    "facts": "Min(HalfFocalLength(l)) = YCoordinate(Z)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: Q ) equals POINT: f",
    "id": 3746,
    "declarations": "Q: TRIANGLE; f: POINT",
    "facts": "Circumcenter(Q) = f"
},
{
    "assertion": "MidPoint ( LINESEGMENT: A ) equals POINT: r",
    "id": 3747,
    "declarations": "A: LINESEGMENT; r: POINT",
    "facts": "MidPoint(A) = r"
},
{
    "assertion": "Area ( CONICSECTION: W ) equals NUMBER: -79",
    "id": 3748,
    "declarations": "W: CONICSECTION; -79: NUMBER",
    "facts": "Area(W) = -79"
},
{
    "assertion": "Projection ( POINT: C, LINE: A ) equals RightFocus ( CONICSECTION: K )",
    "id": 3749,
    "declarations": "C: POINT; A: LINE; K: CONICSECTION",
    "facts": "Projection(C, A) = RightFocus(K)"
},
{
    "assertion": "Negation ( Diameter ( CIRCLE: j ) equals YCoordinate ( POINT: q ) ) equals BOOL: True",
    "id": 3750,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Locus ( Projection ( POINT: z, LINE: D ) ) equals CURVE: V",
    "id": 3751,
    "declarations": "z: POINT; D: LINE; V: CURVE",
    "facts": "Locus(Projection(z, D)) = V"
},
{
    "assertion": "Distance ( Incenter ( TRIANGLE: G ), RightFocus ( CONICSECTION: R ) ) equals Distance ( POINT: r, POINT: S )",
    "id": 3752,
    "declarations": "G: TRIANGLE; R: CONICSECTION; r: POINT; S: POINT",
    "facts": "Distance(Incenter(G), RightFocus(R)) = Distance(r, S)"
},
{
    "assertion": "RightPart ( HYPERBOLA: W ) equals LeftPart ( HYPERBOLA: y )",
    "id": 3753,
    "declarations": "W: HYPERBOLA; y: HYPERBOLA",
    "facts": "RightPart(W) = LeftPart(y)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: g ) equals LINE: Q",
    "id": 3754,
    "declarations": "g: HYPERBOLA; Q: LINE",
    "facts": "Asymptote(g) = Q"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: v ) equals LINE: N",
    "id": 3755,
    "declarations": "v: LINESEGMENT; N: LINE",
    "facts": "OverlappingLine(v) = N"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: r, TRIANGLE: v ) equals BOOL: True",
    "id": 3756,
    "declarations": "r: CIRCLE; v: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(r, v) = True"
},
{
    "assertion": "TangentOnPoint ( POINT: O, CURVE: h ) equals LINE: h",
    "id": 3757,
    "declarations": "O: POINT; h: CURVE; h: LINE",
    "facts": "TangentOnPoint(O, h) = h"
},
{
    "assertion": "IsInTangent ( CIRCLE: r, CIRCLE: A ) equals BOOL: False",
    "id": 3758,
    "declarations": "r: CIRCLE; A: CIRCLE; False: BOOL",
    "facts": "IsInTangent(r, A) = False"
},
{
    "assertion": "Min ( NUMBER: 77 ) equals Eccentricity ( CONICSECTION: k )",
    "id": 3759,
    "declarations": "77: NUMBER; k: CONICSECTION",
    "facts": "Min(77) = Eccentricity(k)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: x, CIRCLE: J ) equals BOOL: False",
    "id": 3760,
    "declarations": "x: CIRCLE; J: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(x, J) = False"
},
{
    "assertion": "YCoordinate ( LeftFocus ( CONICSECTION: T ) ) equals Abs ( LINESEGMENT: F )",
    "id": 3761,
    "declarations": "T: CONICSECTION; F: LINESEGMENT",
    "facts": "YCoordinate(LeftFocus(T)) = Abs(F)"
},
{
    "assertion": "Between ( UpperVertex ( CONICSECTION: W ), POINT: d, POINT: D ) equals BOOL: True",
    "id": 3762,
    "declarations": "W: CONICSECTION; d: POINT; D: POINT; True: BOOL",
    "facts": "Between(UpperVertex(W), d, D) = True"
},
{
    "assertion": "Intercept ( LINE: D, AXIS: xAxis ) equals NUMBER: 71",
    "id": 3763,
    "declarations": "D: LINE; xAxis: AXIS; 71: NUMBER",
    "facts": "Intercept(D, xAxis) = 71"
},
{
    "assertion": "LocusEquation ( POINT: I ) equals EXPRESSION: y*space=*spacex^2*space-*space5*x*space+*space6",
    "id": 3764,
    "declarations": "I: POINT; y*space=*spacex^2*space-*space5*x*space+*space6: EXPRESSION",
    "facts": "LocusEquation(I) = y*space=*spacex^2*space-*space5*x*space+*space6"
},
{
    "assertion": "MinorAxis ( ELLIPSE: S ) equals MajorAxis ( ELLIPSE: n )",
    "id": 3765,
    "declarations": "S: ELLIPSE; n: ELLIPSE",
    "facts": "MinorAxis(S) = MajorAxis(n)"
},
{
    "assertion": "Projection ( POINT: W, TangentOfPoint ( POINT: U, RightPart ( HYPERBOLA: N ) ) ) equals Orthocenter ( TRIANGLE: E )",
    "id": 3766,
    "declarations": "W: POINT; U: POINT; N: HYPERBOLA; E: TRIANGLE",
    "facts": "Projection(W, TangentOfPoint(U, RightPart(N))) = Orthocenter(E)"
},
{
    "assertion": "Abs ( ImaginaryAxis ( ELLIPSE: I ) ) equals Slope ( LINE: S )",
    "id": 3767,
    "declarations": "I: ELLIPSE; S: LINE",
    "facts": "Abs(ImaginaryAxis(I)) = Slope(S)"
},
{
    "assertion": "Abs ( LINESEGMENT: m ) equals NUMBER: -47",
    "id": 3768,
    "declarations": "m: LINESEGMENT; -47: NUMBER",
    "facts": "Abs(m) = -47"
},
{
    "assertion": "Endpoint ( LineSegmentOf ( POINT: g, FootPoint ( LINE: h, LINE: T ) ) ) equals POINT: s",
    "id": 3769,
    "declarations": "g: POINT; h: LINE; T: LINE; s: POINT",
    "facts": "Endpoint(LineSegmentOf(g, FootPoint(h, T))) = s"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: k, TRIANGLE: e ) equals BOOL: True",
    "id": 3770,
    "declarations": "k: CIRCLE; e: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(k, e) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: F ) equals LINESEGMENT: b",
    "id": 3771,
    "declarations": "F: ELLIPSE; b: LINESEGMENT",
    "facts": "MinorAxis(F) = b"
},
{
    "assertion": "RightFocus ( CONICSECTION: F ) equals LeftFocus ( CONICSECTION: b )",
    "id": 3772,
    "declarations": "F: CONICSECTION; b: CONICSECTION",
    "facts": "RightFocus(F) = LeftFocus(b)"
},
{
    "assertion": "Quadrant ( UpperFocus ( CONICSECTION: s ) ) equals Inclination ( OverlappingLine ( LINESEGMENT: K ) )",
    "id": 3773,
    "declarations": "s: CONICSECTION; K: LINESEGMENT",
    "facts": "Quadrant(UpperFocus(s)) = Inclination(OverlappingLine(K))"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: f, CircumCircle ( TRIANGLE: C ) ) equals BOOL: True",
    "id": 3774,
    "declarations": "f: LINESEGMENT; C: TRIANGLE; True: BOOL",
    "facts": "IsDiameter(f, CircumCircle(C)) = True"
},
{
    "assertion": "Endpoint ( LINESEGMENT: B ) equals Center ( CONICSECTION: W )",
    "id": 3775,
    "declarations": "B: LINESEGMENT; W: CONICSECTION",
    "facts": "Endpoint(B) = Center(W)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: D, TRIANGLE: U ) equals BOOL: True",
    "id": 3776,
    "declarations": "D: CIRCLE; U: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(D, U) = True"
},
{
    "assertion": "InterceptChord ( LeftDirectrix ( CONICSECTION: p ), CONICSECTION: t ) equals MajorAxis ( ELLIPSE: G )",
    "id": 3777,
    "declarations": "p: CONICSECTION; t: CONICSECTION; G: ELLIPSE",
    "facts": "InterceptChord(LeftDirectrix(p), t) = MajorAxis(G)"
},
{
    "assertion": "TangentOnPoint ( POINT: R, CURVE: N ) equals LINE: Y",
    "id": 3778,
    "declarations": "R: POINT; N: CURVE; Y: LINE",
    "facts": "TangentOnPoint(R, N) = Y"
},
{
    "assertion": "IsIntersect ( CURVE: Y, CURVE: j ) equals BOOL: False",
    "id": 3779,
    "declarations": "Y: CURVE; j: CURVE; False: BOOL",
    "facts": "IsIntersect(Y, j) = False"
},
{
    "assertion": "Between ( POINT: e, POINT: t, LeftFocus ( CONICSECTION: e ) ) equals BOOL: True",
    "id": 3780,
    "declarations": "e: POINT; t: POINT; e: CONICSECTION; True: BOOL",
    "facts": "Between(e, t, LeftFocus(e)) = True"
},
{
    "assertion": "LineSegmentOf ( LeftVertex ( CONICSECTION: k ), POINT: r ) equals LINESEGMENT: g",
    "id": 3781,
    "declarations": "k: CONICSECTION; r: POINT; g: LINESEGMENT",
    "facts": "LineSegmentOf(LeftVertex(k), r) = g"
},
{
    "assertion": "Circumcenter ( TRIANGLE: o ) equals Circumcenter ( TRIANGLE: R )",
    "id": 3782,
    "declarations": "o: TRIANGLE; R: TRIANGLE",
    "facts": "Circumcenter(o) = Circumcenter(R)"
},
{
    "assertion": "lg ( Length ( LINESEGMENT: j ) ) equals NumIntersection ( CURVE: M, CURVE: c )",
    "id": 3783,
    "declarations": "j: LINESEGMENT; M: CURVE; c: CURVE",
    "facts": "lg(Length(j)) = NumIntersection(M, c)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: V ) equals LINE: T",
    "id": 3784,
    "declarations": "V: CONICSECTION; T: LINE",
    "facts": "LeftDirectrix(V) = T"
},
{
    "assertion": "Vertex ( CONICSECTION: Z ) equals LeftVertex ( CONICSECTION: R )",
    "id": 3785,
    "declarations": "Z: CONICSECTION; R: CONICSECTION",
    "facts": "Vertex(Z) = LeftVertex(R)"
},
{
    "assertion": "XCoordinate ( POINT: R ) equals Inclination ( RightDirectrix ( CONICSECTION: X ) )",
    "id": 3786,
    "declarations": "R: POINT; X: CONICSECTION",
    "facts": "XCoordinate(R) = Inclination(RightDirectrix(X))"
},
{
    "assertion": "FocalLength ( CONICSECTION: V ) equals NUMBER: -85",
    "id": 3787,
    "declarations": "V: CONICSECTION; -85: NUMBER",
    "facts": "FocalLength(V) = -85"
},
{
    "assertion": "RightVertex ( CONICSECTION: g ) equals POINT: H",
    "id": 3788,
    "declarations": "g: CONICSECTION; H: POINT",
    "facts": "RightVertex(g) = H"
},
{
    "assertion": "Quadrant ( Center ( CONICSECTION: g ) ) equals NUMBER: -29",
    "id": 3789,
    "declarations": "g: CONICSECTION; -29: NUMBER",
    "facts": "Quadrant(Center(g)) = -29"
},
{
    "assertion": "AngleOf ( POINT: t, Incenter ( TRIANGLE: W ), POINT: n ) equals AngleOf ( POINT: U, MidPoint ( LINESEGMENT: o ), Circumcenter ( TRIANGLE: P ) )",
    "id": 3790,
    "declarations": "t: POINT; W: TRIANGLE; n: POINT; U: POINT; o: LINESEGMENT; P: TRIANGLE",
    "facts": "AngleOf(t, Incenter(W), n) = AngleOf(U, MidPoint(o), Circumcenter(P))"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: V, CONICSECTION: K ) equals BOOL: False",
    "id": 3791,
    "declarations": "V: LINESEGMENT; K: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(V, K) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: q ) equals LeftFocus ( CONICSECTION: L )",
    "id": 3793,
    "declarations": "q: CONICSECTION; L: CONICSECTION",
    "facts": "LeftVertex(q) = LeftFocus(L)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: y ) equals POINT: Z",
    "id": 3794,
    "declarations": "y: LINESEGMENT; Z: POINT",
    "facts": "Endpoint(y) = Z"
},
{
    "assertion": "Focus ( CONICSECTION: L ) equals POINT: v",
    "id": 3795,
    "declarations": "L: CONICSECTION; v: POINT",
    "facts": "Focus(L) = v"
},
{
    "assertion": "TangentOfPoint ( Center ( CONICSECTION: Q ), RightPart ( HYPERBOLA: O ) ) equals LINE: e",
    "id": 3796,
    "declarations": "Q: CONICSECTION; O: HYPERBOLA; e: LINE",
    "facts": "TangentOfPoint(Center(Q), RightPart(O)) = e"
},
{
    "assertion": "UpperFocus ( CONICSECTION: Q ) equals POINT: R",
    "id": 3797,
    "declarations": "Q: CONICSECTION; R: POINT",
    "facts": "UpperFocus(Q) = R"
},
{
    "assertion": "TangentPoint ( LINE: k, CIRCLE: U ) equals POINT: W",
    "id": 3798,
    "declarations": "k: LINE; U: CIRCLE; W: POINT",
    "facts": "TangentPoint(k, U) = W"
},
{
    "assertion": "MidPoint ( LINESEGMENT: d ) equals Center ( CONICSECTION: Y )",
    "id": 3799,
    "declarations": "d: LINESEGMENT; Y: CONICSECTION",
    "facts": "MidPoint(d) = Center(Y)"
},
{
    "assertion": "Area ( CONICSECTION: s ) equals NUMBER: 54",
    "id": 3800,
    "declarations": "s: CONICSECTION; 54: NUMBER",
    "facts": "Area(s) = 54"
},
{
    "assertion": "RightFocus ( CONICSECTION: M ) equals POINT: j",
    "id": 3801,
    "declarations": "M: CONICSECTION; j: POINT",
    "facts": "RightFocus(M) = j"
},
{
    "assertion": "Diameter ( CIRCLE: q ) equals Slope ( LINE: Y )",
    "id": 3802,
    "declarations": "q: CIRCLE; Y: LINE",
    "facts": "Diameter(q) = Slope(Y)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: m ) equals RightFocus ( CONICSECTION: Q )",
    "id": 3803,
    "declarations": "m: TRIANGLE; Q: CONICSECTION",
    "facts": "Orthocenter(m) = RightFocus(Q)"
},
{
    "assertion": "Perimeter ( CONICSECTION: Z ) equals NUMBER: 12",
    "id": 3804,
    "declarations": "Z: CONICSECTION; 12: NUMBER",
    "facts": "Perimeter(Z) = 12"
},
{
    "assertion": "Negation ( Slope ( LINE: A ) equals NUMBER: -40 ) equals BOOL: True",
    "id": 3805,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightPart ( HYPERBOLA: x ) equals CURVE: Z",
    "id": 3806,
    "declarations": "x: HYPERBOLA; Z: CURVE",
    "facts": "RightPart(x) = Z"
},
{
    "assertion": "Endpoint ( LINESEGMENT: z ) equals POINT: V",
    "id": 3807,
    "declarations": "z: LINESEGMENT; V: POINT",
    "facts": "Endpoint(z) = V"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: Y, TRIANGLE: a ) equals BOOL: False",
    "id": 3808,
    "declarations": "Y: CIRCLE; a: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(Y, a) = False"
},
{
    "assertion": "Circumcenter ( TRIANGLE: v ) equals POINT: C",
    "id": 3809,
    "declarations": "v: TRIANGLE; C: POINT",
    "facts": "Circumcenter(v) = C"
},
{
    "assertion": "lg ( Radius ( CIRCLE: o ) ) equals YCoordinate ( Center ( CONICSECTION: r ) )",
    "id": 3811,
    "declarations": "o: CIRCLE; r: CONICSECTION",
    "facts": "lg(Radius(o)) = YCoordinate(Center(r))"
},
{
    "assertion": "TangentOnPoint ( RightVertex ( CONICSECTION: R ), LeftPart ( HYPERBOLA: T ) ) equals LINE: G",
    "id": 3812,
    "declarations": "R: CONICSECTION; T: HYPERBOLA; G: LINE",
    "facts": "TangentOnPoint(RightVertex(R), LeftPart(T)) = G"
},
{
    "assertion": "CircumCircle ( TRIANGLE: o ) equals CIRCLE: N",
    "id": 3813,
    "declarations": "o: TRIANGLE; N: CIRCLE",
    "facts": "CircumCircle(o) = N"
},
{
    "assertion": "Perimeter ( CONICSECTION: Z ) equals NUMBER: 6",
    "id": 3814,
    "declarations": "Z: CONICSECTION; 6: NUMBER",
    "facts": "Perimeter(Z) = 6"
},
{
    "assertion": "TangentOnPoint ( MidPoint ( LineSegmentOf ( Orthocenter ( TRIANGLE: c ), POINT: V ) ), CURVE: N ) equals LINE: h",
    "id": 3815,
    "declarations": "c: TRIANGLE; V: POINT; N: CURVE; h: LINE",
    "facts": "TangentOnPoint(MidPoint(LineSegmentOf(Orthocenter(c), V)), N) = h"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: c, TRIANGLE: F ) equals BOOL: True",
    "id": 3816,
    "declarations": "c: CIRCLE; F: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(c, F) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: V ) equals TangentOfPoint ( POINT: u, CURVE: q )",
    "id": 3817,
    "declarations": "V: CONICSECTION; u: POINT; q: CURVE",
    "facts": "Directrix(V) = TangentOfPoint(u, q)"
},
{
    "assertion": "TangentPoint ( TangentOnPoint ( POINT: m, LeftPart ( HYPERBOLA: c ) ), CIRCLE: R ) equals Projection ( POINT: i, LINE: f )",
    "id": 3818,
    "declarations": "m: POINT; c: HYPERBOLA; R: CIRCLE; i: POINT; f: LINE",
    "facts": "TangentPoint(TangentOnPoint(m, LeftPart(c)), R) = Projection(i, f)"
},
{
    "assertion": "IsIntersect ( CURVE: S, CURVE: z ) equals BOOL: False",
    "id": 3819,
    "declarations": "S: CURVE; z: CURVE; False: BOOL",
    "facts": "IsIntersect(S, z) = False"
},
{
    "assertion": "lg ( Diameter ( CIRCLE: L ) ) equals Radius ( CIRCLE: i )",
    "id": 3820,
    "declarations": "L: CIRCLE; i: CIRCLE",
    "facts": "lg(Diameter(L)) = Radius(i)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Y ) equals LINE: s",
    "id": 3821,
    "declarations": "Y: CONICSECTION; s: LINE",
    "facts": "LeftDirectrix(Y) = s"
},
{
    "assertion": "Distance ( UpperFocus ( CONICSECTION: E ), Circumcenter ( TRIANGLE: w ) ) equals Diameter ( CIRCLE: K )",
    "id": 3822,
    "declarations": "E: CONICSECTION; w: TRIANGLE; K: CIRCLE",
    "facts": "Distance(UpperFocus(E), Circumcenter(w)) = Diameter(K)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: l ) equals POINT: A",
    "id": 3824,
    "declarations": "l: LINESEGMENT; A: POINT",
    "facts": "Endpoint(l) = A"
},
{
    "assertion": "Center ( CONICSECTION: p ) equals LeftFocus ( CONICSECTION: D )",
    "id": 3825,
    "declarations": "p: CONICSECTION; D: CONICSECTION",
    "facts": "Center(p) = LeftFocus(D)"
},
{
    "assertion": "Distance ( POINT: x, FootPoint ( LINE: d, LINE: N ) ) equals NUMBER: -53",
    "id": 3826,
    "declarations": "x: POINT; d: LINE; N: LINE; -53: NUMBER",
    "facts": "Distance(x, FootPoint(d, N)) = -53"
},
{
    "assertion": "LowerFocus ( CONICSECTION: O ) equals POINT: m",
    "id": 3827,
    "declarations": "O: CONICSECTION; m: POINT",
    "facts": "LowerFocus(O) = m"
},
{
    "assertion": "RealAxis ( ELLIPSE: c ) equals LINESEGMENT: V",
    "id": 3828,
    "declarations": "c: ELLIPSE; V: LINESEGMENT",
    "facts": "RealAxis(c) = V"
},
{
    "assertion": "Area ( CONICSECTION: f ) equals NUMBER: -73",
    "id": 3829,
    "declarations": "f: CONICSECTION; -73: NUMBER",
    "facts": "Area(f) = -73"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: f ) equals LINE: j",
    "id": 3830,
    "declarations": "f: CONICSECTION; j: LINE",
    "facts": "LeftDirectrix(f) = j"
},
{
    "assertion": "IsPerpendicular ( PerpendicularBisector ( LINESEGMENT: K ), OverlappingLine ( LINESEGMENT: N ) ) equals BOOL: True",
    "id": 3831,
    "declarations": "K: LINESEGMENT; N: LINESEGMENT; True: BOOL",
    "facts": "IsPerpendicular(PerpendicularBisector(K), OverlappingLine(N)) = True"
},
{
    "assertion": "sqrt ( Inclination ( PerpendicularBisector ( LINESEGMENT: S ) ) ) equals Perimeter ( CONICSECTION: v )",
    "id": 3832,
    "declarations": "S: LINESEGMENT; v: CONICSECTION",
    "facts": "sqrt(Inclination(PerpendicularBisector(S))) = Perimeter(v)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: N ) equals CURVE: C",
    "id": 3833,
    "declarations": "N: HYPERBOLA; C: CURVE",
    "facts": "LeftPart(N) = C"
},
{
    "assertion": "TangentOnPoint ( LeftFocus ( CONICSECTION: m ), CURVE: O ) equals LINE: L",
    "id": 3834,
    "declarations": "m: CONICSECTION; O: CURVE; L: LINE",
    "facts": "TangentOnPoint(LeftFocus(m), O) = L"
},
{
    "assertion": "LeftFocus ( CONICSECTION: j ) equals LowerVertex ( CONICSECTION: d )",
    "id": 3835,
    "declarations": "j: CONICSECTION; d: CONICSECTION",
    "facts": "LeftFocus(j) = LowerVertex(d)"
},
{
    "assertion": "YCoordinate ( POINT: T ) equals Min ( Area ( CONICSECTION: P ) )",
    "id": 3836,
    "declarations": "T: POINT; P: CONICSECTION",
    "facts": "YCoordinate(T) = Min(Area(P))"
},
{
    "assertion": "Focus ( CONICSECTION: q ) equals Projection ( POINT: d, LINE: P )",
    "id": 3837,
    "declarations": "q: CONICSECTION; d: POINT; P: LINE",
    "facts": "Focus(q) = Projection(d, P)"
},
{
    "assertion": "LineSegmentOf ( Circumcenter ( TRIANGLE: w ), POINT: a ) equals LINESEGMENT: d",
    "id": 3838,
    "declarations": "w: TRIANGLE; a: POINT; d: LINESEGMENT",
    "facts": "LineSegmentOf(Circumcenter(w), a) = d"
},
{
    "assertion": "Min ( NUMBER: 18 ) equals Intercept ( LINE: m, AXIS: yAxis )",
    "id": 3839,
    "declarations": "18: NUMBER; m: LINE; yAxis: AXIS",
    "facts": "Min(18) = Intercept(m, yAxis)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: v ) equals LINESEGMENT: j",
    "id": 3840,
    "declarations": "v: ELLIPSE; j: LINESEGMENT",
    "facts": "MinorAxis(v) = j"
},
{
    "assertion": "Vertex ( CONICSECTION: w ) equals Circumcenter ( TRIANGLE: J )",
    "id": 3841,
    "declarations": "w: CONICSECTION; J: TRIANGLE",
    "facts": "Vertex(w) = Circumcenter(J)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: h ) equals NUMBER: -70",
    "id": 3842,
    "declarations": "h: CONICSECTION; -70: NUMBER",
    "facts": "Eccentricity(h) = -70"
},
{
    "assertion": "Expression ( CURVE: f ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 3843,
    "declarations": "f: CURVE; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "Expression(f) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "PointOnCurve ( POINT: m, LeftPart ( HYPERBOLA: k ) ) equals BOOL: False",
    "id": 3844,
    "declarations": "m: POINT; k: HYPERBOLA; False: BOOL",
    "facts": "PointOnCurve(m, LeftPart(k)) = False"
},
{
    "assertion": "Inclination ( LINE: E ) equals NUMBER: 90",
    "id": 3845,
    "declarations": "E: LINE; 90: NUMBER",
    "facts": "Inclination(E) = 90"
},
{
    "assertion": "LocusEquation ( POINT: W ) equals Expression ( CURVE: U )",
    "id": 3846,
    "declarations": "W: POINT; U: CURVE",
    "facts": "LocusEquation(W) = Expression(U)"
},
{
    "assertion": "FocalLength ( CONICSECTION: Z ) equals XCoordinate ( FootPoint ( LINE: l, LineOf ( MidPoint ( LINESEGMENT: a ), POINT: e ) ) )",
    "id": 3847,
    "declarations": "Z: CONICSECTION; l: LINE; a: LINESEGMENT; e: POINT",
    "facts": "FocalLength(Z) = XCoordinate(FootPoint(l, LineOf(MidPoint(a), e)))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: R, TRIANGLE: G ) equals BOOL: False",
    "id": 3848,
    "declarations": "R: CIRCLE; G: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(R, G) = False"
},
{
    "assertion": "DotProduct ( VECTOR: t, VECTOR: h ) equals NUMBER: -2",
    "id": 3849,
    "declarations": "t: VECTOR; h: VECTOR; -2: NUMBER",
    "facts": "DotProduct(t, h) = -2"
},
{
    "assertion": "Max ( Quadrant ( LeftVertex ( CONICSECTION: P ) ) ) equals NUMBER: 47",
    "id": 3850,
    "declarations": "P: CONICSECTION; 47: NUMBER",
    "facts": "Max(Quadrant(LeftVertex(P))) = 47"
},
{
    "assertion": "Radius ( CIRCLE: C ) equals Quadrant ( POINT: v )",
    "id": 3851,
    "declarations": "C: CIRCLE; v: POINT",
    "facts": "Radius(C) = Quadrant(v)"
},
{
    "assertion": "InterceptChord ( LINE: r, CONICSECTION: Y ) equals LINESEGMENT: l",
    "id": 3852,
    "declarations": "r: LINE; Y: CONICSECTION; l: LINESEGMENT",
    "facts": "InterceptChord(r, Y) = l"
},
{
    "assertion": "LowerVertex ( CONICSECTION: f ) equals RightFocus ( CONICSECTION: N )",
    "id": 3853,
    "declarations": "f: CONICSECTION; N: CONICSECTION",
    "facts": "LowerVertex(f) = RightFocus(N)"
},
{
    "assertion": "TangentOnPoint ( POINT: E, CURVE: f ) equals LINE: u",
    "id": 3854,
    "declarations": "E: POINT; f: CURVE; u: LINE",
    "facts": "TangentOnPoint(E, f) = u"
},
{
    "assertion": "TangentOfPoint ( LeftVertex ( CONICSECTION: o ), CURVE: O ) equals LINE: u",
    "id": 3855,
    "declarations": "o: CONICSECTION; O: CURVE; u: LINE",
    "facts": "TangentOfPoint(LeftVertex(o), O) = u"
},
{
    "assertion": "YCoordinate ( POINT: S ) equals NUMBER: -50",
    "id": 3856,
    "declarations": "S: POINT; -50: NUMBER",
    "facts": "YCoordinate(S) = -50"
},
{
    "assertion": "Center ( CONICSECTION: o ) equals LowerVertex ( CONICSECTION: W )",
    "id": 3857,
    "declarations": "o: CONICSECTION; W: CONICSECTION",
    "facts": "Center(o) = LowerVertex(W)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: C ) equals RightDirectrix ( CONICSECTION: a )",
    "id": 3858,
    "declarations": "C: CONICSECTION; a: CONICSECTION",
    "facts": "LeftDirectrix(C) = RightDirectrix(a)"
},
{
    "assertion": "Length ( LINESEGMENT: l ) equals NUMBER: -22",
    "id": 3859,
    "declarations": "l: LINESEGMENT; -22: NUMBER",
    "facts": "Length(l) = -22"
},
{
    "assertion": "ApplyUnit ( lg ( sqrt ( Quadrant ( POINT: s ) ) ), DEGREESTR: degree )",
    "id": 3860,
    "declarations": "s: POINT; degree: DEGREESTR",
    "facts": "ApplyUnit(lg(sqrt(Quadrant(s))), degree) = dummy_operator()"
},
{
    "assertion": "VectorOf ( LowerVertex ( CONICSECTION: i ), POINT: d ) equals VECTOR: X",
    "id": 3861,
    "declarations": "i: CONICSECTION; d: POINT; X: VECTOR",
    "facts": "VectorOf(LowerVertex(i), d) = X"
},
{
    "assertion": "Vertex ( CONICSECTION: S ) equals LeftFocus ( CONICSECTION: B )",
    "id": 3862,
    "declarations": "S: CONICSECTION; B: CONICSECTION",
    "facts": "Vertex(S) = LeftFocus(B)"
},
{
    "assertion": "sqrt ( Perimeter ( CONICSECTION: R ) ) equals Min ( Perimeter ( CONICSECTION: R ) )",
    "id": 3863,
    "declarations": "R: CONICSECTION; R: CONICSECTION",
    "facts": "sqrt(Perimeter(R)) = Min(Perimeter(R))"
},
{
    "assertion": "InterReciprocal ( NUMBER: 65 ) equals Length ( InterceptChord ( LINE: x, CONICSECTION: j ) )",
    "id": 3864,
    "declarations": "65: NUMBER; x: LINE; j: CONICSECTION",
    "facts": "InterReciprocal(65) = Length(InterceptChord(x, j))"
},
{
    "assertion": "Intersection ( Locus ( POINT: m ), LeftPart ( HYPERBOLA: N ) ) equals POINT: R",
    "id": 3865,
    "declarations": "m: POINT; N: HYPERBOLA; R: POINT",
    "facts": "Intersection(Locus(m), LeftPart(N)) = R"
},
{
    "assertion": "TangentOnPoint ( Incenter ( TRIANGLE: L ), CURVE: E ) equals LineOf ( LowerFocus ( CONICSECTION: Q ), POINT: n )",
    "id": 3866,
    "declarations": "L: TRIANGLE; E: CURVE; Q: CONICSECTION; n: POINT",
    "facts": "TangentOnPoint(Incenter(L), E) = LineOf(LowerFocus(Q), n)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: j ) equals LINE: W",
    "id": 3867,
    "declarations": "j: LINESEGMENT; W: LINE",
    "facts": "PerpendicularBisector(j) = W"
},
{
    "assertion": "Circumcenter ( TRIANGLE: U ) equals LowerVertex ( CONICSECTION: U )",
    "id": 3868,
    "declarations": "U: TRIANGLE; U: CONICSECTION",
    "facts": "Circumcenter(U) = LowerVertex(U)"
},
{
    "assertion": "Intersection ( CURVE: S, LeftPart ( HYPERBOLA: O ) ) equals Orthocenter ( TRIANGLE: D )",
    "id": 3869,
    "declarations": "S: CURVE; O: HYPERBOLA; D: TRIANGLE",
    "facts": "Intersection(S, LeftPart(O)) = Orthocenter(D)"
},
{
    "assertion": "FootPoint ( LINE: G, OverlappingLine ( MajorAxis ( ELLIPSE: i ) ) ) equals LowerFocus ( CONICSECTION: W )",
    "id": 3870,
    "declarations": "G: LINE; i: ELLIPSE; W: CONICSECTION",
    "facts": "FootPoint(G, OverlappingLine(MajorAxis(i))) = LowerFocus(W)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: b ) equals LINE: y",
    "id": 3871,
    "declarations": "b: CONICSECTION; y: LINE",
    "facts": "LeftDirectrix(b) = y"
},
{
    "assertion": "Distance ( Projection ( UpperFocus ( CONICSECTION: j ), LINE: Y ), RightFocus ( CONICSECTION: M ) ) equals NUMBER: 36",
    "id": 3872,
    "declarations": "j: CONICSECTION; Y: LINE; M: CONICSECTION; 36: NUMBER",
    "facts": "Distance(Projection(UpperFocus(j), Y), RightFocus(M)) = 36"
},
{
    "assertion": "Between ( RightVertex ( CONICSECTION: z ), LeftFocus ( CONICSECTION: o ), UpperFocus ( CONICSECTION: h ) ) equals BOOL: True",
    "id": 3873,
    "declarations": "z: CONICSECTION; o: CONICSECTION; h: CONICSECTION; True: BOOL",
    "facts": "Between(RightVertex(z), LeftFocus(o), UpperFocus(h)) = True"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: q, CIRCLE: P ) equals BOOL: True",
    "id": 3874,
    "declarations": "q: LINESEGMENT; P: CIRCLE; True: BOOL",
    "facts": "IsDiameter(q, P) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: f ) equals MajorAxis ( ELLIPSE: g )",
    "id": 3875,
    "declarations": "f: ELLIPSE; g: ELLIPSE",
    "facts": "MajorAxis(f) = MajorAxis(g)"
},
{
    "assertion": "And ( IsIntersect ( CURVE: L, Locus ( MidPoint ( LINESEGMENT: I ) ) ) equals BOOL: False, Center ( CONICSECTION: r ) equals RightFocus ( CONICSECTION: p ) ) equals BOOL: False",
    "id": 3876,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "FocalLength ( CONICSECTION: f ) equals Perimeter ( CONICSECTION: s )",
    "id": 3877,
    "declarations": "f: CONICSECTION; s: CONICSECTION",
    "facts": "FocalLength(f) = Perimeter(s)"
},
{
    "assertion": "Locus ( POINT: s ) equals CURVE: F",
    "id": 3878,
    "declarations": "s: POINT; F: CURVE",
    "facts": "Locus(s) = F"
},
{
    "assertion": "Orthocenter ( TriangleOf ( POINT: E, POINT: y, Center ( CONICSECTION: X ) ) ) equals Incenter ( TRIANGLE: d )",
    "id": 3879,
    "declarations": "E: POINT; y: POINT; X: CONICSECTION; d: TRIANGLE",
    "facts": "Orthocenter(TriangleOf(E, y, Center(X))) = Incenter(d)"
},
{
    "assertion": "Min ( NUMBER: -62 ) equals Eccentricity ( CONICSECTION: F )",
    "id": 3880,
    "declarations": "-62: NUMBER; F: CONICSECTION",
    "facts": "Min(-62) = Eccentricity(F)"
},
{
    "assertion": "Length ( LINESEGMENT: O ) equals NUMBER: 79",
    "id": 3881,
    "declarations": "O: LINESEGMENT; 79: NUMBER",
    "facts": "Length(O) = 79"
},
{
    "assertion": "UpperVertex ( CONICSECTION: R ) equals POINT: w",
    "id": 3882,
    "declarations": "R: CONICSECTION; w: POINT",
    "facts": "UpperVertex(R) = w"
},
{
    "assertion": "FocalLength ( CONICSECTION: M ) equals NUMBER: -46",
    "id": 3883,
    "declarations": "M: CONICSECTION; -46: NUMBER",
    "facts": "FocalLength(M) = -46"
},
{
    "assertion": "FocalLength ( CONICSECTION: Z ) equals NUMBER: 90",
    "id": 3884,
    "declarations": "Z: CONICSECTION; 90: NUMBER",
    "facts": "FocalLength(Z) = 90"
},
{
    "assertion": "MidPoint ( LINESEGMENT: Z ) equals POINT: z",
    "id": 3885,
    "declarations": "Z: LINESEGMENT; z: POINT",
    "facts": "MidPoint(Z) = z"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: e ) equals LINESEGMENT: R",
    "id": 3886,
    "declarations": "e: ELLIPSE; R: LINESEGMENT",
    "facts": "ImaginaryAxis(e) = R"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: x, TRIANGLE: C ) equals BOOL: True",
    "id": 3887,
    "declarations": "x: CIRCLE; C: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(x, C) = True"
},
{
    "assertion": "XCoordinate ( MidPoint ( LINESEGMENT: v ) ) equals NUMBER: -57",
    "id": 3888,
    "declarations": "v: LINESEGMENT; -57: NUMBER",
    "facts": "XCoordinate(MidPoint(v)) = -57"
},
{
    "assertion": "IsCircumCircle ( CircumCircle ( TRIANGLE: D ), TRIANGLE: w ) equals BOOL: False",
    "id": 3889,
    "declarations": "D: TRIANGLE; w: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(CircumCircle(D), w) = False"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: K ) equals LINE: B",
    "id": 3890,
    "declarations": "K: LINESEGMENT; B: LINE",
    "facts": "OverlappingLine(K) = B"
},
{
    "assertion": "Circumcenter ( TRIANGLE: o ) equals POINT: p",
    "id": 3891,
    "declarations": "o: TRIANGLE; p: POINT",
    "facts": "Circumcenter(o) = p"
},
{
    "assertion": "Locus ( POINT: g ) equals CURVE: N",
    "id": 3892,
    "declarations": "g: POINT; N: CURVE",
    "facts": "Locus(g) = N"
},
{
    "assertion": "Projection ( LeftVertex ( CONICSECTION: r ), LINE: v ) equals POINT: z",
    "id": 3893,
    "declarations": "r: CONICSECTION; v: LINE; z: POINT",
    "facts": "Projection(LeftVertex(r), v) = z"
},
{
    "assertion": "Incenter ( TRIANGLE: L ) equals Circumcenter ( TRIANGLE: m )",
    "id": 3894,
    "declarations": "L: TRIANGLE; m: TRIANGLE",
    "facts": "Incenter(L) = Circumcenter(m)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: M ) equals LINE: Q",
    "id": 3895,
    "declarations": "M: CONICSECTION; Q: LINE",
    "facts": "LeftDirectrix(M) = Q"
},
{
    "assertion": "Intersection ( LeftPart ( HYPERBOLA: R ), CURVE: H ) equals POINT: O",
    "id": 3896,
    "declarations": "R: HYPERBOLA; H: CURVE; O: POINT",
    "facts": "Intersection(LeftPart(R), H) = O"
},
{
    "assertion": "Projection ( POINT: M, LINE: J ) equals POINT: U",
    "id": 3897,
    "declarations": "M: POINT; J: LINE; U: POINT",
    "facts": "Projection(M, J) = U"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: q ) equals LINE: X",
    "id": 3898,
    "declarations": "q: CONICSECTION; X: LINE",
    "facts": "LeftDirectrix(q) = X"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: d, TRIANGLE: X ) equals BOOL: False",
    "id": 3899,
    "declarations": "d: CIRCLE; X: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(d, X) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: K ) equals MidPoint ( RealAxis ( ELLIPSE: l ) )",
    "id": 3900,
    "declarations": "K: CONICSECTION; l: ELLIPSE",
    "facts": "LowerVertex(K) = MidPoint(RealAxis(l))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: J ) equals CURVE: P",
    "id": 3901,
    "declarations": "J: HYPERBOLA; P: CURVE",
    "facts": "LeftPart(J) = P"
},
{
    "assertion": "XCoordinate ( POINT: V ) equals NUMBER: 75",
    "id": 3902,
    "declarations": "V: POINT; 75: NUMBER",
    "facts": "XCoordinate(V) = 75"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: k ) equals PerpendicularBisector ( LINESEGMENT: j )",
    "id": 3903,
    "declarations": "k: LINESEGMENT; j: LINESEGMENT",
    "facts": "PerpendicularBisector(k) = PerpendicularBisector(j)"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: e ) ) equals RightDirectrix ( CONICSECTION: Y )",
    "id": 3904,
    "declarations": "e: ELLIPSE; Y: CONICSECTION",
    "facts": "OverlappingLine(MinorAxis(e)) = RightDirectrix(Y)"
},
{
    "assertion": "sqrt ( Diameter ( CIRCLE: e ) ) equals HalfFocalLength ( CONICSECTION: T )",
    "id": 3905,
    "declarations": "e: CIRCLE; T: CONICSECTION",
    "facts": "sqrt(Diameter(e)) = HalfFocalLength(T)"
},
{
    "assertion": "Intercept ( LINE: k, AXIS: yAxis ) equals NUMBER: -14",
    "id": 3907,
    "declarations": "k: LINE; yAxis: AXIS; -14: NUMBER",
    "facts": "Intercept(k, yAxis) = -14"
},
{
    "assertion": "Inclination ( LINE: y ) equals NUMBER: 85",
    "id": 3908,
    "declarations": "y: LINE; 85: NUMBER",
    "facts": "Inclination(y) = 85"
},
{
    "assertion": "IsIntersect ( CURVE: t, LeftPart ( HYPERBOLA: i ) ) equals BOOL: True",
    "id": 3909,
    "declarations": "t: CURVE; i: HYPERBOLA; True: BOOL",
    "facts": "IsIntersect(t, LeftPart(i)) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: b ) equals Circumcenter ( TRIANGLE: D )",
    "id": 3910,
    "declarations": "b: TRIANGLE; D: TRIANGLE",
    "facts": "Circumcenter(b) = Circumcenter(D)"
},
{
    "assertion": "Negation ( Endpoint ( LINESEGMENT: h ) equals Incenter ( TRIANGLE: T ) ) equals BOOL: False",
    "id": 3911,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: k, TRIANGLE: w ) equals BOOL: True",
    "id": 3912,
    "declarations": "k: CIRCLE; w: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(k, w) = True"
},
{
    "assertion": "InterReciprocal ( InterReciprocal ( Slope ( LeftDirectrix ( CONICSECTION: y ) ) ) ) equals lg ( Area ( CONICSECTION: f ) )",
    "id": 3913,
    "declarations": "y: CONICSECTION; f: CONICSECTION",
    "facts": "InterReciprocal(InterReciprocal(Slope(LeftDirectrix(y)))) = lg(Area(f))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: e ) equals Min ( Distance ( POINT: E, LowerVertex ( CONICSECTION: i ) ) )",
    "id": 3914,
    "declarations": "e: CONICSECTION; E: POINT; i: CONICSECTION",
    "facts": "Eccentricity(e) = Min(Distance(E, LowerVertex(i)))"
},
{
    "assertion": "Diameter ( CIRCLE: a ) equals InterReciprocal ( XCoordinate ( MidPoint ( LINESEGMENT: N ) ) )",
    "id": 3915,
    "declarations": "a: CIRCLE; N: LINESEGMENT",
    "facts": "Diameter(a) = InterReciprocal(XCoordinate(MidPoint(N)))"
},
{
    "assertion": "Intersection ( CURVE: Z, RightPart ( HYPERBOLA: Y ) ) equals POINT: G",
    "id": 3916,
    "declarations": "Z: CURVE; Y: HYPERBOLA; G: POINT",
    "facts": "Intersection(Z, RightPart(Y)) = G"
},
{
    "assertion": "LeftPart ( HYPERBOLA: R ) equals CURVE: V",
    "id": 3917,
    "declarations": "R: HYPERBOLA; V: CURVE",
    "facts": "LeftPart(R) = V"
},
{
    "assertion": "Quadrant ( RightVertex ( CONICSECTION: B ) ) equals Intercept ( LINE: B, AXIS: xAxis )",
    "id": 3918,
    "declarations": "B: CONICSECTION; B: LINE; xAxis: AXIS",
    "facts": "Quadrant(RightVertex(B)) = Intercept(B, xAxis)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: v ) equals AXIS: xAxis",
    "id": 3919,
    "declarations": "v: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(v) = xAxis"
},
{
    "assertion": "Between ( MidPoint ( LINESEGMENT: j ), LowerVertex ( CONICSECTION: E ), POINT: P ) equals BOOL: True",
    "id": 3920,
    "declarations": "j: LINESEGMENT; E: CONICSECTION; P: POINT; True: BOOL",
    "facts": "Between(MidPoint(j), LowerVertex(E), P) = True"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: h ) equals InterceptChord ( PerpendicularBisector ( LINESEGMENT: I ), CONICSECTION: a )",
    "id": 3921,
    "declarations": "h: ELLIPSE; I: LINESEGMENT; a: CONICSECTION",
    "facts": "ImaginaryAxis(h) = InterceptChord(PerpendicularBisector(I), a)"
},
{
    "assertion": "Center ( CONICSECTION: o ) equals POINT: c",
    "id": 3922,
    "declarations": "o: CONICSECTION; c: POINT",
    "facts": "Center(o) = c"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: y ) equals LINE: i",
    "id": 3923,
    "declarations": "y: CONICSECTION; i: LINE",
    "facts": "RightDirectrix(y) = i"
},
{
    "assertion": "Circumcenter ( TRIANGLE: a ) equals POINT: H",
    "id": 3924,
    "declarations": "a: TRIANGLE; H: POINT",
    "facts": "Circumcenter(a) = H"
},
{
    "assertion": "UpperFocus ( CONICSECTION: H ) equals FootPoint ( RightDirectrix ( CONICSECTION: L ), LINE: t )",
    "id": 3925,
    "declarations": "H: CONICSECTION; L: CONICSECTION; t: LINE",
    "facts": "UpperFocus(H) = FootPoint(RightDirectrix(L), t)"
},
{
    "assertion": "RealAxis ( ELLIPSE: N ) equals LINESEGMENT: S",
    "id": 3926,
    "declarations": "N: ELLIPSE; S: LINESEGMENT",
    "facts": "RealAxis(N) = S"
},
{
    "assertion": "Asymptote ( HYPERBOLA: j ) equals RightDirectrix ( CONICSECTION: r )",
    "id": 3927,
    "declarations": "j: HYPERBOLA; r: CONICSECTION",
    "facts": "Asymptote(j) = RightDirectrix(r)"
},
{
    "assertion": "LocusEquation ( MidPoint ( RealAxis ( ELLIPSE: z ) ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 3928,
    "declarations": "z: ELLIPSE; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(MidPoint(RealAxis(z))) = y*space=*spacelog(x)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: K ) equals MajorAxis ( ELLIPSE: V )",
    "id": 3929,
    "declarations": "K: ELLIPSE; V: ELLIPSE",
    "facts": "MinorAxis(K) = MajorAxis(V)"
},
{
    "assertion": "Between ( Orthocenter ( TRIANGLE: x ), Orthocenter ( TRIANGLE: A ), POINT: f ) equals BOOL: True",
    "id": 3930,
    "declarations": "x: TRIANGLE; A: TRIANGLE; f: POINT; True: BOOL",
    "facts": "Between(Orthocenter(x), Orthocenter(A), f) = True"
},
{
    "assertion": "ApplyUnit ( sqrt ( lg ( Min ( NUMBER: -13 ) ) ), DEGREESTR: degree )",
    "id": 3931,
    "declarations": "-13: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(sqrt(lg(Min(-13))), degree) = dummy_operator()"
},
{
    "assertion": "Directrix ( CONICSECTION: q ) equals LINE: O",
    "id": 3932,
    "declarations": "q: CONICSECTION; O: LINE",
    "facts": "Directrix(q) = O"
},
{
    "assertion": "FocalLength ( CONICSECTION: h ) equals Eccentricity ( CONICSECTION: g )",
    "id": 3933,
    "declarations": "h: CONICSECTION; g: CONICSECTION",
    "facts": "FocalLength(h) = Eccentricity(g)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: w ) equals MidPoint ( LINESEGMENT: S )",
    "id": 3934,
    "declarations": "w: TRIANGLE; S: LINESEGMENT",
    "facts": "Circumcenter(w) = MidPoint(S)"
},
{
    "assertion": "Quadrant ( POINT: i ) equals FocalLength ( CONICSECTION: D )",
    "id": 3935,
    "declarations": "i: POINT; D: CONICSECTION",
    "facts": "Quadrant(i) = FocalLength(D)"
},
{
    "assertion": "FootPoint ( LINE: v, LINE: h ) equals Orthocenter ( TRIANGLE: b )",
    "id": 3936,
    "declarations": "v: LINE; h: LINE; b: TRIANGLE",
    "facts": "FootPoint(v, h) = Orthocenter(b)"
},
{
    "assertion": "Quadrant ( POINT: N ) equals Area ( CONICSECTION: H )",
    "id": 3937,
    "declarations": "N: POINT; H: CONICSECTION",
    "facts": "Quadrant(N) = Area(H)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: m ) equals LINESEGMENT: L",
    "id": 3938,
    "declarations": "m: ELLIPSE; L: LINESEGMENT",
    "facts": "MajorAxis(m) = L"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: p ) equals LINE: I",
    "id": 3939,
    "declarations": "p: CONICSECTION; I: LINE",
    "facts": "RightDirectrix(p) = I"
},
{
    "assertion": "Orthocenter ( TRIANGLE: P ) equals Projection ( Projection ( POINT: S, LINE: S ), LINE: W )",
    "id": 3940,
    "declarations": "P: TRIANGLE; S: POINT; S: LINE; W: LINE",
    "facts": "Orthocenter(P) = Projection(Projection(S, S), W)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: o ) equals AXIS: xAxis",
    "id": 3941,
    "declarations": "o: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(o) = xAxis"
},
{
    "assertion": "InterReciprocal ( NUMBER: -44 ) equals NUMBER: -61",
    "id": 3942,
    "declarations": "-44: NUMBER; -61: NUMBER",
    "facts": "InterReciprocal(-44) = -61"
},
{
    "assertion": "Quadrant ( Center ( CONICSECTION: Z ) ) equals Area ( CONICSECTION: t )",
    "id": 3943,
    "declarations": "Z: CONICSECTION; t: CONICSECTION",
    "facts": "Quadrant(Center(Z)) = Area(t)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: T ) equals LINE: S",
    "id": 3944,
    "declarations": "T: HYPERBOLA; S: LINE",
    "facts": "Asymptote(T) = S"
},
{
    "assertion": "Max ( NUMBER: -78 ) equals NUMBER: 3",
    "id": 3945,
    "declarations": "-78: NUMBER; 3: NUMBER",
    "facts": "Max(-78) = 3"
},
{
    "assertion": "IsOutTangent ( CIRCLE: w, CIRCLE: P ) equals BOOL: True",
    "id": 3946,
    "declarations": "w: CIRCLE; P: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(w, P) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: H ) equals LINE: u",
    "id": 3947,
    "declarations": "H: CONICSECTION; u: LINE",
    "facts": "RightDirectrix(H) = u"
},
{
    "assertion": "YCoordinate ( MidPoint ( InterceptChord ( LINE: z, CONICSECTION: A ) ) ) equals NUMBER: 35",
    "id": 3948,
    "declarations": "z: LINE; A: CONICSECTION; 35: NUMBER",
    "facts": "YCoordinate(MidPoint(InterceptChord(z, A))) = 35"
},
{
    "assertion": "UpperFocus ( CONICSECTION: u ) equals POINT: A",
    "id": 3949,
    "declarations": "u: CONICSECTION; A: POINT",
    "facts": "UpperFocus(u) = A"
},
{
    "assertion": "And ( Length ( ImaginaryAxis ( ELLIPSE: B ) ) equals NUMBER: -44, Max ( Intercept ( LINE: j, AXIS: yAxis ) ) equals Diameter ( CIRCLE: I ) ) equals BOOL: True",
    "id": 3950,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightVertex ( CONICSECTION: F ) equals LeftFocus ( CONICSECTION: d )",
    "id": 3951,
    "declarations": "F: CONICSECTION; d: CONICSECTION",
    "facts": "RightVertex(F) = LeftFocus(d)"
},
{
    "assertion": "VectorOf ( POINT: i, POINT: S ) equals VECTOR: h",
    "id": 3952,
    "declarations": "i: POINT; S: POINT; h: VECTOR",
    "facts": "VectorOf(i, S) = h"
},
{
    "assertion": "MinorAxis ( ELLIPSE: J ) equals LINESEGMENT: N",
    "id": 3953,
    "declarations": "J: ELLIPSE; N: LINESEGMENT",
    "facts": "MinorAxis(J) = N"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: y ) equals XCoordinate ( RightFocus ( CONICSECTION: E ) )",
    "id": 3954,
    "declarations": "y: CONICSECTION; E: CONICSECTION",
    "facts": "HalfFocalLength(y) = XCoordinate(RightFocus(E))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: m ) equals OverlappingLine ( LINESEGMENT: v )",
    "id": 3955,
    "declarations": "m: HYPERBOLA; v: LINESEGMENT",
    "facts": "Asymptote(m) = OverlappingLine(v)"
},
{
    "assertion": "Center ( CONICSECTION: U ) equals Circumcenter ( TRIANGLE: B )",
    "id": 3956,
    "declarations": "U: CONICSECTION; B: TRIANGLE",
    "facts": "Center(U) = Circumcenter(B)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: k ) equals CIRCLE: q",
    "id": 3957,
    "declarations": "k: TRIANGLE; q: CIRCLE",
    "facts": "CircumCircle(k) = q"
},
{
    "assertion": "IsInTangent ( CIRCLE: W, CircumCircle ( TRIANGLE: C ) ) equals BOOL: False",
    "id": 3958,
    "declarations": "W: CIRCLE; C: TRIANGLE; False: BOOL",
    "facts": "IsInTangent(W, CircumCircle(C)) = False"
},
{
    "assertion": "Projection ( Circumcenter ( TRIANGLE: s ), TangentOnPoint ( LeftVertex ( CONICSECTION: T ), LeftPart ( HYPERBOLA: h ) ) ) equals LowerFocus ( CONICSECTION: X )",
    "id": 3959,
    "declarations": "s: TRIANGLE; T: CONICSECTION; h: HYPERBOLA; X: CONICSECTION",
    "facts": "Projection(Circumcenter(s), TangentOnPoint(LeftVertex(T), LeftPart(h))) = LowerFocus(X)"
},
{
    "assertion": "AngleOf ( RightVertex ( CONICSECTION: E ), Incenter ( TRIANGLE: Z ), Incenter ( TRIANGLE: G ) ) equals ApplyUnit ( InterReciprocal ( Perimeter ( CONICSECTION: Y ) ), DEGREESTR: degree )",
    "id": 3960,
    "declarations": "E: CONICSECTION; Z: TRIANGLE; G: TRIANGLE; Y: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(RightVertex(E), Incenter(Z), Incenter(G)) = ApplyUnit(InterReciprocal(Perimeter(Y)), degree)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: i ) equals LeftVertex ( CONICSECTION: a )",
    "id": 3961,
    "declarations": "i: CONICSECTION; a: CONICSECTION",
    "facts": "LeftVertex(i) = LeftVertex(a)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: h, CONICSECTION: K ) equals BOOL: False",
    "id": 3962,
    "declarations": "h: LINESEGMENT; K: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(h, K) = False"
},
{
    "assertion": "MajorAxis ( ELLIPSE: M ) equals LINESEGMENT: c",
    "id": 3963,
    "declarations": "M: ELLIPSE; c: LINESEGMENT",
    "facts": "MajorAxis(M) = c"
},
{
    "assertion": "InterceptChord ( LINE: F, CONICSECTION: o ) equals LINESEGMENT: x",
    "id": 3964,
    "declarations": "F: LINE; o: CONICSECTION; x: LINESEGMENT",
    "facts": "InterceptChord(F, o) = x"
},
{
    "assertion": "Locus ( POINT: z ) equals CURVE: a",
    "id": 3965,
    "declarations": "z: POINT; a: CURVE",
    "facts": "Locus(z) = a"
},
{
    "assertion": "sqrt ( Abs ( LINESEGMENT: b ) ) equals NUMBER: -39",
    "id": 3966,
    "declarations": "b: LINESEGMENT; -39: NUMBER",
    "facts": "sqrt(Abs(b)) = -39"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: A ) equals LINE: m",
    "id": 3967,
    "declarations": "A: LINESEGMENT; m: LINE",
    "facts": "OverlappingLine(A) = m"
},
{
    "assertion": "Radius ( CIRCLE: z ) equals NUMBER: -94",
    "id": 3968,
    "declarations": "z: CIRCLE; -94: NUMBER",
    "facts": "Radius(z) = -94"
},
{
    "assertion": "LowerVertex ( CONICSECTION: a ) equals UpperFocus ( CONICSECTION: k )",
    "id": 3969,
    "declarations": "a: CONICSECTION; k: CONICSECTION",
    "facts": "LowerVertex(a) = UpperFocus(k)"
},
{
    "assertion": "IsIntersect ( CURVE: J, CURVE: s ) equals BOOL: True",
    "id": 3970,
    "declarations": "J: CURVE; s: CURVE; True: BOOL",
    "facts": "IsIntersect(J, s) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: w ) equals FocalLength ( CONICSECTION: l )",
    "id": 3971,
    "declarations": "w: CONICSECTION; l: CONICSECTION",
    "facts": "HalfFocalLength(w) = FocalLength(l)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: q ) equals ImaginaryAxis ( ELLIPSE: V )",
    "id": 3972,
    "declarations": "q: ELLIPSE; V: ELLIPSE",
    "facts": "ImaginaryAxis(q) = ImaginaryAxis(V)"
},
{
    "assertion": "Inclination ( LINE: u ) equals FocalLength ( CONICSECTION: K )",
    "id": 3973,
    "declarations": "u: LINE; K: CONICSECTION",
    "facts": "Inclination(u) = FocalLength(K)"
},
{
    "assertion": "InterReciprocal ( Perimeter ( CONICSECTION: S ) ) equals NUMBER: -77",
    "id": 3975,
    "declarations": "S: CONICSECTION; -77: NUMBER",
    "facts": "InterReciprocal(Perimeter(S)) = -77"
},
{
    "assertion": "CircumCircle ( TRIANGLE: Z ) equals CIRCLE: h",
    "id": 3976,
    "declarations": "Z: TRIANGLE; h: CIRCLE",
    "facts": "CircumCircle(Z) = h"
},
{
    "assertion": "LowerVertex ( CONICSECTION: N ) equals POINT: c",
    "id": 3977,
    "declarations": "N: CONICSECTION; c: POINT",
    "facts": "LowerVertex(N) = c"
},
{
    "assertion": "MinorAxis ( ELLIPSE: j ) equals LINESEGMENT: j",
    "id": 3978,
    "declarations": "j: ELLIPSE; j: LINESEGMENT",
    "facts": "MinorAxis(j) = j"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: v ) equals LINESEGMENT: g",
    "id": 3980,
    "declarations": "v: ELLIPSE; g: LINESEGMENT",
    "facts": "ImaginaryAxis(v) = g"
},
{
    "assertion": "LowerVertex ( CONICSECTION: e ) equals RightFocus ( CONICSECTION: K )",
    "id": 3981,
    "declarations": "e: CONICSECTION; K: CONICSECTION",
    "facts": "LowerVertex(e) = RightFocus(K)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: T ) equals LeftVertex ( CONICSECTION: E )",
    "id": 3982,
    "declarations": "T: TRIANGLE; E: CONICSECTION",
    "facts": "Circumcenter(T) = LeftVertex(E)"
},
{
    "assertion": "lg ( InterReciprocal ( sqrt ( NUMBER: -37 ) ) ) equals XCoordinate ( POINT: F )",
    "id": 3983,
    "declarations": "-37: NUMBER; F: POINT",
    "facts": "lg(InterReciprocal(sqrt(-37))) = XCoordinate(F)"
},
{
    "assertion": "Quadrant ( FootPoint ( LINE: X, LINE: f ) ) equals Area ( CONICSECTION: E )",
    "id": 3984,
    "declarations": "X: LINE; f: LINE; E: CONICSECTION",
    "facts": "Quadrant(FootPoint(X, f)) = Area(E)"
},
{
    "assertion": "Area ( CONICSECTION: k ) equals NUMBER: 96",
    "id": 3985,
    "declarations": "k: CONICSECTION; 96: NUMBER",
    "facts": "Area(k) = 96"
},
{
    "assertion": "LeftFocus ( CONICSECTION: m ) equals POINT: Q",
    "id": 3986,
    "declarations": "m: CONICSECTION; Q: POINT",
    "facts": "LeftFocus(m) = Q"
},
{
    "assertion": "InterceptChord ( TangentOfPoint ( LeftVertex ( CONICSECTION: b ), CURVE: k ), CONICSECTION: z ) equals LINESEGMENT: o",
    "id": 3987,
    "declarations": "b: CONICSECTION; k: CURVE; z: CONICSECTION; o: LINESEGMENT",
    "facts": "InterceptChord(TangentOfPoint(LeftVertex(b), k), z) = o"
},
{
    "assertion": "Max ( InterReciprocal ( Intercept ( LINE: O, AXIS: yAxis ) ) ) equals NUMBER: -36",
    "id": 3988,
    "declarations": "O: LINE; yAxis: AXIS; -36: NUMBER",
    "facts": "Max(InterReciprocal(Intercept(O, yAxis))) = -36"
},
{
    "assertion": "UpperVertex ( CONICSECTION: p ) equals Orthocenter ( TRIANGLE: o )",
    "id": 3989,
    "declarations": "p: CONICSECTION; o: TRIANGLE",
    "facts": "UpperVertex(p) = Orthocenter(o)"
},
{
    "assertion": "Focus ( CONICSECTION: h ) equals LeftVertex ( CONICSECTION: v )",
    "id": 3990,
    "declarations": "h: CONICSECTION; v: CONICSECTION",
    "facts": "Focus(h) = LeftVertex(v)"
},
{
    "assertion": "Incenter ( TRIANGLE: j ) equals Orthocenter ( TRIANGLE: f )",
    "id": 3991,
    "declarations": "j: TRIANGLE; f: TRIANGLE",
    "facts": "Incenter(j) = Orthocenter(f)"
},
{
    "assertion": "IsChordOf ( MajorAxis ( ELLIPSE: f ), CONICSECTION: z ) equals BOOL: True",
    "id": 3992,
    "declarations": "f: ELLIPSE; z: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(MajorAxis(f), z) = True"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: K, CONICSECTION: K ) equals BOOL: True",
    "id": 3993,
    "declarations": "K: LINESEGMENT; K: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(K, K) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: m ) equals LINE: Y",
    "id": 3994,
    "declarations": "m: CONICSECTION; Y: LINE",
    "facts": "Directrix(m) = Y"
},
{
    "assertion": "TangentOnPoint ( Center ( CONICSECTION: L ), CURVE: U ) equals LINE: n",
    "id": 3995,
    "declarations": "L: CONICSECTION; U: CURVE; n: LINE",
    "facts": "TangentOnPoint(Center(L), U) = n"
},
{
    "assertion": "sqrt ( NUMBER: 53 ) equals YCoordinate ( UpperFocus ( CONICSECTION: p ) )",
    "id": 3996,
    "declarations": "53: NUMBER; p: CONICSECTION",
    "facts": "sqrt(53) = YCoordinate(UpperFocus(p))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: w ) equals POINT: K",
    "id": 3997,
    "declarations": "w: TRIANGLE; K: POINT",
    "facts": "Orthocenter(w) = K"
},
{
    "assertion": "VectorOf ( Center ( CONICSECTION: P ), POINT: N ) equals VECTOR: K",
    "id": 3998,
    "declarations": "P: CONICSECTION; N: POINT; K: VECTOR",
    "facts": "VectorOf(Center(P), N) = K"
},
{
    "assertion": "TangentOnPoint ( POINT: u, CURVE: W ) equals LINE: n",
    "id": 3999,
    "declarations": "u: POINT; W: CURVE; n: LINE",
    "facts": "TangentOnPoint(u, W) = n"
},
{
    "assertion": "LowerVertex ( CONICSECTION: j ) equals UpperVertex ( CONICSECTION: n )",
    "id": 4000,
    "declarations": "j: CONICSECTION; n: CONICSECTION",
    "facts": "LowerVertex(j) = UpperVertex(n)"
},
{
    "assertion": "Min ( NUMBER: 80 ) equals Intercept ( LINE: P, AXIS: yAxis )",
    "id": 4001,
    "declarations": "80: NUMBER; P: LINE; yAxis: AXIS",
    "facts": "Min(80) = Intercept(P, yAxis)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: v ) equals LeftDirectrix ( CONICSECTION: X )",
    "id": 4002,
    "declarations": "v: LINESEGMENT; X: CONICSECTION",
    "facts": "OverlappingLine(v) = LeftDirectrix(X)"
},
{
    "assertion": "DotProduct ( VECTOR: W, VECTOR: u ) equals NUMBER: -10",
    "id": 4003,
    "declarations": "W: VECTOR; u: VECTOR; -10: NUMBER",
    "facts": "DotProduct(W, u) = -10"
},
{
    "assertion": "Negation ( Endpoint ( LINESEGMENT: T ) equals POINT: z ) equals BOOL: False",
    "id": 4004,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MinorAxis ( ELLIPSE: i ) equals RealAxis ( ELLIPSE: q )",
    "id": 4005,
    "declarations": "i: ELLIPSE; q: ELLIPSE",
    "facts": "MinorAxis(i) = RealAxis(q)"
},
{
    "assertion": "XCoordinate ( Orthocenter ( TRIANGLE: i ) ) equals Min ( Intercept ( LINE: b, AXIS: xAxis ) )",
    "id": 4006,
    "declarations": "i: TRIANGLE; b: LINE; xAxis: AXIS",
    "facts": "XCoordinate(Orthocenter(i)) = Min(Intercept(b, xAxis))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: o ) equals POINT: i",
    "id": 4007,
    "declarations": "o: CONICSECTION; i: POINT",
    "facts": "LeftVertex(o) = i"
},
{
    "assertion": "Expression ( CURVE: b ) equals EXPRESSION: x*space+*spacey^2*space=*space1",
    "id": 4008,
    "declarations": "b: CURVE; x*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "Expression(b) = x*space+*spacey^2*space=*space1"
},
{
    "assertion": "Area ( CONICSECTION: Q ) equals NUMBER: 1",
    "id": 4009,
    "declarations": "Q: CONICSECTION; 1: NUMBER",
    "facts": "Area(Q) = 1"
},
{
    "assertion": "Orthocenter ( TRIANGLE: I ) equals RightFocus ( CONICSECTION: K )",
    "id": 4010,
    "declarations": "I: TRIANGLE; K: CONICSECTION",
    "facts": "Orthocenter(I) = RightFocus(K)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: J ) equals UpperFocus ( CONICSECTION: X )",
    "id": 4011,
    "declarations": "J: CONICSECTION; X: CONICSECTION",
    "facts": "LowerVertex(J) = UpperFocus(X)"
},
{
    "assertion": "Intercept ( LINE: r, AXIS: xAxis ) equals Length ( LINESEGMENT: t )",
    "id": 4012,
    "declarations": "r: LINE; xAxis: AXIS; t: LINESEGMENT",
    "facts": "Intercept(r, xAxis) = Length(t)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: H ) equals LINE: L",
    "id": 4013,
    "declarations": "H: CONICSECTION; L: LINE",
    "facts": "RightDirectrix(H) = L"
},
{
    "assertion": "IsPerpendicular ( LeftDirectrix ( CONICSECTION: o ), LINE: c ) equals BOOL: False",
    "id": 4014,
    "declarations": "o: CONICSECTION; c: LINE; False: BOOL",
    "facts": "IsPerpendicular(LeftDirectrix(o), c) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: D ) equals POINT: Z",
    "id": 4015,
    "declarations": "D: CONICSECTION; Z: POINT",
    "facts": "LeftVertex(D) = Z"
},
{
    "assertion": "Asymptote ( HYPERBOLA: A ) equals LINE: O",
    "id": 4016,
    "declarations": "A: HYPERBOLA; O: LINE",
    "facts": "Asymptote(A) = O"
},
{
    "assertion": "Incenter ( TRIANGLE: M ) equals POINT: Q",
    "id": 4017,
    "declarations": "M: TRIANGLE; Q: POINT",
    "facts": "Incenter(M) = Q"
},
{
    "assertion": "TangentOfPoint ( POINT: J, Locus ( POINT: f ) ) equals TangentOfPoint ( LeftVertex ( CONICSECTION: b ), CURVE: T )",
    "id": 4018,
    "declarations": "J: POINT; f: POINT; b: CONICSECTION; T: CURVE",
    "facts": "TangentOfPoint(J, Locus(f)) = TangentOfPoint(LeftVertex(b), T)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: c, CIRCLE: v ) equals BOOL: False",
    "id": 4019,
    "declarations": "c: CIRCLE; v: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(c, v) = False"
},
{
    "assertion": "RightPart ( HYPERBOLA: f ) equals CURVE: O",
    "id": 4020,
    "declarations": "f: HYPERBOLA; O: CURVE",
    "facts": "RightPart(f) = O"
},
{
    "assertion": "IsDiameter ( RealAxis ( ELLIPSE: T ), CIRCLE: J ) equals BOOL: False",
    "id": 4021,
    "declarations": "T: ELLIPSE; J: CIRCLE; False: BOOL",
    "facts": "IsDiameter(RealAxis(T), J) = False"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: J ) equals TangentOfPoint ( RightFocus ( CONICSECTION: K ), CURVE: a )",
    "id": 4022,
    "declarations": "J: CONICSECTION; K: CONICSECTION; a: CURVE",
    "facts": "LeftDirectrix(J) = TangentOfPoint(RightFocus(K), a)"
},
{
    "assertion": "Directrix ( CONICSECTION: c ) equals LINE: Z",
    "id": 4023,
    "declarations": "c: CONICSECTION; Z: LINE",
    "facts": "Directrix(c) = Z"
},
{
    "assertion": "Intercept ( LINE: P, AXIS: xAxis ) equals Area ( CONICSECTION: E )",
    "id": 4024,
    "declarations": "P: LINE; xAxis: AXIS; E: CONICSECTION",
    "facts": "Intercept(P, xAxis) = Area(E)"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( MajorAxis ( ELLIPSE: s ) ) ) equals Perimeter ( CONICSECTION: q )",
    "id": 4026,
    "declarations": "s: ELLIPSE; q: CONICSECTION",
    "facts": "Inclination(PerpendicularBisector(MajorAxis(s))) = Perimeter(q)"
},
{
    "assertion": "Max ( NUMBER: -13 ) equals HalfFocalLength ( CONICSECTION: F )",
    "id": 4027,
    "declarations": "-13: NUMBER; F: CONICSECTION",
    "facts": "Max(-13) = HalfFocalLength(F)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: D ) equals LINE: K",
    "id": 4028,
    "declarations": "D: CONICSECTION; K: LINE",
    "facts": "RightDirectrix(D) = K"
},
{
    "assertion": "RealAxis ( ELLIPSE: l ) equals LINESEGMENT: L",
    "id": 4029,
    "declarations": "l: ELLIPSE; L: LINESEGMENT",
    "facts": "RealAxis(l) = L"
},
{
    "assertion": "IsIntersect ( CURVE: y, CURVE: f ) equals BOOL: False",
    "id": 4030,
    "declarations": "y: CURVE; f: CURVE; False: BOOL",
    "facts": "IsIntersect(y, f) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: l ) equals POINT: f",
    "id": 4031,
    "declarations": "l: TRIANGLE; f: POINT",
    "facts": "Incenter(l) = f"
},
{
    "assertion": "IsIntersect ( Locus ( UpperFocus ( CONICSECTION: a ) ), CURVE: u ) equals BOOL: False",
    "id": 4032,
    "declarations": "a: CONICSECTION; u: CURVE; False: BOOL",
    "facts": "IsIntersect(Locus(UpperFocus(a)), u) = False"
},
{
    "assertion": "Negation ( TangentPoint ( TangentOnPoint ( Circumcenter ( TRIANGLE: j ), CURVE: E ), CIRCLE: o ) equals POINT: G ) equals BOOL: False",
    "id": 4033,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "UpperFocus ( CONICSECTION: T ) equals POINT: j",
    "id": 4034,
    "declarations": "T: CONICSECTION; j: POINT",
    "facts": "UpperFocus(T) = j"
},
{
    "assertion": "IsIntersect ( CURVE: U, CURVE: m ) equals BOOL: False",
    "id": 4035,
    "declarations": "U: CURVE; m: CURVE; False: BOOL",
    "facts": "IsIntersect(U, m) = False"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: A ) ) equals sqrt ( Eccentricity ( CONICSECTION: p ) )",
    "id": 4036,
    "declarations": "A: TRIANGLE; p: CONICSECTION",
    "facts": "Radius(CircumCircle(A)) = sqrt(Eccentricity(p))"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: H, CONICSECTION: w ) equals BOOL: True",
    "id": 4037,
    "declarations": "H: LINESEGMENT; w: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(H, w) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: E ) equals LINE: N",
    "id": 4038,
    "declarations": "E: CONICSECTION; N: LINE",
    "facts": "Directrix(E) = N"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: v ) ) equals RightDirectrix ( CONICSECTION: e )",
    "id": 4039,
    "declarations": "v: ELLIPSE; e: CONICSECTION",
    "facts": "PerpendicularBisector(ImaginaryAxis(v)) = RightDirectrix(e)"
},
{
    "assertion": "Between ( UpperFocus ( CONICSECTION: T ), POINT: V, Center ( CONICSECTION: v ) ) equals BOOL: False",
    "id": 4040,
    "declarations": "T: CONICSECTION; V: POINT; v: CONICSECTION; False: BOOL",
    "facts": "Between(UpperFocus(T), V, Center(v)) = False"
},
{
    "assertion": "VectorOf ( POINT: G, LeftFocus ( CONICSECTION: Y ) ) equals VECTOR: v",
    "id": 4041,
    "declarations": "G: POINT; Y: CONICSECTION; v: VECTOR",
    "facts": "VectorOf(G, LeftFocus(Y)) = v"
},
{
    "assertion": "Negation ( SymmetryAxis ( CONICSECTION: P ) equals AXIS: xAxis ) equals BOOL: False",
    "id": 4042,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsOutTangent ( CIRCLE: N, CIRCLE: R ) equals BOOL: False",
    "id": 4043,
    "declarations": "N: CIRCLE; R: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(N, R) = False"
},
{
    "assertion": "IsOutTangent ( CIRCLE: T, CIRCLE: N ) equals BOOL: False",
    "id": 4044,
    "declarations": "T: CIRCLE; N: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(T, N) = False"
},
{
    "assertion": "InterReciprocal ( NUMBER: -55 ) equals Length ( LINESEGMENT: T )",
    "id": 4045,
    "declarations": "-55: NUMBER; T: LINESEGMENT",
    "facts": "InterReciprocal(-55) = Length(T)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: B ) equals MidPoint ( LINESEGMENT: C )",
    "id": 4046,
    "declarations": "B: TRIANGLE; C: LINESEGMENT",
    "facts": "Circumcenter(B) = MidPoint(C)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: f, TRIANGLE: J ) equals BOOL: False",
    "id": 4047,
    "declarations": "f: CIRCLE; J: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(f, J) = False"
},
{
    "assertion": "CircumCircle ( TRIANGLE: F ) equals CIRCLE: i",
    "id": 4048,
    "declarations": "F: TRIANGLE; i: CIRCLE",
    "facts": "CircumCircle(F) = i"
},
{
    "assertion": "Circumcenter ( TRIANGLE: e ) equals POINT: T",
    "id": 4049,
    "declarations": "e: TRIANGLE; T: POINT",
    "facts": "Circumcenter(e) = T"
},
{
    "assertion": "UpperFocus ( CONICSECTION: f ) equals Orthocenter ( TRIANGLE: Z )",
    "id": 4050,
    "declarations": "f: CONICSECTION; Z: TRIANGLE",
    "facts": "UpperFocus(f) = Orthocenter(Z)"
},
{
    "assertion": "Between ( POINT: u, POINT: Y, LeftFocus ( CONICSECTION: W ) ) equals BOOL: False",
    "id": 4052,
    "declarations": "u: POINT; Y: POINT; W: CONICSECTION; False: BOOL",
    "facts": "Between(u, Y, LeftFocus(W)) = False"
},
{
    "assertion": "Slope ( LINE: M ) equals Radius ( CIRCLE: s )",
    "id": 4053,
    "declarations": "M: LINE; s: CIRCLE",
    "facts": "Slope(M) = Radius(s)"
},
{
    "assertion": "IsIntersect ( CURVE: c, CURVE: Z ) equals BOOL: False",
    "id": 4054,
    "declarations": "c: CURVE; Z: CURVE; False: BOOL",
    "facts": "IsIntersect(c, Z) = False"
},
{
    "assertion": "IsTangent ( LINE: W, CONICSECTION: m ) equals BOOL: False",
    "id": 4055,
    "declarations": "W: LINE; m: CONICSECTION; False: BOOL",
    "facts": "IsTangent(W, m) = False"
},
{
    "assertion": "Length ( LINESEGMENT: X ) equals DotProduct ( VECTOR: B, VECTOR: H )",
    "id": 4056,
    "declarations": "X: LINESEGMENT; B: VECTOR; H: VECTOR",
    "facts": "Length(X) = DotProduct(B, H)"
},
{
    "assertion": "Inclination ( LINE: Y ) equals Radius ( CIRCLE: a )",
    "id": 4057,
    "declarations": "Y: LINE; a: CIRCLE",
    "facts": "Inclination(Y) = Radius(a)"
},
{
    "assertion": "YCoordinate ( Incenter ( TRIANGLE: c ) ) equals Slope ( LINE: n )",
    "id": 4058,
    "declarations": "c: TRIANGLE; n: LINE",
    "facts": "YCoordinate(Incenter(c)) = Slope(n)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: D ) equals POINT: g",
    "id": 4059,
    "declarations": "D: CONICSECTION; g: POINT",
    "facts": "LowerVertex(D) = g"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: l ) equals XCoordinate ( POINT: Z )",
    "id": 4060,
    "declarations": "l: CONICSECTION; Z: POINT",
    "facts": "HalfFocalLength(l) = XCoordinate(Z)"
},
{
    "assertion": "Distance ( RightVertex ( CONICSECTION: M ), LeftVertex ( CONICSECTION: f ) ) equals Slope ( PerpendicularBisector ( LINESEGMENT: t ) )",
    "id": 4061,
    "declarations": "M: CONICSECTION; f: CONICSECTION; t: LINESEGMENT",
    "facts": "Distance(RightVertex(M), LeftVertex(f)) = Slope(PerpendicularBisector(t))"
},
{
    "assertion": "FootPoint ( LineOf ( POINT: M, Circumcenter ( TRIANGLE: h ) ), LINE: h ) equals Incenter ( TRIANGLE: n )",
    "id": 4062,
    "declarations": "M: POINT; h: TRIANGLE; h: LINE; n: TRIANGLE",
    "facts": "FootPoint(LineOf(M, Circumcenter(h)), h) = Incenter(n)"
},
{
    "assertion": "InterReciprocal ( lg ( Quadrant ( LowerFocus ( CONICSECTION: t ) ) ) ) equals Area ( CONICSECTION: d )",
    "id": 4063,
    "declarations": "t: CONICSECTION; d: CONICSECTION",
    "facts": "InterReciprocal(lg(Quadrant(LowerFocus(t)))) = Area(d)"
},
{
    "assertion": "Radius ( CIRCLE: L ) equals NUMBER: -66",
    "id": 4064,
    "declarations": "L: CIRCLE; -66: NUMBER",
    "facts": "Radius(L) = -66"
},
{
    "assertion": "InterceptChord ( LINE: B, CONICSECTION: h ) equals LINESEGMENT: U",
    "id": 4065,
    "declarations": "B: LINE; h: CONICSECTION; U: LINESEGMENT",
    "facts": "InterceptChord(B, h) = U"
},
{
    "assertion": "Slope ( LINE: G ) equals FocalLength ( CONICSECTION: T )",
    "id": 4066,
    "declarations": "G: LINE; T: CONICSECTION",
    "facts": "Slope(G) = FocalLength(T)"
},
{
    "assertion": "InterReciprocal ( InterReciprocal ( Length ( MinorAxis ( ELLIPSE: d ) ) ) ) equals NUMBER: -53",
    "id": 4067,
    "declarations": "d: ELLIPSE; -53: NUMBER",
    "facts": "InterReciprocal(InterReciprocal(Length(MinorAxis(d)))) = -53"
},
{
    "assertion": "Distance ( Center ( CONICSECTION: n ), POINT: E ) equals Slope ( LINE: u )",
    "id": 4068,
    "declarations": "n: CONICSECTION; E: POINT; u: LINE",
    "facts": "Distance(Center(n), E) = Slope(u)"
},
{
    "assertion": "IsDiameter ( InterceptChord ( OverlappingLine ( MajorAxis ( ELLIPSE: P ) ), CONICSECTION: I ), CIRCLE: d ) equals BOOL: False",
    "id": 4069,
    "declarations": "P: ELLIPSE; I: CONICSECTION; d: CIRCLE; False: BOOL",
    "facts": "IsDiameter(InterceptChord(OverlappingLine(MajorAxis(P)), I), d) = False"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: V ) equals AXIS: xAxis",
    "id": 4070,
    "declarations": "V: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(V) = xAxis"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: Q, TRIANGLE: B ) equals BOOL: True",
    "id": 4071,
    "declarations": "Q: CIRCLE; B: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(Q, B) = True"
},
{
    "assertion": "Max ( NUMBER: -30 ) equals NUMBER: 47",
    "id": 4072,
    "declarations": "-30: NUMBER; 47: NUMBER",
    "facts": "Max(-30) = 47"
},
{
    "assertion": "IsPerpendicular ( LINE: g, LINE: I ) equals BOOL: False",
    "id": 4073,
    "declarations": "g: LINE; I: LINE; False: BOOL",
    "facts": "IsPerpendicular(g, I) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: W ) equals RightVertex ( CONICSECTION: n )",
    "id": 4074,
    "declarations": "W: CONICSECTION; n: CONICSECTION",
    "facts": "RightFocus(W) = RightVertex(n)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: L, CONICSECTION: I ) equals BOOL: False",
    "id": 4075,
    "declarations": "L: LINESEGMENT; I: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(L, I) = False"
},
{
    "assertion": "CircumCircle ( TRIANGLE: t ) equals CIRCLE: O",
    "id": 4076,
    "declarations": "t: TRIANGLE; O: CIRCLE",
    "facts": "CircumCircle(t) = O"
},
{
    "assertion": "InterceptChord ( LINE: k, CONICSECTION: t ) equals MajorAxis ( ELLIPSE: v )",
    "id": 4077,
    "declarations": "k: LINE; t: CONICSECTION; v: ELLIPSE",
    "facts": "InterceptChord(k, t) = MajorAxis(v)"
},
{
    "assertion": "FootPoint ( LINE: r, PerpendicularBisector ( LINESEGMENT: U ) ) equals UpperFocus ( CONICSECTION: V )",
    "id": 4078,
    "declarations": "r: LINE; U: LINESEGMENT; V: CONICSECTION",
    "facts": "FootPoint(r, PerpendicularBisector(U)) = UpperFocus(V)"
},
{
    "assertion": "Focus ( CONICSECTION: G ) equals LowerVertex ( CONICSECTION: I )",
    "id": 4079,
    "declarations": "G: CONICSECTION; I: CONICSECTION",
    "facts": "Focus(G) = LowerVertex(I)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: E ) equals LINE: p",
    "id": 4081,
    "declarations": "E: CONICSECTION; p: LINE",
    "facts": "RightDirectrix(E) = p"
},
{
    "assertion": "Radius ( CIRCLE: d ) equals HalfFocalLength ( CONICSECTION: y )",
    "id": 4082,
    "declarations": "d: CIRCLE; y: CONICSECTION",
    "facts": "Radius(d) = HalfFocalLength(y)"
},
{
    "assertion": "IsDiameter ( LineSegmentOf ( POINT: U, RightVertex ( CONICSECTION: R ) ), CIRCLE: I ) equals BOOL: False",
    "id": 4083,
    "declarations": "U: POINT; R: CONICSECTION; I: CIRCLE; False: BOOL",
    "facts": "IsDiameter(LineSegmentOf(U, RightVertex(R)), I) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: S ) equals ImaginaryAxis ( ELLIPSE: b )",
    "id": 4084,
    "declarations": "S: ELLIPSE; b: ELLIPSE",
    "facts": "MinorAxis(S) = ImaginaryAxis(b)"
},
{
    "assertion": "ApplyUnit ( Eccentricity ( CONICSECTION: l ), DEGREESTR: degree )",
    "id": 4085,
    "declarations": "l: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Eccentricity(l), degree) = dummy_operator()"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: x ) equals Distance ( POINT: g, POINT: a )",
    "id": 4086,
    "declarations": "x: CONICSECTION; g: POINT; a: POINT",
    "facts": "HalfFocalLength(x) = Distance(g, a)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: D ) equals POINT: y",
    "id": 4087,
    "declarations": "D: CONICSECTION; y: POINT",
    "facts": "LeftFocus(D) = y"
},
{
    "assertion": "TriangleOf ( POINT: T, MidPoint ( LINESEGMENT: i ), RightVertex ( CONICSECTION: U ) ) equals TRIANGLE: c",
    "id": 4088,
    "declarations": "T: POINT; i: LINESEGMENT; U: CONICSECTION; c: TRIANGLE",
    "facts": "TriangleOf(T, MidPoint(i), RightVertex(U)) = c"
},
{
    "assertion": "Eccentricity ( CONICSECTION: q ) equals Area ( CONICSECTION: e )",
    "id": 4089,
    "declarations": "q: CONICSECTION; e: CONICSECTION",
    "facts": "Eccentricity(q) = Area(e)"
},
{
    "assertion": "IsTangent ( LINE: v, CONICSECTION: f ) equals BOOL: False",
    "id": 4090,
    "declarations": "v: LINE; f: CONICSECTION; False: BOOL",
    "facts": "IsTangent(v, f) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: z ) equals POINT: C",
    "id": 4091,
    "declarations": "z: CONICSECTION; C: POINT",
    "facts": "RightFocus(z) = C"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: i ) equals NUMBER: -22",
    "id": 4092,
    "declarations": "i: CONICSECTION; -22: NUMBER",
    "facts": "HalfFocalLength(i) = -22"
},
{
    "assertion": "Abs ( LINESEGMENT: n ) equals DotProduct ( VECTOR: X, VECTOR: E )",
    "id": 4093,
    "declarations": "n: LINESEGMENT; X: VECTOR; E: VECTOR",
    "facts": "Abs(n) = DotProduct(X, E)"
},
{
    "assertion": "LocusEquation ( LowerVertex ( CONICSECTION: r ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 4094,
    "declarations": "r: CONICSECTION; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(LowerVertex(r)) = y*space=*spacelog(x)"
},
{
    "assertion": "RightVertex ( CONICSECTION: O ) equals LeftFocus ( CONICSECTION: C )",
    "id": 4095,
    "declarations": "O: CONICSECTION; C: CONICSECTION",
    "facts": "RightVertex(O) = LeftFocus(C)"
},
{
    "assertion": "Inclination ( LINE: f ) equals XCoordinate ( POINT: H )",
    "id": 4096,
    "declarations": "f: LINE; H: POINT",
    "facts": "Inclination(f) = XCoordinate(H)"
},
{
    "assertion": "NumIntersection ( CURVE: C, Locus ( LeftFocus ( CONICSECTION: m ) ) ) equals Abs ( LINESEGMENT: w )",
    "id": 4097,
    "declarations": "C: CURVE; m: CONICSECTION; w: LINESEGMENT",
    "facts": "NumIntersection(C, Locus(LeftFocus(m))) = Abs(w)"
},
{
    "assertion": "Endpoint ( RealAxis ( ELLIPSE: G ) ) equals MidPoint ( RealAxis ( ELLIPSE: J ) )",
    "id": 4098,
    "declarations": "G: ELLIPSE; J: ELLIPSE",
    "facts": "Endpoint(RealAxis(G)) = MidPoint(RealAxis(J))"
},
{
    "assertion": "Min ( NUMBER: -56 ) equals NUMBER: -98",
    "id": 4099,
    "declarations": "-56: NUMBER; -98: NUMBER",
    "facts": "Min(-56) = -98"
},
{
    "assertion": "IsPerpendicular ( LINE: l, RightDirectrix ( CONICSECTION: P ) ) equals BOOL: False",
    "id": 4100,
    "declarations": "l: LINE; P: CONICSECTION; False: BOOL",
    "facts": "IsPerpendicular(l, RightDirectrix(P)) = False"
},
{
    "assertion": "sqrt ( NUMBER: 77 ) equals NUMBER: -96",
    "id": 4101,
    "declarations": "77: NUMBER; -96: NUMBER",
    "facts": "sqrt(77) = -96"
},
{
    "assertion": "PointOnCurve ( POINT: T, CURVE: r ) equals BOOL: False",
    "id": 4102,
    "declarations": "T: POINT; r: CURVE; False: BOOL",
    "facts": "PointOnCurve(T, r) = False"
},
{
    "assertion": "IsOutTangent ( CIRCLE: q, CIRCLE: h ) equals BOOL: False",
    "id": 4103,
    "declarations": "q: CIRCLE; h: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(q, h) = False"
},
{
    "assertion": "Area ( CONICSECTION: V ) equals lg ( NUMBER: 37 )",
    "id": 4104,
    "declarations": "V: CONICSECTION; 37: NUMBER",
    "facts": "Area(V) = lg(37)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: N ) equals POINT: S",
    "id": 4105,
    "declarations": "N: CONICSECTION; S: POINT",
    "facts": "UpperFocus(N) = S"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: B ) equals AXIS: xAxis",
    "id": 4106,
    "declarations": "B: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(B) = xAxis"
},
{
    "assertion": "Area ( CONICSECTION: L ) equals NUMBER: -40",
    "id": 4107,
    "declarations": "L: CONICSECTION; -40: NUMBER",
    "facts": "Area(L) = -40"
},
{
    "assertion": "IsPerpendicular ( LINE: N, OverlappingLine ( LINESEGMENT: K ) ) equals BOOL: True",
    "id": 4108,
    "declarations": "N: LINE; K: LINESEGMENT; True: BOOL",
    "facts": "IsPerpendicular(N, OverlappingLine(K)) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: c ) equals Circumcenter ( TRIANGLE: E )",
    "id": 4109,
    "declarations": "c: CONICSECTION; E: TRIANGLE",
    "facts": "LeftFocus(c) = Circumcenter(E)"
},
{
    "assertion": "RealAxis ( ELLIPSE: v ) equals LINESEGMENT: Q",
    "id": 4110,
    "declarations": "v: ELLIPSE; Q: LINESEGMENT",
    "facts": "RealAxis(v) = Q"
},
{
    "assertion": "IsInTangent ( CIRCLE: W, CIRCLE: d ) equals BOOL: True",
    "id": 4111,
    "declarations": "W: CIRCLE; d: CIRCLE; True: BOOL",
    "facts": "IsInTangent(W, d) = True"
},
{
    "assertion": "DotProduct ( VECTOR: K, VECTOR: S ) equals XCoordinate ( LeftVertex ( CONICSECTION: T ) )",
    "id": 4112,
    "declarations": "K: VECTOR; S: VECTOR; T: CONICSECTION",
    "facts": "DotProduct(K, S) = XCoordinate(LeftVertex(T))"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: R ) equals AXIS: yAxis",
    "id": 4113,
    "declarations": "R: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(R) = yAxis"
},
{
    "assertion": "Focus ( CONICSECTION: y ) equals UpperFocus ( CONICSECTION: F )",
    "id": 4114,
    "declarations": "y: CONICSECTION; F: CONICSECTION",
    "facts": "Focus(y) = UpperFocus(F)"
},
{
    "assertion": "Diameter ( CIRCLE: c ) equals NUMBER: -84",
    "id": 4115,
    "declarations": "c: CIRCLE; -84: NUMBER",
    "facts": "Diameter(c) = -84"
},
{
    "assertion": "TangentOnPoint ( FootPoint ( LINE: V, OverlappingLine ( ImaginaryAxis ( ELLIPSE: a ) ) ), Locus ( POINT: n ) ) equals LINE: t",
    "id": 4116,
    "declarations": "V: LINE; a: ELLIPSE; n: POINT; t: LINE",
    "facts": "TangentOnPoint(FootPoint(V, OverlappingLine(ImaginaryAxis(a))), Locus(n)) = t"
},
{
    "assertion": "Locus ( Orthocenter ( TRIANGLE: s ) ) equals CURVE: R",
    "id": 4117,
    "declarations": "s: TRIANGLE; R: CURVE",
    "facts": "Locus(Orthocenter(s)) = R"
},
{
    "assertion": "DotProduct ( VECTOR: U, VECTOR: p ) equals NUMBER: -65",
    "id": 4118,
    "declarations": "U: VECTOR; p: VECTOR; -65: NUMBER",
    "facts": "DotProduct(U, p) = -65"
},
{
    "assertion": "Circumcenter ( TRIANGLE: P ) equals POINT: J",
    "id": 4119,
    "declarations": "P: TRIANGLE; J: POINT",
    "facts": "Circumcenter(P) = J"
},
{
    "assertion": "Perimeter ( CONICSECTION: n ) equals Min ( NUMBER: -63 )",
    "id": 4120,
    "declarations": "n: CONICSECTION; -63: NUMBER",
    "facts": "Perimeter(n) = Min(-63)"
},
{
    "assertion": "PerpendicularBisector ( MajorAxis ( ELLIPSE: D ) ) equals LINE: U",
    "id": 4121,
    "declarations": "D: ELLIPSE; U: LINE",
    "facts": "PerpendicularBisector(MajorAxis(D)) = U"
},
{
    "assertion": "Quadrant ( LeftFocus ( CONICSECTION: V ) ) equals Radius ( CIRCLE: a )",
    "id": 4122,
    "declarations": "V: CONICSECTION; a: CIRCLE",
    "facts": "Quadrant(LeftFocus(V)) = Radius(a)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: q ) equals UpperFocus ( CONICSECTION: J )",
    "id": 4123,
    "declarations": "q: CONICSECTION; J: CONICSECTION",
    "facts": "LeftFocus(q) = UpperFocus(J)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: f ) equals LINE: b",
    "id": 4124,
    "declarations": "f: LINESEGMENT; b: LINE",
    "facts": "OverlappingLine(f) = b"
},
{
    "assertion": "DotProduct ( VECTOR: U, VECTOR: H ) equals FocalLength ( CONICSECTION: v )",
    "id": 4125,
    "declarations": "U: VECTOR; H: VECTOR; v: CONICSECTION",
    "facts": "DotProduct(U, H) = FocalLength(v)"
},
{
    "assertion": "Projection ( Orthocenter ( TRIANGLE: P ), LINE: y ) equals Projection ( POINT: C, LINE: n )",
    "id": 4126,
    "declarations": "P: TRIANGLE; y: LINE; C: POINT; n: LINE",
    "facts": "Projection(Orthocenter(P), y) = Projection(C, n)"
},
{
    "assertion": "RealAxis ( ELLIPSE: V ) equals LINESEGMENT: E",
    "id": 4127,
    "declarations": "V: ELLIPSE; E: LINESEGMENT",
    "facts": "RealAxis(V) = E"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: k ) equals NUMBER: 99",
    "id": 4128,
    "declarations": "k: CONICSECTION; 99: NUMBER",
    "facts": "HalfFocalLength(k) = 99"
},
{
    "assertion": "Intercept ( LINE: u, SymmetryAxis ( CONICSECTION: p ) ) equals NUMBER: 63",
    "id": 4129,
    "declarations": "u: LINE; p: CONICSECTION; 63: NUMBER",
    "facts": "Intercept(u, SymmetryAxis(p)) = 63"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: s ) equals LINE: L",
    "id": 4130,
    "declarations": "s: CONICSECTION; L: LINE",
    "facts": "LeftDirectrix(s) = L"
},
{
    "assertion": "IsParallel ( LINE: q, TangentOnPoint ( UpperFocus ( CONICSECTION: z ), CURVE: L ) ) equals BOOL: False",
    "id": 4131,
    "declarations": "q: LINE; z: CONICSECTION; L: CURVE; False: BOOL",
    "facts": "IsParallel(q, TangentOnPoint(UpperFocus(z), L)) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: k ) equals POINT: R",
    "id": 4132,
    "declarations": "k: CONICSECTION; R: POINT",
    "facts": "Vertex(k) = R"
},
{
    "assertion": "Orthocenter ( TRIANGLE: I ) equals UpperFocus ( CONICSECTION: Y )",
    "id": 4133,
    "declarations": "I: TRIANGLE; Y: CONICSECTION",
    "facts": "Orthocenter(I) = UpperFocus(Y)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: w, CIRCLE: r ) equals BOOL: True",
    "id": 4134,
    "declarations": "w: LINESEGMENT; r: CIRCLE; True: BOOL",
    "facts": "IsDiameter(w, r) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: A ) equals Circumcenter ( TRIANGLE: W )",
    "id": 4135,
    "declarations": "A: CONICSECTION; W: TRIANGLE",
    "facts": "LeftFocus(A) = Circumcenter(W)"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: d ) ) equals Circumcenter ( TRIANGLE: r )",
    "id": 4136,
    "declarations": "d: ELLIPSE; r: TRIANGLE",
    "facts": "Endpoint(ImaginaryAxis(d)) = Circumcenter(r)"
},
{
    "assertion": "PerpendicularBisector ( InterceptChord ( LINE: U, CONICSECTION: m ) ) equals LINE: Q",
    "id": 4137,
    "declarations": "U: LINE; m: CONICSECTION; Q: LINE",
    "facts": "PerpendicularBisector(InterceptChord(U, m)) = Q"
},
{
    "assertion": "Abs ( LINESEGMENT: R ) equals NUMBER: -19",
    "id": 4138,
    "declarations": "R: LINESEGMENT; -19: NUMBER",
    "facts": "Abs(R) = -19"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: z, TRIANGLE: c ) equals BOOL: True",
    "id": 4139,
    "declarations": "z: CIRCLE; c: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(z, c) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: I ) equals LINE: t",
    "id": 4140,
    "declarations": "I: CONICSECTION; t: LINE",
    "facts": "RightDirectrix(I) = t"
},
{
    "assertion": "Inclination ( LINE: J ) equals NUMBER: 12",
    "id": 4141,
    "declarations": "J: LINE; 12: NUMBER",
    "facts": "Inclination(J) = 12"
},
{
    "assertion": "Projection ( RightVertex ( CONICSECTION: k ), LINE: T ) equals Incenter ( TRIANGLE: x )",
    "id": 4142,
    "declarations": "k: CONICSECTION; T: LINE; x: TRIANGLE",
    "facts": "Projection(RightVertex(k), T) = Incenter(x)"
},
{
    "assertion": "FocalLength ( CONICSECTION: w ) equals sqrt ( NUMBER: 50 )",
    "id": 4143,
    "declarations": "w: CONICSECTION; 50: NUMBER",
    "facts": "FocalLength(w) = sqrt(50)"
},
{
    "assertion": "Quadrant ( POINT: Q ) equals Eccentricity ( CONICSECTION: I )",
    "id": 4144,
    "declarations": "Q: POINT; I: CONICSECTION",
    "facts": "Quadrant(Q) = Eccentricity(I)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: l ) equals POINT: y",
    "id": 4145,
    "declarations": "l: LINESEGMENT; y: POINT",
    "facts": "MidPoint(l) = y"
},
{
    "assertion": "LeftFocus ( CONICSECTION: t ) equals POINT: w",
    "id": 4146,
    "declarations": "t: CONICSECTION; w: POINT",
    "facts": "LeftFocus(t) = w"
},
{
    "assertion": "AngleOf ( LeftFocus ( CONICSECTION: p ), POINT: x, LeftFocus ( CONICSECTION: Q ) ) equals ApplyUnit ( Quadrant ( POINT: v ), DEGREESTR: degree )",
    "id": 4147,
    "declarations": "p: CONICSECTION; x: POINT; Q: CONICSECTION; v: POINT; degree: DEGREESTR",
    "facts": "AngleOf(LeftFocus(p), x, LeftFocus(Q)) = ApplyUnit(Quadrant(v), degree)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: H ) equals RightVertex ( CONICSECTION: c )",
    "id": 4148,
    "declarations": "H: CONICSECTION; c: CONICSECTION",
    "facts": "LeftFocus(H) = RightVertex(c)"
},
{
    "assertion": "IsTangent ( LINE: l, CONICSECTION: N ) equals BOOL: True",
    "id": 4149,
    "declarations": "l: LINE; N: CONICSECTION; True: BOOL",
    "facts": "IsTangent(l, N) = True"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: F ) ) equals Radius ( CIRCLE: M )",
    "id": 4150,
    "declarations": "F: ELLIPSE; M: CIRCLE",
    "facts": "Abs(RealAxis(F)) = Radius(M)"
},
{
    "assertion": "XCoordinate ( POINT: W ) equals NUMBER: -88",
    "id": 4151,
    "declarations": "W: POINT; -88: NUMBER",
    "facts": "XCoordinate(W) = -88"
},
{
    "assertion": "Eccentricity ( CONICSECTION: w ) equals Perimeter ( CONICSECTION: r )",
    "id": 4152,
    "declarations": "w: CONICSECTION; r: CONICSECTION",
    "facts": "Eccentricity(w) = Perimeter(r)"
},
{
    "assertion": "LocusEquation ( POINT: E ) equals LocusEquation ( Incenter ( TRIANGLE: X ) )",
    "id": 4153,
    "declarations": "E: POINT; X: TRIANGLE",
    "facts": "LocusEquation(E) = LocusEquation(Incenter(X))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: U ) equals TangentOnPoint ( POINT: m, CURVE: z )",
    "id": 4154,
    "declarations": "U: CONICSECTION; m: POINT; z: CURVE",
    "facts": "RightDirectrix(U) = TangentOnPoint(m, z)"
},
{
    "assertion": "Length ( RealAxis ( ELLIPSE: O ) ) equals NUMBER: 97",
    "id": 4155,
    "declarations": "O: ELLIPSE; 97: NUMBER",
    "facts": "Length(RealAxis(O)) = 97"
},
{
    "assertion": "Radius ( CIRCLE: l ) equals DotProduct ( VECTOR: L, VECTOR: k )",
    "id": 4156,
    "declarations": "l: CIRCLE; L: VECTOR; k: VECTOR",
    "facts": "Radius(l) = DotProduct(L, k)"
},
{
    "assertion": "LineSegmentOf ( POINT: s, POINT: J ) equals LINESEGMENT: D",
    "id": 4157,
    "declarations": "s: POINT; J: POINT; D: LINESEGMENT",
    "facts": "LineSegmentOf(s, J) = D"
},
{
    "assertion": "LineOf ( POINT: F, POINT: r ) equals LINE: R",
    "id": 4159,
    "declarations": "F: POINT; r: POINT; R: LINE",
    "facts": "LineOf(F, r) = R"
},
{
    "assertion": "AngleOf ( RightFocus ( CONICSECTION: T ), FootPoint ( LeftDirectrix ( CONICSECTION: f ), LINE: w ), RightFocus ( CONICSECTION: E ) ) equals AngleOf ( POINT: b, UpperVertex ( CONICSECTION: J ), Circumcenter ( TRIANGLE: o ) )",
    "id": 4160,
    "declarations": "T: CONICSECTION; f: CONICSECTION; w: LINE; E: CONICSECTION; b: POINT; J: CONICSECTION; o: TRIANGLE",
    "facts": "AngleOf(RightFocus(T), FootPoint(LeftDirectrix(f), w), RightFocus(E)) = AngleOf(b, UpperVertex(J), Circumcenter(o))"
},
{
    "assertion": "Intersection ( CURVE: w, CURVE: f ) equals Orthocenter ( TRIANGLE: k )",
    "id": 4161,
    "declarations": "w: CURVE; f: CURVE; k: TRIANGLE",
    "facts": "Intersection(w, f) = Orthocenter(k)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: u ) equals POINT: d",
    "id": 4162,
    "declarations": "u: CONICSECTION; d: POINT",
    "facts": "UpperVertex(u) = d"
},
{
    "assertion": "Inclination ( RightDirectrix ( CONICSECTION: f ) ) equals lg ( Distance ( UpperFocus ( CONICSECTION: r ), POINT: F ) )",
    "id": 4163,
    "declarations": "f: CONICSECTION; r: CONICSECTION; F: POINT",
    "facts": "Inclination(RightDirectrix(f)) = lg(Distance(UpperFocus(r), F))"
},
{
    "assertion": "Focus ( CONICSECTION: E ) equals Orthocenter ( TRIANGLE: t )",
    "id": 4164,
    "declarations": "E: CONICSECTION; t: TRIANGLE",
    "facts": "Focus(E) = Orthocenter(t)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: s ) equals Quadrant ( POINT: d )",
    "id": 4165,
    "declarations": "s: CONICSECTION; d: POINT",
    "facts": "HalfFocalLength(s) = Quadrant(d)"
},
{
    "assertion": "XCoordinate ( POINT: V ) equals Slope ( LINE: R )",
    "id": 4166,
    "declarations": "V: POINT; R: LINE",
    "facts": "XCoordinate(V) = Slope(R)"
},
{
    "assertion": "XCoordinate ( Circumcenter ( TRIANGLE: c ) ) equals NUMBER: -30",
    "id": 4167,
    "declarations": "c: TRIANGLE; -30: NUMBER",
    "facts": "XCoordinate(Circumcenter(c)) = -30"
},
{
    "assertion": "UpperVertex ( CONICSECTION: p ) equals LowerFocus ( CONICSECTION: Y )",
    "id": 4168,
    "declarations": "p: CONICSECTION; Y: CONICSECTION",
    "facts": "UpperVertex(p) = LowerFocus(Y)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: G ) equals POINT: k",
    "id": 4169,
    "declarations": "G: LINESEGMENT; k: POINT",
    "facts": "Endpoint(G) = k"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: F ) equals LINE: C",
    "id": 4170,
    "declarations": "F: CONICSECTION; C: LINE",
    "facts": "LeftDirectrix(F) = C"
},
{
    "assertion": "Incenter ( TRIANGLE: V ) equals LowerFocus ( CONICSECTION: I )",
    "id": 4171,
    "declarations": "V: TRIANGLE; I: CONICSECTION",
    "facts": "Incenter(V) = LowerFocus(I)"
},
{
    "assertion": "IsChordOf ( LineSegmentOf ( UpperFocus ( CONICSECTION: E ), POINT: T ), CONICSECTION: T ) equals BOOL: False",
    "id": 4172,
    "declarations": "E: CONICSECTION; T: POINT; T: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(LineSegmentOf(UpperFocus(E), T), T) = False"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: w ) equals LINE: q",
    "id": 4173,
    "declarations": "w: LINESEGMENT; q: LINE",
    "facts": "OverlappingLine(w) = q"
},
{
    "assertion": "Inclination ( LINE: P ) equals FocalLength ( CONICSECTION: k )",
    "id": 4174,
    "declarations": "P: LINE; k: CONICSECTION",
    "facts": "Inclination(P) = FocalLength(k)"
},
{
    "assertion": "XCoordinate ( POINT: Q ) equals Abs ( LINESEGMENT: d )",
    "id": 4175,
    "declarations": "Q: POINT; d: LINESEGMENT",
    "facts": "XCoordinate(Q) = Abs(d)"
},
{
    "assertion": "RealAxis ( ELLIPSE: K ) equals MajorAxis ( ELLIPSE: o )",
    "id": 4176,
    "declarations": "K: ELLIPSE; o: ELLIPSE",
    "facts": "RealAxis(K) = MajorAxis(o)"
},
{
    "assertion": "VectorOf ( LowerVertex ( CONICSECTION: D ), POINT: h ) equals VECTOR: a",
    "id": 4177,
    "declarations": "D: CONICSECTION; h: POINT; a: VECTOR",
    "facts": "VectorOf(LowerVertex(D), h) = a"
},
{
    "assertion": "PointOnCurve ( POINT: w, CURVE: k ) equals BOOL: False",
    "id": 4178,
    "declarations": "w: POINT; k: CURVE; False: BOOL",
    "facts": "PointOnCurve(w, k) = False"
},
{
    "assertion": "LeftFocus ( CONICSECTION: i ) equals POINT: P",
    "id": 4179,
    "declarations": "i: CONICSECTION; P: POINT",
    "facts": "LeftFocus(i) = P"
},
{
    "assertion": "IsInTangent ( CIRCLE: j, CIRCLE: V ) equals BOOL: False",
    "id": 4180,
    "declarations": "j: CIRCLE; V: CIRCLE; False: BOOL",
    "facts": "IsInTangent(j, V) = False"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: I ) equals LINE: L",
    "id": 4181,
    "declarations": "I: CONICSECTION; L: LINE",
    "facts": "LeftDirectrix(I) = L"
},
{
    "assertion": "IsPerpendicular ( LINE: d, LINE: K ) equals BOOL: False",
    "id": 4182,
    "declarations": "d: LINE; K: LINE; False: BOOL",
    "facts": "IsPerpendicular(d, K) = False"
},
{
    "assertion": "MajorAxis ( ELLIPSE: N ) equals LINESEGMENT: w",
    "id": 4183,
    "declarations": "N: ELLIPSE; w: LINESEGMENT",
    "facts": "MajorAxis(N) = w"
},
{
    "assertion": "Projection ( POINT: g, TangentOfPoint ( UpperVertex ( CONICSECTION: s ), CURVE: H ) ) equals Projection ( POINT: K, TangentOnPoint ( MidPoint ( RealAxis ( ELLIPSE: M ) ), CURVE: l ) )",
    "id": 4184,
    "declarations": "g: POINT; s: CONICSECTION; H: CURVE; K: POINT; M: ELLIPSE; l: CURVE",
    "facts": "Projection(g, TangentOfPoint(UpperVertex(s), H)) = Projection(K, TangentOnPoint(MidPoint(RealAxis(M)), l))"
},
{
    "assertion": "Perimeter ( CONICSECTION: T ) equals Area ( CONICSECTION: f )",
    "id": 4185,
    "declarations": "T: CONICSECTION; f: CONICSECTION",
    "facts": "Perimeter(T) = Area(f)"
},
{
    "assertion": "InterceptChord ( LINE: b, CONICSECTION: q ) equals LINESEGMENT: Z",
    "id": 4186,
    "declarations": "b: LINE; q: CONICSECTION; Z: LINESEGMENT",
    "facts": "InterceptChord(b, q) = Z"
},
{
    "assertion": "Abs ( LINESEGMENT: r ) equals Diameter ( CIRCLE: d )",
    "id": 4187,
    "declarations": "r: LINESEGMENT; d: CIRCLE",
    "facts": "Abs(r) = Diameter(d)"
},
{
    "assertion": "Max ( Perimeter ( CONICSECTION: Y ) ) equals Diameter ( CIRCLE: J )",
    "id": 4188,
    "declarations": "Y: CONICSECTION; J: CIRCLE",
    "facts": "Max(Perimeter(Y)) = Diameter(J)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: W ) equals MinorAxis ( ELLIPSE: M )",
    "id": 4189,
    "declarations": "W: ELLIPSE; M: ELLIPSE",
    "facts": "ImaginaryAxis(W) = MinorAxis(M)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: v ) equals Incenter ( TRIANGLE: y )",
    "id": 4190,
    "declarations": "v: TRIANGLE; y: TRIANGLE",
    "facts": "Orthocenter(v) = Incenter(y)"
},
{
    "assertion": "Vertex ( CONICSECTION: s ) equals POINT: C",
    "id": 4191,
    "declarations": "s: CONICSECTION; C: POINT",
    "facts": "Vertex(s) = C"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: A, TRIANGLE: R ) equals BOOL: False",
    "id": 4192,
    "declarations": "A: CIRCLE; R: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(A, R) = False"
},
{
    "assertion": "InterReciprocal ( Radius ( CIRCLE: q ) ) equals NUMBER: 35",
    "id": 4193,
    "declarations": "q: CIRCLE; 35: NUMBER",
    "facts": "InterReciprocal(Radius(q)) = 35"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: o, TRIANGLE: C ) equals BOOL: False",
    "id": 4194,
    "declarations": "o: CIRCLE; C: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(o, C) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: I ) equals POINT: p",
    "id": 4195,
    "declarations": "I: CONICSECTION; p: POINT",
    "facts": "LowerVertex(I) = p"
},
{
    "assertion": "UpperFocus ( CONICSECTION: k ) equals FootPoint ( LINE: T, RightDirectrix ( CONICSECTION: b ) )",
    "id": 4196,
    "declarations": "k: CONICSECTION; T: LINE; b: CONICSECTION",
    "facts": "UpperFocus(k) = FootPoint(T, RightDirectrix(b))"
},
{
    "assertion": "IsParallel ( TangentOfPoint ( LowerVertex ( CONICSECTION: V ), CURVE: O ), LINE: h ) equals BOOL: False",
    "id": 4197,
    "declarations": "V: CONICSECTION; O: CURVE; h: LINE; False: BOOL",
    "facts": "IsParallel(TangentOfPoint(LowerVertex(V), O), h) = False"
},
{
    "assertion": "LeftFocus ( CONICSECTION: a ) equals POINT: e",
    "id": 4198,
    "declarations": "a: CONICSECTION; e: POINT",
    "facts": "LeftFocus(a) = e"
},
{
    "assertion": "Radius ( CIRCLE: o ) equals NUMBER: 70",
    "id": 4199,
    "declarations": "o: CIRCLE; 70: NUMBER",
    "facts": "Radius(o) = 70"
},
{
    "assertion": "RightVertex ( CONICSECTION: X ) equals POINT: l",
    "id": 4200,
    "declarations": "X: CONICSECTION; l: POINT",
    "facts": "RightVertex(X) = l"
},
{
    "assertion": "MajorAxis ( ELLIPSE: I ) equals LINESEGMENT: q",
    "id": 4201,
    "declarations": "I: ELLIPSE; q: LINESEGMENT",
    "facts": "MajorAxis(I) = q"
},
{
    "assertion": "Locus ( POINT: X ) equals CURVE: d",
    "id": 4202,
    "declarations": "X: POINT; d: CURVE",
    "facts": "Locus(X) = d"
},
{
    "assertion": "InterReciprocal ( sqrt ( NUMBER: 63 ) ) equals Intercept ( LINE: h, AXIS: yAxis )",
    "id": 4203,
    "declarations": "63: NUMBER; h: LINE; yAxis: AXIS",
    "facts": "InterReciprocal(sqrt(63)) = Intercept(h, yAxis)"
},
{
    "assertion": "TangentOnPoint ( LeftFocus ( CONICSECTION: T ), CURVE: U ) equals LINE: n",
    "id": 4204,
    "declarations": "T: CONICSECTION; U: CURVE; n: LINE",
    "facts": "TangentOnPoint(LeftFocus(T), U) = n"
},
{
    "assertion": "IsIntersect ( CURVE: n, CURVE: W ) equals BOOL: True",
    "id": 4205,
    "declarations": "n: CURVE; W: CURVE; True: BOOL",
    "facts": "IsIntersect(n, W) = True"
},
{
    "assertion": "IsIntersect ( CURVE: p, CURVE: e ) equals BOOL: True",
    "id": 4206,
    "declarations": "p: CURVE; e: CURVE; True: BOOL",
    "facts": "IsIntersect(p, e) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: m ) equals POINT: M",
    "id": 4207,
    "declarations": "m: TRIANGLE; M: POINT",
    "facts": "Incenter(m) = M"
},
{
    "assertion": "IsOutTangent ( CIRCLE: c, CIRCLE: v ) equals BOOL: True",
    "id": 4208,
    "declarations": "c: CIRCLE; v: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(c, v) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: y ) equals FootPoint ( TangentOfPoint ( POINT: Y, CURVE: W ), PerpendicularBisector ( LINESEGMENT: m ) )",
    "id": 4209,
    "declarations": "y: TRIANGLE; Y: POINT; W: CURVE; m: LINESEGMENT",
    "facts": "Circumcenter(y) = FootPoint(TangentOfPoint(Y, W), PerpendicularBisector(m))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: G ) equals LINESEGMENT: J",
    "id": 4210,
    "declarations": "G: ELLIPSE; J: LINESEGMENT",
    "facts": "MinorAxis(G) = J"
},
{
    "assertion": "UpperFocus ( CONICSECTION: C ) equals POINT: m",
    "id": 4211,
    "declarations": "C: CONICSECTION; m: POINT",
    "facts": "UpperFocus(C) = m"
},
{
    "assertion": "IsTangent ( LINE: n, CONICSECTION: o ) equals BOOL: False",
    "id": 4212,
    "declarations": "n: LINE; o: CONICSECTION; False: BOOL",
    "facts": "IsTangent(n, o) = False"
},
{
    "assertion": "MajorAxis ( ELLIPSE: e ) equals LINESEGMENT: G",
    "id": 4213,
    "declarations": "e: ELLIPSE; G: LINESEGMENT",
    "facts": "MajorAxis(e) = G"
},
{
    "assertion": "CircumCircle ( TRIANGLE: n ) equals CircumCircle ( TRIANGLE: c )",
    "id": 4214,
    "declarations": "n: TRIANGLE; c: TRIANGLE",
    "facts": "CircumCircle(n) = CircumCircle(c)"
},
{
    "assertion": "IsChordOf ( LineSegmentOf ( LowerFocus ( CONICSECTION: v ), RightVertex ( CONICSECTION: B ) ), CONICSECTION: d ) equals BOOL: True",
    "id": 4215,
    "declarations": "v: CONICSECTION; B: CONICSECTION; d: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(LineSegmentOf(LowerFocus(v), RightVertex(B)), d) = True"
},
{
    "assertion": "TriangleOf ( LowerVertex ( CONICSECTION: r ), UpperVertex ( CONICSECTION: m ), POINT: s ) equals TRIANGLE: S",
    "id": 4216,
    "declarations": "r: CONICSECTION; m: CONICSECTION; s: POINT; S: TRIANGLE",
    "facts": "TriangleOf(LowerVertex(r), UpperVertex(m), s) = S"
},
{
    "assertion": "Circumcenter ( TRIANGLE: g ) equals UpperFocus ( CONICSECTION: u )",
    "id": 4217,
    "declarations": "g: TRIANGLE; u: CONICSECTION",
    "facts": "Circumcenter(g) = UpperFocus(u)"
},
{
    "assertion": "IsInTangent ( CircumCircle ( TRIANGLE: H ), CIRCLE: N ) equals BOOL: False",
    "id": 4218,
    "declarations": "H: TRIANGLE; N: CIRCLE; False: BOOL",
    "facts": "IsInTangent(CircumCircle(H), N) = False"
},
{
    "assertion": "MajorAxis ( ELLIPSE: g ) equals LINESEGMENT: Z",
    "id": 4219,
    "declarations": "g: ELLIPSE; Z: LINESEGMENT",
    "facts": "MajorAxis(g) = Z"
},
{
    "assertion": "CircumCircle ( TRIANGLE: J ) equals CIRCLE: r",
    "id": 4220,
    "declarations": "J: TRIANGLE; r: CIRCLE",
    "facts": "CircumCircle(J) = r"
},
{
    "assertion": "YCoordinate ( POINT: M ) equals NUMBER: -77",
    "id": 4221,
    "declarations": "M: POINT; -77: NUMBER",
    "facts": "YCoordinate(M) = -77"
},
{
    "assertion": "UpperVertex ( CONICSECTION: d ) equals POINT: m",
    "id": 4222,
    "declarations": "d: CONICSECTION; m: POINT",
    "facts": "UpperVertex(d) = m"
},
{
    "assertion": "Orthocenter ( TRIANGLE: n ) equals UpperFocus ( CONICSECTION: G )",
    "id": 4223,
    "declarations": "n: TRIANGLE; G: CONICSECTION",
    "facts": "Orthocenter(n) = UpperFocus(G)"
},
{
    "assertion": "Min ( DotProduct ( VECTOR: x, VectorOf ( POINT: Q, Incenter ( TRIANGLE: i ) ) ) ) equals Length ( ImaginaryAxis ( ELLIPSE: S ) )",
    "id": 4224,
    "declarations": "x: VECTOR; Q: POINT; i: TRIANGLE; S: ELLIPSE",
    "facts": "Min(DotProduct(x, VectorOf(Q, Incenter(i)))) = Length(ImaginaryAxis(S))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: y ) equals FootPoint ( LINE: s, LINE: f )",
    "id": 4225,
    "declarations": "y: CONICSECTION; s: LINE; f: LINE",
    "facts": "LeftFocus(y) = FootPoint(s, f)"
},
{
    "assertion": "TangentOnPoint ( LowerVertex ( CONICSECTION: N ), CURVE: G ) equals LINE: L",
    "id": 4226,
    "declarations": "N: CONICSECTION; G: CURVE; L: LINE",
    "facts": "TangentOnPoint(LowerVertex(N), G) = L"
},
{
    "assertion": "LeftFocus ( CONICSECTION: j ) equals RightFocus ( CONICSECTION: Z )",
    "id": 4227,
    "declarations": "j: CONICSECTION; Z: CONICSECTION",
    "facts": "LeftFocus(j) = RightFocus(Z)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: d ) equals Eccentricity ( CONICSECTION: b )",
    "id": 4228,
    "declarations": "d: CONICSECTION; b: CONICSECTION",
    "facts": "HalfFocalLength(d) = Eccentricity(b)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: H ) equals CIRCLE: g",
    "id": 4229,
    "declarations": "H: TRIANGLE; g: CIRCLE",
    "facts": "CircumCircle(H) = g"
},
{
    "assertion": "FocalLength ( CONICSECTION: J ) equals InterReciprocal ( XCoordinate ( POINT: v ) )",
    "id": 4230,
    "declarations": "J: CONICSECTION; v: POINT",
    "facts": "FocalLength(J) = InterReciprocal(XCoordinate(v))"
},
{
    "assertion": "Radius ( CIRCLE: z ) equals Area ( CONICSECTION: V )",
    "id": 4231,
    "declarations": "z: CIRCLE; V: CONICSECTION",
    "facts": "Radius(z) = Area(V)"
},
{
    "assertion": "Intersection ( LeftPart ( HYPERBOLA: t ), CURVE: l ) equals POINT: G",
    "id": 4232,
    "declarations": "t: HYPERBOLA; l: CURVE; G: POINT",
    "facts": "Intersection(LeftPart(t), l) = G"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: i ) equals LINE: o",
    "id": 4233,
    "declarations": "i: LINESEGMENT; o: LINE",
    "facts": "OverlappingLine(i) = o"
},
{
    "assertion": "IsTangent ( TangentOnPoint ( LeftFocus ( CONICSECTION: J ), CURVE: r ), CONICSECTION: S ) equals BOOL: True",
    "id": 4234,
    "declarations": "J: CONICSECTION; r: CURVE; S: CONICSECTION; True: BOOL",
    "facts": "IsTangent(TangentOnPoint(LeftFocus(J), r), S) = True"
},
{
    "assertion": "And ( lg ( NUMBER: -10 ) equals Length ( LINESEGMENT: q ), DotProduct ( VECTOR: s, VECTOR: g ) equals NUMBER: 77 ) equals BOOL: False",
    "id": 4235,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "UpperVertex ( CONICSECTION: b ) equals LowerVertex ( CONICSECTION: I )",
    "id": 4236,
    "declarations": "b: CONICSECTION; I: CONICSECTION",
    "facts": "UpperVertex(b) = LowerVertex(I)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: X ) equals LeftPart ( HYPERBOLA: G )",
    "id": 4237,
    "declarations": "X: HYPERBOLA; G: HYPERBOLA",
    "facts": "LeftPart(X) = LeftPart(G)"
},
{
    "assertion": "Vertex ( CONICSECTION: c ) equals POINT: C",
    "id": 4238,
    "declarations": "c: CONICSECTION; C: POINT",
    "facts": "Vertex(c) = C"
},
{
    "assertion": "LowerVertex ( CONICSECTION: Z ) equals Circumcenter ( TRIANGLE: z )",
    "id": 4239,
    "declarations": "Z: CONICSECTION; z: TRIANGLE",
    "facts": "LowerVertex(Z) = Circumcenter(z)"
},
{
    "assertion": "And ( Min ( DotProduct ( VECTOR: M, VECTOR: K ) ) equals NUMBER: -35, RightFocus ( CONICSECTION: E ) equals Center ( CONICSECTION: k ) ) equals BOOL: True",
    "id": 4240,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Orthocenter ( TRIANGLE: I ) equals LeftFocus ( CONICSECTION: b )",
    "id": 4241,
    "declarations": "I: TRIANGLE; b: CONICSECTION",
    "facts": "Orthocenter(I) = LeftFocus(b)"
},
{
    "assertion": "Perimeter ( CONICSECTION: W ) equals Perimeter ( CONICSECTION: p )",
    "id": 4242,
    "declarations": "W: CONICSECTION; p: CONICSECTION",
    "facts": "Perimeter(W) = Perimeter(p)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: n ) equals LINE: v",
    "id": 4243,
    "declarations": "n: LINESEGMENT; v: LINE",
    "facts": "OverlappingLine(n) = v"
},
{
    "assertion": "MidPoint ( LINESEGMENT: Z ) equals RightVertex ( CONICSECTION: Z )",
    "id": 4244,
    "declarations": "Z: LINESEGMENT; Z: CONICSECTION",
    "facts": "MidPoint(Z) = RightVertex(Z)"
},
{
    "assertion": "Intersection ( CURVE: I, CURVE: y ) equals POINT: X",
    "id": 4245,
    "declarations": "I: CURVE; y: CURVE; X: POINT",
    "facts": "Intersection(I, y) = X"
},
{
    "assertion": "lg ( NumIntersection ( CURVE: v, CURVE: O ) ) equals NUMBER: -46",
    "id": 4246,
    "declarations": "v: CURVE; O: CURVE; -46: NUMBER",
    "facts": "lg(NumIntersection(v, O)) = -46"
},
{
    "assertion": "UpperFocus ( CONICSECTION: x ) equals POINT: A",
    "id": 4247,
    "declarations": "x: CONICSECTION; A: POINT",
    "facts": "UpperFocus(x) = A"
},
{
    "assertion": "PointOnCurve ( POINT: H, CURVE: I ) equals BOOL: True",
    "id": 4248,
    "declarations": "H: POINT; I: CURVE; True: BOOL",
    "facts": "PointOnCurve(H, I) = True"
},
{
    "assertion": "YCoordinate ( POINT: J ) equals NUMBER: 37",
    "id": 4249,
    "declarations": "J: POINT; 37: NUMBER",
    "facts": "YCoordinate(J) = 37"
},
{
    "assertion": "Circumcenter ( TRIANGLE: W ) equals MidPoint ( RealAxis ( ELLIPSE: X ) )",
    "id": 4250,
    "declarations": "W: TRIANGLE; X: ELLIPSE",
    "facts": "Circumcenter(W) = MidPoint(RealAxis(X))"
},
{
    "assertion": "FocalLength ( CONICSECTION: m ) equals Radius ( CIRCLE: c )",
    "id": 4251,
    "declarations": "m: CONICSECTION; c: CIRCLE",
    "facts": "FocalLength(m) = Radius(c)"
},
{
    "assertion": "InterReciprocal ( NUMBER: -83 ) equals HalfFocalLength ( CONICSECTION: R )",
    "id": 4252,
    "declarations": "-83: NUMBER; R: CONICSECTION",
    "facts": "InterReciprocal(-83) = HalfFocalLength(R)"
},
{
    "assertion": "AngleOf ( FootPoint ( LINE: K, LINE: z ), Orthocenter ( TRIANGLE: P ), POINT: T ) equals AngleOf ( LeftFocus ( CONICSECTION: B ), POINT: c, Circumcenter ( TRIANGLE: m ) )",
    "id": 4253,
    "declarations": "K: LINE; z: LINE; P: TRIANGLE; T: POINT; B: CONICSECTION; c: POINT; m: TRIANGLE",
    "facts": "AngleOf(FootPoint(K, z), Orthocenter(P), T) = AngleOf(LeftFocus(B), c, Circumcenter(m))"
},
{
    "assertion": "Center ( CONICSECTION: G ) equals LeftVertex ( CONICSECTION: S )",
    "id": 4254,
    "declarations": "G: CONICSECTION; S: CONICSECTION",
    "facts": "Center(G) = LeftVertex(S)"
},
{
    "assertion": "Center ( CONICSECTION: D ) equals POINT: l",
    "id": 4255,
    "declarations": "D: CONICSECTION; l: POINT",
    "facts": "Center(D) = l"
},
{
    "assertion": "Locus ( LowerVertex ( CONICSECTION: A ) ) equals CURVE: i",
    "id": 4256,
    "declarations": "A: CONICSECTION; i: CURVE",
    "facts": "Locus(LowerVertex(A)) = i"
},
{
    "assertion": "IsIntersect ( CURVE: T, CURVE: j ) equals BOOL: False",
    "id": 4257,
    "declarations": "T: CURVE; j: CURVE; False: BOOL",
    "facts": "IsIntersect(T, j) = False"
},
{
    "assertion": "Negation ( RightPart ( HYPERBOLA: t ) equals Locus ( Incenter ( TRIANGLE: t ) ) ) equals BOOL: False",
    "id": 4258,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftVertex ( CONICSECTION: t ) equals POINT: y",
    "id": 4259,
    "declarations": "t: CONICSECTION; y: POINT",
    "facts": "LeftVertex(t) = y"
},
{
    "assertion": "LowerVertex ( CONICSECTION: e ) equals UpperVertex ( CONICSECTION: K )",
    "id": 4260,
    "declarations": "e: CONICSECTION; K: CONICSECTION",
    "facts": "LowerVertex(e) = UpperVertex(K)"
},
{
    "assertion": "Incenter ( TRIANGLE: m ) equals UpperFocus ( CONICSECTION: N )",
    "id": 4261,
    "declarations": "m: TRIANGLE; N: CONICSECTION",
    "facts": "Incenter(m) = UpperFocus(N)"
},
{
    "assertion": "ApplyUnit ( Intercept ( LINE: r, AXIS: xAxis ), DEGREESTR: degree )",
    "id": 4262,
    "declarations": "r: LINE; xAxis: AXIS; degree: DEGREESTR",
    "facts": "ApplyUnit(Intercept(r, xAxis), degree) = dummy_operator()"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: F ) equals NUMBER: -40",
    "id": 4263,
    "declarations": "F: CONICSECTION; -40: NUMBER",
    "facts": "HalfFocalLength(F) = -40"
},
{
    "assertion": "Endpoint ( LINESEGMENT: g ) equals POINT: V",
    "id": 4264,
    "declarations": "g: LINESEGMENT; V: POINT",
    "facts": "Endpoint(g) = V"
},
{
    "assertion": "IsPerpendicular ( PerpendicularBisector ( LINESEGMENT: l ), PerpendicularBisector ( LINESEGMENT: b ) ) equals BOOL: False",
    "id": 4265,
    "declarations": "l: LINESEGMENT; b: LINESEGMENT; False: BOOL",
    "facts": "IsPerpendicular(PerpendicularBisector(l), PerpendicularBisector(b)) = False"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: a ) equals LINE: Y",
    "id": 4266,
    "declarations": "a: CONICSECTION; Y: LINE",
    "facts": "RightDirectrix(a) = Y"
},
{
    "assertion": "RightFocus ( CONICSECTION: b ) equals Circumcenter ( TRIANGLE: Z )",
    "id": 4267,
    "declarations": "b: CONICSECTION; Z: TRIANGLE",
    "facts": "RightFocus(b) = Circumcenter(Z)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: G ) equals LeftVertex ( CONICSECTION: u )",
    "id": 4268,
    "declarations": "G: CONICSECTION; u: CONICSECTION",
    "facts": "LeftFocus(G) = LeftVertex(u)"
},
{
    "assertion": "Area ( CONICSECTION: h ) equals YCoordinate ( RightVertex ( CONICSECTION: o ) )",
    "id": 4269,
    "declarations": "h: CONICSECTION; o: CONICSECTION",
    "facts": "Area(h) = YCoordinate(RightVertex(o))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: O ) equals POINT: W",
    "id": 4271,
    "declarations": "O: TRIANGLE; W: POINT",
    "facts": "Circumcenter(O) = W"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: D ) equals LINESEGMENT: X",
    "id": 4272,
    "declarations": "D: ELLIPSE; X: LINESEGMENT",
    "facts": "ImaginaryAxis(D) = X"
},
{
    "assertion": "Eccentricity ( CONICSECTION: G ) equals NumIntersection ( RightPart ( HYPERBOLA: x ), LeftPart ( HYPERBOLA: l ) )",
    "id": 4273,
    "declarations": "G: CONICSECTION; x: HYPERBOLA; l: HYPERBOLA",
    "facts": "Eccentricity(G) = NumIntersection(RightPart(x), LeftPart(l))"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: O ) ) equals NUMBER: 89",
    "id": 4274,
    "declarations": "O: ELLIPSE; 89: NUMBER",
    "facts": "Abs(MinorAxis(O)) = 89"
},
{
    "assertion": "Diameter ( CIRCLE: F ) equals Quadrant ( Circumcenter ( TRIANGLE: E ) )",
    "id": 4275,
    "declarations": "F: CIRCLE; E: TRIANGLE",
    "facts": "Diameter(F) = Quadrant(Circumcenter(E))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: o ) equals Center ( CONICSECTION: h )",
    "id": 4276,
    "declarations": "o: CONICSECTION; h: CONICSECTION",
    "facts": "LeftFocus(o) = Center(h)"
},
{
    "assertion": "TriangleOf ( POINT: P, UpperFocus ( CONICSECTION: C ), Center ( CONICSECTION: D ) ) equals TRIANGLE: D",
    "id": 4277,
    "declarations": "P: POINT; C: CONICSECTION; D: CONICSECTION; D: TRIANGLE",
    "facts": "TriangleOf(P, UpperFocus(C), Center(D)) = D"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: S ), TRIANGLE: Y ) equals BOOL: True",
    "id": 4278,
    "declarations": "S: TRIANGLE; Y: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(S), Y) = True"
},
{
    "assertion": "TangentPoint ( TangentOfPoint ( Orthocenter ( TRIANGLE: A ), CURVE: f ), CIRCLE: e ) equals LowerFocus ( CONICSECTION: G )",
    "id": 4279,
    "declarations": "A: TRIANGLE; f: CURVE; e: CIRCLE; G: CONICSECTION",
    "facts": "TangentPoint(TangentOfPoint(Orthocenter(A), f), e) = LowerFocus(G)"
},
{
    "assertion": "Perimeter ( CONICSECTION: Z ) equals Diameter ( CircumCircle ( TRIANGLE: l ) )",
    "id": 4280,
    "declarations": "Z: CONICSECTION; l: TRIANGLE",
    "facts": "Perimeter(Z) = Diameter(CircumCircle(l))"
},
{
    "assertion": "Length ( LINESEGMENT: p ) equals Min ( NUMBER: -85 )",
    "id": 4281,
    "declarations": "p: LINESEGMENT; -85: NUMBER",
    "facts": "Length(p) = Min(-85)"
},
{
    "assertion": "lg ( NUMBER: 93 ) equals Perimeter ( CONICSECTION: A )",
    "id": 4282,
    "declarations": "93: NUMBER; A: CONICSECTION",
    "facts": "lg(93) = Perimeter(A)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: b ) equals LINE: Q",
    "id": 4283,
    "declarations": "b: CONICSECTION; Q: LINE",
    "facts": "RightDirectrix(b) = Q"
},
{
    "assertion": "FocalLength ( CONICSECTION: G ) equals Diameter ( CIRCLE: p )",
    "id": 4284,
    "declarations": "G: CONICSECTION; p: CIRCLE",
    "facts": "FocalLength(G) = Diameter(p)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: R ) equals CURVE: d",
    "id": 4285,
    "declarations": "R: HYPERBOLA; d: CURVE",
    "facts": "LeftPart(R) = d"
},
{
    "assertion": "Incenter ( TRIANGLE: F ) equals LowerFocus ( CONICSECTION: V )",
    "id": 4286,
    "declarations": "F: TRIANGLE; V: CONICSECTION",
    "facts": "Incenter(F) = LowerFocus(V)"
},
{
    "assertion": "Focus ( CONICSECTION: g ) equals LowerFocus ( CONICSECTION: E )",
    "id": 4287,
    "declarations": "g: CONICSECTION; E: CONICSECTION",
    "facts": "Focus(g) = LowerFocus(E)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: V ) equals LINE: M",
    "id": 4288,
    "declarations": "V: HYPERBOLA; M: LINE",
    "facts": "Asymptote(V) = M"
},
{
    "assertion": "Abs ( LINESEGMENT: c ) equals NUMBER: -75",
    "id": 4289,
    "declarations": "c: LINESEGMENT; -75: NUMBER",
    "facts": "Abs(c) = -75"
},
{
    "assertion": "LocusEquation ( POINT: H ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 4290,
    "declarations": "H: POINT; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "LocusEquation(H) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: a ) equals AXIS: yAxis",
    "id": 4291,
    "declarations": "a: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(a) = yAxis"
},
{
    "assertion": "MinorAxis ( ELLIPSE: S ) equals LINESEGMENT: d",
    "id": 4292,
    "declarations": "S: ELLIPSE; d: LINESEGMENT",
    "facts": "MinorAxis(S) = d"
},
{
    "assertion": "LowerFocus ( CONICSECTION: E ) equals UpperFocus ( CONICSECTION: P )",
    "id": 4293,
    "declarations": "E: CONICSECTION; P: CONICSECTION",
    "facts": "LowerFocus(E) = UpperFocus(P)"
},
{
    "assertion": "InterReciprocal ( Quadrant ( POINT: b ) ) equals DotProduct ( VECTOR: J, VECTOR: r )",
    "id": 4294,
    "declarations": "b: POINT; J: VECTOR; r: VECTOR",
    "facts": "InterReciprocal(Quadrant(b)) = DotProduct(J, r)"
},
{
    "assertion": "IsTangent ( TangentOnPoint ( POINT: X, CURVE: w ), CONICSECTION: m ) equals BOOL: False",
    "id": 4295,
    "declarations": "X: POINT; w: CURVE; m: CONICSECTION; False: BOOL",
    "facts": "IsTangent(TangentOnPoint(X, w), m) = False"
},
{
    "assertion": "Eccentricity ( CONICSECTION: c ) equals NUMBER: -99",
    "id": 4296,
    "declarations": "c: CONICSECTION; -99: NUMBER",
    "facts": "Eccentricity(c) = -99"
},
{
    "assertion": "Between ( POINT: k, POINT: w, MidPoint ( MajorAxis ( ELLIPSE: W ) ) ) equals BOOL: True",
    "id": 4297,
    "declarations": "k: POINT; w: POINT; W: ELLIPSE; True: BOOL",
    "facts": "Between(k, w, MidPoint(MajorAxis(W))) = True"
},
{
    "assertion": "Projection ( POINT: o, LeftDirectrix ( CONICSECTION: Z ) ) equals LowerVertex ( CONICSECTION: T )",
    "id": 4298,
    "declarations": "o: POINT; Z: CONICSECTION; T: CONICSECTION",
    "facts": "Projection(o, LeftDirectrix(Z)) = LowerVertex(T)"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: y ) ) equals CURVE: J",
    "id": 4299,
    "declarations": "y: CONICSECTION; J: CURVE",
    "facts": "Locus(LeftFocus(y)) = J"
},
{
    "assertion": "MinorAxis ( ELLIPSE: l ) equals LINESEGMENT: V",
    "id": 4300,
    "declarations": "l: ELLIPSE; V: LINESEGMENT",
    "facts": "MinorAxis(l) = V"
},
{
    "assertion": "PerpendicularBisector ( LineSegmentOf ( UpperVertex ( CONICSECTION: l ), Incenter ( TRIANGLE: D ) ) ) equals OverlappingLine ( LINESEGMENT: O )",
    "id": 4301,
    "declarations": "l: CONICSECTION; D: TRIANGLE; O: LINESEGMENT",
    "facts": "PerpendicularBisector(LineSegmentOf(UpperVertex(l), Incenter(D))) = OverlappingLine(O)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: i ) equals Incenter ( TRIANGLE: B )",
    "id": 4302,
    "declarations": "i: CONICSECTION; B: TRIANGLE",
    "facts": "UpperVertex(i) = Incenter(B)"
},
{
    "assertion": "Negation ( Intercept ( LINE: a, AXIS: xAxis ) equals FocalLength ( CONICSECTION: h ) ) equals BOOL: False",
    "id": 4303,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Perimeter ( CONICSECTION: S ) equals YCoordinate ( POINT: L )",
    "id": 4304,
    "declarations": "S: CONICSECTION; L: POINT",
    "facts": "Perimeter(S) = YCoordinate(L)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: Z ) equals POINT: u",
    "id": 4305,
    "declarations": "Z: LINESEGMENT; u: POINT",
    "facts": "MidPoint(Z) = u"
},
{
    "assertion": "InterReciprocal ( NUMBER: 57 ) equals NUMBER: 71",
    "id": 4306,
    "declarations": "57: NUMBER; 71: NUMBER",
    "facts": "InterReciprocal(57) = 71"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: J ) equals Diameter ( CIRCLE: I )",
    "id": 4307,
    "declarations": "J: CONICSECTION; I: CIRCLE",
    "facts": "HalfFocalLength(J) = Diameter(I)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: c ) equals AXIS: xAxis",
    "id": 4308,
    "declarations": "c: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(c) = xAxis"
},
{
    "assertion": "Circumcenter ( TRIANGLE: V ) equals UpperFocus ( CONICSECTION: d )",
    "id": 4309,
    "declarations": "V: TRIANGLE; d: CONICSECTION",
    "facts": "Circumcenter(V) = UpperFocus(d)"
},
{
    "assertion": "Incenter ( TRIANGLE: B ) equals LeftVertex ( CONICSECTION: B )",
    "id": 4310,
    "declarations": "B: TRIANGLE; B: CONICSECTION",
    "facts": "Incenter(B) = LeftVertex(B)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: a, TRIANGLE: c ) equals BOOL: True",
    "id": 4311,
    "declarations": "a: CIRCLE; c: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(a, c) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: K ) equals POINT: L",
    "id": 4312,
    "declarations": "K: CONICSECTION; L: POINT",
    "facts": "LeftVertex(K) = L"
},
{
    "assertion": "RightFocus ( CONICSECTION: X ) equals MidPoint ( RealAxis ( ELLIPSE: H ) )",
    "id": 4313,
    "declarations": "X: CONICSECTION; H: ELLIPSE",
    "facts": "RightFocus(X) = MidPoint(RealAxis(H))"
},
{
    "assertion": "Projection ( Incenter ( TRIANGLE: G ), PerpendicularBisector ( LINESEGMENT: P ) ) equals POINT: O",
    "id": 4314,
    "declarations": "G: TRIANGLE; P: LINESEGMENT; O: POINT",
    "facts": "Projection(Incenter(G), PerpendicularBisector(P)) = O"
},
{
    "assertion": "Directrix ( CONICSECTION: D ) equals TangentOnPoint ( POINT: m, CURVE: L )",
    "id": 4315,
    "declarations": "D: CONICSECTION; m: POINT; L: CURVE",
    "facts": "Directrix(D) = TangentOnPoint(m, L)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: D ) equals POINT: K",
    "id": 4316,
    "declarations": "D: CONICSECTION; K: POINT",
    "facts": "LowerFocus(D) = K"
},
{
    "assertion": "PointOnCurve ( Incenter ( TRIANGLE: F ), CURVE: j ) equals BOOL: True",
    "id": 4317,
    "declarations": "F: TRIANGLE; j: CURVE; True: BOOL",
    "facts": "PointOnCurve(Incenter(F), j) = True"
},
{
    "assertion": "Projection ( POINT: f, TangentOfPoint ( UpperVertex ( CONICSECTION: b ), CURVE: R ) ) equals POINT: q",
    "id": 4318,
    "declarations": "f: POINT; b: CONICSECTION; R: CURVE; q: POINT",
    "facts": "Projection(f, TangentOfPoint(UpperVertex(b), R)) = q"
},
{
    "assertion": "InterReciprocal ( FocalLength ( CONICSECTION: t ) ) equals NUMBER: -29",
    "id": 4319,
    "declarations": "t: CONICSECTION; -29: NUMBER",
    "facts": "InterReciprocal(FocalLength(t)) = -29"
},
{
    "assertion": "ApplyUnit ( FocalLength ( CONICSECTION: A ), DEGREESTR: degree )",
    "id": 4320,
    "declarations": "A: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(FocalLength(A), degree) = dummy_operator()"
},
{
    "assertion": "InterReciprocal ( Perimeter ( CONICSECTION: i ) ) equals NUMBER: -10",
    "id": 4321,
    "declarations": "i: CONICSECTION; -10: NUMBER",
    "facts": "InterReciprocal(Perimeter(i)) = -10"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: F, CONICSECTION: W ) equals BOOL: False",
    "id": 4322,
    "declarations": "F: LINESEGMENT; W: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(F, W) = False"
},
{
    "assertion": "LineSegmentOf ( POINT: Y, Circumcenter ( TRIANGLE: D ) ) equals LINESEGMENT: A",
    "id": 4323,
    "declarations": "Y: POINT; D: TRIANGLE; A: LINESEGMENT",
    "facts": "LineSegmentOf(Y, Circumcenter(D)) = A"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: B ) equals LINE: d",
    "id": 4324,
    "declarations": "B: CONICSECTION; d: LINE",
    "facts": "RightDirectrix(B) = d"
},
{
    "assertion": "Directrix ( CONICSECTION: b ) equals LINE: K",
    "id": 4325,
    "declarations": "b: CONICSECTION; K: LINE",
    "facts": "Directrix(b) = K"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: p ) equals AXIS: yAxis",
    "id": 4326,
    "declarations": "p: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(p) = yAxis"
},
{
    "assertion": "Length ( LINESEGMENT: r ) equals NUMBER: 12",
    "id": 4327,
    "declarations": "r: LINESEGMENT; 12: NUMBER",
    "facts": "Length(r) = 12"
},
{
    "assertion": "IsPerpendicular ( LINE: K, LINE: K ) equals BOOL: False",
    "id": 4328,
    "declarations": "K: LINE; K: LINE; False: BOOL",
    "facts": "IsPerpendicular(K, K) = False"
},
{
    "assertion": "Expression ( CURVE: u ) equals EXPRESSION: x^2*space+*space4*y^2*space=*space16",
    "id": 4329,
    "declarations": "u: CURVE; x^2*space+*space4*y^2*space=*space16: EXPRESSION",
    "facts": "Expression(u) = x^2*space+*space4*y^2*space=*space16"
},
{
    "assertion": "IsParallel ( OverlappingLine ( LINESEGMENT: H ), LINE: C ) equals BOOL: True",
    "id": 4330,
    "declarations": "H: LINESEGMENT; C: LINE; True: BOOL",
    "facts": "IsParallel(OverlappingLine(H), C) = True"
},
{
    "assertion": "IsCircumCircle ( CircumCircle ( TRIANGLE: a ), TRIANGLE: o ) equals BOOL: True",
    "id": 4331,
    "declarations": "a: TRIANGLE; o: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(CircumCircle(a), o) = True"
},
{
    "assertion": "Vertex ( CONICSECTION: C ) equals POINT: D",
    "id": 4332,
    "declarations": "C: CONICSECTION; D: POINT",
    "facts": "Vertex(C) = D"
},
{
    "assertion": "PerpendicularBisector ( MajorAxis ( ELLIPSE: T ) ) equals TangentOnPoint ( LowerFocus ( CONICSECTION: A ), CURVE: I )",
    "id": 4333,
    "declarations": "T: ELLIPSE; A: CONICSECTION; I: CURVE",
    "facts": "PerpendicularBisector(MajorAxis(T)) = TangentOnPoint(LowerFocus(A), I)"
},
{
    "assertion": "XCoordinate ( POINT: B ) equals Eccentricity ( CONICSECTION: G )",
    "id": 4334,
    "declarations": "B: POINT; G: CONICSECTION",
    "facts": "XCoordinate(B) = Eccentricity(G)"
},
{
    "assertion": "TangentOnPoint ( Projection ( POINT: r, LeftDirectrix ( CONICSECTION: b ) ), CURVE: k ) equals LINE: d",
    "id": 4335,
    "declarations": "r: POINT; b: CONICSECTION; k: CURVE; d: LINE",
    "facts": "TangentOnPoint(Projection(r, LeftDirectrix(b)), k) = d"
},
{
    "assertion": "ApplyUnit ( NUMBER: -4, DEGREESTR: degree )",
    "id": 4336,
    "declarations": "-4: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-4, degree) = dummy_operator()"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: q, TriangleOf ( LowerVertex ( CONICSECTION: F ), LowerVertex ( CONICSECTION: c ), LeftFocus ( CONICSECTION: A ) ) ) equals BOOL: False",
    "id": 4337,
    "declarations": "q: CIRCLE; F: CONICSECTION; c: CONICSECTION; A: CONICSECTION; False: BOOL",
    "facts": "IsCircumCircle(q, TriangleOf(LowerVertex(F), LowerVertex(c), LeftFocus(A))) = False"
},
{
    "assertion": "Expression ( CURVE: Z ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 4338,
    "declarations": "Z: CURVE; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(Z) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "Asymptote ( HYPERBOLA: J ) equals LINE: J",
    "id": 4339,
    "declarations": "J: HYPERBOLA; J: LINE",
    "facts": "Asymptote(J) = J"
},
{
    "assertion": "Quadrant ( LeftFocus ( CONICSECTION: C ) ) equals NUMBER: -93",
    "id": 4340,
    "declarations": "C: CONICSECTION; -93: NUMBER",
    "facts": "Quadrant(LeftFocus(C)) = -93"
},
{
    "assertion": "sqrt ( sqrt ( NUMBER: 28 ) ) equals Area ( CONICSECTION: v )",
    "id": 4341,
    "declarations": "28: NUMBER; v: CONICSECTION",
    "facts": "sqrt(sqrt(28)) = Area(v)"
},
{
    "assertion": "RightPart ( HYPERBOLA: l ) equals CURVE: z",
    "id": 4342,
    "declarations": "l: HYPERBOLA; z: CURVE",
    "facts": "RightPart(l) = z"
},
{
    "assertion": "UpperVertex ( CONICSECTION: b ) equals POINT: y",
    "id": 4343,
    "declarations": "b: CONICSECTION; y: POINT",
    "facts": "UpperVertex(b) = y"
},
{
    "assertion": "Length ( RealAxis ( ELLIPSE: i ) ) equals YCoordinate ( RightFocus ( CONICSECTION: I ) )",
    "id": 4344,
    "declarations": "i: ELLIPSE; I: CONICSECTION",
    "facts": "Length(RealAxis(i)) = YCoordinate(RightFocus(I))"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: B ) equals LINE: K",
    "id": 4345,
    "declarations": "B: LINESEGMENT; K: LINE",
    "facts": "OverlappingLine(B) = K"
},
{
    "assertion": "LocusEquation ( LowerFocus ( CONICSECTION: U ) ) equals EXPRESSION: x*space+*spacey^2*space=*space1",
    "id": 4346,
    "declarations": "U: CONICSECTION; x*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(LowerFocus(U)) = x*space+*spacey^2*space=*space1"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( LINESEGMENT: W ) ) equals Slope ( LINE: V )",
    "id": 4347,
    "declarations": "W: LINESEGMENT; V: LINE",
    "facts": "Inclination(PerpendicularBisector(W)) = Slope(V)"
},
{
    "assertion": "YCoordinate ( Circumcenter ( TRIANGLE: J ) ) equals NUMBER: 66",
    "id": 4348,
    "declarations": "J: TRIANGLE; 66: NUMBER",
    "facts": "YCoordinate(Circumcenter(J)) = 66"
},
{
    "assertion": "Abs ( LINESEGMENT: H ) equals NumIntersection ( LeftPart ( HYPERBOLA: m ), CURVE: p )",
    "id": 4349,
    "declarations": "H: LINESEGMENT; m: HYPERBOLA; p: CURVE",
    "facts": "Abs(H) = NumIntersection(LeftPart(m), p)"
},
{
    "assertion": "TangentOfPoint ( Incenter ( TRIANGLE: h ), CURVE: t ) equals LINE: R",
    "id": 4350,
    "declarations": "h: TRIANGLE; t: CURVE; R: LINE",
    "facts": "TangentOfPoint(Incenter(h), t) = R"
},
{
    "assertion": "Diameter ( CIRCLE: p ) equals NUMBER: 41",
    "id": 4351,
    "declarations": "p: CIRCLE; 41: NUMBER",
    "facts": "Diameter(p) = 41"
},
{
    "assertion": "LocusEquation ( POINT: E ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 4352,
    "declarations": "E: POINT; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "LocusEquation(E) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "MajorAxis ( ELLIPSE: s ) equals LINESEGMENT: h",
    "id": 4353,
    "declarations": "s: ELLIPSE; h: LINESEGMENT",
    "facts": "MajorAxis(s) = h"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: c, TRIANGLE: Z ) equals BOOL: False",
    "id": 4354,
    "declarations": "c: CIRCLE; Z: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(c, Z) = False"
},
{
    "assertion": "Eccentricity ( CONICSECTION: X ) equals FocalLength ( CONICSECTION: D )",
    "id": 4355,
    "declarations": "X: CONICSECTION; D: CONICSECTION",
    "facts": "Eccentricity(X) = FocalLength(D)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: l ) equals PerpendicularBisector ( LINESEGMENT: t )",
    "id": 4356,
    "declarations": "l: LINESEGMENT; t: LINESEGMENT",
    "facts": "PerpendicularBisector(l) = PerpendicularBisector(t)"
},
{
    "assertion": "FocalLength ( CONICSECTION: W ) equals NUMBER: 39",
    "id": 4357,
    "declarations": "W: CONICSECTION; 39: NUMBER",
    "facts": "FocalLength(W) = 39"
},
{
    "assertion": "CircumCircle ( TRIANGLE: f ) equals CIRCLE: d",
    "id": 4358,
    "declarations": "f: TRIANGLE; d: CIRCLE",
    "facts": "CircumCircle(f) = d"
},
{
    "assertion": "RealAxis ( ELLIPSE: U ) equals LINESEGMENT: b",
    "id": 4359,
    "declarations": "U: ELLIPSE; b: LINESEGMENT",
    "facts": "RealAxis(U) = b"
},
{
    "assertion": "Max ( NUMBER: 59 ) equals NUMBER: 31",
    "id": 4360,
    "declarations": "59: NUMBER; 31: NUMBER",
    "facts": "Max(59) = 31"
},
{
    "assertion": "Intercept ( LINE: v, AXIS: xAxis ) equals Inclination ( LINE: z )",
    "id": 4361,
    "declarations": "v: LINE; xAxis: AXIS; z: LINE",
    "facts": "Intercept(v, xAxis) = Inclination(z)"
},
{
    "assertion": "Focus ( CONICSECTION: d ) equals POINT: h",
    "id": 4362,
    "declarations": "d: CONICSECTION; h: POINT",
    "facts": "Focus(d) = h"
},
{
    "assertion": "TangentOfPoint ( LeftFocus ( CONICSECTION: j ), RightPart ( HYPERBOLA: W ) ) equals LINE: s",
    "id": 4363,
    "declarations": "j: CONICSECTION; W: HYPERBOLA; s: LINE",
    "facts": "TangentOfPoint(LeftFocus(j), RightPart(W)) = s"
},
{
    "assertion": "Between ( LowerVertex ( CONICSECTION: H ), POINT: F, POINT: W ) equals BOOL: True",
    "id": 4364,
    "declarations": "H: CONICSECTION; F: POINT; W: POINT; True: BOOL",
    "facts": "Between(LowerVertex(H), F, W) = True"
},
{
    "assertion": "Min ( NUMBER: 19 ) equals Distance ( POINT: b, POINT: K )",
    "id": 4365,
    "declarations": "19: NUMBER; b: POINT; K: POINT",
    "facts": "Min(19) = Distance(b, K)"
},
{
    "assertion": "LocusEquation ( RightVertex ( CONICSECTION: h ) ) equals EXPRESSION: y*space=*spacee^x",
    "id": 4366,
    "declarations": "h: CONICSECTION; y*space=*spacee^x: EXPRESSION",
    "facts": "LocusEquation(RightVertex(h)) = y*space=*spacee^x"
},
{
    "assertion": "Focus ( CONICSECTION: T ) equals Incenter ( TRIANGLE: t )",
    "id": 4367,
    "declarations": "T: CONICSECTION; t: TRIANGLE",
    "facts": "Focus(T) = Incenter(t)"
},
{
    "assertion": "PointOnCurve ( Orthocenter ( TRIANGLE: y ), LeftPart ( HYPERBOLA: p ) ) equals BOOL: True",
    "id": 4368,
    "declarations": "y: TRIANGLE; p: HYPERBOLA; True: BOOL",
    "facts": "PointOnCurve(Orthocenter(y), LeftPart(p)) = True"
},
{
    "assertion": "Intersection ( CURVE: o, RightPart ( HYPERBOLA: e ) ) equals RightVertex ( CONICSECTION: p )",
    "id": 4369,
    "declarations": "o: CURVE; e: HYPERBOLA; p: CONICSECTION",
    "facts": "Intersection(o, RightPart(e)) = RightVertex(p)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: A ) equals POINT: P",
    "id": 4370,
    "declarations": "A: CONICSECTION; P: POINT",
    "facts": "LeftFocus(A) = P"
},
{
    "assertion": "Directrix ( CONICSECTION: P ) equals RightDirectrix ( CONICSECTION: h )",
    "id": 4371,
    "declarations": "P: CONICSECTION; h: CONICSECTION",
    "facts": "Directrix(P) = RightDirectrix(h)"
},
{
    "assertion": "IsInTangent ( CIRCLE: x, CIRCLE: I ) equals BOOL: True",
    "id": 4372,
    "declarations": "x: CIRCLE; I: CIRCLE; True: BOOL",
    "facts": "IsInTangent(x, I) = True"
},
{
    "assertion": "Expression ( CURVE: i ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 4373,
    "declarations": "i: CURVE; y*space=*spacelog(x): EXPRESSION",
    "facts": "Expression(i) = y*space=*spacelog(x)"
},
{
    "assertion": "Radius ( CIRCLE: V ) equals XCoordinate ( UpperVertex ( CONICSECTION: i ) )",
    "id": 4374,
    "declarations": "V: CIRCLE; i: CONICSECTION",
    "facts": "Radius(V) = XCoordinate(UpperVertex(i))"
},
{
    "assertion": "Directrix ( CONICSECTION: i ) equals LINE: n",
    "id": 4375,
    "declarations": "i: CONICSECTION; n: LINE",
    "facts": "Directrix(i) = n"
},
{
    "assertion": "Endpoint ( LINESEGMENT: g ) equals POINT: n",
    "id": 4376,
    "declarations": "g: LINESEGMENT; n: POINT",
    "facts": "Endpoint(g) = n"
},
{
    "assertion": "Directrix ( CONICSECTION: q ) equals LINE: J",
    "id": 4377,
    "declarations": "q: CONICSECTION; J: LINE",
    "facts": "Directrix(q) = J"
},
{
    "assertion": "MinorAxis ( ELLIPSE: H ) equals ImaginaryAxis ( ELLIPSE: U )",
    "id": 4378,
    "declarations": "H: ELLIPSE; U: ELLIPSE",
    "facts": "MinorAxis(H) = ImaginaryAxis(U)"
},
{
    "assertion": "TriangleOf ( UpperFocus ( CONICSECTION: j ), UpperFocus ( CONICSECTION: F ), RightVertex ( CONICSECTION: V ) ) equals TRIANGLE: P",
    "id": 4379,
    "declarations": "j: CONICSECTION; F: CONICSECTION; V: CONICSECTION; P: TRIANGLE",
    "facts": "TriangleOf(UpperFocus(j), UpperFocus(F), RightVertex(V)) = P"
},
{
    "assertion": "RightVertex ( CONICSECTION: Q ) equals LeftFocus ( CONICSECTION: b )",
    "id": 4380,
    "declarations": "Q: CONICSECTION; b: CONICSECTION",
    "facts": "RightVertex(Q) = LeftFocus(b)"
},
{
    "assertion": "RightPart ( HYPERBOLA: r ) equals CURVE: K",
    "id": 4381,
    "declarations": "r: HYPERBOLA; K: CURVE",
    "facts": "RightPart(r) = K"
},
{
    "assertion": "Asymptote ( HYPERBOLA: s ) equals LINE: A",
    "id": 4382,
    "declarations": "s: HYPERBOLA; A: LINE",
    "facts": "Asymptote(s) = A"
},
{
    "assertion": "MinorAxis ( ELLIPSE: H ) equals LINESEGMENT: W",
    "id": 4383,
    "declarations": "H: ELLIPSE; W: LINESEGMENT",
    "facts": "MinorAxis(H) = W"
},
{
    "assertion": "LeftPart ( HYPERBOLA: Z ) equals CURVE: b",
    "id": 4384,
    "declarations": "Z: HYPERBOLA; b: CURVE",
    "facts": "LeftPart(Z) = b"
},
{
    "assertion": "FootPoint ( LeftDirectrix ( CONICSECTION: M ), LINE: U ) equals Center ( CONICSECTION: i )",
    "id": 4385,
    "declarations": "M: CONICSECTION; U: LINE; i: CONICSECTION",
    "facts": "FootPoint(LeftDirectrix(M), U) = Center(i)"
},
{
    "assertion": "NumIntersection ( LeftPart ( HYPERBOLA: a ), CURVE: V ) equals Quadrant ( POINT: m )",
    "id": 4386,
    "declarations": "a: HYPERBOLA; V: CURVE; m: POINT",
    "facts": "NumIntersection(LeftPart(a), V) = Quadrant(m)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: g ) equals UpperFocus ( CONICSECTION: k )",
    "id": 4387,
    "declarations": "g: TRIANGLE; k: CONICSECTION",
    "facts": "Orthocenter(g) = UpperFocus(k)"
},
{
    "assertion": "Expression ( CURVE: D ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 4388,
    "declarations": "D: CURVE; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "Expression(D) = x*space+*spacey*space=*space5"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: A, CIRCLE: J ) equals BOOL: True",
    "id": 4389,
    "declarations": "A: LINESEGMENT; J: CIRCLE; True: BOOL",
    "facts": "IsDiameter(A, J) = True"
},
{
    "assertion": "RightPart ( HYPERBOLA: A ) equals CURVE: w",
    "id": 4390,
    "declarations": "A: HYPERBOLA; w: CURVE",
    "facts": "RightPart(A) = w"
},
{
    "assertion": "Perimeter ( CONICSECTION: c ) equals Abs ( ImaginaryAxis ( ELLIPSE: g ) )",
    "id": 4391,
    "declarations": "c: CONICSECTION; g: ELLIPSE",
    "facts": "Perimeter(c) = Abs(ImaginaryAxis(g))"
},
{
    "assertion": "IsParallel ( RightDirectrix ( CONICSECTION: k ), LINE: N ) equals BOOL: True",
    "id": 4392,
    "declarations": "k: CONICSECTION; N: LINE; True: BOOL",
    "facts": "IsParallel(RightDirectrix(k), N) = True"
},
{
    "assertion": "IsParallel ( LINE: A, LINE: f ) equals BOOL: True",
    "id": 4393,
    "declarations": "A: LINE; f: LINE; True: BOOL",
    "facts": "IsParallel(A, f) = True"
},
{
    "assertion": "Radius ( CIRCLE: m ) equals Distance ( POINT: p, RightFocus ( CONICSECTION: F ) )",
    "id": 4394,
    "declarations": "m: CIRCLE; p: POINT; F: CONICSECTION",
    "facts": "Radius(m) = Distance(p, RightFocus(F))"
},
{
    "assertion": "Max ( sqrt ( Slope ( LINE: l ) ) ) equals Diameter ( CIRCLE: P )",
    "id": 4395,
    "declarations": "l: LINE; P: CIRCLE",
    "facts": "Max(sqrt(Slope(l))) = Diameter(P)"
},
{
    "assertion": "RealAxis ( ELLIPSE: N ) equals LINESEGMENT: C",
    "id": 4396,
    "declarations": "N: ELLIPSE; C: LINESEGMENT",
    "facts": "RealAxis(N) = C"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: c ) equals LINESEGMENT: Q",
    "id": 4398,
    "declarations": "c: ELLIPSE; Q: LINESEGMENT",
    "facts": "ImaginaryAxis(c) = Q"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: H, TRIANGLE: Z ) equals BOOL: True",
    "id": 4399,
    "declarations": "H: CIRCLE; Z: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(H, Z) = True"
},
{
    "assertion": "sqrt ( Min ( HalfFocalLength ( CONICSECTION: r ) ) ) equals Diameter ( CIRCLE: y )",
    "id": 4400,
    "declarations": "r: CONICSECTION; y: CIRCLE",
    "facts": "sqrt(Min(HalfFocalLength(r))) = Diameter(y)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: R ) equals Incenter ( TRIANGLE: M )",
    "id": 4401,
    "declarations": "R: TRIANGLE; M: TRIANGLE",
    "facts": "Orthocenter(R) = Incenter(M)"
},
{
    "assertion": "Vertex ( CONICSECTION: l ) equals POINT: g",
    "id": 4402,
    "declarations": "l: CONICSECTION; g: POINT",
    "facts": "Vertex(l) = g"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: K, TRIANGLE: X ) equals BOOL: False",
    "id": 4403,
    "declarations": "K: CIRCLE; X: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(K, X) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: g ) equals UpperVertex ( CONICSECTION: u )",
    "id": 4404,
    "declarations": "g: CONICSECTION; u: CONICSECTION",
    "facts": "LowerVertex(g) = UpperVertex(u)"
},
{
    "assertion": "TangentOfPoint ( RightFocus ( CONICSECTION: x ), CURVE: j ) equals LeftDirectrix ( CONICSECTION: Q )",
    "id": 4405,
    "declarations": "x: CONICSECTION; j: CURVE; Q: CONICSECTION",
    "facts": "TangentOfPoint(RightFocus(x), j) = LeftDirectrix(Q)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: t ) equals POINT: I",
    "id": 4406,
    "declarations": "t: CONICSECTION; I: POINT",
    "facts": "UpperVertex(t) = I"
},
{
    "assertion": "Incenter ( TRIANGLE: Y ) equals POINT: e",
    "id": 4407,
    "declarations": "Y: TRIANGLE; e: POINT",
    "facts": "Incenter(Y) = e"
},
{
    "assertion": "IsParallel ( LINE: J, LINE: d ) equals BOOL: False",
    "id": 4408,
    "declarations": "J: LINE; d: LINE; False: BOOL",
    "facts": "IsParallel(J, d) = False"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: V ) equals LeftDirectrix ( CONICSECTION: p )",
    "id": 4409,
    "declarations": "V: LINESEGMENT; p: CONICSECTION",
    "facts": "PerpendicularBisector(V) = LeftDirectrix(p)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: s ) equals Incenter ( TRIANGLE: Q )",
    "id": 4410,
    "declarations": "s: CONICSECTION; Q: TRIANGLE",
    "facts": "UpperVertex(s) = Incenter(Q)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: H ) equals Center ( CONICSECTION: F )",
    "id": 4411,
    "declarations": "H: CONICSECTION; F: CONICSECTION",
    "facts": "LeftFocus(H) = Center(F)"
},
{
    "assertion": "sqrt ( NUMBER: -35 ) equals NUMBER: 94",
    "id": 4413,
    "declarations": "-35: NUMBER; 94: NUMBER",
    "facts": "sqrt(-35) = 94"
},
{
    "assertion": "Orthocenter ( TRIANGLE: m ) equals POINT: y",
    "id": 4414,
    "declarations": "m: TRIANGLE; y: POINT",
    "facts": "Orthocenter(m) = y"
},
{
    "assertion": "PointOnCurve ( POINT: u, CURVE: n ) equals BOOL: False",
    "id": 4415,
    "declarations": "u: POINT; n: CURVE; False: BOOL",
    "facts": "PointOnCurve(u, n) = False"
},
{
    "assertion": "Expression ( CURVE: K ) equals LocusEquation ( LowerVertex ( CONICSECTION: J ) )",
    "id": 4416,
    "declarations": "K: CURVE; J: CONICSECTION",
    "facts": "Expression(K) = LocusEquation(LowerVertex(J))"
},
{
    "assertion": "ApplyUnit ( XCoordinate ( LeftVertex ( CONICSECTION: d ) ), DEGREESTR: degree )",
    "id": 4417,
    "declarations": "d: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(XCoordinate(LeftVertex(d)), degree) = dummy_operator()"
},
{
    "assertion": "IsCircumCircle ( CircumCircle ( TRIANGLE: R ), TRIANGLE: y ) equals BOOL: True",
    "id": 4418,
    "declarations": "R: TRIANGLE; y: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(CircumCircle(R), y) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: c ) equals RightFocus ( CONICSECTION: S )",
    "id": 4419,
    "declarations": "c: TRIANGLE; S: CONICSECTION",
    "facts": "Circumcenter(c) = RightFocus(S)"
},
{
    "assertion": "FocalLength ( CONICSECTION: U ) equals DotProduct ( VECTOR: l, VECTOR: X )",
    "id": 4420,
    "declarations": "U: CONICSECTION; l: VECTOR; X: VECTOR",
    "facts": "FocalLength(U) = DotProduct(l, X)"
},
{
    "assertion": "RightVertex ( CONICSECTION: i ) equals LeftFocus ( CONICSECTION: M )",
    "id": 4421,
    "declarations": "i: CONICSECTION; M: CONICSECTION",
    "facts": "RightVertex(i) = LeftFocus(M)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: E ) equals LINESEGMENT: r",
    "id": 4422,
    "declarations": "E: ELLIPSE; r: LINESEGMENT",
    "facts": "ImaginaryAxis(E) = r"
},
{
    "assertion": "ApplyUnit ( Inclination ( LineOf ( POINT: O, Center ( CONICSECTION: H ) ) ), DEGREESTR: degree )",
    "id": 4423,
    "declarations": "O: POINT; H: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Inclination(LineOf(O, Center(H))), degree) = dummy_operator()"
},
{
    "assertion": "Perimeter ( CONICSECTION: b ) equals NUMBER: -53",
    "id": 4424,
    "declarations": "b: CONICSECTION; -53: NUMBER",
    "facts": "Perimeter(b) = -53"
},
{
    "assertion": "lg ( YCoordinate ( POINT: v ) ) equals Eccentricity ( CONICSECTION: i )",
    "id": 4425,
    "declarations": "v: POINT; i: CONICSECTION",
    "facts": "lg(YCoordinate(v)) = Eccentricity(i)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: n ) equals CIRCLE: S",
    "id": 4426,
    "declarations": "n: TRIANGLE; S: CIRCLE",
    "facts": "CircumCircle(n) = S"
},
{
    "assertion": "RealAxis ( ELLIPSE: E ) equals LINESEGMENT: L",
    "id": 4427,
    "declarations": "E: ELLIPSE; L: LINESEGMENT",
    "facts": "RealAxis(E) = L"
},
{
    "assertion": "Area ( CONICSECTION: q ) equals Min ( Abs ( MinorAxis ( ELLIPSE: g ) ) )",
    "id": 4428,
    "declarations": "q: CONICSECTION; g: ELLIPSE",
    "facts": "Area(q) = Min(Abs(MinorAxis(g)))"
},
{
    "assertion": "Length ( LINESEGMENT: R ) equals NumIntersection ( CURVE: R, CURVE: n )",
    "id": 4429,
    "declarations": "R: LINESEGMENT; R: CURVE; n: CURVE",
    "facts": "Length(R) = NumIntersection(R, n)"
},
{
    "assertion": "IsIntersect ( CURVE: N, CURVE: z ) equals BOOL: False",
    "id": 4430,
    "declarations": "N: CURVE; z: CURVE; False: BOOL",
    "facts": "IsIntersect(N, z) = False"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: H ) equals OverlappingLine ( InterceptChord ( LINE: a, CONICSECTION: H ) )",
    "id": 4431,
    "declarations": "H: CONICSECTION; a: LINE; H: CONICSECTION",
    "facts": "LeftDirectrix(H) = OverlappingLine(InterceptChord(a, H))"
},
{
    "assertion": "RightFocus ( CONICSECTION: o ) equals Orthocenter ( TRIANGLE: S )",
    "id": 4432,
    "declarations": "o: CONICSECTION; S: TRIANGLE",
    "facts": "RightFocus(o) = Orthocenter(S)"
},
{
    "assertion": "RightFocus ( CONICSECTION: f ) equals POINT: w",
    "id": 4433,
    "declarations": "f: CONICSECTION; w: POINT",
    "facts": "RightFocus(f) = w"
},
{
    "assertion": "TangentOnPoint ( LowerFocus ( CONICSECTION: Y ), CURVE: k ) equals LINE: h",
    "id": 4434,
    "declarations": "Y: CONICSECTION; k: CURVE; h: LINE",
    "facts": "TangentOnPoint(LowerFocus(Y), k) = h"
},
{
    "assertion": "TangentPoint ( TangentOfPoint ( POINT: i, CURVE: a ), CIRCLE: H ) equals POINT: k",
    "id": 4435,
    "declarations": "i: POINT; a: CURVE; H: CIRCLE; k: POINT",
    "facts": "TangentPoint(TangentOfPoint(i, a), H) = k"
},
{
    "assertion": "LocusEquation ( POINT: a ) equals EXPRESSION: x^2*space+*space(y*space-*space2)^2*space=*space4",
    "id": 4436,
    "declarations": "a: POINT; x^2*space+*space(y*space-*space2)^2*space=*space4: EXPRESSION",
    "facts": "LocusEquation(a) = x^2*space+*space(y*space-*space2)^2*space=*space4"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: T, CONICSECTION: O ) equals BOOL: True",
    "id": 4437,
    "declarations": "T: LINESEGMENT; O: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(T, O) = True"
},
{
    "assertion": "TriangleOf ( POINT: I, RightFocus ( CONICSECTION: S ), Orthocenter ( TRIANGLE: b ) ) equals TRIANGLE: S",
    "id": 4438,
    "declarations": "I: POINT; S: CONICSECTION; b: TRIANGLE; S: TRIANGLE",
    "facts": "TriangleOf(I, RightFocus(S), Orthocenter(b)) = S"
},
{
    "assertion": "IsTangent ( OverlappingLine ( LINESEGMENT: m ), CONICSECTION: k ) equals BOOL: True",
    "id": 4439,
    "declarations": "m: LINESEGMENT; k: CONICSECTION; True: BOOL",
    "facts": "IsTangent(OverlappingLine(m), k) = True"
},
{
    "assertion": "DotProduct ( VECTOR: J, VECTOR: U ) equals NUMBER: 97",
    "id": 4440,
    "declarations": "J: VECTOR; U: VECTOR; 97: NUMBER",
    "facts": "DotProduct(J, U) = 97"
},
{
    "assertion": "MajorAxis ( ELLIPSE: Q ) equals MajorAxis ( ELLIPSE: g )",
    "id": 4442,
    "declarations": "Q: ELLIPSE; g: ELLIPSE",
    "facts": "MajorAxis(Q) = MajorAxis(g)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: J ) equals POINT: o",
    "id": 4443,
    "declarations": "J: CONICSECTION; o: POINT",
    "facts": "LeftVertex(J) = o"
},
{
    "assertion": "LeftVertex ( CONICSECTION: o ) equals POINT: w",
    "id": 4444,
    "declarations": "o: CONICSECTION; w: POINT",
    "facts": "LeftVertex(o) = w"
},
{
    "assertion": "ApplyUnit ( NUMBER: -2, DEGREESTR: degree )",
    "id": 4445,
    "declarations": "-2: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-2, degree) = dummy_operator()"
},
{
    "assertion": "Circumcenter ( TRIANGLE: L ) equals RightVertex ( CONICSECTION: P )",
    "id": 4446,
    "declarations": "L: TRIANGLE; P: CONICSECTION",
    "facts": "Circumcenter(L) = RightVertex(P)"
},
{
    "assertion": "Expression ( CURVE: E ) equals EXPRESSION: y*space=*spacetan(x)",
    "id": 4447,
    "declarations": "E: CURVE; y*space=*spacetan(x): EXPRESSION",
    "facts": "Expression(E) = y*space=*spacetan(x)"
},
{
    "assertion": "Expression ( CURVE: z ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 4448,
    "declarations": "z: CURVE; y*space=*spacesin(x): EXPRESSION",
    "facts": "Expression(z) = y*space=*spacesin(x)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: y ) equals UpperFocus ( CONICSECTION: T )",
    "id": 4449,
    "declarations": "y: TRIANGLE; T: CONICSECTION",
    "facts": "Circumcenter(y) = UpperFocus(T)"
},
{
    "assertion": "ApplyUnit ( InterReciprocal ( Quadrant ( Projection ( POINT: F, LINE: D ) ) ), DEGREESTR: degree )",
    "id": 4450,
    "declarations": "F: POINT; D: LINE; degree: DEGREESTR",
    "facts": "ApplyUnit(InterReciprocal(Quadrant(Projection(F, D))), degree) = dummy_operator()"
},
{
    "assertion": "LowerVertex ( CONICSECTION: a ) equals Incenter ( TRIANGLE: F )",
    "id": 4451,
    "declarations": "a: CONICSECTION; F: TRIANGLE",
    "facts": "LowerVertex(a) = Incenter(F)"
},
{
    "assertion": "Between ( POINT: B, Projection ( Projection ( UpperFocus ( CONICSECTION: W ), LINE: D ), LINE: E ), RightVertex ( CONICSECTION: x ) ) equals BOOL: True",
    "id": 4452,
    "declarations": "B: POINT; W: CONICSECTION; D: LINE; E: LINE; x: CONICSECTION; True: BOOL",
    "facts": "Between(B, Projection(Projection(UpperFocus(W), D), E), RightVertex(x)) = True"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: u, CIRCLE: F ) equals BOOL: True",
    "id": 4453,
    "declarations": "u: LINESEGMENT; F: CIRCLE; True: BOOL",
    "facts": "IsDiameter(u, F) = True"
},
{
    "assertion": "FocalLength ( CONICSECTION: m ) equals NUMBER: -19",
    "id": 4454,
    "declarations": "m: CONICSECTION; -19: NUMBER",
    "facts": "FocalLength(m) = -19"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: f ) equals LINE: m",
    "id": 4455,
    "declarations": "f: CONICSECTION; m: LINE",
    "facts": "RightDirectrix(f) = m"
},
{
    "assertion": "Slope ( LINE: p ) equals Quadrant ( LeftFocus ( CONICSECTION: P ) )",
    "id": 4456,
    "declarations": "p: LINE; P: CONICSECTION",
    "facts": "Slope(p) = Quadrant(LeftFocus(P))"
},
{
    "assertion": "IsInTangent ( CIRCLE: H, CircumCircle ( TriangleOf ( LeftFocus ( CONICSECTION: Z ), Center ( CONICSECTION: d ), POINT: A ) ) ) equals BOOL: False",
    "id": 4457,
    "declarations": "H: CIRCLE; Z: CONICSECTION; d: CONICSECTION; A: POINT; False: BOOL",
    "facts": "IsInTangent(H, CircumCircle(TriangleOf(LeftFocus(Z), Center(d), A))) = False"
},
{
    "assertion": "lg ( NUMBER: 58 ) equals NUMBER: -6",
    "id": 4458,
    "declarations": "58: NUMBER; -6: NUMBER",
    "facts": "lg(58) = -6"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: A, TRIANGLE: N ) equals BOOL: False",
    "id": 4459,
    "declarations": "A: CIRCLE; N: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(A, N) = False"
},
{
    "assertion": "LineSegmentOf ( Projection ( UpperVertex ( CONICSECTION: d ), LINE: W ), RightVertex ( CONICSECTION: y ) ) equals MajorAxis ( ELLIPSE: t )",
    "id": 4460,
    "declarations": "d: CONICSECTION; W: LINE; y: CONICSECTION; t: ELLIPSE",
    "facts": "LineSegmentOf(Projection(UpperVertex(d), W), RightVertex(y)) = MajorAxis(t)"
},
{
    "assertion": "Abs ( LINESEGMENT: G ) equals YCoordinate ( POINT: v )",
    "id": 4461,
    "declarations": "G: LINESEGMENT; v: POINT",
    "facts": "Abs(G) = YCoordinate(v)"
},
{
    "assertion": "RightVertex ( CONICSECTION: l ) equals LeftVertex ( CONICSECTION: P )",
    "id": 4462,
    "declarations": "l: CONICSECTION; P: CONICSECTION",
    "facts": "RightVertex(l) = LeftVertex(P)"
},
{
    "assertion": "Radius ( CIRCLE: A ) equals NumIntersection ( RightPart ( HYPERBOLA: w ), CURVE: U )",
    "id": 4463,
    "declarations": "A: CIRCLE; w: HYPERBOLA; U: CURVE",
    "facts": "Radius(A) = NumIntersection(RightPart(w), U)"
},
{
    "assertion": "IsTangent ( LINE: S, CONICSECTION: S ) equals BOOL: True",
    "id": 4464,
    "declarations": "S: LINE; S: CONICSECTION; True: BOOL",
    "facts": "IsTangent(S, S) = True"
},
{
    "assertion": "Eccentricity ( CONICSECTION: l ) equals Diameter ( CIRCLE: c )",
    "id": 4465,
    "declarations": "l: CONICSECTION; c: CIRCLE",
    "facts": "Eccentricity(l) = Diameter(c)"
},
{
    "assertion": "TangentOfPoint ( POINT: B, CURVE: g ) equals LINE: E",
    "id": 4466,
    "declarations": "B: POINT; g: CURVE; E: LINE",
    "facts": "TangentOfPoint(B, g) = E"
},
{
    "assertion": "FocalLength ( CONICSECTION: F ) equals Abs ( LineSegmentOf ( FootPoint ( TangentOfPoint ( Center ( CONICSECTION: b ), CURVE: v ), LINE: M ), RightFocus ( CONICSECTION: v ) ) )",
    "id": 4467,
    "declarations": "F: CONICSECTION; b: CONICSECTION; v: CURVE; M: LINE; v: CONICSECTION",
    "facts": "FocalLength(F) = Abs(LineSegmentOf(FootPoint(TangentOfPoint(Center(b), v), M), RightFocus(v)))"
},
{
    "assertion": "PointOnCurve ( RightFocus ( CONICSECTION: H ), CURVE: C ) equals BOOL: True",
    "id": 4468,
    "declarations": "H: CONICSECTION; C: CURVE; True: BOOL",
    "facts": "PointOnCurve(RightFocus(H), C) = True"
},
{
    "assertion": "NumIntersection ( CURVE: n, CURVE: h ) equals InterReciprocal ( Diameter ( CIRCLE: j ) )",
    "id": 4469,
    "declarations": "n: CURVE; h: CURVE; j: CIRCLE",
    "facts": "NumIntersection(n, h) = InterReciprocal(Diameter(j))"
},
{
    "assertion": "XCoordinate ( POINT: E ) equals NUMBER: -50",
    "id": 4470,
    "declarations": "E: POINT; -50: NUMBER",
    "facts": "XCoordinate(E) = -50"
},
{
    "assertion": "Eccentricity ( CONICSECTION: v ) equals NUMBER: -52",
    "id": 4471,
    "declarations": "v: CONICSECTION; -52: NUMBER",
    "facts": "Eccentricity(v) = -52"
},
{
    "assertion": "Vertex ( CONICSECTION: y ) equals POINT: C",
    "id": 4472,
    "declarations": "y: CONICSECTION; C: POINT",
    "facts": "Vertex(y) = C"
},
{
    "assertion": "TangentPoint ( LINE: D, CIRCLE: g ) equals POINT: F",
    "id": 4473,
    "declarations": "D: LINE; g: CIRCLE; F: POINT",
    "facts": "TangentPoint(D, g) = F"
},
{
    "assertion": "Endpoint ( RealAxis ( ELLIPSE: Q ) ) equals LowerFocus ( CONICSECTION: M )",
    "id": 4474,
    "declarations": "Q: ELLIPSE; M: CONICSECTION",
    "facts": "Endpoint(RealAxis(Q)) = LowerFocus(M)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: J, CIRCLE: N ) equals BOOL: True",
    "id": 4475,
    "declarations": "J: CIRCLE; N: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(J, N) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: I ) equals POINT: n",
    "id": 4476,
    "declarations": "I: CONICSECTION; n: POINT",
    "facts": "LeftVertex(I) = n"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: W ) equals NUMBER: -29",
    "id": 4477,
    "declarations": "W: CONICSECTION; -29: NUMBER",
    "facts": "HalfFocalLength(W) = -29"
},
{
    "assertion": "LineSegmentOf ( POINT: n, RightFocus ( CONICSECTION: l ) ) equals LINESEGMENT: u",
    "id": 4478,
    "declarations": "n: POINT; l: CONICSECTION; u: LINESEGMENT",
    "facts": "LineSegmentOf(n, RightFocus(l)) = u"
},
{
    "assertion": "Circumcenter ( TRIANGLE: n ) equals POINT: x",
    "id": 4479,
    "declarations": "n: TRIANGLE; x: POINT",
    "facts": "Circumcenter(n) = x"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: t ) equals RightDirectrix ( CONICSECTION: e )",
    "id": 4480,
    "declarations": "t: LINESEGMENT; e: CONICSECTION",
    "facts": "PerpendicularBisector(t) = RightDirectrix(e)"
},
{
    "assertion": "DotProduct ( VECTOR: T, VECTOR: z ) equals NUMBER: -6",
    "id": 4481,
    "declarations": "T: VECTOR; z: VECTOR; -6: NUMBER",
    "facts": "DotProduct(T, z) = -6"
},
{
    "assertion": "Abs ( LINESEGMENT: C ) equals lg ( Slope ( LINE: i ) )",
    "id": 4482,
    "declarations": "C: LINESEGMENT; i: LINE",
    "facts": "Abs(C) = lg(Slope(i))"
},
{
    "assertion": "Locus ( Center ( CONICSECTION: D ) ) equals Locus ( RightFocus ( CONICSECTION: H ) )",
    "id": 4483,
    "declarations": "D: CONICSECTION; H: CONICSECTION",
    "facts": "Locus(Center(D)) = Locus(RightFocus(H))"
},
{
    "assertion": "Area ( CONICSECTION: p ) equals Eccentricity ( CONICSECTION: s )",
    "id": 4484,
    "declarations": "p: CONICSECTION; s: CONICSECTION",
    "facts": "Area(p) = Eccentricity(s)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: g ) equals MidPoint ( MajorAxis ( ELLIPSE: S ) )",
    "id": 4485,
    "declarations": "g: CONICSECTION; S: ELLIPSE",
    "facts": "UpperFocus(g) = MidPoint(MajorAxis(S))"
},
{
    "assertion": "lg ( NUMBER: 32 ) equals XCoordinate ( UpperVertex ( CONICSECTION: I ) )",
    "id": 4486,
    "declarations": "32: NUMBER; I: CONICSECTION",
    "facts": "lg(32) = XCoordinate(UpperVertex(I))"
},
{
    "assertion": "RightVertex ( CONICSECTION: A ) equals POINT: g",
    "id": 4487,
    "declarations": "A: CONICSECTION; g: POINT",
    "facts": "RightVertex(A) = g"
},
{
    "assertion": "lg ( NUMBER: 54 ) equals Area ( CONICSECTION: I )",
    "id": 4488,
    "declarations": "54: NUMBER; I: CONICSECTION",
    "facts": "lg(54) = Area(I)"
},
{
    "assertion": "LineOf ( POINT: V, LeftVertex ( CONICSECTION: C ) ) equals LINE: X",
    "id": 4489,
    "declarations": "V: POINT; C: CONICSECTION; X: LINE",
    "facts": "LineOf(V, LeftVertex(C)) = X"
},
{
    "assertion": "ApplyUnit ( YCoordinate ( Circumcenter ( TRIANGLE: p ) ), DEGREESTR: degree )",
    "id": 4490,
    "declarations": "p: TRIANGLE; degree: DEGREESTR",
    "facts": "ApplyUnit(YCoordinate(Circumcenter(p)), degree) = dummy_operator()"
},
{
    "assertion": "RightFocus ( CONICSECTION: D ) equals LeftVertex ( CONICSECTION: M )",
    "id": 4491,
    "declarations": "D: CONICSECTION; M: CONICSECTION",
    "facts": "RightFocus(D) = LeftVertex(M)"
},
{
    "assertion": "Min ( Min ( NUMBER: -21 ) ) equals Slope ( LINE: t )",
    "id": 4492,
    "declarations": "-21: NUMBER; t: LINE",
    "facts": "Min(Min(-21)) = Slope(t)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: W ) equals LINE: D",
    "id": 4493,
    "declarations": "W: HYPERBOLA; D: LINE",
    "facts": "Asymptote(W) = D"
},
{
    "assertion": "RightVertex ( CONICSECTION: z ) equals RightVertex ( CONICSECTION: j )",
    "id": 4494,
    "declarations": "z: CONICSECTION; j: CONICSECTION",
    "facts": "RightVertex(z) = RightVertex(j)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: L ) equals RightFocus ( CONICSECTION: M )",
    "id": 4495,
    "declarations": "L: TRIANGLE; M: CONICSECTION",
    "facts": "Circumcenter(L) = RightFocus(M)"
},
{
    "assertion": "Incenter ( TRIANGLE: z ) equals POINT: D",
    "id": 4496,
    "declarations": "z: TRIANGLE; D: POINT",
    "facts": "Incenter(z) = D"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Y ) equals PerpendicularBisector ( LINESEGMENT: S )",
    "id": 4497,
    "declarations": "Y: CONICSECTION; S: LINESEGMENT",
    "facts": "LeftDirectrix(Y) = PerpendicularBisector(S)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: N ) equals POINT: O",
    "id": 4498,
    "declarations": "N: CONICSECTION; O: POINT",
    "facts": "UpperVertex(N) = O"
},
{
    "assertion": "Diameter ( CIRCLE: R ) equals NUMBER: 14",
    "id": 4499,
    "declarations": "R: CIRCLE; 14: NUMBER",
    "facts": "Diameter(R) = 14"
},
{
    "assertion": "LineOf ( POINT: X, RightFocus ( CONICSECTION: Z ) ) equals LINE: O",
    "id": 4500,
    "declarations": "X: POINT; Z: CONICSECTION; O: LINE",
    "facts": "LineOf(X, RightFocus(Z)) = O"
},
{
    "assertion": "MinorAxis ( ELLIPSE: t ) equals LINESEGMENT: Q",
    "id": 4501,
    "declarations": "t: ELLIPSE; Q: LINESEGMENT",
    "facts": "MinorAxis(t) = Q"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: c ) equals LINE: W",
    "id": 4502,
    "declarations": "c: CONICSECTION; W: LINE",
    "facts": "RightDirectrix(c) = W"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: W ) equals LINE: g",
    "id": 4503,
    "declarations": "W: LINESEGMENT; g: LINE",
    "facts": "PerpendicularBisector(W) = g"
},
{
    "assertion": "Circumcenter ( TRIANGLE: D ) equals LeftFocus ( CONICSECTION: E )",
    "id": 4504,
    "declarations": "D: TRIANGLE; E: CONICSECTION",
    "facts": "Circumcenter(D) = LeftFocus(E)"
},
{
    "assertion": "RightFocus ( CONICSECTION: Y ) equals LeftFocus ( CONICSECTION: v )",
    "id": 4505,
    "declarations": "Y: CONICSECTION; v: CONICSECTION",
    "facts": "RightFocus(Y) = LeftFocus(v)"
},
{
    "assertion": "Directrix ( CONICSECTION: r ) equals TangentOnPoint ( Projection ( RightVertex ( CONICSECTION: y ), RightDirectrix ( CONICSECTION: j ) ), CURVE: j )",
    "id": 4506,
    "declarations": "r: CONICSECTION; y: CONICSECTION; j: CONICSECTION; j: CURVE",
    "facts": "Directrix(r) = TangentOnPoint(Projection(RightVertex(y), RightDirectrix(j)), j)"
},
{
    "assertion": "Incenter ( TRIANGLE: G ) equals LowerVertex ( CONICSECTION: Y )",
    "id": 4507,
    "declarations": "G: TRIANGLE; Y: CONICSECTION",
    "facts": "Incenter(G) = LowerVertex(Y)"
},
{
    "assertion": "RightFocus ( CONICSECTION: B ) equals LeftVertex ( CONICSECTION: f )",
    "id": 4508,
    "declarations": "B: CONICSECTION; f: CONICSECTION",
    "facts": "RightFocus(B) = LeftVertex(f)"
},
{
    "assertion": "Between ( POINT: k, LowerVertex ( CONICSECTION: N ), MidPoint ( ImaginaryAxis ( ELLIPSE: B ) ) ) equals BOOL: False",
    "id": 4509,
    "declarations": "k: POINT; N: CONICSECTION; B: ELLIPSE; False: BOOL",
    "facts": "Between(k, LowerVertex(N), MidPoint(ImaginaryAxis(B))) = False"
},
{
    "assertion": "AngleOf ( RightFocus ( CONICSECTION: p ), RightVertex ( CONICSECTION: q ), POINT: K ) equals AngleOf ( POINT: l, POINT: W, POINT: m )",
    "id": 4510,
    "declarations": "p: CONICSECTION; q: CONICSECTION; K: POINT; l: POINT; W: POINT; m: POINT",
    "facts": "AngleOf(RightFocus(p), RightVertex(q), K) = AngleOf(l, W, m)"
},
{
    "assertion": "Incenter ( TRIANGLE: r ) equals Circumcenter ( TRIANGLE: p )",
    "id": 4511,
    "declarations": "r: TRIANGLE; p: TRIANGLE",
    "facts": "Incenter(r) = Circumcenter(p)"
},
{
    "assertion": "ApplyUnit ( Inclination ( RightDirectrix ( CONICSECTION: K ) ), DEGREESTR: degree )",
    "id": 4512,
    "declarations": "K: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Inclination(RightDirectrix(K)), degree) = dummy_operator()"
},
{
    "assertion": "DotProduct ( VECTOR: B, VECTOR: H ) equals NUMBER: 76",
    "id": 4513,
    "declarations": "B: VECTOR; H: VECTOR; 76: NUMBER",
    "facts": "DotProduct(B, H) = 76"
},
{
    "assertion": "Circumcenter ( TRIANGLE: u ) equals Circumcenter ( TRIANGLE: L )",
    "id": 4514,
    "declarations": "u: TRIANGLE; L: TRIANGLE",
    "facts": "Circumcenter(u) = Circumcenter(L)"
},
{
    "assertion": "Vertex ( CONICSECTION: E ) equals LeftFocus ( CONICSECTION: N )",
    "id": 4515,
    "declarations": "E: CONICSECTION; N: CONICSECTION",
    "facts": "Vertex(E) = LeftFocus(N)"
},
{
    "assertion": "IsTangent ( LINE: B, CONICSECTION: H ) equals BOOL: True",
    "id": 4516,
    "declarations": "B: LINE; H: CONICSECTION; True: BOOL",
    "facts": "IsTangent(B, H) = True"
},
{
    "assertion": "AngleOf ( Center ( CONICSECTION: T ), Circumcenter ( TRIANGLE: X ), POINT: V ) equals AngleOf ( LeftFocus ( CONICSECTION: A ), RightFocus ( CONICSECTION: P ), RightFocus ( CONICSECTION: w ) )",
    "id": 4517,
    "declarations": "T: CONICSECTION; X: TRIANGLE; V: POINT; A: CONICSECTION; P: CONICSECTION; w: CONICSECTION",
    "facts": "AngleOf(Center(T), Circumcenter(X), V) = AngleOf(LeftFocus(A), RightFocus(P), RightFocus(w))"
},
{
    "assertion": "Directrix ( CONICSECTION: t ) equals LINE: m",
    "id": 4518,
    "declarations": "t: CONICSECTION; m: LINE",
    "facts": "Directrix(t) = m"
},
{
    "assertion": "Incenter ( TRIANGLE: m ) equals LeftVertex ( CONICSECTION: W )",
    "id": 4519,
    "declarations": "m: TRIANGLE; W: CONICSECTION",
    "facts": "Incenter(m) = LeftVertex(W)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: Z, CIRCLE: I ) equals BOOL: True",
    "id": 4520,
    "declarations": "Z: LINESEGMENT; I: CIRCLE; True: BOOL",
    "facts": "IsDiameter(Z, I) = True"
},
{
    "assertion": "Projection ( POINT: r, LeftDirectrix ( CONICSECTION: f ) ) equals Orthocenter ( TRIANGLE: k )",
    "id": 4521,
    "declarations": "r: POINT; f: CONICSECTION; k: TRIANGLE",
    "facts": "Projection(r, LeftDirectrix(f)) = Orthocenter(k)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: A ) equals POINT: d",
    "id": 4522,
    "declarations": "A: CONICSECTION; d: POINT",
    "facts": "UpperFocus(A) = d"
},
{
    "assertion": "Radius ( CIRCLE: u ) equals HalfFocalLength ( CONICSECTION: l )",
    "id": 4523,
    "declarations": "u: CIRCLE; l: CONICSECTION",
    "facts": "Radius(u) = HalfFocalLength(l)"
},
{
    "assertion": "sqrt ( FocalLength ( CONICSECTION: G ) ) equals NUMBER: -23",
    "id": 4524,
    "declarations": "G: CONICSECTION; -23: NUMBER",
    "facts": "sqrt(FocalLength(G)) = -23"
},
{
    "assertion": "UpperVertex ( CONICSECTION: s ) equals UpperVertex ( CONICSECTION: Q )",
    "id": 4525,
    "declarations": "s: CONICSECTION; Q: CONICSECTION",
    "facts": "UpperVertex(s) = UpperVertex(Q)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: U ) equals LeftFocus ( CONICSECTION: v )",
    "id": 4526,
    "declarations": "U: LINESEGMENT; v: CONICSECTION",
    "facts": "MidPoint(U) = LeftFocus(v)"
},
{
    "assertion": "IsTangent ( LINE: h, CONICSECTION: Y ) equals BOOL: True",
    "id": 4527,
    "declarations": "h: LINE; Y: CONICSECTION; True: BOOL",
    "facts": "IsTangent(h, Y) = True"
},
{
    "assertion": "PointOnCurve ( UpperVertex ( CONICSECTION: W ), CURVE: A ) equals BOOL: True",
    "id": 4528,
    "declarations": "W: CONICSECTION; A: CURVE; True: BOOL",
    "facts": "PointOnCurve(UpperVertex(W), A) = True"
},
{
    "assertion": "LineSegmentOf ( POINT: J, RightFocus ( CONICSECTION: e ) ) equals LineSegmentOf ( POINT: k, LeftVertex ( CONICSECTION: a ) )",
    "id": 4529,
    "declarations": "J: POINT; e: CONICSECTION; k: POINT; a: CONICSECTION",
    "facts": "LineSegmentOf(J, RightFocus(e)) = LineSegmentOf(k, LeftVertex(a))"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: N ) equals LINE: d",
    "id": 4530,
    "declarations": "N: CONICSECTION; d: LINE",
    "facts": "LeftDirectrix(N) = d"
},
{
    "assertion": "lg ( InterReciprocal ( Eccentricity ( CONICSECTION: O ) ) ) equals NUMBER: -55",
    "id": 4531,
    "declarations": "O: CONICSECTION; -55: NUMBER",
    "facts": "lg(InterReciprocal(Eccentricity(O))) = -55"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: l, TRIANGLE: I ) equals BOOL: True",
    "id": 4532,
    "declarations": "l: CIRCLE; I: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(l, I) = True"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: j ) equals LINESEGMENT: y",
    "id": 4533,
    "declarations": "j: ELLIPSE; y: LINESEGMENT",
    "facts": "ImaginaryAxis(j) = y"
},
{
    "assertion": "AngleOf ( POINT: R, POINT: S, POINT: y ) equals AngleOf ( Projection ( Incenter ( TRIANGLE: c ), LINE: c ), POINT: s, LeftVertex ( CONICSECTION: Q ) )",
    "id": 4534,
    "declarations": "R: POINT; S: POINT; y: POINT; c: TRIANGLE; c: LINE; s: POINT; Q: CONICSECTION",
    "facts": "AngleOf(R, S, y) = AngleOf(Projection(Incenter(c), c), s, LeftVertex(Q))"
},
{
    "assertion": "Incenter ( TRIANGLE: M ) equals LowerVertex ( CONICSECTION: O )",
    "id": 4535,
    "declarations": "M: TRIANGLE; O: CONICSECTION",
    "facts": "Incenter(M) = LowerVertex(O)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: F ) equals FocalLength ( CONICSECTION: q )",
    "id": 4536,
    "declarations": "F: CONICSECTION; q: CONICSECTION",
    "facts": "HalfFocalLength(F) = FocalLength(q)"
},
{
    "assertion": "Negation ( MinorAxis ( ELLIPSE: t ) equals RealAxis ( ELLIPSE: L ) ) equals BOOL: True",
    "id": 4537,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "CircumCircle ( TRIANGLE: U ) equals CIRCLE: n",
    "id": 4538,
    "declarations": "U: TRIANGLE; n: CIRCLE",
    "facts": "CircumCircle(U) = n"
},
{
    "assertion": "FocalLength ( CONICSECTION: I ) equals Min ( NUMBER: 93 )",
    "id": 4539,
    "declarations": "I: CONICSECTION; 93: NUMBER",
    "facts": "FocalLength(I) = Min(93)"
},
{
    "assertion": "FootPoint ( LINE: h, LINE: l ) equals LeftVertex ( CONICSECTION: J )",
    "id": 4540,
    "declarations": "h: LINE; l: LINE; J: CONICSECTION",
    "facts": "FootPoint(h, l) = LeftVertex(J)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: l ) equals PerpendicularBisector ( LINESEGMENT: P )",
    "id": 4541,
    "declarations": "l: CONICSECTION; P: LINESEGMENT",
    "facts": "LeftDirectrix(l) = PerpendicularBisector(P)"
},
{
    "assertion": "Perimeter ( CONICSECTION: d ) equals Area ( CONICSECTION: V )",
    "id": 4542,
    "declarations": "d: CONICSECTION; V: CONICSECTION",
    "facts": "Perimeter(d) = Area(V)"
},
{
    "assertion": "Locus ( POINT: t ) equals Locus ( LeftVertex ( CONICSECTION: Y ) )",
    "id": 4543,
    "declarations": "t: POINT; Y: CONICSECTION",
    "facts": "Locus(t) = Locus(LeftVertex(Y))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: i ) equals LeftVertex ( CONICSECTION: x )",
    "id": 4544,
    "declarations": "i: CONICSECTION; x: CONICSECTION",
    "facts": "UpperFocus(i) = LeftVertex(x)"
},
{
    "assertion": "Directrix ( CONICSECTION: b ) equals PerpendicularBisector ( LINESEGMENT: m )",
    "id": 4545,
    "declarations": "b: CONICSECTION; m: LINESEGMENT",
    "facts": "Directrix(b) = PerpendicularBisector(m)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: u ) equals POINT: L",
    "id": 4546,
    "declarations": "u: CONICSECTION; L: POINT",
    "facts": "UpperVertex(u) = L"
},
{
    "assertion": "Eccentricity ( CONICSECTION: U ) equals NUMBER: 8",
    "id": 4547,
    "declarations": "U: CONICSECTION; 8: NUMBER",
    "facts": "Eccentricity(U) = 8"
},
{
    "assertion": "DotProduct ( VECTOR: U, VECTOR: L ) equals DotProduct ( VECTOR: D, VECTOR: W )",
    "id": 4548,
    "declarations": "U: VECTOR; L: VECTOR; D: VECTOR; W: VECTOR",
    "facts": "DotProduct(U, L) = DotProduct(D, W)"
},
{
    "assertion": "Incenter ( TRIANGLE: S ) equals POINT: k",
    "id": 4549,
    "declarations": "S: TRIANGLE; k: POINT",
    "facts": "Incenter(S) = k"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: u ) equals Abs ( LINESEGMENT: C )",
    "id": 4550,
    "declarations": "u: CONICSECTION; C: LINESEGMENT",
    "facts": "HalfFocalLength(u) = Abs(C)"
},
{
    "assertion": "RightFocus ( CONICSECTION: v ) equals LeftVertex ( CONICSECTION: q )",
    "id": 4551,
    "declarations": "v: CONICSECTION; q: CONICSECTION",
    "facts": "RightFocus(v) = LeftVertex(q)"
},
{
    "assertion": "LineSegmentOf ( LeftVertex ( CONICSECTION: U ), POINT: F ) equals LINESEGMENT: j",
    "id": 4552,
    "declarations": "U: CONICSECTION; F: POINT; j: LINESEGMENT",
    "facts": "LineSegmentOf(LeftVertex(U), F) = j"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: Q ) equals OverlappingLine ( MinorAxis ( ELLIPSE: Q ) )",
    "id": 4553,
    "declarations": "Q: LINESEGMENT; Q: ELLIPSE",
    "facts": "PerpendicularBisector(Q) = OverlappingLine(MinorAxis(Q))"
},
{
    "assertion": "IsInTangent ( CIRCLE: U, CIRCLE: R ) equals BOOL: False",
    "id": 4554,
    "declarations": "U: CIRCLE; R: CIRCLE; False: BOOL",
    "facts": "IsInTangent(U, R) = False"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: A ) equals LINE: y",
    "id": 4555,
    "declarations": "A: CONICSECTION; y: LINE",
    "facts": "RightDirectrix(A) = y"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: u ) equals LINE: N",
    "id": 4556,
    "declarations": "u: CONICSECTION; N: LINE",
    "facts": "RightDirectrix(u) = N"
},
{
    "assertion": "Negation ( LineOf ( POINT: z, RightVertex ( CONICSECTION: E ) ) equals LINE: k ) equals BOOL: True",
    "id": 4557,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Perimeter ( CONICSECTION: H ) equals NUMBER: 51",
    "id": 4558,
    "declarations": "H: CONICSECTION; 51: NUMBER",
    "facts": "Perimeter(H) = 51"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: U, TRIANGLE: l ) equals BOOL: True",
    "id": 4559,
    "declarations": "U: CIRCLE; l: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(U, l) = True"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: R ) ) equals POINT: G",
    "id": 4560,
    "declarations": "R: ELLIPSE; G: POINT",
    "facts": "Endpoint(MajorAxis(R)) = G"
},
{
    "assertion": "TangentOfPoint ( POINT: E, Locus ( LeftFocus ( CONICSECTION: M ) ) ) equals LINE: u",
    "id": 4561,
    "declarations": "E: POINT; M: CONICSECTION; u: LINE",
    "facts": "TangentOfPoint(E, Locus(LeftFocus(M))) = u"
},
{
    "assertion": "Orthocenter ( TRIANGLE: x ) equals POINT: k",
    "id": 4562,
    "declarations": "x: TRIANGLE; k: POINT",
    "facts": "Orthocenter(x) = k"
},
{
    "assertion": "Diameter ( CIRCLE: V ) equals NUMBER: 2",
    "id": 4563,
    "declarations": "V: CIRCLE; 2: NUMBER",
    "facts": "Diameter(V) = 2"
},
{
    "assertion": "RightFocus ( CONICSECTION: O ) equals POINT: e",
    "id": 4564,
    "declarations": "O: CONICSECTION; e: POINT",
    "facts": "RightFocus(O) = e"
},
{
    "assertion": "LeftFocus ( CONICSECTION: u ) equals Circumcenter ( TRIANGLE: H )",
    "id": 4565,
    "declarations": "u: CONICSECTION; H: TRIANGLE",
    "facts": "LeftFocus(u) = Circumcenter(H)"
},
{
    "assertion": "Center ( CONICSECTION: w ) equals RightFocus ( CONICSECTION: d )",
    "id": 4566,
    "declarations": "w: CONICSECTION; d: CONICSECTION",
    "facts": "Center(w) = RightFocus(d)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: j ) equals LeftPart ( HYPERBOLA: h )",
    "id": 4567,
    "declarations": "j: HYPERBOLA; h: HYPERBOLA",
    "facts": "LeftPart(j) = LeftPart(h)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: V ) equals LINESEGMENT: k",
    "id": 4568,
    "declarations": "V: ELLIPSE; k: LINESEGMENT",
    "facts": "ImaginaryAxis(V) = k"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: b ) equals LINE: S",
    "id": 4569,
    "declarations": "b: CONICSECTION; S: LINE",
    "facts": "RightDirectrix(b) = S"
},
{
    "assertion": "RightPart ( HYPERBOLA: f ) equals CURVE: p",
    "id": 4570,
    "declarations": "f: HYPERBOLA; p: CURVE",
    "facts": "RightPart(f) = p"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: p, TRIANGLE: s ) equals BOOL: True",
    "id": 4571,
    "declarations": "p: CIRCLE; s: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(p, s) = True"
},
{
    "assertion": "LineSegmentOf ( POINT: o, UpperVertex ( CONICSECTION: U ) ) equals ImaginaryAxis ( ELLIPSE: P )",
    "id": 4572,
    "declarations": "o: POINT; U: CONICSECTION; P: ELLIPSE",
    "facts": "LineSegmentOf(o, UpperVertex(U)) = ImaginaryAxis(P)"
},
{
    "assertion": "Directrix ( CONICSECTION: c ) equals LINE: g",
    "id": 4573,
    "declarations": "c: CONICSECTION; g: LINE",
    "facts": "Directrix(c) = g"
},
{
    "assertion": "IsOutTangent ( CIRCLE: d, CIRCLE: L ) equals BOOL: False",
    "id": 4574,
    "declarations": "d: CIRCLE; L: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(d, L) = False"
},
{
    "assertion": "Expression ( CURVE: p ) equals LocusEquation ( Center ( CONICSECTION: k ) )",
    "id": 4575,
    "declarations": "p: CURVE; k: CONICSECTION",
    "facts": "Expression(p) = LocusEquation(Center(k))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: w ) equals LeftFocus ( CONICSECTION: F )",
    "id": 4576,
    "declarations": "w: TRIANGLE; F: CONICSECTION",
    "facts": "Circumcenter(w) = LeftFocus(F)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: F ) equals LINESEGMENT: T",
    "id": 4577,
    "declarations": "F: ELLIPSE; T: LINESEGMENT",
    "facts": "ImaginaryAxis(F) = T"
},
{
    "assertion": "Max ( NUMBER: 18 ) equals NUMBER: -56",
    "id": 4578,
    "declarations": "18: NUMBER; -56: NUMBER",
    "facts": "Max(18) = -56"
},
{
    "assertion": "LineSegmentOf ( POINT: A, LowerFocus ( CONICSECTION: g ) ) equals LINESEGMENT: I",
    "id": 4579,
    "declarations": "A: POINT; g: CONICSECTION; I: LINESEGMENT",
    "facts": "LineSegmentOf(A, LowerFocus(g)) = I"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: r ) equals LINESEGMENT: m",
    "id": 4580,
    "declarations": "r: ELLIPSE; m: LINESEGMENT",
    "facts": "ImaginaryAxis(r) = m"
},
{
    "assertion": "LeftVertex ( CONICSECTION: D ) equals LowerFocus ( CONICSECTION: M )",
    "id": 4581,
    "declarations": "D: CONICSECTION; M: CONICSECTION",
    "facts": "LeftVertex(D) = LowerFocus(M)"
},
{
    "assertion": "sqrt ( Min ( Inclination ( LINE: B ) ) ) equals Min ( NUMBER: 100 )",
    "id": 4582,
    "declarations": "B: LINE; 100: NUMBER",
    "facts": "sqrt(Min(Inclination(B))) = Min(100)"
},
{
    "assertion": "LocusEquation ( POINT: B ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 4583,
    "declarations": "B: POINT; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "LocusEquation(B) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "Locus ( Orthocenter ( TRIANGLE: G ) ) equals CURVE: L",
    "id": 4584,
    "declarations": "G: TRIANGLE; L: CURVE",
    "facts": "Locus(Orthocenter(G)) = L"
},
{
    "assertion": "Directrix ( CONICSECTION: O ) equals LINE: e",
    "id": 4585,
    "declarations": "O: CONICSECTION; e: LINE",
    "facts": "Directrix(O) = e"
},
{
    "assertion": "Inclination ( LINE: m ) equals NUMBER: -18",
    "id": 4586,
    "declarations": "m: LINE; -18: NUMBER",
    "facts": "Inclination(m) = -18"
},
{
    "assertion": "YCoordinate ( FootPoint ( LINE: j, LeftDirectrix ( CONICSECTION: h ) ) ) equals HalfFocalLength ( CONICSECTION: O )",
    "id": 4587,
    "declarations": "j: LINE; h: CONICSECTION; O: CONICSECTION",
    "facts": "YCoordinate(FootPoint(j, LeftDirectrix(h))) = HalfFocalLength(O)"
},
{
    "assertion": "LineSegmentOf ( POINT: Q, LowerFocus ( CONICSECTION: J ) ) equals MinorAxis ( ELLIPSE: K )",
    "id": 4588,
    "declarations": "Q: POINT; J: CONICSECTION; K: ELLIPSE",
    "facts": "LineSegmentOf(Q, LowerFocus(J)) = MinorAxis(K)"
},
{
    "assertion": "DotProduct ( VECTOR: Z, VECTOR: u ) equals lg ( NUMBER: -45 )",
    "id": 4589,
    "declarations": "Z: VECTOR; u: VECTOR; -45: NUMBER",
    "facts": "DotProduct(Z, u) = lg(-45)"
},
{
    "assertion": "Radius ( CIRCLE: T ) equals NUMBER: -74",
    "id": 4590,
    "declarations": "T: CIRCLE; -74: NUMBER",
    "facts": "Radius(T) = -74"
},
{
    "assertion": "Perimeter ( CONICSECTION: i ) equals NumIntersection ( CURVE: U, CURVE: E )",
    "id": 4591,
    "declarations": "i: CONICSECTION; U: CURVE; E: CURVE",
    "facts": "Perimeter(i) = NumIntersection(U, E)"
},
{
    "assertion": "Intercept ( LINE: T, AXIS: yAxis ) equals Abs ( ImaginaryAxis ( ELLIPSE: X ) )",
    "id": 4592,
    "declarations": "T: LINE; yAxis: AXIS; X: ELLIPSE",
    "facts": "Intercept(T, yAxis) = Abs(ImaginaryAxis(X))"
},
{
    "assertion": "Length ( LINESEGMENT: s ) equals Distance ( Incenter ( TRIANGLE: H ), MidPoint ( LINESEGMENT: n ) )",
    "id": 4593,
    "declarations": "s: LINESEGMENT; H: TRIANGLE; n: LINESEGMENT",
    "facts": "Length(s) = Distance(Incenter(H), MidPoint(n))"
},
{
    "assertion": "Vertex ( CONICSECTION: O ) equals POINT: f",
    "id": 4594,
    "declarations": "O: CONICSECTION; f: POINT",
    "facts": "Vertex(O) = f"
},
{
    "assertion": "NumIntersection ( CURVE: Z, CURVE: r ) equals Length ( LINESEGMENT: t )",
    "id": 4595,
    "declarations": "Z: CURVE; r: CURVE; t: LINESEGMENT",
    "facts": "NumIntersection(Z, r) = Length(t)"
},
{
    "assertion": "AngleOf ( LeftFocus ( CONICSECTION: Q ), MidPoint ( LINESEGMENT: d ), POINT: u ) equals ApplyUnit ( Length ( MajorAxis ( ELLIPSE: f ) ), DEGREESTR: degree )",
    "id": 4596,
    "declarations": "Q: CONICSECTION; d: LINESEGMENT; u: POINT; f: ELLIPSE; degree: DEGREESTR",
    "facts": "AngleOf(LeftFocus(Q), MidPoint(d), u) = ApplyUnit(Length(MajorAxis(f)), degree)"
},
{
    "assertion": "Incenter ( TRIANGLE: O ) equals Center ( CONICSECTION: u )",
    "id": 4597,
    "declarations": "O: TRIANGLE; u: CONICSECTION",
    "facts": "Incenter(O) = Center(u)"
},
{
    "assertion": "YCoordinate ( POINT: M ) equals YCoordinate ( POINT: w )",
    "id": 4598,
    "declarations": "M: POINT; w: POINT",
    "facts": "YCoordinate(M) = YCoordinate(w)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: c ) equals Center ( CONICSECTION: S )",
    "id": 4599,
    "declarations": "c: CONICSECTION; S: CONICSECTION",
    "facts": "LowerVertex(c) = Center(S)"
},
{
    "assertion": "Center ( CONICSECTION: z ) equals UpperVertex ( CONICSECTION: c )",
    "id": 4600,
    "declarations": "z: CONICSECTION; c: CONICSECTION",
    "facts": "Center(z) = UpperVertex(c)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: X ) equals LINE: H",
    "id": 4601,
    "declarations": "X: CONICSECTION; H: LINE",
    "facts": "RightDirectrix(X) = H"
},
{
    "assertion": "IsOutTangent ( CIRCLE: t, CIRCLE: b ) equals BOOL: True",
    "id": 4602,
    "declarations": "t: CIRCLE; b: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(t, b) = True"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: O, TRIANGLE: C ) equals BOOL: False",
    "id": 4603,
    "declarations": "O: CIRCLE; C: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(O, C) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: r ) equals FootPoint ( LINE: x, OverlappingLine ( LINESEGMENT: V ) )",
    "id": 4604,
    "declarations": "r: CONICSECTION; x: LINE; V: LINESEGMENT",
    "facts": "Vertex(r) = FootPoint(x, OverlappingLine(V))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: Y ) equals Incenter ( TRIANGLE: e )",
    "id": 4605,
    "declarations": "Y: CONICSECTION; e: TRIANGLE",
    "facts": "LeftVertex(Y) = Incenter(e)"
},
{
    "assertion": "IsParallel ( LINE: B, LINE: X ) equals BOOL: True",
    "id": 4606,
    "declarations": "B: LINE; X: LINE; True: BOOL",
    "facts": "IsParallel(B, X) = True"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: t, TRIANGLE: B ) equals BOOL: True",
    "id": 4607,
    "declarations": "t: CIRCLE; B: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(t, B) = True"
},
{
    "assertion": "Max ( InterReciprocal ( Slope ( PerpendicularBisector ( LINESEGMENT: P ) ) ) ) equals NUMBER: -33",
    "id": 4608,
    "declarations": "P: LINESEGMENT; -33: NUMBER",
    "facts": "Max(InterReciprocal(Slope(PerpendicularBisector(P)))) = -33"
},
{
    "assertion": "TangentOnPoint ( POINT: s, Locus ( POINT: M ) ) equals LINE: T",
    "id": 4609,
    "declarations": "s: POINT; M: POINT; T: LINE",
    "facts": "TangentOnPoint(s, Locus(M)) = T"
},
{
    "assertion": "RightPart ( HYPERBOLA: X ) equals CURVE: q",
    "id": 4610,
    "declarations": "X: HYPERBOLA; q: CURVE",
    "facts": "RightPart(X) = q"
},
{
    "assertion": "LowerFocus ( CONICSECTION: V ) equals FootPoint ( PerpendicularBisector ( LINESEGMENT: x ), LINE: j )",
    "id": 4611,
    "declarations": "V: CONICSECTION; x: LINESEGMENT; j: LINE",
    "facts": "LowerFocus(V) = FootPoint(PerpendicularBisector(x), j)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: N, CIRCLE: Z ) equals BOOL: True",
    "id": 4612,
    "declarations": "N: CIRCLE; Z: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(N, Z) = True"
},
{
    "assertion": "UpperVertex ( CONICSECTION: D ) equals POINT: M",
    "id": 4613,
    "declarations": "D: CONICSECTION; M: POINT",
    "facts": "UpperVertex(D) = M"
},
{
    "assertion": "Quadrant ( LowerFocus ( CONICSECTION: e ) ) equals Length ( LINESEGMENT: j )",
    "id": 4614,
    "declarations": "e: CONICSECTION; j: LINESEGMENT",
    "facts": "Quadrant(LowerFocus(e)) = Length(j)"
},
{
    "assertion": "Center ( CONICSECTION: r ) equals UpperFocus ( CONICSECTION: M )",
    "id": 4615,
    "declarations": "r: CONICSECTION; M: CONICSECTION",
    "facts": "Center(r) = UpperFocus(M)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: P ) equals Center ( CONICSECTION: I )",
    "id": 4616,
    "declarations": "P: CONICSECTION; I: CONICSECTION",
    "facts": "LeftVertex(P) = Center(I)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: N ) equals LowerFocus ( CONICSECTION: i )",
    "id": 4617,
    "declarations": "N: TRIANGLE; i: CONICSECTION",
    "facts": "Orthocenter(N) = LowerFocus(i)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: W ) equals LINESEGMENT: X",
    "id": 4618,
    "declarations": "W: ELLIPSE; X: LINESEGMENT",
    "facts": "MinorAxis(W) = X"
},
{
    "assertion": "PointOnCurve ( LeftFocus ( CONICSECTION: o ), CURVE: v ) equals BOOL: False",
    "id": 4619,
    "declarations": "o: CONICSECTION; v: CURVE; False: BOOL",
    "facts": "PointOnCurve(LeftFocus(o), v) = False"
},
{
    "assertion": "NumIntersection ( LeftPart ( HYPERBOLA: c ), CURVE: Y ) equals Radius ( CIRCLE: I )",
    "id": 4620,
    "declarations": "c: HYPERBOLA; Y: CURVE; I: CIRCLE",
    "facts": "NumIntersection(LeftPart(c), Y) = Radius(I)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: N ) equals POINT: T",
    "id": 4621,
    "declarations": "N: TRIANGLE; T: POINT",
    "facts": "Circumcenter(N) = T"
},
{
    "assertion": "ApplyUnit ( Distance ( POINT: c, POINT: Q ), DEGREESTR: degree )",
    "id": 4622,
    "declarations": "c: POINT; Q: POINT; degree: DEGREESTR",
    "facts": "ApplyUnit(Distance(c, Q), degree) = dummy_operator()"
},
{
    "assertion": "UpperFocus ( CONICSECTION: J ) equals LeftVertex ( CONICSECTION: Z )",
    "id": 4623,
    "declarations": "J: CONICSECTION; Z: CONICSECTION",
    "facts": "UpperFocus(J) = LeftVertex(Z)"
},
{
    "assertion": "TangentOnPoint ( LowerFocus ( CONICSECTION: t ), CURVE: g ) equals LINE: u",
    "id": 4624,
    "declarations": "t: CONICSECTION; g: CURVE; u: LINE",
    "facts": "TangentOnPoint(LowerFocus(t), g) = u"
},
{
    "assertion": "IsParallel ( RightDirectrix ( CONICSECTION: c ), LINE: N ) equals BOOL: False",
    "id": 4625,
    "declarations": "c: CONICSECTION; N: LINE; False: BOOL",
    "facts": "IsParallel(RightDirectrix(c), N) = False"
},
{
    "assertion": "sqrt ( Length ( LINESEGMENT: X ) ) equals Inclination ( LINE: t )",
    "id": 4626,
    "declarations": "X: LINESEGMENT; t: LINE",
    "facts": "sqrt(Length(X)) = Inclination(t)"
},
{
    "assertion": "Perimeter ( CONICSECTION: k ) equals lg ( Radius ( CIRCLE: q ) )",
    "id": 4628,
    "declarations": "k: CONICSECTION; q: CIRCLE",
    "facts": "Perimeter(k) = lg(Radius(q))"
},
{
    "assertion": "InterceptChord ( LINE: G, CONICSECTION: V ) equals LINESEGMENT: q",
    "id": 4629,
    "declarations": "G: LINE; V: CONICSECTION; q: LINESEGMENT",
    "facts": "InterceptChord(G, V) = q"
},
{
    "assertion": "LocusEquation ( MidPoint ( LINESEGMENT: Z ) ) equals EXPRESSION: x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12",
    "id": 4630,
    "declarations": "Z: LINESEGMENT; x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12: EXPRESSION",
    "facts": "LocusEquation(MidPoint(Z)) = x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12"
},
{
    "assertion": "UpperFocus ( CONICSECTION: y ) equals Circumcenter ( TRIANGLE: V )",
    "id": 4631,
    "declarations": "y: CONICSECTION; V: TRIANGLE",
    "facts": "UpperFocus(y) = Circumcenter(V)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: C ) equals LowerVertex ( CONICSECTION: Z )",
    "id": 4632,
    "declarations": "C: CONICSECTION; Z: CONICSECTION",
    "facts": "LeftVertex(C) = LowerVertex(Z)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: e ) equals ImaginaryAxis ( ELLIPSE: D )",
    "id": 4633,
    "declarations": "e: ELLIPSE; D: ELLIPSE",
    "facts": "MinorAxis(e) = ImaginaryAxis(D)"
},
{
    "assertion": "RightFocus ( CONICSECTION: h ) equals RightVertex ( CONICSECTION: A )",
    "id": 4634,
    "declarations": "h: CONICSECTION; A: CONICSECTION",
    "facts": "RightFocus(h) = RightVertex(A)"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: G ) ) equals Inclination ( LINE: J )",
    "id": 4635,
    "declarations": "G: CONICSECTION; J: LINE",
    "facts": "XCoordinate(LeftFocus(G)) = Inclination(J)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: i ) equals InterceptChord ( RightDirectrix ( CONICSECTION: H ), CONICSECTION: x )",
    "id": 4636,
    "declarations": "i: ELLIPSE; H: CONICSECTION; x: CONICSECTION",
    "facts": "ImaginaryAxis(i) = InterceptChord(RightDirectrix(H), x)"
},
{
    "assertion": "Max ( NUMBER: -36 ) equals Quadrant ( LowerVertex ( CONICSECTION: B ) )",
    "id": 4637,
    "declarations": "-36: NUMBER; B: CONICSECTION",
    "facts": "Max(-36) = Quadrant(LowerVertex(B))"
},
{
    "assertion": "LocusEquation ( POINT: t ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 4638,
    "declarations": "t: POINT; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "LocusEquation(t) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "IsOutTangent ( CIRCLE: t, CIRCLE: W ) equals BOOL: True",
    "id": 4639,
    "declarations": "t: CIRCLE; W: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(t, W) = True"
},
{
    "assertion": "Area ( CONICSECTION: g ) equals Length ( LINESEGMENT: F )",
    "id": 4640,
    "declarations": "g: CONICSECTION; F: LINESEGMENT",
    "facts": "Area(g) = Length(F)"
},
{
    "assertion": "ApplyUnit ( Abs ( LineSegmentOf ( POINT: y, MidPoint ( LINESEGMENT: K ) ) ), DEGREESTR: degree )",
    "id": 4641,
    "declarations": "y: POINT; K: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(Abs(LineSegmentOf(y, MidPoint(K))), degree) = dummy_operator()"
},
{
    "assertion": "LowerFocus ( CONICSECTION: s ) equals LeftFocus ( CONICSECTION: m )",
    "id": 4642,
    "declarations": "s: CONICSECTION; m: CONICSECTION",
    "facts": "LowerFocus(s) = LeftFocus(m)"
},
{
    "assertion": "RightFocus ( CONICSECTION: D ) equals POINT: P",
    "id": 4643,
    "declarations": "D: CONICSECTION; P: POINT",
    "facts": "RightFocus(D) = P"
},
{
    "assertion": "Incenter ( TRIANGLE: g ) equals Circumcenter ( TRIANGLE: k )",
    "id": 4644,
    "declarations": "g: TRIANGLE; k: TRIANGLE",
    "facts": "Incenter(g) = Circumcenter(k)"
},
{
    "assertion": "Center ( CONICSECTION: T ) equals POINT: W",
    "id": 4645,
    "declarations": "T: CONICSECTION; W: POINT",
    "facts": "Center(T) = W"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: f ) equals LINESEGMENT: t",
    "id": 4646,
    "declarations": "f: ELLIPSE; t: LINESEGMENT",
    "facts": "ImaginaryAxis(f) = t"
},
{
    "assertion": "CircumCircle ( TRIANGLE: z ) equals CIRCLE: X",
    "id": 4647,
    "declarations": "z: TRIANGLE; X: CIRCLE",
    "facts": "CircumCircle(z) = X"
},
{
    "assertion": "Vertex ( CONICSECTION: o ) equals Incenter ( TRIANGLE: g )",
    "id": 4648,
    "declarations": "o: CONICSECTION; g: TRIANGLE",
    "facts": "Vertex(o) = Incenter(g)"
},
{
    "assertion": "TriangleOf ( LeftFocus ( CONICSECTION: C ), LeftVertex ( CONICSECTION: K ), POINT: P ) equals TRIANGLE: o",
    "id": 4649,
    "declarations": "C: CONICSECTION; K: CONICSECTION; P: POINT; o: TRIANGLE",
    "facts": "TriangleOf(LeftFocus(C), LeftVertex(K), P) = o"
},
{
    "assertion": "InterReciprocal ( NUMBER: 84 ) equals NumIntersection ( CURVE: a, CURVE: P )",
    "id": 4650,
    "declarations": "84: NUMBER; a: CURVE; P: CURVE",
    "facts": "InterReciprocal(84) = NumIntersection(a, P)"
},
{
    "assertion": "IsTangent ( RightDirectrix ( CONICSECTION: j ), CONICSECTION: o ) equals BOOL: True",
    "id": 4651,
    "declarations": "j: CONICSECTION; o: CONICSECTION; True: BOOL",
    "facts": "IsTangent(RightDirectrix(j), o) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: x ) equals PerpendicularBisector ( LINESEGMENT: C )",
    "id": 4652,
    "declarations": "x: CONICSECTION; C: LINESEGMENT",
    "facts": "Directrix(x) = PerpendicularBisector(C)"
},
{
    "assertion": "Abs ( LINESEGMENT: u ) equals InterReciprocal ( lg ( Slope ( LINE: N ) ) )",
    "id": 4653,
    "declarations": "u: LINESEGMENT; N: LINE",
    "facts": "Abs(u) = InterReciprocal(lg(Slope(N)))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: E ) equals CIRCLE: h",
    "id": 4654,
    "declarations": "E: TRIANGLE; h: CIRCLE",
    "facts": "CircumCircle(E) = h"
},
{
    "assertion": "YCoordinate ( Circumcenter ( TRIANGLE: E ) ) equals Slope ( LINE: K )",
    "id": 4655,
    "declarations": "E: TRIANGLE; K: LINE",
    "facts": "YCoordinate(Circumcenter(E)) = Slope(K)"
},
{
    "assertion": "PerpendicularBisector ( RealAxis ( ELLIPSE: j ) ) equals LINE: a",
    "id": 4656,
    "declarations": "j: ELLIPSE; a: LINE",
    "facts": "PerpendicularBisector(RealAxis(j)) = a"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: D ) ) equals NUMBER: -10",
    "id": 4657,
    "declarations": "D: ELLIPSE; -10: NUMBER",
    "facts": "Abs(MinorAxis(D)) = -10"
},
{
    "assertion": "LowerVertex ( CONICSECTION: q ) equals Circumcenter ( TRIANGLE: k )",
    "id": 4658,
    "declarations": "q: CONICSECTION; k: TRIANGLE",
    "facts": "LowerVertex(q) = Circumcenter(k)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: L ) equals Center ( CONICSECTION: P )",
    "id": 4659,
    "declarations": "L: CONICSECTION; P: CONICSECTION",
    "facts": "UpperFocus(L) = Center(P)"
},
{
    "assertion": "And ( LeftDirectrix ( CONICSECTION: o ) equals LINE: M, LeftVertex ( CONICSECTION: x ) equals POINT: X ) equals BOOL: False",
    "id": 4660,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: h ) equals LINESEGMENT: C",
    "id": 4661,
    "declarations": "h: ELLIPSE; C: LINESEGMENT",
    "facts": "ImaginaryAxis(h) = C"
},
{
    "assertion": "LeftFocus ( CONICSECTION: p ) equals LowerFocus ( CONICSECTION: o )",
    "id": 4662,
    "declarations": "p: CONICSECTION; o: CONICSECTION",
    "facts": "LeftFocus(p) = LowerFocus(o)"
},
{
    "assertion": "RightVertex ( CONICSECTION: S ) equals POINT: z",
    "id": 4663,
    "declarations": "S: CONICSECTION; z: POINT",
    "facts": "RightVertex(S) = z"
},
{
    "assertion": "Inclination ( LINE: m ) equals NUMBER: 66",
    "id": 4664,
    "declarations": "m: LINE; 66: NUMBER",
    "facts": "Inclination(m) = 66"
},
{
    "assertion": "FootPoint ( LINE: A, LINE: O ) equals Center ( CONICSECTION: s )",
    "id": 4665,
    "declarations": "A: LINE; O: LINE; s: CONICSECTION",
    "facts": "FootPoint(A, O) = Center(s)"
},
{
    "assertion": "TangentPoint ( PerpendicularBisector ( RealAxis ( ELLIPSE: E ) ), CIRCLE: r ) equals POINT: T",
    "id": 4666,
    "declarations": "E: ELLIPSE; r: CIRCLE; T: POINT",
    "facts": "TangentPoint(PerpendicularBisector(RealAxis(E)), r) = T"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: a, CIRCLE: b ) equals BOOL: True",
    "id": 4667,
    "declarations": "a: LINESEGMENT; b: CIRCLE; True: BOOL",
    "facts": "IsDiameter(a, b) = True"
},
{
    "assertion": "CircumCircle ( TriangleOf ( Orthocenter ( TriangleOf ( POINT: K, POINT: P, POINT: k ) ), POINT: J, POINT: u ) ) equals CIRCLE: h",
    "id": 4668,
    "declarations": "K: POINT; P: POINT; k: POINT; J: POINT; u: POINT; h: CIRCLE",
    "facts": "CircumCircle(TriangleOf(Orthocenter(TriangleOf(K, P, k)), J, u)) = h"
},
{
    "assertion": "MidPoint ( RealAxis ( ELLIPSE: P ) ) equals POINT: A",
    "id": 4669,
    "declarations": "P: ELLIPSE; A: POINT",
    "facts": "MidPoint(RealAxis(P)) = A"
},
{
    "assertion": "FocalLength ( CONICSECTION: w ) equals NUMBER: -41",
    "id": 4670,
    "declarations": "w: CONICSECTION; -41: NUMBER",
    "facts": "FocalLength(w) = -41"
},
{
    "assertion": "FocalLength ( CONICSECTION: T ) equals InterReciprocal ( NUMBER: -99 )",
    "id": 4671,
    "declarations": "T: CONICSECTION; -99: NUMBER",
    "facts": "FocalLength(T) = InterReciprocal(-99)"
},
{
    "assertion": "YCoordinate ( LowerFocus ( CONICSECTION: G ) ) equals HalfFocalLength ( CONICSECTION: n )",
    "id": 4672,
    "declarations": "G: CONICSECTION; n: CONICSECTION",
    "facts": "YCoordinate(LowerFocus(G)) = HalfFocalLength(n)"
},
{
    "assertion": "Directrix ( CONICSECTION: j ) equals PerpendicularBisector ( InterceptChord ( LINE: M, CONICSECTION: h ) )",
    "id": 4673,
    "declarations": "j: CONICSECTION; M: LINE; h: CONICSECTION",
    "facts": "Directrix(j) = PerpendicularBisector(InterceptChord(M, h))"
},
{
    "assertion": "FocalLength ( CONICSECTION: q ) equals Length ( LINESEGMENT: F )",
    "id": 4674,
    "declarations": "q: CONICSECTION; F: LINESEGMENT",
    "facts": "FocalLength(q) = Length(F)"
},
{
    "assertion": "LineSegmentOf ( POINT: a, Center ( CONICSECTION: S ) ) equals LINESEGMENT: i",
    "id": 4675,
    "declarations": "a: POINT; S: CONICSECTION; i: LINESEGMENT",
    "facts": "LineSegmentOf(a, Center(S)) = i"
},
{
    "assertion": "LeftFocus ( CONICSECTION: R ) equals LeftFocus ( CONICSECTION: t )",
    "id": 4676,
    "declarations": "R: CONICSECTION; t: CONICSECTION",
    "facts": "LeftFocus(R) = LeftFocus(t)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: e, TRIANGLE: u ) equals BOOL: True",
    "id": 4677,
    "declarations": "e: CIRCLE; u: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(e, u) = True"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: d ) ) equals LINE: C",
    "id": 4678,
    "declarations": "d: ELLIPSE; C: LINE",
    "facts": "PerpendicularBisector(ImaginaryAxis(d)) = C"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: E ) equals AXIS: xAxis",
    "id": 4679,
    "declarations": "E: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(E) = xAxis"
},
{
    "assertion": "UpperFocus ( CONICSECTION: S ) equals POINT: g",
    "id": 4680,
    "declarations": "S: CONICSECTION; g: POINT",
    "facts": "UpperFocus(S) = g"
},
{
    "assertion": "MinorAxis ( ELLIPSE: L ) equals ImaginaryAxis ( ELLIPSE: G )",
    "id": 4681,
    "declarations": "L: ELLIPSE; G: ELLIPSE",
    "facts": "MinorAxis(L) = ImaginaryAxis(G)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: F ) equals POINT: P",
    "id": 4682,
    "declarations": "F: TRIANGLE; P: POINT",
    "facts": "Orthocenter(F) = P"
},
{
    "assertion": "LeftPart ( HYPERBOLA: J ) equals CURVE: y",
    "id": 4683,
    "declarations": "J: HYPERBOLA; y: CURVE",
    "facts": "LeftPart(J) = y"
},
{
    "assertion": "Eccentricity ( CONICSECTION: p ) equals NUMBER: -63",
    "id": 4684,
    "declarations": "p: CONICSECTION; -63: NUMBER",
    "facts": "Eccentricity(p) = -63"
},
{
    "assertion": "LeftVertex ( CONICSECTION: F ) equals LeftFocus ( CONICSECTION: N )",
    "id": 4685,
    "declarations": "F: CONICSECTION; N: CONICSECTION",
    "facts": "LeftVertex(F) = LeftFocus(N)"
},
{
    "assertion": "And ( LeftPart ( HYPERBOLA: L ) equals CURVE: L, Radius ( CIRCLE: w ) equals NUMBER: -88 ) equals BOOL: False",
    "id": 4686,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftPart ( HYPERBOLA: o ) equals CURVE: J",
    "id": 4687,
    "declarations": "o: HYPERBOLA; J: CURVE",
    "facts": "LeftPart(o) = J"
},
{
    "assertion": "RightPart ( HYPERBOLA: W ) equals RightPart ( HYPERBOLA: F )",
    "id": 4688,
    "declarations": "W: HYPERBOLA; F: HYPERBOLA",
    "facts": "RightPart(W) = RightPart(F)"
},
{
    "assertion": "TangentOfPoint ( POINT: c, CURVE: i ) equals TangentOnPoint ( POINT: T, CURVE: x )",
    "id": 4689,
    "declarations": "c: POINT; i: CURVE; T: POINT; x: CURVE",
    "facts": "TangentOfPoint(c, i) = TangentOnPoint(T, x)"
},
{
    "assertion": "Quadrant ( POINT: m ) equals DotProduct ( VECTOR: s, VECTOR: u )",
    "id": 4690,
    "declarations": "m: POINT; s: VECTOR; u: VECTOR",
    "facts": "Quadrant(m) = DotProduct(s, u)"
},
{
    "assertion": "LocusEquation ( LeftFocus ( CONICSECTION: l ) ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 4691,
    "declarations": "l: CONICSECTION; y*space=*spacesin(x): EXPRESSION",
    "facts": "LocusEquation(LeftFocus(l)) = y*space=*spacesin(x)"
},
{
    "assertion": "Directrix ( CONICSECTION: o ) equals OverlappingLine ( LineSegmentOf ( LeftVertex ( CONICSECTION: m ), Circumcenter ( TRIANGLE: a ) ) )",
    "id": 4692,
    "declarations": "o: CONICSECTION; m: CONICSECTION; a: TRIANGLE",
    "facts": "Directrix(o) = OverlappingLine(LineSegmentOf(LeftVertex(m), Circumcenter(a)))"
},
{
    "assertion": "IsTangent ( LINE: K, CONICSECTION: y ) equals BOOL: True",
    "id": 4693,
    "declarations": "K: LINE; y: CONICSECTION; True: BOOL",
    "facts": "IsTangent(K, y) = True"
},
{
    "assertion": "Vertex ( CONICSECTION: j ) equals Center ( CONICSECTION: Z )",
    "id": 4694,
    "declarations": "j: CONICSECTION; Z: CONICSECTION",
    "facts": "Vertex(j) = Center(Z)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: T ) equals LeftFocus ( CONICSECTION: s )",
    "id": 4695,
    "declarations": "T: CONICSECTION; s: CONICSECTION",
    "facts": "UpperVertex(T) = LeftFocus(s)"
},
{
    "assertion": "Endpoint ( InterceptChord ( LINE: i, CONICSECTION: q ) ) equals MidPoint ( MajorAxis ( ELLIPSE: a ) )",
    "id": 4696,
    "declarations": "i: LINE; q: CONICSECTION; a: ELLIPSE",
    "facts": "Endpoint(InterceptChord(i, q)) = MidPoint(MajorAxis(a))"
},
{
    "assertion": "PerpendicularBisector ( RealAxis ( ELLIPSE: y ) ) equals OverlappingLine ( ImaginaryAxis ( ELLIPSE: n ) )",
    "id": 4697,
    "declarations": "y: ELLIPSE; n: ELLIPSE",
    "facts": "PerpendicularBisector(RealAxis(y)) = OverlappingLine(ImaginaryAxis(n))"
},
{
    "assertion": "RealAxis ( ELLIPSE: y ) equals LINESEGMENT: w",
    "id": 4698,
    "declarations": "y: ELLIPSE; w: LINESEGMENT",
    "facts": "RealAxis(y) = w"
},
{
    "assertion": "Max ( FocalLength ( CONICSECTION: d ) ) equals Intercept ( LINE: t, AXIS: yAxis )",
    "id": 4699,
    "declarations": "d: CONICSECTION; t: LINE; yAxis: AXIS",
    "facts": "Max(FocalLength(d)) = Intercept(t, yAxis)"
},
{
    "assertion": "YCoordinate ( Orthocenter ( TRIANGLE: H ) ) equals HalfFocalLength ( CONICSECTION: J )",
    "id": 4700,
    "declarations": "H: TRIANGLE; J: CONICSECTION",
    "facts": "YCoordinate(Orthocenter(H)) = HalfFocalLength(J)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: b ) equals CIRCLE: B",
    "id": 4701,
    "declarations": "b: TRIANGLE; B: CIRCLE",
    "facts": "CircumCircle(b) = B"
},
{
    "assertion": "IsParallel ( LINE: h, LINE: a ) equals BOOL: False",
    "id": 4702,
    "declarations": "h: LINE; a: LINE; False: BOOL",
    "facts": "IsParallel(h, a) = False"
},
{
    "assertion": "YCoordinate ( RightFocus ( CONICSECTION: b ) ) equals Inclination ( RightDirectrix ( CONICSECTION: R ) )",
    "id": 4703,
    "declarations": "b: CONICSECTION; R: CONICSECTION",
    "facts": "YCoordinate(RightFocus(b)) = Inclination(RightDirectrix(R))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: N ) equals LineOf ( Incenter ( TRIANGLE: a ), Orthocenter ( TRIANGLE: w ) )",
    "id": 4704,
    "declarations": "N: HYPERBOLA; a: TRIANGLE; w: TRIANGLE",
    "facts": "Asymptote(N) = LineOf(Incenter(a), Orthocenter(w))"
},
{
    "assertion": "Radius ( CIRCLE: P ) equals NUMBER: 77",
    "id": 4705,
    "declarations": "P: CIRCLE; 77: NUMBER",
    "facts": "Radius(P) = 77"
},
{
    "assertion": "Quadrant ( RightFocus ( CONICSECTION: p ) ) equals Inclination ( LineOf ( LeftFocus ( CONICSECTION: K ), POINT: H ) )",
    "id": 4706,
    "declarations": "p: CONICSECTION; K: CONICSECTION; H: POINT",
    "facts": "Quadrant(RightFocus(p)) = Inclination(LineOf(LeftFocus(K), H))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: z ) equals LINESEGMENT: d",
    "id": 4707,
    "declarations": "z: ELLIPSE; d: LINESEGMENT",
    "facts": "MinorAxis(z) = d"
},
{
    "assertion": "Asymptote ( HYPERBOLA: p ) equals LINE: P",
    "id": 4708,
    "declarations": "p: HYPERBOLA; P: LINE",
    "facts": "Asymptote(p) = P"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: C, TRIANGLE: n ) equals BOOL: False",
    "id": 4709,
    "declarations": "C: CIRCLE; n: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(C, n) = False"
},
{
    "assertion": "MajorAxis ( ELLIPSE: c ) equals MinorAxis ( ELLIPSE: w )",
    "id": 4710,
    "declarations": "c: ELLIPSE; w: ELLIPSE",
    "facts": "MajorAxis(c) = MinorAxis(w)"
},
{
    "assertion": "Directrix ( CONICSECTION: Y ) equals LINE: m",
    "id": 4711,
    "declarations": "Y: CONICSECTION; m: LINE",
    "facts": "Directrix(Y) = m"
},
{
    "assertion": "And ( RightVertex ( CONICSECTION: u ) equals POINT: r, CircumCircle ( TRIANGLE: x ) equals CIRCLE: e ) equals BOOL: False",
    "id": 4712,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightPart ( HYPERBOLA: S ) equals CURVE: o",
    "id": 4713,
    "declarations": "S: HYPERBOLA; o: CURVE",
    "facts": "RightPart(S) = o"
},
{
    "assertion": "IsTangent ( LINE: J, CONICSECTION: t ) equals BOOL: True",
    "id": 4714,
    "declarations": "J: LINE; t: CONICSECTION; True: BOOL",
    "facts": "IsTangent(J, t) = True"
},
{
    "assertion": "Negation ( UpperFocus ( CONICSECTION: l ) equals LeftFocus ( CONICSECTION: g ) ) equals BOOL: True",
    "id": 4715,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "FocalLength ( CONICSECTION: G ) equals Length ( RealAxis ( ELLIPSE: Q ) )",
    "id": 4716,
    "declarations": "G: CONICSECTION; Q: ELLIPSE",
    "facts": "FocalLength(G) = Length(RealAxis(Q))"
},
{
    "assertion": "PointOnCurve ( POINT: E, CURVE: u ) equals BOOL: False",
    "id": 4717,
    "declarations": "E: POINT; u: CURVE; False: BOOL",
    "facts": "PointOnCurve(E, u) = False"
},
{
    "assertion": "Asymptote ( HYPERBOLA: H ) equals TangentOfPoint ( LeftFocus ( CONICSECTION: f ), CURVE: T )",
    "id": 4718,
    "declarations": "H: HYPERBOLA; f: CONICSECTION; T: CURVE",
    "facts": "Asymptote(H) = TangentOfPoint(LeftFocus(f), T)"
},
{
    "assertion": "Directrix ( CONICSECTION: m ) equals RightDirectrix ( CONICSECTION: C )",
    "id": 4719,
    "declarations": "m: CONICSECTION; C: CONICSECTION",
    "facts": "Directrix(m) = RightDirectrix(C)"
},
{
    "assertion": "IsParallel ( PerpendicularBisector ( LINESEGMENT: h ), LINE: r ) equals BOOL: True",
    "id": 4720,
    "declarations": "h: LINESEGMENT; r: LINE; True: BOOL",
    "facts": "IsParallel(PerpendicularBisector(h), r) = True"
},
{
    "assertion": "YCoordinate ( POINT: t ) equals HalfFocalLength ( CONICSECTION: D )",
    "id": 4721,
    "declarations": "t: POINT; D: CONICSECTION",
    "facts": "YCoordinate(t) = HalfFocalLength(D)"
},
{
    "assertion": "Max ( Area ( CONICSECTION: v ) ) equals NUMBER: 13",
    "id": 4722,
    "declarations": "v: CONICSECTION; 13: NUMBER",
    "facts": "Max(Area(v)) = 13"
},
{
    "assertion": "MinorAxis ( ELLIPSE: X ) equals LINESEGMENT: x",
    "id": 4723,
    "declarations": "X: ELLIPSE; x: LINESEGMENT",
    "facts": "MinorAxis(X) = x"
},
{
    "assertion": "Inclination ( LINE: C ) equals NUMBER: -48",
    "id": 4724,
    "declarations": "C: LINE; -48: NUMBER",
    "facts": "Inclination(C) = -48"
},
{
    "assertion": "Diameter ( CIRCLE: Z ) equals Abs ( LINESEGMENT: z )",
    "id": 4725,
    "declarations": "Z: CIRCLE; z: LINESEGMENT",
    "facts": "Diameter(Z) = Abs(z)"
},
{
    "assertion": "XCoordinate ( FootPoint ( LINE: z, LINE: r ) ) equals NUMBER: 65",
    "id": 4726,
    "declarations": "z: LINE; r: LINE; 65: NUMBER",
    "facts": "XCoordinate(FootPoint(z, r)) = 65"
},
{
    "assertion": "Inclination ( LINE: f ) equals Inclination ( LINE: k )",
    "id": 4727,
    "declarations": "f: LINE; k: LINE",
    "facts": "Inclination(f) = Inclination(k)"
},
{
    "assertion": "sqrt ( Abs ( MajorAxis ( ELLIPSE: E ) ) ) equals DotProduct ( VECTOR: c, VECTOR: u )",
    "id": 4728,
    "declarations": "E: ELLIPSE; c: VECTOR; u: VECTOR",
    "facts": "sqrt(Abs(MajorAxis(E))) = DotProduct(c, u)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: z ) equals FootPoint ( LINE: m, LINE: w )",
    "id": 4729,
    "declarations": "z: CONICSECTION; m: LINE; w: LINE",
    "facts": "UpperVertex(z) = FootPoint(m, w)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: P ) equals LINE: g",
    "id": 4730,
    "declarations": "P: LINESEGMENT; g: LINE",
    "facts": "PerpendicularBisector(P) = g"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: H, TRIANGLE: L ) equals BOOL: False",
    "id": 4731,
    "declarations": "H: CIRCLE; L: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(H, L) = False"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: E, TRIANGLE: x ) equals BOOL: False",
    "id": 4732,
    "declarations": "E: CIRCLE; x: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(E, x) = False"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: Y ) equals LINE: Z",
    "id": 4733,
    "declarations": "Y: LINESEGMENT; Z: LINE",
    "facts": "PerpendicularBisector(Y) = Z"
},
{
    "assertion": "LineSegmentOf ( POINT: u, POINT: a ) equals LINESEGMENT: D",
    "id": 4734,
    "declarations": "u: POINT; a: POINT; D: LINESEGMENT",
    "facts": "LineSegmentOf(u, a) = D"
},
{
    "assertion": "YCoordinate ( POINT: W ) equals NUMBER: 40",
    "id": 4735,
    "declarations": "W: POINT; 40: NUMBER",
    "facts": "YCoordinate(W) = 40"
},
{
    "assertion": "Center ( CONICSECTION: q ) equals LeftVertex ( CONICSECTION: K )",
    "id": 4736,
    "declarations": "q: CONICSECTION; K: CONICSECTION",
    "facts": "Center(q) = LeftVertex(K)"
},
{
    "assertion": "Center ( CONICSECTION: q ) equals POINT: g",
    "id": 4737,
    "declarations": "q: CONICSECTION; g: POINT",
    "facts": "Center(q) = g"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: Q ) equals NUMBER: 66",
    "id": 4738,
    "declarations": "Q: CONICSECTION; 66: NUMBER",
    "facts": "HalfFocalLength(Q) = 66"
},
{
    "assertion": "Expression ( CURVE: M ) equals EXPRESSION: x^2*space+*spacey*space=*space4",
    "id": 4739,
    "declarations": "M: CURVE; x^2*space+*spacey*space=*space4: EXPRESSION",
    "facts": "Expression(M) = x^2*space+*spacey*space=*space4"
},
{
    "assertion": "Max ( NUMBER: -42 ) equals NUMBER: 76",
    "id": 4740,
    "declarations": "-42: NUMBER; 76: NUMBER",
    "facts": "Max(-42) = 76"
},
{
    "assertion": "VectorOf ( LowerFocus ( CONICSECTION: s ), Incenter ( TRIANGLE: c ) ) equals VECTOR: I",
    "id": 4741,
    "declarations": "s: CONICSECTION; c: TRIANGLE; I: VECTOR",
    "facts": "VectorOf(LowerFocus(s), Incenter(c)) = I"
},
{
    "assertion": "VectorOf ( POINT: J, POINT: K ) equals VECTOR: S",
    "id": 4742,
    "declarations": "J: POINT; K: POINT; S: VECTOR",
    "facts": "VectorOf(J, K) = S"
},
{
    "assertion": "IsIntersect ( LeftPart ( HYPERBOLA: V ), CURVE: X ) equals BOOL: True",
    "id": 4743,
    "declarations": "V: HYPERBOLA; X: CURVE; True: BOOL",
    "facts": "IsIntersect(LeftPart(V), X) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: z ) equals RealAxis ( ELLIPSE: i )",
    "id": 4744,
    "declarations": "z: ELLIPSE; i: ELLIPSE",
    "facts": "MajorAxis(z) = RealAxis(i)"
},
{
    "assertion": "Expression ( CURVE: R ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 4745,
    "declarations": "R: CURVE; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "Expression(R) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "InterceptChord ( LINE: R, CONICSECTION: r ) equals MinorAxis ( ELLIPSE: L )",
    "id": 4746,
    "declarations": "R: LINE; r: CONICSECTION; L: ELLIPSE",
    "facts": "InterceptChord(R, r) = MinorAxis(L)"
},
{
    "assertion": "And ( NumIntersection ( CURVE: c, RightPart ( HYPERBOLA: P ) ) equals YCoordinate ( RightVertex ( CONICSECTION: H ) ), OverlappingLine ( LINESEGMENT: e ) equals LINE: y ) equals BOOL: False",
    "id": 4747,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LineOf ( LeftVertex ( CONICSECTION: m ), POINT: C ) equals LINE: h",
    "id": 4748,
    "declarations": "m: CONICSECTION; C: POINT; h: LINE",
    "facts": "LineOf(LeftVertex(m), C) = h"
},
{
    "assertion": "Min ( YCoordinate ( MidPoint ( LINESEGMENT: T ) ) ) equals NUMBER: 55",
    "id": 4749,
    "declarations": "T: LINESEGMENT; 55: NUMBER",
    "facts": "Min(YCoordinate(MidPoint(T))) = 55"
},
{
    "assertion": "VectorOf ( POINT: a, FootPoint ( PerpendicularBisector ( LINESEGMENT: T ), LINE: K ) ) equals VECTOR: q",
    "id": 4750,
    "declarations": "a: POINT; T: LINESEGMENT; K: LINE; q: VECTOR",
    "facts": "VectorOf(a, FootPoint(PerpendicularBisector(T), K)) = q"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: C ) equals Area ( CONICSECTION: J )",
    "id": 4751,
    "declarations": "C: CONICSECTION; J: CONICSECTION",
    "facts": "HalfFocalLength(C) = Area(J)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: D ) equals LINESEGMENT: L",
    "id": 4752,
    "declarations": "D: ELLIPSE; L: LINESEGMENT",
    "facts": "ImaginaryAxis(D) = L"
},
{
    "assertion": "Quadrant ( Orthocenter ( TRIANGLE: z ) ) equals Slope ( LINE: G )",
    "id": 4753,
    "declarations": "z: TRIANGLE; G: LINE",
    "facts": "Quadrant(Orthocenter(z)) = Slope(G)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: m ) equals LINE: S",
    "id": 4754,
    "declarations": "m: CONICSECTION; S: LINE",
    "facts": "LeftDirectrix(m) = S"
},
{
    "assertion": "Endpoint ( LINESEGMENT: Z ) equals LowerVertex ( CONICSECTION: N )",
    "id": 4755,
    "declarations": "Z: LINESEGMENT; N: CONICSECTION",
    "facts": "Endpoint(Z) = LowerVertex(N)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: g ) equals sqrt ( Quadrant ( LeftVertex ( CONICSECTION: F ) ) )",
    "id": 4756,
    "declarations": "g: CONICSECTION; F: CONICSECTION",
    "facts": "Eccentricity(g) = sqrt(Quadrant(LeftVertex(F)))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: j ) equals LINE: V",
    "id": 4757,
    "declarations": "j: CONICSECTION; V: LINE",
    "facts": "RightDirectrix(j) = V"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: w ) equals AXIS: yAxis",
    "id": 4758,
    "declarations": "w: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(w) = yAxis"
},
{
    "assertion": "MajorAxis ( ELLIPSE: p ) equals RealAxis ( ELLIPSE: j )",
    "id": 4759,
    "declarations": "p: ELLIPSE; j: ELLIPSE",
    "facts": "MajorAxis(p) = RealAxis(j)"
},
{
    "assertion": "TangentOfPoint ( POINT: F, CURVE: X ) equals LINE: b",
    "id": 4760,
    "declarations": "F: POINT; X: CURVE; b: LINE",
    "facts": "TangentOfPoint(F, X) = b"
},
{
    "assertion": "FootPoint ( LINE: O, LINE: G ) equals POINT: I",
    "id": 4761,
    "declarations": "O: LINE; G: LINE; I: POINT",
    "facts": "FootPoint(O, G) = I"
},
{
    "assertion": "Intersection ( CURVE: v, RightPart ( HYPERBOLA: p ) ) equals RightVertex ( CONICSECTION: B )",
    "id": 4762,
    "declarations": "v: CURVE; p: HYPERBOLA; B: CONICSECTION",
    "facts": "Intersection(v, RightPart(p)) = RightVertex(B)"
},
{
    "assertion": "LocusEquation ( LeftFocus ( CONICSECTION: a ) ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 4763,
    "declarations": "a: CONICSECTION; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "LocusEquation(LeftFocus(a)) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "YCoordinate ( LowerFocus ( CONICSECTION: u ) ) equals NUMBER: 29",
    "id": 4764,
    "declarations": "u: CONICSECTION; 29: NUMBER",
    "facts": "YCoordinate(LowerFocus(u)) = 29"
},
{
    "assertion": "Asymptote ( HYPERBOLA: Q ) equals OverlappingLine ( LINESEGMENT: L )",
    "id": 4765,
    "declarations": "Q: HYPERBOLA; L: LINESEGMENT",
    "facts": "Asymptote(Q) = OverlappingLine(L)"
},
{
    "assertion": "Directrix ( CONICSECTION: o ) equals TangentOfPoint ( POINT: Z, CURVE: Z )",
    "id": 4766,
    "declarations": "o: CONICSECTION; Z: POINT; Z: CURVE",
    "facts": "Directrix(o) = TangentOfPoint(Z, Z)"
},
{
    "assertion": "Directrix ( CONICSECTION: Q ) equals LINE: M",
    "id": 4767,
    "declarations": "Q: CONICSECTION; M: LINE",
    "facts": "Directrix(Q) = M"
},
{
    "assertion": "RightPart ( HYPERBOLA: N ) equals LeftPart ( HYPERBOLA: k )",
    "id": 4768,
    "declarations": "N: HYPERBOLA; k: HYPERBOLA",
    "facts": "RightPart(N) = LeftPart(k)"
},
{
    "assertion": "Distance ( POINT: B, LowerFocus ( CONICSECTION: L ) ) equals lg ( Min ( NUMBER: -23 ) )",
    "id": 4769,
    "declarations": "B: POINT; L: CONICSECTION; -23: NUMBER",
    "facts": "Distance(B, LowerFocus(L)) = lg(Min(-23))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: o ) equals POINT: D",
    "id": 4770,
    "declarations": "o: CONICSECTION; D: POINT",
    "facts": "LeftVertex(o) = D"
},
{
    "assertion": "Min ( Inclination ( LeftDirectrix ( CONICSECTION: U ) ) ) equals Perimeter ( CONICSECTION: H )",
    "id": 4771,
    "declarations": "U: CONICSECTION; H: CONICSECTION",
    "facts": "Min(Inclination(LeftDirectrix(U))) = Perimeter(H)"
},
{
    "assertion": "YCoordinate ( LeftFocus ( CONICSECTION: K ) ) equals NUMBER: 29",
    "id": 4772,
    "declarations": "K: CONICSECTION; 29: NUMBER",
    "facts": "YCoordinate(LeftFocus(K)) = 29"
},
{
    "assertion": "LeftFocus ( CONICSECTION: t ) equals UpperVertex ( CONICSECTION: F )",
    "id": 4773,
    "declarations": "t: CONICSECTION; F: CONICSECTION",
    "facts": "LeftFocus(t) = UpperVertex(F)"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: j ) ) equals Abs ( LINESEGMENT: B )",
    "id": 4774,
    "declarations": "j: CONICSECTION; B: LINESEGMENT",
    "facts": "Inclination(LeftDirectrix(j)) = Abs(B)"
},
{
    "assertion": "AngleOf ( POINT: D, MidPoint ( ImaginaryAxis ( ELLIPSE: N ) ), Circumcenter ( TRIANGLE: u ) ) equals ApplyUnit ( NUMBER: 85, DEGREESTR: degree )",
    "id": 4775,
    "declarations": "D: POINT; N: ELLIPSE; u: TRIANGLE; 85: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(D, MidPoint(ImaginaryAxis(N)), Circumcenter(u)) = ApplyUnit(85, degree)"
},
{
    "assertion": "RightFocus ( CONICSECTION: V ) equals UpperVertex ( CONICSECTION: j )",
    "id": 4776,
    "declarations": "V: CONICSECTION; j: CONICSECTION",
    "facts": "RightFocus(V) = UpperVertex(j)"
},
{
    "assertion": "Directrix ( CONICSECTION: s ) equals RightDirectrix ( CONICSECTION: X )",
    "id": 4777,
    "declarations": "s: CONICSECTION; X: CONICSECTION",
    "facts": "Directrix(s) = RightDirectrix(X)"
},
{
    "assertion": "PointOnCurve ( POINT: Z, CURVE: p ) equals BOOL: False",
    "id": 4778,
    "declarations": "Z: POINT; p: CURVE; False: BOOL",
    "facts": "PointOnCurve(Z, p) = False"
},
{
    "assertion": "IsPerpendicular ( LINE: u, PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: j ) ) ) equals BOOL: False",
    "id": 4779,
    "declarations": "u: LINE; j: ELLIPSE; False: BOOL",
    "facts": "IsPerpendicular(u, PerpendicularBisector(ImaginaryAxis(j))) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: u ) equals MidPoint ( LINESEGMENT: k )",
    "id": 4780,
    "declarations": "u: TRIANGLE; k: LINESEGMENT",
    "facts": "Incenter(u) = MidPoint(k)"
},
{
    "assertion": "YCoordinate ( RightFocus ( CONICSECTION: Y ) ) equals Diameter ( CIRCLE: D )",
    "id": 4781,
    "declarations": "Y: CONICSECTION; D: CIRCLE",
    "facts": "YCoordinate(RightFocus(Y)) = Diameter(D)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: h ) equals LINE: m",
    "id": 4782,
    "declarations": "h: LINESEGMENT; m: LINE",
    "facts": "OverlappingLine(h) = m"
},
{
    "assertion": "InterReciprocal ( YCoordinate ( Orthocenter ( TRIANGLE: o ) ) ) equals Area ( CONICSECTION: f )",
    "id": 4783,
    "declarations": "o: TRIANGLE; f: CONICSECTION",
    "facts": "InterReciprocal(YCoordinate(Orthocenter(o))) = Area(f)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: u ) equals MinorAxis ( ELLIPSE: w )",
    "id": 4784,
    "declarations": "u: ELLIPSE; w: ELLIPSE",
    "facts": "MajorAxis(u) = MinorAxis(w)"
},
{
    "assertion": "Focus ( CONICSECTION: M ) equals POINT: B",
    "id": 4785,
    "declarations": "M: CONICSECTION; B: POINT",
    "facts": "Focus(M) = B"
},
{
    "assertion": "Projection ( POINT: z, TangentOfPoint ( LeftFocus ( CONICSECTION: H ), CURVE: r ) ) equals UpperVertex ( CONICSECTION: F )",
    "id": 4786,
    "declarations": "z: POINT; H: CONICSECTION; r: CURVE; F: CONICSECTION",
    "facts": "Projection(z, TangentOfPoint(LeftFocus(H), r)) = UpperVertex(F)"
},
{
    "assertion": "Vertex ( CONICSECTION: N ) equals POINT: H",
    "id": 4787,
    "declarations": "N: CONICSECTION; H: POINT",
    "facts": "Vertex(N) = H"
},
{
    "assertion": "Negation ( UpperFocus ( CONICSECTION: h ) equals POINT: e ) equals BOOL: True",
    "id": 4788,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsIntersect ( CURVE: y, RightPart ( HYPERBOLA: c ) ) equals BOOL: False",
    "id": 4789,
    "declarations": "y: CURVE; c: HYPERBOLA; False: BOOL",
    "facts": "IsIntersect(y, RightPart(c)) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: H, TRIANGLE: a ) equals BOOL: False",
    "id": 4790,
    "declarations": "H: CIRCLE; a: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(H, a) = False"
},
{
    "assertion": "Quadrant ( RightFocus ( CONICSECTION: C ) ) equals InterReciprocal ( Area ( CONICSECTION: S ) )",
    "id": 4791,
    "declarations": "C: CONICSECTION; S: CONICSECTION",
    "facts": "Quadrant(RightFocus(C)) = InterReciprocal(Area(S))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: O ) equals LINESEGMENT: F",
    "id": 4792,
    "declarations": "O: ELLIPSE; F: LINESEGMENT",
    "facts": "MajorAxis(O) = F"
},
{
    "assertion": "Locus ( Orthocenter ( TRIANGLE: V ) ) equals RightPart ( HYPERBOLA: J )",
    "id": 4793,
    "declarations": "V: TRIANGLE; J: HYPERBOLA",
    "facts": "Locus(Orthocenter(V)) = RightPart(J)"
},
{
    "assertion": "PointOnCurve ( LeftVertex ( CONICSECTION: J ), CURVE: B ) equals BOOL: False",
    "id": 4794,
    "declarations": "J: CONICSECTION; B: CURVE; False: BOOL",
    "facts": "PointOnCurve(LeftVertex(J), B) = False"
},
{
    "assertion": "Length ( MajorAxis ( ELLIPSE: J ) ) equals YCoordinate ( Center ( CONICSECTION: o ) )",
    "id": 4795,
    "declarations": "J: ELLIPSE; o: CONICSECTION",
    "facts": "Length(MajorAxis(J)) = YCoordinate(Center(o))"
},
{
    "assertion": "Length ( LineSegmentOf ( Center ( CONICSECTION: t ), POINT: w ) ) equals NUMBER: 63",
    "id": 4796,
    "declarations": "t: CONICSECTION; w: POINT; 63: NUMBER",
    "facts": "Length(LineSegmentOf(Center(t), w)) = 63"
},
{
    "assertion": "IsChordOf ( MinorAxis ( ELLIPSE: K ), CONICSECTION: Z ) equals BOOL: True",
    "id": 4797,
    "declarations": "K: ELLIPSE; Z: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(MinorAxis(K), Z) = True"
},
{
    "assertion": "InterReciprocal ( NUMBER: 7 ) equals Min ( YCoordinate ( LowerFocus ( CONICSECTION: K ) ) )",
    "id": 4798,
    "declarations": "7: NUMBER; K: CONICSECTION",
    "facts": "InterReciprocal(7) = Min(YCoordinate(LowerFocus(K)))"
},
{
    "assertion": "IsTangent ( LINE: P, CONICSECTION: u ) equals BOOL: True",
    "id": 4799,
    "declarations": "P: LINE; u: CONICSECTION; True: BOOL",
    "facts": "IsTangent(P, u) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: o ) equals NUMBER: -58",
    "id": 4800,
    "declarations": "o: CONICSECTION; -58: NUMBER",
    "facts": "HalfFocalLength(o) = -58"
},
{
    "assertion": "Intersection ( CURVE: f, CURVE: V ) equals UpperFocus ( CONICSECTION: q )",
    "id": 4801,
    "declarations": "f: CURVE; V: CURVE; q: CONICSECTION",
    "facts": "Intersection(f, V) = UpperFocus(q)"
},
{
    "assertion": "Perimeter ( CONICSECTION: j ) equals lg ( NUMBER: 78 )",
    "id": 4802,
    "declarations": "j: CONICSECTION; 78: NUMBER",
    "facts": "Perimeter(j) = lg(78)"
},
{
    "assertion": "sqrt ( NUMBER: 31 ) equals Inclination ( LineOf ( POINT: i, UpperVertex ( CONICSECTION: m ) ) )",
    "id": 4803,
    "declarations": "31: NUMBER; i: POINT; m: CONICSECTION",
    "facts": "sqrt(31) = Inclination(LineOf(i, UpperVertex(m)))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: E ) equals POINT: c",
    "id": 4804,
    "declarations": "E: LINESEGMENT; c: POINT",
    "facts": "Endpoint(E) = c"
},
{
    "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: I ) ) equals Eccentricity ( CONICSECTION: h )",
    "id": 4805,
    "declarations": "I: CONICSECTION; h: CONICSECTION",
    "facts": "XCoordinate(UpperVertex(I)) = Eccentricity(h)"
},
{
    "assertion": "Negation ( YCoordinate ( LowerVertex ( CONICSECTION: M ) ) equals Perimeter ( CONICSECTION: Q ) ) equals BOOL: False",
    "id": 4806,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "InterReciprocal ( Radius ( CIRCLE: g ) ) equals NUMBER: -52",
    "id": 4807,
    "declarations": "g: CIRCLE; -52: NUMBER",
    "facts": "InterReciprocal(Radius(g)) = -52"
},
{
    "assertion": "Projection ( Orthocenter ( TRIANGLE: x ), LINE: A ) equals Orthocenter ( TRIANGLE: k )",
    "id": 4808,
    "declarations": "x: TRIANGLE; A: LINE; k: TRIANGLE",
    "facts": "Projection(Orthocenter(x), A) = Orthocenter(k)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: m ) equals LINE: P",
    "id": 4809,
    "declarations": "m: LINESEGMENT; P: LINE",
    "facts": "OverlappingLine(m) = P"
},
{
    "assertion": "IsPerpendicular ( PerpendicularBisector ( LINESEGMENT: V ), LINE: v ) equals BOOL: True",
    "id": 4810,
    "declarations": "V: LINESEGMENT; v: LINE; True: BOOL",
    "facts": "IsPerpendicular(PerpendicularBisector(V), v) = True"
},
{
    "assertion": "Endpoint ( LINESEGMENT: l ) equals POINT: r",
    "id": 4811,
    "declarations": "l: LINESEGMENT; r: POINT",
    "facts": "Endpoint(l) = r"
},
{
    "assertion": "Abs ( ImaginaryAxis ( ELLIPSE: A ) ) equals Abs ( LINESEGMENT: u )",
    "id": 4812,
    "declarations": "A: ELLIPSE; u: LINESEGMENT",
    "facts": "Abs(ImaginaryAxis(A)) = Abs(u)"
},
{
    "assertion": "Min ( Diameter ( CIRCLE: d ) ) equals DotProduct ( VECTOR: G, VECTOR: g )",
    "id": 4813,
    "declarations": "d: CIRCLE; G: VECTOR; g: VECTOR",
    "facts": "Min(Diameter(d)) = DotProduct(G, g)"
},
{
    "assertion": "Abs ( LINESEGMENT: i ) equals Perimeter ( CONICSECTION: e )",
    "id": 4814,
    "declarations": "i: LINESEGMENT; e: CONICSECTION",
    "facts": "Abs(i) = Perimeter(e)"
},
{
    "assertion": "Min ( NUMBER: 60 ) equals Inclination ( LINE: y )",
    "id": 4815,
    "declarations": "60: NUMBER; y: LINE",
    "facts": "Min(60) = Inclination(y)"
},
{
    "assertion": "sqrt ( NUMBER: 91 ) equals sqrt ( HalfFocalLength ( CONICSECTION: F ) )",
    "id": 4816,
    "declarations": "91: NUMBER; F: CONICSECTION",
    "facts": "sqrt(91) = sqrt(HalfFocalLength(F))"
},
{
    "assertion": "RightPart ( HYPERBOLA: c ) equals LeftPart ( HYPERBOLA: f )",
    "id": 4817,
    "declarations": "c: HYPERBOLA; f: HYPERBOLA",
    "facts": "RightPart(c) = LeftPart(f)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: b ) equals LINE: F",
    "id": 4818,
    "declarations": "b: CONICSECTION; F: LINE",
    "facts": "RightDirectrix(b) = F"
},
{
    "assertion": "Area ( CONICSECTION: Y ) equals NUMBER: -81",
    "id": 4819,
    "declarations": "Y: CONICSECTION; -81: NUMBER",
    "facts": "Area(Y) = -81"
},
{
    "assertion": "IsOutTangent ( CIRCLE: G, CIRCLE: T ) equals BOOL: True",
    "id": 4820,
    "declarations": "G: CIRCLE; T: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(G, T) = True"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: B ) equals OverlappingLine ( LINESEGMENT: M )",
    "id": 4821,
    "declarations": "B: CONICSECTION; M: LINESEGMENT",
    "facts": "LeftDirectrix(B) = OverlappingLine(M)"
},
{
    "assertion": "NumIntersection ( CURVE: w, LeftPart ( HYPERBOLA: H ) ) equals Diameter ( CIRCLE: t )",
    "id": 4822,
    "declarations": "w: CURVE; H: HYPERBOLA; t: CIRCLE",
    "facts": "NumIntersection(w, LeftPart(H)) = Diameter(t)"
},
{
    "assertion": "IsIntersect ( CURVE: B, RightPart ( HYPERBOLA: C ) ) equals BOOL: True",
    "id": 4823,
    "declarations": "B: CURVE; C: HYPERBOLA; True: BOOL",
    "facts": "IsIntersect(B, RightPart(C)) = True"
},
{
    "assertion": "VectorOf ( LeftFocus ( CONICSECTION: W ), Incenter ( TRIANGLE: b ) ) equals VECTOR: e",
    "id": 4824,
    "declarations": "W: CONICSECTION; b: TRIANGLE; e: VECTOR",
    "facts": "VectorOf(LeftFocus(W), Incenter(b)) = e"
},
{
    "assertion": "NumIntersection ( CURVE: F, CURVE: t ) equals Abs ( RealAxis ( ELLIPSE: Q ) )",
    "id": 4825,
    "declarations": "F: CURVE; t: CURVE; Q: ELLIPSE",
    "facts": "NumIntersection(F, t) = Abs(RealAxis(Q))"
},
{
    "assertion": "IsDiameter ( InterceptChord ( TangentOnPoint ( POINT: C, CURVE: t ), CONICSECTION: z ), CIRCLE: x ) equals BOOL: True",
    "id": 4826,
    "declarations": "C: POINT; t: CURVE; z: CONICSECTION; x: CIRCLE; True: BOOL",
    "facts": "IsDiameter(InterceptChord(TangentOnPoint(C, t), z), x) = True"
},
{
    "assertion": "sqrt ( YCoordinate ( FootPoint ( LINE: t, LINE: D ) ) ) equals NUMBER: 2",
    "id": 4827,
    "declarations": "t: LINE; D: LINE; 2: NUMBER",
    "facts": "sqrt(YCoordinate(FootPoint(t, D))) = 2"
},
{
    "assertion": "IsIntersect ( CURVE: f, CURVE: e ) equals BOOL: False",
    "id": 4828,
    "declarations": "f: CURVE; e: CURVE; False: BOOL",
    "facts": "IsIntersect(f, e) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: L, TRIANGLE: X ) equals BOOL: False",
    "id": 4829,
    "declarations": "L: CIRCLE; X: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(L, X) = False"
},
{
    "assertion": "Diameter ( CIRCLE: M ) equals NUMBER: -72",
    "id": 4830,
    "declarations": "M: CIRCLE; -72: NUMBER",
    "facts": "Diameter(M) = -72"
},
{
    "assertion": "MinorAxis ( ELLIPSE: c ) equals LINESEGMENT: j",
    "id": 4831,
    "declarations": "c: ELLIPSE; j: LINESEGMENT",
    "facts": "MinorAxis(c) = j"
},
{
    "assertion": "NumIntersection ( Locus ( POINT: u ), RightPart ( HYPERBOLA: v ) ) equals HalfFocalLength ( CONICSECTION: J )",
    "id": 4832,
    "declarations": "u: POINT; v: HYPERBOLA; J: CONICSECTION",
    "facts": "NumIntersection(Locus(u), RightPart(v)) = HalfFocalLength(J)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: i ) equals LineSegmentOf ( UpperFocus ( CONICSECTION: d ), POINT: d )",
    "id": 4833,
    "declarations": "i: ELLIPSE; d: CONICSECTION; d: POINT",
    "facts": "ImaginaryAxis(i) = LineSegmentOf(UpperFocus(d), d)"
},
{
    "assertion": "IsIntersect ( CURVE: t, CURVE: q ) equals BOOL: False",
    "id": 4834,
    "declarations": "t: CURVE; q: CURVE; False: BOOL",
    "facts": "IsIntersect(t, q) = False"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: O ) equals LINE: V",
    "id": 4835,
    "declarations": "O: CONICSECTION; V: LINE",
    "facts": "RightDirectrix(O) = V"
},
{
    "assertion": "FocalLength ( CONICSECTION: w ) equals YCoordinate ( LeftFocus ( CONICSECTION: e ) )",
    "id": 4836,
    "declarations": "w: CONICSECTION; e: CONICSECTION",
    "facts": "FocalLength(w) = YCoordinate(LeftFocus(e))"
},
{
    "assertion": "RealAxis ( ELLIPSE: i ) equals LINESEGMENT: f",
    "id": 4837,
    "declarations": "i: ELLIPSE; f: LINESEGMENT",
    "facts": "RealAxis(i) = f"
},
{
    "assertion": "Diameter ( CIRCLE: T ) equals Perimeter ( CONICSECTION: U )",
    "id": 4838,
    "declarations": "T: CIRCLE; U: CONICSECTION",
    "facts": "Diameter(T) = Perimeter(U)"
},
{
    "assertion": "lg ( lg ( HalfFocalLength ( CONICSECTION: S ) ) ) equals Diameter ( CIRCLE: g )",
    "id": 4839,
    "declarations": "S: CONICSECTION; g: CIRCLE",
    "facts": "lg(lg(HalfFocalLength(S))) = Diameter(g)"
},
{
    "assertion": "IsTangent ( LINE: o, CONICSECTION: B ) equals BOOL: False",
    "id": 4840,
    "declarations": "o: LINE; B: CONICSECTION; False: BOOL",
    "facts": "IsTangent(o, B) = False"
},
{
    "assertion": "DotProduct ( VECTOR: x, VectorOf ( LeftFocus ( CONICSECTION: y ), POINT: p ) ) equals lg ( YCoordinate ( Center ( CONICSECTION: j ) ) )",
    "id": 4841,
    "declarations": "x: VECTOR; y: CONICSECTION; p: POINT; j: CONICSECTION",
    "facts": "DotProduct(x, VectorOf(LeftFocus(y), p)) = lg(YCoordinate(Center(j)))"
},
{
    "assertion": "Perimeter ( CONICSECTION: F ) equals Area ( CONICSECTION: i )",
    "id": 4842,
    "declarations": "F: CONICSECTION; i: CONICSECTION",
    "facts": "Perimeter(F) = Area(i)"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: b ), TRIANGLE: H ) equals BOOL: False",
    "id": 4843,
    "declarations": "b: TRIANGLE; H: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(b), H) = False"
},
{
    "assertion": "Projection ( LowerFocus ( CONICSECTION: h ), LINE: s ) equals POINT: I",
    "id": 4844,
    "declarations": "h: CONICSECTION; s: LINE; I: POINT",
    "facts": "Projection(LowerFocus(h), s) = I"
},
{
    "assertion": "MajorAxis ( ELLIPSE: I ) equals MinorAxis ( ELLIPSE: S )",
    "id": 4845,
    "declarations": "I: ELLIPSE; S: ELLIPSE",
    "facts": "MajorAxis(I) = MinorAxis(S)"
},
{
    "assertion": "Focus ( CONICSECTION: w ) equals RightVertex ( CONICSECTION: L )",
    "id": 4846,
    "declarations": "w: CONICSECTION; L: CONICSECTION",
    "facts": "Focus(w) = RightVertex(L)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: w ) equals LINE: a",
    "id": 4847,
    "declarations": "w: CONICSECTION; a: LINE",
    "facts": "LeftDirectrix(w) = a"
},
{
    "assertion": "LeftVertex ( CONICSECTION: F ) equals POINT: R",
    "id": 4848,
    "declarations": "F: CONICSECTION; R: POINT",
    "facts": "LeftVertex(F) = R"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: Y ) equals InterceptChord ( RightDirectrix ( CONICSECTION: e ), CONICSECTION: u )",
    "id": 4849,
    "declarations": "Y: ELLIPSE; e: CONICSECTION; u: CONICSECTION",
    "facts": "ImaginaryAxis(Y) = InterceptChord(RightDirectrix(e), u)"
},
{
    "assertion": "Area ( CONICSECTION: m ) equals FocalLength ( CONICSECTION: B )",
    "id": 4850,
    "declarations": "m: CONICSECTION; B: CONICSECTION",
    "facts": "Area(m) = FocalLength(B)"
},
{
    "assertion": "sqrt ( Radius ( CIRCLE: f ) ) equals NUMBER: 94",
    "id": 4851,
    "declarations": "f: CIRCLE; 94: NUMBER",
    "facts": "sqrt(Radius(f)) = 94"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: j ) ) equals NUMBER: -25",
    "id": 4852,
    "declarations": "j: TRIANGLE; -25: NUMBER",
    "facts": "Diameter(CircumCircle(j)) = -25"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: r ) equals LINE: f",
    "id": 4853,
    "declarations": "r: CONICSECTION; f: LINE",
    "facts": "LeftDirectrix(r) = f"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: I ) equals RightDirectrix ( CONICSECTION: U )",
    "id": 4854,
    "declarations": "I: CONICSECTION; U: CONICSECTION",
    "facts": "RightDirectrix(I) = RightDirectrix(U)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: W ) equals LINESEGMENT: q",
    "id": 4855,
    "declarations": "W: ELLIPSE; q: LINESEGMENT",
    "facts": "MinorAxis(W) = q"
},
{
    "assertion": "LeftFocus ( CONICSECTION: B ) equals LowerFocus ( CONICSECTION: g )",
    "id": 4856,
    "declarations": "B: CONICSECTION; g: CONICSECTION",
    "facts": "LeftFocus(B) = LowerFocus(g)"
},
{
    "assertion": "Min ( Inclination ( RightDirectrix ( CONICSECTION: t ) ) ) equals NUMBER: 10",
    "id": 4857,
    "declarations": "t: CONICSECTION; 10: NUMBER",
    "facts": "Min(Inclination(RightDirectrix(t))) = 10"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: n, CircumCircle ( TRIANGLE: m ) ) equals BOOL: True",
    "id": 4858,
    "declarations": "n: LINESEGMENT; m: TRIANGLE; True: BOOL",
    "facts": "IsDiameter(n, CircumCircle(m)) = True"
},
{
    "assertion": "RightPart ( HYPERBOLA: C ) equals RightPart ( HYPERBOLA: V )",
    "id": 4859,
    "declarations": "C: HYPERBOLA; V: HYPERBOLA",
    "facts": "RightPart(C) = RightPart(V)"
},
{
    "assertion": "RightFocus ( CONICSECTION: V ) equals POINT: X",
    "id": 4860,
    "declarations": "V: CONICSECTION; X: POINT",
    "facts": "RightFocus(V) = X"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: n ) ) equals LeftVertex ( CONICSECTION: N )",
    "id": 4861,
    "declarations": "n: ELLIPSE; N: CONICSECTION",
    "facts": "MidPoint(MajorAxis(n)) = LeftVertex(N)"
},
{
    "assertion": "Radius ( CIRCLE: P ) equals NUMBER: 31",
    "id": 4862,
    "declarations": "P: CIRCLE; 31: NUMBER",
    "facts": "Radius(P) = 31"
},
{
    "assertion": "XCoordinate ( Orthocenter ( TRIANGLE: x ) ) equals sqrt ( NUMBER: 46 )",
    "id": 4863,
    "declarations": "x: TRIANGLE; 46: NUMBER",
    "facts": "XCoordinate(Orthocenter(x)) = sqrt(46)"
},
{
    "assertion": "FocalLength ( CONICSECTION: d ) equals lg ( NUMBER: -66 )",
    "id": 4864,
    "declarations": "d: CONICSECTION; -66: NUMBER",
    "facts": "FocalLength(d) = lg(-66)"
},
{
    "assertion": "Inclination ( TangentOnPoint ( POINT: y, CURVE: h ) ) equals lg ( Diameter ( CIRCLE: n ) )",
    "id": 4865,
    "declarations": "y: POINT; h: CURVE; n: CIRCLE",
    "facts": "Inclination(TangentOnPoint(y, h)) = lg(Diameter(n))"
},
{
    "assertion": "PerpendicularBisector ( MajorAxis ( ELLIPSE: E ) ) equals LINE: S",
    "id": 4866,
    "declarations": "E: ELLIPSE; S: LINE",
    "facts": "PerpendicularBisector(MajorAxis(E)) = S"
},
{
    "assertion": "RightPart ( HYPERBOLA: p ) equals CURVE: H",
    "id": 4867,
    "declarations": "p: HYPERBOLA; H: CURVE",
    "facts": "RightPart(p) = H"
},
{
    "assertion": "InterReciprocal ( NUMBER: 83 ) equals Length ( ImaginaryAxis ( ELLIPSE: I ) )",
    "id": 4868,
    "declarations": "83: NUMBER; I: ELLIPSE",
    "facts": "InterReciprocal(83) = Length(ImaginaryAxis(I))"
},
{
    "assertion": "Max ( NUMBER: 38 ) equals FocalLength ( CONICSECTION: f )",
    "id": 4869,
    "declarations": "38: NUMBER; f: CONICSECTION",
    "facts": "Max(38) = FocalLength(f)"
},
{
    "assertion": "RealAxis ( ELLIPSE: C ) equals LINESEGMENT: c",
    "id": 4870,
    "declarations": "C: ELLIPSE; c: LINESEGMENT",
    "facts": "RealAxis(C) = c"
},
{
    "assertion": "InterceptChord ( LINE: o, CONICSECTION: T ) equals LINESEGMENT: D",
    "id": 4871,
    "declarations": "o: LINE; T: CONICSECTION; D: LINESEGMENT",
    "facts": "InterceptChord(o, T) = D"
},
{
    "assertion": "DotProduct ( VECTOR: q, VECTOR: a ) equals sqrt ( NUMBER: -78 )",
    "id": 4872,
    "declarations": "q: VECTOR; a: VECTOR; -78: NUMBER",
    "facts": "DotProduct(q, a) = sqrt(-78)"
},
{
    "assertion": "Max ( NumIntersection ( CURVE: X, CURVE: z ) ) equals NumIntersection ( CURVE: f, CURVE: C )",
    "id": 4873,
    "declarations": "X: CURVE; z: CURVE; f: CURVE; C: CURVE",
    "facts": "Max(NumIntersection(X, z)) = NumIntersection(f, C)"
},
{
    "assertion": "LineOf ( UpperVertex ( CONICSECTION: t ), POINT: a ) equals LINE: x",
    "id": 4874,
    "declarations": "t: CONICSECTION; a: POINT; x: LINE",
    "facts": "LineOf(UpperVertex(t), a) = x"
},
{
    "assertion": "Vertex ( CONICSECTION: S ) equals POINT: U",
    "id": 4875,
    "declarations": "S: CONICSECTION; U: POINT",
    "facts": "Vertex(S) = U"
},
{
    "assertion": "Center ( CONICSECTION: R ) equals POINT: l",
    "id": 4876,
    "declarations": "R: CONICSECTION; l: POINT",
    "facts": "Center(R) = l"
},
{
    "assertion": "sqrt ( NUMBER: 68 ) equals NUMBER: 22",
    "id": 4877,
    "declarations": "68: NUMBER; 22: NUMBER",
    "facts": "sqrt(68) = 22"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: S ) equals OverlappingLine ( LINESEGMENT: W )",
    "id": 4878,
    "declarations": "S: LINESEGMENT; W: LINESEGMENT",
    "facts": "OverlappingLine(S) = OverlappingLine(W)"
},
{
    "assertion": "Min ( NUMBER: -68 ) equals NUMBER: 78",
    "id": 4879,
    "declarations": "-68: NUMBER; 78: NUMBER",
    "facts": "Min(-68) = 78"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: Y, CIRCLE: a ) equals BOOL: False",
    "id": 4880,
    "declarations": "Y: LINESEGMENT; a: CIRCLE; False: BOOL",
    "facts": "IsDiameter(Y, a) = False"
},
{
    "assertion": "RealAxis ( ELLIPSE: j ) equals LINESEGMENT: Z",
    "id": 4881,
    "declarations": "j: ELLIPSE; Z: LINESEGMENT",
    "facts": "RealAxis(j) = Z"
},
{
    "assertion": "TriangleOf ( Circumcenter ( TRIANGLE: G ), POINT: U, LowerFocus ( CONICSECTION: E ) ) equals TRIANGLE: C",
    "id": 4882,
    "declarations": "G: TRIANGLE; U: POINT; E: CONICSECTION; C: TRIANGLE",
    "facts": "TriangleOf(Circumcenter(G), U, LowerFocus(E)) = C"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: b, TRIANGLE: S ) equals BOOL: True",
    "id": 4883,
    "declarations": "b: CIRCLE; S: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(b, S) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: D ) equals POINT: O",
    "id": 4884,
    "declarations": "D: CONICSECTION; O: POINT",
    "facts": "LeftFocus(D) = O"
},
{
    "assertion": "RightVertex ( CONICSECTION: q ) equals POINT: U",
    "id": 4885,
    "declarations": "q: CONICSECTION; U: POINT",
    "facts": "RightVertex(q) = U"
},
{
    "assertion": "LowerFocus ( CONICSECTION: y ) equals POINT: m",
    "id": 4886,
    "declarations": "y: CONICSECTION; m: POINT",
    "facts": "LowerFocus(y) = m"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: G ) equals OverlappingLine ( LINESEGMENT: y )",
    "id": 4887,
    "declarations": "G: LINESEGMENT; y: LINESEGMENT",
    "facts": "OverlappingLine(G) = OverlappingLine(y)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: O ) equals POINT: R",
    "id": 4888,
    "declarations": "O: CONICSECTION; R: POINT",
    "facts": "LowerFocus(O) = R"
},
{
    "assertion": "NumIntersection ( CURVE: D, CURVE: H ) equals Eccentricity ( CONICSECTION: c )",
    "id": 4889,
    "declarations": "D: CURVE; H: CURVE; c: CONICSECTION",
    "facts": "NumIntersection(D, H) = Eccentricity(c)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: n ) equals UpperFocus ( CONICSECTION: p )",
    "id": 4890,
    "declarations": "n: CONICSECTION; p: CONICSECTION",
    "facts": "LeftVertex(n) = UpperFocus(p)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: p ) equals RealAxis ( ELLIPSE: E )",
    "id": 4891,
    "declarations": "p: ELLIPSE; E: ELLIPSE",
    "facts": "MajorAxis(p) = RealAxis(E)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: D ) equals POINT: v",
    "id": 4892,
    "declarations": "D: CONICSECTION; v: POINT",
    "facts": "UpperVertex(D) = v"
},
{
    "assertion": "RightFocus ( CONICSECTION: R ) equals LeftVertex ( CONICSECTION: l )",
    "id": 4893,
    "declarations": "R: CONICSECTION; l: CONICSECTION",
    "facts": "RightFocus(R) = LeftVertex(l)"
},
{
    "assertion": "FootPoint ( LeftDirectrix ( CONICSECTION: D ), LINE: m ) equals POINT: q",
    "id": 4894,
    "declarations": "D: CONICSECTION; m: LINE; q: POINT",
    "facts": "FootPoint(LeftDirectrix(D), m) = q"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: S ) equals LINESEGMENT: R",
    "id": 4895,
    "declarations": "S: ELLIPSE; R: LINESEGMENT",
    "facts": "ImaginaryAxis(S) = R"
},
{
    "assertion": "Focus ( CONICSECTION: h ) equals RightVertex ( CONICSECTION: X )",
    "id": 4896,
    "declarations": "h: CONICSECTION; X: CONICSECTION",
    "facts": "Focus(h) = RightVertex(X)"
},
{
    "assertion": "lg ( FocalLength ( CONICSECTION: z ) ) equals Abs ( LINESEGMENT: A )",
    "id": 4897,
    "declarations": "z: CONICSECTION; A: LINESEGMENT",
    "facts": "lg(FocalLength(z)) = Abs(A)"
},
{
    "assertion": "Slope ( LINE: h ) equals NUMBER: -63",
    "id": 4898,
    "declarations": "h: LINE; -63: NUMBER",
    "facts": "Slope(h) = -63"
},
{
    "assertion": "IsOutTangent ( CIRCLE: j, CIRCLE: F ) equals BOOL: False",
    "id": 4899,
    "declarations": "j: CIRCLE; F: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(j, F) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: q ) equals sqrt ( XCoordinate ( LeftFocus ( CONICSECTION: K ) ) )",
    "id": 4900,
    "declarations": "q: CONICSECTION; K: CONICSECTION",
    "facts": "Perimeter(q) = sqrt(XCoordinate(LeftFocus(K)))"
},
{
    "assertion": "Perimeter ( CONICSECTION: g ) equals Area ( CONICSECTION: E )",
    "id": 4901,
    "declarations": "g: CONICSECTION; E: CONICSECTION",
    "facts": "Perimeter(g) = Area(E)"
},
{
    "assertion": "Projection ( POINT: M, LINE: f ) equals POINT: M",
    "id": 4902,
    "declarations": "M: POINT; f: LINE; M: POINT",
    "facts": "Projection(M, f) = M"
},
{
    "assertion": "FootPoint ( LINE: T, TangentOnPoint ( Projection ( POINT: D, LINE: S ), LeftPart ( HYPERBOLA: a ) ) ) equals POINT: m",
    "id": 4903,
    "declarations": "T: LINE; D: POINT; S: LINE; a: HYPERBOLA; m: POINT",
    "facts": "FootPoint(T, TangentOnPoint(Projection(D, S), LeftPart(a))) = m"
},
{
    "assertion": "LineOf ( POINT: D, Center ( CONICSECTION: e ) ) equals LINE: g",
    "id": 4904,
    "declarations": "D: POINT; e: CONICSECTION; g: LINE",
    "facts": "LineOf(D, Center(e)) = g"
},
{
    "assertion": "FocalLength ( CONICSECTION: b ) equals Min ( Perimeter ( CONICSECTION: W ) )",
    "id": 4905,
    "declarations": "b: CONICSECTION; W: CONICSECTION",
    "facts": "FocalLength(b) = Min(Perimeter(W))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: d ) equals POINT: B",
    "id": 4906,
    "declarations": "d: TRIANGLE; B: POINT",
    "facts": "Orthocenter(d) = B"
},
{
    "assertion": "UpperVertex ( CONICSECTION: r ) equals POINT: T",
    "id": 4907,
    "declarations": "r: CONICSECTION; T: POINT",
    "facts": "UpperVertex(r) = T"
},
{
    "assertion": "Directrix ( CONICSECTION: V ) equals LINE: I",
    "id": 4908,
    "declarations": "V: CONICSECTION; I: LINE",
    "facts": "Directrix(V) = I"
},
{
    "assertion": "LocusEquation ( Circumcenter ( TRIANGLE: a ) ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 4909,
    "declarations": "a: TRIANGLE; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "LocusEquation(Circumcenter(a)) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "IsTangent ( LINE: c, CONICSECTION: s ) equals BOOL: True",
    "id": 4910,
    "declarations": "c: LINE; s: CONICSECTION; True: BOOL",
    "facts": "IsTangent(c, s) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: m ) equals LINE: Z",
    "id": 4911,
    "declarations": "m: CONICSECTION; Z: LINE",
    "facts": "Directrix(m) = Z"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: K, CircumCircle ( TriangleOf ( LeftVertex ( CONICSECTION: i ), POINT: O, RightFocus ( CONICSECTION: G ) ) ) ) equals BOOL: True",
    "id": 4912,
    "declarations": "K: LINESEGMENT; i: CONICSECTION; O: POINT; G: CONICSECTION; True: BOOL",
    "facts": "IsDiameter(K, CircumCircle(TriangleOf(LeftVertex(i), O, RightFocus(G)))) = True"
},
{
    "assertion": "Eccentricity ( CONICSECTION: p ) equals NUMBER: 29",
    "id": 4913,
    "declarations": "p: CONICSECTION; 29: NUMBER",
    "facts": "Eccentricity(p) = 29"
},
{
    "assertion": "CircumCircle ( TRIANGLE: y ) equals CIRCLE: d",
    "id": 4914,
    "declarations": "y: TRIANGLE; d: CIRCLE",
    "facts": "CircumCircle(y) = d"
},
{
    "assertion": "MajorAxis ( ELLIPSE: V ) equals LINESEGMENT: G",
    "id": 4915,
    "declarations": "V: ELLIPSE; G: LINESEGMENT",
    "facts": "MajorAxis(V) = G"
},
{
    "assertion": "Directrix ( CONICSECTION: m ) equals LINE: T",
    "id": 4916,
    "declarations": "m: CONICSECTION; T: LINE",
    "facts": "Directrix(m) = T"
},
{
    "assertion": "Min ( NumIntersection ( CURVE: y, Locus ( LowerVertex ( CONICSECTION: H ) ) ) ) equals Intercept ( LINE: n, AXIS: xAxis )",
    "id": 4917,
    "declarations": "y: CURVE; H: CONICSECTION; n: LINE; xAxis: AXIS",
    "facts": "Min(NumIntersection(y, Locus(LowerVertex(H)))) = Intercept(n, xAxis)"
},
{
    "assertion": "VectorOf ( UpperFocus ( CONICSECTION: U ), UpperFocus ( CONICSECTION: K ) ) equals VECTOR: G",
    "id": 4918,
    "declarations": "U: CONICSECTION; K: CONICSECTION; G: VECTOR",
    "facts": "VectorOf(UpperFocus(U), UpperFocus(K)) = G"
},
{
    "assertion": "MidPoint ( LINESEGMENT: V ) equals LowerVertex ( CONICSECTION: f )",
    "id": 4919,
    "declarations": "V: LINESEGMENT; f: CONICSECTION",
    "facts": "MidPoint(V) = LowerVertex(f)"
},
{
    "assertion": "PointOnCurve ( Center ( CONICSECTION: m ), RightPart ( HYPERBOLA: r ) ) equals BOOL: True",
    "id": 4920,
    "declarations": "m: CONICSECTION; r: HYPERBOLA; True: BOOL",
    "facts": "PointOnCurve(Center(m), RightPart(r)) = True"
},
{
    "assertion": "Focus ( CONICSECTION: e ) equals UpperFocus ( CONICSECTION: f )",
    "id": 4921,
    "declarations": "e: CONICSECTION; f: CONICSECTION",
    "facts": "Focus(e) = UpperFocus(f)"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: n ) ) equals NUMBER: 97",
    "id": 4922,
    "declarations": "n: TRIANGLE; 97: NUMBER",
    "facts": "Diameter(CircumCircle(n)) = 97"
},
{
    "assertion": "TangentPoint ( PerpendicularBisector ( MajorAxis ( ELLIPSE: U ) ), CIRCLE: v ) equals UpperVertex ( CONICSECTION: g )",
    "id": 4923,
    "declarations": "U: ELLIPSE; v: CIRCLE; g: CONICSECTION",
    "facts": "TangentPoint(PerpendicularBisector(MajorAxis(U)), v) = UpperVertex(g)"
},
{
    "assertion": "VectorOf ( LowerFocus ( CONICSECTION: m ), RightVertex ( CONICSECTION: k ) ) equals VECTOR: P",
    "id": 4924,
    "declarations": "m: CONICSECTION; k: CONICSECTION; P: VECTOR",
    "facts": "VectorOf(LowerFocus(m), RightVertex(k)) = P"
},
{
    "assertion": "IsInTangent ( CIRCLE: U, CIRCLE: K ) equals BOOL: True",
    "id": 4925,
    "declarations": "U: CIRCLE; K: CIRCLE; True: BOOL",
    "facts": "IsInTangent(U, K) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: r ) equals POINT: I",
    "id": 4926,
    "declarations": "r: TRIANGLE; I: POINT",
    "facts": "Circumcenter(r) = I"
},
{
    "assertion": "IsInTangent ( CIRCLE: M, CircumCircle ( TRIANGLE: Y ) ) equals BOOL: True",
    "id": 4927,
    "declarations": "M: CIRCLE; Y: TRIANGLE; True: BOOL",
    "facts": "IsInTangent(M, CircumCircle(Y)) = True"
},
{
    "assertion": "LowerFocus ( CONICSECTION: c ) equals POINT: t",
    "id": 4928,
    "declarations": "c: CONICSECTION; t: POINT",
    "facts": "LowerFocus(c) = t"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: W ) equals LINESEGMENT: B",
    "id": 4929,
    "declarations": "W: ELLIPSE; B: LINESEGMENT",
    "facts": "ImaginaryAxis(W) = B"
},
{
    "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: b ) ) equals Min ( NUMBER: 24 )",
    "id": 4930,
    "declarations": "b: CONICSECTION; 24: NUMBER",
    "facts": "YCoordinate(LowerVertex(b)) = Min(24)"
},
{
    "assertion": "RightVertex ( CONICSECTION: E ) equals FootPoint ( OverlappingLine ( RealAxis ( ELLIPSE: s ) ), RightDirectrix ( CONICSECTION: S ) )",
    "id": 4931,
    "declarations": "E: CONICSECTION; s: ELLIPSE; S: CONICSECTION",
    "facts": "RightVertex(E) = FootPoint(OverlappingLine(RealAxis(s)), RightDirectrix(S))"
},
{
    "assertion": "Focus ( CONICSECTION: z ) equals Orthocenter ( TRIANGLE: a )",
    "id": 4932,
    "declarations": "z: CONICSECTION; a: TRIANGLE",
    "facts": "Focus(z) = Orthocenter(a)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: X ) equals LINESEGMENT: q",
    "id": 4933,
    "declarations": "X: ELLIPSE; q: LINESEGMENT",
    "facts": "MinorAxis(X) = q"
},
{
    "assertion": "IsOutTangent ( CIRCLE: Q, CIRCLE: w ) equals BOOL: False",
    "id": 4934,
    "declarations": "Q: CIRCLE; w: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(Q, w) = False"
},
{
    "assertion": "IsIntersect ( Locus ( UpperVertex ( CONICSECTION: x ) ), CURVE: N ) equals BOOL: False",
    "id": 4935,
    "declarations": "x: CONICSECTION; N: CURVE; False: BOOL",
    "facts": "IsIntersect(Locus(UpperVertex(x)), N) = False"
},
{
    "assertion": "Distance ( POINT: M, POINT: S ) equals Distance ( LeftFocus ( CONICSECTION: d ), POINT: Z )",
    "id": 4936,
    "declarations": "M: POINT; S: POINT; d: CONICSECTION; Z: POINT",
    "facts": "Distance(M, S) = Distance(LeftFocus(d), Z)"
},
{
    "assertion": "FootPoint ( PerpendicularBisector ( LINESEGMENT: a ), LeftDirectrix ( CONICSECTION: y ) ) equals POINT: W",
    "id": 4937,
    "declarations": "a: LINESEGMENT; y: CONICSECTION; W: POINT",
    "facts": "FootPoint(PerpendicularBisector(a), LeftDirectrix(y)) = W"
},
{
    "assertion": "RightPart ( HYPERBOLA: A ) equals CURVE: L",
    "id": 4938,
    "declarations": "A: HYPERBOLA; L: CURVE",
    "facts": "RightPart(A) = L"
},
{
    "assertion": "MinorAxis ( ELLIPSE: V ) equals LINESEGMENT: w",
    "id": 4939,
    "declarations": "V: ELLIPSE; w: LINESEGMENT",
    "facts": "MinorAxis(V) = w"
},
{
    "assertion": "LeftFocus ( CONICSECTION: z ) equals LowerFocus ( CONICSECTION: t )",
    "id": 4940,
    "declarations": "z: CONICSECTION; t: CONICSECTION",
    "facts": "LeftFocus(z) = LowerFocus(t)"
},
{
    "assertion": "Inclination ( LINE: Y ) equals HalfFocalLength ( CONICSECTION: d )",
    "id": 4941,
    "declarations": "Y: LINE; d: CONICSECTION",
    "facts": "Inclination(Y) = HalfFocalLength(d)"
},
{
    "assertion": "Slope ( LeftDirectrix ( CONICSECTION: v ) ) equals NUMBER: 69",
    "id": 4942,
    "declarations": "v: CONICSECTION; 69: NUMBER",
    "facts": "Slope(LeftDirectrix(v)) = 69"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: k ) equals AXIS: yAxis",
    "id": 4943,
    "declarations": "k: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(k) = yAxis"
},
{
    "assertion": "YCoordinate ( POINT: G ) equals InterReciprocal ( Diameter ( CIRCLE: g ) )",
    "id": 4944,
    "declarations": "G: POINT; g: CIRCLE",
    "facts": "YCoordinate(G) = InterReciprocal(Diameter(g))"
},
{
    "assertion": "DotProduct ( VECTOR: H, VECTOR: N ) equals NUMBER: -31",
    "id": 4945,
    "declarations": "H: VECTOR; N: VECTOR; -31: NUMBER",
    "facts": "DotProduct(H, N) = -31"
},
{
    "assertion": "Abs ( LINESEGMENT: F ) equals NUMBER: -72",
    "id": 4946,
    "declarations": "F: LINESEGMENT; -72: NUMBER",
    "facts": "Abs(F) = -72"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: H ) equals LINE: P",
    "id": 4947,
    "declarations": "H: CONICSECTION; P: LINE",
    "facts": "RightDirectrix(H) = P"
},
{
    "assertion": "DotProduct ( VECTOR: I, VECTOR: V ) equals Quadrant ( Circumcenter ( TRIANGLE: g ) )",
    "id": 4948,
    "declarations": "I: VECTOR; V: VECTOR; g: TRIANGLE",
    "facts": "DotProduct(I, V) = Quadrant(Circumcenter(g))"
},
{
    "assertion": "TriangleOf ( POINT: u, RightFocus ( CONICSECTION: c ), POINT: w ) equals TRIANGLE: a",
    "id": 4949,
    "declarations": "u: POINT; c: CONICSECTION; w: POINT; a: TRIANGLE",
    "facts": "TriangleOf(u, RightFocus(c), w) = a"
},
{
    "assertion": "RightFocus ( CONICSECTION: I ) equals RightFocus ( CONICSECTION: M )",
    "id": 4950,
    "declarations": "I: CONICSECTION; M: CONICSECTION",
    "facts": "RightFocus(I) = RightFocus(M)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: I, CIRCLE: F ) equals BOOL: False",
    "id": 4951,
    "declarations": "I: CIRCLE; F: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(I, F) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: c ) equals LowerVertex ( CONICSECTION: F )",
    "id": 4952,
    "declarations": "c: TRIANGLE; F: CONICSECTION",
    "facts": "Incenter(c) = LowerVertex(F)"
},
{
    "assertion": "Length ( ImaginaryAxis ( ELLIPSE: X ) ) equals Perimeter ( CONICSECTION: O )",
    "id": 4953,
    "declarations": "X: ELLIPSE; O: CONICSECTION",
    "facts": "Length(ImaginaryAxis(X)) = Perimeter(O)"
},
{
    "assertion": "Slope ( LINE: M ) equals sqrt ( XCoordinate ( LowerVertex ( CONICSECTION: w ) ) )",
    "id": 4954,
    "declarations": "M: LINE; w: CONICSECTION",
    "facts": "Slope(M) = sqrt(XCoordinate(LowerVertex(w)))"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: O ) equals LINE: P",
    "id": 4955,
    "declarations": "O: CONICSECTION; P: LINE",
    "facts": "LeftDirectrix(O) = P"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: q ) ) equals CURVE: r",
    "id": 4956,
    "declarations": "q: CONICSECTION; r: CURVE",
    "facts": "Locus(LeftFocus(q)) = r"
},
{
    "assertion": "IsParallel ( PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: O ) ), LINE: G ) equals BOOL: False",
    "id": 4957,
    "declarations": "O: ELLIPSE; G: LINE; False: BOOL",
    "facts": "IsParallel(PerpendicularBisector(ImaginaryAxis(O)), G) = False"
},
{
    "assertion": "XCoordinate ( UpperFocus ( CONICSECTION: e ) ) equals Abs ( LINESEGMENT: z )",
    "id": 4958,
    "declarations": "e: CONICSECTION; z: LINESEGMENT",
    "facts": "XCoordinate(UpperFocus(e)) = Abs(z)"
},
{
    "assertion": "DotProduct ( VECTOR: q, VECTOR: e ) equals NUMBER: -8",
    "id": 4959,
    "declarations": "q: VECTOR; e: VECTOR; -8: NUMBER",
    "facts": "DotProduct(q, e) = -8"
},
{
    "assertion": "Intersection ( CURVE: y, LeftPart ( HYPERBOLA: V ) ) equals UpperFocus ( CONICSECTION: R )",
    "id": 4960,
    "declarations": "y: CURVE; V: HYPERBOLA; R: CONICSECTION",
    "facts": "Intersection(y, LeftPart(V)) = UpperFocus(R)"
},
{
    "assertion": "PointOnCurve ( LeftVertex ( CONICSECTION: r ), CURVE: b ) equals BOOL: False",
    "id": 4961,
    "declarations": "r: CONICSECTION; b: CURVE; False: BOOL",
    "facts": "PointOnCurve(LeftVertex(r), b) = False"
},
{
    "assertion": "ApplyUnit ( Diameter ( CIRCLE: s ), DEGREESTR: degree )",
    "id": 4962,
    "declarations": "s: CIRCLE; degree: DEGREESTR",
    "facts": "ApplyUnit(Diameter(s), degree) = dummy_operator()"
},
{
    "assertion": "InterReciprocal ( Length ( LINESEGMENT: s ) ) equals NUMBER: -63",
    "id": 4963,
    "declarations": "s: LINESEGMENT; -63: NUMBER",
    "facts": "InterReciprocal(Length(s)) = -63"
},
{
    "assertion": "IsInTangent ( CIRCLE: U, CIRCLE: X ) equals BOOL: True",
    "id": 4964,
    "declarations": "U: CIRCLE; X: CIRCLE; True: BOOL",
    "facts": "IsInTangent(U, X) = True"
},
{
    "assertion": "LowerFocus ( CONICSECTION: o ) equals POINT: R",
    "id": 4965,
    "declarations": "o: CONICSECTION; R: POINT",
    "facts": "LowerFocus(o) = R"
},
{
    "assertion": "Max ( Min ( InterReciprocal ( NUMBER: 68 ) ) ) equals lg ( Eccentricity ( CONICSECTION: c ) )",
    "id": 4966,
    "declarations": "68: NUMBER; c: CONICSECTION",
    "facts": "Max(Min(InterReciprocal(68))) = lg(Eccentricity(c))"
},
{
    "assertion": "Min ( Intercept ( LINE: s, SymmetryAxis ( CONICSECTION: K ) ) ) equals HalfFocalLength ( CONICSECTION: W )",
    "id": 4967,
    "declarations": "s: LINE; K: CONICSECTION; W: CONICSECTION",
    "facts": "Min(Intercept(s, SymmetryAxis(K))) = HalfFocalLength(W)"
},
{
    "assertion": "InterReciprocal ( sqrt ( NUMBER: -96 ) ) equals FocalLength ( CONICSECTION: N )",
    "id": 4968,
    "declarations": "-96: NUMBER; N: CONICSECTION",
    "facts": "InterReciprocal(sqrt(-96)) = FocalLength(N)"
},
{
    "assertion": "Quadrant ( POINT: z ) equals NUMBER: -46",
    "id": 4969,
    "declarations": "z: POINT; -46: NUMBER",
    "facts": "Quadrant(z) = -46"
},
{
    "assertion": "IsInTangent ( CIRCLE: B, CIRCLE: E ) equals BOOL: True",
    "id": 4970,
    "declarations": "B: CIRCLE; E: CIRCLE; True: BOOL",
    "facts": "IsInTangent(B, E) = True"
},
{
    "assertion": "Center ( CONICSECTION: b ) equals POINT: I",
    "id": 4971,
    "declarations": "b: CONICSECTION; I: POINT",
    "facts": "Center(b) = I"
},
{
    "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: M ) ) equals Slope ( PerpendicularBisector ( LINESEGMENT: m ) )",
    "id": 4972,
    "declarations": "M: CONICSECTION; m: LINESEGMENT",
    "facts": "XCoordinate(UpperVertex(M)) = Slope(PerpendicularBisector(m))"
},
{
    "assertion": "Distance ( POINT: q, POINT: M ) equals XCoordinate ( POINT: W )",
    "id": 4973,
    "declarations": "q: POINT; M: POINT; W: POINT",
    "facts": "Distance(q, M) = XCoordinate(W)"
},
{
    "assertion": "Projection ( POINT: R, OverlappingLine ( RealAxis ( ELLIPSE: z ) ) ) equals UpperFocus ( CONICSECTION: V )",
    "id": 4974,
    "declarations": "R: POINT; z: ELLIPSE; V: CONICSECTION",
    "facts": "Projection(R, OverlappingLine(RealAxis(z))) = UpperFocus(V)"
},
{
    "assertion": "Vertex ( CONICSECTION: Z ) equals POINT: k",
    "id": 4975,
    "declarations": "Z: CONICSECTION; k: POINT",
    "facts": "Vertex(Z) = k"
},
{
    "assertion": "Diameter ( CIRCLE: f ) equals Abs ( ImaginaryAxis ( ELLIPSE: x ) )",
    "id": 4976,
    "declarations": "f: CIRCLE; x: ELLIPSE",
    "facts": "Diameter(f) = Abs(ImaginaryAxis(x))"
},
{
    "assertion": "Distance ( LeftVertex ( CONICSECTION: Y ), Incenter ( TriangleOf ( POINT: Q, POINT: D, LeftFocus ( CONICSECTION: B ) ) ) ) equals NUMBER: -91",
    "id": 4977,
    "declarations": "Y: CONICSECTION; Q: POINT; D: POINT; B: CONICSECTION; -91: NUMBER",
    "facts": "Distance(LeftVertex(Y), Incenter(TriangleOf(Q, D, LeftFocus(B)))) = -91"
},
{
    "assertion": "LineOf ( POINT: r, RightFocus ( CONICSECTION: B ) ) equals LINE: T",
    "id": 4978,
    "declarations": "r: POINT; B: CONICSECTION; T: LINE",
    "facts": "LineOf(r, RightFocus(B)) = T"
},
{
    "assertion": "Min ( NUMBER: -76 ) equals Length ( LINESEGMENT: c )",
    "id": 4979,
    "declarations": "-76: NUMBER; c: LINESEGMENT",
    "facts": "Min(-76) = Length(c)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: A, TRIANGLE: k ) equals BOOL: False",
    "id": 4980,
    "declarations": "A: CIRCLE; k: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(A, k) = False"
},
{
    "assertion": "sqrt ( sqrt ( Diameter ( CIRCLE: a ) ) ) equals NUMBER: 39",
    "id": 4981,
    "declarations": "a: CIRCLE; 39: NUMBER",
    "facts": "sqrt(sqrt(Diameter(a))) = 39"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Q ) equals Incenter ( TRIANGLE: e )",
    "id": 4982,
    "declarations": "Q: CONICSECTION; e: TRIANGLE",
    "facts": "UpperVertex(Q) = Incenter(e)"
},
{
    "assertion": "Vertex ( CONICSECTION: g ) equals POINT: n",
    "id": 4983,
    "declarations": "g: CONICSECTION; n: POINT",
    "facts": "Vertex(g) = n"
},
{
    "assertion": "Intersection ( RightPart ( HYPERBOLA: j ), CURVE: C ) equals POINT: e",
    "id": 4984,
    "declarations": "j: HYPERBOLA; C: CURVE; e: POINT",
    "facts": "Intersection(RightPart(j), C) = e"
},
{
    "assertion": "FocalLength ( CONICSECTION: r ) equals Eccentricity ( CONICSECTION: B )",
    "id": 4985,
    "declarations": "r: CONICSECTION; B: CONICSECTION",
    "facts": "FocalLength(r) = Eccentricity(B)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: R ) equals CIRCLE: d",
    "id": 4986,
    "declarations": "R: TRIANGLE; d: CIRCLE",
    "facts": "CircumCircle(R) = d"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: I ) equals AXIS: xAxis",
    "id": 4987,
    "declarations": "I: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(I) = xAxis"
},
{
    "assertion": "FocalLength ( CONICSECTION: m ) equals Slope ( LINE: h )",
    "id": 4988,
    "declarations": "m: CONICSECTION; h: LINE",
    "facts": "FocalLength(m) = Slope(h)"
},
{
    "assertion": "RealAxis ( ELLIPSE: k ) equals MinorAxis ( ELLIPSE: W )",
    "id": 4989,
    "declarations": "k: ELLIPSE; W: ELLIPSE",
    "facts": "RealAxis(k) = MinorAxis(W)"
},
{
    "assertion": "Length ( InterceptChord ( LINE: o, CONICSECTION: Y ) ) equals NUMBER: 9",
    "id": 4990,
    "declarations": "o: LINE; Y: CONICSECTION; 9: NUMBER",
    "facts": "Length(InterceptChord(o, Y)) = 9"
},
{
    "assertion": "Min ( NUMBER: -52 ) equals NUMBER: -31",
    "id": 4991,
    "declarations": "-52: NUMBER; -31: NUMBER",
    "facts": "Min(-52) = -31"
},
{
    "assertion": "Expression ( CURVE: t ) equals EXPRESSION: x*space+*spacey^2*space=*space1",
    "id": 4992,
    "declarations": "t: CURVE; x*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "Expression(t) = x*space+*spacey^2*space=*space1"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: y ) equals LINE: e",
    "id": 4993,
    "declarations": "y: CONICSECTION; e: LINE",
    "facts": "RightDirectrix(y) = e"
},
{
    "assertion": "Negation ( IsInscribedCircle ( CircumCircle ( TRIANGLE: W ), TRIANGLE: T ) equals BOOL: False ) equals BOOL: False",
    "id": 4994,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Vertex ( CONICSECTION: v ) equals Circumcenter ( TriangleOf ( Projection ( POINT: g, OverlappingLine ( LINESEGMENT: H ) ), Center ( CONICSECTION: b ), POINT: b ) )",
    "id": 4995,
    "declarations": "v: CONICSECTION; g: POINT; H: LINESEGMENT; b: CONICSECTION; b: POINT",
    "facts": "Vertex(v) = Circumcenter(TriangleOf(Projection(g, OverlappingLine(H)), Center(b), b))"
},
{
    "assertion": "IsOutTangent ( CIRCLE: D, CIRCLE: W ) equals BOOL: True",
    "id": 4996,
    "declarations": "D: CIRCLE; W: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(D, W) = True"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: T, TRIANGLE: v ) equals BOOL: False",
    "id": 4997,
    "declarations": "T: CIRCLE; v: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(T, v) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: n ) equals RightVertex ( CONICSECTION: X )",
    "id": 4998,
    "declarations": "n: CONICSECTION; X: CONICSECTION",
    "facts": "RightFocus(n) = RightVertex(X)"
},
{
    "assertion": "RightFocus ( CONICSECTION: C ) equals LowerFocus ( CONICSECTION: s )",
    "id": 4999,
    "declarations": "C: CONICSECTION; s: CONICSECTION",
    "facts": "RightFocus(C) = LowerFocus(s)"
},
{
    "assertion": "FocalLength ( CONICSECTION: y ) equals lg ( Abs ( InterceptChord ( LINE: O, CONICSECTION: d ) ) )",
    "id": 5000,
    "declarations": "y: CONICSECTION; O: LINE; d: CONICSECTION",
    "facts": "FocalLength(y) = lg(Abs(InterceptChord(O, d)))"
},
    {
        "assertion": "Coordinate ( POINT: U ) equals ( NUMBER: 41, NUMBER: -87 )",
        "id": 2,
        "declarations": "U: POINT",
        "facts": "Coordinate(U) = (41, -87)"
    },
    {
        "assertion": "Coordinate ( LowerVertex ( CONICSECTION: N ) ) equals ( NUMBER: 0, NUMBER: -49 )",
        "id": 4,
        "declarations": "N: CONICSECTION",
        "facts": "Coordinate(LowerVertex(N)) = (0, -49)"
    },
    {
        "assertion": "Coordinate ( POINT: U ) equals ( NUMBER: -3, NUMBER: 5 )",
        "id": 5,
        "declarations": "U: POINT",
        "facts": "Coordinate(U) = (-3, 5)"
    },
    {
        "assertion": "Coordinate ( UpperVertex ( CONICSECTION: E ) ) equals ( NUMBER: 1, NUMBER: 10 )",
        "id": 8,
        "declarations": "E: CONICSECTION",
        "facts": "Coordinate(UpperVertex(E)) = (1, 10)"
    },
    {
        "assertion": "Coordinate ( POINT: s ) equals ( NUMBER: -68, NUMBER: 66 )",
        "id": 9,
        "declarations": "s: POINT",
        "facts": "Coordinate(s) = (-68, 66)"
    },
    {
        "assertion": "Coordinate ( UpperFocus ( CONICSECTION: q ) ) equals ( NUMBER: 5, NUMBER: 8 )",
        "id": 10,
        "declarations": "q: CONICSECTION",
        "facts": "Coordinate(UpperFocus(q)) = (5, 8)"
    },
    {
        "assertion": "Coordinate ( Circumcenter ( TRIANGLE: W ) ) equals ( Radius ( CIRCLE: n ), NUMBER: -23 )",
        "id": 11,
        "declarations": "W: TRIANGLE; n: CIRCLE",
        "facts": "Coordinate(Circumcenter(W)) = (Radius(n), -23)"
    },
    {
        "assertion": "Coordinate ( POINT: S ) equals ( NUMBER: -70, NUMBER: -40 )",
        "id": 12,
        "declarations": "S: POINT",
        "facts": "Coordinate(S) = (-70, -40)"
    },
    {
        "assertion": "Coordinate ( POINT: H ) equals ( NUMBER: 62, NUMBER: -87 )",
        "id": 14,
        "declarations": "H: POINT",
        "facts": "Coordinate(H) = (62, -87)"
    },
    {
        "assertion": "Coordinate ( Orthocenter ( TRIANGLE: m ) ) equals ( NUMBER: 24, NUMBER: -87 )",
        "id": 15,
        "declarations": "m: TRIANGLE",
        "facts": "Coordinate(Orthocenter(m)) = (24, -87)"
    },
    {
        "assertion": "Coordinate ( RightFocus ( CONICSECTION: Y ) ) equals ( NUMBER: 84, NUMBER: 42 )",
        "id": 16,
        "declarations": "Y: CONICSECTION",
        "facts": "Coordinate(RightFocus(Y)) = (84, 42)"
    },
    {
        "assertion": "Coordinate ( LeftFocus ( CONICSECTION: T ) ) equals ( NUMBER: -42, NUMBER: 0 )",
        "id": 23,
        "declarations": "T: CONICSECTION; q: CONICSECTION",
        "facts": "Coordinate(LeftFocus(T)) = (-42, 0)"
    },
    {
        "assertion": "Coordinate ( POINT: w ) equals ( NUMBER: -97, NUMBER: -82 )",
        "id": 24,
        "declarations": "w: POINT",
        "facts": "Coordinate(w) = (-97, -82)"
    },
    {
        "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: J ) ) equals NUMBER: 43",
        "id": 30,
        "declarations": "J: CONICSECTION",
        "facts": "YCoordinate(UpperVertex(J)) = 43"
    },
    {
        "assertion": "FootPoint ( LINE: i, LineOf ( POINT: g, POINT: v ) ) equals POINT: U",
        "id": 31,
        "declarations": "v: CONICSECTION; i: LINE; g: POINT; v: POINT; U: POINT",
        "facts": "FootPoint(i, LineOf(g, v)) = U"
    },
    {
        "assertion": "Slope ( OverlappingLine ( LINESEGMENT: b ) ) equals Abs ( LINESEGMENT: g )",
        "id": 32,
        "declarations": "b: LINESEGMENT; g: LINESEGMENT",
        "facts": "Slope(OverlappingLine(b)) = Abs(g)"
    },
    {
        "assertion": "RightFocus ( CONICSECTION: s ) equals POINT: y",
        "id": 34,
        "declarations": "s: CONICSECTION; y: POINT",
        "facts": "RightFocus(s) = y"
    },
    {
        "assertion": "Area ( CONICSECTION: d ) equals NUMBER: 44",
        "id": 35,
        "declarations": "d: CONICSECTION",
        "facts": "Area(d) = 44"
    },
    {
        "assertion": "Focus ( CONICSECTION: B ) equals POINT: H",
        "id": 36,
        "declarations": "B: CONICSECTION; H: POINT",
        "facts": "Focus(B) = H"
    },
    {
        "assertion": "Coordinate ( POINT: Z ) equals ( NUMBER: 27, sqrt ( NUMBER: 59 ) )",
        "id": 38,
        "declarations": "Z: POINT",
        "facts": "Coordinate(Z) = (27, sqrt(59))"
    },
    {
        "assertion": "RightVertex ( CONICSECTION: V ) equals UpperVertex ( CONICSECTION: w )",
        "id": 41,
        "declarations": "V: CONICSECTION; w: CONICSECTION",
        "facts": "RightVertex(V) = UpperVertex(w)"
    },
    {
        "assertion": "Slope ( TangentOfPoint ( LeftVertex ( CONICSECTION: j ), CURVE: U ) ) equals NUMBER: 37",
        "id": 44,
        "declarations": "j: CONICSECTION; U: CURVE",
        "facts": "Slope(TangentOfPoint(LeftVertex(j), U)) = 37"
    },
    {
        "assertion": "Max ( FocalLength ( CONICSECTION: y ) ) equals NUMBER: 87",
        "id": 45,
        "declarations": "y: CONICSECTION",
        "facts": "Max(FocalLength(y)) = 87"
    },
    {
        "assertion": "Focus ( CONICSECTION: m ) equals Center ( CONICSECTION: o )",
        "id": 46,
        "declarations": "m: CONICSECTION; o: CONICSECTION",
        "facts": "Focus(m) = Center(o)"
    },
    {
        "assertion": "LeftDirectrix ( CONICSECTION: A ) equals LINE: E",
        "id": 47,
        "declarations": "A: CONICSECTION; E: LINE",
        "facts": "LeftDirectrix(A) = E"
    }
]