[
{
    "assertion": "RealAxis ( ELLIPSE: f ) equals LINESEGMENT: z",
    "id": 0,
    "declarations": "f: ELLIPSE; z: LINESEGMENT",
    "facts": "RealAxis(f) = z"
},
{
    "assertion": "IsOutTangent ( CIRCLE: L, CIRCLE: e ) equals BOOL: False",
    "id": 1,
    "declarations": "L: CIRCLE; e: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(L, e) = False"
},
{
    "assertion": "PointOnCurve ( POINT: D, CURVE: S ) equals BOOL: False",
    "id": 2,
    "declarations": "D: POINT; S: CURVE; False: BOOL",
    "facts": "PointOnCurve(D, S) = False"
},
{
    "assertion": "CircumCircle ( TRIANGLE: W ) equals CircumCircle ( TRIANGLE: P )",
    "id": 3,
    "declarations": "W: TRIANGLE; P: TRIANGLE",
    "facts": "CircumCircle(W) = CircumCircle(P)"
},
{
    "assertion": "Length ( ImaginaryAxis ( ELLIPSE: w ) ) equals NUMBER: -71",
    "id": 4,
    "declarations": "w: ELLIPSE; -71: NUMBER",
    "facts": "Length(ImaginaryAxis(w)) = -71"
},
{
    "assertion": "IsIntersect ( CURVE: e, CURVE: b ) equals BOOL: True",
    "id": 5,
    "declarations": "e: CURVE; b: CURVE; True: BOOL",
    "facts": "IsIntersect(e, b) = True"
},
{
    "assertion": "Diameter ( CIRCLE: L ) equals NUMBER: -93",
    "id": 6,
    "declarations": "L: CIRCLE; -93: NUMBER",
    "facts": "Diameter(L) = -93"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: D ) equals LINE: V",
    "id": 7,
    "declarations": "D: CONICSECTION; V: LINE",
    "facts": "LeftDirectrix(D) = V"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: l ) equals Quadrant ( POINT: b )",
    "id": 8,
    "declarations": "l: CONICSECTION; b: POINT",
    "facts": "HalfFocalLength(l) = Quadrant(b)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: p, CONICSECTION: l ) equals BOOL: False",
    "id": 9,
    "declarations": "p: LINESEGMENT; l: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(p, l) = False"
},
{
    "assertion": "LocusEquation ( LeftFocus ( CONICSECTION: m ) ) equals Expression ( CURVE: w )",
    "id": 10,
    "declarations": "m: CONICSECTION; w: CURVE",
    "facts": "LocusEquation(LeftFocus(m)) = Expression(w)"
},
{
    "assertion": "LocusEquation ( POINT: Y ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 11,
    "declarations": "Y: POINT; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(Y) = y*space=*spacelog(x)"
},
{
    "assertion": "Between ( POINT: d, POINT: F, LeftVertex ( CONICSECTION: g ) ) equals BOOL: True",
    "id": 12,
    "declarations": "d: POINT; F: POINT; g: CONICSECTION; True: BOOL",
    "facts": "Between(d, F, LeftVertex(g)) = True"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: c, CIRCLE: f ) equals BOOL: True",
    "id": 13,
    "declarations": "c: LINESEGMENT; f: CIRCLE; True: BOOL",
    "facts": "IsDiameter(c, f) = True"
},
{
    "assertion": "Inclination ( LINE: O ) equals HalfFocalLength ( CONICSECTION: v )",
    "id": 14,
    "declarations": "O: LINE; v: CONICSECTION",
    "facts": "Inclination(O) = HalfFocalLength(v)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: S ) equals LINE: a",
    "id": 15,
    "declarations": "S: CONICSECTION; a: LINE",
    "facts": "LeftDirectrix(S) = a"
},
{
    "assertion": "IsInTangent ( CIRCLE: W, CIRCLE: u ) equals BOOL: True",
    "id": 16,
    "declarations": "W: CIRCLE; u: CIRCLE; True: BOOL",
    "facts": "IsInTangent(W, u) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: C ) equals LINESEGMENT: g",
    "id": 17,
    "declarations": "C: ELLIPSE; g: LINESEGMENT",
    "facts": "MajorAxis(C) = g"
},
{
    "assertion": "Focus ( CONICSECTION: E ) equals Orthocenter ( TRIANGLE: Q )",
    "id": 18,
    "declarations": "E: CONICSECTION; Q: TRIANGLE",
    "facts": "Focus(E) = Orthocenter(Q)"
},
{
    "assertion": "Negation ( RightPart ( HYPERBOLA: l ) equals CURVE: U ) equals BOOL: True",
    "id": 19,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: W, TRIANGLE: F ) equals BOOL: False",
    "id": 20,
    "declarations": "W: CIRCLE; F: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(W, F) = False"
},
{
    "assertion": "lg ( Radius ( CIRCLE: Q ) ) equals FocalLength ( CONICSECTION: k )",
    "id": 21,
    "declarations": "Q: CIRCLE; k: CONICSECTION",
    "facts": "lg(Radius(Q)) = FocalLength(k)"
},
{
    "assertion": "Min ( Perimeter ( CONICSECTION: w ) ) equals NUMBER: 89",
    "id": 22,
    "declarations": "w: CONICSECTION; 89: NUMBER",
    "facts": "Min(Perimeter(w)) = 89"
},
{
    "assertion": "Max ( DotProduct ( VECTOR: j, VECTOR: E ) ) equals InterReciprocal ( NUMBER: 70 )",
    "id": 23,
    "declarations": "j: VECTOR; E: VECTOR; 70: NUMBER",
    "facts": "Max(DotProduct(j, E)) = InterReciprocal(70)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: a ) equals Radius ( CIRCLE: I )",
    "id": 24,
    "declarations": "a: CONICSECTION; I: CIRCLE",
    "facts": "HalfFocalLength(a) = Radius(I)"
},
{
    "assertion": "IsPerpendicular ( PerpendicularBisector ( LINESEGMENT: X ), RightDirectrix ( CONICSECTION: j ) ) equals BOOL: True",
    "id": 25,
    "declarations": "X: LINESEGMENT; j: CONICSECTION; True: BOOL",
    "facts": "IsPerpendicular(PerpendicularBisector(X), RightDirectrix(j)) = True"
},
{
    "assertion": "Intercept ( TangentOfPoint ( RightVertex ( CONICSECTION: w ), CURVE: L ), AXIS: xAxis ) equals Inclination ( LINE: Q )",
    "id": 26,
    "declarations": "w: CONICSECTION; L: CURVE; xAxis: AXIS; Q: LINE",
    "facts": "Intercept(TangentOfPoint(RightVertex(w), L), xAxis) = Inclination(Q)"
},
{
    "assertion": "Slope ( PerpendicularBisector ( LINESEGMENT: t ) ) equals NUMBER: -52",
    "id": 27,
    "declarations": "t: LINESEGMENT; -52: NUMBER",
    "facts": "Slope(PerpendicularBisector(t)) = -52"
},
{
    "assertion": "YCoordinate ( LeftVertex ( CONICSECTION: z ) ) equals NUMBER: 48",
    "id": 28,
    "declarations": "z: CONICSECTION; 48: NUMBER",
    "facts": "YCoordinate(LeftVertex(z)) = 48"
},
{
    "assertion": "InterceptChord ( LINE: b, CONICSECTION: U ) equals LINESEGMENT: z",
    "id": 29,
    "declarations": "b: LINE; U: CONICSECTION; z: LINESEGMENT",
    "facts": "InterceptChord(b, U) = z"
},
{
    "assertion": "LineSegmentOf ( Projection ( MidPoint ( MinorAxis ( ELLIPSE: v ) ), LINE: G ), UpperFocus ( CONICSECTION: C ) ) equals LINESEGMENT: K",
    "id": 30,
    "declarations": "v: ELLIPSE; G: LINE; C: CONICSECTION; K: LINESEGMENT",
    "facts": "LineSegmentOf(Projection(MidPoint(MinorAxis(v)), G), UpperFocus(C)) = K"
},
{
    "assertion": "Slope ( LINE: k ) equals Inclination ( LINE: k )",
    "id": 31,
    "declarations": "k: LINE; k: LINE",
    "facts": "Slope(k) = Inclination(k)"
},
{
    "assertion": "RealAxis ( ELLIPSE: H ) equals LINESEGMENT: w",
    "id": 32,
    "declarations": "H: ELLIPSE; w: LINESEGMENT",
    "facts": "RealAxis(H) = w"
},
{
    "assertion": "Abs ( LINESEGMENT: H ) equals Inclination ( LINE: a )",
    "id": 33,
    "declarations": "H: LINESEGMENT; a: LINE",
    "facts": "Abs(H) = Inclination(a)"
},
{
    "assertion": "Negation ( VectorOf ( UpperFocus ( CONICSECTION: R ), Projection ( Center ( CONICSECTION: V ), LINE: l ) ) equals VectorOf ( LeftFocus ( CONICSECTION: Y ), Circumcenter ( TRIANGLE: h ) ) ) equals BOOL: False",
    "id": 34,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "VectorOf ( RightVertex ( CONICSECTION: a ), POINT: H ) equals VECTOR: V",
    "id": 35,
    "declarations": "a: CONICSECTION; H: POINT; V: VECTOR",
    "facts": "VectorOf(RightVertex(a), H) = V"
},
{
    "assertion": "Negation ( Directrix ( CONICSECTION: t ) equals OverlappingLine ( LINESEGMENT: U ) ) equals BOOL: True",
    "id": 36,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "DotProduct ( VECTOR: P, VECTOR: a ) equals NUMBER: -90",
    "id": 37,
    "declarations": "P: VECTOR; a: VECTOR; -90: NUMBER",
    "facts": "DotProduct(P, a) = -90"
},
{
    "assertion": "TangentPoint ( LINE: G, CIRCLE: U ) equals LowerVertex ( CONICSECTION: n )",
    "id": 38,
    "declarations": "G: LINE; U: CIRCLE; n: CONICSECTION",
    "facts": "TangentPoint(G, U) = LowerVertex(n)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: c ) equals Diameter ( CIRCLE: r )",
    "id": 39,
    "declarations": "c: CONICSECTION; r: CIRCLE",
    "facts": "HalfFocalLength(c) = Diameter(r)"
},
{
    "assertion": "InterReciprocal ( Length ( MinorAxis ( ELLIPSE: w ) ) ) equals Perimeter ( CONICSECTION: H )",
    "id": 40,
    "declarations": "w: ELLIPSE; H: CONICSECTION",
    "facts": "InterReciprocal(Length(MinorAxis(w))) = Perimeter(H)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: z ) equals LINESEGMENT: v",
    "id": 41,
    "declarations": "z: ELLIPSE; v: LINESEGMENT",
    "facts": "MajorAxis(z) = v"
},
{
    "assertion": "RealAxis ( ELLIPSE: u ) equals LINESEGMENT: I",
    "id": 42,
    "declarations": "u: ELLIPSE; I: LINESEGMENT",
    "facts": "RealAxis(u) = I"
},
{
    "assertion": "IsOutTangent ( CIRCLE: Y, CIRCLE: Q ) equals BOOL: False",
    "id": 43,
    "declarations": "Y: CIRCLE; Q: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(Y, Q) = False"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: E ) equals AXIS: yAxis",
    "id": 44,
    "declarations": "E: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(E) = yAxis"
},
{
    "assertion": "LocusEquation ( UpperFocus ( CONICSECTION: k ) ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 45,
    "declarations": "k: CONICSECTION; y*space=*spacesin(x): EXPRESSION",
    "facts": "LocusEquation(UpperFocus(k)) = y*space=*spacesin(x)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: P ) equals POINT: G",
    "id": 46,
    "declarations": "P: TRIANGLE; G: POINT",
    "facts": "Circumcenter(P) = G"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: d ) equals LineOf ( POINT: e, LeftFocus ( CONICSECTION: q ) )",
    "id": 47,
    "declarations": "d: CONICSECTION; e: POINT; q: CONICSECTION",
    "facts": "LeftDirectrix(d) = LineOf(e, LeftFocus(q))"
},
{
    "assertion": "LineSegmentOf ( POINT: u, POINT: Q ) equals LINESEGMENT: d",
    "id": 48,
    "declarations": "u: POINT; Q: POINT; d: LINESEGMENT",
    "facts": "LineSegmentOf(u, Q) = d"
},
{
    "assertion": "Eccentricity ( CONICSECTION: o ) equals XCoordinate ( RightFocus ( CONICSECTION: y ) )",
    "id": 49,
    "declarations": "o: CONICSECTION; y: CONICSECTION",
    "facts": "Eccentricity(o) = XCoordinate(RightFocus(y))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: o ) equals MidPoint ( LINESEGMENT: y )",
    "id": 50,
    "declarations": "o: CONICSECTION; y: LINESEGMENT",
    "facts": "LowerVertex(o) = MidPoint(y)"
},
{
    "assertion": "Vertex ( CONICSECTION: z ) equals UpperFocus ( CONICSECTION: o )",
    "id": 51,
    "declarations": "z: CONICSECTION; o: CONICSECTION",
    "facts": "Vertex(z) = UpperFocus(o)"
},
{
    "assertion": "IsPerpendicular ( LINE: q, LINE: U ) equals BOOL: False",
    "id": 52,
    "declarations": "q: LINE; U: LINE; False: BOOL",
    "facts": "IsPerpendicular(q, U) = False"
},
{
    "assertion": "Negation ( IsTangent ( PerpendicularBisector ( LINESEGMENT: e ), CONICSECTION: J ) equals BOOL: True ) equals BOOL: True",
    "id": 53,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "YCoordinate ( POINT: X ) equals Perimeter ( CONICSECTION: F )",
    "id": 54,
    "declarations": "X: POINT; F: CONICSECTION",
    "facts": "YCoordinate(X) = Perimeter(F)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: g, TRIANGLE: d ) equals BOOL: False",
    "id": 55,
    "declarations": "g: CIRCLE; d: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(g, d) = False"
},
{
    "assertion": "Orthocenter ( TRIANGLE: R ) equals LowerVertex ( CONICSECTION: d )",
    "id": 56,
    "declarations": "R: TRIANGLE; d: CONICSECTION",
    "facts": "Orthocenter(R) = LowerVertex(d)"
},
{
    "assertion": "lg ( NUMBER: 79 ) equals lg ( Quadrant ( POINT: h ) )",
    "id": 57,
    "declarations": "79: NUMBER; h: POINT",
    "facts": "lg(79) = lg(Quadrant(h))"
},
{
    "assertion": "Between ( UpperFocus ( CONICSECTION: j ), POINT: B, RightFocus ( CONICSECTION: w ) ) equals BOOL: True",
    "id": 58,
    "declarations": "j: CONICSECTION; B: POINT; w: CONICSECTION; True: BOOL",
    "facts": "Between(UpperFocus(j), B, RightFocus(w)) = True"
},
{
    "assertion": "Vertex ( CONICSECTION: p ) equals POINT: e",
    "id": 59,
    "declarations": "p: CONICSECTION; e: POINT",
    "facts": "Vertex(p) = e"
},
{
    "assertion": "Negation ( RealAxis ( ELLIPSE: P ) equals LINESEGMENT: Z ) equals BOOL: False",
    "id": 60,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Intercept ( LINE: z, AXIS: yAxis ) equals FocalLength ( CONICSECTION: N )",
    "id": 61,
    "declarations": "z: LINE; yAxis: AXIS; N: CONICSECTION",
    "facts": "Intercept(z, yAxis) = FocalLength(N)"
},
{
    "assertion": "RightFocus ( CONICSECTION: U ) equals POINT: u",
    "id": 62,
    "declarations": "U: CONICSECTION; u: POINT",
    "facts": "RightFocus(U) = u"
},
{
    "assertion": "LowerVertex ( CONICSECTION: i ) equals Circumcenter ( TRIANGLE: t )",
    "id": 63,
    "declarations": "i: CONICSECTION; t: TRIANGLE",
    "facts": "LowerVertex(i) = Circumcenter(t)"
},
{
    "assertion": "Incenter ( TRIANGLE: q ) equals FootPoint ( LINE: t, LINE: R )",
    "id": 64,
    "declarations": "q: TRIANGLE; t: LINE; R: LINE",
    "facts": "Incenter(q) = FootPoint(t, R)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: k ) equals Min ( NUMBER: 19 )",
    "id": 65,
    "declarations": "k: CONICSECTION; 19: NUMBER",
    "facts": "HalfFocalLength(k) = Min(19)"
},
{
    "assertion": "RealAxis ( ELLIPSE: E ) equals LINESEGMENT: X",
    "id": 66,
    "declarations": "E: ELLIPSE; X: LINESEGMENT",
    "facts": "RealAxis(E) = X"
},
{
    "assertion": "MinorAxis ( ELLIPSE: K ) equals LINESEGMENT: X",
    "id": 67,
    "declarations": "K: ELLIPSE; X: LINESEGMENT",
    "facts": "MinorAxis(K) = X"
},
{
    "assertion": "PointOnCurve ( POINT: k, CURVE: o ) equals BOOL: False",
    "id": 68,
    "declarations": "k: POINT; o: CURVE; False: BOOL",
    "facts": "PointOnCurve(k, o) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: Y, TriangleOf ( POINT: n, POINT: l, LeftVertex ( CONICSECTION: O ) ) ) equals BOOL: False",
    "id": 69,
    "declarations": "Y: CIRCLE; n: POINT; l: POINT; O: CONICSECTION; False: BOOL",
    "facts": "IsInscribedCircle(Y, TriangleOf(n, l, LeftVertex(O))) = False"
},
{
    "assertion": "RealAxis ( ELLIPSE: z ) equals RealAxis ( ELLIPSE: g )",
    "id": 70,
    "declarations": "z: ELLIPSE; g: ELLIPSE",
    "facts": "RealAxis(z) = RealAxis(g)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: v ) equals LINE: C",
    "id": 71,
    "declarations": "v: LINESEGMENT; C: LINE",
    "facts": "PerpendicularBisector(v) = C"
},
{
    "assertion": "IsInTangent ( CIRCLE: l, CIRCLE: S ) equals BOOL: False",
    "id": 72,
    "declarations": "l: CIRCLE; S: CIRCLE; False: BOOL",
    "facts": "IsInTangent(l, S) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: w ) equals Circumcenter ( TRIANGLE: q )",
    "id": 73,
    "declarations": "w: CONICSECTION; q: TRIANGLE",
    "facts": "LowerFocus(w) = Circumcenter(q)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: q ) equals POINT: F",
    "id": 74,
    "declarations": "q: TRIANGLE; F: POINT",
    "facts": "Orthocenter(q) = F"
},
{
    "assertion": "LowerFocus ( CONICSECTION: i ) equals POINT: k",
    "id": 75,
    "declarations": "i: CONICSECTION; k: POINT",
    "facts": "LowerFocus(i) = k"
},
{
    "assertion": "DotProduct ( VectorOf ( Projection ( POINT: W, LineOf ( Projection ( POINT: x, LINE: K ), POINT: M ) ), LowerFocus ( CONICSECTION: B ) ), VECTOR: k ) equals NUMBER: -27",
    "id": 76,
    "declarations": "W: POINT; x: POINT; K: LINE; M: POINT; B: CONICSECTION; k: VECTOR; -27: NUMBER",
    "facts": "DotProduct(VectorOf(Projection(W, LineOf(Projection(x, K), M)), LowerFocus(B)), k) = -27"
},
{
    "assertion": "Incenter ( TRIANGLE: h ) equals LowerVertex ( CONICSECTION: R )",
    "id": 77,
    "declarations": "h: TRIANGLE; R: CONICSECTION",
    "facts": "Incenter(h) = LowerVertex(R)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: A ) equals TangentOnPoint ( POINT: d, RightPart ( HYPERBOLA: T ) )",
    "id": 78,
    "declarations": "A: CONICSECTION; d: POINT; T: HYPERBOLA",
    "facts": "LeftDirectrix(A) = TangentOnPoint(d, RightPart(T))"
},
{
    "assertion": "Center ( CONICSECTION: h ) equals Orthocenter ( TRIANGLE: q )",
    "id": 79,
    "declarations": "h: CONICSECTION; q: TRIANGLE",
    "facts": "Center(h) = Orthocenter(q)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: c ) equals LeftVertex ( CONICSECTION: o )",
    "id": 80,
    "declarations": "c: CONICSECTION; o: CONICSECTION",
    "facts": "LowerVertex(c) = LeftVertex(o)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: o ) equals NUMBER: 16",
    "id": 81,
    "declarations": "o: CONICSECTION; 16: NUMBER",
    "facts": "HalfFocalLength(o) = 16"
},
{
    "assertion": "MidPoint ( LINESEGMENT: Y ) equals POINT: y",
    "id": 82,
    "declarations": "Y: LINESEGMENT; y: POINT",
    "facts": "MidPoint(Y) = y"
},
{
    "assertion": "RightFocus ( CONICSECTION: w ) equals LeftVertex ( CONICSECTION: q )",
    "id": 83,
    "declarations": "w: CONICSECTION; q: CONICSECTION",
    "facts": "RightFocus(w) = LeftVertex(q)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: X ) equals POINT: w",
    "id": 84,
    "declarations": "X: CONICSECTION; w: POINT",
    "facts": "LeftFocus(X) = w"
},
{
    "assertion": "LowerFocus ( CONICSECTION: d ) equals POINT: s",
    "id": 85,
    "declarations": "d: CONICSECTION; s: POINT",
    "facts": "LowerFocus(d) = s"
},
{
    "assertion": "Locus ( POINT: n ) equals LeftPart ( HYPERBOLA: Q )",
    "id": 86,
    "declarations": "n: POINT; Q: HYPERBOLA",
    "facts": "Locus(n) = LeftPart(Q)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: v ) equals LINESEGMENT: k",
    "id": 87,
    "declarations": "v: ELLIPSE; k: LINESEGMENT",
    "facts": "MajorAxis(v) = k"
},
{
    "assertion": "InterceptChord ( TangentOnPoint ( POINT: R, CURVE: j ), CONICSECTION: p ) equals LINESEGMENT: G",
    "id": 88,
    "declarations": "R: POINT; j: CURVE; p: CONICSECTION; G: LINESEGMENT",
    "facts": "InterceptChord(TangentOnPoint(R, j), p) = G"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: Y, CONICSECTION: D ) equals BOOL: False",
    "id": 89,
    "declarations": "Y: LINESEGMENT; D: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(Y, D) = False"
},
{
    "assertion": "Max ( YCoordinate ( POINT: h ) ) equals NUMBER: 10",
    "id": 90,
    "declarations": "h: POINT; 10: NUMBER",
    "facts": "Max(YCoordinate(h)) = 10"
},
{
    "assertion": "Incenter ( TRIANGLE: e ) equals POINT: N",
    "id": 91,
    "declarations": "e: TRIANGLE; N: POINT",
    "facts": "Incenter(e) = N"
},
{
    "assertion": "Inclination ( LINE: f ) equals Distance ( RightVertex ( CONICSECTION: O ), POINT: n )",
    "id": 92,
    "declarations": "f: LINE; O: CONICSECTION; n: POINT",
    "facts": "Inclination(f) = Distance(RightVertex(O), n)"
},
{
    "assertion": "Locus ( POINT: s ) equals RightPart ( HYPERBOLA: T )",
    "id": 93,
    "declarations": "s: POINT; T: HYPERBOLA",
    "facts": "Locus(s) = RightPart(T)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: U ) equals MinorAxis ( ELLIPSE: t )",
    "id": 94,
    "declarations": "U: ELLIPSE; t: ELLIPSE",
    "facts": "MajorAxis(U) = MinorAxis(t)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: x ) equals POINT: o",
    "id": 95,
    "declarations": "x: CONICSECTION; o: POINT",
    "facts": "LowerFocus(x) = o"
},
{
    "assertion": "Intercept ( LINE: D, AXIS: xAxis ) equals NUMBER: 92",
    "id": 96,
    "declarations": "D: LINE; xAxis: AXIS; 92: NUMBER",
    "facts": "Intercept(D, xAxis) = 92"
},
{
    "assertion": "IsParallel ( LINE: c, OverlappingLine ( LINESEGMENT: N ) ) equals BOOL: False",
    "id": 97,
    "declarations": "c: LINE; N: LINESEGMENT; False: BOOL",
    "facts": "IsParallel(c, OverlappingLine(N)) = False"
},
{
    "assertion": "LeftFocus ( CONICSECTION: U ) equals POINT: w",
    "id": 98,
    "declarations": "U: CONICSECTION; w: POINT",
    "facts": "LeftFocus(U) = w"
},
{
    "assertion": "Center ( CONICSECTION: K ) equals RightVertex ( CONICSECTION: K )",
    "id": 99,
    "declarations": "K: CONICSECTION; K: CONICSECTION",
    "facts": "Center(K) = RightVertex(K)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: M ) equals Abs ( LINESEGMENT: u )",
    "id": 100,
    "declarations": "M: CONICSECTION; u: LINESEGMENT",
    "facts": "Eccentricity(M) = Abs(u)"
},
{
    "assertion": "Length ( LINESEGMENT: G ) equals Distance ( POINT: V, POINT: k )",
    "id": 101,
    "declarations": "G: LINESEGMENT; V: POINT; k: POINT",
    "facts": "Length(G) = Distance(V, k)"
},
{
    "assertion": "FocalLength ( CONICSECTION: e ) equals NUMBER: -54",
    "id": 102,
    "declarations": "e: CONICSECTION; -54: NUMBER",
    "facts": "FocalLength(e) = -54"
},
{
    "assertion": "Asymptote ( HYPERBOLA: H ) equals LINE: d",
    "id": 103,
    "declarations": "H: HYPERBOLA; d: LINE",
    "facts": "Asymptote(H) = d"
},
{
    "assertion": "Distance ( LowerVertex ( CONICSECTION: c ), Orthocenter ( TRIANGLE: i ) ) equals InterReciprocal ( NUMBER: -71 )",
    "id": 104,
    "declarations": "c: CONICSECTION; i: TRIANGLE; -71: NUMBER",
    "facts": "Distance(LowerVertex(c), Orthocenter(i)) = InterReciprocal(-71)"
},
{
    "assertion": "Expression ( CURVE: p ) equals Expression ( CURVE: G )",
    "id": 105,
    "declarations": "p: CURVE; G: CURVE",
    "facts": "Expression(p) = Expression(G)"
},
{
    "assertion": "Inclination ( OverlappingLine ( InterceptChord ( LINE: o, CONICSECTION: v ) ) ) equals lg ( Eccentricity ( CONICSECTION: P ) )",
    "id": 106,
    "declarations": "o: LINE; v: CONICSECTION; P: CONICSECTION",
    "facts": "Inclination(OverlappingLine(InterceptChord(o, v))) = lg(Eccentricity(P))"
},
{
    "assertion": "Projection ( POINT: w, LeftDirectrix ( CONICSECTION: u ) ) equals POINT: f",
    "id": 107,
    "declarations": "w: POINT; u: CONICSECTION; f: POINT",
    "facts": "Projection(w, LeftDirectrix(u)) = f"
},
{
    "assertion": "TangentPoint ( LINE: i, CIRCLE: b ) equals LeftVertex ( CONICSECTION: a )",
    "id": 108,
    "declarations": "i: LINE; b: CIRCLE; a: CONICSECTION",
    "facts": "TangentPoint(i, b) = LeftVertex(a)"
},
{
    "assertion": "Perimeter ( CONICSECTION: r ) equals DotProduct ( VECTOR: o, VECTOR: F )",
    "id": 109,
    "declarations": "r: CONICSECTION; o: VECTOR; F: VECTOR",
    "facts": "Perimeter(r) = DotProduct(o, F)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: u, TRIANGLE: Z ) equals BOOL: False",
    "id": 110,
    "declarations": "u: CIRCLE; Z: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(u, Z) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: v ) equals Orthocenter ( TRIANGLE: N )",
    "id": 111,
    "declarations": "v: TRIANGLE; N: TRIANGLE",
    "facts": "Incenter(v) = Orthocenter(N)"
},
{
    "assertion": "lg ( NUMBER: 4 ) equals sqrt ( Min ( Radius ( CIRCLE: P ) ) )",
    "id": 112,
    "declarations": "4: NUMBER; P: CIRCLE",
    "facts": "lg(4) = sqrt(Min(Radius(P)))"
},
{
    "assertion": "AngleOf ( Orthocenter ( TRIANGLE: c ), UpperVertex ( CONICSECTION: b ), RightVertex ( CONICSECTION: v ) ) equals ApplyUnit ( Radius ( CIRCLE: l ), DEGREESTR: degree )",
    "id": 113,
    "declarations": "c: TRIANGLE; b: CONICSECTION; v: CONICSECTION; l: CIRCLE; degree: DEGREESTR",
    "facts": "AngleOf(Orthocenter(c), UpperVertex(b), RightVertex(v)) = ApplyUnit(Radius(l), degree)"
},
{
    "assertion": "IsPerpendicular ( OverlappingLine ( ImaginaryAxis ( ELLIPSE: y ) ), LINE: r ) equals BOOL: False",
    "id": 114,
    "declarations": "y: ELLIPSE; r: LINE; False: BOOL",
    "facts": "IsPerpendicular(OverlappingLine(ImaginaryAxis(y)), r) = False"
},
{
    "assertion": "IsTangent ( LineOf ( Orthocenter ( TRIANGLE: t ), POINT: t ), CONICSECTION: G ) equals BOOL: True",
    "id": 115,
    "declarations": "t: TRIANGLE; t: POINT; G: CONICSECTION; True: BOOL",
    "facts": "IsTangent(LineOf(Orthocenter(t), t), G) = True"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: h, TRIANGLE: h ) equals BOOL: True",
    "id": 116,
    "declarations": "h: CIRCLE; h: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(h, h) = True"
},
{
    "assertion": "TriangleOf ( LeftVertex ( CONICSECTION: s ), POINT: R, LeftFocus ( CONICSECTION: a ) ) equals TRIANGLE: v",
    "id": 117,
    "declarations": "s: CONICSECTION; R: POINT; a: CONICSECTION; v: TRIANGLE",
    "facts": "TriangleOf(LeftVertex(s), R, LeftFocus(a)) = v"
},
{
    "assertion": "LeftFocus ( CONICSECTION: u ) equals Incenter ( TRIANGLE: x )",
    "id": 118,
    "declarations": "u: CONICSECTION; x: TRIANGLE",
    "facts": "LeftFocus(u) = Incenter(x)"
},
{
    "assertion": "Expression ( CURVE: z ) equals Expression ( CURVE: Z )",
    "id": 119,
    "declarations": "z: CURVE; Z: CURVE",
    "facts": "Expression(z) = Expression(Z)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: h ) equals CURVE: p",
    "id": 120,
    "declarations": "h: HYPERBOLA; p: CURVE",
    "facts": "LeftPart(h) = p"
},
{
    "assertion": "Eccentricity ( CONICSECTION: l ) equals NUMBER: -66",
    "id": 121,
    "declarations": "l: CONICSECTION; -66: NUMBER",
    "facts": "Eccentricity(l) = -66"
},
{
    "assertion": "Locus ( LowerFocus ( CONICSECTION: D ) ) equals CURVE: i",
    "id": 122,
    "declarations": "D: CONICSECTION; i: CURVE",
    "facts": "Locus(LowerFocus(D)) = i"
},
{
    "assertion": "LowerVertex ( CONICSECTION: f ) equals LeftFocus ( CONICSECTION: f )",
    "id": 123,
    "declarations": "f: CONICSECTION; f: CONICSECTION",
    "facts": "LowerVertex(f) = LeftFocus(f)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: y, CIRCLE: P ) equals BOOL: False",
    "id": 124,
    "declarations": "y: CIRCLE; P: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(y, P) = False"
},
{
    "assertion": "Focus ( CONICSECTION: T ) equals POINT: P",
    "id": 125,
    "declarations": "T: CONICSECTION; P: POINT",
    "facts": "Focus(T) = P"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: Y ) equals LINESEGMENT: B",
    "id": 126,
    "declarations": "Y: ELLIPSE; B: LINESEGMENT",
    "facts": "ImaginaryAxis(Y) = B"
},
{
    "assertion": "sqrt ( NUMBER: 45 ) equals Distance ( RightFocus ( CONICSECTION: y ), LowerVertex ( CONICSECTION: r ) )",
    "id": 127,
    "declarations": "45: NUMBER; y: CONICSECTION; r: CONICSECTION",
    "facts": "sqrt(45) = Distance(RightFocus(y), LowerVertex(r))"
},
{
    "assertion": "Abs ( ImaginaryAxis ( ELLIPSE: v ) ) equals sqrt ( NUMBER: -98 )",
    "id": 128,
    "declarations": "v: ELLIPSE; -98: NUMBER",
    "facts": "Abs(ImaginaryAxis(v)) = sqrt(-98)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: k ) equals Length ( LINESEGMENT: e )",
    "id": 129,
    "declarations": "k: CONICSECTION; e: LINESEGMENT",
    "facts": "HalfFocalLength(k) = Length(e)"
},
{
    "assertion": "NumIntersection ( RightPart ( HYPERBOLA: m ), CURVE: R ) equals Inclination ( LINE: V )",
    "id": 130,
    "declarations": "m: HYPERBOLA; R: CURVE; V: LINE",
    "facts": "NumIntersection(RightPart(m), R) = Inclination(V)"
},
{
    "assertion": "DotProduct ( VECTOR: g, VECTOR: q ) equals XCoordinate ( Circumcenter ( TRIANGLE: H ) )",
    "id": 131,
    "declarations": "g: VECTOR; q: VECTOR; H: TRIANGLE",
    "facts": "DotProduct(g, q) = XCoordinate(Circumcenter(H))"
},
{
    "assertion": "Radius ( CIRCLE: B ) equals NUMBER: 32",
    "id": 132,
    "declarations": "B: CIRCLE; 32: NUMBER",
    "facts": "Radius(B) = 32"
},
{
    "assertion": "XCoordinate ( POINT: M ) equals NUMBER: -11",
    "id": 133,
    "declarations": "M: POINT; -11: NUMBER",
    "facts": "XCoordinate(M) = -11"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: v ) equals LINESEGMENT: b",
    "id": 134,
    "declarations": "v: ELLIPSE; b: LINESEGMENT",
    "facts": "ImaginaryAxis(v) = b"
},
{
    "assertion": "LeftVertex ( CONICSECTION: u ) equals LowerFocus ( CONICSECTION: J )",
    "id": 135,
    "declarations": "u: CONICSECTION; J: CONICSECTION",
    "facts": "LeftVertex(u) = LowerFocus(J)"
},
{
    "assertion": "RightFocus ( CONICSECTION: l ) equals LowerFocus ( CONICSECTION: w )",
    "id": 136,
    "declarations": "l: CONICSECTION; w: CONICSECTION",
    "facts": "RightFocus(l) = LowerFocus(w)"
},
{
    "assertion": "Center ( CONICSECTION: A ) equals Incenter ( TRIANGLE: I )",
    "id": 137,
    "declarations": "A: CONICSECTION; I: TRIANGLE",
    "facts": "Center(A) = Incenter(I)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: O ) equals CIRCLE: Z",
    "id": 138,
    "declarations": "O: TRIANGLE; Z: CIRCLE",
    "facts": "CircumCircle(O) = Z"
},
{
    "assertion": "And ( And ( Center ( CONICSECTION: g ) equals POINT: b, IsParallel ( PerpendicularBisector ( MajorAxis ( ELLIPSE: C ) ), LINE: f ) equals BOOL: True ) equals BOOL: False, IsIntersect ( RightPart ( HYPERBOLA: t ), CURVE: C ) equals BOOL: False ) equals BOOL: True",
    "id": 139,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsParallel ( LINE: z, TangentOfPoint ( UpperFocus ( CONICSECTION: G ), LeftPart ( HYPERBOLA: H ) ) ) equals BOOL: True",
    "id": 140,
    "declarations": "z: LINE; G: CONICSECTION; H: HYPERBOLA; True: BOOL",
    "facts": "IsParallel(z, TangentOfPoint(UpperFocus(G), LeftPart(H))) = True"
},
{
    "assertion": "RightVertex ( CONICSECTION: U ) equals POINT: U",
    "id": 141,
    "declarations": "U: CONICSECTION; U: POINT",
    "facts": "RightVertex(U) = U"
},
{
    "assertion": "TangentPoint ( LINE: I, CIRCLE: C ) equals LowerFocus ( CONICSECTION: C )",
    "id": 142,
    "declarations": "I: LINE; C: CIRCLE; C: CONICSECTION",
    "facts": "TangentPoint(I, C) = LowerFocus(C)"
},
{
    "assertion": "TriangleOf ( POINT: Y, POINT: I, POINT: s ) equals TriangleOf ( Circumcenter ( TRIANGLE: S ), RightVertex ( CONICSECTION: i ), POINT: B )",
    "id": 143,
    "declarations": "Y: POINT; I: POINT; s: POINT; S: TRIANGLE; i: CONICSECTION; B: POINT",
    "facts": "TriangleOf(Y, I, s) = TriangleOf(Circumcenter(S), RightVertex(i), B)"
},
{
    "assertion": "InterReciprocal ( NUMBER: -81 ) equals NUMBER: 75",
    "id": 144,
    "declarations": "-81: NUMBER; 75: NUMBER",
    "facts": "InterReciprocal(-81) = 75"
},
{
    "assertion": "UpperFocus ( CONICSECTION: r ) equals RightVertex ( CONICSECTION: Y )",
    "id": 145,
    "declarations": "r: CONICSECTION; Y: CONICSECTION",
    "facts": "UpperFocus(r) = RightVertex(Y)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: W ) equals POINT: G",
    "id": 146,
    "declarations": "W: CONICSECTION; G: POINT",
    "facts": "UpperFocus(W) = G"
},
{
    "assertion": "Quadrant ( POINT: g ) equals NUMBER: 72",
    "id": 147,
    "declarations": "g: POINT; 72: NUMBER",
    "facts": "Quadrant(g) = 72"
},
{
    "assertion": "ApplyUnit ( HalfFocalLength ( CONICSECTION: h ), DEGREESTR: degree )",
    "id": 148,
    "declarations": "h: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(HalfFocalLength(h), degree) = dummy_operator()"
},
{
    "assertion": "OverlappingLine ( ImaginaryAxis ( ELLIPSE: S ) ) equals OverlappingLine ( LINESEGMENT: I )",
    "id": 149,
    "declarations": "S: ELLIPSE; I: LINESEGMENT",
    "facts": "OverlappingLine(ImaginaryAxis(S)) = OverlappingLine(I)"
},
{
    "assertion": "TangentPoint ( LeftDirectrix ( CONICSECTION: E ), CIRCLE: u ) equals UpperFocus ( CONICSECTION: E )",
    "id": 150,
    "declarations": "E: CONICSECTION; u: CIRCLE; E: CONICSECTION",
    "facts": "TangentPoint(LeftDirectrix(E), u) = UpperFocus(E)"
},
{
    "assertion": "Min ( sqrt ( NUMBER: -10 ) ) equals Abs ( LineSegmentOf ( POINT: E, POINT: L ) )",
    "id": 151,
    "declarations": "-10: NUMBER; E: POINT; L: POINT",
    "facts": "Min(sqrt(-10)) = Abs(LineSegmentOf(E, L))"
},
{
    "assertion": "Intersection ( CURVE: K, CURVE: j ) equals MidPoint ( LINESEGMENT: U )",
    "id": 152,
    "declarations": "K: CURVE; j: CURVE; U: LINESEGMENT",
    "facts": "Intersection(K, j) = MidPoint(U)"
},
{
    "assertion": "RealAxis ( ELLIPSE: U ) equals LINESEGMENT: J",
    "id": 153,
    "declarations": "U: ELLIPSE; J: LINESEGMENT",
    "facts": "RealAxis(U) = J"
},
{
    "assertion": "LineSegmentOf ( POINT: o, LeftVertex ( CONICSECTION: v ) ) equals RealAxis ( ELLIPSE: r )",
    "id": 154,
    "declarations": "o: POINT; v: CONICSECTION; r: ELLIPSE",
    "facts": "LineSegmentOf(o, LeftVertex(v)) = RealAxis(r)"
},
{
    "assertion": "Slope ( LINE: G ) equals NUMBER: -2",
    "id": 155,
    "declarations": "G: LINE; -2: NUMBER",
    "facts": "Slope(G) = -2"
},
{
    "assertion": "InterceptChord ( LINE: n, CONICSECTION: i ) equals ImaginaryAxis ( ELLIPSE: t )",
    "id": 156,
    "declarations": "n: LINE; i: CONICSECTION; t: ELLIPSE",
    "facts": "InterceptChord(n, i) = ImaginaryAxis(t)"
},
{
    "assertion": "RightPart ( HYPERBOLA: f ) equals CURVE: H",
    "id": 157,
    "declarations": "f: HYPERBOLA; H: CURVE",
    "facts": "RightPart(f) = H"
},
{
    "assertion": "LineOf ( Projection ( Circumcenter ( TRIANGLE: w ), LINE: K ), RightFocus ( CONICSECTION: t ) ) equals TangentOfPoint ( Center ( CONICSECTION: y ), CURVE: w )",
    "id": 158,
    "declarations": "w: TRIANGLE; K: LINE; t: CONICSECTION; y: CONICSECTION; w: CURVE",
    "facts": "LineOf(Projection(Circumcenter(w), K), RightFocus(t)) = TangentOfPoint(Center(y), w)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: r ) equals LeftVertex ( CONICSECTION: f )",
    "id": 159,
    "declarations": "r: CONICSECTION; f: CONICSECTION",
    "facts": "LowerFocus(r) = LeftVertex(f)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: r ) equals POINT: K",
    "id": 160,
    "declarations": "r: LINESEGMENT; K: POINT",
    "facts": "MidPoint(r) = K"
},
{
    "assertion": "Intersection ( CURVE: r, CURVE: B ) equals LowerVertex ( CONICSECTION: K )",
    "id": 161,
    "declarations": "r: CURVE; B: CURVE; K: CONICSECTION",
    "facts": "Intersection(r, B) = LowerVertex(K)"
},
{
    "assertion": "DotProduct ( VECTOR: J, VECTOR: i ) equals Distance ( LowerFocus ( CONICSECTION: M ), Incenter ( TRIANGLE: F ) )",
    "id": 162,
    "declarations": "J: VECTOR; i: VECTOR; M: CONICSECTION; F: TRIANGLE",
    "facts": "DotProduct(J, i) = Distance(LowerFocus(M), Incenter(F))"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: d ) equals LeftDirectrix ( CONICSECTION: e )",
    "id": 163,
    "declarations": "d: CONICSECTION; e: CONICSECTION",
    "facts": "LeftDirectrix(d) = LeftDirectrix(e)"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: M ) ) equals LINE: Q",
    "id": 164,
    "declarations": "M: ELLIPSE; Q: LINE",
    "facts": "OverlappingLine(MinorAxis(M)) = Q"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: h ) equals LeftDirectrix ( CONICSECTION: Z )",
    "id": 165,
    "declarations": "h: CONICSECTION; Z: CONICSECTION",
    "facts": "RightDirectrix(h) = LeftDirectrix(Z)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: M, TRIANGLE: Z ) equals BOOL: True",
    "id": 166,
    "declarations": "M: CIRCLE; Z: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(M, Z) = True"
},
{
    "assertion": "ApplyUnit ( NUMBER: 26, DEGREESTR: degree )",
    "id": 167,
    "declarations": "26: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(26, degree) = dummy_operator()"
},
{
    "assertion": "NumIntersection ( CURVE: R, RightPart ( HYPERBOLA: q ) ) equals Inclination ( LINE: m )",
    "id": 168,
    "declarations": "R: CURVE; q: HYPERBOLA; m: LINE",
    "facts": "NumIntersection(R, RightPart(q)) = Inclination(m)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: K ) equals LINE: e",
    "id": 169,
    "declarations": "K: HYPERBOLA; e: LINE",
    "facts": "Asymptote(K) = e"
},
{
    "assertion": "And ( RealAxis ( ELLIPSE: E ) equals LINESEGMENT: Z, IsIntersect ( CURVE: q, CURVE: E ) equals BOOL: False ) equals BOOL: True",
    "id": 170,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "UpperVertex ( CONICSECTION: I ) equals POINT: M",
    "id": 171,
    "declarations": "I: CONICSECTION; M: POINT",
    "facts": "UpperVertex(I) = M"
},
{
    "assertion": "LeftFocus ( CONICSECTION: N ) equals RightVertex ( CONICSECTION: S )",
    "id": 172,
    "declarations": "N: CONICSECTION; S: CONICSECTION",
    "facts": "LeftFocus(N) = RightVertex(S)"
},
{
    "assertion": "Intersection ( CURVE: h, CURVE: D ) equals LeftVertex ( CONICSECTION: E )",
    "id": 173,
    "declarations": "h: CURVE; D: CURVE; E: CONICSECTION",
    "facts": "Intersection(h, D) = LeftVertex(E)"
},
{
    "assertion": "Distance ( POINT: n, POINT: U ) equals NUMBER: 80",
    "id": 174,
    "declarations": "n: POINT; U: POINT; 80: NUMBER",
    "facts": "Distance(n, U) = 80"
},
{
    "assertion": "Area ( CONICSECTION: s ) equals NUMBER: -16",
    "id": 175,
    "declarations": "s: CONICSECTION; -16: NUMBER",
    "facts": "Area(s) = -16"
},
{
    "assertion": "LineSegmentOf ( UpperFocus ( CONICSECTION: I ), LowerVertex ( CONICSECTION: p ) ) equals LINESEGMENT: F",
    "id": 176,
    "declarations": "I: CONICSECTION; p: CONICSECTION; F: LINESEGMENT",
    "facts": "LineSegmentOf(UpperFocus(I), LowerVertex(p)) = F"
},
{
    "assertion": "LowerVertex ( CONICSECTION: K ) equals Center ( CONICSECTION: C )",
    "id": 177,
    "declarations": "K: CONICSECTION; C: CONICSECTION",
    "facts": "LowerVertex(K) = Center(C)"
},
{
    "assertion": "NumIntersection ( CURVE: e, CURVE: v ) equals lg ( NUMBER: -4 )",
    "id": 178,
    "declarations": "e: CURVE; v: CURVE; -4: NUMBER",
    "facts": "NumIntersection(e, v) = lg(-4)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: V ) equals LeftDirectrix ( CONICSECTION: g )",
    "id": 179,
    "declarations": "V: CONICSECTION; g: CONICSECTION",
    "facts": "LeftDirectrix(V) = LeftDirectrix(g)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: A ) equals AXIS: yAxis",
    "id": 180,
    "declarations": "A: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(A) = yAxis"
},
{
    "assertion": "LeftVertex ( CONICSECTION: g ) equals POINT: n",
    "id": 181,
    "declarations": "g: CONICSECTION; n: POINT",
    "facts": "LeftVertex(g) = n"
},
{
    "assertion": "Perimeter ( CONICSECTION: o ) equals NUMBER: -12",
    "id": 182,
    "declarations": "o: CONICSECTION; -12: NUMBER",
    "facts": "Perimeter(o) = -12"
},
{
    "assertion": "LocusEquation ( POINT: f ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 183,
    "declarations": "f: POINT; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "LocusEquation(f) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "Eccentricity ( CONICSECTION: u ) equals NUMBER: 19",
    "id": 184,
    "declarations": "u: CONICSECTION; 19: NUMBER",
    "facts": "Eccentricity(u) = 19"
},
{
    "assertion": "Circumcenter ( TRIANGLE: u ) equals Orthocenter ( TRIANGLE: c )",
    "id": 185,
    "declarations": "u: TRIANGLE; c: TRIANGLE",
    "facts": "Circumcenter(u) = Orthocenter(c)"
},
{
    "assertion": "lg ( NUMBER: 53 ) equals NumIntersection ( CURVE: A, Locus ( LeftFocus ( CONICSECTION: I ) ) )",
    "id": 186,
    "declarations": "53: NUMBER; A: CURVE; I: CONICSECTION",
    "facts": "lg(53) = NumIntersection(A, Locus(LeftFocus(I)))"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: N ) ) equals Radius ( CIRCLE: C )",
    "id": 187,
    "declarations": "N: CONICSECTION; C: CIRCLE",
    "facts": "Quadrant(LeftVertex(N)) = Radius(C)"
},
{
    "assertion": "AngleOf ( Orthocenter ( TRIANGLE: M ), POINT: V, RightVertex ( CONICSECTION: I ) ) equals ApplyUnit ( Radius ( CircumCircle ( TRIANGLE: k ) ), DEGREESTR: degree )",
    "id": 188,
    "declarations": "M: TRIANGLE; V: POINT; I: CONICSECTION; k: TRIANGLE; degree: DEGREESTR",
    "facts": "AngleOf(Orthocenter(M), V, RightVertex(I)) = ApplyUnit(Radius(CircumCircle(k)), degree)"
},
{
    "assertion": "FocalLength ( CONICSECTION: q ) equals YCoordinate ( POINT: E )",
    "id": 189,
    "declarations": "q: CONICSECTION; E: POINT",
    "facts": "FocalLength(q) = YCoordinate(E)"
},
{
    "assertion": "Intersection ( CURVE: z, CURVE: q ) equals POINT: f",
    "id": 190,
    "declarations": "z: CURVE; q: CURVE; f: POINT",
    "facts": "Intersection(z, q) = f"
},
{
    "assertion": "FocalLength ( CONICSECTION: F ) equals NUMBER: 15",
    "id": 191,
    "declarations": "F: CONICSECTION; 15: NUMBER",
    "facts": "FocalLength(F) = 15"
},
{
    "assertion": "Perimeter ( CONICSECTION: Z ) equals NUMBER: 40",
    "id": 192,
    "declarations": "Z: CONICSECTION; 40: NUMBER",
    "facts": "Perimeter(Z) = 40"
},
{
    "assertion": "LeftVertex ( CONICSECTION: f ) equals Incenter ( TRIANGLE: G )",
    "id": 193,
    "declarations": "f: CONICSECTION; G: TRIANGLE",
    "facts": "LeftVertex(f) = Incenter(G)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: M ) equals LeftFocus ( CONICSECTION: A )",
    "id": 194,
    "declarations": "M: CONICSECTION; A: CONICSECTION",
    "facts": "LowerFocus(M) = LeftFocus(A)"
},
{
    "assertion": "Center ( CONICSECTION: V ) equals RightFocus ( CONICSECTION: n )",
    "id": 195,
    "declarations": "V: CONICSECTION; n: CONICSECTION",
    "facts": "Center(V) = RightFocus(n)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: p, TRIANGLE: d ) equals BOOL: False",
    "id": 196,
    "declarations": "p: CIRCLE; d: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(p, d) = False"
},
{
    "assertion": "Negation ( LineOf ( LowerFocus ( CONICSECTION: q ), POINT: i ) equals LINE: x ) equals BOOL: False",
    "id": 197,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: c, CIRCLE: d ) equals BOOL: False",
    "id": 198,
    "declarations": "c: LINESEGMENT; d: CIRCLE; False: BOOL",
    "facts": "IsDiameter(c, d) = False"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: n ) equals LINE: w",
    "id": 199,
    "declarations": "n: CONICSECTION; w: LINE",
    "facts": "LeftDirectrix(n) = w"
},
{
    "assertion": "Slope ( LINE: f ) equals NUMBER: 100",
    "id": 200,
    "declarations": "f: LINE; 100: NUMBER",
    "facts": "Slope(f) = 100"
},
{
    "assertion": "LowerFocus ( CONICSECTION: a ) equals Projection ( POINT: y, PerpendicularBisector ( LINESEGMENT: d ) )",
    "id": 201,
    "declarations": "a: CONICSECTION; y: POINT; d: LINESEGMENT",
    "facts": "LowerFocus(a) = Projection(y, PerpendicularBisector(d))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: E ) equals POINT: q",
    "id": 202,
    "declarations": "E: CONICSECTION; q: POINT",
    "facts": "UpperFocus(E) = q"
},
{
    "assertion": "Focus ( CONICSECTION: E ) equals LowerVertex ( CONICSECTION: o )",
    "id": 203,
    "declarations": "E: CONICSECTION; o: CONICSECTION",
    "facts": "Focus(E) = LowerVertex(o)"
},
{
    "assertion": "InterReciprocal ( Perimeter ( CONICSECTION: M ) ) equals NUMBER: 13",
    "id": 204,
    "declarations": "M: CONICSECTION; 13: NUMBER",
    "facts": "InterReciprocal(Perimeter(M)) = 13"
},
{
    "assertion": "UpperFocus ( CONICSECTION: n ) equals POINT: O",
    "id": 205,
    "declarations": "n: CONICSECTION; O: POINT",
    "facts": "UpperFocus(n) = O"
},
{
    "assertion": "Inclination ( OverlappingLine ( LINESEGMENT: L ) ) equals NUMBER: -69",
    "id": 206,
    "declarations": "L: LINESEGMENT; -69: NUMBER",
    "facts": "Inclination(OverlappingLine(L)) = -69"
},
{
    "assertion": "TangentOnPoint ( POINT: A, Locus ( LeftVertex ( CONICSECTION: t ) ) ) equals LineOf ( Center ( CONICSECTION: F ), LeftFocus ( CONICSECTION: T ) )",
    "id": 207,
    "declarations": "A: POINT; t: CONICSECTION; F: CONICSECTION; T: CONICSECTION",
    "facts": "TangentOnPoint(A, Locus(LeftVertex(t))) = LineOf(Center(F), LeftFocus(T))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: D ) equals LINESEGMENT: y",
    "id": 208,
    "declarations": "D: ELLIPSE; y: LINESEGMENT",
    "facts": "MinorAxis(D) = y"
},
{
    "assertion": "Incenter ( TRIANGLE: O ) equals POINT: Z",
    "id": 209,
    "declarations": "O: TRIANGLE; Z: POINT",
    "facts": "Incenter(O) = Z"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: w, TRIANGLE: r ) equals BOOL: True",
    "id": 210,
    "declarations": "w: CIRCLE; r: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(w, r) = True"
},
{
    "assertion": "Max ( NUMBER: 21 ) equals HalfFocalLength ( CONICSECTION: V )",
    "id": 211,
    "declarations": "21: NUMBER; V: CONICSECTION",
    "facts": "Max(21) = HalfFocalLength(V)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: x ) equals LowerFocus ( CONICSECTION: Z )",
    "id": 212,
    "declarations": "x: CONICSECTION; Z: CONICSECTION",
    "facts": "UpperVertex(x) = LowerFocus(Z)"
},
{
    "assertion": "Abs ( LINESEGMENT: L ) equals sqrt ( Min ( XCoordinate ( POINT: h ) ) )",
    "id": 213,
    "declarations": "L: LINESEGMENT; h: POINT",
    "facts": "Abs(L) = sqrt(Min(XCoordinate(h)))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: z ) equals Orthocenter ( TRIANGLE: y )",
    "id": 214,
    "declarations": "z: CONICSECTION; y: TRIANGLE",
    "facts": "LowerFocus(z) = Orthocenter(y)"
},
{
    "assertion": "Distance ( LowerFocus ( CONICSECTION: c ), POINT: X ) equals NUMBER: 25",
    "id": 215,
    "declarations": "c: CONICSECTION; X: POINT; 25: NUMBER",
    "facts": "Distance(LowerFocus(c), X) = 25"
},
{
    "assertion": "Perimeter ( CONICSECTION: w ) equals Perimeter ( CONICSECTION: Q )",
    "id": 216,
    "declarations": "w: CONICSECTION; Q: CONICSECTION",
    "facts": "Perimeter(w) = Perimeter(Q)"
},
{
    "assertion": "InterReciprocal ( FocalLength ( CONICSECTION: J ) ) equals Area ( CONICSECTION: n )",
    "id": 217,
    "declarations": "J: CONICSECTION; n: CONICSECTION",
    "facts": "InterReciprocal(FocalLength(J)) = Area(n)"
},
{
    "assertion": "VectorOf ( POINT: c, LowerVertex ( CONICSECTION: c ) ) equals VECTOR: j",
    "id": 218,
    "declarations": "c: POINT; c: CONICSECTION; j: VECTOR",
    "facts": "VectorOf(c, LowerVertex(c)) = j"
},
{
    "assertion": "Asymptote ( HYPERBOLA: u ) equals LINE: I",
    "id": 219,
    "declarations": "u: HYPERBOLA; I: LINE",
    "facts": "Asymptote(u) = I"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: H ) equals TangentOfPoint ( MidPoint ( LINESEGMENT: u ), CURVE: Y )",
    "id": 220,
    "declarations": "H: CONICSECTION; u: LINESEGMENT; Y: CURVE",
    "facts": "LeftDirectrix(H) = TangentOfPoint(MidPoint(u), Y)"
},
{
    "assertion": "Incenter ( TRIANGLE: f ) equals POINT: e",
    "id": 221,
    "declarations": "f: TRIANGLE; e: POINT",
    "facts": "Incenter(f) = e"
},
{
    "assertion": "InterReciprocal ( lg ( NUMBER: 22 ) ) equals Radius ( CIRCLE: j )",
    "id": 222,
    "declarations": "22: NUMBER; j: CIRCLE",
    "facts": "InterReciprocal(lg(22)) = Radius(j)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: x, TRIANGLE: t ) equals BOOL: True",
    "id": 223,
    "declarations": "x: CIRCLE; t: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(x, t) = True"
},
{
    "assertion": "LowerFocus ( CONICSECTION: c ) equals RightFocus ( CONICSECTION: R )",
    "id": 224,
    "declarations": "c: CONICSECTION; R: CONICSECTION",
    "facts": "LowerFocus(c) = RightFocus(R)"
},
{
    "assertion": "IsInTangent ( CIRCLE: N, CIRCLE: L ) equals BOOL: False",
    "id": 225,
    "declarations": "N: CIRCLE; L: CIRCLE; False: BOOL",
    "facts": "IsInTangent(N, L) = False"
},
{
    "assertion": "IsParallel ( TangentOnPoint ( Incenter ( TRIANGLE: t ), CURVE: h ), LINE: X ) equals BOOL: False",
    "id": 226,
    "declarations": "t: TRIANGLE; h: CURVE; X: LINE; False: BOOL",
    "facts": "IsParallel(TangentOnPoint(Incenter(t), h), X) = False"
},
{
    "assertion": "lg ( NUMBER: 5 ) equals Diameter ( CIRCLE: j )",
    "id": 227,
    "declarations": "5: NUMBER; j: CIRCLE",
    "facts": "lg(5) = Diameter(j)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: a ) equals POINT: E",
    "id": 228,
    "declarations": "a: CONICSECTION; E: POINT",
    "facts": "UpperVertex(a) = E"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: R ) ) equals LINE: v",
    "id": 229,
    "declarations": "R: ELLIPSE; v: LINE",
    "facts": "OverlappingLine(MinorAxis(R)) = v"
},
{
    "assertion": "LowerVertex ( CONICSECTION: p ) equals POINT: x",
    "id": 230,
    "declarations": "p: CONICSECTION; x: POINT",
    "facts": "LowerVertex(p) = x"
},
{
    "assertion": "PointOnCurve ( Center ( CONICSECTION: H ), CURVE: Y ) equals BOOL: True",
    "id": 231,
    "declarations": "H: CONICSECTION; Y: CURVE; True: BOOL",
    "facts": "PointOnCurve(Center(H), Y) = True"
},
{
    "assertion": "Max ( HalfFocalLength ( CONICSECTION: R ) ) equals lg ( InterReciprocal ( Diameter ( CIRCLE: o ) ) )",
    "id": 232,
    "declarations": "R: CONICSECTION; o: CIRCLE",
    "facts": "Max(HalfFocalLength(R)) = lg(InterReciprocal(Diameter(o)))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: j ) equals LINE: L",
    "id": 233,
    "declarations": "j: CONICSECTION; L: LINE",
    "facts": "RightDirectrix(j) = L"
},
{
    "assertion": "Asymptote ( HYPERBOLA: F ) equals LINE: P",
    "id": 234,
    "declarations": "F: HYPERBOLA; P: LINE",
    "facts": "Asymptote(F) = P"
},
{
    "assertion": "LocusEquation ( LowerVertex ( CONICSECTION: u ) ) equals EXPRESSION: x*space+*spacey^2*space=*space4",
    "id": 236,
    "declarations": "u: CONICSECTION; x*space+*spacey^2*space=*space4: EXPRESSION",
    "facts": "LocusEquation(LowerVertex(u)) = x*space+*spacey^2*space=*space4"
},
{
    "assertion": "Diameter ( CIRCLE: u ) equals Diameter ( CIRCLE: H )",
    "id": 237,
    "declarations": "u: CIRCLE; H: CIRCLE",
    "facts": "Diameter(u) = Diameter(H)"
},
{
    "assertion": "sqrt ( Intercept ( LINE: V, AXIS: yAxis ) ) equals NumIntersection ( CURVE: V, RightPart ( HYPERBOLA: L ) )",
    "id": 238,
    "declarations": "V: LINE; yAxis: AXIS; V: CURVE; L: HYPERBOLA",
    "facts": "sqrt(Intercept(V, yAxis)) = NumIntersection(V, RightPart(L))"
},
{
    "assertion": "Min ( Eccentricity ( CONICSECTION: J ) ) equals NUMBER: -3",
    "id": 239,
    "declarations": "J: CONICSECTION; -3: NUMBER",
    "facts": "Min(Eccentricity(J)) = -3"
},
{
    "assertion": "Focus ( CONICSECTION: i ) equals POINT: G",
    "id": 241,
    "declarations": "i: CONICSECTION; G: POINT",
    "facts": "Focus(i) = G"
},
{
    "assertion": "Directrix ( CONICSECTION: H ) equals LINE: x",
    "id": 242,
    "declarations": "H: CONICSECTION; x: LINE",
    "facts": "Directrix(H) = x"
},
{
    "assertion": "MinorAxis ( ELLIPSE: u ) equals MinorAxis ( ELLIPSE: n )",
    "id": 243,
    "declarations": "u: ELLIPSE; n: ELLIPSE",
    "facts": "MinorAxis(u) = MinorAxis(n)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: l ) equals LowerFocus ( CONICSECTION: Y )",
    "id": 244,
    "declarations": "l: CONICSECTION; Y: CONICSECTION",
    "facts": "UpperVertex(l) = LowerFocus(Y)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: m ) equals Length ( LINESEGMENT: U )",
    "id": 245,
    "declarations": "m: CONICSECTION; U: LINESEGMENT",
    "facts": "Eccentricity(m) = Length(U)"
},
{
    "assertion": "XCoordinate ( POINT: y ) equals Abs ( LINESEGMENT: C )",
    "id": 246,
    "declarations": "y: POINT; C: LINESEGMENT",
    "facts": "XCoordinate(y) = Abs(C)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: H ) equals UpperVertex ( CONICSECTION: C )",
    "id": 247,
    "declarations": "H: CONICSECTION; C: CONICSECTION",
    "facts": "LowerFocus(H) = UpperVertex(C)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: V, TRIANGLE: U ) equals BOOL: False",
    "id": 248,
    "declarations": "V: CIRCLE; U: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(V, U) = False"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: V ) ) equals Area ( CONICSECTION: f )",
    "id": 249,
    "declarations": "V: ELLIPSE; f: CONICSECTION",
    "facts": "Abs(MinorAxis(V)) = Area(f)"
},
{
    "assertion": "Between ( POINT: g, RightVertex ( CONICSECTION: n ), POINT: E ) equals BOOL: False",
    "id": 250,
    "declarations": "g: POINT; n: CONICSECTION; E: POINT; False: BOOL",
    "facts": "Between(g, RightVertex(n), E) = False"
},
{
    "assertion": "Radius ( CIRCLE: Z ) equals NUMBER: -96",
    "id": 251,
    "declarations": "Z: CIRCLE; -96: NUMBER",
    "facts": "Radius(Z) = -96"
},
{
    "assertion": "Radius ( CIRCLE: R ) equals Quadrant ( LeftVertex ( CONICSECTION: n ) )",
    "id": 252,
    "declarations": "R: CIRCLE; n: CONICSECTION",
    "facts": "Radius(R) = Quadrant(LeftVertex(n))"
},
{
    "assertion": "Directrix ( CONICSECTION: n ) equals LINE: k",
    "id": 253,
    "declarations": "n: CONICSECTION; k: LINE",
    "facts": "Directrix(n) = k"
},
{
    "assertion": "MidPoint ( LINESEGMENT: L ) equals LeftFocus ( CONICSECTION: n )",
    "id": 254,
    "declarations": "L: LINESEGMENT; n: CONICSECTION",
    "facts": "MidPoint(L) = LeftFocus(n)"
},
{
    "assertion": "Incenter ( TRIANGLE: j ) equals FootPoint ( LINE: b, LINE: b )",
    "id": 255,
    "declarations": "j: TRIANGLE; b: LINE; b: LINE",
    "facts": "Incenter(j) = FootPoint(b, b)"
},
{
    "assertion": "TangentOnPoint ( RightFocus ( CONICSECTION: E ), CURVE: V ) equals LINE: s",
    "id": 256,
    "declarations": "E: CONICSECTION; V: CURVE; s: LINE",
    "facts": "TangentOnPoint(RightFocus(E), V) = s"
},
{
    "assertion": "LowerFocus ( CONICSECTION: o ) equals POINT: O",
    "id": 257,
    "declarations": "o: CONICSECTION; O: POINT",
    "facts": "LowerFocus(o) = O"
},
{
    "assertion": "Slope ( LINE: D ) equals NUMBER: 43",
    "id": 258,
    "declarations": "D: LINE; 43: NUMBER",
    "facts": "Slope(D) = 43"
},
{
    "assertion": "Abs ( LINESEGMENT: F ) equals XCoordinate ( Center ( CONICSECTION: F ) )",
    "id": 259,
    "declarations": "F: LINESEGMENT; F: CONICSECTION",
    "facts": "Abs(F) = XCoordinate(Center(F))"
},
{
    "assertion": "RealAxis ( ELLIPSE: k ) equals LINESEGMENT: o",
    "id": 260,
    "declarations": "k: ELLIPSE; o: LINESEGMENT",
    "facts": "RealAxis(k) = o"
},
{
    "assertion": "Expression ( CURVE: h ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 261,
    "declarations": "h: CURVE; y*space=*spacesin(x): EXPRESSION",
    "facts": "Expression(h) = y*space=*spacesin(x)"
},
{
    "assertion": "YCoordinate ( Incenter ( TRIANGLE: f ) ) equals Eccentricity ( CONICSECTION: H )",
    "id": 263,
    "declarations": "f: TRIANGLE; H: CONICSECTION",
    "facts": "YCoordinate(Incenter(f)) = Eccentricity(H)"
},
{
    "assertion": "lg ( XCoordinate ( UpperFocus ( CONICSECTION: n ) ) ) equals InterReciprocal ( Quadrant ( RightFocus ( CONICSECTION: B ) ) )",
    "id": 264,
    "declarations": "n: CONICSECTION; B: CONICSECTION",
    "facts": "lg(XCoordinate(UpperFocus(n))) = InterReciprocal(Quadrant(RightFocus(B)))"
},
{
    "assertion": "Distance ( LeftFocus ( CONICSECTION: A ), POINT: u ) equals NUMBER: 63",
    "id": 265,
    "declarations": "A: CONICSECTION; u: POINT; 63: NUMBER",
    "facts": "Distance(LeftFocus(A), u) = 63"
},
{
    "assertion": "Center ( CONICSECTION: t ) equals RightVertex ( CONICSECTION: O )",
    "id": 266,
    "declarations": "t: CONICSECTION; O: CONICSECTION",
    "facts": "Center(t) = RightVertex(O)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: F ) equals CircumCircle ( TRIANGLE: k )",
    "id": 267,
    "declarations": "F: TRIANGLE; k: TRIANGLE",
    "facts": "CircumCircle(F) = CircumCircle(k)"
},
{
    "assertion": "TangentPoint ( LINE: u, CIRCLE: k ) equals LeftVertex ( CONICSECTION: N )",
    "id": 268,
    "declarations": "u: LINE; k: CIRCLE; N: CONICSECTION",
    "facts": "TangentPoint(u, k) = LeftVertex(N)"
},
{
    "assertion": "FootPoint ( OverlappingLine ( LINESEGMENT: U ), OverlappingLine ( LINESEGMENT: i ) ) equals LowerVertex ( CONICSECTION: m )",
    "id": 269,
    "declarations": "U: LINESEGMENT; i: LINESEGMENT; m: CONICSECTION",
    "facts": "FootPoint(OverlappingLine(U), OverlappingLine(i)) = LowerVertex(m)"
},
{
    "assertion": "IsTangent ( LINE: E, CONICSECTION: Y ) equals BOOL: False",
    "id": 270,
    "declarations": "E: LINE; Y: CONICSECTION; False: BOOL",
    "facts": "IsTangent(E, Y) = False"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: e ) ) equals HalfFocalLength ( CONICSECTION: y )",
    "id": 271,
    "declarations": "e: CONICSECTION; y: CONICSECTION",
    "facts": "Inclination(LeftDirectrix(e)) = HalfFocalLength(y)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: o ) equals CIRCLE: v",
    "id": 272,
    "declarations": "o: TRIANGLE; v: CIRCLE",
    "facts": "CircumCircle(o) = v"
},
{
    "assertion": "RealAxis ( ELLIPSE: l ) equals LINESEGMENT: J",
    "id": 273,
    "declarations": "l: ELLIPSE; J: LINESEGMENT",
    "facts": "RealAxis(l) = J"
},
{
    "assertion": "Area ( CONICSECTION: i ) equals NumIntersection ( Locus ( POINT: g ), CURVE: S )",
    "id": 274,
    "declarations": "i: CONICSECTION; g: POINT; S: CURVE",
    "facts": "Area(i) = NumIntersection(Locus(g), S)"
},
{
    "assertion": "FocalLength ( CONICSECTION: v ) equals Perimeter ( CONICSECTION: R )",
    "id": 275,
    "declarations": "v: CONICSECTION; R: CONICSECTION",
    "facts": "FocalLength(v) = Perimeter(R)"
},
{
    "assertion": "Coordinate ( POINT: i ) equals ( NUMBER: -5, NUMBER: 1 )",
    "id": 276,
    "declarations": "i: POINT; 1: NUMBER",
    "facts": "Coordinate(i) = 1"
},
{
    "assertion": "RightFocus ( CONICSECTION: C ) equals LowerVertex ( CONICSECTION: G )",
    "id": 277,
    "declarations": "C: CONICSECTION; G: CONICSECTION",
    "facts": "RightFocus(C) = LowerVertex(G)"
},
{
    "assertion": "RealAxis ( ELLIPSE: q ) equals LINESEGMENT: K",
    "id": 278,
    "declarations": "q: ELLIPSE; K: LINESEGMENT",
    "facts": "RealAxis(q) = K"
},
{
    "assertion": "RightPart ( HYPERBOLA: Q ) equals CURVE: p",
    "id": 279,
    "declarations": "Q: HYPERBOLA; p: CURVE",
    "facts": "RightPart(Q) = p"
},
{
    "assertion": "Directrix ( CONICSECTION: A ) equals RightDirectrix ( CONICSECTION: Y )",
    "id": 280,
    "declarations": "A: CONICSECTION; Y: CONICSECTION",
    "facts": "Directrix(A) = RightDirectrix(Y)"
},
{
    "assertion": "FocalLength ( CONICSECTION: e ) equals Area ( CONICSECTION: e )",
    "id": 281,
    "declarations": "e: CONICSECTION; e: CONICSECTION",
    "facts": "FocalLength(e) = Area(e)"
},
{
    "assertion": "NumIntersection ( CURVE: R, RightPart ( HYPERBOLA: P ) ) equals NUMBER: 17",
    "id": 282,
    "declarations": "R: CURVE; P: HYPERBOLA; 17: NUMBER",
    "facts": "NumIntersection(R, RightPart(P)) = 17"
},
{
    "assertion": "IsInTangent ( CircumCircle ( TRIANGLE: d ), CIRCLE: T ) equals BOOL: False",
    "id": 283,
    "declarations": "d: TRIANGLE; T: CIRCLE; False: BOOL",
    "facts": "IsInTangent(CircumCircle(d), T) = False"
},
{
    "assertion": "AngleOf ( RightFocus ( CONICSECTION: Z ), UpperFocus ( CONICSECTION: Y ), FootPoint ( LineOf ( POINT: P, Incenter ( TRIANGLE: N ) ), RightDirectrix ( CONICSECTION: Z ) ) ) equals ApplyUnit ( XCoordinate ( POINT: D ), DEGREESTR: degree )",
    "id": 284,
    "declarations": "Z: CONICSECTION; Y: CONICSECTION; P: POINT; N: TRIANGLE; Z: CONICSECTION; D: POINT; degree: DEGREESTR",
    "facts": "AngleOf(RightFocus(Z), UpperFocus(Y), FootPoint(LineOf(P, Incenter(N)), RightDirectrix(Z))) = ApplyUnit(XCoordinate(D), degree)"
},
{
    "assertion": "Focus ( CONICSECTION: N ) equals Center ( CONICSECTION: e )",
    "id": 285,
    "declarations": "N: CONICSECTION; e: CONICSECTION",
    "facts": "Focus(N) = Center(e)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: j ) equals Circumcenter ( TRIANGLE: F )",
    "id": 286,
    "declarations": "j: CONICSECTION; F: TRIANGLE",
    "facts": "LowerVertex(j) = Circumcenter(F)"
},
{
    "assertion": "Intersection ( CURVE: G, CURVE: l ) equals Orthocenter ( TRIANGLE: M )",
    "id": 287,
    "declarations": "G: CURVE; l: CURVE; M: TRIANGLE",
    "facts": "Intersection(G, l) = Orthocenter(M)"
},
{
    "assertion": "XCoordinate ( RightFocus ( CONICSECTION: I ) ) equals Eccentricity ( CONICSECTION: X )",
    "id": 288,
    "declarations": "I: CONICSECTION; X: CONICSECTION",
    "facts": "XCoordinate(RightFocus(I)) = Eccentricity(X)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: w ) equals Incenter ( TRIANGLE: Q )",
    "id": 289,
    "declarations": "w: CONICSECTION; Q: TRIANGLE",
    "facts": "LowerFocus(w) = Incenter(Q)"
},
{
    "assertion": "Length ( LineSegmentOf ( POINT: Y, Circumcenter ( TRIANGLE: L ) ) ) equals NUMBER: -34",
    "id": 290,
    "declarations": "Y: POINT; L: TRIANGLE; -34: NUMBER",
    "facts": "Length(LineSegmentOf(Y, Circumcenter(L))) = -34"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: L ) equals LINE: h",
    "id": 291,
    "declarations": "L: CONICSECTION; h: LINE",
    "facts": "RightDirectrix(L) = h"
},
{
    "assertion": "Max ( Diameter ( CIRCLE: e ) ) equals NUMBER: 99",
    "id": 292,
    "declarations": "e: CIRCLE; 99: NUMBER",
    "facts": "Max(Diameter(e)) = 99"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: x ) equals NUMBER: 38",
    "id": 293,
    "declarations": "x: CONICSECTION; 38: NUMBER",
    "facts": "HalfFocalLength(x) = 38"
},
{
    "assertion": "LowerVertex ( CONICSECTION: I ) equals POINT: Z",
    "id": 294,
    "declarations": "I: CONICSECTION; Z: POINT",
    "facts": "LowerVertex(I) = Z"
},
{
    "assertion": "InterReciprocal ( Quadrant ( RightVertex ( CONICSECTION: X ) ) ) equals Area ( CONICSECTION: w )",
    "id": 295,
    "declarations": "X: CONICSECTION; w: CONICSECTION",
    "facts": "InterReciprocal(Quadrant(RightVertex(X))) = Area(w)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: V ) equals LowerVertex ( CONICSECTION: c )",
    "id": 296,
    "declarations": "V: LINESEGMENT; c: CONICSECTION",
    "facts": "MidPoint(V) = LowerVertex(c)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: t, CIRCLE: W ) equals BOOL: False",
    "id": 297,
    "declarations": "t: LINESEGMENT; W: CIRCLE; False: BOOL",
    "facts": "IsDiameter(t, W) = False"
},
{
    "assertion": "Intersection ( CURVE: X, CURVE: a ) equals Center ( CONICSECTION: F )",
    "id": 298,
    "declarations": "X: CURVE; a: CURVE; F: CONICSECTION",
    "facts": "Intersection(X, a) = Center(F)"
},
{
    "assertion": "InterceptChord ( LineOf ( POINT: q, POINT: p ), CONICSECTION: I ) equals LINESEGMENT: r",
    "id": 299,
    "declarations": "q: POINT; p: POINT; I: CONICSECTION; r: LINESEGMENT",
    "facts": "InterceptChord(LineOf(q, p), I) = r"
},
{
    "assertion": "FocalLength ( CONICSECTION: s ) equals Diameter ( CIRCLE: Q )",
    "id": 300,
    "declarations": "s: CONICSECTION; Q: CIRCLE",
    "facts": "FocalLength(s) = Diameter(Q)"
},
{
    "assertion": "YCoordinate ( POINT: m ) equals Length ( ImaginaryAxis ( ELLIPSE: T ) )",
    "id": 301,
    "declarations": "m: POINT; T: ELLIPSE",
    "facts": "YCoordinate(m) = Length(ImaginaryAxis(T))"
},
{
    "assertion": "InterceptChord ( LINE: d, CONICSECTION: c ) equals LINESEGMENT: T",
    "id": 302,
    "declarations": "d: LINE; c: CONICSECTION; T: LINESEGMENT",
    "facts": "InterceptChord(d, c) = T"
},
{
    "assertion": "Quadrant ( MidPoint ( LINESEGMENT: z ) ) equals NUMBER: -83",
    "id": 303,
    "declarations": "z: LINESEGMENT; -83: NUMBER",
    "facts": "Quadrant(MidPoint(z)) = -83"
},
{
    "assertion": "Vertex ( CONICSECTION: q ) equals UpperVertex ( CONICSECTION: r )",
    "id": 305,
    "declarations": "q: CONICSECTION; r: CONICSECTION",
    "facts": "Vertex(q) = UpperVertex(r)"
},
{
    "assertion": "Inclination ( TangentOnPoint ( Incenter ( TRIANGLE: n ), CURVE: g ) ) equals Quadrant ( POINT: r )",
    "id": 306,
    "declarations": "n: TRIANGLE; g: CURVE; r: POINT",
    "facts": "Inclination(TangentOnPoint(Incenter(n), g)) = Quadrant(r)"
},
{
    "assertion": "NumIntersection ( CURVE: u, CURVE: T ) equals Radius ( CIRCLE: Q )",
    "id": 307,
    "declarations": "u: CURVE; T: CURVE; Q: CIRCLE",
    "facts": "NumIntersection(u, T) = Radius(Q)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: I, CIRCLE: V ) equals BOOL: False",
    "id": 308,
    "declarations": "I: CIRCLE; V: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(I, V) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: y ) equals POINT: e",
    "id": 309,
    "declarations": "y: CONICSECTION; e: POINT",
    "facts": "RightVertex(y) = e"
},
{
    "assertion": "Min ( NumIntersection ( CURVE: h, Locus ( LeftVertex ( CONICSECTION: Q ) ) ) ) equals NUMBER: -10",
    "id": 310,
    "declarations": "h: CURVE; Q: CONICSECTION; -10: NUMBER",
    "facts": "Min(NumIntersection(h, Locus(LeftVertex(Q)))) = -10"
},
{
    "assertion": "Perimeter ( CONICSECTION: K ) equals Inclination ( LINE: H )",
    "id": 311,
    "declarations": "K: CONICSECTION; H: LINE",
    "facts": "Perimeter(K) = Inclination(H)"
},
{
    "assertion": "Radius ( CIRCLE: v ) equals YCoordinate ( POINT: f )",
    "id": 312,
    "declarations": "v: CIRCLE; f: POINT",
    "facts": "Radius(v) = YCoordinate(f)"
},
{
    "assertion": "LineSegmentOf ( POINT: P, POINT: m ) equals ImaginaryAxis ( ELLIPSE: D )",
    "id": 313,
    "declarations": "P: POINT; m: POINT; D: ELLIPSE",
    "facts": "LineSegmentOf(P, m) = ImaginaryAxis(D)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: O ) equals LINESEGMENT: L",
    "id": 314,
    "declarations": "O: ELLIPSE; L: LINESEGMENT",
    "facts": "ImaginaryAxis(O) = L"
},
{
    "assertion": "Asymptote ( HYPERBOLA: Q ) equals LINE: m",
    "id": 315,
    "declarations": "Q: HYPERBOLA; m: LINE",
    "facts": "Asymptote(Q) = m"
},
{
    "assertion": "RightFocus ( CONICSECTION: W ) equals FootPoint ( LINE: j, PerpendicularBisector ( LINESEGMENT: T ) )",
    "id": 316,
    "declarations": "W: CONICSECTION; j: LINE; T: LINESEGMENT",
    "facts": "RightFocus(W) = FootPoint(j, PerpendicularBisector(T))"
},
{
    "assertion": "Projection ( POINT: w, LineOf ( POINT: Z, LeftVertex ( CONICSECTION: Y ) ) ) equals LowerVertex ( CONICSECTION: W )",
    "id": 317,
    "declarations": "w: POINT; Z: POINT; Y: CONICSECTION; W: CONICSECTION",
    "facts": "Projection(w, LineOf(Z, LeftVertex(Y))) = LowerVertex(W)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Z ) equals LeftVertex ( CONICSECTION: H )",
    "id": 318,
    "declarations": "Z: CONICSECTION; H: CONICSECTION",
    "facts": "LeftFocus(Z) = LeftVertex(H)"
},
{
    "assertion": "Max ( XCoordinate ( POINT: E ) ) equals NUMBER: 82",
    "id": 319,
    "declarations": "E: POINT; 82: NUMBER",
    "facts": "Max(XCoordinate(E)) = 82"
},
{
    "assertion": "Vertex ( CONICSECTION: c ) equals MidPoint ( ImaginaryAxis ( ELLIPSE: i ) )",
    "id": 320,
    "declarations": "c: CONICSECTION; i: ELLIPSE",
    "facts": "Vertex(c) = MidPoint(ImaginaryAxis(i))"
},
{
    "assertion": "LineOf ( POINT: p, Center ( CONICSECTION: L ) ) equals LINE: g",
    "id": 321,
    "declarations": "p: POINT; L: CONICSECTION; g: LINE",
    "facts": "LineOf(p, Center(L)) = g"
},
{
    "assertion": "Asymptote ( HYPERBOLA: O ) equals RightDirectrix ( CONICSECTION: N )",
    "id": 322,
    "declarations": "O: HYPERBOLA; N: CONICSECTION",
    "facts": "Asymptote(O) = RightDirectrix(N)"
},
{
    "assertion": "lg ( NUMBER: 52 ) equals NUMBER: 14",
    "id": 323,
    "declarations": "52: NUMBER; 14: NUMBER",
    "facts": "lg(52) = 14"
},
{
    "assertion": "Quadrant ( POINT: q ) equals Abs ( LINESEGMENT: e )",
    "id": 324,
    "declarations": "q: POINT; e: LINESEGMENT",
    "facts": "Quadrant(q) = Abs(e)"
},
{
    "assertion": "lg ( NUMBER: -97 ) equals Eccentricity ( CONICSECTION: s )",
    "id": 325,
    "declarations": "-97: NUMBER; s: CONICSECTION",
    "facts": "lg(-97) = Eccentricity(s)"
},
{
    "assertion": "FootPoint ( LINE: p, TangentOnPoint ( POINT: s, CURVE: o ) ) equals UpperVertex ( CONICSECTION: D )",
    "id": 326,
    "declarations": "p: LINE; s: POINT; o: CURVE; D: CONICSECTION",
    "facts": "FootPoint(p, TangentOnPoint(s, o)) = UpperVertex(D)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: x ) equals NUMBER: -87",
    "id": 327,
    "declarations": "x: CONICSECTION; -87: NUMBER",
    "facts": "Eccentricity(x) = -87"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: H ) equals ImaginaryAxis ( ELLIPSE: r )",
    "id": 328,
    "declarations": "H: ELLIPSE; r: ELLIPSE",
    "facts": "ImaginaryAxis(H) = ImaginaryAxis(r)"
},
{
    "assertion": "Perimeter ( CONICSECTION: a ) equals Diameter ( CIRCLE: D )",
    "id": 329,
    "declarations": "a: CONICSECTION; D: CIRCLE",
    "facts": "Perimeter(a) = Diameter(D)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: j ) equals POINT: Q",
    "id": 330,
    "declarations": "j: CONICSECTION; Q: POINT",
    "facts": "LowerVertex(j) = Q"
},
{
    "assertion": "Max ( Inclination ( LINE: p ) ) equals NUMBER: -52",
    "id": 331,
    "declarations": "p: LINE; -52: NUMBER",
    "facts": "Max(Inclination(p)) = -52"
},
{
    "assertion": "Radius ( CIRCLE: X ) equals Slope ( RightDirectrix ( CONICSECTION: l ) )",
    "id": 332,
    "declarations": "X: CIRCLE; l: CONICSECTION",
    "facts": "Radius(X) = Slope(RightDirectrix(l))"
},
{
    "assertion": "RightPart ( HYPERBOLA: S ) equals CURVE: n",
    "id": 333,
    "declarations": "S: HYPERBOLA; n: CURVE",
    "facts": "RightPart(S) = n"
},
{
    "assertion": "FocalLength ( CONICSECTION: U ) equals HalfFocalLength ( CONICSECTION: W )",
    "id": 334,
    "declarations": "U: CONICSECTION; W: CONICSECTION",
    "facts": "FocalLength(U) = HalfFocalLength(W)"
},
{
    "assertion": "Max ( NUMBER: 60 ) equals NUMBER: -18",
    "id": 335,
    "declarations": "60: NUMBER; -18: NUMBER",
    "facts": "Max(60) = -18"
},
{
    "assertion": "RightPart ( HYPERBOLA: Q ) equals CURVE: j",
    "id": 336,
    "declarations": "Q: HYPERBOLA; j: CURVE",
    "facts": "RightPart(Q) = j"
},
{
    "assertion": "TangentOfPoint ( POINT: n, RightPart ( HYPERBOLA: t ) ) equals TangentOfPoint ( POINT: B, RightPart ( HYPERBOLA: l ) )",
    "id": 337,
    "declarations": "n: POINT; t: HYPERBOLA; B: POINT; l: HYPERBOLA",
    "facts": "TangentOfPoint(n, RightPart(t)) = TangentOfPoint(B, RightPart(l))"
},
{
    "assertion": "sqrt ( HalfFocalLength ( CONICSECTION: O ) ) equals XCoordinate ( Incenter ( TRIANGLE: k ) )",
    "id": 338,
    "declarations": "O: CONICSECTION; k: TRIANGLE",
    "facts": "sqrt(HalfFocalLength(O)) = XCoordinate(Incenter(k))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: H ) equals RightVertex ( CONICSECTION: A )",
    "id": 339,
    "declarations": "H: CONICSECTION; A: CONICSECTION",
    "facts": "LeftVertex(H) = RightVertex(A)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: d ) equals LINESEGMENT: n",
    "id": 340,
    "declarations": "d: ELLIPSE; n: LINESEGMENT",
    "facts": "MinorAxis(d) = n"
},
{
    "assertion": "Expression ( Locus ( POINT: e ) ) equals LocusEquation ( POINT: f )",
    "id": 341,
    "declarations": "e: POINT; f: POINT",
    "facts": "Expression(Locus(e)) = LocusEquation(f)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: l ) equals Projection ( LowerFocus ( CONICSECTION: z ), LINE: t )",
    "id": 342,
    "declarations": "l: LINESEGMENT; z: CONICSECTION; t: LINE",
    "facts": "MidPoint(l) = Projection(LowerFocus(z), t)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: K ) equals Diameter ( CIRCLE: p )",
    "id": 343,
    "declarations": "K: CONICSECTION; p: CIRCLE",
    "facts": "Eccentricity(K) = Diameter(p)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: e, CIRCLE: k ) equals BOOL: False",
    "id": 344,
    "declarations": "e: CIRCLE; k: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(e, k) = False"
},
{
    "assertion": "IsParallel ( TangentOfPoint ( POINT: U, Locus ( FootPoint ( LINE: L, LINE: M ) ) ), RightDirectrix ( CONICSECTION: P ) ) equals BOOL: True",
    "id": 345,
    "declarations": "U: POINT; L: LINE; M: LINE; P: CONICSECTION; True: BOOL",
    "facts": "IsParallel(TangentOfPoint(U, Locus(FootPoint(L, M))), RightDirectrix(P)) = True"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: j, TRIANGLE: A ) equals BOOL: True",
    "id": 346,
    "declarations": "j: CIRCLE; A: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(j, A) = True"
},
{
    "assertion": "Diameter ( CIRCLE: v ) equals NUMBER: 70",
    "id": 347,
    "declarations": "v: CIRCLE; 70: NUMBER",
    "facts": "Diameter(v) = 70"
},
{
    "assertion": "LineOf ( UpperFocus ( CONICSECTION: L ), POINT: i ) equals OverlappingLine ( LINESEGMENT: q )",
    "id": 348,
    "declarations": "L: CONICSECTION; i: POINT; q: LINESEGMENT",
    "facts": "LineOf(UpperFocus(L), i) = OverlappingLine(q)"
},
{
    "assertion": "sqrt ( Slope ( LINE: j ) ) equals NUMBER: 17",
    "id": 349,
    "declarations": "j: LINE; 17: NUMBER",
    "facts": "sqrt(Slope(j)) = 17"
},
{
    "assertion": "Between ( Orthocenter ( TRIANGLE: S ), POINT: Y, POINT: l ) equals BOOL: False",
    "id": 350,
    "declarations": "S: TRIANGLE; Y: POINT; l: POINT; False: BOOL",
    "facts": "Between(Orthocenter(S), Y, l) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: m ) equals LeftVertex ( CONICSECTION: g )",
    "id": 351,
    "declarations": "m: CONICSECTION; g: CONICSECTION",
    "facts": "RightFocus(m) = LeftVertex(g)"
},
{
    "assertion": "Intersection ( CURVE: T, CURVE: O ) equals POINT: Z",
    "id": 352,
    "declarations": "T: CURVE; O: CURVE; Z: POINT",
    "facts": "Intersection(T, O) = Z"
},
{
    "assertion": "lg ( NUMBER: 14 ) equals Slope ( LINE: u )",
    "id": 353,
    "declarations": "14: NUMBER; u: LINE",
    "facts": "lg(14) = Slope(u)"
},
{
    "assertion": "FocalLength ( CONICSECTION: G ) equals NUMBER: 97",
    "id": 354,
    "declarations": "G: CONICSECTION; 97: NUMBER",
    "facts": "FocalLength(G) = 97"
},
{
    "assertion": "Min ( Area ( CONICSECTION: M ) ) equals Eccentricity ( CONICSECTION: y )",
    "id": 355,
    "declarations": "M: CONICSECTION; y: CONICSECTION",
    "facts": "Min(Area(M)) = Eccentricity(y)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: n ) equals LINE: a",
    "id": 356,
    "declarations": "n: CONICSECTION; a: LINE",
    "facts": "LeftDirectrix(n) = a"
},
{
    "assertion": "Endpoint ( LINESEGMENT: Y ) equals LowerVertex ( CONICSECTION: y )",
    "id": 357,
    "declarations": "Y: LINESEGMENT; y: CONICSECTION",
    "facts": "Endpoint(Y) = LowerVertex(y)"
},
{
    "assertion": "DotProduct ( VECTOR: A, VECTOR: P ) equals sqrt ( Inclination ( LeftDirectrix ( CONICSECTION: e ) ) )",
    "id": 358,
    "declarations": "A: VECTOR; P: VECTOR; e: CONICSECTION",
    "facts": "DotProduct(A, P) = sqrt(Inclination(LeftDirectrix(e)))"
},
{
    "assertion": "InterceptChord ( LINE: x, CONICSECTION: S ) equals LINESEGMENT: F",
    "id": 359,
    "declarations": "x: LINE; S: CONICSECTION; F: LINESEGMENT",
    "facts": "InterceptChord(x, S) = F"
},
{
    "assertion": "MinorAxis ( ELLIPSE: W ) equals LINESEGMENT: H",
    "id": 360,
    "declarations": "W: ELLIPSE; H: LINESEGMENT",
    "facts": "MinorAxis(W) = H"
},
{
    "assertion": "And ( Expression ( CURVE: R ) equals EXPRESSION: x^2/4*space+*spacey^2/16*space=*space1, Focus ( CONICSECTION: x ) equals POINT: N ) equals BOOL: False",
    "id": 361,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightPart ( HYPERBOLA: R ) equals CURVE: j",
    "id": 362,
    "declarations": "R: HYPERBOLA; j: CURVE",
    "facts": "RightPart(R) = j"
},
{
    "assertion": "RightFocus ( CONICSECTION: A ) equals RightFocus ( CONICSECTION: g )",
    "id": 363,
    "declarations": "A: CONICSECTION; g: CONICSECTION",
    "facts": "RightFocus(A) = RightFocus(g)"
},
{
    "assertion": "TangentPoint ( LINE: u, CIRCLE: k ) equals MidPoint ( MajorAxis ( ELLIPSE: q ) )",
    "id": 364,
    "declarations": "u: LINE; k: CIRCLE; q: ELLIPSE",
    "facts": "TangentPoint(u, k) = MidPoint(MajorAxis(q))"
},
{
    "assertion": "RightFocus ( CONICSECTION: g ) equals POINT: A",
    "id": 366,
    "declarations": "g: CONICSECTION; A: POINT",
    "facts": "RightFocus(g) = A"
},
{
    "assertion": "IsIntersect ( CURVE: R, CURVE: i ) equals BOOL: True",
    "id": 367,
    "declarations": "R: CURVE; i: CURVE; True: BOOL",
    "facts": "IsIntersect(R, i) = True"
},
{
    "assertion": "TriangleOf ( LowerVertex ( CONICSECTION: j ), POINT: V, LeftFocus ( CONICSECTION: n ) ) equals TRIANGLE: L",
    "id": 368,
    "declarations": "j: CONICSECTION; V: POINT; n: CONICSECTION; L: TRIANGLE",
    "facts": "TriangleOf(LowerVertex(j), V, LeftFocus(n)) = L"
},
{
    "assertion": "Asymptote ( HYPERBOLA: L ) equals LINE: L",
    "id": 369,
    "declarations": "L: HYPERBOLA; L: LINE",
    "facts": "Asymptote(L) = L"
},
{
    "assertion": "LocusEquation ( POINT: q ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 370,
    "declarations": "q: POINT; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "LocusEquation(q) = x*space+*spacey*space=*space5"
},
{
    "assertion": "MinorAxis ( ELLIPSE: W ) equals LINESEGMENT: l",
    "id": 371,
    "declarations": "W: ELLIPSE; l: LINESEGMENT",
    "facts": "MinorAxis(W) = l"
},
{
    "assertion": "lg ( NUMBER: -45 ) equals Area ( CONICSECTION: W )",
    "id": 372,
    "declarations": "-45: NUMBER; W: CONICSECTION",
    "facts": "lg(-45) = Area(W)"
},
{
    "assertion": "TangentOnPoint ( LowerFocus ( CONICSECTION: a ), CURVE: B ) equals LeftDirectrix ( CONICSECTION: M )",
    "id": 373,
    "declarations": "a: CONICSECTION; B: CURVE; M: CONICSECTION",
    "facts": "TangentOnPoint(LowerFocus(a), B) = LeftDirectrix(M)"
},
{
    "assertion": "Max ( Diameter ( CIRCLE: Q ) ) equals Slope ( LINE: N )",
    "id": 374,
    "declarations": "Q: CIRCLE; N: LINE",
    "facts": "Max(Diameter(Q)) = Slope(N)"
},
{
    "assertion": "TangentOnPoint ( POINT: i, CURVE: e ) equals LINE: t",
    "id": 375,
    "declarations": "i: POINT; e: CURVE; t: LINE",
    "facts": "TangentOnPoint(i, e) = t"
},
{
    "assertion": "MidPoint ( ImaginaryAxis ( ELLIPSE: e ) ) equals POINT: c",
    "id": 376,
    "declarations": "e: ELLIPSE; c: POINT",
    "facts": "MidPoint(ImaginaryAxis(e)) = c"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: s, CIRCLE: a ) equals BOOL: False",
    "id": 377,
    "declarations": "s: LINESEGMENT; a: CIRCLE; False: BOOL",
    "facts": "IsDiameter(s, a) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: P ) equals POINT: M",
    "id": 378,
    "declarations": "P: CONICSECTION; M: POINT",
    "facts": "RightFocus(P) = M"
},
{
    "assertion": "Incenter ( TRIANGLE: H ) equals POINT: D",
    "id": 379,
    "declarations": "H: TRIANGLE; D: POINT",
    "facts": "Incenter(H) = D"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: b, CONICSECTION: H ) equals BOOL: True",
    "id": 380,
    "declarations": "b: LINESEGMENT; H: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(b, H) = True"
},
{
    "assertion": "RightVertex ( CONICSECTION: A ) equals LeftVertex ( CONICSECTION: F )",
    "id": 381,
    "declarations": "A: CONICSECTION; F: CONICSECTION",
    "facts": "RightVertex(A) = LeftVertex(F)"
},
{
    "assertion": "Slope ( LeftDirectrix ( CONICSECTION: P ) ) equals FocalLength ( CONICSECTION: m )",
    "id": 382,
    "declarations": "P: CONICSECTION; m: CONICSECTION",
    "facts": "Slope(LeftDirectrix(P)) = FocalLength(m)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: L ) equals POINT: k",
    "id": 383,
    "declarations": "L: TRIANGLE; k: POINT",
    "facts": "Orthocenter(L) = k"
},
{
    "assertion": "RightFocus ( CONICSECTION: b ) equals FootPoint ( RightDirectrix ( CONICSECTION: W ), LINE: c )",
    "id": 384,
    "declarations": "b: CONICSECTION; W: CONICSECTION; c: LINE",
    "facts": "RightFocus(b) = FootPoint(RightDirectrix(W), c)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: V ) equals UpperFocus ( CONICSECTION: Y )",
    "id": 385,
    "declarations": "V: TRIANGLE; Y: CONICSECTION",
    "facts": "Orthocenter(V) = UpperFocus(Y)"
},
{
    "assertion": "Diameter ( CIRCLE: r ) equals HalfFocalLength ( CONICSECTION: f )",
    "id": 386,
    "declarations": "r: CIRCLE; f: CONICSECTION",
    "facts": "Diameter(r) = HalfFocalLength(f)"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: X ) ) equals LINE: X",
    "id": 387,
    "declarations": "X: ELLIPSE; X: LINE",
    "facts": "OverlappingLine(MajorAxis(X)) = X"
},
{
    "assertion": "UpperFocus ( CONICSECTION: A ) equals LeftFocus ( CONICSECTION: w )",
    "id": 388,
    "declarations": "A: CONICSECTION; w: CONICSECTION",
    "facts": "UpperFocus(A) = LeftFocus(w)"
},
{
    "assertion": "FocalLength ( CONICSECTION: M ) equals NUMBER: 48",
    "id": 389,
    "declarations": "M: CONICSECTION; 48: NUMBER",
    "facts": "FocalLength(M) = 48"
},
{
    "assertion": "LeftFocus ( CONICSECTION: C ) equals POINT: R",
    "id": 390,
    "declarations": "C: CONICSECTION; R: POINT",
    "facts": "LeftFocus(C) = R"
},
{
    "assertion": "Directrix ( CONICSECTION: X ) equals LINE: a",
    "id": 391,
    "declarations": "X: CONICSECTION; a: LINE",
    "facts": "Directrix(X) = a"
},
{
    "assertion": "TangentOfPoint ( LeftFocus ( CONICSECTION: O ), RightPart ( HYPERBOLA: k ) ) equals LINE: h",
    "id": 392,
    "declarations": "O: CONICSECTION; k: HYPERBOLA; h: LINE",
    "facts": "TangentOfPoint(LeftFocus(O), RightPart(k)) = h"
},
{
    "assertion": "TangentOfPoint ( UpperVertex ( CONICSECTION: v ), LeftPart ( HYPERBOLA: I ) ) equals LINE: r",
    "id": 393,
    "declarations": "v: CONICSECTION; I: HYPERBOLA; r: LINE",
    "facts": "TangentOfPoint(UpperVertex(v), LeftPart(I)) = r"
},
{
    "assertion": "NumIntersection ( CURVE: N, CURVE: a ) equals NUMBER: 78",
    "id": 394,
    "declarations": "N: CURVE; a: CURVE; 78: NUMBER",
    "facts": "NumIntersection(N, a) = 78"
},
{
    "assertion": "Radius ( CIRCLE: k ) equals NUMBER: -77",
    "id": 395,
    "declarations": "k: CIRCLE; -77: NUMBER",
    "facts": "Radius(k) = -77"
},
{
    "assertion": "FootPoint ( LINE: i, LeftDirectrix ( CONICSECTION: p ) ) equals Orthocenter ( TRIANGLE: H )",
    "id": 396,
    "declarations": "i: LINE; p: CONICSECTION; H: TRIANGLE",
    "facts": "FootPoint(i, LeftDirectrix(p)) = Orthocenter(H)"
},
{
    "assertion": "IsParallel ( LINE: b, LINE: d ) equals BOOL: True",
    "id": 397,
    "declarations": "b: LINE; d: LINE; True: BOOL",
    "facts": "IsParallel(b, d) = True"
},
{
    "assertion": "UpperFocus ( CONICSECTION: S ) equals UpperVertex ( CONICSECTION: U )",
    "id": 398,
    "declarations": "S: CONICSECTION; U: CONICSECTION",
    "facts": "UpperFocus(S) = UpperVertex(U)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 42, DEGREESTR: degree )",
    "id": 399,
    "declarations": "42: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(42, degree) = None"
},
{
    "assertion": "LeftVertex ( CONICSECTION: K ) equals POINT: o",
    "id": 400,
    "declarations": "K: CONICSECTION; o: POINT",
    "facts": "LeftVertex(K) = o"
},
{
    "assertion": "MinorAxis ( ELLIPSE: p ) equals RealAxis ( ELLIPSE: Y )",
    "id": 401,
    "declarations": "p: ELLIPSE; Y: ELLIPSE",
    "facts": "MinorAxis(p) = RealAxis(Y)"
},
{
    "assertion": "VectorOf ( RightFocus ( CONICSECTION: b ), POINT: R ) equals VECTOR: U",
    "id": 402,
    "declarations": "b: CONICSECTION; R: POINT; U: VECTOR",
    "facts": "VectorOf(RightFocus(b), R) = U"
},
{
    "assertion": "Min ( DotProduct ( VECTOR: W, VECTOR: B ) ) equals NUMBER: -25",
    "id": 403,
    "declarations": "W: VECTOR; B: VECTOR; -25: NUMBER",
    "facts": "Min(DotProduct(W, B)) = -25"
},
{
    "assertion": "UpperVertex ( CONICSECTION: W ) equals POINT: C",
    "id": 404,
    "declarations": "W: CONICSECTION; C: POINT",
    "facts": "UpperVertex(W) = C"
},
{
    "assertion": "UpperVertex ( CONICSECTION: G ) equals Orthocenter ( TRIANGLE: w )",
    "id": 405,
    "declarations": "G: CONICSECTION; w: TRIANGLE",
    "facts": "UpperVertex(G) = Orthocenter(w)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: z ) equals POINT: t",
    "id": 406,
    "declarations": "z: CONICSECTION; t: POINT",
    "facts": "LeftVertex(z) = t"
},
{
    "assertion": "LowerFocus ( CONICSECTION: X ) equals POINT: J",
    "id": 407,
    "declarations": "X: CONICSECTION; J: POINT",
    "facts": "LowerFocus(X) = J"
},
{
    "assertion": "InterReciprocal ( DotProduct ( VECTOR: i, VECTOR: e ) ) equals NUMBER: -10",
    "id": 408,
    "declarations": "i: VECTOR; e: VECTOR; -10: NUMBER",
    "facts": "InterReciprocal(DotProduct(i, e)) = -10"
},
{
    "assertion": "RightVertex ( CONICSECTION: G ) equals POINT: P",
    "id": 409,
    "declarations": "G: CONICSECTION; P: POINT",
    "facts": "RightVertex(G) = P"
},
{
    "assertion": "sqrt ( NUMBER: -79 ) equals NUMBER: -11",
    "id": 410,
    "declarations": "-79: NUMBER; -11: NUMBER",
    "facts": "sqrt(-79) = -11"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: P ) ) equals LineOf ( Projection ( LeftFocus ( CONICSECTION: A ), PerpendicularBisector ( LINESEGMENT: E ) ), POINT: t )",
    "id": 411,
    "declarations": "P: ELLIPSE; A: CONICSECTION; E: LINESEGMENT; t: POINT",
    "facts": "PerpendicularBisector(ImaginaryAxis(P)) = LineOf(Projection(LeftFocus(A), PerpendicularBisector(E)), t)"
},
{
    "assertion": "And ( IsOutTangent ( CIRCLE: H, CIRCLE: m ) equals BOOL: False, InterReciprocal ( Intercept ( LeftDirectrix ( CONICSECTION: D ), AXIS: yAxis ) ) equals NUMBER: -94 ) equals BOOL: True",
    "id": 412,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Between ( POINT: H, POINT: a, POINT: I ) equals BOOL: True",
    "id": 413,
    "declarations": "H: POINT; a: POINT; I: POINT; True: BOOL",
    "facts": "Between(H, a, I) = True"
},
{
    "assertion": "UpperVertex ( CONICSECTION: e ) equals POINT: s",
    "id": 414,
    "declarations": "e: CONICSECTION; s: POINT",
    "facts": "UpperVertex(e) = s"
},
{
    "assertion": "PointOnCurve ( Circumcenter ( TRIANGLE: P ), CURVE: Z ) equals BOOL: True",
    "id": 415,
    "declarations": "P: TRIANGLE; Z: CURVE; True: BOOL",
    "facts": "PointOnCurve(Circumcenter(P), Z) = True"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: B ) equals RightDirectrix ( CONICSECTION: Q )",
    "id": 416,
    "declarations": "B: LINESEGMENT; Q: CONICSECTION",
    "facts": "OverlappingLine(B) = RightDirectrix(Q)"
},
{
    "assertion": "IsParallel ( LINE: q, LINE: q ) equals BOOL: True",
    "id": 417,
    "declarations": "q: LINE; q: LINE; True: BOOL",
    "facts": "IsParallel(q, q) = True"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: N, TRIANGLE: h ) equals BOOL: False",
    "id": 418,
    "declarations": "N: CIRCLE; h: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(N, h) = False"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: w, CONICSECTION: J ) equals BOOL: True",
    "id": 419,
    "declarations": "w: LINESEGMENT; J: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(w, J) = True"
},
{
    "assertion": "InterReciprocal ( Length ( MinorAxis ( ELLIPSE: Q ) ) ) equals XCoordinate ( UpperFocus ( CONICSECTION: J ) )",
    "id": 420,
    "declarations": "Q: ELLIPSE; J: CONICSECTION",
    "facts": "InterReciprocal(Length(MinorAxis(Q))) = XCoordinate(UpperFocus(J))"
},
{
    "assertion": "InterceptChord ( OverlappingLine ( LINESEGMENT: e ), CONICSECTION: U ) equals LINESEGMENT: f",
    "id": 421,
    "declarations": "e: LINESEGMENT; U: CONICSECTION; f: LINESEGMENT",
    "facts": "InterceptChord(OverlappingLine(e), U) = f"
},
{
    "assertion": "DotProduct ( VECTOR: u, VECTOR: p ) equals NUMBER: -3",
    "id": 422,
    "declarations": "u: VECTOR; p: VECTOR; -3: NUMBER",
    "facts": "DotProduct(u, p) = -3"
},
{
    "assertion": "sqrt ( Radius ( CIRCLE: P ) ) equals FocalLength ( CONICSECTION: B )",
    "id": 423,
    "declarations": "P: CIRCLE; B: CONICSECTION",
    "facts": "sqrt(Radius(P)) = FocalLength(B)"
},
{
    "assertion": "Max ( HalfFocalLength ( CONICSECTION: o ) ) equals Perimeter ( CONICSECTION: d )",
    "id": 424,
    "declarations": "o: CONICSECTION; d: CONICSECTION",
    "facts": "Max(HalfFocalLength(o)) = Perimeter(d)"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: B ) ) equals Incenter ( TRIANGLE: W )",
    "id": 425,
    "declarations": "B: ELLIPSE; W: TRIANGLE",
    "facts": "Endpoint(MajorAxis(B)) = Incenter(W)"
},
{
    "assertion": "FootPoint ( LINE: L, PerpendicularBisector ( MajorAxis ( ELLIPSE: E ) ) ) equals Circumcenter ( TRIANGLE: B )",
    "id": 426,
    "declarations": "L: LINE; E: ELLIPSE; B: TRIANGLE",
    "facts": "FootPoint(L, PerpendicularBisector(MajorAxis(E))) = Circumcenter(B)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: A ) equals OverlappingLine ( LINESEGMENT: X )",
    "id": 427,
    "declarations": "A: CONICSECTION; X: LINESEGMENT",
    "facts": "RightDirectrix(A) = OverlappingLine(X)"
},
{
    "assertion": "InterReciprocal ( NUMBER: 8 ) equals Intercept ( OverlappingLine ( RealAxis ( ELLIPSE: U ) ), AXIS: yAxis )",
    "id": 428,
    "declarations": "8: NUMBER; U: ELLIPSE; yAxis: AXIS",
    "facts": "InterReciprocal(8) = Intercept(OverlappingLine(RealAxis(U)), yAxis)"
},
{
    "assertion": "Expression ( CURVE: k ) equals EXPRESSION: x^2*space-*spacey^2*space=*space1",
    "id": 429,
    "declarations": "k: CURVE; x^2*space-*spacey^2*space=*space1: EXPRESSION",
    "facts": "Expression(k) = x^2*space-*spacey^2*space=*space1"
},
{
    "assertion": "LeftPart ( HYPERBOLA: p ) equals CURVE: a",
    "id": 430,
    "declarations": "p: HYPERBOLA; a: CURVE",
    "facts": "LeftPart(p) = a"
},
{
    "assertion": "LeftFocus ( CONICSECTION: m ) equals LowerFocus ( CONICSECTION: W )",
    "id": 431,
    "declarations": "m: CONICSECTION; W: CONICSECTION",
    "facts": "LeftFocus(m) = LowerFocus(W)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: C ) equals Projection ( LeftVertex ( CONICSECTION: o ), LINE: S )",
    "id": 432,
    "declarations": "C: CONICSECTION; o: CONICSECTION; S: LINE",
    "facts": "UpperVertex(C) = Projection(LeftVertex(o), S)"
},
{
    "assertion": "Slope ( LeftDirectrix ( CONICSECTION: E ) ) equals NUMBER: 61",
    "id": 433,
    "declarations": "E: CONICSECTION; 61: NUMBER",
    "facts": "Slope(LeftDirectrix(E)) = 61"
},
{
    "assertion": "LeftPart ( HYPERBOLA: w ) equals CURVE: B",
    "id": 434,
    "declarations": "w: HYPERBOLA; B: CURVE",
    "facts": "LeftPart(w) = B"
},
{
    "assertion": "LowerFocus ( CONICSECTION: z ) equals UpperVertex ( CONICSECTION: z )",
    "id": 435,
    "declarations": "z: CONICSECTION; z: CONICSECTION",
    "facts": "LowerFocus(z) = UpperVertex(z)"
},
{
    "assertion": "InterceptChord ( LINE: M, CONICSECTION: b ) equals ImaginaryAxis ( ELLIPSE: C )",
    "id": 436,
    "declarations": "M: LINE; b: CONICSECTION; C: ELLIPSE",
    "facts": "InterceptChord(M, b) = ImaginaryAxis(C)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: f ) equals Orthocenter ( TRIANGLE: o )",
    "id": 437,
    "declarations": "f: LINESEGMENT; o: TRIANGLE",
    "facts": "MidPoint(f) = Orthocenter(o)"
},
{
    "assertion": "XCoordinate ( POINT: G ) equals Distance ( POINT: u, POINT: j )",
    "id": 438,
    "declarations": "G: POINT; u: POINT; j: POINT",
    "facts": "XCoordinate(G) = Distance(u, j)"
},
{
    "assertion": "IsTangent ( LINE: t, CONICSECTION: K ) equals BOOL: False",
    "id": 439,
    "declarations": "t: LINE; K: CONICSECTION; False: BOOL",
    "facts": "IsTangent(t, K) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: C ) equals POINT: n",
    "id": 440,
    "declarations": "C: CONICSECTION; n: POINT",
    "facts": "LowerVertex(C) = n"
},
{
    "assertion": "DotProduct ( VECTOR: Q, VECTOR: p ) equals Min ( NUMBER: -4 )",
    "id": 441,
    "declarations": "Q: VECTOR; p: VECTOR; -4: NUMBER",
    "facts": "DotProduct(Q, p) = Min(-4)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: H ) equals LINE: r",
    "id": 442,
    "declarations": "H: LINESEGMENT; r: LINE",
    "facts": "PerpendicularBisector(H) = r"
},
{
    "assertion": "Locus ( RightVertex ( CONICSECTION: i ) ) equals CURVE: i",
    "id": 443,
    "declarations": "i: CONICSECTION; i: CURVE",
    "facts": "Locus(RightVertex(i)) = i"
},
{
    "assertion": "UpperVertex ( CONICSECTION: E ) equals POINT: H",
    "id": 444,
    "declarations": "E: CONICSECTION; H: POINT",
    "facts": "UpperVertex(E) = H"
},
{
    "assertion": "IsPerpendicular ( LINE: J, PerpendicularBisector ( MajorAxis ( ELLIPSE: T ) ) ) equals BOOL: True",
    "id": 445,
    "declarations": "J: LINE; T: ELLIPSE; True: BOOL",
    "facts": "IsPerpendicular(J, PerpendicularBisector(MajorAxis(T))) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: O ) equals POINT: R",
    "id": 446,
    "declarations": "O: TRIANGLE; R: POINT",
    "facts": "Orthocenter(O) = R"
},
{
    "assertion": "InterReciprocal ( NumIntersection ( CURVE: x, Locus ( UpperFocus ( CONICSECTION: V ) ) ) ) equals Eccentricity ( CONICSECTION: t )",
    "id": 447,
    "declarations": "x: CURVE; V: CONICSECTION; t: CONICSECTION",
    "facts": "InterReciprocal(NumIntersection(x, Locus(UpperFocus(V)))) = Eccentricity(t)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: R ) equals LINE: h",
    "id": 448,
    "declarations": "R: LINESEGMENT; h: LINE",
    "facts": "OverlappingLine(R) = h"
},
{
    "assertion": "IsParallel ( LINE: B, LINE: b ) equals BOOL: True",
    "id": 449,
    "declarations": "B: LINE; b: LINE; True: BOOL",
    "facts": "IsParallel(B, b) = True"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: i, TRIANGLE: L ) equals BOOL: True",
    "id": 450,
    "declarations": "i: CIRCLE; L: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(i, L) = True"
},
{
    "assertion": "Diameter ( CIRCLE: r ) equals NUMBER: -4",
    "id": 451,
    "declarations": "r: CIRCLE; -4: NUMBER",
    "facts": "Diameter(r) = -4"
},
{
    "assertion": "LeftPart ( HYPERBOLA: H ) equals RightPart ( HYPERBOLA: a )",
    "id": 452,
    "declarations": "H: HYPERBOLA; a: HYPERBOLA",
    "facts": "LeftPart(H) = RightPart(a)"
},
{
    "assertion": "IsPerpendicular ( LINE: b, LINE: O ) equals BOOL: False",
    "id": 453,
    "declarations": "b: LINE; O: LINE; False: BOOL",
    "facts": "IsPerpendicular(b, O) = False"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: x ) equals LINE: p",
    "id": 454,
    "declarations": "x: LINESEGMENT; p: LINE",
    "facts": "OverlappingLine(x) = p"
},
{
    "assertion": "Abs ( LINESEGMENT: F ) equals NUMBER: -90",
    "id": 455,
    "declarations": "F: LINESEGMENT; -90: NUMBER",
    "facts": "Abs(F) = -90"
},
{
    "assertion": "LeftVertex ( CONICSECTION: q ) equals Projection ( LowerFocus ( CONICSECTION: U ), LINE: f )",
    "id": 456,
    "declarations": "q: CONICSECTION; U: CONICSECTION; f: LINE",
    "facts": "LeftVertex(q) = Projection(LowerFocus(U), f)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: F ) equals LINESEGMENT: a",
    "id": 457,
    "declarations": "F: ELLIPSE; a: LINESEGMENT",
    "facts": "MinorAxis(F) = a"
},
{
    "assertion": "Asymptote ( HYPERBOLA: U ) equals LINE: k",
    "id": 458,
    "declarations": "U: HYPERBOLA; k: LINE",
    "facts": "Asymptote(U) = k"
},
{
    "assertion": "NumIntersection ( CURVE: l, CURVE: u ) equals sqrt ( YCoordinate ( POINT: w ) )",
    "id": 461,
    "declarations": "l: CURVE; u: CURVE; w: POINT",
    "facts": "NumIntersection(l, u) = sqrt(YCoordinate(w))"
},
{
    "assertion": "Abs ( LINESEGMENT: O ) equals NUMBER: 29",
    "id": 462,
    "declarations": "O: LINESEGMENT; 29: NUMBER",
    "facts": "Abs(O) = 29"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: E ) equals NUMBER: 7",
    "id": 463,
    "declarations": "E: CONICSECTION; 7: NUMBER",
    "facts": "HalfFocalLength(E) = 7"
},
{
    "assertion": "LeftPart ( HYPERBOLA: K ) equals CURVE: W",
    "id": 464,
    "declarations": "K: HYPERBOLA; W: CURVE",
    "facts": "LeftPart(K) = W"
},
{
    "assertion": "UpperFocus ( CONICSECTION: I ) equals POINT: t",
    "id": 465,
    "declarations": "I: CONICSECTION; t: POINT",
    "facts": "UpperFocus(I) = t"
},
{
    "assertion": "TangentPoint ( LINE: i, CIRCLE: q ) equals MidPoint ( LINESEGMENT: i )",
    "id": 466,
    "declarations": "i: LINE; q: CIRCLE; i: LINESEGMENT",
    "facts": "TangentPoint(i, q) = MidPoint(i)"
},
{
    "assertion": "And ( UpperFocus ( CONICSECTION: Z ) equals POINT: G, IsCircumCircle ( CIRCLE: i, TRIANGLE: y ) equals BOOL: False ) equals BOOL: True",
    "id": 467,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftPart ( HYPERBOLA: G ) equals CURVE: B",
    "id": 468,
    "declarations": "G: HYPERBOLA; B: CURVE",
    "facts": "LeftPart(G) = B"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: h ) equals NUMBER: -10",
    "id": 469,
    "declarations": "h: CONICSECTION; -10: NUMBER",
    "facts": "HalfFocalLength(h) = -10"
},
{
    "assertion": "Negation ( Orthocenter ( TRIANGLE: X ) equals RightVertex ( CONICSECTION: g ) ) equals BOOL: False",
    "id": 470,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Abs ( LINESEGMENT: l ) equals XCoordinate ( POINT: J )",
    "id": 471,
    "declarations": "l: LINESEGMENT; J: POINT",
    "facts": "Abs(l) = XCoordinate(J)"
},
{
    "assertion": "DotProduct ( VECTOR: F, VECTOR: K ) equals YCoordinate ( Center ( CONICSECTION: Q ) )",
    "id": 472,
    "declarations": "F: VECTOR; K: VECTOR; Q: CONICSECTION",
    "facts": "DotProduct(F, K) = YCoordinate(Center(Q))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: a ) equals POINT: I",
    "id": 473,
    "declarations": "a: CONICSECTION; I: POINT",
    "facts": "LowerVertex(a) = I"
},
{
    "assertion": "Focus ( CONICSECTION: K ) equals POINT: q",
    "id": 474,
    "declarations": "K: CONICSECTION; q: POINT",
    "facts": "Focus(K) = q"
},
{
    "assertion": "LowerVertex ( CONICSECTION: b ) equals POINT: h",
    "id": 475,
    "declarations": "b: CONICSECTION; h: POINT",
    "facts": "LowerVertex(b) = h"
},
{
    "assertion": "RightPart ( HYPERBOLA: O ) equals CURVE: O",
    "id": 476,
    "declarations": "O: HYPERBOLA; O: CURVE",
    "facts": "RightPart(O) = O"
},
{
    "assertion": "InterReciprocal ( Length ( LINESEGMENT: f ) ) equals Quadrant ( POINT: P )",
    "id": 477,
    "declarations": "f: LINESEGMENT; P: POINT",
    "facts": "InterReciprocal(Length(f)) = Quadrant(P)"
},
{
    "assertion": "LineOf ( LowerFocus ( CONICSECTION: J ), POINT: a ) equals LINE: k",
    "id": 478,
    "declarations": "J: CONICSECTION; a: POINT; k: LINE",
    "facts": "LineOf(LowerFocus(J), a) = k"
},
{
    "assertion": "Directrix ( CONICSECTION: N ) equals TangentOnPoint ( POINT: E, CURVE: T )",
    "id": 479,
    "declarations": "N: CONICSECTION; E: POINT; T: CURVE",
    "facts": "Directrix(N) = TangentOnPoint(E, T)"
},
{
    "assertion": "IsInTangent ( CIRCLE: J, CIRCLE: O ) equals BOOL: True",
    "id": 480,
    "declarations": "J: CIRCLE; O: CIRCLE; True: BOOL",
    "facts": "IsInTangent(J, O) = True"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: a ) equals LINE: V",
    "id": 481,
    "declarations": "a: LINESEGMENT; V: LINE",
    "facts": "PerpendicularBisector(a) = V"
},
{
    "assertion": "MidPoint ( RealAxis ( ELLIPSE: I ) ) equals MidPoint ( ImaginaryAxis ( ELLIPSE: G ) )",
    "id": 482,
    "declarations": "I: ELLIPSE; G: ELLIPSE",
    "facts": "MidPoint(RealAxis(I)) = MidPoint(ImaginaryAxis(G))"
},
{
    "assertion": "Orthocenter ( TriangleOf ( RightFocus ( CONICSECTION: k ), POINT: e, UpperFocus ( CONICSECTION: p ) ) ) equals Projection ( LowerFocus ( CONICSECTION: I ), LINE: N )",
    "id": 483,
    "declarations": "k: CONICSECTION; e: POINT; p: CONICSECTION; I: CONICSECTION; N: LINE",
    "facts": "Orthocenter(TriangleOf(RightFocus(k), e, UpperFocus(p))) = Projection(LowerFocus(I), N)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: j ) equals POINT: d",
    "id": 484,
    "declarations": "j: CONICSECTION; d: POINT",
    "facts": "UpperVertex(j) = d"
},
{
    "assertion": "RightFocus ( CONICSECTION: d ) equals POINT: P",
    "id": 485,
    "declarations": "d: CONICSECTION; P: POINT",
    "facts": "RightFocus(d) = P"
},
{
    "assertion": "LocusEquation ( LowerVertex ( CONICSECTION: M ) ) equals EXPRESSION: x^3*space+*spacey^3*space=*space1",
    "id": 486,
    "declarations": "M: CONICSECTION; x^3*space+*spacey^3*space=*space1: EXPRESSION",
    "facts": "LocusEquation(LowerVertex(M)) = x^3*space+*spacey^3*space=*space1"
},
{
    "assertion": "MajorAxis ( ELLIPSE: i ) equals LINESEGMENT: j",
    "id": 487,
    "declarations": "i: ELLIPSE; j: LINESEGMENT",
    "facts": "MajorAxis(i) = j"
},
{
    "assertion": "AngleOf ( LeftFocus ( CONICSECTION: f ), POINT: v, POINT: r ) equals AngleOf ( Orthocenter ( TRIANGLE: a ), MidPoint ( LINESEGMENT: M ), RightVertex ( CONICSECTION: v ) )",
    "id": 488,
    "declarations": "f: CONICSECTION; v: POINT; r: POINT; a: TRIANGLE; M: LINESEGMENT; v: CONICSECTION",
    "facts": "AngleOf(LeftFocus(f), v, r) = AngleOf(Orthocenter(a), MidPoint(M), RightVertex(v))"
},
{
    "assertion": "And ( Slope ( LINE: L ) equals HalfFocalLength ( CONICSECTION: W ), MinorAxis ( ELLIPSE: L ) equals LINESEGMENT: x ) equals BOOL: False",
    "id": 489,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "PointOnCurve ( POINT: n, CURVE: Y ) equals BOOL: True",
    "id": 490,
    "declarations": "n: POINT; Y: CURVE; True: BOOL",
    "facts": "PointOnCurve(n, Y) = True"
},
{
    "assertion": "sqrt ( sqrt ( NUMBER: 100 ) ) equals NUMBER: -14",
    "id": 491,
    "declarations": "100: NUMBER; -14: NUMBER",
    "facts": "sqrt(sqrt(100)) = -14"
},
{
    "assertion": "UpperFocus ( CONICSECTION: I ) equals POINT: J",
    "id": 492,
    "declarations": "I: CONICSECTION; J: POINT",
    "facts": "UpperFocus(I) = J"
},
{
    "assertion": "FocalLength ( CONICSECTION: h ) equals Perimeter ( CONICSECTION: h )",
    "id": 493,
    "declarations": "h: CONICSECTION; h: CONICSECTION",
    "facts": "FocalLength(h) = Perimeter(h)"
},
{
    "assertion": "MidPoint ( ImaginaryAxis ( ELLIPSE: p ) ) equals MidPoint ( LineSegmentOf ( RightFocus ( CONICSECTION: H ), POINT: Q ) )",
    "id": 494,
    "declarations": "p: ELLIPSE; H: CONICSECTION; Q: POINT",
    "facts": "MidPoint(ImaginaryAxis(p)) = MidPoint(LineSegmentOf(RightFocus(H), Q))"
},
{
    "assertion": "Vertex ( CONICSECTION: f ) equals UpperFocus ( CONICSECTION: Q )",
    "id": 495,
    "declarations": "f: CONICSECTION; Q: CONICSECTION",
    "facts": "Vertex(f) = UpperFocus(Q)"
},
{
    "assertion": "RealAxis ( ELLIPSE: B ) equals LINESEGMENT: J",
    "id": 496,
    "declarations": "B: ELLIPSE; J: LINESEGMENT",
    "facts": "RealAxis(B) = J"
},
{
    "assertion": "RealAxis ( ELLIPSE: Z ) equals InterceptChord ( LeftDirectrix ( CONICSECTION: D ), CONICSECTION: b )",
    "id": 497,
    "declarations": "Z: ELLIPSE; D: CONICSECTION; b: CONICSECTION",
    "facts": "RealAxis(Z) = InterceptChord(LeftDirectrix(D), b)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: j ) equals LINESEGMENT: K",
    "id": 498,
    "declarations": "j: ELLIPSE; K: LINESEGMENT",
    "facts": "ImaginaryAxis(j) = K"
},
{
    "assertion": "RealAxis ( ELLIPSE: w ) equals LINESEGMENT: Y",
    "id": 499,
    "declarations": "w: ELLIPSE; Y: LINESEGMENT",
    "facts": "RealAxis(w) = Y"
},
{
    "assertion": "Orthocenter ( TRIANGLE: S ) equals Circumcenter ( TRIANGLE: o )",
    "id": 500,
    "declarations": "S: TRIANGLE; o: TRIANGLE",
    "facts": "Orthocenter(S) = Circumcenter(o)"
},
{
    "assertion": "Slope ( LINE: x ) equals sqrt ( Diameter ( CIRCLE: R ) )",
    "id": 501,
    "declarations": "x: LINE; R: CIRCLE",
    "facts": "Slope(x) = sqrt(Diameter(R))"
},
{
    "assertion": "IsPerpendicular ( LINE: M, LINE: o ) equals BOOL: True",
    "id": 502,
    "declarations": "M: LINE; o: LINE; True: BOOL",
    "facts": "IsPerpendicular(M, o) = True"
},
{
    "assertion": "IsInTangent ( CIRCLE: t, CIRCLE: m ) equals BOOL: False",
    "id": 503,
    "declarations": "t: CIRCLE; m: CIRCLE; False: BOOL",
    "facts": "IsInTangent(t, m) = False"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: m ) equals AXIS: xAxis",
    "id": 504,
    "declarations": "m: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(m) = xAxis"
},
{
    "assertion": "MinorAxis ( ELLIPSE: G ) equals RealAxis ( ELLIPSE: N )",
    "id": 505,
    "declarations": "G: ELLIPSE; N: ELLIPSE",
    "facts": "MinorAxis(G) = RealAxis(N)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: T ) equals PerpendicularBisector ( MajorAxis ( ELLIPSE: W ) )",
    "id": 506,
    "declarations": "T: CONICSECTION; W: ELLIPSE",
    "facts": "LeftDirectrix(T) = PerpendicularBisector(MajorAxis(W))"
},
{
    "assertion": "YCoordinate ( Center ( CONICSECTION: j ) ) equals Length ( LINESEGMENT: v )",
    "id": 507,
    "declarations": "j: CONICSECTION; v: LINESEGMENT",
    "facts": "YCoordinate(Center(j)) = Length(v)"
},
{
    "assertion": "MidPoint ( MinorAxis ( ELLIPSE: K ) ) equals POINT: s",
    "id": 508,
    "declarations": "K: ELLIPSE; s: POINT",
    "facts": "MidPoint(MinorAxis(K)) = s"
},
{
    "assertion": "IsTangent ( LINE: O, CONICSECTION: h ) equals BOOL: True",
    "id": 509,
    "declarations": "O: LINE; h: CONICSECTION; True: BOOL",
    "facts": "IsTangent(O, h) = True"
},
{
    "assertion": "MidPoint ( LINESEGMENT: U ) equals POINT: L",
    "id": 510,
    "declarations": "U: LINESEGMENT; L: POINT",
    "facts": "MidPoint(U) = L"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: B, CONICSECTION: W ) equals BOOL: True",
    "id": 511,
    "declarations": "B: LINESEGMENT; W: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(B, W) = True"
},
{
    "assertion": "Abs ( LINESEGMENT: R ) equals NUMBER: 87",
    "id": 512,
    "declarations": "R: LINESEGMENT; 87: NUMBER",
    "facts": "Abs(R) = 87"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: r ) equals AXIS: yAxis",
    "id": 513,
    "declarations": "r: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(r) = yAxis"
},
{
    "assertion": "IsInTangent ( CIRCLE: V, CIRCLE: N ) equals BOOL: True",
    "id": 514,
    "declarations": "V: CIRCLE; N: CIRCLE; True: BOOL",
    "facts": "IsInTangent(V, N) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: c ) equals POINT: R",
    "id": 515,
    "declarations": "c: CONICSECTION; R: POINT",
    "facts": "LeftVertex(c) = R"
},
{
    "assertion": "Radius ( CIRCLE: I ) equals Min ( Inclination ( LINE: x ) )",
    "id": 516,
    "declarations": "I: CIRCLE; x: LINE",
    "facts": "Radius(I) = Min(Inclination(x))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: z, TRIANGLE: F ) equals BOOL: True",
    "id": 517,
    "declarations": "z: CIRCLE; F: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(z, F) = True"
},
{
    "assertion": "Intercept ( LeftDirectrix ( CONICSECTION: E ), AXIS: yAxis ) equals NUMBER: -43",
    "id": 518,
    "declarations": "E: CONICSECTION; yAxis: AXIS; -43: NUMBER",
    "facts": "Intercept(LeftDirectrix(E), yAxis) = -43"
},
{
    "assertion": "Expression ( CURVE: b ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 519,
    "declarations": "b: CURVE; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "Expression(b) = x*space+*spacey*space=*space5"
},
{
    "assertion": "LeftFocus ( CONICSECTION: h ) equals LowerVertex ( CONICSECTION: V )",
    "id": 520,
    "declarations": "h: CONICSECTION; V: CONICSECTION",
    "facts": "LeftFocus(h) = LowerVertex(V)"
},
{
    "assertion": "RightFocus ( CONICSECTION: D ) equals POINT: H",
    "id": 521,
    "declarations": "D: CONICSECTION; H: POINT",
    "facts": "RightFocus(D) = H"
},
{
    "assertion": "LowerFocus ( CONICSECTION: F ) equals POINT: v",
    "id": 522,
    "declarations": "F: CONICSECTION; v: POINT",
    "facts": "LowerFocus(F) = v"
},
{
    "assertion": "Distance ( UpperVertex ( CONICSECTION: Z ), MidPoint ( LineSegmentOf ( POINT: q, UpperFocus ( CONICSECTION: D ) ) ) ) equals sqrt ( lg ( NUMBER: 100 ) )",
    "id": 523,
    "declarations": "Z: CONICSECTION; q: POINT; D: CONICSECTION; 100: NUMBER",
    "facts": "Distance(UpperVertex(Z), MidPoint(LineSegmentOf(q, UpperFocus(D)))) = sqrt(lg(100))"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: K ) equals MajorAxis ( ELLIPSE: O )",
    "id": 524,
    "declarations": "K: ELLIPSE; O: ELLIPSE",
    "facts": "ImaginaryAxis(K) = MajorAxis(O)"
},
{
    "assertion": "Max ( NUMBER: 37 ) equals lg ( NUMBER: -23 )",
    "id": 525,
    "declarations": "37: NUMBER; -23: NUMBER",
    "facts": "Max(37) = lg(-23)"
},
{
    "assertion": "sqrt ( NUMBER: -49 ) equals HalfFocalLength ( CONICSECTION: y )",
    "id": 526,
    "declarations": "-49: NUMBER; y: CONICSECTION",
    "facts": "sqrt(-49) = HalfFocalLength(y)"
},
{
    "assertion": "Vertex ( CONICSECTION: p ) equals UpperVertex ( CONICSECTION: I )",
    "id": 527,
    "declarations": "p: CONICSECTION; I: CONICSECTION",
    "facts": "Vertex(p) = UpperVertex(I)"
},
{
    "assertion": "RightPart ( HYPERBOLA: L ) equals LeftPart ( HYPERBOLA: t )",
    "id": 528,
    "declarations": "L: HYPERBOLA; t: HYPERBOLA",
    "facts": "RightPart(L) = LeftPart(t)"
},
{
    "assertion": "IsTangent ( LeftDirectrix ( CONICSECTION: k ), CONICSECTION: P ) equals BOOL: False",
    "id": 529,
    "declarations": "k: CONICSECTION; P: CONICSECTION; False: BOOL",
    "facts": "IsTangent(LeftDirectrix(k), P) = False"
},
{
    "assertion": "Abs ( LINESEGMENT: X ) equals XCoordinate ( MidPoint ( LINESEGMENT: U ) )",
    "id": 530,
    "declarations": "X: LINESEGMENT; U: LINESEGMENT",
    "facts": "Abs(X) = XCoordinate(MidPoint(U))"
},
{
    "assertion": "Incenter ( TRIANGLE: M ) equals POINT: c",
    "id": 531,
    "declarations": "M: TRIANGLE; c: POINT",
    "facts": "Incenter(M) = c"
},
{
    "assertion": "Perimeter ( CONICSECTION: s ) equals NUMBER: 77",
    "id": 532,
    "declarations": "s: CONICSECTION; 77: NUMBER",
    "facts": "Perimeter(s) = 77"
},
{
    "assertion": "Eccentricity ( CONICSECTION: f ) equals NUMBER: 73",
    "id": 533,
    "declarations": "f: CONICSECTION; 73: NUMBER",
    "facts": "Eccentricity(f) = 73"
},
{
    "assertion": "UpperVertex ( CONICSECTION: N ) equals POINT: q",
    "id": 534,
    "declarations": "N: CONICSECTION; q: POINT",
    "facts": "UpperVertex(N) = q"
},
{
    "assertion": "LineOf ( Circumcenter ( TRIANGLE: C ), LowerFocus ( CONICSECTION: s ) ) equals LINE: K",
    "id": 535,
    "declarations": "C: TRIANGLE; s: CONICSECTION; K: LINE",
    "facts": "LineOf(Circumcenter(C), LowerFocus(s)) = K"
},
{
    "assertion": "Expression ( CURVE: w ) equals LocusEquation ( Orthocenter ( TRIANGLE: j ) )",
    "id": 536,
    "declarations": "w: CURVE; j: TRIANGLE",
    "facts": "Expression(w) = LocusEquation(Orthocenter(j))"
},
{
    "assertion": "Distance ( RightFocus ( CONICSECTION: N ), POINT: k ) equals XCoordinate ( POINT: q )",
    "id": 537,
    "declarations": "N: CONICSECTION; k: POINT; q: POINT",
    "facts": "Distance(RightFocus(N), k) = XCoordinate(q)"
},
{
    "assertion": "RealAxis ( ELLIPSE: j ) equals LINESEGMENT: L",
    "id": 538,
    "declarations": "j: ELLIPSE; L: LINESEGMENT",
    "facts": "RealAxis(j) = L"
},
{
    "assertion": "TangentOnPoint ( POINT: H, CURVE: f ) equals LINE: O",
    "id": 539,
    "declarations": "H: POINT; f: CURVE; O: LINE",
    "facts": "TangentOnPoint(H, f) = O"
},
{
    "assertion": "InterceptChord ( TangentOnPoint ( POINT: p, CURVE: g ), CONICSECTION: N ) equals MajorAxis ( ELLIPSE: i )",
    "id": 541,
    "declarations": "p: POINT; g: CURVE; N: CONICSECTION; i: ELLIPSE",
    "facts": "InterceptChord(TangentOnPoint(p, g), N) = MajorAxis(i)"
},
{
    "assertion": "sqrt ( FocalLength ( CONICSECTION: c ) ) equals lg ( NUMBER: 55 )",
    "id": 542,
    "declarations": "c: CONICSECTION; 55: NUMBER",
    "facts": "sqrt(FocalLength(c)) = lg(55)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: E ) equals Incenter ( TRIANGLE: E )",
    "id": 543,
    "declarations": "E: CONICSECTION; E: TRIANGLE",
    "facts": "LeftVertex(E) = Incenter(E)"
},
{
    "assertion": "Focus ( CONICSECTION: G ) equals POINT: R",
    "id": 544,
    "declarations": "G: CONICSECTION; R: POINT",
    "facts": "Focus(G) = R"
},
{
    "assertion": "sqrt ( NUMBER: -95 ) equals NUMBER: -56",
    "id": 545,
    "declarations": "-95: NUMBER; -56: NUMBER",
    "facts": "sqrt(-95) = -56"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: D ) equals RightDirectrix ( CONICSECTION: H )",
    "id": 546,
    "declarations": "D: CONICSECTION; H: CONICSECTION",
    "facts": "RightDirectrix(D) = RightDirectrix(H)"
},
{
    "assertion": "Area ( CONICSECTION: k ) equals Quadrant ( Orthocenter ( TRIANGLE: O ) )",
    "id": 547,
    "declarations": "k: CONICSECTION; O: TRIANGLE",
    "facts": "Area(k) = Quadrant(Orthocenter(O))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: o ) equals LINESEGMENT: m",
    "id": 548,
    "declarations": "o: ELLIPSE; m: LINESEGMENT",
    "facts": "MajorAxis(o) = m"
},
{
    "assertion": "LeftVertex ( CONICSECTION: k ) equals POINT: v",
    "id": 549,
    "declarations": "k: CONICSECTION; v: POINT",
    "facts": "LeftVertex(k) = v"
},
{
    "assertion": "LeftPart ( HYPERBOLA: H ) equals CURVE: F",
    "id": 550,
    "declarations": "H: HYPERBOLA; F: CURVE",
    "facts": "LeftPart(H) = F"
},
{
    "assertion": "MajorAxis ( ELLIPSE: T ) equals MinorAxis ( ELLIPSE: N )",
    "id": 551,
    "declarations": "T: ELLIPSE; N: ELLIPSE",
    "facts": "MajorAxis(T) = MinorAxis(N)"
},
{
    "assertion": "LineOf ( POINT: c, RightFocus ( CONICSECTION: n ) ) equals LINE: P",
    "id": 552,
    "declarations": "c: POINT; n: CONICSECTION; P: LINE",
    "facts": "LineOf(c, RightFocus(n)) = P"
},
{
    "assertion": "MajorAxis ( ELLIPSE: c ) equals LINESEGMENT: m",
    "id": 553,
    "declarations": "c: ELLIPSE; m: LINESEGMENT",
    "facts": "MajorAxis(c) = m"
},
{
    "assertion": "Intersection ( CURVE: n, CURVE: X ) equals RightFocus ( CONICSECTION: u )",
    "id": 554,
    "declarations": "n: CURVE; X: CURVE; u: CONICSECTION",
    "facts": "Intersection(n, X) = RightFocus(u)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: x ) equals MidPoint ( LINESEGMENT: Q )",
    "id": 555,
    "declarations": "x: LINESEGMENT; Q: LINESEGMENT",
    "facts": "Endpoint(x) = MidPoint(Q)"
},
{
    "assertion": "Between ( POINT: L, MidPoint ( LINESEGMENT: D ), LeftVertex ( CONICSECTION: o ) ) equals BOOL: False",
    "id": 556,
    "declarations": "L: POINT; D: LINESEGMENT; o: CONICSECTION; False: BOOL",
    "facts": "Between(L, MidPoint(D), LeftVertex(o)) = False"
},
{
    "assertion": "Radius ( CIRCLE: U ) equals NUMBER: -3",
    "id": 557,
    "declarations": "U: CIRCLE; -3: NUMBER",
    "facts": "Radius(U) = -3"
},
{
    "assertion": "Radius ( CIRCLE: Y ) equals InterReciprocal ( NUMBER: 70 )",
    "id": 558,
    "declarations": "Y: CIRCLE; 70: NUMBER",
    "facts": "Radius(Y) = InterReciprocal(70)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: c ) equals POINT: e",
    "id": 559,
    "declarations": "c: LINESEGMENT; e: POINT",
    "facts": "Endpoint(c) = e"
},
{
    "assertion": "LineSegmentOf ( Orthocenter ( TRIANGLE: W ), MidPoint ( LINESEGMENT: V ) ) equals LINESEGMENT: U",
    "id": 560,
    "declarations": "W: TRIANGLE; V: LINESEGMENT; U: LINESEGMENT",
    "facts": "LineSegmentOf(Orthocenter(W), MidPoint(V)) = U"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: A ) equals AXIS: xAxis",
    "id": 561,
    "declarations": "A: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(A) = xAxis"
},
{
    "assertion": "Vertex ( CONICSECTION: V ) equals POINT: Z",
    "id": 562,
    "declarations": "V: CONICSECTION; Z: POINT",
    "facts": "Vertex(V) = Z"
},
{
    "assertion": "Projection ( LowerFocus ( CONICSECTION: S ), LINE: Z ) equals RightFocus ( CONICSECTION: Q )",
    "id": 563,
    "declarations": "S: CONICSECTION; Z: LINE; Q: CONICSECTION",
    "facts": "Projection(LowerFocus(S), Z) = RightFocus(Q)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: B ) equals LINESEGMENT: F",
    "id": 564,
    "declarations": "B: ELLIPSE; F: LINESEGMENT",
    "facts": "MinorAxis(B) = F"
},
{
    "assertion": "IsTangent ( LINE: f, CONICSECTION: M ) equals BOOL: False",
    "id": 565,
    "declarations": "f: LINE; M: CONICSECTION; False: BOOL",
    "facts": "IsTangent(f, M) = False"
},
{
    "assertion": "Expression ( CURVE: a ) equals EXPRESSION: x*space+*spacey^2*space=*space9",
    "id": 566,
    "declarations": "a: CURVE; x*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(a) = x*space+*spacey^2*space=*space9"
},
{
    "assertion": "IsTangent ( RightDirectrix ( CONICSECTION: p ), CONICSECTION: p ) equals BOOL: False",
    "id": 567,
    "declarations": "p: CONICSECTION; p: CONICSECTION; False: BOOL",
    "facts": "IsTangent(RightDirectrix(p), p) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: w ) equals POINT: l",
    "id": 568,
    "declarations": "w: CONICSECTION; l: POINT",
    "facts": "LowerVertex(w) = l"
},
{
    "assertion": "RightFocus ( CONICSECTION: O ) equals POINT: b",
    "id": 569,
    "declarations": "O: CONICSECTION; b: POINT",
    "facts": "RightFocus(O) = b"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: h ) equals AXIS: xAxis",
    "id": 570,
    "declarations": "h: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(h) = xAxis"
},
{
    "assertion": "MajorAxis ( ELLIPSE: C ) equals LINESEGMENT: L",
    "id": 571,
    "declarations": "C: ELLIPSE; L: LINESEGMENT",
    "facts": "MajorAxis(C) = L"
},
{
    "assertion": "DotProduct ( VECTOR: D, VECTOR: M ) equals NUMBER: 7",
    "id": 572,
    "declarations": "D: VECTOR; M: VECTOR; 7: NUMBER",
    "facts": "DotProduct(D, M) = 7"
},
{
    "assertion": "Max ( Radius ( CIRCLE: a ) ) equals NUMBER: 1",
    "id": 573,
    "declarations": "a: CIRCLE; 1: NUMBER",
    "facts": "Max(Radius(a)) = 1"
},
{
    "assertion": "RightPart ( HYPERBOLA: L ) equals Locus ( LowerFocus ( CONICSECTION: y ) )",
    "id": 574,
    "declarations": "L: HYPERBOLA; y: CONICSECTION",
    "facts": "RightPart(L) = Locus(LowerFocus(y))"
},
{
    "assertion": "RealAxis ( ELLIPSE: q ) equals LINESEGMENT: b",
    "id": 575,
    "declarations": "q: ELLIPSE; b: LINESEGMENT",
    "facts": "RealAxis(q) = b"
},
{
    "assertion": "Min ( NUMBER: 86 ) equals Inclination ( LINE: C )",
    "id": 576,
    "declarations": "86: NUMBER; C: LINE",
    "facts": "Min(86) = Inclination(C)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: l ) equals LINE: G",
    "id": 577,
    "declarations": "l: CONICSECTION; G: LINE",
    "facts": "RightDirectrix(l) = G"
},
{
    "assertion": "ApplyUnit ( Diameter ( CIRCLE: w ), DEGREESTR: degree )",
    "id": 578,
    "declarations": "w: CIRCLE; degree: DEGREESTR",
    "facts": "ApplyUnit(Diameter(w), degree) = None"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: d ) equals LINE: G",
    "id": 579,
    "declarations": "d: LINESEGMENT; G: LINE",
    "facts": "OverlappingLine(d) = G"
},
{
    "assertion": "UpperFocus ( CONICSECTION: h ) equals POINT: g",
    "id": 580,
    "declarations": "h: CONICSECTION; g: POINT",
    "facts": "UpperFocus(h) = g"
},
{
    "assertion": "Diameter ( CIRCLE: T ) equals Slope ( LINE: C )",
    "id": 581,
    "declarations": "T: CIRCLE; C: LINE",
    "facts": "Diameter(T) = Slope(C)"
},
{
    "assertion": "Negation ( LeftPart ( HYPERBOLA: V ) equals CURVE: S ) equals BOOL: False",
    "id": 582,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Incenter ( TRIANGLE: O ) equals POINT: F",
    "id": 583,
    "declarations": "O: TRIANGLE; F: POINT",
    "facts": "Incenter(O) = F"
},
{
    "assertion": "Distance ( RightFocus ( CONICSECTION: c ), POINT: F ) equals NUMBER: 98",
    "id": 584,
    "declarations": "c: CONICSECTION; F: POINT; 98: NUMBER",
    "facts": "Distance(RightFocus(c), F) = 98"
},
{
    "assertion": "NumIntersection ( CURVE: p, CURVE: L ) equals HalfFocalLength ( CONICSECTION: J )",
    "id": 585,
    "declarations": "p: CURVE; L: CURVE; J: CONICSECTION",
    "facts": "NumIntersection(p, L) = HalfFocalLength(J)"
},
{
    "assertion": "XCoordinate ( POINT: v ) equals FocalLength ( CONICSECTION: T )",
    "id": 586,
    "declarations": "v: POINT; T: CONICSECTION",
    "facts": "XCoordinate(v) = FocalLength(T)"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: x ) ) equals LeftDirectrix ( CONICSECTION: Q )",
    "id": 587,
    "declarations": "x: ELLIPSE; Q: CONICSECTION",
    "facts": "OverlappingLine(MinorAxis(x)) = LeftDirectrix(Q)"
},
{
    "assertion": "Directrix ( CONICSECTION: j ) equals LINE: V",
    "id": 588,
    "declarations": "j: CONICSECTION; V: LINE",
    "facts": "Directrix(j) = V"
},
{
    "assertion": "LocusEquation ( POINT: v ) equals EXPRESSION: x*space+*spacey^2*space=*space1",
    "id": 589,
    "declarations": "v: POINT; x*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(v) = x*space+*spacey^2*space=*space1"
},
{
    "assertion": "TriangleOf ( LeftVertex ( CONICSECTION: A ), Center ( CONICSECTION: d ), LowerVertex ( CONICSECTION: c ) ) equals TRIANGLE: e",
    "id": 590,
    "declarations": "A: CONICSECTION; d: CONICSECTION; c: CONICSECTION; e: TRIANGLE",
    "facts": "TriangleOf(LeftVertex(A), Center(d), LowerVertex(c)) = e"
},
{
    "assertion": "AngleOf ( Circumcenter ( TRIANGLE: w ), Circumcenter ( TRIANGLE: Y ), LowerVertex ( CONICSECTION: W ) ) equals AngleOf ( POINT: E, RightVertex ( CONICSECTION: m ), RightFocus ( CONICSECTION: n ) )",
    "id": 591,
    "declarations": "w: TRIANGLE; Y: TRIANGLE; W: CONICSECTION; E: POINT; m: CONICSECTION; n: CONICSECTION",
    "facts": "AngleOf(Circumcenter(w), Circumcenter(Y), LowerVertex(W)) = AngleOf(E, RightVertex(m), RightFocus(n))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: a ) equals LeftFocus ( CONICSECTION: t )",
    "id": 592,
    "declarations": "a: LINESEGMENT; t: CONICSECTION",
    "facts": "Endpoint(a) = LeftFocus(t)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: H ) equals Diameter ( CIRCLE: l )",
    "id": 593,
    "declarations": "H: CONICSECTION; l: CIRCLE",
    "facts": "Eccentricity(H) = Diameter(l)"
},
{
    "assertion": "IsIntersect ( CURVE: d, LeftPart ( HYPERBOLA: S ) ) equals BOOL: True",
    "id": 594,
    "declarations": "d: CURVE; S: HYPERBOLA; True: BOOL",
    "facts": "IsIntersect(d, LeftPart(S)) = True"
},
{
    "assertion": "Distance ( POINT: q, POINT: W ) equals InterReciprocal ( NUMBER: -47 )",
    "id": 595,
    "declarations": "q: POINT; W: POINT; -47: NUMBER",
    "facts": "Distance(q, W) = InterReciprocal(-47)"
},
{
    "assertion": "Negation ( DotProduct ( VECTOR: e, VECTOR: T ) equals Inclination ( LINE: H ) ) equals BOOL: True",
    "id": 596,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Abs ( LINESEGMENT: C ) equals NUMBER: 67",
    "id": 597,
    "declarations": "C: LINESEGMENT; 67: NUMBER",
    "facts": "Abs(C) = 67"
},
{
    "assertion": "Between ( POINT: q, POINT: F, POINT: O ) equals BOOL: True",
    "id": 598,
    "declarations": "q: POINT; F: POINT; O: POINT; True: BOOL",
    "facts": "Between(q, F, O) = True"
},
{
    "assertion": "LowerVertex ( CONICSECTION: y ) equals POINT: u",
    "id": 599,
    "declarations": "y: CONICSECTION; u: POINT",
    "facts": "LowerVertex(y) = u"
},
{
    "assertion": "Projection ( POINT: b, LINE: J ) equals RightFocus ( CONICSECTION: H )",
    "id": 600,
    "declarations": "b: POINT; J: LINE; H: CONICSECTION",
    "facts": "Projection(b, J) = RightFocus(H)"
},
{
    "assertion": "InterReciprocal ( NUMBER: -22 ) equals Abs ( LINESEGMENT: t )",
    "id": 601,
    "declarations": "-22: NUMBER; t: LINESEGMENT",
    "facts": "InterReciprocal(-22) = Abs(t)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: M ) equals LeftDirectrix ( CONICSECTION: h )",
    "id": 602,
    "declarations": "M: HYPERBOLA; h: CONICSECTION",
    "facts": "Asymptote(M) = LeftDirectrix(h)"
},
{
    "assertion": "Area ( CONICSECTION: T ) equals InterReciprocal ( InterReciprocal ( YCoordinate ( Orthocenter ( TRIANGLE: I ) ) ) )",
    "id": 603,
    "declarations": "T: CONICSECTION; I: TRIANGLE",
    "facts": "Area(T) = InterReciprocal(InterReciprocal(YCoordinate(Orthocenter(I))))"
},
{
    "assertion": "Circumcenter ( TriangleOf ( POINT: H, LeftVertex ( CONICSECTION: y ), LowerVertex ( CONICSECTION: R ) ) ) equals UpperVertex ( CONICSECTION: s )",
    "id": 604,
    "declarations": "H: POINT; y: CONICSECTION; R: CONICSECTION; s: CONICSECTION",
    "facts": "Circumcenter(TriangleOf(H, LeftVertex(y), LowerVertex(R))) = UpperVertex(s)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: W ) equals LINE: t",
    "id": 605,
    "declarations": "W: HYPERBOLA; t: LINE",
    "facts": "Asymptote(W) = t"
},
{
    "assertion": "Radius ( CIRCLE: D ) equals YCoordinate ( POINT: V )",
    "id": 606,
    "declarations": "D: CIRCLE; V: POINT",
    "facts": "Radius(D) = YCoordinate(V)"
},
{
    "assertion": "Radius ( CIRCLE: w ) equals sqrt ( Area ( CONICSECTION: j ) )",
    "id": 607,
    "declarations": "w: CIRCLE; j: CONICSECTION",
    "facts": "Radius(w) = sqrt(Area(j))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: Z ) equals CIRCLE: R",
    "id": 608,
    "declarations": "Z: TRIANGLE; R: CIRCLE",
    "facts": "CircumCircle(Z) = R"
},
{
    "assertion": "UpperVertex ( CONICSECTION: u ) equals POINT: F",
    "id": 609,
    "declarations": "u: CONICSECTION; F: POINT",
    "facts": "UpperVertex(u) = F"
},
{
    "assertion": "TangentOnPoint ( POINT: i, CURVE: T ) equals LINE: Q",
    "id": 610,
    "declarations": "i: POINT; T: CURVE; Q: LINE",
    "facts": "TangentOnPoint(i, T) = Q"
},
{
    "assertion": "XCoordinate ( POINT: M ) equals NumIntersection ( CURVE: h, CURVE: j )",
    "id": 611,
    "declarations": "M: POINT; h: CURVE; j: CURVE",
    "facts": "XCoordinate(M) = NumIntersection(h, j)"
},
{
    "assertion": "TangentOfPoint ( Incenter ( TRIANGLE: L ), CURVE: r ) equals LINE: x",
    "id": 612,
    "declarations": "L: TRIANGLE; r: CURVE; x: LINE",
    "facts": "TangentOfPoint(Incenter(L), r) = x"
},
{
    "assertion": "lg ( NUMBER: 48 ) equals Min ( NUMBER: 83 )",
    "id": 613,
    "declarations": "48: NUMBER; 83: NUMBER",
    "facts": "lg(48) = Min(83)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: m ) equals LINESEGMENT: I",
    "id": 614,
    "declarations": "m: ELLIPSE; I: LINESEGMENT",
    "facts": "ImaginaryAxis(m) = I"
},
{
    "assertion": "MajorAxis ( ELLIPSE: y ) equals LINESEGMENT: w",
    "id": 615,
    "declarations": "y: ELLIPSE; w: LINESEGMENT",
    "facts": "MajorAxis(y) = w"
},
{
    "assertion": "TriangleOf ( POINT: i, Orthocenter ( TRIANGLE: I ), Projection ( Circumcenter ( TRIANGLE: T ), LINE: g ) ) equals TRIANGLE: c",
    "id": 616,
    "declarations": "i: POINT; I: TRIANGLE; T: TRIANGLE; g: LINE; c: TRIANGLE",
    "facts": "TriangleOf(i, Orthocenter(I), Projection(Circumcenter(T), g)) = c"
},
{
    "assertion": "And ( MajorAxis ( ELLIPSE: m ) equals LINESEGMENT: J, XCoordinate ( MidPoint ( LineSegmentOf ( UpperVertex ( CONICSECTION: i ), LeftVertex ( CONICSECTION: p ) ) ) ) equals NUMBER: 24 ) equals BOOL: True",
    "id": 617,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "YCoordinate ( POINT: v ) equals Intercept ( LINE: E, AXIS: xAxis )",
    "id": 618,
    "declarations": "v: POINT; E: LINE; xAxis: AXIS",
    "facts": "YCoordinate(v) = Intercept(E, xAxis)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: W, TRIANGLE: P ) equals BOOL: False",
    "id": 619,
    "declarations": "W: CIRCLE; P: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(W, P) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: z ) equals LeftVertex ( CONICSECTION: g )",
    "id": 620,
    "declarations": "z: CONICSECTION; g: CONICSECTION",
    "facts": "LowerVertex(z) = LeftVertex(g)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: i ) equals NUMBER: 56",
    "id": 621,
    "declarations": "i: CONICSECTION; 56: NUMBER",
    "facts": "HalfFocalLength(i) = 56"
},
{
    "assertion": "IsPerpendicular ( LINE: z, LINE: c ) equals BOOL: False",
    "id": 622,
    "declarations": "z: LINE; c: LINE; False: BOOL",
    "facts": "IsPerpendicular(z, c) = False"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: L ) equals LINE: w",
    "id": 623,
    "declarations": "L: LINESEGMENT; w: LINE",
    "facts": "OverlappingLine(L) = w"
},
{
    "assertion": "Inclination ( LINE: n ) equals NUMBER: 3",
    "id": 624,
    "declarations": "n: LINE; 3: NUMBER",
    "facts": "Inclination(n) = 3"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: G ) equals LINE: X",
    "id": 625,
    "declarations": "G: CONICSECTION; X: LINE",
    "facts": "RightDirectrix(G) = X"
},
{
    "assertion": "Vertex ( CONICSECTION: T ) equals POINT: d",
    "id": 626,
    "declarations": "T: CONICSECTION; d: POINT",
    "facts": "Vertex(T) = d"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: n ), TRIANGLE: X ) equals BOOL: False",
    "id": 627,
    "declarations": "n: TRIANGLE; X: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(n), X) = False"
},
{
    "assertion": "Orthocenter ( TRIANGLE: F ) equals POINT: A",
    "id": 628,
    "declarations": "F: TRIANGLE; A: POINT",
    "facts": "Orthocenter(F) = A"
},
{
    "assertion": "MajorAxis ( ELLIPSE: x ) equals LINESEGMENT: L",
    "id": 629,
    "declarations": "x: ELLIPSE; L: LINESEGMENT",
    "facts": "MajorAxis(x) = L"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: M, CONICSECTION: s ) equals BOOL: False",
    "id": 630,
    "declarations": "M: LINESEGMENT; s: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(M, s) = False"
},
{
    "assertion": "Diameter ( CIRCLE: M ) equals NUMBER: -52",
    "id": 631,
    "declarations": "M: CIRCLE; -52: NUMBER",
    "facts": "Diameter(M) = -52"
},
{
    "assertion": "IsParallel ( LINE: k, LINE: U ) equals BOOL: True",
    "id": 632,
    "declarations": "k: LINE; U: LINE; True: BOOL",
    "facts": "IsParallel(k, U) = True"
},
{
    "assertion": "RightPart ( HYPERBOLA: J ) equals CURVE: Q",
    "id": 633,
    "declarations": "J: HYPERBOLA; Q: CURVE",
    "facts": "RightPart(J) = Q"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: K, CONICSECTION: W ) equals BOOL: True",
    "id": 634,
    "declarations": "K: LINESEGMENT; W: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(K, W) = True"
},
{
    "assertion": "IsParallel ( PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: j ) ), LINE: y ) equals BOOL: True",
    "id": 635,
    "declarations": "j: ELLIPSE; y: LINE; True: BOOL",
    "facts": "IsParallel(PerpendicularBisector(ImaginaryAxis(j)), y) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: f ) equals Incenter ( TRIANGLE: o )",
    "id": 636,
    "declarations": "f: TRIANGLE; o: TRIANGLE",
    "facts": "Incenter(f) = Incenter(o)"
},
{
    "assertion": "lg ( NUMBER: 34 ) equals Eccentricity ( CONICSECTION: Q )",
    "id": 637,
    "declarations": "34: NUMBER; Q: CONICSECTION",
    "facts": "lg(34) = Eccentricity(Q)"
},
{
    "assertion": "Expression ( CURVE: V ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 638,
    "declarations": "V: CURVE; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "Expression(V) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "Eccentricity ( CONICSECTION: j ) equals XCoordinate ( POINT: d )",
    "id": 639,
    "declarations": "j: CONICSECTION; d: POINT",
    "facts": "Eccentricity(j) = XCoordinate(d)"
},
{
    "assertion": "Min ( DotProduct ( VECTOR: I, VECTOR: o ) ) equals NUMBER: -70",
    "id": 640,
    "declarations": "I: VECTOR; o: VECTOR; -70: NUMBER",
    "facts": "Min(DotProduct(I, o)) = -70"
},
{
    "assertion": "UpperFocus ( CONICSECTION: M ) equals POINT: g",
    "id": 641,
    "declarations": "M: CONICSECTION; g: POINT",
    "facts": "UpperFocus(M) = g"
},
{
    "assertion": "FootPoint ( LINE: k, RightDirectrix ( CONICSECTION: D ) ) equals POINT: z",
    "id": 642,
    "declarations": "k: LINE; D: CONICSECTION; z: POINT",
    "facts": "FootPoint(k, RightDirectrix(D)) = z"
},
{
    "assertion": "Vertex ( CONICSECTION: N ) equals LowerVertex ( CONICSECTION: i )",
    "id": 643,
    "declarations": "N: CONICSECTION; i: CONICSECTION",
    "facts": "Vertex(N) = LowerVertex(i)"
},
{
    "assertion": "sqrt ( YCoordinate ( UpperVertex ( CONICSECTION: F ) ) ) equals sqrt ( Area ( CONICSECTION: K ) )",
    "id": 644,
    "declarations": "F: CONICSECTION; K: CONICSECTION",
    "facts": "sqrt(YCoordinate(UpperVertex(F))) = sqrt(Area(K))"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: e, TRIANGLE: F ) equals BOOL: True",
    "id": 645,
    "declarations": "e: CIRCLE; F: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(e, F) = True"
},
{
    "assertion": "Max ( Radius ( CIRCLE: Y ) ) equals NUMBER: -22",
    "id": 646,
    "declarations": "Y: CIRCLE; -22: NUMBER",
    "facts": "Max(Radius(Y)) = -22"
},
{
    "assertion": "Length ( LINESEGMENT: X ) equals Inclination ( PerpendicularBisector ( LINESEGMENT: j ) )",
    "id": 647,
    "declarations": "X: LINESEGMENT; j: LINESEGMENT",
    "facts": "Length(X) = Inclination(PerpendicularBisector(j))"
},
{
    "assertion": "Area ( CONICSECTION: f ) equals NumIntersection ( CURVE: V, CURVE: B )",
    "id": 648,
    "declarations": "f: CONICSECTION; V: CURVE; B: CURVE",
    "facts": "Area(f) = NumIntersection(V, B)"
},
{
    "assertion": "Min ( NUMBER: 72 ) equals InterReciprocal ( Intercept ( LineOf ( POINT: q, UpperFocus ( CONICSECTION: t ) ), AXIS: xAxis ) )",
    "id": 649,
    "declarations": "72: NUMBER; q: POINT; t: CONICSECTION; xAxis: AXIS",
    "facts": "Min(72) = InterReciprocal(Intercept(LineOf(q, UpperFocus(t)), xAxis))"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: T ) ) equals MidPoint ( RealAxis ( ELLIPSE: h ) )",
    "id": 650,
    "declarations": "T: ELLIPSE; h: ELLIPSE",
    "facts": "MidPoint(MajorAxis(T)) = MidPoint(RealAxis(h))"
},
{
    "assertion": "RightVertex ( CONICSECTION: L ) equals Center ( CONICSECTION: L )",
    "id": 651,
    "declarations": "L: CONICSECTION; L: CONICSECTION",
    "facts": "RightVertex(L) = Center(L)"
},
{
    "assertion": "Endpoint ( MinorAxis ( ELLIPSE: E ) ) equals RightVertex ( CONICSECTION: V )",
    "id": 652,
    "declarations": "E: ELLIPSE; V: CONICSECTION",
    "facts": "Endpoint(MinorAxis(E)) = RightVertex(V)"
},
{
    "assertion": "Focus ( CONICSECTION: S ) equals POINT: u",
    "id": 653,
    "declarations": "S: CONICSECTION; u: POINT",
    "facts": "Focus(S) = u"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: t ) equals AXIS: yAxis",
    "id": 654,
    "declarations": "t: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(t) = yAxis"
},
{
    "assertion": "TangentOfPoint ( UpperVertex ( CONICSECTION: d ), LeftPart ( HYPERBOLA: K ) ) equals LINE: V",
    "id": 655,
    "declarations": "d: CONICSECTION; K: HYPERBOLA; V: LINE",
    "facts": "TangentOfPoint(UpperVertex(d), LeftPart(K)) = V"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: l ) equals Abs ( LINESEGMENT: n )",
    "id": 656,
    "declarations": "l: CONICSECTION; n: LINESEGMENT",
    "facts": "HalfFocalLength(l) = Abs(n)"
},
{
    "assertion": "XCoordinate ( POINT: T ) equals Intercept ( OverlappingLine ( LINESEGMENT: x ), AXIS: yAxis )",
    "id": 657,
    "declarations": "T: POINT; x: LINESEGMENT; yAxis: AXIS",
    "facts": "XCoordinate(T) = Intercept(OverlappingLine(x), yAxis)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: S ) equals RightFocus ( CONICSECTION: k )",
    "id": 658,
    "declarations": "S: LINESEGMENT; k: CONICSECTION",
    "facts": "MidPoint(S) = RightFocus(k)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: P ) equals LINESEGMENT: X",
    "id": 659,
    "declarations": "P: ELLIPSE; X: LINESEGMENT",
    "facts": "ImaginaryAxis(P) = X"
},
{
    "assertion": "VectorOf ( Incenter ( TRIANGLE: T ), Orthocenter ( TRIANGLE: N ) ) equals VECTOR: G",
    "id": 660,
    "declarations": "T: TRIANGLE; N: TRIANGLE; G: VECTOR",
    "facts": "VectorOf(Incenter(T), Orthocenter(N)) = G"
},
{
    "assertion": "Abs ( LINESEGMENT: y ) equals NUMBER: -73",
    "id": 661,
    "declarations": "y: LINESEGMENT; -73: NUMBER",
    "facts": "Abs(y) = -73"
},
{
    "assertion": "IsInTangent ( CIRCLE: w, CIRCLE: l ) equals BOOL: False",
    "id": 662,
    "declarations": "w: CIRCLE; l: CIRCLE; False: BOOL",
    "facts": "IsInTangent(w, l) = False"
},
{
    "assertion": "Quadrant ( Circumcenter ( TRIANGLE: s ) ) equals Min ( Diameter ( CIRCLE: W ) )",
    "id": 663,
    "declarations": "s: TRIANGLE; W: CIRCLE",
    "facts": "Quadrant(Circumcenter(s)) = Min(Diameter(W))"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: O ) equals LINESEGMENT: v",
    "id": 664,
    "declarations": "O: ELLIPSE; v: LINESEGMENT",
    "facts": "ImaginaryAxis(O) = v"
},
{
    "assertion": "IsInTangent ( CIRCLE: a, CIRCLE: d ) equals BOOL: True",
    "id": 665,
    "declarations": "a: CIRCLE; d: CIRCLE; True: BOOL",
    "facts": "IsInTangent(a, d) = True"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: O, TRIANGLE: m ) equals BOOL: True",
    "id": 666,
    "declarations": "O: CIRCLE; m: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(O, m) = True"
},
{
    "assertion": "Perimeter ( CONICSECTION: W ) equals Intercept ( TangentOfPoint ( POINT: D, CURVE: I ), AXIS: yAxis )",
    "id": 667,
    "declarations": "W: CONICSECTION; D: POINT; I: CURVE; yAxis: AXIS",
    "facts": "Perimeter(W) = Intercept(TangentOfPoint(D, I), yAxis)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: a ) equals AXIS: yAxis",
    "id": 668,
    "declarations": "a: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(a) = yAxis"
},
{
    "assertion": "UpperVertex ( CONICSECTION: K ) equals POINT: C",
    "id": 669,
    "declarations": "K: CONICSECTION; C: POINT",
    "facts": "UpperVertex(K) = C"
},
{
    "assertion": "Intercept ( LeftDirectrix ( CONICSECTION: M ), AXIS: xAxis ) equals YCoordinate ( UpperFocus ( CONICSECTION: r ) )",
    "id": 670,
    "declarations": "M: CONICSECTION; xAxis: AXIS; r: CONICSECTION",
    "facts": "Intercept(LeftDirectrix(M), xAxis) = YCoordinate(UpperFocus(r))"
},
{
    "assertion": "LineOf ( POINT: V, LowerFocus ( CONICSECTION: f ) ) equals LINE: H",
    "id": 671,
    "declarations": "V: POINT; f: CONICSECTION; H: LINE",
    "facts": "LineOf(V, LowerFocus(f)) = H"
},
{
    "assertion": "DotProduct ( VECTOR: X, VECTOR: M ) equals Inclination ( LINE: F )",
    "id": 672,
    "declarations": "X: VECTOR; M: VECTOR; F: LINE",
    "facts": "DotProduct(X, M) = Inclination(F)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: n ) equals ImaginaryAxis ( ELLIPSE: O )",
    "id": 673,
    "declarations": "n: ELLIPSE; O: ELLIPSE",
    "facts": "MinorAxis(n) = ImaginaryAxis(O)"
},
{
    "assertion": "FocalLength ( CONICSECTION: V ) equals Area ( CONICSECTION: B )",
    "id": 674,
    "declarations": "V: CONICSECTION; B: CONICSECTION",
    "facts": "FocalLength(V) = Area(B)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: D ) equals RightVertex ( CONICSECTION: N )",
    "id": 675,
    "declarations": "D: CONICSECTION; N: CONICSECTION",
    "facts": "UpperFocus(D) = RightVertex(N)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: F ) equals LowerVertex ( CONICSECTION: A )",
    "id": 676,
    "declarations": "F: CONICSECTION; A: CONICSECTION",
    "facts": "LeftFocus(F) = LowerVertex(A)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: I ) equals Circumcenter ( TRIANGLE: C )",
    "id": 677,
    "declarations": "I: TRIANGLE; C: TRIANGLE",
    "facts": "Orthocenter(I) = Circumcenter(C)"
},
{
    "assertion": "Intercept ( PerpendicularBisector ( LINESEGMENT: E ), AXIS: yAxis ) equals NUMBER: 15",
    "id": 678,
    "declarations": "E: LINESEGMENT; yAxis: AXIS; 15: NUMBER",
    "facts": "Intercept(PerpendicularBisector(E), yAxis) = 15"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: E ) equals RightDirectrix ( CONICSECTION: T )",
    "id": 679,
    "declarations": "E: LINESEGMENT; T: CONICSECTION",
    "facts": "OverlappingLine(E) = RightDirectrix(T)"
},
{
    "assertion": "NumIntersection ( CURVE: N, Locus ( LowerFocus ( CONICSECTION: h ) ) ) equals NUMBER: 22",
    "id": 680,
    "declarations": "N: CURVE; h: CONICSECTION; 22: NUMBER",
    "facts": "NumIntersection(N, Locus(LowerFocus(h))) = 22"
},
{
    "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: W ) ) equals InterReciprocal ( InterReciprocal ( lg ( Radius ( CIRCLE: i ) ) ) )",
    "id": 681,
    "declarations": "W: CONICSECTION; i: CIRCLE",
    "facts": "YCoordinate(LowerVertex(W)) = InterReciprocal(InterReciprocal(lg(Radius(i))))"
},
{
    "assertion": "NumIntersection ( Locus ( POINT: Q ), CURVE: w ) equals NUMBER: -65",
    "id": 682,
    "declarations": "Q: POINT; w: CURVE; -65: NUMBER",
    "facts": "NumIntersection(Locus(Q), w) = -65"
},
{
    "assertion": "Min ( HalfFocalLength ( CONICSECTION: v ) ) equals Radius ( CIRCLE: E )",
    "id": 683,
    "declarations": "v: CONICSECTION; E: CIRCLE",
    "facts": "Min(HalfFocalLength(v)) = Radius(E)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: c ) equals LINE: w",
    "id": 684,
    "declarations": "c: CONICSECTION; w: LINE",
    "facts": "LeftDirectrix(c) = w"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: S, CIRCLE: r ) equals BOOL: True",
    "id": 685,
    "declarations": "S: LINESEGMENT; r: CIRCLE; True: BOOL",
    "facts": "IsDiameter(S, r) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: H ) equals NUMBER: 6",
    "id": 686,
    "declarations": "H: CONICSECTION; 6: NUMBER",
    "facts": "HalfFocalLength(H) = 6"
},
{
    "assertion": "RightVertex ( CONICSECTION: q ) equals UpperVertex ( CONICSECTION: s )",
    "id": 687,
    "declarations": "q: CONICSECTION; s: CONICSECTION",
    "facts": "RightVertex(q) = UpperVertex(s)"
},
{
    "assertion": "Locus ( FootPoint ( LeftDirectrix ( CONICSECTION: f ), LINE: b ) ) equals Locus ( RightFocus ( CONICSECTION: y ) )",
    "id": 688,
    "declarations": "f: CONICSECTION; b: LINE; y: CONICSECTION",
    "facts": "Locus(FootPoint(LeftDirectrix(f), b)) = Locus(RightFocus(y))"
},
{
    "assertion": "Negation ( LineSegmentOf ( LeftVertex ( CONICSECTION: Z ), POINT: u ) equals LINESEGMENT: q ) equals BOOL: False",
    "id": 689,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: X, TRIANGLE: j ) equals BOOL: False",
    "id": 690,
    "declarations": "X: CIRCLE; j: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(X, j) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: N ) equals POINT: v",
    "id": 691,
    "declarations": "N: CONICSECTION; v: POINT",
    "facts": "LeftVertex(N) = v"
},
{
    "assertion": "MajorAxis ( ELLIPSE: w ) equals LINESEGMENT: P",
    "id": 692,
    "declarations": "w: ELLIPSE; P: LINESEGMENT",
    "facts": "MajorAxis(w) = P"
},
{
    "assertion": "Min ( NumIntersection ( CURVE: L, CURVE: j ) ) equals XCoordinate ( UpperVertex ( CONICSECTION: g ) )",
    "id": 693,
    "declarations": "L: CURVE; j: CURVE; g: CONICSECTION",
    "facts": "Min(NumIntersection(L, j)) = XCoordinate(UpperVertex(g))"
},
{
    "assertion": "Quadrant ( MidPoint ( LINESEGMENT: z ) ) equals Eccentricity ( CONICSECTION: t )",
    "id": 694,
    "declarations": "z: LINESEGMENT; t: CONICSECTION",
    "facts": "Quadrant(MidPoint(z)) = Eccentricity(t)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: E ) equals Circumcenter ( TRIANGLE: l )",
    "id": 696,
    "declarations": "E: TRIANGLE; l: TRIANGLE",
    "facts": "Orthocenter(E) = Circumcenter(l)"
},
{
    "assertion": "Projection ( Incenter ( TRIANGLE: q ), LeftDirectrix ( CONICSECTION: r ) ) equals UpperVertex ( CONICSECTION: t )",
    "id": 697,
    "declarations": "q: TRIANGLE; r: CONICSECTION; t: CONICSECTION",
    "facts": "Projection(Incenter(q), LeftDirectrix(r)) = UpperVertex(t)"
},
{
    "assertion": "Incenter ( TRIANGLE: R ) equals LowerVertex ( CONICSECTION: G )",
    "id": 698,
    "declarations": "R: TRIANGLE; G: CONICSECTION",
    "facts": "Incenter(R) = LowerVertex(G)"
},
{
    "assertion": "Center ( CONICSECTION: u ) equals Center ( CONICSECTION: i )",
    "id": 699,
    "declarations": "u: CONICSECTION; i: CONICSECTION",
    "facts": "Center(u) = Center(i)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: T ) equals LINE: j",
    "id": 700,
    "declarations": "T: HYPERBOLA; j: LINE",
    "facts": "Asymptote(T) = j"
},
{
    "assertion": "AngleOf ( LeftVertex ( CONICSECTION: K ), Circumcenter ( TRIANGLE: f ), POINT: S ) equals ApplyUnit ( Slope ( LINE: d ), DEGREESTR: degree )",
    "id": 701,
    "declarations": "K: CONICSECTION; f: TRIANGLE; S: POINT; d: LINE; degree: DEGREESTR",
    "facts": "AngleOf(LeftVertex(K), Circumcenter(f), S) = ApplyUnit(Slope(d), degree)"
},
{
    "assertion": "RightFocus ( CONICSECTION: I ) equals POINT: J",
    "id": 702,
    "declarations": "I: CONICSECTION; J: POINT",
    "facts": "RightFocus(I) = J"
},
{
    "assertion": "Negation ( NumIntersection ( CURVE: Z, LeftPart ( HYPERBOLA: O ) ) equals HalfFocalLength ( CONICSECTION: t ) ) equals BOOL: True",
    "id": 703,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Area ( CONICSECTION: t ) equals Abs ( MajorAxis ( ELLIPSE: c ) )",
    "id": 704,
    "declarations": "t: CONICSECTION; c: ELLIPSE",
    "facts": "Area(t) = Abs(MajorAxis(c))"
},
{
    "assertion": "IsPerpendicular ( LINE: I, TangentOnPoint ( UpperVertex ( CONICSECTION: O ), LeftPart ( HYPERBOLA: j ) ) ) equals BOOL: False",
    "id": 705,
    "declarations": "I: LINE; O: CONICSECTION; j: HYPERBOLA; False: BOOL",
    "facts": "IsPerpendicular(I, TangentOnPoint(UpperVertex(O), LeftPart(j))) = False"
},
{
    "assertion": "Min ( Min ( Distance ( POINT: s, Center ( CONICSECTION: J ) ) ) ) equals NUMBER: -66",
    "id": 706,
    "declarations": "s: POINT; J: CONICSECTION; -66: NUMBER",
    "facts": "Min(Min(Distance(s, Center(J)))) = -66"
},
{
    "assertion": "LowerFocus ( CONICSECTION: s ) equals LeftVertex ( CONICSECTION: r )",
    "id": 707,
    "declarations": "s: CONICSECTION; r: CONICSECTION",
    "facts": "LowerFocus(s) = LeftVertex(r)"
},
{
    "assertion": "Slope ( LINE: R ) equals NUMBER: 14",
    "id": 708,
    "declarations": "R: LINE; 14: NUMBER",
    "facts": "Slope(R) = 14"
},
{
    "assertion": "Slope ( LINE: W ) equals Slope ( PerpendicularBisector ( LINESEGMENT: T ) )",
    "id": 709,
    "declarations": "W: LINE; T: LINESEGMENT",
    "facts": "Slope(W) = Slope(PerpendicularBisector(T))"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: t ) ) equals LineOf ( Incenter ( TRIANGLE: n ), UpperVertex ( CONICSECTION: L ) )",
    "id": 710,
    "declarations": "t: ELLIPSE; n: TRIANGLE; L: CONICSECTION",
    "facts": "PerpendicularBisector(ImaginaryAxis(t)) = LineOf(Incenter(n), UpperVertex(L))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: B ) equals POINT: o",
    "id": 711,
    "declarations": "B: TRIANGLE; o: POINT",
    "facts": "Orthocenter(B) = o"
},
{
    "assertion": "And ( Focus ( CONICSECTION: h ) equals LowerVertex ( CONICSECTION: A ), IsInscribedCircle ( CIRCLE: U, TRIANGLE: D ) equals BOOL: True ) equals BOOL: False",
    "id": 712,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightVertex ( CONICSECTION: M ) equals Center ( CONICSECTION: t )",
    "id": 713,
    "declarations": "M: CONICSECTION; t: CONICSECTION",
    "facts": "RightVertex(M) = Center(t)"
},
{
    "assertion": "IsIntersect ( CURVE: O, CURVE: r ) equals BOOL: False",
    "id": 714,
    "declarations": "O: CURVE; r: CURVE; False: BOOL",
    "facts": "IsIntersect(O, r) = False"
},
{
    "assertion": "LeftPart ( HYPERBOLA: A ) equals CURVE: J",
    "id": 715,
    "declarations": "A: HYPERBOLA; J: CURVE",
    "facts": "LeftPart(A) = J"
},
{
    "assertion": "LeftFocus ( CONICSECTION: m ) equals POINT: H",
    "id": 716,
    "declarations": "m: CONICSECTION; H: POINT",
    "facts": "LeftFocus(m) = H"
},
{
    "assertion": "TriangleOf ( POINT: z, POINT: W, POINT: x ) equals TRIANGLE: h",
    "id": 717,
    "declarations": "z: POINT; W: POINT; x: POINT; h: TRIANGLE",
    "facts": "TriangleOf(z, W, x) = h"
},
{
    "assertion": "lg ( NUMBER: -74 ) equals NUMBER: -2",
    "id": 718,
    "declarations": "-74: NUMBER; -2: NUMBER",
    "facts": "lg(-74) = -2"
},
{
    "assertion": "RightFocus ( CONICSECTION: c ) equals POINT: w",
    "id": 719,
    "declarations": "c: CONICSECTION; w: POINT",
    "facts": "RightFocus(c) = w"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: I ) equals NUMBER: 77",
    "id": 720,
    "declarations": "I: CONICSECTION; 77: NUMBER",
    "facts": "HalfFocalLength(I) = 77"
},
{
    "assertion": "MajorAxis ( ELLIPSE: A ) equals LINESEGMENT: A",
    "id": 721,
    "declarations": "A: ELLIPSE; A: LINESEGMENT",
    "facts": "MajorAxis(A) = A"
},
{
    "assertion": "Abs ( LINESEGMENT: R ) equals NUMBER: -6",
    "id": 722,
    "declarations": "R: LINESEGMENT; -6: NUMBER",
    "facts": "Abs(R) = -6"
},
{
    "assertion": "Quadrant ( Incenter ( TRIANGLE: E ) ) equals NUMBER: 84",
    "id": 723,
    "declarations": "E: TRIANGLE; 84: NUMBER",
    "facts": "Quadrant(Incenter(E)) = 84"
},
{
    "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: S ) ) equals NUMBER: 86",
    "id": 724,
    "declarations": "S: CONICSECTION; 86: NUMBER",
    "facts": "XCoordinate(UpperVertex(S)) = 86"
},
{
    "assertion": "sqrt ( DotProduct ( VECTOR: g, VECTOR: i ) ) equals Abs ( LINESEGMENT: i )",
    "id": 725,
    "declarations": "g: VECTOR; i: VECTOR; i: LINESEGMENT",
    "facts": "sqrt(DotProduct(g, i)) = Abs(i)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: G ) equals LINE: U",
    "id": 726,
    "declarations": "G: LINESEGMENT; U: LINE",
    "facts": "PerpendicularBisector(G) = U"
},
{
    "assertion": "IsOutTangent ( CIRCLE: n, CIRCLE: Q ) equals BOOL: True",
    "id": 727,
    "declarations": "n: CIRCLE; Q: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(n, Q) = True"
},
{
    "assertion": "Negation ( ImaginaryAxis ( ELLIPSE: j ) equals LINESEGMENT: F ) equals BOOL: True",
    "id": 728,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "And ( UpperVertex ( CONICSECTION: K ) equals LowerFocus ( CONICSECTION: u ), And ( IsPerpendicular ( LINE: e, LINE: a ) equals BOOL: True, Intersection ( CURVE: r, CURVE: Z ) equals RightFocus ( CONICSECTION: k ) ) equals BOOL: True ) equals BOOL: False",
    "id": 729,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Negation ( UpperVertex ( CONICSECTION: Q ) equals RightFocus ( CONICSECTION: Y ) ) equals BOOL: False",
    "id": 730,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "TriangleOf ( POINT: k, MidPoint ( LINESEGMENT: R ), POINT: p ) equals TRIANGLE: Q",
    "id": 731,
    "declarations": "k: POINT; R: LINESEGMENT; p: POINT; Q: TRIANGLE",
    "facts": "TriangleOf(k, MidPoint(R), p) = Q"
},
{
    "assertion": "LowerFocus ( CONICSECTION: S ) equals Circumcenter ( TRIANGLE: X )",
    "id": 732,
    "declarations": "S: CONICSECTION; X: TRIANGLE",
    "facts": "LowerFocus(S) = Circumcenter(X)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: U ) equals RealAxis ( ELLIPSE: r )",
    "id": 733,
    "declarations": "U: ELLIPSE; r: ELLIPSE",
    "facts": "MinorAxis(U) = RealAxis(r)"
},
{
    "assertion": "YCoordinate ( POINT: d ) equals NumIntersection ( CURVE: Z, Locus ( LowerFocus ( CONICSECTION: v ) ) )",
    "id": 734,
    "declarations": "d: POINT; Z: CURVE; v: CONICSECTION",
    "facts": "YCoordinate(d) = NumIntersection(Z, Locus(LowerFocus(v)))"
},
{
    "assertion": "sqrt ( InterReciprocal ( Intercept ( LINE: h, AXIS: xAxis ) ) ) equals Length ( MinorAxis ( ELLIPSE: P ) )",
    "id": 735,
    "declarations": "h: LINE; xAxis: AXIS; P: ELLIPSE",
    "facts": "sqrt(InterReciprocal(Intercept(h, xAxis))) = Length(MinorAxis(P))"
},
{
    "assertion": "Length ( LineSegmentOf ( POINT: Z, UpperFocus ( CONICSECTION: h ) ) ) equals Perimeter ( CONICSECTION: h )",
    "id": 736,
    "declarations": "Z: POINT; h: CONICSECTION; h: CONICSECTION",
    "facts": "Length(LineSegmentOf(Z, UpperFocus(h))) = Perimeter(h)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: F ) equals POINT: F",
    "id": 737,
    "declarations": "F: CONICSECTION; F: POINT",
    "facts": "LeftVertex(F) = F"
},
{
    "assertion": "Directrix ( CONICSECTION: S ) equals LINE: H",
    "id": 738,
    "declarations": "S: CONICSECTION; H: LINE",
    "facts": "Directrix(S) = H"
},
{
    "assertion": "IsPerpendicular ( LINE: j, LINE: P ) equals BOOL: True",
    "id": 739,
    "declarations": "j: LINE; P: LINE; True: BOOL",
    "facts": "IsPerpendicular(j, P) = True"
},
{
    "assertion": "TangentOfPoint ( POINT: C, CURVE: r ) equals LeftDirectrix ( CONICSECTION: O )",
    "id": 740,
    "declarations": "C: POINT; r: CURVE; O: CONICSECTION",
    "facts": "TangentOfPoint(C, r) = LeftDirectrix(O)"
},
{
    "assertion": "RightPart ( HYPERBOLA: o ) equals LeftPart ( HYPERBOLA: O )",
    "id": 741,
    "declarations": "o: HYPERBOLA; O: HYPERBOLA",
    "facts": "RightPart(o) = LeftPart(O)"
},
{
    "assertion": "IsParallel ( RightDirectrix ( CONICSECTION: m ), LINE: G ) equals BOOL: False",
    "id": 742,
    "declarations": "m: CONICSECTION; G: LINE; False: BOOL",
    "facts": "IsParallel(RightDirectrix(m), G) = False"
},
{
    "assertion": "InterReciprocal ( NUMBER: 47 ) equals sqrt ( NUMBER: 50 )",
    "id": 743,
    "declarations": "47: NUMBER; 50: NUMBER",
    "facts": "InterReciprocal(47) = sqrt(50)"
},
{
    "assertion": "FocalLength ( CONICSECTION: C ) equals Diameter ( CIRCLE: X )",
    "id": 744,
    "declarations": "C: CONICSECTION; X: CIRCLE",
    "facts": "FocalLength(C) = Diameter(X)"
},
{
    "assertion": "Min ( Abs ( LINESEGMENT: D ) ) equals NUMBER: -5",
    "id": 745,
    "declarations": "D: LINESEGMENT; -5: NUMBER",
    "facts": "Min(Abs(D)) = -5"
},
{
    "assertion": "IsPerpendicular ( LINE: X, LINE: G ) equals BOOL: False",
    "id": 746,
    "declarations": "X: LINE; G: LINE; False: BOOL",
    "facts": "IsPerpendicular(X, G) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: Q, TRIANGLE: t ) equals BOOL: True",
    "id": 747,
    "declarations": "Q: CIRCLE; t: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(Q, t) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: n ) equals POINT: v",
    "id": 748,
    "declarations": "n: TRIANGLE; v: POINT",
    "facts": "Incenter(n) = v"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: j ) equals TangentOnPoint ( POINT: V, RightPart ( HYPERBOLA: d ) )",
    "id": 749,
    "declarations": "j: CONICSECTION; V: POINT; d: HYPERBOLA",
    "facts": "RightDirectrix(j) = TangentOnPoint(V, RightPart(d))"
},
{
    "assertion": "XCoordinate ( POINT: w ) equals NUMBER: -90",
    "id": 750,
    "declarations": "w: POINT; -90: NUMBER",
    "facts": "XCoordinate(w) = -90"
},
{
    "assertion": "LowerFocus ( CONICSECTION: L ) equals POINT: A",
    "id": 752,
    "declarations": "L: CONICSECTION; A: POINT",
    "facts": "LowerFocus(L) = A"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: G ) equals MajorAxis ( ELLIPSE: T )",
    "id": 753,
    "declarations": "G: ELLIPSE; T: ELLIPSE",
    "facts": "ImaginaryAxis(G) = MajorAxis(T)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Y ) equals LINE: a",
    "id": 754,
    "declarations": "Y: CONICSECTION; a: LINE",
    "facts": "LeftDirectrix(Y) = a"
},
{
    "assertion": "RightVertex ( CONICSECTION: T ) equals RightVertex ( CONICSECTION: I )",
    "id": 755,
    "declarations": "T: CONICSECTION; I: CONICSECTION",
    "facts": "RightVertex(T) = RightVertex(I)"
},
{
    "assertion": "And ( Inclination ( LINE: r ) equals sqrt ( Diameter ( CIRCLE: h ) ), MinorAxis ( ELLIPSE: r ) equals LINESEGMENT: V ) equals BOOL: True",
    "id": 756,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LocusEquation ( POINT: H ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 757,
    "declarations": "H: POINT; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "LocusEquation(H) = x*space+*spacey*space=*space5"
},
{
    "assertion": "Slope ( LINE: b ) equals NUMBER: 25",
    "id": 758,
    "declarations": "b: LINE; 25: NUMBER",
    "facts": "Slope(b) = 25"
},
{
    "assertion": "AngleOf ( UpperFocus ( CONICSECTION: i ), POINT: l, LowerVertex ( CONICSECTION: D ) ) equals AngleOf ( MidPoint ( LINESEGMENT: G ), POINT: W, RightFocus ( CONICSECTION: g ) )",
    "id": 759,
    "declarations": "i: CONICSECTION; l: POINT; D: CONICSECTION; G: LINESEGMENT; W: POINT; g: CONICSECTION",
    "facts": "AngleOf(UpperFocus(i), l, LowerVertex(D)) = AngleOf(MidPoint(G), W, RightFocus(g))"
},
{
    "assertion": "IsIntersect ( CURVE: v, CURVE: d ) equals BOOL: False",
    "id": 760,
    "declarations": "v: CURVE; d: CURVE; False: BOOL",
    "facts": "IsIntersect(v, d) = False"
},
{
    "assertion": "CircumCircle ( TRIANGLE: H ) equals CIRCLE: t",
    "id": 761,
    "declarations": "H: TRIANGLE; t: CIRCLE",
    "facts": "CircumCircle(H) = t"
},
{
    "assertion": "Slope ( LINE: S ) equals XCoordinate ( UpperFocus ( CONICSECTION: D ) )",
    "id": 762,
    "declarations": "S: LINE; D: CONICSECTION",
    "facts": "Slope(S) = XCoordinate(UpperFocus(D))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: L, TriangleOf ( POINT: x, POINT: n, Orthocenter ( TRIANGLE: O ) ) ) equals BOOL: True",
    "id": 763,
    "declarations": "L: CIRCLE; x: POINT; n: POINT; O: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(L, TriangleOf(x, n, Orthocenter(O))) = True"
},
{
    "assertion": "RealAxis ( ELLIPSE: n ) equals InterceptChord ( LINE: D, CONICSECTION: x )",
    "id": 764,
    "declarations": "n: ELLIPSE; D: LINE; x: CONICSECTION",
    "facts": "RealAxis(n) = InterceptChord(D, x)"
},
{
    "assertion": "Abs ( LINESEGMENT: d ) equals NUMBER: 48",
    "id": 765,
    "declarations": "d: LINESEGMENT; 48: NUMBER",
    "facts": "Abs(d) = 48"
},
{
    "assertion": "VectorOf ( POINT: K, Orthocenter ( TRIANGLE: p ) ) equals VECTOR: R",
    "id": 766,
    "declarations": "K: POINT; p: TRIANGLE; R: VECTOR",
    "facts": "VectorOf(K, Orthocenter(p)) = R"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: W ) equals RightDirectrix ( CONICSECTION: N )",
    "id": 767,
    "declarations": "W: CONICSECTION; N: CONICSECTION",
    "facts": "LeftDirectrix(W) = RightDirectrix(N)"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: Z ) ) equals NUMBER: 43",
    "id": 768,
    "declarations": "Z: TRIANGLE; 43: NUMBER",
    "facts": "Radius(CircumCircle(Z)) = 43"
},
{
    "assertion": "Slope ( OverlappingLine ( LINESEGMENT: b ) ) equals HalfFocalLength ( CONICSECTION: c )",
    "id": 769,
    "declarations": "b: LINESEGMENT; c: CONICSECTION",
    "facts": "Slope(OverlappingLine(b)) = HalfFocalLength(c)"
},
{
    "assertion": "MidPoint ( ImaginaryAxis ( ELLIPSE: n ) ) equals LowerVertex ( CONICSECTION: d )",
    "id": 770,
    "declarations": "n: ELLIPSE; d: CONICSECTION",
    "facts": "MidPoint(ImaginaryAxis(n)) = LowerVertex(d)"
},
{
    "assertion": "Focus ( CONICSECTION: R ) equals LeftFocus ( CONICSECTION: j )",
    "id": 771,
    "declarations": "R: CONICSECTION; j: CONICSECTION",
    "facts": "Focus(R) = LeftFocus(j)"
},
{
    "assertion": "Vertex ( CONICSECTION: T ) equals POINT: o",
    "id": 772,
    "declarations": "T: CONICSECTION; o: POINT",
    "facts": "Vertex(T) = o"
},
{
    "assertion": "lg ( sqrt ( lg ( lg ( NUMBER: 12 ) ) ) ) equals Min ( NUMBER: 28 )",
    "id": 773,
    "declarations": "12: NUMBER; 28: NUMBER",
    "facts": "lg(sqrt(lg(lg(12)))) = Min(28)"
},
{
    "assertion": "Quadrant ( POINT: t ) equals NUMBER: 28",
    "id": 774,
    "declarations": "t: POINT; 28: NUMBER",
    "facts": "Quadrant(t) = 28"
},
{
    "assertion": "LineOf ( POINT: t, LowerVertex ( CONICSECTION: W ) ) equals LINE: b",
    "id": 775,
    "declarations": "t: POINT; W: CONICSECTION; b: LINE",
    "facts": "LineOf(t, LowerVertex(W)) = b"
},
{
    "assertion": "IsChordOf ( MinorAxis ( ELLIPSE: R ), CONICSECTION: Y ) equals BOOL: False",
    "id": 776,
    "declarations": "R: ELLIPSE; Y: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(MinorAxis(R), Y) = False"
},
{
    "assertion": "Eccentricity ( CONICSECTION: y ) equals NUMBER: -67",
    "id": 777,
    "declarations": "y: CONICSECTION; -67: NUMBER",
    "facts": "Eccentricity(y) = -67"
},
{
    "assertion": "Slope ( LINE: i ) equals NUMBER: -17",
    "id": 778,
    "declarations": "i: LINE; -17: NUMBER",
    "facts": "Slope(i) = -17"
},
{
    "assertion": "LowerFocus ( CONICSECTION: B ) equals Center ( CONICSECTION: T )",
    "id": 779,
    "declarations": "B: CONICSECTION; T: CONICSECTION",
    "facts": "LowerFocus(B) = Center(T)"
},
{
    "assertion": "IsChordOf ( InterceptChord ( LINE: u, CONICSECTION: F ), CONICSECTION: N ) equals BOOL: False",
    "id": 780,
    "declarations": "u: LINE; F: CONICSECTION; N: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(InterceptChord(u, F), N) = False"
},
{
    "assertion": "lg ( Inclination ( PerpendicularBisector ( MajorAxis ( ELLIPSE: U ) ) ) ) equals Distance ( POINT: I, Incenter ( TRIANGLE: r ) )",
    "id": 781,
    "declarations": "U: ELLIPSE; I: POINT; r: TRIANGLE",
    "facts": "lg(Inclination(PerpendicularBisector(MajorAxis(U)))) = Distance(I, Incenter(r))"
},
{
    "assertion": "Incenter ( TRIANGLE: r ) equals POINT: Y",
    "id": 782,
    "declarations": "r: TRIANGLE; Y: POINT",
    "facts": "Incenter(r) = Y"
},
{
    "assertion": "sqrt ( NUMBER: 27 ) equals Quadrant ( POINT: h )",
    "id": 783,
    "declarations": "27: NUMBER; h: POINT",
    "facts": "sqrt(27) = Quadrant(h)"
},
{
    "assertion": "TangentOnPoint ( MidPoint ( LINESEGMENT: E ), CURVE: N ) equals LINE: H",
    "id": 784,
    "declarations": "E: LINESEGMENT; N: CURVE; H: LINE",
    "facts": "TangentOnPoint(MidPoint(E), N) = H"
},
{
    "assertion": "Projection ( LeftVertex ( CONICSECTION: P ), LINE: S ) equals LeftVertex ( CONICSECTION: V )",
    "id": 785,
    "declarations": "P: CONICSECTION; S: LINE; V: CONICSECTION",
    "facts": "Projection(LeftVertex(P), S) = LeftVertex(V)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: K ) equals POINT: J",
    "id": 786,
    "declarations": "K: CONICSECTION; J: POINT",
    "facts": "UpperVertex(K) = J"
},
{
    "assertion": "YCoordinate ( POINT: X ) equals Perimeter ( CONICSECTION: t )",
    "id": 787,
    "declarations": "X: POINT; t: CONICSECTION",
    "facts": "YCoordinate(X) = Perimeter(t)"
},
{
    "assertion": "InterceptChord ( LINE: z, CONICSECTION: x ) equals ImaginaryAxis ( ELLIPSE: H )",
    "id": 788,
    "declarations": "z: LINE; x: CONICSECTION; H: ELLIPSE",
    "facts": "InterceptChord(z, x) = ImaginaryAxis(H)"
},
{
    "assertion": "sqrt ( Length ( LINESEGMENT: r ) ) equals sqrt ( Abs ( LINESEGMENT: c ) )",
    "id": 789,
    "declarations": "r: LINESEGMENT; c: LINESEGMENT",
    "facts": "sqrt(Length(r)) = sqrt(Abs(c))"
},
{
    "assertion": "Incenter ( TRIANGLE: Y ) equals Orthocenter ( TRIANGLE: J )",
    "id": 790,
    "declarations": "Y: TRIANGLE; J: TRIANGLE",
    "facts": "Incenter(Y) = Orthocenter(J)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: T ) equals Orthocenter ( TRIANGLE: j )",
    "id": 791,
    "declarations": "T: TRIANGLE; j: TRIANGLE",
    "facts": "Circumcenter(T) = Orthocenter(j)"
},
{
    "assertion": "Diameter ( CIRCLE: K ) equals DotProduct ( VECTOR: O, VECTOR: T )",
    "id": 792,
    "declarations": "K: CIRCLE; O: VECTOR; T: VECTOR",
    "facts": "Diameter(K) = DotProduct(O, T)"
},
{
    "assertion": "AngleOf ( Circumcenter ( TRIANGLE: C ), LeftFocus ( CONICSECTION: G ), LowerFocus ( CONICSECTION: E ) ) equals ApplyUnit ( sqrt ( FocalLength ( CONICSECTION: l ) ), DEGREESTR: degree )",
    "id": 793,
    "declarations": "C: TRIANGLE; G: CONICSECTION; E: CONICSECTION; l: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(Circumcenter(C), LeftFocus(G), LowerFocus(E)) = ApplyUnit(sqrt(FocalLength(l)), degree)"
},
{
    "assertion": "LineOf ( MidPoint ( LINESEGMENT: S ), Circumcenter ( TRIANGLE: k ) ) equals LeftDirectrix ( CONICSECTION: h )",
    "id": 794,
    "declarations": "S: LINESEGMENT; k: TRIANGLE; h: CONICSECTION",
    "facts": "LineOf(MidPoint(S), Circumcenter(k)) = LeftDirectrix(h)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: p, CIRCLE: P ) equals BOOL: False",
    "id": 795,
    "declarations": "p: CIRCLE; P: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(p, P) = False"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: y ) equals LINESEGMENT: E",
    "id": 796,
    "declarations": "y: ELLIPSE; E: LINESEGMENT",
    "facts": "ImaginaryAxis(y) = E"
},
{
    "assertion": "LowerFocus ( CONICSECTION: y ) equals POINT: r",
    "id": 797,
    "declarations": "y: CONICSECTION; r: POINT",
    "facts": "LowerFocus(y) = r"
},
{
    "assertion": "Vertex ( CONICSECTION: A ) equals POINT: L",
    "id": 798,
    "declarations": "A: CONICSECTION; L: POINT",
    "facts": "Vertex(A) = L"
},
{
    "assertion": "Slope ( LeftDirectrix ( CONICSECTION: m ) ) equals Eccentricity ( CONICSECTION: z )",
    "id": 799,
    "declarations": "m: CONICSECTION; z: CONICSECTION",
    "facts": "Slope(LeftDirectrix(m)) = Eccentricity(z)"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: F ) ) equals Diameter ( CIRCLE: C )",
    "id": 800,
    "declarations": "F: ELLIPSE; C: CIRCLE",
    "facts": "Abs(MinorAxis(F)) = Diameter(C)"
},
{
    "assertion": "Abs ( LINESEGMENT: D ) equals NUMBER: -91",
    "id": 801,
    "declarations": "D: LINESEGMENT; -91: NUMBER",
    "facts": "Abs(D) = -91"
},
{
    "assertion": "MajorAxis ( ELLIPSE: W ) equals ImaginaryAxis ( ELLIPSE: Q )",
    "id": 802,
    "declarations": "W: ELLIPSE; Q: ELLIPSE",
    "facts": "MajorAxis(W) = ImaginaryAxis(Q)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: w, CONICSECTION: o ) equals BOOL: True",
    "id": 803,
    "declarations": "w: LINESEGMENT; o: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(w, o) = True"
},
{
    "assertion": "Intercept ( LINE: m, AXIS: yAxis ) equals Min ( Abs ( LINESEGMENT: y ) )",
    "id": 804,
    "declarations": "m: LINE; yAxis: AXIS; y: LINESEGMENT",
    "facts": "Intercept(m, yAxis) = Min(Abs(y))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: a ) equals LINESEGMENT: K",
    "id": 805,
    "declarations": "a: ELLIPSE; K: LINESEGMENT",
    "facts": "MinorAxis(a) = K"
},
{
    "assertion": "MajorAxis ( ELLIPSE: i ) equals LINESEGMENT: v",
    "id": 806,
    "declarations": "i: ELLIPSE; v: LINESEGMENT",
    "facts": "MajorAxis(i) = v"
},
{
    "assertion": "DotProduct ( VectorOf ( LeftFocus ( CONICSECTION: e ), RightVertex ( CONICSECTION: L ) ), VECTOR: o ) equals Quadrant ( MidPoint ( LINESEGMENT: n ) )",
    "id": 807,
    "declarations": "e: CONICSECTION; L: CONICSECTION; o: VECTOR; n: LINESEGMENT",
    "facts": "DotProduct(VectorOf(LeftFocus(e), RightVertex(L)), o) = Quadrant(MidPoint(n))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: G ) equals LeftFocus ( CONICSECTION: w )",
    "id": 808,
    "declarations": "G: TRIANGLE; w: CONICSECTION",
    "facts": "Circumcenter(G) = LeftFocus(w)"
},
{
    "assertion": "Min ( NUMBER: 94 ) equals Quadrant ( POINT: A )",
    "id": 809,
    "declarations": "94: NUMBER; A: POINT",
    "facts": "Min(94) = Quadrant(A)"
},
{
    "assertion": "And ( IsTangent ( LINE: N, CONICSECTION: f ) equals BOOL: False, Area ( CONICSECTION: x ) equals NUMBER: 38 ) equals BOOL: True",
    "id": 810,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Intersection ( CURVE: X, CURVE: d ) equals FootPoint ( LineOf ( UpperVertex ( CONICSECTION: a ), LowerVertex ( CONICSECTION: j ) ), LINE: u )",
    "id": 811,
    "declarations": "X: CURVE; d: CURVE; a: CONICSECTION; j: CONICSECTION; u: LINE",
    "facts": "Intersection(X, d) = FootPoint(LineOf(UpperVertex(a), LowerVertex(j)), u)"
},
{
    "assertion": "Diameter ( CIRCLE: c ) equals HalfFocalLength ( CONICSECTION: R )",
    "id": 812,
    "declarations": "c: CIRCLE; R: CONICSECTION",
    "facts": "Diameter(c) = HalfFocalLength(R)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: o, CIRCLE: q ) equals BOOL: True",
    "id": 813,
    "declarations": "o: LINESEGMENT; q: CIRCLE; True: BOOL",
    "facts": "IsDiameter(o, q) = True"
},
{
    "assertion": "LineSegmentOf ( RightFocus ( CONICSECTION: n ), RightFocus ( CONICSECTION: h ) ) equals LINESEGMENT: s",
    "id": 814,
    "declarations": "n: CONICSECTION; h: CONICSECTION; s: LINESEGMENT",
    "facts": "LineSegmentOf(RightFocus(n), RightFocus(h)) = s"
},
{
    "assertion": "LeftVertex ( CONICSECTION: q ) equals LeftVertex ( CONICSECTION: K )",
    "id": 815,
    "declarations": "q: CONICSECTION; K: CONICSECTION",
    "facts": "LeftVertex(q) = LeftVertex(K)"
},
{
    "assertion": "FocalLength ( CONICSECTION: g ) equals InterReciprocal ( NUMBER: -61 )",
    "id": 816,
    "declarations": "g: CONICSECTION; -61: NUMBER",
    "facts": "FocalLength(g) = InterReciprocal(-61)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: W ) equals Perimeter ( CONICSECTION: q )",
    "id": 817,
    "declarations": "W: CONICSECTION; q: CONICSECTION",
    "facts": "HalfFocalLength(W) = Perimeter(q)"
},
{
    "assertion": "NumIntersection ( CURVE: c, CURVE: j ) equals Length ( LINESEGMENT: A )",
    "id": 818,
    "declarations": "c: CURVE; j: CURVE; A: LINESEGMENT",
    "facts": "NumIntersection(c, j) = Length(A)"
},
{
    "assertion": "FocalLength ( CONICSECTION: V ) equals lg ( lg ( NUMBER: -68 ) )",
    "id": 819,
    "declarations": "V: CONICSECTION; -68: NUMBER",
    "facts": "FocalLength(V) = lg(lg(-68))"
},
{
    "assertion": "Focus ( CONICSECTION: B ) equals LeftVertex ( CONICSECTION: D )",
    "id": 820,
    "declarations": "B: CONICSECTION; D: CONICSECTION",
    "facts": "Focus(B) = LeftVertex(D)"
},
{
    "assertion": "IsPerpendicular ( LINE: g, LINE: u ) equals BOOL: False",
    "id": 821,
    "declarations": "g: LINE; u: LINE; False: BOOL",
    "facts": "IsPerpendicular(g, u) = False"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: W ) equals LINE: A",
    "id": 822,
    "declarations": "W: CONICSECTION; A: LINE",
    "facts": "LeftDirectrix(W) = A"
},
{
    "assertion": "Eccentricity ( CONICSECTION: T ) equals InterReciprocal ( Inclination ( LINE: A ) )",
    "id": 823,
    "declarations": "T: CONICSECTION; A: LINE",
    "facts": "Eccentricity(T) = InterReciprocal(Inclination(A))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: W ) equals LINE: q",
    "id": 824,
    "declarations": "W: CONICSECTION; q: LINE",
    "facts": "RightDirectrix(W) = q"
},
{
    "assertion": "Abs ( LINESEGMENT: i ) equals NUMBER: -53",
    "id": 825,
    "declarations": "i: LINESEGMENT; -53: NUMBER",
    "facts": "Abs(i) = -53"
},
{
    "assertion": "Circumcenter ( TRIANGLE: E ) equals MidPoint ( RealAxis ( ELLIPSE: R ) )",
    "id": 826,
    "declarations": "E: TRIANGLE; R: ELLIPSE",
    "facts": "Circumcenter(E) = MidPoint(RealAxis(R))"
},
{
    "assertion": "Perimeter ( CONICSECTION: X ) equals Radius ( CIRCLE: A )",
    "id": 827,
    "declarations": "X: CONICSECTION; A: CIRCLE",
    "facts": "Perimeter(X) = Radius(A)"
},
{
    "assertion": "Directrix ( CONICSECTION: K ) equals LINE: a",
    "id": 828,
    "declarations": "K: CONICSECTION; a: LINE",
    "facts": "Directrix(K) = a"
},
{
    "assertion": "LocusEquation ( POINT: t ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 829,
    "declarations": "t: POINT; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "LocusEquation(t) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "And ( XCoordinate ( POINT: W ) equals Min ( NUMBER: -27 ), RightDirectrix ( CONICSECTION: U ) equals PerpendicularBisector ( MajorAxis ( ELLIPSE: W ) ) ) equals BOOL: True",
    "id": 830,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "InterReciprocal ( Area ( CONICSECTION: X ) ) equals Eccentricity ( CONICSECTION: J )",
    "id": 831,
    "declarations": "X: CONICSECTION; J: CONICSECTION",
    "facts": "InterReciprocal(Area(X)) = Eccentricity(J)"
},
{
    "assertion": "Negation ( And ( IsCircumCircle ( CIRCLE: h, TRIANGLE: E ) equals BOOL: False, IsInscribedCircle ( CIRCLE: y, TRIANGLE: c ) equals BOOL: False ) equals BOOL: True ) equals BOOL: True",
    "id": 832,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "UpperFocus ( CONICSECTION: u ) equals POINT: v",
    "id": 833,
    "declarations": "u: CONICSECTION; v: POINT",
    "facts": "UpperFocus(u) = v"
},
{
    "assertion": "Eccentricity ( CONICSECTION: K ) equals Abs ( LINESEGMENT: a )",
    "id": 834,
    "declarations": "K: CONICSECTION; a: LINESEGMENT",
    "facts": "Eccentricity(K) = Abs(a)"
},
{
    "assertion": "PointOnCurve ( FootPoint ( LINE: q, LINE: Z ), LeftPart ( HYPERBOLA: f ) ) equals BOOL: False",
    "id": 835,
    "declarations": "q: LINE; Z: LINE; f: HYPERBOLA; False: BOOL",
    "facts": "PointOnCurve(FootPoint(q, Z), LeftPart(f)) = False"
},
{
    "assertion": "Diameter ( CIRCLE: h ) equals Quadrant ( POINT: k )",
    "id": 836,
    "declarations": "h: CIRCLE; k: POINT",
    "facts": "Diameter(h) = Quadrant(k)"
},
{
    "assertion": "Slope ( LINE: Z ) equals NUMBER: 10",
    "id": 837,
    "declarations": "Z: LINE; 10: NUMBER",
    "facts": "Slope(Z) = 10"
},
{
    "assertion": "And ( Diameter ( CIRCLE: e ) equals NUMBER: 60, Expression ( Locus ( UpperFocus ( CONICSECTION: T ) ) ) equals EXPRESSION: x*space+*spacey^2*space=*space1 ) equals BOOL: False",
    "id": 838,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Min ( NUMBER: 94 ) equals NUMBER: 63",
    "id": 839,
    "declarations": "94: NUMBER; 63: NUMBER",
    "facts": "Min(94) = 63"
},
{
    "assertion": "Eccentricity ( CONICSECTION: p ) equals NUMBER: 100",
    "id": 840,
    "declarations": "p: CONICSECTION; 100: NUMBER",
    "facts": "Eccentricity(p) = 100"
},
{
    "assertion": "Directrix ( CONICSECTION: T ) equals TangentOfPoint ( POINT: a, CURVE: z )",
    "id": 841,
    "declarations": "T: CONICSECTION; a: POINT; z: CURVE",
    "facts": "Directrix(T) = TangentOfPoint(a, z)"
},
{
    "assertion": "Center ( CONICSECTION: b ) equals POINT: E",
    "id": 842,
    "declarations": "b: CONICSECTION; E: POINT",
    "facts": "Center(b) = E"
},
{
    "assertion": "LowerVertex ( CONICSECTION: X ) equals Incenter ( TRIANGLE: A )",
    "id": 843,
    "declarations": "X: CONICSECTION; A: TRIANGLE",
    "facts": "LowerVertex(X) = Incenter(A)"
},
{
    "assertion": "RightFocus ( CONICSECTION: P ) equals LowerVertex ( CONICSECTION: W )",
    "id": 844,
    "declarations": "P: CONICSECTION; W: CONICSECTION",
    "facts": "RightFocus(P) = LowerVertex(W)"
},
{
    "assertion": "Quadrant ( LeftFocus ( CONICSECTION: w ) ) equals sqrt ( FocalLength ( CONICSECTION: M ) )",
    "id": 845,
    "declarations": "w: CONICSECTION; M: CONICSECTION",
    "facts": "Quadrant(LeftFocus(w)) = sqrt(FocalLength(M))"
},
{
    "assertion": "Focus ( CONICSECTION: Q ) equals Circumcenter ( TriangleOf ( UpperVertex ( CONICSECTION: F ), POINT: F, POINT: h ) )",
    "id": 846,
    "declarations": "Q: CONICSECTION; F: CONICSECTION; F: POINT; h: POINT",
    "facts": "Focus(Q) = Circumcenter(TriangleOf(UpperVertex(F), F, h))"
},
{
    "assertion": "IsPerpendicular ( RightDirectrix ( CONICSECTION: r ), LINE: D ) equals BOOL: False",
    "id": 847,
    "declarations": "r: CONICSECTION; D: LINE; False: BOOL",
    "facts": "IsPerpendicular(RightDirectrix(r), D) = False"
},
{
    "assertion": "InterReciprocal ( HalfFocalLength ( CONICSECTION: U ) ) equals NUMBER: -40",
    "id": 848,
    "declarations": "U: CONICSECTION; -40: NUMBER",
    "facts": "InterReciprocal(HalfFocalLength(U)) = -40"
},
{
    "assertion": "Center ( CONICSECTION: a ) equals POINT: F",
    "id": 849,
    "declarations": "a: CONICSECTION; F: POINT",
    "facts": "Center(a) = F"
},
{
    "assertion": "YCoordinate ( UpperFocus ( CONICSECTION: G ) ) equals Perimeter ( CONICSECTION: O )",
    "id": 850,
    "declarations": "G: CONICSECTION; O: CONICSECTION",
    "facts": "YCoordinate(UpperFocus(G)) = Perimeter(O)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -19, DEGREESTR: degree )",
    "id": 851,
    "declarations": "-19: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-19, degree) = None"
},
{
    "assertion": "IsInTangent ( CIRCLE: r, CIRCLE: x ) equals BOOL: False",
    "id": 852,
    "declarations": "r: CIRCLE; x: CIRCLE; False: BOOL",
    "facts": "IsInTangent(r, x) = False"
},
{
    "assertion": "Center ( CONICSECTION: j ) equals POINT: h",
    "id": 853,
    "declarations": "j: CONICSECTION; h: POINT",
    "facts": "Center(j) = h"
},
{
    "assertion": "And ( Endpoint ( ImaginaryAxis ( ELLIPSE: l ) ) equals POINT: D, MidPoint ( LINESEGMENT: d ) equals POINT: q ) equals BOOL: True",
    "id": 854,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightVertex ( CONICSECTION: s ) equals LowerVertex ( CONICSECTION: j )",
    "id": 855,
    "declarations": "s: CONICSECTION; j: CONICSECTION",
    "facts": "RightVertex(s) = LowerVertex(j)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: D ) equals POINT: q",
    "id": 856,
    "declarations": "D: CONICSECTION; q: POINT",
    "facts": "UpperFocus(D) = q"
},
{
    "assertion": "MinorAxis ( ELLIPSE: K ) equals LINESEGMENT: F",
    "id": 857,
    "declarations": "K: ELLIPSE; F: LINESEGMENT",
    "facts": "MinorAxis(K) = F"
},
{
    "assertion": "RightFocus ( CONICSECTION: h ) equals RightVertex ( CONICSECTION: q )",
    "id": 858,
    "declarations": "h: CONICSECTION; q: CONICSECTION",
    "facts": "RightFocus(h) = RightVertex(q)"
},
{
    "assertion": "Focus ( CONICSECTION: s ) equals FootPoint ( OverlappingLine ( LINESEGMENT: v ), LINE: C )",
    "id": 859,
    "declarations": "s: CONICSECTION; v: LINESEGMENT; C: LINE",
    "facts": "Focus(s) = FootPoint(OverlappingLine(v), C)"
},
{
    "assertion": "DotProduct ( VECTOR: Q, VECTOR: M ) equals Min ( YCoordinate ( POINT: Z ) )",
    "id": 860,
    "declarations": "Q: VECTOR; M: VECTOR; Z: POINT",
    "facts": "DotProduct(Q, M) = Min(YCoordinate(Z))"
},
{
    "assertion": "IsInTangent ( CIRCLE: n, CIRCLE: G ) equals BOOL: True",
    "id": 862,
    "declarations": "n: CIRCLE; G: CIRCLE; True: BOOL",
    "facts": "IsInTangent(n, G) = True"
},
{
    "assertion": "VectorOf ( Incenter ( TRIANGLE: X ), POINT: S ) equals VECTOR: g",
    "id": 863,
    "declarations": "X: TRIANGLE; S: POINT; g: VECTOR",
    "facts": "VectorOf(Incenter(X), S) = g"
},
{
    "assertion": "FocalLength ( CONICSECTION: i ) equals Area ( CONICSECTION: Q )",
    "id": 864,
    "declarations": "i: CONICSECTION; Q: CONICSECTION",
    "facts": "FocalLength(i) = Area(Q)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: D ) equals MidPoint ( RealAxis ( ELLIPSE: A ) )",
    "id": 865,
    "declarations": "D: CONICSECTION; A: ELLIPSE",
    "facts": "LowerFocus(D) = MidPoint(RealAxis(A))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Y ) equals LowerFocus ( CONICSECTION: L )",
    "id": 866,
    "declarations": "Y: CONICSECTION; L: CONICSECTION",
    "facts": "LeftFocus(Y) = LowerFocus(L)"
},
{
    "assertion": "IsInTangent ( CircumCircle ( TRIANGLE: c ), CIRCLE: p ) equals BOOL: False",
    "id": 867,
    "declarations": "c: TRIANGLE; p: CIRCLE; False: BOOL",
    "facts": "IsInTangent(CircumCircle(c), p) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: b ) equals POINT: r",
    "id": 868,
    "declarations": "b: CONICSECTION; r: POINT",
    "facts": "UpperFocus(b) = r"
},
{
    "assertion": "DotProduct ( VECTOR: C, VECTOR: H ) equals NUMBER: 17",
    "id": 869,
    "declarations": "C: VECTOR; H: VECTOR; 17: NUMBER",
    "facts": "DotProduct(C, H) = 17"
},
{
    "assertion": "VectorOf ( POINT: N, Circumcenter ( TRIANGLE: M ) ) equals VECTOR: h",
    "id": 870,
    "declarations": "N: POINT; M: TRIANGLE; h: VECTOR",
    "facts": "VectorOf(N, Circumcenter(M)) = h"
},
{
    "assertion": "Abs ( LINESEGMENT: O ) equals NUMBER: 86",
    "id": 871,
    "declarations": "O: LINESEGMENT; 86: NUMBER",
    "facts": "Abs(O) = 86"
},
{
    "assertion": "Eccentricity ( CONICSECTION: T ) equals Abs ( RealAxis ( ELLIPSE: Q ) )",
    "id": 872,
    "declarations": "T: CONICSECTION; Q: ELLIPSE",
    "facts": "Eccentricity(T) = Abs(RealAxis(Q))"
},
{
    "assertion": "IsInTangent ( CIRCLE: F, CIRCLE: d ) equals BOOL: False",
    "id": 873,
    "declarations": "F: CIRCLE; d: CIRCLE; False: BOOL",
    "facts": "IsInTangent(F, d) = False"
},
{
    "assertion": "LeftPart ( HYPERBOLA: R ) equals CURVE: m",
    "id": 874,
    "declarations": "R: HYPERBOLA; m: CURVE",
    "facts": "LeftPart(R) = m"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: u ) equals AXIS: yAxis",
    "id": 875,
    "declarations": "u: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(u) = yAxis"
},
{
    "assertion": "Directrix ( CONICSECTION: t ) equals LINE: r",
    "id": 876,
    "declarations": "t: CONICSECTION; r: LINE",
    "facts": "Directrix(t) = r"
},
{
    "assertion": "InterReciprocal ( NUMBER: 37 ) equals Abs ( InterceptChord ( LINE: s, CONICSECTION: g ) )",
    "id": 877,
    "declarations": "37: NUMBER; s: LINE; g: CONICSECTION",
    "facts": "InterReciprocal(37) = Abs(InterceptChord(s, g))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: s ) equals LowerFocus ( CONICSECTION: m )",
    "id": 878,
    "declarations": "s: TRIANGLE; m: CONICSECTION",
    "facts": "Orthocenter(s) = LowerFocus(m)"
},
{
    "assertion": "Radius ( CIRCLE: N ) equals Perimeter ( CONICSECTION: Z )",
    "id": 879,
    "declarations": "N: CIRCLE; Z: CONICSECTION",
    "facts": "Radius(N) = Perimeter(Z)"
},
{
    "assertion": "NumIntersection ( CURVE: V, CURVE: c ) equals Slope ( LINE: k )",
    "id": 880,
    "declarations": "V: CURVE; c: CURVE; k: LINE",
    "facts": "NumIntersection(V, c) = Slope(k)"
},
{
    "assertion": "Quadrant ( POINT: u ) equals sqrt ( XCoordinate ( UpperFocus ( CONICSECTION: F ) ) )",
    "id": 881,
    "declarations": "u: POINT; F: CONICSECTION",
    "facts": "Quadrant(u) = sqrt(XCoordinate(UpperFocus(F)))"
},
{
    "assertion": "PointOnCurve ( LowerVertex ( CONICSECTION: W ), CURVE: D ) equals BOOL: False",
    "id": 882,
    "declarations": "W: CONICSECTION; D: CURVE; False: BOOL",
    "facts": "PointOnCurve(LowerVertex(W), D) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: J ) equals Circumcenter ( TRIANGLE: F )",
    "id": 883,
    "declarations": "J: CONICSECTION; F: TRIANGLE",
    "facts": "LowerFocus(J) = Circumcenter(F)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: X, TRIANGLE: G ) equals BOOL: True",
    "id": 884,
    "declarations": "X: CIRCLE; G: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(X, G) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: O ) equals RightFocus ( CONICSECTION: w )",
    "id": 885,
    "declarations": "O: TRIANGLE; w: CONICSECTION",
    "facts": "Incenter(O) = RightFocus(w)"
},
{
    "assertion": "Between ( POINT: C, Circumcenter ( TRIANGLE: k ), POINT: f ) equals BOOL: False",
    "id": 886,
    "declarations": "C: POINT; k: TRIANGLE; f: POINT; False: BOOL",
    "facts": "Between(C, Circumcenter(k), f) = False"
},
{
    "assertion": "Quadrant ( RightVertex ( CONICSECTION: D ) ) equals Slope ( LineOf ( Incenter ( TRIANGLE: Y ), LowerVertex ( CONICSECTION: C ) ) )",
    "id": 887,
    "declarations": "D: CONICSECTION; Y: TRIANGLE; C: CONICSECTION",
    "facts": "Quadrant(RightVertex(D)) = Slope(LineOf(Incenter(Y), LowerVertex(C)))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: L ) equals RightFocus ( CONICSECTION: V )",
    "id": 888,
    "declarations": "L: CONICSECTION; V: CONICSECTION",
    "facts": "UpperFocus(L) = RightFocus(V)"
},
{
    "assertion": "TriangleOf ( POINT: H, POINT: z, Orthocenter ( TRIANGLE: g ) ) equals TRIANGLE: Z",
    "id": 889,
    "declarations": "H: POINT; z: POINT; g: TRIANGLE; Z: TRIANGLE",
    "facts": "TriangleOf(H, z, Orthocenter(g)) = Z"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: X ) ) equals LINE: J",
    "id": 890,
    "declarations": "X: ELLIPSE; J: LINE",
    "facts": "OverlappingLine(MinorAxis(X)) = J"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: A ) equals LINE: Q",
    "id": 891,
    "declarations": "A: CONICSECTION; Q: LINE",
    "facts": "RightDirectrix(A) = Q"
},
{
    "assertion": "Orthocenter ( TRIANGLE: r ) equals Circumcenter ( TRIANGLE: M )",
    "id": 892,
    "declarations": "r: TRIANGLE; M: TRIANGLE",
    "facts": "Orthocenter(r) = Circumcenter(M)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: D ) equals MidPoint ( MinorAxis ( ELLIPSE: f ) )",
    "id": 893,
    "declarations": "D: CONICSECTION; f: ELLIPSE",
    "facts": "LeftFocus(D) = MidPoint(MinorAxis(f))"
},
{
    "assertion": "Radius ( CIRCLE: Z ) equals NUMBER: 90",
    "id": 894,
    "declarations": "Z: CIRCLE; 90: NUMBER",
    "facts": "Radius(Z) = 90"
},
{
    "assertion": "Slope ( OverlappingLine ( MinorAxis ( ELLIPSE: w ) ) ) equals NUMBER: -30",
    "id": 895,
    "declarations": "w: ELLIPSE; -30: NUMBER",
    "facts": "Slope(OverlappingLine(MinorAxis(w))) = -30"
},
{
    "assertion": "LeftVertex ( CONICSECTION: V ) equals POINT: m",
    "id": 896,
    "declarations": "V: CONICSECTION; m: POINT",
    "facts": "LeftVertex(V) = m"
},
{
    "assertion": "Directrix ( CONICSECTION: Q ) equals LINE: Y",
    "id": 897,
    "declarations": "Q: CONICSECTION; Y: LINE",
    "facts": "Directrix(Q) = Y"
},
{
    "assertion": "LeftVertex ( CONICSECTION: p ) equals POINT: p",
    "id": 898,
    "declarations": "p: CONICSECTION; p: POINT",
    "facts": "LeftVertex(p) = p"
},
{
    "assertion": "RightVertex ( CONICSECTION: A ) equals LowerVertex ( CONICSECTION: N )",
    "id": 899,
    "declarations": "A: CONICSECTION; N: CONICSECTION",
    "facts": "RightVertex(A) = LowerVertex(N)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: k ) equals RightVertex ( CONICSECTION: l )",
    "id": 900,
    "declarations": "k: CONICSECTION; l: CONICSECTION",
    "facts": "LowerFocus(k) = RightVertex(l)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: Z, CONICSECTION: x ) equals BOOL: True",
    "id": 901,
    "declarations": "Z: LINESEGMENT; x: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(Z, x) = True"
},
{
    "assertion": "Intercept ( LINE: Y, AXIS: yAxis ) equals Inclination ( LINE: e )",
    "id": 902,
    "declarations": "Y: LINE; yAxis: AXIS; e: LINE",
    "facts": "Intercept(Y, yAxis) = Inclination(e)"
},
{
    "assertion": "TangentOfPoint ( LeftFocus ( CONICSECTION: l ), CURVE: P ) equals LeftDirectrix ( CONICSECTION: u )",
    "id": 903,
    "declarations": "l: CONICSECTION; P: CURVE; u: CONICSECTION",
    "facts": "TangentOfPoint(LeftFocus(l), P) = LeftDirectrix(u)"
},
{
    "assertion": "FootPoint ( TangentOfPoint ( POINT: O, CURVE: j ), LINE: i ) equals LeftVertex ( CONICSECTION: h )",
    "id": 904,
    "declarations": "O: POINT; j: CURVE; i: LINE; h: CONICSECTION",
    "facts": "FootPoint(TangentOfPoint(O, j), i) = LeftVertex(h)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: U ) equals LINE: n",
    "id": 905,
    "declarations": "U: CONICSECTION; n: LINE",
    "facts": "RightDirectrix(U) = n"
},
{
    "assertion": "sqrt ( Abs ( MinorAxis ( ELLIPSE: u ) ) ) equals NUMBER: -30",
    "id": 906,
    "declarations": "u: ELLIPSE; -30: NUMBER",
    "facts": "sqrt(Abs(MinorAxis(u))) = -30"
},
{
    "assertion": "LocusEquation ( Circumcenter ( TriangleOf ( Incenter ( TRIANGLE: M ), LeftFocus ( CONICSECTION: s ), Center ( CONICSECTION: t ) ) ) ) equals EXPRESSION: x^2*space+*space4y^2*space=*space16",
    "id": 907,
    "declarations": "M: TRIANGLE; s: CONICSECTION; t: CONICSECTION; x^2*space+*space4y^2*space=*space16: EXPRESSION",
    "facts": "LocusEquation(Circumcenter(TriangleOf(Incenter(M), LeftFocus(s), Center(t)))) = x^2*space+*space4y^2*space=*space16"
},
{
    "assertion": "RightVertex ( CONICSECTION: Y ) equals POINT: L",
    "id": 908,
    "declarations": "Y: CONICSECTION; L: POINT",
    "facts": "RightVertex(Y) = L"
},
{
    "assertion": "RightPart ( HYPERBOLA: G ) equals Locus ( POINT: q )",
    "id": 909,
    "declarations": "G: HYPERBOLA; q: POINT",
    "facts": "RightPart(G) = Locus(q)"
},
{
    "assertion": "Min ( Perimeter ( CONICSECTION: g ) ) equals Perimeter ( CONICSECTION: h )",
    "id": 910,
    "declarations": "g: CONICSECTION; h: CONICSECTION",
    "facts": "Min(Perimeter(g)) = Perimeter(h)"
},
{
    "assertion": "Intercept ( RightDirectrix ( CONICSECTION: v ), AXIS: xAxis ) equals HalfFocalLength ( CONICSECTION: f )",
    "id": 911,
    "declarations": "v: CONICSECTION; xAxis: AXIS; f: CONICSECTION",
    "facts": "Intercept(RightDirectrix(v), xAxis) = HalfFocalLength(f)"
},
{
    "assertion": "Negation ( SymmetryAxis ( CONICSECTION: P ) equals AXIS: xAxis ) equals BOOL: False",
    "id": 912,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Inclination ( LINE: Y ) equals sqrt ( Inclination ( LINE: M ) )",
    "id": 913,
    "declarations": "Y: LINE; M: LINE",
    "facts": "Inclination(Y) = sqrt(Inclination(M))"
},
{
    "assertion": "RealAxis ( ELLIPSE: w ) equals LINESEGMENT: h",
    "id": 914,
    "declarations": "w: ELLIPSE; h: LINESEGMENT",
    "facts": "RealAxis(w) = h"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: f ) equals NUMBER: 60",
    "id": 915,
    "declarations": "f: CONICSECTION; 60: NUMBER",
    "facts": "HalfFocalLength(f) = 60"
},
{
    "assertion": "LineOf ( LeftFocus ( CONICSECTION: J ), RightVertex ( CONICSECTION: S ) ) equals LINE: i",
    "id": 916,
    "declarations": "J: CONICSECTION; S: CONICSECTION; i: LINE",
    "facts": "LineOf(LeftFocus(J), RightVertex(S)) = i"
},
{
    "assertion": "UpperVertex ( CONICSECTION: v ) equals POINT: s",
    "id": 917,
    "declarations": "v: CONICSECTION; s: POINT",
    "facts": "UpperVertex(v) = s"
},
{
    "assertion": "ApplyUnit ( NUMBER: 50, DEGREESTR: degree )",
    "id": 918,
    "declarations": "50: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(50, degree) = None"
},
{
    "assertion": "Locus ( UpperFocus ( CONICSECTION: b ) ) equals CURVE: H",
    "id": 919,
    "declarations": "b: CONICSECTION; H: CURVE",
    "facts": "Locus(UpperFocus(b)) = H"
},
{
    "assertion": "LowerVertex ( CONICSECTION: n ) equals POINT: p",
    "id": 920,
    "declarations": "n: CONICSECTION; p: POINT",
    "facts": "LowerVertex(n) = p"
},
{
    "assertion": "LowerFocus ( CONICSECTION: D ) equals MidPoint ( LINESEGMENT: d )",
    "id": 921,
    "declarations": "D: CONICSECTION; d: LINESEGMENT",
    "facts": "LowerFocus(D) = MidPoint(d)"
},
{
    "assertion": "Focus ( CONICSECTION: Y ) equals LowerFocus ( CONICSECTION: e )",
    "id": 922,
    "declarations": "Y: CONICSECTION; e: CONICSECTION",
    "facts": "Focus(Y) = LowerFocus(e)"
},
{
    "assertion": "IsChordOf ( RealAxis ( ELLIPSE: p ), CONICSECTION: m ) equals BOOL: True",
    "id": 923,
    "declarations": "p: ELLIPSE; m: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(RealAxis(p), m) = True"
},
{
    "assertion": "Vertex ( CONICSECTION: w ) equals POINT: I",
    "id": 924,
    "declarations": "w: CONICSECTION; I: POINT",
    "facts": "Vertex(w) = I"
},
{
    "assertion": "LeftVertex ( CONICSECTION: l ) equals LeftVertex ( CONICSECTION: I )",
    "id": 925,
    "declarations": "l: CONICSECTION; I: CONICSECTION",
    "facts": "LeftVertex(l) = LeftVertex(I)"
},
{
    "assertion": "Center ( CONICSECTION: i ) equals Center ( CONICSECTION: o )",
    "id": 926,
    "declarations": "i: CONICSECTION; o: CONICSECTION",
    "facts": "Center(i) = Center(o)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Z ) equals POINT: C",
    "id": 927,
    "declarations": "Z: CONICSECTION; C: POINT",
    "facts": "LeftFocus(Z) = C"
},
{
    "assertion": "MajorAxis ( ELLIPSE: e ) equals LINESEGMENT: s",
    "id": 928,
    "declarations": "e: ELLIPSE; s: LINESEGMENT",
    "facts": "MajorAxis(e) = s"
},
{
    "assertion": "YCoordinate ( LeftVertex ( CONICSECTION: J ) ) equals lg ( Min ( NumIntersection ( RightPart ( HYPERBOLA: x ), RightPart ( HYPERBOLA: G ) ) ) )",
    "id": 929,
    "declarations": "J: CONICSECTION; x: HYPERBOLA; G: HYPERBOLA",
    "facts": "YCoordinate(LeftVertex(J)) = lg(Min(NumIntersection(RightPart(x), RightPart(G))))"
},
{
    "assertion": "Min ( Slope ( LINE: C ) ) equals NUMBER: 99",
    "id": 930,
    "declarations": "C: LINE; 99: NUMBER",
    "facts": "Min(Slope(C)) = 99"
},
{
    "assertion": "Locus ( Incenter ( TRIANGLE: B ) ) equals RightPart ( HYPERBOLA: z )",
    "id": 931,
    "declarations": "B: TRIANGLE; z: HYPERBOLA",
    "facts": "Locus(Incenter(B)) = RightPart(z)"
},
{
    "assertion": "Intersection ( CURVE: z, Locus ( RightVertex ( CONICSECTION: Q ) ) ) equals Incenter ( TRIANGLE: L )",
    "id": 932,
    "declarations": "z: CURVE; Q: CONICSECTION; L: TRIANGLE",
    "facts": "Intersection(z, Locus(RightVertex(Q))) = Incenter(L)"
},
{
    "assertion": "Expression ( CURVE: s ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 933,
    "declarations": "s: CURVE; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "Expression(s) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "MajorAxis ( ELLIPSE: h ) equals LINESEGMENT: j",
    "id": 934,
    "declarations": "h: ELLIPSE; j: LINESEGMENT",
    "facts": "MajorAxis(h) = j"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: A ) equals Intercept ( LINE: v, AXIS: xAxis )",
    "id": 935,
    "declarations": "A: CONICSECTION; v: LINE; xAxis: AXIS",
    "facts": "HalfFocalLength(A) = Intercept(v, xAxis)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: m ) equals MajorAxis ( ELLIPSE: W )",
    "id": 936,
    "declarations": "m: ELLIPSE; W: ELLIPSE",
    "facts": "MajorAxis(m) = MajorAxis(W)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: m ) equals UpperVertex ( CONICSECTION: z )",
    "id": 937,
    "declarations": "m: CONICSECTION; z: CONICSECTION",
    "facts": "LeftVertex(m) = UpperVertex(z)"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: H ) ) equals RightDirectrix ( CONICSECTION: d )",
    "id": 938,
    "declarations": "H: ELLIPSE; d: CONICSECTION",
    "facts": "PerpendicularBisector(ImaginaryAxis(H)) = RightDirectrix(d)"
},
{
    "assertion": "RightPart ( HYPERBOLA: G ) equals CURVE: b",
    "id": 939,
    "declarations": "G: HYPERBOLA; b: CURVE",
    "facts": "RightPart(G) = b"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: h ) equals InterceptChord ( LINE: T, CONICSECTION: k )",
    "id": 940,
    "declarations": "h: ELLIPSE; T: LINE; k: CONICSECTION",
    "facts": "ImaginaryAxis(h) = InterceptChord(T, k)"
},
{
    "assertion": "TangentOnPoint ( UpperVertex ( CONICSECTION: z ), CURVE: M ) equals LINE: h",
    "id": 941,
    "declarations": "z: CONICSECTION; M: CURVE; h: LINE",
    "facts": "TangentOnPoint(UpperVertex(z), M) = h"
},
{
    "assertion": "UpperVertex ( CONICSECTION: E ) equals LowerFocus ( CONICSECTION: H )",
    "id": 942,
    "declarations": "E: CONICSECTION; H: CONICSECTION",
    "facts": "UpperVertex(E) = LowerFocus(H)"
},
{
    "assertion": "Slope ( LINE: E ) equals NUMBER: -1",
    "id": 943,
    "declarations": "E: LINE; -1: NUMBER",
    "facts": "Slope(E) = -1"
},
{
    "assertion": "ApplyUnit ( NUMBER: 95, DEGREESTR: degree )",
    "id": 944,
    "declarations": "95: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(95, degree) = None"
},
{
    "assertion": "sqrt ( Area ( CONICSECTION: k ) ) equals DotProduct ( VECTOR: S, VECTOR: O )",
    "id": 945,
    "declarations": "k: CONICSECTION; S: VECTOR; O: VECTOR",
    "facts": "sqrt(Area(k)) = DotProduct(S, O)"
},
{
    "assertion": "Center ( CONICSECTION: K ) equals POINT: T",
    "id": 946,
    "declarations": "K: CONICSECTION; T: POINT",
    "facts": "Center(K) = T"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: F ) equals LINE: f",
    "id": 947,
    "declarations": "F: CONICSECTION; f: LINE",
    "facts": "RightDirectrix(F) = f"
},
{
    "assertion": "RightVertex ( CONICSECTION: B ) equals RightFocus ( CONICSECTION: B )",
    "id": 948,
    "declarations": "B: CONICSECTION; B: CONICSECTION",
    "facts": "RightVertex(B) = RightFocus(B)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: j ) equals CURVE: O",
    "id": 949,
    "declarations": "j: HYPERBOLA; O: CURVE",
    "facts": "LeftPart(j) = O"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: y ) equals LINE: k",
    "id": 950,
    "declarations": "y: LINESEGMENT; k: LINE",
    "facts": "PerpendicularBisector(y) = k"
},
{
    "assertion": "Eccentricity ( CONICSECTION: x ) equals Slope ( LINE: E )",
    "id": 951,
    "declarations": "x: CONICSECTION; E: LINE",
    "facts": "Eccentricity(x) = Slope(E)"
},
{
    "assertion": "Max ( NUMBER: 49 ) equals DotProduct ( VECTOR: m, VECTOR: V )",
    "id": 952,
    "declarations": "49: NUMBER; m: VECTOR; V: VECTOR",
    "facts": "Max(49) = DotProduct(m, V)"
},
{
    "assertion": "RightPart ( HYPERBOLA: z ) equals CURVE: V",
    "id": 953,
    "declarations": "z: HYPERBOLA; V: CURVE",
    "facts": "RightPart(z) = V"
},
{
    "assertion": "Min ( Inclination ( LINE: p ) ) equals Distance ( POINT: i, LeftVertex ( CONICSECTION: G ) )",
    "id": 954,
    "declarations": "p: LINE; i: POINT; G: CONICSECTION",
    "facts": "Min(Inclination(p)) = Distance(i, LeftVertex(G))"
},
{
    "assertion": "Incenter ( TRIANGLE: s ) equals POINT: q",
    "id": 955,
    "declarations": "s: TRIANGLE; q: POINT",
    "facts": "Incenter(s) = q"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: H ) equals LeftDirectrix ( CONICSECTION: b )",
    "id": 956,
    "declarations": "H: CONICSECTION; b: CONICSECTION",
    "facts": "RightDirectrix(H) = LeftDirectrix(b)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: m ) equals POINT: D",
    "id": 957,
    "declarations": "m: TRIANGLE; D: POINT",
    "facts": "Orthocenter(m) = D"
},
{
    "assertion": "Min ( NUMBER: -15 ) equals NUMBER: -67",
    "id": 958,
    "declarations": "-15: NUMBER; -67: NUMBER",
    "facts": "Min(-15) = -67"
},
{
    "assertion": "And ( IsChordOf ( LINESEGMENT: T, CONICSECTION: C ) equals BOOL: False, HalfFocalLength ( CONICSECTION: v ) equals NUMBER: -66 ) equals BOOL: True",
    "id": 959,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftPart ( HYPERBOLA: k ) equals LeftPart ( HYPERBOLA: z )",
    "id": 960,
    "declarations": "k: HYPERBOLA; z: HYPERBOLA",
    "facts": "LeftPart(k) = LeftPart(z)"
},
{
    "assertion": "RightFocus ( CONICSECTION: q ) equals MidPoint ( LINESEGMENT: c )",
    "id": 961,
    "declarations": "q: CONICSECTION; c: LINESEGMENT",
    "facts": "RightFocus(q) = MidPoint(c)"
},
{
    "assertion": "RightFocus ( CONICSECTION: H ) equals Incenter ( TRIANGLE: A )",
    "id": 962,
    "declarations": "H: CONICSECTION; A: TRIANGLE",
    "facts": "RightFocus(H) = Incenter(A)"
},
{
    "assertion": "Locus ( MidPoint ( LINESEGMENT: k ) ) equals CURVE: n",
    "id": 963,
    "declarations": "k: LINESEGMENT; n: CURVE",
    "facts": "Locus(MidPoint(k)) = n"
},
{
    "assertion": "Focus ( CONICSECTION: a ) equals Orthocenter ( TRIANGLE: H )",
    "id": 964,
    "declarations": "a: CONICSECTION; H: TRIANGLE",
    "facts": "Focus(a) = Orthocenter(H)"
},
{
    "assertion": "Distance ( POINT: v, RightVertex ( CONICSECTION: a ) ) equals Slope ( LINE: W )",
    "id": 965,
    "declarations": "v: POINT; a: CONICSECTION; W: LINE",
    "facts": "Distance(v, RightVertex(a)) = Slope(W)"
},
{
    "assertion": "RightPart ( HYPERBOLA: q ) equals CURVE: c",
    "id": 966,
    "declarations": "q: HYPERBOLA; c: CURVE",
    "facts": "RightPart(q) = c"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: T ) equals TangentOfPoint ( LeftFocus ( CONICSECTION: k ), CURVE: B )",
    "id": 967,
    "declarations": "T: CONICSECTION; k: CONICSECTION; B: CURVE",
    "facts": "RightDirectrix(T) = TangentOfPoint(LeftFocus(k), B)"
},
{
    "assertion": "AngleOf ( RightVertex ( CONICSECTION: L ), POINT: U, POINT: u ) equals ApplyUnit ( sqrt ( NUMBER: 82 ), DEGREESTR: degree )",
    "id": 968,
    "declarations": "L: CONICSECTION; U: POINT; u: POINT; 82: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(RightVertex(L), U, u) = ApplyUnit(sqrt(82), degree)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: r ) equals NUMBER: -62",
    "id": 969,
    "declarations": "r: CONICSECTION; -62: NUMBER",
    "facts": "HalfFocalLength(r) = -62"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: c ) equals NUMBER: 40",
    "id": 970,
    "declarations": "c: CONICSECTION; 40: NUMBER",
    "facts": "HalfFocalLength(c) = 40"
},
{
    "assertion": "Between ( MidPoint ( MinorAxis ( ELLIPSE: m ) ), RightVertex ( CONICSECTION: B ), RightFocus ( CONICSECTION: S ) ) equals BOOL: False",
    "id": 971,
    "declarations": "m: ELLIPSE; B: CONICSECTION; S: CONICSECTION; False: BOOL",
    "facts": "Between(MidPoint(MinorAxis(m)), RightVertex(B), RightFocus(S)) = False"
},
{
    "assertion": "IsIntersect ( CURVE: E, CURVE: d ) equals BOOL: True",
    "id": 972,
    "declarations": "E: CURVE; d: CURVE; True: BOOL",
    "facts": "IsIntersect(E, d) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: C ) equals UpperFocus ( CONICSECTION: Z )",
    "id": 973,
    "declarations": "C: CONICSECTION; Z: CONICSECTION",
    "facts": "LeftVertex(C) = UpperFocus(Z)"
},
{
    "assertion": "VectorOf ( LowerVertex ( CONICSECTION: H ), POINT: f ) equals VECTOR: v",
    "id": 974,
    "declarations": "H: CONICSECTION; f: POINT; v: VECTOR",
    "facts": "VectorOf(LowerVertex(H), f) = v"
},
{
    "assertion": "Intersection ( CURVE: H, CURVE: U ) equals POINT: J",
    "id": 975,
    "declarations": "H: CURVE; U: CURVE; J: POINT",
    "facts": "Intersection(H, U) = J"
},
{
    "assertion": "MinorAxis ( ELLIPSE: j ) equals LINESEGMENT: y",
    "id": 976,
    "declarations": "j: ELLIPSE; y: LINESEGMENT",
    "facts": "MinorAxis(j) = y"
},
{
    "assertion": "Locus ( LowerVertex ( CONICSECTION: m ) ) equals CURVE: l",
    "id": 977,
    "declarations": "m: CONICSECTION; l: CURVE",
    "facts": "Locus(LowerVertex(m)) = l"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: Z ) equals LINE: B",
    "id": 978,
    "declarations": "Z: CONICSECTION; B: LINE",
    "facts": "RightDirectrix(Z) = B"
},
{
    "assertion": "RightVertex ( CONICSECTION: r ) equals Circumcenter ( TRIANGLE: d )",
    "id": 979,
    "declarations": "r: CONICSECTION; d: TRIANGLE",
    "facts": "RightVertex(r) = Circumcenter(d)"
},
{
    "assertion": "Vertex ( CONICSECTION: f ) equals POINT: r",
    "id": 980,
    "declarations": "f: CONICSECTION; r: POINT",
    "facts": "Vertex(f) = r"
},
{
    "assertion": "UpperVertex ( CONICSECTION: x ) equals LeftFocus ( CONICSECTION: L )",
    "id": 981,
    "declarations": "x: CONICSECTION; L: CONICSECTION",
    "facts": "UpperVertex(x) = LeftFocus(L)"
},
{
    "assertion": "IsParallel ( LINE: I, TangentOfPoint ( POINT: Q, CURVE: K ) ) equals BOOL: True",
    "id": 982,
    "declarations": "I: LINE; Q: POINT; K: CURVE; True: BOOL",
    "facts": "IsParallel(I, TangentOfPoint(Q, K)) = True"
},
{
    "assertion": "Focus ( CONICSECTION: o ) equals LeftFocus ( CONICSECTION: A )",
    "id": 983,
    "declarations": "o: CONICSECTION; A: CONICSECTION",
    "facts": "Focus(o) = LeftFocus(A)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: N ) equals LINE: l",
    "id": 984,
    "declarations": "N: CONICSECTION; l: LINE",
    "facts": "RightDirectrix(N) = l"
},
{
    "assertion": "Expression ( CURVE: Q ) equals EXPRESSION: y*space=*spacex^2*space-*space4*x*space+*space4",
    "id": 985,
    "declarations": "Q: CURVE; y*space=*spacex^2*space-*space4*x*space+*space4: EXPRESSION",
    "facts": "Expression(Q) = y*space=*spacex^2*space-*space4*x*space+*space4"
},
{
    "assertion": "Incenter ( TRIANGLE: P ) equals POINT: k",
    "id": 986,
    "declarations": "P: TRIANGLE; k: POINT",
    "facts": "Incenter(P) = k"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: f ) equals NUMBER: 86",
    "id": 987,
    "declarations": "f: CONICSECTION; 86: NUMBER",
    "facts": "HalfFocalLength(f) = 86"
},
{
    "assertion": "RightPart ( HYPERBOLA: X ) equals RightPart ( HYPERBOLA: g )",
    "id": 988,
    "declarations": "X: HYPERBOLA; g: HYPERBOLA",
    "facts": "RightPart(X) = RightPart(g)"
},
{
    "assertion": "lg ( NUMBER: -74 ) equals NUMBER: -21",
    "id": 989,
    "declarations": "-74: NUMBER; -21: NUMBER",
    "facts": "lg(-74) = -21"
},
{
    "assertion": "FocalLength ( CONICSECTION: f ) equals DotProduct ( VECTOR: X, VECTOR: v )",
    "id": 990,
    "declarations": "f: CONICSECTION; X: VECTOR; v: VECTOR",
    "facts": "FocalLength(f) = DotProduct(X, v)"
},
{
    "assertion": "Incenter ( TRIANGLE: x ) equals LeftVertex ( CONICSECTION: k )",
    "id": 991,
    "declarations": "x: TRIANGLE; k: CONICSECTION",
    "facts": "Incenter(x) = LeftVertex(k)"
},
{
    "assertion": "lg ( Distance ( POINT: V, UpperFocus ( CONICSECTION: F ) ) ) equals Intercept ( LINE: Y, AXIS: xAxis )",
    "id": 992,
    "declarations": "V: POINT; F: CONICSECTION; Y: LINE; xAxis: AXIS",
    "facts": "lg(Distance(V, UpperFocus(F))) = Intercept(Y, xAxis)"
},
{
    "assertion": "FocalLength ( CONICSECTION: H ) equals Slope ( OverlappingLine ( LINESEGMENT: C ) )",
    "id": 993,
    "declarations": "H: CONICSECTION; C: LINESEGMENT",
    "facts": "FocalLength(H) = Slope(OverlappingLine(C))"
},
{
    "assertion": "RightPart ( HYPERBOLA: J ) equals RightPart ( HYPERBOLA: D )",
    "id": 994,
    "declarations": "J: HYPERBOLA; D: HYPERBOLA",
    "facts": "RightPart(J) = RightPart(D)"
},
{
    "assertion": "Slope ( TangentOnPoint ( POINT: P, CURVE: c ) ) equals NUMBER: 79",
    "id": 995,
    "declarations": "P: POINT; c: CURVE; 79: NUMBER",
    "facts": "Slope(TangentOnPoint(P, c)) = 79"
},
{
    "assertion": "Abs ( LINESEGMENT: y ) equals Area ( CONICSECTION: e )",
    "id": 996,
    "declarations": "y: LINESEGMENT; e: CONICSECTION",
    "facts": "Abs(y) = Area(e)"
},
{
    "assertion": "IsParallel ( LINE: r, PerpendicularBisector ( MajorAxis ( ELLIPSE: b ) ) ) equals BOOL: False",
    "id": 997,
    "declarations": "r: LINE; b: ELLIPSE; False: BOOL",
    "facts": "IsParallel(r, PerpendicularBisector(MajorAxis(b))) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: r ) equals LINE: G",
    "id": 998,
    "declarations": "r: CONICSECTION; G: LINE",
    "facts": "Directrix(r) = G"
},
{
    "assertion": "Incenter ( TRIANGLE: i ) equals POINT: E",
    "id": 999,
    "declarations": "i: TRIANGLE; E: POINT",
    "facts": "Incenter(i) = E"
},
{
    "assertion": "Length ( LINESEGMENT: J ) equals NUMBER: 61",
    "id": 1000,
    "declarations": "J: LINESEGMENT; 61: NUMBER",
    "facts": "Length(J) = 61"
},
{
    "assertion": "Locus ( POINT: f ) equals RightPart ( HYPERBOLA: L )",
    "id": 1001,
    "declarations": "f: POINT; L: HYPERBOLA",
    "facts": "Locus(f) = RightPart(L)"
},
{
    "assertion": "Intersection ( CURVE: I, CURVE: w ) equals POINT: h",
    "id": 1002,
    "declarations": "I: CURVE; w: CURVE; h: POINT",
    "facts": "Intersection(I, w) = h"
},
{
    "assertion": "Abs ( LINESEGMENT: M ) equals NumIntersection ( CURVE: i, CURVE: w )",
    "id": 1003,
    "declarations": "M: LINESEGMENT; i: CURVE; w: CURVE",
    "facts": "Abs(M) = NumIntersection(i, w)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: n, TRIANGLE: G ) equals BOOL: True",
    "id": 1004,
    "declarations": "n: CIRCLE; G: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(n, G) = True"
},
{
    "assertion": "Locus ( Center ( CONICSECTION: d ) ) equals RightPart ( HYPERBOLA: j )",
    "id": 1005,
    "declarations": "d: CONICSECTION; j: HYPERBOLA",
    "facts": "Locus(Center(d)) = RightPart(j)"
},
{
    "assertion": "Inclination ( LINE: V ) equals NUMBER: 89",
    "id": 1006,
    "declarations": "V: LINE; 89: NUMBER",
    "facts": "Inclination(V) = 89"
},
{
    "assertion": "Diameter ( CIRCLE: P ) equals NUMBER: 77",
    "id": 1007,
    "declarations": "P: CIRCLE; 77: NUMBER",
    "facts": "Diameter(P) = 77"
},
{
    "assertion": "sqrt ( Perimeter ( CONICSECTION: w ) ) equals NUMBER: -50",
    "id": 1008,
    "declarations": "w: CONICSECTION; -50: NUMBER",
    "facts": "sqrt(Perimeter(w)) = -50"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: y ) ) equals HalfFocalLength ( CONICSECTION: Q )",
    "id": 1009,
    "declarations": "y: ELLIPSE; Q: CONICSECTION",
    "facts": "Abs(MinorAxis(y)) = HalfFocalLength(Q)"
},
{
    "assertion": "Vertex ( CONICSECTION: z ) equals FootPoint ( LINE: r, LINE: O )",
    "id": 1010,
    "declarations": "z: CONICSECTION; r: LINE; O: LINE",
    "facts": "Vertex(z) = FootPoint(r, O)"
},
{
    "assertion": "Diameter ( CIRCLE: A ) equals Quadrant ( UpperFocus ( CONICSECTION: z ) )",
    "id": 1011,
    "declarations": "A: CIRCLE; z: CONICSECTION",
    "facts": "Diameter(A) = Quadrant(UpperFocus(z))"
},
{
    "assertion": "Negation ( InterceptChord ( LINE: y, CONICSECTION: d ) equals LINESEGMENT: G ) equals BOOL: True",
    "id": 1012,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Locus ( FootPoint ( LINE: n, LINE: E ) ) equals CURVE: C",
    "id": 1013,
    "declarations": "n: LINE; E: LINE; C: CURVE",
    "facts": "Locus(FootPoint(n, E)) = C"
},
{
    "assertion": "LowerFocus ( CONICSECTION: x ) equals POINT: L",
    "id": 1014,
    "declarations": "x: CONICSECTION; L: POINT",
    "facts": "LowerFocus(x) = L"
},
{
    "assertion": "OverlappingLine ( LineSegmentOf ( POINT: Z, POINT: E ) ) equals RightDirectrix ( CONICSECTION: A )",
    "id": 1015,
    "declarations": "Z: POINT; E: POINT; A: CONICSECTION",
    "facts": "OverlappingLine(LineSegmentOf(Z, E)) = RightDirectrix(A)"
},
{
    "assertion": "RightFocus ( CONICSECTION: y ) equals Center ( CONICSECTION: e )",
    "id": 1016,
    "declarations": "y: CONICSECTION; e: CONICSECTION",
    "facts": "RightFocus(y) = Center(e)"
},
{
    "assertion": "Center ( CONICSECTION: d ) equals POINT: S",
    "id": 1017,
    "declarations": "d: CONICSECTION; S: POINT",
    "facts": "Center(d) = S"
},
{
    "assertion": "Projection ( RightVertex ( CONICSECTION: X ), LINE: A ) equals Circumcenter ( TRIANGLE: g )",
    "id": 1018,
    "declarations": "X: CONICSECTION; A: LINE; g: TRIANGLE",
    "facts": "Projection(RightVertex(X), A) = Circumcenter(g)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: I ) equals LINE: j",
    "id": 1019,
    "declarations": "I: HYPERBOLA; j: LINE",
    "facts": "Asymptote(I) = j"
},
{
    "assertion": "LeftFocus ( CONICSECTION: c ) equals LeftVertex ( CONICSECTION: w )",
    "id": 1020,
    "declarations": "c: CONICSECTION; w: CONICSECTION",
    "facts": "LeftFocus(c) = LeftVertex(w)"
},
{
    "assertion": "RightPart ( HYPERBOLA: M ) equals CURVE: h",
    "id": 1021,
    "declarations": "M: HYPERBOLA; h: CURVE",
    "facts": "RightPart(M) = h"
},
{
    "assertion": "TriangleOf ( RightVertex ( CONICSECTION: g ), POINT: j, LeftVertex ( CONICSECTION: N ) ) equals TRIANGLE: h",
    "id": 1022,
    "declarations": "g: CONICSECTION; j: POINT; N: CONICSECTION; h: TRIANGLE",
    "facts": "TriangleOf(RightVertex(g), j, LeftVertex(N)) = h"
},
{
    "assertion": "IsParallel ( LeftDirectrix ( CONICSECTION: a ), LINE: F ) equals BOOL: False",
    "id": 1023,
    "declarations": "a: CONICSECTION; F: LINE; False: BOOL",
    "facts": "IsParallel(LeftDirectrix(a), F) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: q ) equals POINT: u",
    "id": 1024,
    "declarations": "q: CONICSECTION; u: POINT",
    "facts": "RightVertex(q) = u"
},
{
    "assertion": "InterceptChord ( LINE: i, CONICSECTION: Q ) equals MinorAxis ( ELLIPSE: K )",
    "id": 1025,
    "declarations": "i: LINE; Q: CONICSECTION; K: ELLIPSE",
    "facts": "InterceptChord(i, Q) = MinorAxis(K)"
},
{
    "assertion": "LineSegmentOf ( POINT: g, LeftFocus ( CONICSECTION: v ) ) equals LINESEGMENT: d",
    "id": 1026,
    "declarations": "g: POINT; v: CONICSECTION; d: LINESEGMENT",
    "facts": "LineSegmentOf(g, LeftFocus(v)) = d"
},
{
    "assertion": "TangentOfPoint ( Circumcenter ( TRIANGLE: q ), CURVE: c ) equals LINE: i",
    "id": 1027,
    "declarations": "q: TRIANGLE; c: CURVE; i: LINE",
    "facts": "TangentOfPoint(Circumcenter(q), c) = i"
},
{
    "assertion": "RealAxis ( ELLIPSE: M ) equals LINESEGMENT: X",
    "id": 1028,
    "declarations": "M: ELLIPSE; X: LINESEGMENT",
    "facts": "RealAxis(M) = X"
},
{
    "assertion": "IsTangent ( LINE: R, CONICSECTION: S ) equals BOOL: False",
    "id": 1029,
    "declarations": "R: LINE; S: CONICSECTION; False: BOOL",
    "facts": "IsTangent(R, S) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: Y ) equals LINE: a",
    "id": 1030,
    "declarations": "Y: CONICSECTION; a: LINE",
    "facts": "Directrix(Y) = a"
},
{
    "assertion": "YCoordinate ( Orthocenter ( TRIANGLE: d ) ) equals Inclination ( LINE: h )",
    "id": 1031,
    "declarations": "d: TRIANGLE; h: LINE",
    "facts": "YCoordinate(Orthocenter(d)) = Inclination(h)"
},
{
    "assertion": "FootPoint ( LINE: W, LineOf ( POINT: p, POINT: Z ) ) equals POINT: x",
    "id": 1032,
    "declarations": "W: LINE; p: POINT; Z: POINT; x: POINT",
    "facts": "FootPoint(W, LineOf(p, Z)) = x"
},
{
    "assertion": "Area ( CONICSECTION: s ) equals NUMBER: 64",
    "id": 1033,
    "declarations": "s: CONICSECTION; 64: NUMBER",
    "facts": "Area(s) = 64"
},
{
    "assertion": "Endpoint ( LINESEGMENT: T ) equals Center ( CONICSECTION: L )",
    "id": 1034,
    "declarations": "T: LINESEGMENT; L: CONICSECTION",
    "facts": "Endpoint(T) = Center(L)"
},
{
    "assertion": "Expression ( RightPart ( HYPERBOLA: F ) ) equals EXPRESSION: x*space+*spacey^2*space=*space9",
    "id": 1035,
    "declarations": "F: HYPERBOLA; x*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(RightPart(F)) = x*space+*spacey^2*space=*space9"
},
{
    "assertion": "IsDiameter ( LineSegmentOf ( Center ( CONICSECTION: Y ), Orthocenter ( TRIANGLE: d ) ), CIRCLE: l ) equals BOOL: False",
    "id": 1036,
    "declarations": "Y: CONICSECTION; d: TRIANGLE; l: CIRCLE; False: BOOL",
    "facts": "IsDiameter(LineSegmentOf(Center(Y), Orthocenter(d)), l) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: w ) equals TangentOfPoint ( POINT: G, CURVE: J )",
    "id": 1037,
    "declarations": "w: CONICSECTION; G: POINT; J: CURVE",
    "facts": "Directrix(w) = TangentOfPoint(G, J)"
},
{
    "assertion": "Locus ( POINT: V ) equals Locus ( Orthocenter ( TRIANGLE: d ) )",
    "id": 1038,
    "declarations": "V: POINT; d: TRIANGLE",
    "facts": "Locus(V) = Locus(Orthocenter(d))"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: f ) ) equals EXPRESSION: x^2*space+*spacey^2*space=*space25",
    "id": 1039,
    "declarations": "f: HYPERBOLA; x^2*space+*spacey^2*space=*space25: EXPRESSION",
    "facts": "Expression(LeftPart(f)) = x^2*space+*spacey^2*space=*space25"
},
{
    "assertion": "Quadrant ( UpperFocus ( CONICSECTION: m ) ) equals Abs ( MinorAxis ( ELLIPSE: h ) )",
    "id": 1040,
    "declarations": "m: CONICSECTION; h: ELLIPSE",
    "facts": "Quadrant(UpperFocus(m)) = Abs(MinorAxis(h))"
},
{
    "assertion": "AngleOf ( POINT: L, POINT: n, UpperVertex ( CONICSECTION: v ) ) equals AngleOf ( POINT: s, POINT: o, FootPoint ( LINE: v, LINE: T ) )",
    "id": 1041,
    "declarations": "L: POINT; n: POINT; v: CONICSECTION; s: POINT; o: POINT; v: LINE; T: LINE",
    "facts": "AngleOf(L, n, UpperVertex(v)) = AngleOf(s, o, FootPoint(v, T))"
},
{
    "assertion": "RightPart ( HYPERBOLA: m ) equals RightPart ( HYPERBOLA: a )",
    "id": 1042,
    "declarations": "m: HYPERBOLA; a: HYPERBOLA",
    "facts": "RightPart(m) = RightPart(a)"
},
{
    "assertion": "Inclination ( OverlappingLine ( LINESEGMENT: s ) ) equals NUMBER: 39",
    "id": 1043,
    "declarations": "s: LINESEGMENT; 39: NUMBER",
    "facts": "Inclination(OverlappingLine(s)) = 39"
},
{
    "assertion": "IsIntersect ( CURVE: y, CURVE: p ) equals BOOL: False",
    "id": 1044,
    "declarations": "y: CURVE; p: CURVE; False: BOOL",
    "facts": "IsIntersect(y, p) = False"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: z ) ) equals HalfFocalLength ( CONICSECTION: S )",
    "id": 1045,
    "declarations": "z: ELLIPSE; S: CONICSECTION",
    "facts": "Abs(MinorAxis(z)) = HalfFocalLength(S)"
},
{
    "assertion": "FocalLength ( CONICSECTION: v ) equals NUMBER: 55",
    "id": 1046,
    "declarations": "v: CONICSECTION; 55: NUMBER",
    "facts": "FocalLength(v) = 55"
},
{
    "assertion": "MajorAxis ( ELLIPSE: m ) equals LINESEGMENT: d",
    "id": 1047,
    "declarations": "m: ELLIPSE; d: LINESEGMENT",
    "facts": "MajorAxis(m) = d"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: I ) equals NUMBER: -99",
    "id": 1048,
    "declarations": "I: CONICSECTION; -99: NUMBER",
    "facts": "HalfFocalLength(I) = -99"
},
{
    "assertion": "Perimeter ( CONICSECTION: o ) equals Radius ( CircumCircle ( TRIANGLE: J ) )",
    "id": 1049,
    "declarations": "o: CONICSECTION; J: TRIANGLE",
    "facts": "Perimeter(o) = Radius(CircumCircle(J))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: P ) equals LeftFocus ( CONICSECTION: V )",
    "id": 1050,
    "declarations": "P: CONICSECTION; V: CONICSECTION",
    "facts": "UpperVertex(P) = LeftFocus(V)"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: W ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 1051,
    "declarations": "W: HYPERBOLA; y*space=*spacelog(x): EXPRESSION",
    "facts": "Expression(LeftPart(W)) = y*space=*spacelog(x)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: l ) equals MidPoint ( ImaginaryAxis ( ELLIPSE: B ) )",
    "id": 1052,
    "declarations": "l: CONICSECTION; B: ELLIPSE",
    "facts": "UpperFocus(l) = MidPoint(ImaginaryAxis(B))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: c ) equals POINT: W",
    "id": 1054,
    "declarations": "c: CONICSECTION; W: POINT",
    "facts": "LowerFocus(c) = W"
},
{
    "assertion": "Abs ( LINESEGMENT: E ) equals NUMBER: -63",
    "id": 1055,
    "declarations": "E: LINESEGMENT; -63: NUMBER",
    "facts": "Abs(E) = -63"
},
{
    "assertion": "Max ( NUMBER: -5 ) equals YCoordinate ( POINT: Y )",
    "id": 1056,
    "declarations": "-5: NUMBER; Y: POINT",
    "facts": "Max(-5) = YCoordinate(Y)"
},
{
    "assertion": "Expression ( CURVE: w ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 1057,
    "declarations": "w: CURVE; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "Expression(w) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "PointOnCurve ( POINT: T, CURVE: P ) equals BOOL: True",
    "id": 1058,
    "declarations": "T: POINT; P: CURVE; True: BOOL",
    "facts": "PointOnCurve(T, P) = True"
},
{
    "assertion": "TangentOnPoint ( POINT: P, CURVE: n ) equals LINE: U",
    "id": 1059,
    "declarations": "P: POINT; n: CURVE; U: LINE",
    "facts": "TangentOnPoint(P, n) = U"
},
{
    "assertion": "Area ( CONICSECTION: t ) equals NUMBER: -85",
    "id": 1060,
    "declarations": "t: CONICSECTION; -85: NUMBER",
    "facts": "Area(t) = -85"
},
{
    "assertion": "And ( Eccentricity ( CONICSECTION: O ) equals NUMBER: 61, LeftPart ( HYPERBOLA: x ) equals CURVE: O ) equals BOOL: False",
    "id": 1061,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: n ) equals LINE: S",
    "id": 1062,
    "declarations": "n: CONICSECTION; S: LINE",
    "facts": "RightDirectrix(n) = S"
},
{
    "assertion": "FootPoint ( RightDirectrix ( CONICSECTION: Y ), LINE: B ) equals POINT: O",
    "id": 1063,
    "declarations": "Y: CONICSECTION; B: LINE; O: POINT",
    "facts": "FootPoint(RightDirectrix(Y), B) = O"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: y ) equals AXIS: yAxis",
    "id": 1064,
    "declarations": "y: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(y) = yAxis"
},
{
    "assertion": "Asymptote ( HYPERBOLA: w ) equals OverlappingLine ( LINESEGMENT: I )",
    "id": 1065,
    "declarations": "w: HYPERBOLA; I: LINESEGMENT",
    "facts": "Asymptote(w) = OverlappingLine(I)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: J ) equals MajorAxis ( ELLIPSE: s )",
    "id": 1066,
    "declarations": "J: ELLIPSE; s: ELLIPSE",
    "facts": "ImaginaryAxis(J) = MajorAxis(s)"
},
{
    "assertion": "lg ( Eccentricity ( CONICSECTION: H ) ) equals lg ( NUMBER: 98 )",
    "id": 1067,
    "declarations": "H: CONICSECTION; 98: NUMBER",
    "facts": "lg(Eccentricity(H)) = lg(98)"
},
{
    "assertion": "PointOnCurve ( MidPoint ( LINESEGMENT: s ), CURVE: a ) equals BOOL: True",
    "id": 1068,
    "declarations": "s: LINESEGMENT; a: CURVE; True: BOOL",
    "facts": "PointOnCurve(MidPoint(s), a) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: y ) equals UpperFocus ( CONICSECTION: R )",
    "id": 1069,
    "declarations": "y: TRIANGLE; R: CONICSECTION",
    "facts": "Orthocenter(y) = UpperFocus(R)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: q, CIRCLE: M ) equals BOOL: False",
    "id": 1070,
    "declarations": "q: CIRCLE; M: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(q, M) = False"
},
{
    "assertion": "IsTangent ( LINE: V, CONICSECTION: n ) equals BOOL: False",
    "id": 1071,
    "declarations": "V: LINE; n: CONICSECTION; False: BOOL",
    "facts": "IsTangent(V, n) = False"
},
{
    "assertion": "Diameter ( CIRCLE: N ) equals Diameter ( CIRCLE: j )",
    "id": 1072,
    "declarations": "N: CIRCLE; j: CIRCLE",
    "facts": "Diameter(N) = Diameter(j)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -20, DEGREESTR: degree )",
    "id": 1073,
    "declarations": "-20: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-20, degree) = None"
},
{
    "assertion": "TangentOfPoint ( Orthocenter ( TRIANGLE: V ), LeftPart ( HYPERBOLA: s ) ) equals LINE: r",
    "id": 1074,
    "declarations": "V: TRIANGLE; s: HYPERBOLA; r: LINE",
    "facts": "TangentOfPoint(Orthocenter(V), LeftPart(s)) = r"
},
{
    "assertion": "Min ( NUMBER: -86 ) equals HalfFocalLength ( CONICSECTION: w )",
    "id": 1075,
    "declarations": "-86: NUMBER; w: CONICSECTION",
    "facts": "Min(-86) = HalfFocalLength(w)"
},
{
    "assertion": "LineSegmentOf ( RightFocus ( CONICSECTION: i ), POINT: j ) equals LINESEGMENT: E",
    "id": 1076,
    "declarations": "i: CONICSECTION; j: POINT; E: LINESEGMENT",
    "facts": "LineSegmentOf(RightFocus(i), j) = E"
},
{
    "assertion": "OverlappingLine ( ImaginaryAxis ( ELLIPSE: g ) ) equals LINE: d",
    "id": 1077,
    "declarations": "g: ELLIPSE; d: LINE",
    "facts": "OverlappingLine(ImaginaryAxis(g)) = d"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: B ) equals LINE: H",
    "id": 1078,
    "declarations": "B: LINESEGMENT; H: LINE",
    "facts": "OverlappingLine(B) = H"
},
{
    "assertion": "UpperVertex ( CONICSECTION: P ) equals POINT: i",
    "id": 1079,
    "declarations": "P: CONICSECTION; i: POINT",
    "facts": "UpperVertex(P) = i"
},
{
    "assertion": "VectorOf ( Incenter ( TRIANGLE: i ), MidPoint ( LINESEGMENT: T ) ) equals VECTOR: D",
    "id": 1080,
    "declarations": "i: TRIANGLE; T: LINESEGMENT; D: VECTOR",
    "facts": "VectorOf(Incenter(i), MidPoint(T)) = D"
},
{
    "assertion": "MajorAxis ( ELLIPSE: x ) equals RealAxis ( ELLIPSE: Q )",
    "id": 1081,
    "declarations": "x: ELLIPSE; Q: ELLIPSE",
    "facts": "MajorAxis(x) = RealAxis(Q)"
},
{
    "assertion": "DotProduct ( VECTOR: A, VECTOR: d ) equals YCoordinate ( FootPoint ( TangentOnPoint ( Center ( CONICSECTION: H ), CURVE: K ), LINE: v ) )",
    "id": 1082,
    "declarations": "A: VECTOR; d: VECTOR; H: CONICSECTION; K: CURVE; v: LINE",
    "facts": "DotProduct(A, d) = YCoordinate(FootPoint(TangentOnPoint(Center(H), K), v))"
},
{
    "assertion": "Directrix ( CONICSECTION: o ) equals LineOf ( RightVertex ( CONICSECTION: w ), LowerVertex ( CONICSECTION: A ) )",
    "id": 1083,
    "declarations": "o: CONICSECTION; w: CONICSECTION; A: CONICSECTION",
    "facts": "Directrix(o) = LineOf(RightVertex(w), LowerVertex(A))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: A ) equals LineOf ( MidPoint ( LINESEGMENT: k ), POINT: a )",
    "id": 1084,
    "declarations": "A: HYPERBOLA; k: LINESEGMENT; a: POINT",
    "facts": "Asymptote(A) = LineOf(MidPoint(k), a)"
},
{
    "assertion": "Distance ( UpperFocus ( CONICSECTION: A ), POINT: v ) equals lg ( NUMBER: 91 )",
    "id": 1085,
    "declarations": "A: CONICSECTION; v: POINT; 91: NUMBER",
    "facts": "Distance(UpperFocus(A), v) = lg(91)"
},
{
    "assertion": "Perimeter ( CONICSECTION: t ) equals NUMBER: -99",
    "id": 1086,
    "declarations": "t: CONICSECTION; -99: NUMBER",
    "facts": "Perimeter(t) = -99"
},
{
    "assertion": "DotProduct ( VECTOR: t, VECTOR: S ) equals InterReciprocal ( NUMBER: 81 )",
    "id": 1087,
    "declarations": "t: VECTOR; S: VECTOR; 81: NUMBER",
    "facts": "DotProduct(t, S) = InterReciprocal(81)"
},
{
    "assertion": "Negation ( Perimeter ( CONICSECTION: s ) equals NumIntersection ( RightPart ( HYPERBOLA: a ), CURVE: q ) ) equals BOOL: False",
    "id": 1088,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "ApplyUnit ( XCoordinate ( LowerVertex ( CONICSECTION: F ) ), DEGREESTR: degree )",
    "id": 1089,
    "declarations": "F: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(XCoordinate(LowerVertex(F)), degree) = None"
},
{
    "assertion": "Slope ( OverlappingLine ( LINESEGMENT: L ) ) equals Perimeter ( CONICSECTION: V )",
    "id": 1090,
    "declarations": "L: LINESEGMENT; V: CONICSECTION",
    "facts": "Slope(OverlappingLine(L)) = Perimeter(V)"
},
{
    "assertion": "YCoordinate ( POINT: b ) equals Inclination ( LeftDirectrix ( CONICSECTION: F ) )",
    "id": 1091,
    "declarations": "b: POINT; F: CONICSECTION",
    "facts": "YCoordinate(b) = Inclination(LeftDirectrix(F))"
},
{
    "assertion": "MidPoint ( LINESEGMENT: z ) equals Circumcenter ( TRIANGLE: i )",
    "id": 1092,
    "declarations": "z: LINESEGMENT; i: TRIANGLE",
    "facts": "MidPoint(z) = Circumcenter(i)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: N ) equals TangentOfPoint ( RightFocus ( CONICSECTION: U ), CURVE: D )",
    "id": 1093,
    "declarations": "N: CONICSECTION; U: CONICSECTION; D: CURVE",
    "facts": "LeftDirectrix(N) = TangentOfPoint(RightFocus(U), D)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: E, CIRCLE: i ) equals BOOL: False",
    "id": 1094,
    "declarations": "E: LINESEGMENT; i: CIRCLE; False: BOOL",
    "facts": "IsDiameter(E, i) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: r ) equals Min ( NUMBER: -17 )",
    "id": 1095,
    "declarations": "r: CONICSECTION; -17: NUMBER",
    "facts": "Perimeter(r) = Min(-17)"
},
{
    "assertion": "Between ( LeftVertex ( CONICSECTION: W ), POINT: W, POINT: a ) equals BOOL: False",
    "id": 1096,
    "declarations": "W: CONICSECTION; W: POINT; a: POINT; False: BOOL",
    "facts": "Between(LeftVertex(W), W, a) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: z ) equals POINT: i",
    "id": 1097,
    "declarations": "z: CONICSECTION; i: POINT",
    "facts": "UpperFocus(z) = i"
},
{
    "assertion": "LeftFocus ( CONICSECTION: B ) equals Projection ( Center ( CONICSECTION: q ), LINE: E )",
    "id": 1098,
    "declarations": "B: CONICSECTION; q: CONICSECTION; E: LINE",
    "facts": "LeftFocus(B) = Projection(Center(q), E)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: Y, TRIANGLE: e ) equals BOOL: True",
    "id": 1099,
    "declarations": "Y: CIRCLE; e: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(Y, e) = True"
},
{
    "assertion": "InterReciprocal ( XCoordinate ( POINT: B ) ) equals Perimeter ( CONICSECTION: I )",
    "id": 1100,
    "declarations": "B: POINT; I: CONICSECTION",
    "facts": "InterReciprocal(XCoordinate(B)) = Perimeter(I)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: G, CIRCLE: t ) equals BOOL: False",
    "id": 1101,
    "declarations": "G: CIRCLE; t: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(G, t) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: t ) equals POINT: k",
    "id": 1102,
    "declarations": "t: CONICSECTION; k: POINT",
    "facts": "Vertex(t) = k"
},
{
    "assertion": "MajorAxis ( ELLIPSE: i ) equals LINESEGMENT: R",
    "id": 1103,
    "declarations": "i: ELLIPSE; R: LINESEGMENT",
    "facts": "MajorAxis(i) = R"
},
{
    "assertion": "Expression ( CURVE: F ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 1104,
    "declarations": "F: CURVE; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(F) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "LineOf ( POINT: T, LowerFocus ( CONICSECTION: C ) ) equals LineOf ( POINT: Y, RightFocus ( CONICSECTION: u ) )",
    "id": 1105,
    "declarations": "T: POINT; C: CONICSECTION; Y: POINT; u: CONICSECTION",
    "facts": "LineOf(T, LowerFocus(C)) = LineOf(Y, RightFocus(u))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: m ) equals LeftPart ( HYPERBOLA: k )",
    "id": 1106,
    "declarations": "m: HYPERBOLA; k: HYPERBOLA",
    "facts": "LeftPart(m) = LeftPart(k)"
},
{
    "assertion": "Length ( LINESEGMENT: X ) equals lg ( HalfFocalLength ( CONICSECTION: P ) )",
    "id": 1107,
    "declarations": "X: LINESEGMENT; P: CONICSECTION",
    "facts": "Length(X) = lg(HalfFocalLength(P))"
},
{
    "assertion": "Focus ( CONICSECTION: z ) equals POINT: e",
    "id": 1108,
    "declarations": "z: CONICSECTION; e: POINT",
    "facts": "Focus(z) = e"
},
{
    "assertion": "RightVertex ( CONICSECTION: K ) equals LeftVertex ( CONICSECTION: x )",
    "id": 1109,
    "declarations": "K: CONICSECTION; x: CONICSECTION",
    "facts": "RightVertex(K) = LeftVertex(x)"
},
{
    "assertion": "Vertex ( CONICSECTION: Q ) equals LowerVertex ( CONICSECTION: w )",
    "id": 1110,
    "declarations": "Q: CONICSECTION; w: CONICSECTION",
    "facts": "Vertex(Q) = LowerVertex(w)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: t ) equals LINESEGMENT: J",
    "id": 1111,
    "declarations": "t: ELLIPSE; J: LINESEGMENT",
    "facts": "ImaginaryAxis(t) = J"
},
{
    "assertion": "Projection ( POINT: y, PerpendicularBisector ( LINESEGMENT: e ) ) equals POINT: G",
    "id": 1112,
    "declarations": "y: POINT; e: LINESEGMENT; G: POINT",
    "facts": "Projection(y, PerpendicularBisector(e)) = G"
},
{
    "assertion": "lg ( Min ( Inclination ( LINE: E ) ) ) equals NUMBER: 67",
    "id": 1113,
    "declarations": "E: LINE; 67: NUMBER",
    "facts": "lg(Min(Inclination(E))) = 67"
},
{
    "assertion": "XCoordinate ( POINT: r ) equals Abs ( LINESEGMENT: k )",
    "id": 1114,
    "declarations": "r: POINT; k: LINESEGMENT",
    "facts": "XCoordinate(r) = Abs(k)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: J ) equals LINESEGMENT: P",
    "id": 1115,
    "declarations": "J: ELLIPSE; P: LINESEGMENT",
    "facts": "ImaginaryAxis(J) = P"
},
{
    "assertion": "InterReciprocal ( lg ( NUMBER: -56 ) ) equals Intercept ( LeftDirectrix ( CONICSECTION: W ), AXIS: yAxis )",
    "id": 1116,
    "declarations": "-56: NUMBER; W: CONICSECTION; yAxis: AXIS",
    "facts": "InterReciprocal(lg(-56)) = Intercept(LeftDirectrix(W), yAxis)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: O ) equals LINE: X",
    "id": 1117,
    "declarations": "O: LINESEGMENT; X: LINE",
    "facts": "PerpendicularBisector(O) = X"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: h, CONICSECTION: n ) equals BOOL: False",
    "id": 1118,
    "declarations": "h: LINESEGMENT; n: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(h, n) = False"
},
{
    "assertion": "Focus ( CONICSECTION: O ) equals POINT: L",
    "id": 1119,
    "declarations": "O: CONICSECTION; L: POINT",
    "facts": "Focus(O) = L"
},
{
    "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: A ) ) equals Eccentricity ( CONICSECTION: W )",
    "id": 1120,
    "declarations": "A: CONICSECTION; W: CONICSECTION",
    "facts": "YCoordinate(UpperVertex(A)) = Eccentricity(W)"
},
{
    "assertion": "Locus ( LowerVertex ( CONICSECTION: f ) ) equals LeftPart ( HYPERBOLA: D )",
    "id": 1121,
    "declarations": "f: CONICSECTION; D: HYPERBOLA",
    "facts": "Locus(LowerVertex(f)) = LeftPart(D)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: G ) equals Orthocenter ( TRIANGLE: v )",
    "id": 1122,
    "declarations": "G: LINESEGMENT; v: TRIANGLE",
    "facts": "MidPoint(G) = Orthocenter(v)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: g, TRIANGLE: q ) equals BOOL: False",
    "id": 1123,
    "declarations": "g: CIRCLE; q: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(g, q) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: t ) equals Eccentricity ( CONICSECTION: P )",
    "id": 1124,
    "declarations": "t: CONICSECTION; P: CONICSECTION",
    "facts": "Perimeter(t) = Eccentricity(P)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: S ) equals LeftPart ( HYPERBOLA: E )",
    "id": 1125,
    "declarations": "S: HYPERBOLA; E: HYPERBOLA",
    "facts": "LeftPart(S) = LeftPart(E)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: x ) equals POINT: f",
    "id": 1126,
    "declarations": "x: CONICSECTION; f: POINT",
    "facts": "UpperFocus(x) = f"
},
{
    "assertion": "sqrt ( NUMBER: 22 ) equals NUMBER: 39",
    "id": 1127,
    "declarations": "22: NUMBER; 39: NUMBER",
    "facts": "sqrt(22) = 39"
},
{
    "assertion": "CircumCircle ( TRIANGLE: O ) equals CIRCLE: K",
    "id": 1128,
    "declarations": "O: TRIANGLE; K: CIRCLE",
    "facts": "CircumCircle(O) = K"
},
{
    "assertion": "TangentOfPoint ( LowerFocus ( CONICSECTION: v ), CURVE: O ) equals LINE: i",
    "id": 1129,
    "declarations": "v: CONICSECTION; O: CURVE; i: LINE",
    "facts": "TangentOfPoint(LowerFocus(v), O) = i"
},
{
    "assertion": "Expression ( CURVE: i ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 1130,
    "declarations": "i: CURVE; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(i) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "Distance ( POINT: e, POINT: Q ) equals Diameter ( CIRCLE: j )",
    "id": 1131,
    "declarations": "e: POINT; Q: POINT; j: CIRCLE",
    "facts": "Distance(e, Q) = Diameter(j)"
},
{
    "assertion": "Inclination ( LINE: Q ) equals Length ( LINESEGMENT: E )",
    "id": 1132,
    "declarations": "Q: LINE; E: LINESEGMENT",
    "facts": "Inclination(Q) = Length(E)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: d ) equals UpperFocus ( CONICSECTION: j )",
    "id": 1133,
    "declarations": "d: CONICSECTION; j: CONICSECTION",
    "facts": "LowerVertex(d) = UpperFocus(j)"
},
{
    "assertion": "AngleOf ( LowerVertex ( CONICSECTION: L ), Center ( CONICSECTION: M ), POINT: F ) equals ApplyUnit ( NUMBER: -25, DEGREESTR: degree )",
    "id": 1134,
    "declarations": "L: CONICSECTION; M: CONICSECTION; F: POINT; -25: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(LowerVertex(L), Center(M), F) = ApplyUnit(-25, degree)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: e ) equals UpperVertex ( CONICSECTION: D )",
    "id": 1135,
    "declarations": "e: CONICSECTION; D: CONICSECTION",
    "facts": "UpperFocus(e) = UpperVertex(D)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: O ) equals AXIS: yAxis",
    "id": 1137,
    "declarations": "O: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(O) = yAxis"
},
{
    "assertion": "IsDiameter ( MajorAxis ( ELLIPSE: n ), CIRCLE: U ) equals BOOL: False",
    "id": 1139,
    "declarations": "n: ELLIPSE; U: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MajorAxis(n), U) = False"
},
{
    "assertion": "LocusEquation ( POINT: g ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 1140,
    "declarations": "g: POINT; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "LocusEquation(g) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "lg ( NUMBER: 61 ) equals YCoordinate ( UpperFocus ( CONICSECTION: R ) )",
    "id": 1141,
    "declarations": "61: NUMBER; R: CONICSECTION",
    "facts": "lg(61) = YCoordinate(UpperFocus(R))"
},
{
    "assertion": "Intersection ( CURVE: V, CURVE: U ) equals POINT: V",
    "id": 1142,
    "declarations": "V: CURVE; U: CURVE; V: POINT",
    "facts": "Intersection(V, U) = V"
},
{
    "assertion": "CircumCircle ( TRIANGLE: f ) equals CIRCLE: t",
    "id": 1143,
    "declarations": "f: TRIANGLE; t: CIRCLE",
    "facts": "CircumCircle(f) = t"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: P ) equals LINE: g",
    "id": 1144,
    "declarations": "P: CONICSECTION; g: LINE",
    "facts": "LeftDirectrix(P) = g"
},
{
    "assertion": "IsOutTangent ( CIRCLE: p, CIRCLE: j ) equals BOOL: False",
    "id": 1145,
    "declarations": "p: CIRCLE; j: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(p, j) = False"
},
{
    "assertion": "Asymptote ( HYPERBOLA: f ) equals TangentOfPoint ( LowerFocus ( CONICSECTION: i ), CURVE: t )",
    "id": 1146,
    "declarations": "f: HYPERBOLA; i: CONICSECTION; t: CURVE",
    "facts": "Asymptote(f) = TangentOfPoint(LowerFocus(i), t)"
},
{
    "assertion": "Min ( NUMBER: -72 ) equals NUMBER: 94",
    "id": 1147,
    "declarations": "-72: NUMBER; 94: NUMBER",
    "facts": "Min(-72) = 94"
},
{
    "assertion": "LineSegmentOf ( UpperVertex ( CONICSECTION: A ), FootPoint ( LINE: P, LINE: v ) ) equals LINESEGMENT: e",
    "id": 1148,
    "declarations": "A: CONICSECTION; P: LINE; v: LINE; e: LINESEGMENT",
    "facts": "LineSegmentOf(UpperVertex(A), FootPoint(P, v)) = e"
},
{
    "assertion": "MinorAxis ( ELLIPSE: k ) equals LINESEGMENT: V",
    "id": 1149,
    "declarations": "k: ELLIPSE; V: LINESEGMENT",
    "facts": "MinorAxis(k) = V"
},
{
    "assertion": "XCoordinate ( Circumcenter ( TRIANGLE: G ) ) equals Eccentricity ( CONICSECTION: p )",
    "id": 1150,
    "declarations": "G: TRIANGLE; p: CONICSECTION",
    "facts": "XCoordinate(Circumcenter(G)) = Eccentricity(p)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: B ) equals CIRCLE: e",
    "id": 1151,
    "declarations": "B: TRIANGLE; e: CIRCLE",
    "facts": "CircumCircle(B) = e"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: x ) equals TangentOnPoint ( RightFocus ( CONICSECTION: v ), CURVE: G )",
    "id": 1152,
    "declarations": "x: CONICSECTION; v: CONICSECTION; G: CURVE",
    "facts": "RightDirectrix(x) = TangentOnPoint(RightFocus(v), G)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: G ) equals LINESEGMENT: G",
    "id": 1153,
    "declarations": "G: ELLIPSE; G: LINESEGMENT",
    "facts": "ImaginaryAxis(G) = G"
},
{
    "assertion": "Directrix ( CONICSECTION: U ) equals RightDirectrix ( CONICSECTION: y )",
    "id": 1154,
    "declarations": "U: CONICSECTION; y: CONICSECTION",
    "facts": "Directrix(U) = RightDirectrix(y)"
},
{
    "assertion": "TangentPoint ( LINE: p, CIRCLE: p ) equals LeftVertex ( CONICSECTION: t )",
    "id": 1155,
    "declarations": "p: LINE; p: CIRCLE; t: CONICSECTION",
    "facts": "TangentPoint(p, p) = LeftVertex(t)"
},
{
    "assertion": "Max ( NUMBER: -96 ) equals NUMBER: -42",
    "id": 1156,
    "declarations": "-96: NUMBER; -42: NUMBER",
    "facts": "Max(-96) = -42"
},
{
    "assertion": "Directrix ( CONICSECTION: c ) equals LINE: c",
    "id": 1157,
    "declarations": "c: CONICSECTION; c: LINE",
    "facts": "Directrix(c) = c"
},
{
    "assertion": "Expression ( CURVE: G ) equals EXPRESSION: y*space=*spacee^x",
    "id": 1158,
    "declarations": "G: CURVE; y*space=*spacee^x: EXPRESSION",
    "facts": "Expression(G) = y*space=*spacee^x"
},
{
    "assertion": "RightPart ( HYPERBOLA: r ) equals CURVE: B",
    "id": 1160,
    "declarations": "r: HYPERBOLA; B: CURVE",
    "facts": "RightPart(r) = B"
},
{
    "assertion": "IsParallel ( LINE: a, LINE: b ) equals BOOL: False",
    "id": 1161,
    "declarations": "a: LINE; b: LINE; False: BOOL",
    "facts": "IsParallel(a, b) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: W ) equals POINT: b",
    "id": 1162,
    "declarations": "W: CONICSECTION; b: POINT",
    "facts": "RightVertex(W) = b"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: V ) equals AXIS: yAxis",
    "id": 1163,
    "declarations": "V: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(V) = yAxis"
},
{
    "assertion": "LowerVertex ( CONICSECTION: D ) equals POINT: P",
    "id": 1164,
    "declarations": "D: CONICSECTION; P: POINT",
    "facts": "LowerVertex(D) = P"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: D ) equals TangentOfPoint ( POINT: d, LeftPart ( HYPERBOLA: L ) )",
    "id": 1165,
    "declarations": "D: LINESEGMENT; d: POINT; L: HYPERBOLA",
    "facts": "PerpendicularBisector(D) = TangentOfPoint(d, LeftPart(L))"
},
{
    "assertion": "InterReciprocal ( Perimeter ( CONICSECTION: D ) ) equals HalfFocalLength ( CONICSECTION: b )",
    "id": 1166,
    "declarations": "D: CONICSECTION; b: CONICSECTION",
    "facts": "InterReciprocal(Perimeter(D)) = HalfFocalLength(b)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: z ) equals CIRCLE: s",
    "id": 1167,
    "declarations": "z: TRIANGLE; s: CIRCLE",
    "facts": "CircumCircle(z) = s"
},
{
    "assertion": "Max ( NUMBER: -13 ) equals FocalLength ( CONICSECTION: n )",
    "id": 1168,
    "declarations": "-13: NUMBER; n: CONICSECTION",
    "facts": "Max(-13) = FocalLength(n)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: F ) equals Center ( CONICSECTION: j )",
    "id": 1169,
    "declarations": "F: CONICSECTION; j: CONICSECTION",
    "facts": "LeftVertex(F) = Center(j)"
},
{
    "assertion": "NumIntersection ( CURVE: m, LeftPart ( HYPERBOLA: j ) ) equals Slope ( LINE: N )",
    "id": 1170,
    "declarations": "m: CURVE; j: HYPERBOLA; N: LINE",
    "facts": "NumIntersection(m, LeftPart(j)) = Slope(N)"
},
{
    "assertion": "XCoordinate ( POINT: e ) equals NUMBER: -29",
    "id": 1171,
    "declarations": "e: POINT; -29: NUMBER",
    "facts": "XCoordinate(e) = -29"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: S ) equals LINE: e",
    "id": 1172,
    "declarations": "S: LINESEGMENT; e: LINE",
    "facts": "PerpendicularBisector(S) = e"
},
{
    "assertion": "InterReciprocal ( Diameter ( CIRCLE: l ) ) equals HalfFocalLength ( CONICSECTION: D )",
    "id": 1173,
    "declarations": "l: CIRCLE; D: CONICSECTION",
    "facts": "InterReciprocal(Diameter(l)) = HalfFocalLength(D)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: s, CIRCLE: g ) equals BOOL: True",
    "id": 1174,
    "declarations": "s: LINESEGMENT; g: CIRCLE; True: BOOL",
    "facts": "IsDiameter(s, g) = True"
},
{
    "assertion": "AngleOf ( POINT: f, UpperVertex ( CONICSECTION: P ), Center ( CONICSECTION: f ) ) equals AngleOf ( RightVertex ( CONICSECTION: C ), POINT: j, POINT: R )",
    "id": 1175,
    "declarations": "f: POINT; P: CONICSECTION; f: CONICSECTION; C: CONICSECTION; j: POINT; R: POINT",
    "facts": "AngleOf(f, UpperVertex(P), Center(f)) = AngleOf(RightVertex(C), j, R)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: f ) equals MinorAxis ( ELLIPSE: x )",
    "id": 1176,
    "declarations": "f: ELLIPSE; x: ELLIPSE",
    "facts": "MinorAxis(f) = MinorAxis(x)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: G ) equals LINE: J",
    "id": 1177,
    "declarations": "G: CONICSECTION; J: LINE",
    "facts": "RightDirectrix(G) = J"
},
{
    "assertion": "Diameter ( CIRCLE: D ) equals Quadrant ( Incenter ( TRIANGLE: S ) )",
    "id": 1178,
    "declarations": "D: CIRCLE; S: TRIANGLE",
    "facts": "Diameter(D) = Quadrant(Incenter(S))"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: e ) ) equals Inclination ( LeftDirectrix ( CONICSECTION: o ) )",
    "id": 1179,
    "declarations": "e: CONICSECTION; o: CONICSECTION",
    "facts": "Quadrant(LeftVertex(e)) = Inclination(LeftDirectrix(o))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: t ) equals LeftFocus ( CONICSECTION: F )",
    "id": 1180,
    "declarations": "t: TRIANGLE; F: CONICSECTION",
    "facts": "Orthocenter(t) = LeftFocus(F)"
},
{
    "assertion": "Intersection ( CURVE: C, CURVE: d ) equals LowerFocus ( CONICSECTION: y )",
    "id": 1181,
    "declarations": "C: CURVE; d: CURVE; y: CONICSECTION",
    "facts": "Intersection(C, d) = LowerFocus(y)"
},
{
    "assertion": "Projection ( LeftVertex ( CONICSECTION: n ), LINE: x ) equals LowerFocus ( CONICSECTION: K )",
    "id": 1182,
    "declarations": "n: CONICSECTION; x: LINE; K: CONICSECTION",
    "facts": "Projection(LeftVertex(n), x) = LowerFocus(K)"
},
{
    "assertion": "IsIntersect ( CURVE: Y, CURVE: h ) equals BOOL: True",
    "id": 1183,
    "declarations": "Y: CURVE; h: CURVE; True: BOOL",
    "facts": "IsIntersect(Y, h) = True"
},
{
    "assertion": "Vertex ( CONICSECTION: M ) equals POINT: r",
    "id": 1184,
    "declarations": "M: CONICSECTION; r: POINT",
    "facts": "Vertex(M) = r"
},
{
    "assertion": "UpperFocus ( CONICSECTION: d ) equals POINT: h",
    "id": 1185,
    "declarations": "d: CONICSECTION; h: POINT",
    "facts": "UpperFocus(d) = h"
},
{
    "assertion": "Inclination ( LINE: i ) equals NUMBER: 3",
    "id": 1186,
    "declarations": "i: LINE; 3: NUMBER",
    "facts": "Inclination(i) = 3"
},
{
    "assertion": "Directrix ( CONICSECTION: i ) equals LINE: G",
    "id": 1187,
    "declarations": "i: CONICSECTION; G: LINE",
    "facts": "Directrix(i) = G"
},
{
    "assertion": "Inclination ( LINE: i ) equals NUMBER: -93",
    "id": 1188,
    "declarations": "i: LINE; -93: NUMBER",
    "facts": "Inclination(i) = -93"
},
{
    "assertion": "Focus ( CONICSECTION: m ) equals POINT: b",
    "id": 1189,
    "declarations": "m: CONICSECTION; b: POINT",
    "facts": "Focus(m) = b"
},
{
    "assertion": "Abs ( ImaginaryAxis ( ELLIPSE: H ) ) equals FocalLength ( CONICSECTION: G )",
    "id": 1190,
    "declarations": "H: ELLIPSE; G: CONICSECTION",
    "facts": "Abs(ImaginaryAxis(H)) = FocalLength(G)"
},
{
    "assertion": "InterReciprocal ( Eccentricity ( CONICSECTION: i ) ) equals NUMBER: -58",
    "id": 1191,
    "declarations": "i: CONICSECTION; -58: NUMBER",
    "facts": "InterReciprocal(Eccentricity(i)) = -58"
},
{
    "assertion": "NumIntersection ( CURVE: p, CURVE: F ) equals NUMBER: 20",
    "id": 1192,
    "declarations": "p: CURVE; F: CURVE; 20: NUMBER",
    "facts": "NumIntersection(p, F) = 20"
},
{
    "assertion": "FootPoint ( LINE: n, LINE: N ) equals LeftFocus ( CONICSECTION: Z )",
    "id": 1193,
    "declarations": "n: LINE; N: LINE; Z: CONICSECTION",
    "facts": "FootPoint(n, N) = LeftFocus(Z)"
},
{
    "assertion": "And ( Asymptote ( HYPERBOLA: M ) equals LINE: D, MidPoint ( LINESEGMENT: Z ) equals POINT: H ) equals BOOL: False",
    "id": 1194,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Max ( Slope ( LINE: I ) ) equals sqrt ( Abs ( MinorAxis ( ELLIPSE: b ) ) )",
    "id": 1195,
    "declarations": "I: LINE; b: ELLIPSE",
    "facts": "Max(Slope(I)) = sqrt(Abs(MinorAxis(b)))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: s, TriangleOf ( POINT: g, POINT: O, LeftVertex ( CONICSECTION: I ) ) ) equals BOOL: True",
    "id": 1196,
    "declarations": "s: CIRCLE; g: POINT; O: POINT; I: CONICSECTION; True: BOOL",
    "facts": "IsInscribedCircle(s, TriangleOf(g, O, LeftVertex(I))) = True"
},
{
    "assertion": "XCoordinate ( POINT: U ) equals Distance ( POINT: c, Center ( CONICSECTION: l ) )",
    "id": 1197,
    "declarations": "U: POINT; c: POINT; l: CONICSECTION",
    "facts": "XCoordinate(U) = Distance(c, Center(l))"
},
{
    "assertion": "LocusEquation ( POINT: j ) equals EXPRESSION: x^2*space+*space4*y^2*space=*space16",
    "id": 1198,
    "declarations": "j: POINT; x^2*space+*space4*y^2*space=*space16: EXPRESSION",
    "facts": "LocusEquation(j) = x^2*space+*space4*y^2*space=*space16"
},
{
    "assertion": "LeftPart ( HYPERBOLA: d ) equals RightPart ( HYPERBOLA: t )",
    "id": 1199,
    "declarations": "d: HYPERBOLA; t: HYPERBOLA",
    "facts": "LeftPart(d) = RightPart(t)"
},
{
    "assertion": "Directrix ( CONICSECTION: F ) equals LINE: u",
    "id": 1200,
    "declarations": "F: CONICSECTION; u: LINE",
    "facts": "Directrix(F) = u"
},
{
    "assertion": "MinorAxis ( ELLIPSE: y ) equals LINESEGMENT: S",
    "id": 1201,
    "declarations": "y: ELLIPSE; S: LINESEGMENT",
    "facts": "MinorAxis(y) = S"
},
{
    "assertion": "Center ( CONICSECTION: l ) equals RightFocus ( CONICSECTION: P )",
    "id": 1202,
    "declarations": "l: CONICSECTION; P: CONICSECTION",
    "facts": "Center(l) = RightFocus(P)"
},
{
    "assertion": "Inclination ( LINE: Q ) equals NUMBER: -72",
    "id": 1203,
    "declarations": "Q: LINE; -72: NUMBER",
    "facts": "Inclination(Q) = -72"
},
{
    "assertion": "RightPart ( HYPERBOLA: J ) equals CURVE: P",
    "id": 1204,
    "declarations": "J: HYPERBOLA; P: CURVE",
    "facts": "RightPart(J) = P"
},
{
    "assertion": "sqrt ( Slope ( LINE: j ) ) equals NUMBER: 38",
    "id": 1205,
    "declarations": "j: LINE; 38: NUMBER",
    "facts": "sqrt(Slope(j)) = 38"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: u, CONICSECTION: N ) equals BOOL: False",
    "id": 1206,
    "declarations": "u: LINESEGMENT; N: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(u, N) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: y ) equals POINT: H",
    "id": 1207,
    "declarations": "y: CONICSECTION; H: POINT",
    "facts": "RightFocus(y) = H"
},
{
    "assertion": "CircumCircle ( TRIANGLE: I ) equals CIRCLE: n",
    "id": 1208,
    "declarations": "I: TRIANGLE; n: CIRCLE",
    "facts": "CircumCircle(I) = n"
},
{
    "assertion": "LeftVertex ( CONICSECTION: d ) equals MidPoint ( LINESEGMENT: Y )",
    "id": 1209,
    "declarations": "d: CONICSECTION; Y: LINESEGMENT",
    "facts": "LeftVertex(d) = MidPoint(Y)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: q ) equals POINT: D",
    "id": 1210,
    "declarations": "q: CONICSECTION; D: POINT",
    "facts": "UpperVertex(q) = D"
},
{
    "assertion": "Endpoint ( LINESEGMENT: Z ) equals RightVertex ( CONICSECTION: w )",
    "id": 1211,
    "declarations": "Z: LINESEGMENT; w: CONICSECTION",
    "facts": "Endpoint(Z) = RightVertex(w)"
},
{
    "assertion": "TriangleOf ( POINT: n, POINT: G, LowerFocus ( CONICSECTION: G ) ) equals TRIANGLE: x",
    "id": 1212,
    "declarations": "n: POINT; G: POINT; G: CONICSECTION; x: TRIANGLE",
    "facts": "TriangleOf(n, G, LowerFocus(G)) = x"
},
{
    "assertion": "Min ( Length ( LINESEGMENT: T ) ) equals Perimeter ( CONICSECTION: C )",
    "id": 1213,
    "declarations": "T: LINESEGMENT; C: CONICSECTION",
    "facts": "Min(Length(T)) = Perimeter(C)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: Y ) equals OverlappingLine ( RealAxis ( ELLIPSE: t ) )",
    "id": 1214,
    "declarations": "Y: LINESEGMENT; t: ELLIPSE",
    "facts": "PerpendicularBisector(Y) = OverlappingLine(RealAxis(t))"
},
{
    "assertion": "FocalLength ( CONICSECTION: A ) equals NUMBER: 79",
    "id": 1215,
    "declarations": "A: CONICSECTION; 79: NUMBER",
    "facts": "FocalLength(A) = 79"
},
{
    "assertion": "Focus ( CONICSECTION: X ) equals LowerFocus ( CONICSECTION: W )",
    "id": 1216,
    "declarations": "X: CONICSECTION; W: CONICSECTION",
    "facts": "Focus(X) = LowerFocus(W)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: U ) equals Quadrant ( POINT: G )",
    "id": 1217,
    "declarations": "U: CONICSECTION; G: POINT",
    "facts": "Eccentricity(U) = Quadrant(G)"
},
{
    "assertion": "Locus ( POINT: H ) equals CURVE: v",
    "id": 1218,
    "declarations": "H: POINT; v: CURVE",
    "facts": "Locus(H) = v"
},
{
    "assertion": "sqrt ( Slope ( LINE: l ) ) equals sqrt ( NUMBER: -20 )",
    "id": 1219,
    "declarations": "l: LINE; -20: NUMBER",
    "facts": "sqrt(Slope(l)) = sqrt(-20)"
},
{
    "assertion": "Locus ( UpperFocus ( CONICSECTION: s ) ) equals CURVE: b",
    "id": 1220,
    "declarations": "s: CONICSECTION; b: CURVE",
    "facts": "Locus(UpperFocus(s)) = b"
},
{
    "assertion": "Endpoint ( LINESEGMENT: W ) equals POINT: D",
    "id": 1221,
    "declarations": "W: LINESEGMENT; D: POINT",
    "facts": "Endpoint(W) = D"
},
{
    "assertion": "Min ( NUMBER: 64 ) equals Slope ( LINE: J )",
    "id": 1222,
    "declarations": "64: NUMBER; J: LINE",
    "facts": "Min(64) = Slope(J)"
},
{
    "assertion": "Between ( POINT: m, POINT: W, LeftVertex ( CONICSECTION: S ) ) equals BOOL: True",
    "id": 1223,
    "declarations": "m: POINT; W: POINT; S: CONICSECTION; True: BOOL",
    "facts": "Between(m, W, LeftVertex(S)) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: e ) equals POINT: q",
    "id": 1224,
    "declarations": "e: CONICSECTION; q: POINT",
    "facts": "LeftVertex(e) = q"
},
{
    "assertion": "Distance ( RightFocus ( CONICSECTION: R ), POINT: g ) equals InterReciprocal ( NUMBER: -99 )",
    "id": 1225,
    "declarations": "R: CONICSECTION; g: POINT; -99: NUMBER",
    "facts": "Distance(RightFocus(R), g) = InterReciprocal(-99)"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: F ) ) equals CURVE: k",
    "id": 1226,
    "declarations": "F: CONICSECTION; k: CURVE",
    "facts": "Locus(LeftFocus(F)) = k"
},
{
    "assertion": "Area ( CONICSECTION: S ) equals Radius ( CIRCLE: F )",
    "id": 1227,
    "declarations": "S: CONICSECTION; F: CIRCLE",
    "facts": "Area(S) = Radius(F)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: f, TRIANGLE: b ) equals BOOL: True",
    "id": 1228,
    "declarations": "f: CIRCLE; b: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(f, b) = True"
},
{
    "assertion": "Intersection ( CURVE: m, RightPart ( HYPERBOLA: H ) ) equals RightVertex ( CONICSECTION: k )",
    "id": 1229,
    "declarations": "m: CURVE; H: HYPERBOLA; k: CONICSECTION",
    "facts": "Intersection(m, RightPart(H)) = RightVertex(k)"
},
{
    "assertion": "Abs ( LINESEGMENT: R ) equals Area ( CONICSECTION: x )",
    "id": 1230,
    "declarations": "R: LINESEGMENT; x: CONICSECTION",
    "facts": "Abs(R) = Area(x)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: E ) equals POINT: R",
    "id": 1231,
    "declarations": "E: LINESEGMENT; R: POINT",
    "facts": "Endpoint(E) = R"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: d, TRIANGLE: K ) equals BOOL: True",
    "id": 1232,
    "declarations": "d: CIRCLE; K: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(d, K) = True"
},
{
    "assertion": "Length ( LINESEGMENT: p ) equals NUMBER: 23",
    "id": 1233,
    "declarations": "p: LINESEGMENT; 23: NUMBER",
    "facts": "Length(p) = 23"
},
{
    "assertion": "UpperVertex ( CONICSECTION: D ) equals RightVertex ( CONICSECTION: B )",
    "id": 1234,
    "declarations": "D: CONICSECTION; B: CONICSECTION",
    "facts": "UpperVertex(D) = RightVertex(B)"
},
{
    "assertion": "InterceptChord ( LINE: D, CONICSECTION: n ) equals ImaginaryAxis ( ELLIPSE: v )",
    "id": 1235,
    "declarations": "D: LINE; n: CONICSECTION; v: ELLIPSE",
    "facts": "InterceptChord(D, n) = ImaginaryAxis(v)"
},
{
    "assertion": "TangentOfPoint ( LeftFocus ( CONICSECTION: L ), CURVE: M ) equals LINE: V",
    "id": 1236,
    "declarations": "L: CONICSECTION; M: CURVE; V: LINE",
    "facts": "TangentOfPoint(LeftFocus(L), M) = V"
},
{
    "assertion": "InterReciprocal ( lg ( lg ( lg ( NUMBER: 69 ) ) ) ) equals XCoordinate ( Projection ( POINT: t, LINE: E ) )",
    "id": 1237,
    "declarations": "69: NUMBER; t: POINT; E: LINE",
    "facts": "InterReciprocal(lg(lg(lg(69)))) = XCoordinate(Projection(t, E))"
},
{
    "assertion": "Max ( NUMBER: 35 ) equals NUMBER: 98",
    "id": 1238,
    "declarations": "35: NUMBER; 98: NUMBER",
    "facts": "Max(35) = 98"
},
{
    "assertion": "RightVertex ( CONICSECTION: I ) equals LeftFocus ( CONICSECTION: b )",
    "id": 1239,
    "declarations": "I: CONICSECTION; b: CONICSECTION",
    "facts": "RightVertex(I) = LeftFocus(b)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Y ) equals POINT: d",
    "id": 1240,
    "declarations": "Y: CONICSECTION; d: POINT",
    "facts": "LeftFocus(Y) = d"
},
{
    "assertion": "UpperFocus ( CONICSECTION: Z ) equals UpperVertex ( CONICSECTION: X )",
    "id": 1241,
    "declarations": "Z: CONICSECTION; X: CONICSECTION",
    "facts": "UpperFocus(Z) = UpperVertex(X)"
},
{
    "assertion": "Perimeter ( CONICSECTION: u ) equals Area ( CONICSECTION: u )",
    "id": 1242,
    "declarations": "u: CONICSECTION; u: CONICSECTION",
    "facts": "Perimeter(u) = Area(u)"
},
{
    "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: r ) ) equals NUMBER: -65",
    "id": 1243,
    "declarations": "r: CONICSECTION; -65: NUMBER",
    "facts": "YCoordinate(LowerVertex(r)) = -65"
},
{
    "assertion": "Diameter ( CIRCLE: s ) equals NUMBER: 67",
    "id": 1244,
    "declarations": "s: CIRCLE; 67: NUMBER",
    "facts": "Diameter(s) = 67"
},
{
    "assertion": "Max ( Inclination ( LINE: U ) ) equals NUMBER: -4",
    "id": 1245,
    "declarations": "U: LINE; -4: NUMBER",
    "facts": "Max(Inclination(U)) = -4"
},
{
    "assertion": "Circumcenter ( TRIANGLE: t ) equals POINT: k",
    "id": 1246,
    "declarations": "t: TRIANGLE; k: POINT",
    "facts": "Circumcenter(t) = k"
},
{
    "assertion": "Projection ( LowerVertex ( CONICSECTION: K ), TangentOfPoint ( POINT: I, CURVE: o ) ) equals FootPoint ( PerpendicularBisector ( LINESEGMENT: x ), LINE: S )",
    "id": 1247,
    "declarations": "K: CONICSECTION; I: POINT; o: CURVE; x: LINESEGMENT; S: LINE",
    "facts": "Projection(LowerVertex(K), TangentOfPoint(I, o)) = FootPoint(PerpendicularBisector(x), S)"
},
{
    "assertion": "YCoordinate ( POINT: N ) equals NUMBER: 28",
    "id": 1248,
    "declarations": "N: POINT; 28: NUMBER",
    "facts": "YCoordinate(N) = 28"
},
{
    "assertion": "IsOutTangent ( CIRCLE: s, CIRCLE: P ) equals BOOL: False",
    "id": 1249,
    "declarations": "s: CIRCLE; P: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(s, P) = False"
},
{
    "assertion": "Max ( NUMBER: 80 ) equals Radius ( CIRCLE: c )",
    "id": 1250,
    "declarations": "80: NUMBER; c: CIRCLE",
    "facts": "Max(80) = Radius(c)"
},
{
    "assertion": "InterceptChord ( LINE: S, CONICSECTION: f ) equals ImaginaryAxis ( ELLIPSE: p )",
    "id": 1251,
    "declarations": "S: LINE; f: CONICSECTION; p: ELLIPSE",
    "facts": "InterceptChord(S, f) = ImaginaryAxis(p)"
},
{
    "assertion": "Quadrant ( LowerVertex ( CONICSECTION: D ) ) equals sqrt ( Slope ( LINE: r ) )",
    "id": 1252,
    "declarations": "D: CONICSECTION; r: LINE",
    "facts": "Quadrant(LowerVertex(D)) = sqrt(Slope(r))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: z ) equals LowerVertex ( CONICSECTION: x )",
    "id": 1253,
    "declarations": "z: CONICSECTION; x: CONICSECTION",
    "facts": "LowerFocus(z) = LowerVertex(x)"
},
{
    "assertion": "Intersection ( CURVE: Z, CURVE: m ) equals POINT: F",
    "id": 1254,
    "declarations": "Z: CURVE; m: CURVE; F: POINT",
    "facts": "Intersection(Z, m) = F"
},
{
    "assertion": "Intersection ( CURVE: Y, CURVE: N ) equals Center ( CONICSECTION: N )",
    "id": 1256,
    "declarations": "Y: CURVE; N: CURVE; N: CONICSECTION",
    "facts": "Intersection(Y, N) = Center(N)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: u ) equals LINE: L",
    "id": 1257,
    "declarations": "u: HYPERBOLA; L: LINE",
    "facts": "Asymptote(u) = L"
},
{
    "assertion": "YCoordinate ( POINT: V ) equals Eccentricity ( CONICSECTION: E )",
    "id": 1259,
    "declarations": "V: POINT; E: CONICSECTION",
    "facts": "YCoordinate(V) = Eccentricity(E)"
},
{
    "assertion": "Focus ( CONICSECTION: C ) equals POINT: M",
    "id": 1260,
    "declarations": "C: CONICSECTION; M: POINT",
    "facts": "Focus(C) = M"
},
{
    "assertion": "ApplyUnit ( NUMBER: 34, DEGREESTR: degree )",
    "id": 1261,
    "declarations": "34: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(34, degree) = None"
},
{
    "assertion": "PointOnCurve ( LeftVertex ( CONICSECTION: z ), CURVE: s ) equals BOOL: False",
    "id": 1262,
    "declarations": "z: CONICSECTION; s: CURVE; False: BOOL",
    "facts": "PointOnCurve(LeftVertex(z), s) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: K ) equals POINT: j",
    "id": 1263,
    "declarations": "K: CONICSECTION; j: POINT",
    "facts": "RightVertex(K) = j"
},
{
    "assertion": "YCoordinate ( Circumcenter ( TRIANGLE: r ) ) equals HalfFocalLength ( CONICSECTION: Y )",
    "id": 1264,
    "declarations": "r: TRIANGLE; Y: CONICSECTION",
    "facts": "YCoordinate(Circumcenter(r)) = HalfFocalLength(Y)"
},
{
    "assertion": "InterceptChord ( LINE: k, CONICSECTION: Y ) equals MinorAxis ( ELLIPSE: l )",
    "id": 1265,
    "declarations": "k: LINE; Y: CONICSECTION; l: ELLIPSE",
    "facts": "InterceptChord(k, Y) = MinorAxis(l)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: R ) equals LowerVertex ( CONICSECTION: X )",
    "id": 1266,
    "declarations": "R: TRIANGLE; X: CONICSECTION",
    "facts": "Circumcenter(R) = LowerVertex(X)"
},
{
    "assertion": "IsIntersect ( CURVE: w, CURVE: K ) equals BOOL: True",
    "id": 1267,
    "declarations": "w: CURVE; K: CURVE; True: BOOL",
    "facts": "IsIntersect(w, K) = True"
},
{
    "assertion": "IsChordOf ( RealAxis ( ELLIPSE: I ), CONICSECTION: p ) equals BOOL: True",
    "id": 1268,
    "declarations": "I: ELLIPSE; p: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(RealAxis(I), p) = True"
},
{
    "assertion": "Quadrant ( POINT: V ) equals Intercept ( LINE: t, AXIS: xAxis )",
    "id": 1269,
    "declarations": "V: POINT; t: LINE; xAxis: AXIS",
    "facts": "Quadrant(V) = Intercept(t, xAxis)"
},
{
    "assertion": "sqrt ( InterReciprocal ( NUMBER: -59 ) ) equals Intercept ( LINE: n, AXIS: xAxis )",
    "id": 1270,
    "declarations": "-59: NUMBER; n: LINE; xAxis: AXIS",
    "facts": "sqrt(InterReciprocal(-59)) = Intercept(n, xAxis)"
},
{
    "assertion": "Locus ( POINT: o ) equals Locus ( POINT: u )",
    "id": 1271,
    "declarations": "o: POINT; u: POINT",
    "facts": "Locus(o) = Locus(u)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: W ) equals MidPoint ( LINESEGMENT: W )",
    "id": 1272,
    "declarations": "W: CONICSECTION; W: LINESEGMENT",
    "facts": "LowerVertex(W) = MidPoint(W)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: L ) equals RealAxis ( ELLIPSE: s )",
    "id": 1273,
    "declarations": "L: ELLIPSE; s: ELLIPSE",
    "facts": "ImaginaryAxis(L) = RealAxis(s)"
},
{
    "assertion": "AngleOf ( POINT: z, Center ( CONICSECTION: w ), POINT: e ) equals ApplyUnit ( NUMBER: 57, DEGREESTR: degree )",
    "id": 1274,
    "declarations": "z: POINT; w: CONICSECTION; e: POINT; 57: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(z, Center(w), e) = ApplyUnit(57, degree)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: e ) equals MidPoint ( InterceptChord ( LineOf ( RightFocus ( CONICSECTION: N ), LeftFocus ( CONICSECTION: f ) ), CONICSECTION: S ) )",
    "id": 1275,
    "declarations": "e: TRIANGLE; N: CONICSECTION; f: CONICSECTION; S: CONICSECTION",
    "facts": "Circumcenter(e) = MidPoint(InterceptChord(LineOf(RightFocus(N), LeftFocus(f)), S))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: N ) equals POINT: A",
    "id": 1276,
    "declarations": "N: TRIANGLE; A: POINT",
    "facts": "Orthocenter(N) = A"
},
{
    "assertion": "Locus ( LeftVertex ( CONICSECTION: C ) ) equals CURVE: C",
    "id": 1277,
    "declarations": "C: CONICSECTION; C: CURVE",
    "facts": "Locus(LeftVertex(C)) = C"
},
{
    "assertion": "YCoordinate ( RightVertex ( CONICSECTION: T ) ) equals HalfFocalLength ( CONICSECTION: A )",
    "id": 1278,
    "declarations": "T: CONICSECTION; A: CONICSECTION",
    "facts": "YCoordinate(RightVertex(T)) = HalfFocalLength(A)"
},
{
    "assertion": "PointOnCurve ( POINT: a, CURVE: B ) equals BOOL: False",
    "id": 1279,
    "declarations": "a: POINT; B: CURVE; False: BOOL",
    "facts": "PointOnCurve(a, B) = False"
},
{
    "assertion": "Focus ( CONICSECTION: b ) equals POINT: A",
    "id": 1280,
    "declarations": "b: CONICSECTION; A: POINT",
    "facts": "Focus(b) = A"
},
{
    "assertion": "Abs ( LINESEGMENT: r ) equals NUMBER: 95",
    "id": 1281,
    "declarations": "r: LINESEGMENT; 95: NUMBER",
    "facts": "Abs(r) = 95"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: a ) equals OverlappingLine ( LINESEGMENT: C )",
    "id": 1282,
    "declarations": "a: CONICSECTION; C: LINESEGMENT",
    "facts": "LeftDirectrix(a) = OverlappingLine(C)"
},
{
    "assertion": "IsParallel ( LINE: g, PerpendicularBisector ( LINESEGMENT: H ) ) equals BOOL: True",
    "id": 1283,
    "declarations": "g: LINE; H: LINESEGMENT; True: BOOL",
    "facts": "IsParallel(g, PerpendicularBisector(H)) = True"
},
{
    "assertion": "RealAxis ( ELLIPSE: i ) equals LINESEGMENT: j",
    "id": 1284,
    "declarations": "i: ELLIPSE; j: LINESEGMENT",
    "facts": "RealAxis(i) = j"
},
{
    "assertion": "Radius ( CIRCLE: g ) equals NUMBER: -34",
    "id": 1285,
    "declarations": "g: CIRCLE; -34: NUMBER",
    "facts": "Radius(g) = -34"
},
{
    "assertion": "IsParallel ( TangentOnPoint ( Orthocenter ( TRIANGLE: e ), CURVE: S ), OverlappingLine ( LINESEGMENT: U ) ) equals BOOL: True",
    "id": 1286,
    "declarations": "e: TRIANGLE; S: CURVE; U: LINESEGMENT; True: BOOL",
    "facts": "IsParallel(TangentOnPoint(Orthocenter(e), S), OverlappingLine(U)) = True"
},
{
    "assertion": "LocusEquation ( RightFocus ( CONICSECTION: K ) ) equals EXPRESSION: y*space=*spacee^x",
    "id": 1287,
    "declarations": "K: CONICSECTION; y*space=*spacee^x: EXPRESSION",
    "facts": "LocusEquation(RightFocus(K)) = y*space=*spacee^x"
},
{
    "assertion": "UpperFocus ( CONICSECTION: U ) equals POINT: l",
    "id": 1288,
    "declarations": "U: CONICSECTION; l: POINT",
    "facts": "UpperFocus(U) = l"
},
{
    "assertion": "ApplyUnit ( NUMBER: -36, DEGREESTR: degree )",
    "id": 1289,
    "declarations": "-36: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-36, degree) = None"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: W ) equals LINE: A",
    "id": 1290,
    "declarations": "W: CONICSECTION; A: LINE",
    "facts": "RightDirectrix(W) = A"
},
{
    "assertion": "Orthocenter ( TRIANGLE: t ) equals MidPoint ( LINESEGMENT: W )",
    "id": 1291,
    "declarations": "t: TRIANGLE; W: LINESEGMENT",
    "facts": "Orthocenter(t) = MidPoint(W)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: i ) equals RightVertex ( CONICSECTION: A )",
    "id": 1292,
    "declarations": "i: TRIANGLE; A: CONICSECTION",
    "facts": "Circumcenter(i) = RightVertex(A)"
},
{
    "assertion": "Radius ( CIRCLE: O ) equals YCoordinate ( UpperFocus ( CONICSECTION: W ) )",
    "id": 1293,
    "declarations": "O: CIRCLE; W: CONICSECTION",
    "facts": "Radius(O) = YCoordinate(UpperFocus(W))"
},
{
    "assertion": "Between ( POINT: D, Projection ( POINT: a, PerpendicularBisector ( LINESEGMENT: S ) ), POINT: w ) equals BOOL: True",
    "id": 1294,
    "declarations": "D: POINT; a: POINT; S: LINESEGMENT; w: POINT; True: BOOL",
    "facts": "Between(D, Projection(a, PerpendicularBisector(S)), w) = True"
},
{
    "assertion": "IsPerpendicular ( LINE: E, LINE: Q ) equals BOOL: True",
    "id": 1295,
    "declarations": "E: LINE; Q: LINE; True: BOOL",
    "facts": "IsPerpendicular(E, Q) = True"
},
{
    "assertion": "NumIntersection ( CURVE: V, CURVE: w ) equals InterReciprocal ( NUMBER: 59 )",
    "id": 1296,
    "declarations": "V: CURVE; w: CURVE; 59: NUMBER",
    "facts": "NumIntersection(V, w) = InterReciprocal(59)"
},
{
    "assertion": "IsTangent ( LINE: o, CONICSECTION: L ) equals BOOL: True",
    "id": 1297,
    "declarations": "o: LINE; L: CONICSECTION; True: BOOL",
    "facts": "IsTangent(o, L) = True"
},
{
    "assertion": "FocalLength ( CONICSECTION: S ) equals NUMBER: 89",
    "id": 1298,
    "declarations": "S: CONICSECTION; 89: NUMBER",
    "facts": "FocalLength(S) = 89"
},
{
    "assertion": "Negation ( InterReciprocal ( XCoordinate ( POINT: H ) ) equals Quadrant ( POINT: b ) ) equals BOOL: False",
    "id": 1299,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsPerpendicular ( LineOf ( RightVertex ( CONICSECTION: V ), POINT: M ), LINE: Y ) equals BOOL: False",
    "id": 1300,
    "declarations": "V: CONICSECTION; M: POINT; Y: LINE; False: BOOL",
    "facts": "IsPerpendicular(LineOf(RightVertex(V), M), Y) = False"
},
{
    "assertion": "Orthocenter ( TRIANGLE: P ) equals LowerVertex ( CONICSECTION: C )",
    "id": 1301,
    "declarations": "P: TRIANGLE; C: CONICSECTION",
    "facts": "Orthocenter(P) = LowerVertex(C)"
},
{
    "assertion": "Projection ( LowerFocus ( CONICSECTION: l ), LINE: m ) equals POINT: q",
    "id": 1302,
    "declarations": "l: CONICSECTION; m: LINE; q: POINT",
    "facts": "Projection(LowerFocus(l), m) = q"
},
{
    "assertion": "Area ( CONICSECTION: d ) equals Radius ( CircumCircle ( TRIANGLE: K ) )",
    "id": 1303,
    "declarations": "d: CONICSECTION; K: TRIANGLE",
    "facts": "Area(d) = Radius(CircumCircle(K))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: D ) equals POINT: w",
    "id": 1304,
    "declarations": "D: LINESEGMENT; w: POINT",
    "facts": "Endpoint(D) = w"
},
{
    "assertion": "FocalLength ( CONICSECTION: B ) equals NUMBER: 69",
    "id": 1305,
    "declarations": "B: CONICSECTION; 69: NUMBER",
    "facts": "FocalLength(B) = 69"
},
{
    "assertion": "MidPoint ( LINESEGMENT: I ) equals POINT: C",
    "id": 1306,
    "declarations": "I: LINESEGMENT; C: POINT",
    "facts": "MidPoint(I) = C"
},
{
    "assertion": "Endpoint ( RealAxis ( ELLIPSE: F ) ) equals POINT: G",
    "id": 1307,
    "declarations": "F: ELLIPSE; G: POINT",
    "facts": "Endpoint(RealAxis(F)) = G"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: S ) equals LINE: v",
    "id": 1308,
    "declarations": "S: LINESEGMENT; v: LINE",
    "facts": "PerpendicularBisector(S) = v"
},
{
    "assertion": "RightFocus ( CONICSECTION: U ) equals LowerVertex ( CONICSECTION: d )",
    "id": 1309,
    "declarations": "U: CONICSECTION; d: CONICSECTION",
    "facts": "RightFocus(U) = LowerVertex(d)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: O ) equals POINT: L",
    "id": 1310,
    "declarations": "O: LINESEGMENT; L: POINT",
    "facts": "Endpoint(O) = L"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: B ) equals LINESEGMENT: i",
    "id": 1311,
    "declarations": "B: ELLIPSE; i: LINESEGMENT",
    "facts": "ImaginaryAxis(B) = i"
},
{
    "assertion": "Directrix ( CONICSECTION: a ) equals LINE: v",
    "id": 1312,
    "declarations": "a: CONICSECTION; v: LINE",
    "facts": "Directrix(a) = v"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Z ) equals POINT: p",
    "id": 1313,
    "declarations": "Z: TRIANGLE; p: POINT",
    "facts": "Orthocenter(Z) = p"
},
{
    "assertion": "IsIntersect ( CURVE: o, CURVE: V ) equals BOOL: True",
    "id": 1314,
    "declarations": "o: CURVE; V: CURVE; True: BOOL",
    "facts": "IsIntersect(o, V) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: x ) equals lg ( DotProduct ( VECTOR: f, VECTOR: R ) )",
    "id": 1315,
    "declarations": "x: CONICSECTION; f: VECTOR; R: VECTOR",
    "facts": "HalfFocalLength(x) = lg(DotProduct(f, R))"
},
{
    "assertion": "XCoordinate ( POINT: O ) equals Abs ( RealAxis ( ELLIPSE: O ) )",
    "id": 1316,
    "declarations": "O: POINT; O: ELLIPSE",
    "facts": "XCoordinate(O) = Abs(RealAxis(O))"
},
{
    "assertion": "IsInTangent ( CIRCLE: b, CIRCLE: c ) equals BOOL: True",
    "id": 1317,
    "declarations": "b: CIRCLE; c: CIRCLE; True: BOOL",
    "facts": "IsInTangent(b, c) = True"
},
{
    "assertion": "IsParallel ( LINE: t, LINE: H ) equals BOOL: False",
    "id": 1318,
    "declarations": "t: LINE; H: LINE; False: BOOL",
    "facts": "IsParallel(t, H) = False"
},
{
    "assertion": "InterReciprocal ( Min ( FocalLength ( CONICSECTION: h ) ) ) equals Abs ( LINESEGMENT: T )",
    "id": 1319,
    "declarations": "h: CONICSECTION; T: LINESEGMENT",
    "facts": "InterReciprocal(Min(FocalLength(h))) = Abs(T)"
},
{
    "assertion": "Quadrant ( RightVertex ( CONICSECTION: L ) ) equals Quadrant ( UpperVertex ( CONICSECTION: a ) )",
    "id": 1320,
    "declarations": "L: CONICSECTION; a: CONICSECTION",
    "facts": "Quadrant(RightVertex(L)) = Quadrant(UpperVertex(a))"
},
{
    "assertion": "Center ( CONICSECTION: a ) equals POINT: V",
    "id": 1321,
    "declarations": "a: CONICSECTION; V: POINT",
    "facts": "Center(a) = V"
},
{
    "assertion": "RealAxis ( ELLIPSE: M ) equals ImaginaryAxis ( ELLIPSE: J )",
    "id": 1322,
    "declarations": "M: ELLIPSE; J: ELLIPSE",
    "facts": "RealAxis(M) = ImaginaryAxis(J)"
},
{
    "assertion": "Min ( Length ( MinorAxis ( ELLIPSE: G ) ) ) equals Quadrant ( POINT: r )",
    "id": 1323,
    "declarations": "G: ELLIPSE; r: POINT",
    "facts": "Min(Length(MinorAxis(G))) = Quadrant(r)"
},
{
    "assertion": "Slope ( LINE: i ) equals sqrt ( NUMBER: 31 )",
    "id": 1324,
    "declarations": "i: LINE; 31: NUMBER",
    "facts": "Slope(i) = sqrt(31)"
},
{
    "assertion": "LocusEquation ( POINT: D ) equals EXPRESSION: x^3*space+*spacey^3*space=*space1",
    "id": 1325,
    "declarations": "D: POINT; x^3*space+*spacey^3*space=*space1: EXPRESSION",
    "facts": "LocusEquation(D) = x^3*space+*spacey^3*space=*space1"
},
{
    "assertion": "NumIntersection ( CURVE: o, CURVE: F ) equals Radius ( CircumCircle ( TRIANGLE: S ) )",
    "id": 1327,
    "declarations": "o: CURVE; F: CURVE; S: TRIANGLE",
    "facts": "NumIntersection(o, F) = Radius(CircumCircle(S))"
},
{
    "assertion": "Negation ( MajorAxis ( ELLIPSE: M ) equals MinorAxis ( ELLIPSE: n ) ) equals BOOL: True",
    "id": 1328,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightPart ( HYPERBOLA: T ) equals LeftPart ( HYPERBOLA: Q )",
    "id": 1329,
    "declarations": "T: HYPERBOLA; Q: HYPERBOLA",
    "facts": "RightPart(T) = LeftPart(Q)"
},
{
    "assertion": "LineSegmentOf ( POINT: X, POINT: g ) equals LINESEGMENT: k",
    "id": 1330,
    "declarations": "X: POINT; g: POINT; k: LINESEGMENT",
    "facts": "LineSegmentOf(X, g) = k"
},
{
    "assertion": "RightVertex ( CONICSECTION: X ) equals LeftVertex ( CONICSECTION: q )",
    "id": 1331,
    "declarations": "X: CONICSECTION; q: CONICSECTION",
    "facts": "RightVertex(X) = LeftVertex(q)"
},
{
    "assertion": "Distance ( POINT: M, POINT: v ) equals sqrt ( sqrt ( FocalLength ( CONICSECTION: o ) ) )",
    "id": 1332,
    "declarations": "M: POINT; v: POINT; o: CONICSECTION",
    "facts": "Distance(M, v) = sqrt(sqrt(FocalLength(o)))"
},
{
    "assertion": "Area ( CONICSECTION: q ) equals FocalLength ( CONICSECTION: I )",
    "id": 1333,
    "declarations": "q: CONICSECTION; I: CONICSECTION",
    "facts": "Area(q) = FocalLength(I)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: U, CONICSECTION: w ) equals BOOL: False",
    "id": 1334,
    "declarations": "U: LINESEGMENT; w: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(U, w) = False"
},
{
    "assertion": "XCoordinate ( Center ( CONICSECTION: z ) ) equals NUMBER: 8",
    "id": 1335,
    "declarations": "z: CONICSECTION; 8: NUMBER",
    "facts": "XCoordinate(Center(z)) = 8"
},
{
    "assertion": "LeftFocus ( CONICSECTION: z ) equals POINT: w",
    "id": 1336,
    "declarations": "z: CONICSECTION; w: POINT",
    "facts": "LeftFocus(z) = w"
},
{
    "assertion": "Asymptote ( HYPERBOLA: x ) equals LINE: R",
    "id": 1337,
    "declarations": "x: HYPERBOLA; R: LINE",
    "facts": "Asymptote(x) = R"
},
{
    "assertion": "Orthocenter ( TRIANGLE: y ) equals POINT: c",
    "id": 1338,
    "declarations": "y: TRIANGLE; c: POINT",
    "facts": "Orthocenter(y) = c"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: A, CIRCLE: t ) equals BOOL: True",
    "id": 1339,
    "declarations": "A: LINESEGMENT; t: CIRCLE; True: BOOL",
    "facts": "IsDiameter(A, t) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Z ) equals POINT: W",
    "id": 1340,
    "declarations": "Z: TRIANGLE; W: POINT",
    "facts": "Orthocenter(Z) = W"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: X, CONICSECTION: l ) equals BOOL: False",
    "id": 1341,
    "declarations": "X: LINESEGMENT; l: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(X, l) = False"
},
{
    "assertion": "Quadrant ( POINT: D ) equals NUMBER: 2",
    "id": 1342,
    "declarations": "D: POINT; 2: NUMBER",
    "facts": "Quadrant(D) = 2"
},
{
    "assertion": "UpperVertex ( CONICSECTION: l ) equals UpperFocus ( CONICSECTION: C )",
    "id": 1343,
    "declarations": "l: CONICSECTION; C: CONICSECTION",
    "facts": "UpperVertex(l) = UpperFocus(C)"
},
{
    "assertion": "RightFocus ( CONICSECTION: b ) equals LeftFocus ( CONICSECTION: i )",
    "id": 1344,
    "declarations": "b: CONICSECTION; i: CONICSECTION",
    "facts": "RightFocus(b) = LeftFocus(i)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: s ) equals ImaginaryAxis ( ELLIPSE: l )",
    "id": 1345,
    "declarations": "s: ELLIPSE; l: ELLIPSE",
    "facts": "MinorAxis(s) = ImaginaryAxis(l)"
},
{
    "assertion": "TangentPoint ( LINE: R, CIRCLE: E ) equals POINT: O",
    "id": 1346,
    "declarations": "R: LINE; E: CIRCLE; O: POINT",
    "facts": "TangentPoint(R, E) = O"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: s ) equals LINESEGMENT: Y",
    "id": 1347,
    "declarations": "s: ELLIPSE; Y: LINESEGMENT",
    "facts": "ImaginaryAxis(s) = Y"
},
{
    "assertion": "TangentPoint ( LINE: d, CIRCLE: f ) equals LowerFocus ( CONICSECTION: s )",
    "id": 1348,
    "declarations": "d: LINE; f: CIRCLE; s: CONICSECTION",
    "facts": "TangentPoint(d, f) = LowerFocus(s)"
},
{
    "assertion": "LineSegmentOf ( Incenter ( TRIANGLE: t ), LowerVertex ( CONICSECTION: y ) ) equals LINESEGMENT: B",
    "id": 1349,
    "declarations": "t: TRIANGLE; y: CONICSECTION; B: LINESEGMENT",
    "facts": "LineSegmentOf(Incenter(t), LowerVertex(y)) = B"
},
{
    "assertion": "PerpendicularBisector ( RealAxis ( ELLIPSE: t ) ) equals LINE: t",
    "id": 1350,
    "declarations": "t: ELLIPSE; t: LINE",
    "facts": "PerpendicularBisector(RealAxis(t)) = t"
},
{
    "assertion": "MidPoint ( LINESEGMENT: G ) equals UpperVertex ( CONICSECTION: c )",
    "id": 1351,
    "declarations": "G: LINESEGMENT; c: CONICSECTION",
    "facts": "MidPoint(G) = UpperVertex(c)"
},
{
    "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: j ) ) equals Min ( NUMBER: -46 )",
    "id": 1352,
    "declarations": "j: CONICSECTION; -46: NUMBER",
    "facts": "YCoordinate(LowerVertex(j)) = Min(-46)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: c ) equals Projection ( Orthocenter ( TRIANGLE: S ), LINE: K )",
    "id": 1353,
    "declarations": "c: CONICSECTION; S: TRIANGLE; K: LINE",
    "facts": "LeftVertex(c) = Projection(Orthocenter(S), K)"
},
{
    "assertion": "IsParallel ( LINE: s, OverlappingLine ( LINESEGMENT: x ) ) equals BOOL: False",
    "id": 1354,
    "declarations": "s: LINE; x: LINESEGMENT; False: BOOL",
    "facts": "IsParallel(s, OverlappingLine(x)) = False"
},
{
    "assertion": "LeftPart ( HYPERBOLA: c ) equals LeftPart ( HYPERBOLA: i )",
    "id": 1355,
    "declarations": "c: HYPERBOLA; i: HYPERBOLA",
    "facts": "LeftPart(c) = LeftPart(i)"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: S ) ) equals NumIntersection ( CURVE: h, LeftPart ( HYPERBOLA: C ) )",
    "id": 1356,
    "declarations": "S: TRIANGLE; h: CURVE; C: HYPERBOLA",
    "facts": "Diameter(CircumCircle(S)) = NumIntersection(h, LeftPart(C))"
},
{
    "assertion": "Directrix ( CONICSECTION: k ) equals LINE: p",
    "id": 1357,
    "declarations": "k: CONICSECTION; p: LINE",
    "facts": "Directrix(k) = p"
},
{
    "assertion": "Slope ( PerpendicularBisector ( LINESEGMENT: R ) ) equals XCoordinate ( POINT: W )",
    "id": 1358,
    "declarations": "R: LINESEGMENT; W: POINT",
    "facts": "Slope(PerpendicularBisector(R)) = XCoordinate(W)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: j ) equals CIRCLE: Q",
    "id": 1359,
    "declarations": "j: TRIANGLE; Q: CIRCLE",
    "facts": "CircumCircle(j) = Q"
},
{
    "assertion": "Center ( CONICSECTION: y ) equals Projection ( POINT: Z, LINE: C )",
    "id": 1360,
    "declarations": "y: CONICSECTION; Z: POINT; C: LINE",
    "facts": "Center(y) = Projection(Z, C)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: G ) equals CIRCLE: g",
    "id": 1361,
    "declarations": "G: TRIANGLE; g: CIRCLE",
    "facts": "CircumCircle(G) = g"
},
{
    "assertion": "Center ( CONICSECTION: q ) equals POINT: d",
    "id": 1362,
    "declarations": "q: CONICSECTION; d: POINT",
    "facts": "Center(q) = d"
},
{
    "assertion": "LowerFocus ( CONICSECTION: Q ) equals FootPoint ( LINE: B, LINE: W )",
    "id": 1363,
    "declarations": "Q: CONICSECTION; B: LINE; W: LINE",
    "facts": "LowerFocus(Q) = FootPoint(B, W)"
},
{
    "assertion": "IsParallel ( LINE: V, LINE: m ) equals BOOL: True",
    "id": 1364,
    "declarations": "V: LINE; m: LINE; True: BOOL",
    "facts": "IsParallel(V, m) = True"
},
{
    "assertion": "LocusEquation ( Orthocenter ( TRIANGLE: R ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 1365,
    "declarations": "R: TRIANGLE; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(Orthocenter(R)) = y*space=*spacelog(x)"
},
{
    "assertion": "NumIntersection ( CURVE: R, CURVE: W ) equals Area ( CONICSECTION: W )",
    "id": 1366,
    "declarations": "R: CURVE; W: CURVE; W: CONICSECTION",
    "facts": "NumIntersection(R, W) = Area(W)"
},
{
    "assertion": "RightVertex ( CONICSECTION: C ) equals POINT: E",
    "id": 1367,
    "declarations": "C: CONICSECTION; E: POINT",
    "facts": "RightVertex(C) = E"
},
{
    "assertion": "Center ( CONICSECTION: q ) equals POINT: E",
    "id": 1368,
    "declarations": "q: CONICSECTION; E: POINT",
    "facts": "Center(q) = E"
},
{
    "assertion": "Directrix ( CONICSECTION: P ) equals LINE: u",
    "id": 1369,
    "declarations": "P: CONICSECTION; u: LINE",
    "facts": "Directrix(P) = u"
},
{
    "assertion": "FocalLength ( CONICSECTION: d ) equals Quadrant ( UpperVertex ( CONICSECTION: z ) )",
    "id": 1370,
    "declarations": "d: CONICSECTION; z: CONICSECTION",
    "facts": "FocalLength(d) = Quadrant(UpperVertex(z))"
},
{
    "assertion": "Negation ( Focus ( CONICSECTION: o ) equals RightVertex ( CONICSECTION: C ) ) equals BOOL: False",
    "id": 1371,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MinorAxis ( ELLIPSE: x ) equals LINESEGMENT: q",
    "id": 1372,
    "declarations": "x: ELLIPSE; q: LINESEGMENT",
    "facts": "MinorAxis(x) = q"
},
{
    "assertion": "InterReciprocal ( NUMBER: -2 ) equals YCoordinate ( RightVertex ( CONICSECTION: r ) )",
    "id": 1373,
    "declarations": "-2: NUMBER; r: CONICSECTION",
    "facts": "InterReciprocal(-2) = YCoordinate(RightVertex(r))"
},
{
    "assertion": "LineOf ( Orthocenter ( TRIANGLE: t ), RightVertex ( CONICSECTION: l ) ) equals TangentOnPoint ( Circumcenter ( TRIANGLE: a ), CURVE: W )",
    "id": 1374,
    "declarations": "t: TRIANGLE; l: CONICSECTION; a: TRIANGLE; W: CURVE",
    "facts": "LineOf(Orthocenter(t), RightVertex(l)) = TangentOnPoint(Circumcenter(a), W)"
},
{
    "assertion": "Length ( MinorAxis ( ELLIPSE: T ) ) equals NUMBER: 100",
    "id": 1375,
    "declarations": "T: ELLIPSE; 100: NUMBER",
    "facts": "Length(MinorAxis(T)) = 100"
},
{
    "assertion": "Asymptote ( HYPERBOLA: z ) equals TangentOnPoint ( UpperVertex ( CONICSECTION: r ), RightPart ( HYPERBOLA: B ) )",
    "id": 1376,
    "declarations": "z: HYPERBOLA; r: CONICSECTION; B: HYPERBOLA",
    "facts": "Asymptote(z) = TangentOnPoint(UpperVertex(r), RightPart(B))"
},
{
    "assertion": "Quadrant ( LeftFocus ( CONICSECTION: u ) ) equals Abs ( LINESEGMENT: V )",
    "id": 1377,
    "declarations": "u: CONICSECTION; V: LINESEGMENT",
    "facts": "Quadrant(LeftFocus(u)) = Abs(V)"
},
{
    "assertion": "PointOnCurve ( MidPoint ( LINESEGMENT: t ), CURVE: V ) equals BOOL: False",
    "id": 1378,
    "declarations": "t: LINESEGMENT; V: CURVE; False: BOOL",
    "facts": "PointOnCurve(MidPoint(t), V) = False"
},
{
    "assertion": "ApplyUnit ( Inclination ( LINE: O ), DEGREESTR: degree )",
    "id": 1379,
    "declarations": "O: LINE; degree: DEGREESTR",
    "facts": "ApplyUnit(Inclination(O), degree) = None"
},
{
    "assertion": "ApplyUnit ( lg ( Length ( RealAxis ( ELLIPSE: M ) ) ), DEGREESTR: degree )",
    "id": 1380,
    "declarations": "M: ELLIPSE; degree: DEGREESTR",
    "facts": "ApplyUnit(lg(Length(RealAxis(M))), degree) = None"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: x ) ) equals LINE: e",
    "id": 1381,
    "declarations": "x: ELLIPSE; e: LINE",
    "facts": "OverlappingLine(MinorAxis(x)) = e"
},
{
    "assertion": "UpperVertex ( CONICSECTION: m ) equals RightVertex ( CONICSECTION: j )",
    "id": 1382,
    "declarations": "m: CONICSECTION; j: CONICSECTION",
    "facts": "UpperVertex(m) = RightVertex(j)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: k ) equals POINT: i",
    "id": 1383,
    "declarations": "k: CONICSECTION; i: POINT",
    "facts": "LowerFocus(k) = i"
},
{
    "assertion": "CircumCircle ( TRIANGLE: a ) equals CIRCLE: K",
    "id": 1384,
    "declarations": "a: TRIANGLE; K: CIRCLE",
    "facts": "CircumCircle(a) = K"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: y, TRIANGLE: F ) equals BOOL: False",
    "id": 1385,
    "declarations": "y: CIRCLE; F: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(y, F) = False"
},
{
    "assertion": "UpperVertex ( CONICSECTION: q ) equals POINT: d",
    "id": 1387,
    "declarations": "q: CONICSECTION; d: POINT",
    "facts": "UpperVertex(q) = d"
},
{
    "assertion": "lg ( Intercept ( LINE: G, AXIS: yAxis ) ) equals NUMBER: 1",
    "id": 1388,
    "declarations": "G: LINE; yAxis: AXIS; 1: NUMBER",
    "facts": "lg(Intercept(G, yAxis)) = 1"
},
{
    "assertion": "MajorAxis ( ELLIPSE: l ) equals LINESEGMENT: j",
    "id": 1389,
    "declarations": "l: ELLIPSE; j: LINESEGMENT",
    "facts": "MajorAxis(l) = j"
},
{
    "assertion": "LineSegmentOf ( MidPoint ( LINESEGMENT: C ), POINT: l ) equals RealAxis ( ELLIPSE: j )",
    "id": 1390,
    "declarations": "C: LINESEGMENT; l: POINT; j: ELLIPSE",
    "facts": "LineSegmentOf(MidPoint(C), l) = RealAxis(j)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -74, DEGREESTR: degree )",
    "id": 1391,
    "declarations": "-74: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-74, degree) = None"
},
{
    "assertion": "NumIntersection ( CURVE: W, LeftPart ( HYPERBOLA: I ) ) equals InterReciprocal ( Area ( CONICSECTION: g ) )",
    "id": 1392,
    "declarations": "W: CURVE; I: HYPERBOLA; g: CONICSECTION",
    "facts": "NumIntersection(W, LeftPart(I)) = InterReciprocal(Area(g))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: k ) equals POINT: m",
    "id": 1393,
    "declarations": "k: TRIANGLE; m: POINT",
    "facts": "Circumcenter(k) = m"
},
{
    "assertion": "MinorAxis ( ELLIPSE: R ) equals LINESEGMENT: Y",
    "id": 1394,
    "declarations": "R: ELLIPSE; Y: LINESEGMENT",
    "facts": "MinorAxis(R) = Y"
},
{
    "assertion": "Diameter ( CIRCLE: H ) equals HalfFocalLength ( CONICSECTION: y )",
    "id": 1395,
    "declarations": "H: CIRCLE; y: CONICSECTION",
    "facts": "Diameter(H) = HalfFocalLength(y)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: D ) equals POINT: q",
    "id": 1396,
    "declarations": "D: CONICSECTION; q: POINT",
    "facts": "LeftVertex(D) = q"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: o ) equals PerpendicularBisector ( MinorAxis ( ELLIPSE: a ) )",
    "id": 1397,
    "declarations": "o: LINESEGMENT; a: ELLIPSE",
    "facts": "PerpendicularBisector(o) = PerpendicularBisector(MinorAxis(a))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: y ) equals LINESEGMENT: E",
    "id": 1398,
    "declarations": "y: ELLIPSE; E: LINESEGMENT",
    "facts": "MinorAxis(y) = E"
},
{
    "assertion": "LeftFocus ( CONICSECTION: P ) equals POINT: m",
    "id": 1399,
    "declarations": "P: CONICSECTION; m: POINT",
    "facts": "LeftFocus(P) = m"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: W ) ) equals POINT: d",
    "id": 1400,
    "declarations": "W: ELLIPSE; d: POINT",
    "facts": "Endpoint(ImaginaryAxis(W)) = d"
},
{
    "assertion": "Between ( Center ( CONICSECTION: c ), Orthocenter ( TRIANGLE: M ), POINT: a ) equals BOOL: True",
    "id": 1401,
    "declarations": "c: CONICSECTION; M: TRIANGLE; a: POINT; True: BOOL",
    "facts": "Between(Center(c), Orthocenter(M), a) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: q ) equals LINE: n",
    "id": 1402,
    "declarations": "q: CONICSECTION; n: LINE",
    "facts": "RightDirectrix(q) = n"
},
{
    "assertion": "LineOf ( POINT: F, POINT: i ) equals PerpendicularBisector ( LINESEGMENT: m )",
    "id": 1403,
    "declarations": "F: POINT; i: POINT; m: LINESEGMENT",
    "facts": "LineOf(F, i) = PerpendicularBisector(m)"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: H ) ) equals Intercept ( PerpendicularBisector ( LINESEGMENT: m ), AXIS: yAxis )",
    "id": 1404,
    "declarations": "H: CONICSECTION; m: LINESEGMENT; yAxis: AXIS",
    "facts": "XCoordinate(LeftFocus(H)) = Intercept(PerpendicularBisector(m), yAxis)"
},
{
    "assertion": "LineSegmentOf ( Circumcenter ( TRIANGLE: i ), POINT: z ) equals LINESEGMENT: P",
    "id": 1405,
    "declarations": "i: TRIANGLE; z: POINT; P: LINESEGMENT",
    "facts": "LineSegmentOf(Circumcenter(i), z) = P"
},
{
    "assertion": "Distance ( RightVertex ( CONICSECTION: C ), Projection ( RightFocus ( CONICSECTION: L ), TangentOnPoint ( LeftVertex ( CONICSECTION: A ), RightPart ( HYPERBOLA: p ) ) ) ) equals Perimeter ( CONICSECTION: x )",
    "id": 1406,
    "declarations": "C: CONICSECTION; L: CONICSECTION; A: CONICSECTION; p: HYPERBOLA; x: CONICSECTION",
    "facts": "Distance(RightVertex(C), Projection(RightFocus(L), TangentOnPoint(LeftVertex(A), RightPart(p)))) = Perimeter(x)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: C ) equals LINE: c",
    "id": 1407,
    "declarations": "C: HYPERBOLA; c: LINE",
    "facts": "Asymptote(C) = c"
},
{
    "assertion": "Asymptote ( HYPERBOLA: T ) equals LINE: V",
    "id": 1408,
    "declarations": "T: HYPERBOLA; V: LINE",
    "facts": "Asymptote(T) = V"
},
{
    "assertion": "IsPerpendicular ( LINE: k, LINE: d ) equals BOOL: True",
    "id": 1409,
    "declarations": "k: LINE; d: LINE; True: BOOL",
    "facts": "IsPerpendicular(k, d) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: o ) equals FocalLength ( CONICSECTION: d )",
    "id": 1410,
    "declarations": "o: CONICSECTION; d: CONICSECTION",
    "facts": "HalfFocalLength(o) = FocalLength(d)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: m ) equals LINE: O",
    "id": 1411,
    "declarations": "m: CONICSECTION; O: LINE",
    "facts": "LeftDirectrix(m) = O"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: O ) equals NUMBER: -15",
    "id": 1412,
    "declarations": "O: CONICSECTION; -15: NUMBER",
    "facts": "HalfFocalLength(O) = -15"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: v ) ) equals RightPart ( HYPERBOLA: z )",
    "id": 1413,
    "declarations": "v: CONICSECTION; z: HYPERBOLA",
    "facts": "Locus(LeftFocus(v)) = RightPart(z)"
},
{
    "assertion": "Perimeter ( CONICSECTION: u ) equals InterReciprocal ( NUMBER: -32 )",
    "id": 1414,
    "declarations": "u: CONICSECTION; -32: NUMBER",
    "facts": "Perimeter(u) = InterReciprocal(-32)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: a ) equals Circumcenter ( TRIANGLE: g )",
    "id": 1415,
    "declarations": "a: CONICSECTION; g: TRIANGLE",
    "facts": "LowerFocus(a) = Circumcenter(g)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: p ) equals LeftFocus ( CONICSECTION: U )",
    "id": 1416,
    "declarations": "p: CONICSECTION; U: CONICSECTION",
    "facts": "UpperVertex(p) = LeftFocus(U)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: u ) equals POINT: R",
    "id": 1417,
    "declarations": "u: TRIANGLE; R: POINT",
    "facts": "Orthocenter(u) = R"
},
{
    "assertion": "Asymptote ( HYPERBOLA: r ) equals LINE: E",
    "id": 1418,
    "declarations": "r: HYPERBOLA; E: LINE",
    "facts": "Asymptote(r) = E"
},
{
    "assertion": "Quadrant ( POINT: z ) equals NUMBER: -89",
    "id": 1419,
    "declarations": "z: POINT; -89: NUMBER",
    "facts": "Quadrant(z) = -89"
},
{
    "assertion": "Orthocenter ( TRIANGLE: U ) equals POINT: Q",
    "id": 1420,
    "declarations": "U: TRIANGLE; Q: POINT",
    "facts": "Orthocenter(U) = Q"
},
{
    "assertion": "UpperFocus ( CONICSECTION: L ) equals POINT: g",
    "id": 1421,
    "declarations": "L: CONICSECTION; g: POINT",
    "facts": "UpperFocus(L) = g"
},
{
    "assertion": "MinorAxis ( ELLIPSE: N ) equals LINESEGMENT: c",
    "id": 1422,
    "declarations": "N: ELLIPSE; c: LINESEGMENT",
    "facts": "MinorAxis(N) = c"
},
{
    "assertion": "FootPoint ( LINE: w, LINE: A ) equals LeftFocus ( CONICSECTION: T )",
    "id": 1423,
    "declarations": "w: LINE; A: LINE; T: CONICSECTION",
    "facts": "FootPoint(w, A) = LeftFocus(T)"
},
{
    "assertion": "OverlappingLine ( ImaginaryAxis ( ELLIPSE: p ) ) equals RightDirectrix ( CONICSECTION: r )",
    "id": 1424,
    "declarations": "p: ELLIPSE; r: CONICSECTION",
    "facts": "OverlappingLine(ImaginaryAxis(p)) = RightDirectrix(r)"
},
{
    "assertion": "Area ( CONICSECTION: x ) equals Abs ( InterceptChord ( LINE: D, CONICSECTION: a ) )",
    "id": 1425,
    "declarations": "x: CONICSECTION; D: LINE; a: CONICSECTION",
    "facts": "Area(x) = Abs(InterceptChord(D, a))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: S ) equals POINT: e",
    "id": 1426,
    "declarations": "S: CONICSECTION; e: POINT",
    "facts": "LeftFocus(S) = e"
},
{
    "assertion": "RightFocus ( CONICSECTION: q ) equals POINT: e",
    "id": 1427,
    "declarations": "q: CONICSECTION; e: POINT",
    "facts": "RightFocus(q) = e"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: C ) equals LINE: C",
    "id": 1428,
    "declarations": "C: CONICSECTION; C: LINE",
    "facts": "LeftDirectrix(C) = C"
},
{
    "assertion": "Negation ( ImaginaryAxis ( ELLIPSE: C ) equals LINESEGMENT: e ) equals BOOL: False",
    "id": 1429,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "lg ( NUMBER: -20 ) equals NUMBER: 66",
    "id": 1430,
    "declarations": "-20: NUMBER; 66: NUMBER",
    "facts": "lg(-20) = 66"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: u, CIRCLE: L ) equals BOOL: False",
    "id": 1431,
    "declarations": "u: LINESEGMENT; L: CIRCLE; False: BOOL",
    "facts": "IsDiameter(u, L) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: Q ) equals POINT: G",
    "id": 1432,
    "declarations": "Q: CONICSECTION; G: POINT",
    "facts": "LowerVertex(Q) = G"
},
{
    "assertion": "Circumcenter ( TRIANGLE: J ) equals UpperVertex ( CONICSECTION: s )",
    "id": 1434,
    "declarations": "J: TRIANGLE; s: CONICSECTION",
    "facts": "Circumcenter(J) = UpperVertex(s)"
},
{
    "assertion": "Radius ( CIRCLE: h ) equals sqrt ( NUMBER: 36 )",
    "id": 1435,
    "declarations": "h: CIRCLE; 36: NUMBER",
    "facts": "Radius(h) = sqrt(36)"
},
{
    "assertion": "VectorOf ( MidPoint ( LINESEGMENT: i ), Orthocenter ( TRIANGLE: Y ) ) equals VECTOR: X",
    "id": 1436,
    "declarations": "i: LINESEGMENT; Y: TRIANGLE; X: VECTOR",
    "facts": "VectorOf(MidPoint(i), Orthocenter(Y)) = X"
},
{
    "assertion": "InterceptChord ( RightDirectrix ( CONICSECTION: c ), CONICSECTION: A ) equals InterceptChord ( RightDirectrix ( CONICSECTION: m ), CONICSECTION: t )",
    "id": 1437,
    "declarations": "c: CONICSECTION; A: CONICSECTION; m: CONICSECTION; t: CONICSECTION",
    "facts": "InterceptChord(RightDirectrix(c), A) = InterceptChord(RightDirectrix(m), t)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: r ) equals LeftVertex ( CONICSECTION: B )",
    "id": 1438,
    "declarations": "r: CONICSECTION; B: CONICSECTION",
    "facts": "LeftVertex(r) = LeftVertex(B)"
},
{
    "assertion": "TangentOnPoint ( POINT: d, CURVE: T ) equals RightDirectrix ( CONICSECTION: h )",
    "id": 1439,
    "declarations": "d: POINT; T: CURVE; h: CONICSECTION",
    "facts": "TangentOnPoint(d, T) = RightDirectrix(h)"
},
{
    "assertion": "PointOnCurve ( UpperFocus ( CONICSECTION: c ), CURVE: s ) equals BOOL: False",
    "id": 1440,
    "declarations": "c: CONICSECTION; s: CURVE; False: BOOL",
    "facts": "PointOnCurve(UpperFocus(c), s) = False"
},
{
    "assertion": "Locus ( MidPoint ( LineSegmentOf ( LeftFocus ( CONICSECTION: G ), Center ( CONICSECTION: a ) ) ) ) equals CURVE: I",
    "id": 1441,
    "declarations": "G: CONICSECTION; a: CONICSECTION; I: CURVE",
    "facts": "Locus(MidPoint(LineSegmentOf(LeftFocus(G), Center(a)))) = I"
},
{
    "assertion": "MidPoint ( LINESEGMENT: F ) equals Projection ( LowerVertex ( CONICSECTION: S ), LINE: N )",
    "id": 1442,
    "declarations": "F: LINESEGMENT; S: CONICSECTION; N: LINE",
    "facts": "MidPoint(F) = Projection(LowerVertex(S), N)"
},
{
    "assertion": "And ( Slope ( PerpendicularBisector ( LINESEGMENT: V ) ) equals NUMBER: -44, CircumCircle ( TRIANGLE: R ) equals CIRCLE: t ) equals BOOL: True",
    "id": 1443,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: s ) ) equals NumIntersection ( CURVE: Y, CURVE: d )",
    "id": 1444,
    "declarations": "s: CONICSECTION; Y: CURVE; d: CURVE",
    "facts": "Slope(RightDirectrix(s)) = NumIntersection(Y, d)"
},
{
    "assertion": "Radius ( CIRCLE: v ) equals sqrt ( Diameter ( CIRCLE: w ) )",
    "id": 1445,
    "declarations": "v: CIRCLE; w: CIRCLE",
    "facts": "Radius(v) = sqrt(Diameter(w))"
},
{
    "assertion": "Projection ( LeftFocus ( CONICSECTION: E ), LINE: g ) equals POINT: k",
    "id": 1446,
    "declarations": "E: CONICSECTION; g: LINE; k: POINT",
    "facts": "Projection(LeftFocus(E), g) = k"
},
{
    "assertion": "VectorOf ( Incenter ( TRIANGLE: Q ), UpperFocus ( CONICSECTION: c ) ) equals VECTOR: Q",
    "id": 1447,
    "declarations": "Q: TRIANGLE; c: CONICSECTION; Q: VECTOR",
    "facts": "VectorOf(Incenter(Q), UpperFocus(c)) = Q"
},
{
    "assertion": "RightFocus ( CONICSECTION: U ) equals POINT: A",
    "id": 1448,
    "declarations": "U: CONICSECTION; A: POINT",
    "facts": "RightFocus(U) = A"
},
{
    "assertion": "Diameter ( CIRCLE: H ) equals Min ( NUMBER: -72 )",
    "id": 1449,
    "declarations": "H: CIRCLE; -72: NUMBER",
    "facts": "Diameter(H) = Min(-72)"
},
{
    "assertion": "IsIntersect ( CURVE: S, CURVE: V ) equals BOOL: True",
    "id": 1450,
    "declarations": "S: CURVE; V: CURVE; True: BOOL",
    "facts": "IsIntersect(S, V) = True"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: f ) equals InterceptChord ( LINE: v, CONICSECTION: x )",
    "id": 1451,
    "declarations": "f: ELLIPSE; v: LINE; x: CONICSECTION",
    "facts": "ImaginaryAxis(f) = InterceptChord(v, x)"
},
{
    "assertion": "InterceptChord ( RightDirectrix ( CONICSECTION: l ), CONICSECTION: C ) equals InterceptChord ( LINE: c, CONICSECTION: j )",
    "id": 1452,
    "declarations": "l: CONICSECTION; C: CONICSECTION; c: LINE; j: CONICSECTION",
    "facts": "InterceptChord(RightDirectrix(l), C) = InterceptChord(c, j)"
},
{
    "assertion": "Inclination ( OverlappingLine ( LINESEGMENT: F ) ) equals lg ( NUMBER: -82 )",
    "id": 1453,
    "declarations": "F: LINESEGMENT; -82: NUMBER",
    "facts": "Inclination(OverlappingLine(F)) = lg(-82)"
},
{
    "assertion": "PointOnCurve ( RightVertex ( CONICSECTION: y ), Locus ( POINT: I ) ) equals BOOL: False",
    "id": 1454,
    "declarations": "y: CONICSECTION; I: POINT; False: BOOL",
    "facts": "PointOnCurve(RightVertex(y), Locus(I)) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: W ) equals POINT: k",
    "id": 1455,
    "declarations": "W: CONICSECTION; k: POINT",
    "facts": "RightVertex(W) = k"
},
{
    "assertion": "LocusEquation ( LowerVertex ( CONICSECTION: M ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 1456,
    "declarations": "M: CONICSECTION; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(LowerVertex(M)) = y*space=*spacelog(x)"
},
{
    "assertion": "DotProduct ( VECTOR: w, VECTOR: I ) equals Min ( Area ( CONICSECTION: A ) )",
    "id": 1457,
    "declarations": "w: VECTOR; I: VECTOR; A: CONICSECTION",
    "facts": "DotProduct(w, I) = Min(Area(A))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: c ) equals LineOf ( POINT: W, RightVertex ( CONICSECTION: t ) )",
    "id": 1458,
    "declarations": "c: CONICSECTION; W: POINT; t: CONICSECTION",
    "facts": "RightDirectrix(c) = LineOf(W, RightVertex(t))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: I ) equals LeftFocus ( CONICSECTION: w )",
    "id": 1459,
    "declarations": "I: CONICSECTION; w: CONICSECTION",
    "facts": "UpperFocus(I) = LeftFocus(w)"
},
{
    "assertion": "Slope ( LINE: A ) equals Intercept ( LINE: G, AXIS: yAxis )",
    "id": 1460,
    "declarations": "A: LINE; G: LINE; yAxis: AXIS",
    "facts": "Slope(A) = Intercept(G, yAxis)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: h ) equals LINESEGMENT: P",
    "id": 1461,
    "declarations": "h: ELLIPSE; P: LINESEGMENT",
    "facts": "MinorAxis(h) = P"
},
{
    "assertion": "Locus ( Center ( CONICSECTION: u ) ) equals CURVE: X",
    "id": 1462,
    "declarations": "u: CONICSECTION; X: CURVE",
    "facts": "Locus(Center(u)) = X"
},
{
    "assertion": "Max ( Perimeter ( CONICSECTION: I ) ) equals NUMBER: -93",
    "id": 1463,
    "declarations": "I: CONICSECTION; -93: NUMBER",
    "facts": "Max(Perimeter(I)) = -93"
},
{
    "assertion": "RealAxis ( ELLIPSE: G ) equals LINESEGMENT: k",
    "id": 1464,
    "declarations": "G: ELLIPSE; k: LINESEGMENT",
    "facts": "RealAxis(G) = k"
},
{
    "assertion": "FocalLength ( CONICSECTION: W ) equals NUMBER: -32",
    "id": 1465,
    "declarations": "W: CONICSECTION; -32: NUMBER",
    "facts": "FocalLength(W) = -32"
},
{
    "assertion": "LocusEquation ( POINT: y ) equals Expression ( CURVE: y )",
    "id": 1466,
    "declarations": "y: POINT; y: CURVE",
    "facts": "LocusEquation(y) = Expression(y)"
},
{
    "assertion": "VectorOf ( POINT: U, POINT: u ) equals VECTOR: t",
    "id": 1467,
    "declarations": "U: POINT; u: POINT; t: VECTOR",
    "facts": "VectorOf(U, u) = t"
},
{
    "assertion": "TangentOnPoint ( RightVertex ( CONICSECTION: P ), CURVE: q ) equals LINE: A",
    "id": 1468,
    "declarations": "P: CONICSECTION; q: CURVE; A: LINE",
    "facts": "TangentOnPoint(RightVertex(P), q) = A"
},
{
    "assertion": "Circumcenter ( TRIANGLE: b ) equals POINT: v",
    "id": 1469,
    "declarations": "b: TRIANGLE; v: POINT",
    "facts": "Circumcenter(b) = v"
},
{
    "assertion": "Min ( NUMBER: 55 ) equals Distance ( POINT: l, POINT: f )",
    "id": 1470,
    "declarations": "55: NUMBER; l: POINT; f: POINT",
    "facts": "Min(55) = Distance(l, f)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: p ) equals UpperVertex ( CONICSECTION: C )",
    "id": 1471,
    "declarations": "p: TRIANGLE; C: CONICSECTION",
    "facts": "Circumcenter(p) = UpperVertex(C)"
},
{
    "assertion": "RightVertex ( CONICSECTION: m ) equals LeftFocus ( CONICSECTION: L )",
    "id": 1472,
    "declarations": "m: CONICSECTION; L: CONICSECTION",
    "facts": "RightVertex(m) = LeftFocus(L)"
},
{
    "assertion": "AngleOf ( UpperVertex ( CONICSECTION: K ), POINT: N, Circumcenter ( TRIANGLE: G ) ) equals ApplyUnit ( HalfFocalLength ( CONICSECTION: W ), DEGREESTR: degree )",
    "id": 1473,
    "declarations": "K: CONICSECTION; N: POINT; G: TRIANGLE; W: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(UpperVertex(K), N, Circumcenter(G)) = ApplyUnit(HalfFocalLength(W), degree)"
},
{
    "assertion": "Negation ( lg ( XCoordinate ( UpperFocus ( CONICSECTION: B ) ) ) equals Quadrant ( Center ( CONICSECTION: c ) ) ) equals BOOL: True",
    "id": 1474,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "TriangleOf ( RightVertex ( CONICSECTION: v ), Projection ( RightVertex ( CONICSECTION: m ), LINE: H ), POINT: B ) equals TriangleOf ( UpperFocus ( CONICSECTION: B ), MidPoint ( LINESEGMENT: Y ), POINT: P )",
    "id": 1475,
    "declarations": "v: CONICSECTION; m: CONICSECTION; H: LINE; B: POINT; B: CONICSECTION; Y: LINESEGMENT; P: POINT",
    "facts": "TriangleOf(RightVertex(v), Projection(RightVertex(m), H), B) = TriangleOf(UpperFocus(B), MidPoint(Y), P)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: e ) equals LINE: O",
    "id": 1476,
    "declarations": "e: LINESEGMENT; O: LINE",
    "facts": "OverlappingLine(e) = O"
},
{
    "assertion": "YCoordinate ( Circumcenter ( TRIANGLE: A ) ) equals NUMBER: 85",
    "id": 1477,
    "declarations": "A: TRIANGLE; 85: NUMBER",
    "facts": "YCoordinate(Circumcenter(A)) = 85"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: p ) equals HalfFocalLength ( CONICSECTION: O )",
    "id": 1478,
    "declarations": "p: CONICSECTION; O: CONICSECTION",
    "facts": "HalfFocalLength(p) = HalfFocalLength(O)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: q ) equals LINESEGMENT: d",
    "id": 1479,
    "declarations": "q: ELLIPSE; d: LINESEGMENT",
    "facts": "MajorAxis(q) = d"
},
{
    "assertion": "LowerFocus ( CONICSECTION: s ) equals LeftVertex ( CONICSECTION: h )",
    "id": 1480,
    "declarations": "s: CONICSECTION; h: CONICSECTION",
    "facts": "LowerFocus(s) = LeftVertex(h)"
},
{
    "assertion": "IsOutTangent ( CircumCircle ( TRIANGLE: Z ), CIRCLE: N ) equals BOOL: False",
    "id": 1481,
    "declarations": "Z: TRIANGLE; N: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(CircumCircle(Z), N) = False"
},
{
    "assertion": "Orthocenter ( TRIANGLE: C ) equals UpperVertex ( CONICSECTION: A )",
    "id": 1482,
    "declarations": "C: TRIANGLE; A: CONICSECTION",
    "facts": "Orthocenter(C) = UpperVertex(A)"
},
{
    "assertion": "lg ( Perimeter ( CONICSECTION: I ) ) equals NUMBER: -28",
    "id": 1483,
    "declarations": "I: CONICSECTION; -28: NUMBER",
    "facts": "lg(Perimeter(I)) = -28"
},
{
    "assertion": "Incenter ( TRIANGLE: J ) equals RightFocus ( CONICSECTION: T )",
    "id": 1484,
    "declarations": "J: TRIANGLE; T: CONICSECTION",
    "facts": "Incenter(J) = RightFocus(T)"
},
{
    "assertion": "PerpendicularBisector ( InterceptChord ( LeftDirectrix ( CONICSECTION: W ), CONICSECTION: S ) ) equals LINE: l",
    "id": 1485,
    "declarations": "W: CONICSECTION; S: CONICSECTION; l: LINE",
    "facts": "PerpendicularBisector(InterceptChord(LeftDirectrix(W), S)) = l"
},
{
    "assertion": "Radius ( CIRCLE: c ) equals NUMBER: -57",
    "id": 1486,
    "declarations": "c: CIRCLE; -57: NUMBER",
    "facts": "Radius(c) = -57"
},
{
    "assertion": "Expression ( RightPart ( HYPERBOLA: U ) ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 1487,
    "declarations": "U: HYPERBOLA; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "Expression(RightPart(U)) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "IsParallel ( LINE: L, LINE: v ) equals BOOL: False",
    "id": 1488,
    "declarations": "L: LINE; v: LINE; False: BOOL",
    "facts": "IsParallel(L, v) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: c ) equals YCoordinate ( RightFocus ( CONICSECTION: J ) )",
    "id": 1489,
    "declarations": "c: CONICSECTION; J: CONICSECTION",
    "facts": "Perimeter(c) = YCoordinate(RightFocus(J))"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: d, CONICSECTION: q ) equals BOOL: False",
    "id": 1490,
    "declarations": "d: LINESEGMENT; q: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(d, q) = False"
},
{
    "assertion": "Radius ( CIRCLE: l ) equals Quadrant ( POINT: q )",
    "id": 1491,
    "declarations": "l: CIRCLE; q: POINT",
    "facts": "Radius(l) = Quadrant(q)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: X ) equals AXIS: xAxis",
    "id": 1492,
    "declarations": "X: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(X) = xAxis"
},
{
    "assertion": "Min ( Distance ( RightVertex ( CONICSECTION: t ), Circumcenter ( TRIANGLE: z ) ) ) equals YCoordinate ( UpperVertex ( CONICSECTION: l ) )",
    "id": 1493,
    "declarations": "t: CONICSECTION; z: TRIANGLE; l: CONICSECTION",
    "facts": "Min(Distance(RightVertex(t), Circumcenter(z))) = YCoordinate(UpperVertex(l))"
},
{
    "assertion": "Min ( YCoordinate ( UpperVertex ( CONICSECTION: S ) ) ) equals Diameter ( CIRCLE: v )",
    "id": 1494,
    "declarations": "S: CONICSECTION; v: CIRCLE",
    "facts": "Min(YCoordinate(UpperVertex(S))) = Diameter(v)"
},
{
    "assertion": "TangentOnPoint ( LowerVertex ( CONICSECTION: s ), CURVE: m ) equals PerpendicularBisector ( RealAxis ( ELLIPSE: N ) )",
    "id": 1495,
    "declarations": "s: CONICSECTION; m: CURVE; N: ELLIPSE",
    "facts": "TangentOnPoint(LowerVertex(s), m) = PerpendicularBisector(RealAxis(N))"
},
{
    "assertion": "Orthocenter ( TriangleOf ( FootPoint ( TangentOnPoint ( UpperVertex ( CONICSECTION: C ), CURVE: X ), TangentOnPoint ( POINT: n, CURVE: n ) ), LowerFocus ( CONICSECTION: f ), LowerFocus ( CONICSECTION: J ) ) ) equals Projection ( LowerFocus ( CONICSECTION: v ), LINE: N )",
    "id": 1496,
    "declarations": "C: CONICSECTION; X: CURVE; n: POINT; n: CURVE; f: CONICSECTION; J: CONICSECTION; v: CONICSECTION; N: LINE",
    "facts": "Orthocenter(TriangleOf(FootPoint(TangentOnPoint(UpperVertex(C), X), TangentOnPoint(n, n)), LowerFocus(f), LowerFocus(J))) = Projection(LowerFocus(v), N)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: B ) equals UpperVertex ( CONICSECTION: U )",
    "id": 1497,
    "declarations": "B: CONICSECTION; U: CONICSECTION",
    "facts": "UpperVertex(B) = UpperVertex(U)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: x ) equals LINE: W",
    "id": 1498,
    "declarations": "x: CONICSECTION; W: LINE",
    "facts": "LeftDirectrix(x) = W"
},
{
    "assertion": "RightVertex ( CONICSECTION: P ) equals POINT: D",
    "id": 1499,
    "declarations": "P: CONICSECTION; D: POINT",
    "facts": "RightVertex(P) = D"
},
{
    "assertion": "IsTangent ( TangentOfPoint ( POINT: m, CURVE: e ), CONICSECTION: a ) equals BOOL: True",
    "id": 1500,
    "declarations": "m: POINT; e: CURVE; a: CONICSECTION; True: BOOL",
    "facts": "IsTangent(TangentOfPoint(m, e), a) = True"
},
{
    "assertion": "Inclination ( LINE: t ) equals Diameter ( CIRCLE: n )",
    "id": 1501,
    "declarations": "t: LINE; n: CIRCLE",
    "facts": "Inclination(t) = Diameter(n)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: e, TRIANGLE: x ) equals BOOL: False",
    "id": 1502,
    "declarations": "e: CIRCLE; x: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(e, x) = False"
},
{
    "assertion": "sqrt ( Perimeter ( CONICSECTION: l ) ) equals NUMBER: -21",
    "id": 1503,
    "declarations": "l: CONICSECTION; -21: NUMBER",
    "facts": "sqrt(Perimeter(l)) = -21"
},
{
    "assertion": "XCoordinate ( POINT: e ) equals Min ( Diameter ( CIRCLE: p ) )",
    "id": 1504,
    "declarations": "e: POINT; p: CIRCLE",
    "facts": "XCoordinate(e) = Min(Diameter(p))"
},
{
    "assertion": "MidPoint ( LINESEGMENT: n ) equals POINT: p",
    "id": 1505,
    "declarations": "n: LINESEGMENT; p: POINT",
    "facts": "MidPoint(n) = p"
},
{
    "assertion": "TangentOfPoint ( POINT: j, CURVE: U ) equals LINE: L",
    "id": 1506,
    "declarations": "j: POINT; U: CURVE; L: LINE",
    "facts": "TangentOfPoint(j, U) = L"
},
{
    "assertion": "Inclination ( LINE: h ) equals Slope ( LINE: v )",
    "id": 1507,
    "declarations": "h: LINE; v: LINE",
    "facts": "Inclination(h) = Slope(v)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: C ) equals Incenter ( TRIANGLE: u )",
    "id": 1508,
    "declarations": "C: CONICSECTION; u: TRIANGLE",
    "facts": "UpperVertex(C) = Incenter(u)"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: x ) ) equals Orthocenter ( TriangleOf ( LowerFocus ( CONICSECTION: I ), POINT: S, Center ( CONICSECTION: s ) ) )",
    "id": 1509,
    "declarations": "x: ELLIPSE; I: CONICSECTION; S: POINT; s: CONICSECTION",
    "facts": "Endpoint(MajorAxis(x)) = Orthocenter(TriangleOf(LowerFocus(I), S, Center(s)))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: C ) equals LINESEGMENT: C",
    "id": 1510,
    "declarations": "C: ELLIPSE; C: LINESEGMENT",
    "facts": "MajorAxis(C) = C"
},
{
    "assertion": "IsTangent ( LINE: z, CONICSECTION: P ) equals BOOL: False",
    "id": 1511,
    "declarations": "z: LINE; P: CONICSECTION; False: BOOL",
    "facts": "IsTangent(z, P) = False"
},
{
    "assertion": "InterReciprocal ( Diameter ( CIRCLE: c ) ) equals lg ( HalfFocalLength ( CONICSECTION: M ) )",
    "id": 1512,
    "declarations": "c: CIRCLE; M: CONICSECTION",
    "facts": "InterReciprocal(Diameter(c)) = lg(HalfFocalLength(M))"
},
{
    "assertion": "Between ( POINT: V, LowerVertex ( CONICSECTION: T ), POINT: C ) equals BOOL: True",
    "id": 1513,
    "declarations": "V: POINT; T: CONICSECTION; C: POINT; True: BOOL",
    "facts": "Between(V, LowerVertex(T), C) = True"
},
{
    "assertion": "CircumCircle ( TRIANGLE: V ) equals CIRCLE: n",
    "id": 1514,
    "declarations": "V: TRIANGLE; n: CIRCLE",
    "facts": "CircumCircle(V) = n"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: U ) equals Inclination ( LINE: G )",
    "id": 1515,
    "declarations": "U: CONICSECTION; G: LINE",
    "facts": "HalfFocalLength(U) = Inclination(G)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: l ) equals POINT: a",
    "id": 1516,
    "declarations": "l: LINESEGMENT; a: POINT",
    "facts": "Endpoint(l) = a"
},
{
    "assertion": "RightPart ( HYPERBOLA: q ) equals RightPart ( HYPERBOLA: t )",
    "id": 1517,
    "declarations": "q: HYPERBOLA; t: HYPERBOLA",
    "facts": "RightPart(q) = RightPart(t)"
},
{
    "assertion": "LineSegmentOf ( Projection ( POINT: E, LINE: x ), LeftFocus ( CONICSECTION: n ) ) equals LINESEGMENT: D",
    "id": 1518,
    "declarations": "E: POINT; x: LINE; n: CONICSECTION; D: LINESEGMENT",
    "facts": "LineSegmentOf(Projection(E, x), LeftFocus(n)) = D"
},
{
    "assertion": "LeftFocus ( CONICSECTION: y ) equals LeftFocus ( CONICSECTION: U )",
    "id": 1519,
    "declarations": "y: CONICSECTION; U: CONICSECTION",
    "facts": "LeftFocus(y) = LeftFocus(U)"
},
{
    "assertion": "PerpendicularBisector ( MajorAxis ( ELLIPSE: m ) ) equals LINE: a",
    "id": 1520,
    "declarations": "m: ELLIPSE; a: LINE",
    "facts": "PerpendicularBisector(MajorAxis(m)) = a"
},
{
    "assertion": "IsCircumCircle ( CircumCircle ( TRIANGLE: b ), TRIANGLE: N ) equals BOOL: True",
    "id": 1521,
    "declarations": "b: TRIANGLE; N: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(CircumCircle(b), N) = True"
},
{
    "assertion": "FocalLength ( CONICSECTION: F ) equals NUMBER: -15",
    "id": 1522,
    "declarations": "F: CONICSECTION; -15: NUMBER",
    "facts": "FocalLength(F) = -15"
},
{
    "assertion": "Circumcenter ( TriangleOf ( LowerVertex ( CONICSECTION: l ), POINT: i, POINT: p ) ) equals POINT: P",
    "id": 1523,
    "declarations": "l: CONICSECTION; i: POINT; p: POINT; P: POINT",
    "facts": "Circumcenter(TriangleOf(LowerVertex(l), i, p)) = P"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: B ) equals MinorAxis ( ELLIPSE: S )",
    "id": 1524,
    "declarations": "B: ELLIPSE; S: ELLIPSE",
    "facts": "ImaginaryAxis(B) = MinorAxis(S)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: c ) equals OverlappingLine ( LINESEGMENT: G )",
    "id": 1525,
    "declarations": "c: HYPERBOLA; G: LINESEGMENT",
    "facts": "Asymptote(c) = OverlappingLine(G)"
},
{
    "assertion": "RealAxis ( ELLIPSE: Q ) equals LINESEGMENT: M",
    "id": 1526,
    "declarations": "Q: ELLIPSE; M: LINESEGMENT",
    "facts": "RealAxis(Q) = M"
},
{
    "assertion": "Max ( NUMBER: -3 ) equals NUMBER: -32",
    "id": 1527,
    "declarations": "-3: NUMBER; -32: NUMBER",
    "facts": "Max(-3) = -32"
},
{
    "assertion": "Vertex ( CONICSECTION: o ) equals LowerFocus ( CONICSECTION: D )",
    "id": 1528,
    "declarations": "o: CONICSECTION; D: CONICSECTION",
    "facts": "Vertex(o) = LowerFocus(D)"
},
{
    "assertion": "TriangleOf ( Orthocenter ( TRIANGLE: B ), RightFocus ( CONICSECTION: H ), MidPoint ( LineSegmentOf ( LeftFocus ( CONICSECTION: o ), LeftVertex ( CONICSECTION: d ) ) ) ) equals TRIANGLE: T",
    "id": 1529,
    "declarations": "B: TRIANGLE; H: CONICSECTION; o: CONICSECTION; d: CONICSECTION; T: TRIANGLE",
    "facts": "TriangleOf(Orthocenter(B), RightFocus(H), MidPoint(LineSegmentOf(LeftFocus(o), LeftVertex(d)))) = T"
},
{
    "assertion": "Center ( CONICSECTION: D ) equals POINT: W",
    "id": 1530,
    "declarations": "D: CONICSECTION; W: POINT",
    "facts": "Center(D) = W"
},
{
    "assertion": "DotProduct ( VECTOR: g, VECTOR: M ) equals NUMBER: 52",
    "id": 1531,
    "declarations": "g: VECTOR; M: VECTOR; 52: NUMBER",
    "facts": "DotProduct(g, M) = 52"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: H, TRIANGLE: t ) equals BOOL: False",
    "id": 1532,
    "declarations": "H: CIRCLE; t: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(H, t) = False"
},
{
    "assertion": "ApplyUnit ( Diameter ( CIRCLE: v ), DEGREESTR: degree )",
    "id": 1533,
    "declarations": "v: CIRCLE; degree: DEGREESTR",
    "facts": "ApplyUnit(Diameter(v), degree) = None"
},
{
    "assertion": "Vertex ( CONICSECTION: Q ) equals POINT: F",
    "id": 1534,
    "declarations": "Q: CONICSECTION; F: POINT",
    "facts": "Vertex(Q) = F"
},
{
    "assertion": "Vertex ( CONICSECTION: a ) equals RightVertex ( CONICSECTION: t )",
    "id": 1535,
    "declarations": "a: CONICSECTION; t: CONICSECTION",
    "facts": "Vertex(a) = RightVertex(t)"
},
{
    "assertion": "FootPoint ( LINE: f, RightDirectrix ( CONICSECTION: p ) ) equals POINT: o",
    "id": 1536,
    "declarations": "f: LINE; p: CONICSECTION; o: POINT",
    "facts": "FootPoint(f, RightDirectrix(p)) = o"
},
{
    "assertion": "FootPoint ( LINE: Z, PerpendicularBisector ( LINESEGMENT: F ) ) equals POINT: B",
    "id": 1537,
    "declarations": "Z: LINE; F: LINESEGMENT; B: POINT",
    "facts": "FootPoint(Z, PerpendicularBisector(F)) = B"
},
{
    "assertion": "UpperFocus ( CONICSECTION: O ) equals LeftVertex ( CONICSECTION: V )",
    "id": 1538,
    "declarations": "O: CONICSECTION; V: CONICSECTION",
    "facts": "UpperFocus(O) = LeftVertex(V)"
},
{
    "assertion": "IsIntersect ( CURVE: v, CURVE: Q ) equals BOOL: True",
    "id": 1539,
    "declarations": "v: CURVE; Q: CURVE; True: BOOL",
    "facts": "IsIntersect(v, Q) = True"
},
{
    "assertion": "Between ( LowerFocus ( CONICSECTION: f ), LeftFocus ( CONICSECTION: J ), LowerFocus ( CONICSECTION: U ) ) equals BOOL: False",
    "id": 1540,
    "declarations": "f: CONICSECTION; J: CONICSECTION; U: CONICSECTION; False: BOOL",
    "facts": "Between(LowerFocus(f), LeftFocus(J), LowerFocus(U)) = False"
},
{
    "assertion": "UpperVertex ( CONICSECTION: z ) equals POINT: V",
    "id": 1541,
    "declarations": "z: CONICSECTION; V: POINT",
    "facts": "UpperVertex(z) = V"
},
{
    "assertion": "Slope ( LINE: m ) equals NUMBER: 34",
    "id": 1542,
    "declarations": "m: LINE; 34: NUMBER",
    "facts": "Slope(m) = 34"
},
{
    "assertion": "Length ( LINESEGMENT: a ) equals YCoordinate ( POINT: y )",
    "id": 1543,
    "declarations": "a: LINESEGMENT; y: POINT",
    "facts": "Length(a) = YCoordinate(y)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: x ) equals CURVE: d",
    "id": 1544,
    "declarations": "x: HYPERBOLA; d: CURVE",
    "facts": "LeftPart(x) = d"
},
{
    "assertion": "Intersection ( CURVE: U, CURVE: I ) equals Center ( CONICSECTION: i )",
    "id": 1545,
    "declarations": "U: CURVE; I: CURVE; i: CONICSECTION",
    "facts": "Intersection(U, I) = Center(i)"
},
{
    "assertion": "TangentOfPoint ( FootPoint ( LINE: N, LINE: r ), LeftPart ( HYPERBOLA: Q ) ) equals LINE: s",
    "id": 1546,
    "declarations": "N: LINE; r: LINE; Q: HYPERBOLA; s: LINE",
    "facts": "TangentOfPoint(FootPoint(N, r), LeftPart(Q)) = s"
},
{
    "assertion": "VectorOf ( POINT: l, POINT: b ) equals VECTOR: C",
    "id": 1547,
    "declarations": "l: POINT; b: POINT; C: VECTOR",
    "facts": "VectorOf(l, b) = C"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: T, TRIANGLE: G ) equals BOOL: False",
    "id": 1548,
    "declarations": "T: CIRCLE; G: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(T, G) = False"
},
{
    "assertion": "Asymptote ( HYPERBOLA: S ) equals LINE: c",
    "id": 1549,
    "declarations": "S: HYPERBOLA; c: LINE",
    "facts": "Asymptote(S) = c"
},
{
    "assertion": "TangentOnPoint ( RightFocus ( CONICSECTION: c ), Locus ( Orthocenter ( TRIANGLE: q ) ) ) equals LINE: E",
    "id": 1550,
    "declarations": "c: CONICSECTION; q: TRIANGLE; E: LINE",
    "facts": "TangentOnPoint(RightFocus(c), Locus(Orthocenter(q))) = E"
},
{
    "assertion": "VectorOf ( POINT: k, RightFocus ( CONICSECTION: R ) ) equals VECTOR: I",
    "id": 1551,
    "declarations": "k: POINT; R: CONICSECTION; I: VECTOR",
    "facts": "VectorOf(k, RightFocus(R)) = I"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: K ) ) equals FocalLength ( CONICSECTION: D )",
    "id": 1552,
    "declarations": "K: ELLIPSE; D: CONICSECTION",
    "facts": "Abs(RealAxis(K)) = FocalLength(D)"
},
{
    "assertion": "RightFocus ( CONICSECTION: I ) equals Orthocenter ( TRIANGLE: s )",
    "id": 1553,
    "declarations": "I: CONICSECTION; s: TRIANGLE",
    "facts": "RightFocus(I) = Orthocenter(s)"
},
{
    "assertion": "Focus ( CONICSECTION: d ) equals Incenter ( TRIANGLE: B )",
    "id": 1554,
    "declarations": "d: CONICSECTION; B: TRIANGLE",
    "facts": "Focus(d) = Incenter(B)"
},
{
    "assertion": "Center ( CONICSECTION: x ) equals POINT: d",
    "id": 1555,
    "declarations": "x: CONICSECTION; d: POINT",
    "facts": "Center(x) = d"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: F, TRIANGLE: o ) equals BOOL: True",
    "id": 1556,
    "declarations": "F: CIRCLE; o: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(F, o) = True"
},
{
    "assertion": "Eccentricity ( CONICSECTION: D ) equals NUMBER: -90",
    "id": 1557,
    "declarations": "D: CONICSECTION; -90: NUMBER",
    "facts": "Eccentricity(D) = -90"
},
{
    "assertion": "NumIntersection ( RightPart ( HYPERBOLA: m ), CURVE: S ) equals lg ( Diameter ( CIRCLE: e ) )",
    "id": 1558,
    "declarations": "m: HYPERBOLA; S: CURVE; e: CIRCLE",
    "facts": "NumIntersection(RightPart(m), S) = lg(Diameter(e))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: z ) equals CIRCLE: R",
    "id": 1559,
    "declarations": "z: TRIANGLE; R: CIRCLE",
    "facts": "CircumCircle(z) = R"
},
{
    "assertion": "YCoordinate ( POINT: w ) equals lg ( InterReciprocal ( NUMBER: 53 ) )",
    "id": 1560,
    "declarations": "w: POINT; 53: NUMBER",
    "facts": "YCoordinate(w) = lg(InterReciprocal(53))"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: w ) equals LINESEGMENT: D",
    "id": 1561,
    "declarations": "w: ELLIPSE; D: LINESEGMENT",
    "facts": "ImaginaryAxis(w) = D"
},
{
    "assertion": "MinorAxis ( ELLIPSE: P ) equals MajorAxis ( ELLIPSE: g )",
    "id": 1562,
    "declarations": "P: ELLIPSE; g: ELLIPSE",
    "facts": "MinorAxis(P) = MajorAxis(g)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: W ) equals Length ( MajorAxis ( ELLIPSE: r ) )",
    "id": 1563,
    "declarations": "W: CONICSECTION; r: ELLIPSE",
    "facts": "HalfFocalLength(W) = Length(MajorAxis(r))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: B, TRIANGLE: e ) equals BOOL: False",
    "id": 1564,
    "declarations": "B: CIRCLE; e: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(B, e) = False"
},
{
    "assertion": "FootPoint ( LINE: t, LINE: b ) equals Orthocenter ( TRIANGLE: U )",
    "id": 1565,
    "declarations": "t: LINE; b: LINE; U: TRIANGLE",
    "facts": "FootPoint(t, b) = Orthocenter(U)"
},
{
    "assertion": "Negation ( IsInTangent ( CIRCLE: V, CIRCLE: t ) equals BOOL: False ) equals BOOL: True",
    "id": 1566,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Distance ( Circumcenter ( TRIANGLE: g ), POINT: v ) equals YCoordinate ( POINT: u )",
    "id": 1567,
    "declarations": "g: TRIANGLE; v: POINT; u: POINT",
    "facts": "Distance(Circumcenter(g), v) = YCoordinate(u)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: v ) equals LINE: c",
    "id": 1568,
    "declarations": "v: LINESEGMENT; c: LINE",
    "facts": "OverlappingLine(v) = c"
},
{
    "assertion": "Circumcenter ( TRIANGLE: v ) equals LeftVertex ( CONICSECTION: p )",
    "id": 1569,
    "declarations": "v: TRIANGLE; p: CONICSECTION",
    "facts": "Circumcenter(v) = LeftVertex(p)"
},
{
    "assertion": "sqrt ( HalfFocalLength ( CONICSECTION: b ) ) equals Quadrant ( Circumcenter ( TRIANGLE: u ) )",
    "id": 1570,
    "declarations": "b: CONICSECTION; u: TRIANGLE",
    "facts": "sqrt(HalfFocalLength(b)) = Quadrant(Circumcenter(u))"
},
{
    "assertion": "TriangleOf ( Circumcenter ( TRIANGLE: c ), Incenter ( TRIANGLE: h ), POINT: t ) equals TRIANGLE: Y",
    "id": 1571,
    "declarations": "c: TRIANGLE; h: TRIANGLE; t: POINT; Y: TRIANGLE",
    "facts": "TriangleOf(Circumcenter(c), Incenter(h), t) = Y"
},
{
    "assertion": "Expression ( RightPart ( HYPERBOLA: h ) ) equals EXPRESSION: y*space=*spacee^x",
    "id": 1572,
    "declarations": "h: HYPERBOLA; y*space=*spacee^x: EXPRESSION",
    "facts": "Expression(RightPart(h)) = y*space=*spacee^x"
},
{
    "assertion": "Orthocenter ( TRIANGLE: f ) equals POINT: x",
    "id": 1573,
    "declarations": "f: TRIANGLE; x: POINT",
    "facts": "Orthocenter(f) = x"
},
{
    "assertion": "LowerVertex ( CONICSECTION: o ) equals MidPoint ( LINESEGMENT: h )",
    "id": 1574,
    "declarations": "o: CONICSECTION; h: LINESEGMENT",
    "facts": "LowerVertex(o) = MidPoint(h)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: A ) equals POINT: x",
    "id": 1575,
    "declarations": "A: TRIANGLE; x: POINT",
    "facts": "Circumcenter(A) = x"
},
{
    "assertion": "YCoordinate ( Projection ( LowerVertex ( CONICSECTION: p ), TangentOfPoint ( POINT: M, RightPart ( HYPERBOLA: B ) ) ) ) equals Min ( Length ( LINESEGMENT: d ) )",
    "id": 1576,
    "declarations": "p: CONICSECTION; M: POINT; B: HYPERBOLA; d: LINESEGMENT",
    "facts": "YCoordinate(Projection(LowerVertex(p), TangentOfPoint(M, RightPart(B)))) = Min(Length(d))"
},
{
    "assertion": "LineOf ( POINT: Y, RightVertex ( CONICSECTION: I ) ) equals LINE: J",
    "id": 1577,
    "declarations": "Y: POINT; I: CONICSECTION; J: LINE",
    "facts": "LineOf(Y, RightVertex(I)) = J"
},
{
    "assertion": "DotProduct ( VECTOR: x, VECTOR: q ) equals NUMBER: -90",
    "id": 1578,
    "declarations": "x: VECTOR; q: VECTOR; -90: NUMBER",
    "facts": "DotProduct(x, q) = -90"
},
{
    "assertion": "Projection ( UpperFocus ( CONICSECTION: J ), LINE: I ) equals Circumcenter ( TRIANGLE: D )",
    "id": 1579,
    "declarations": "J: CONICSECTION; I: LINE; D: TRIANGLE",
    "facts": "Projection(UpperFocus(J), I) = Circumcenter(D)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: t ) equals NUMBER: -87",
    "id": 1580,
    "declarations": "t: CONICSECTION; -87: NUMBER",
    "facts": "HalfFocalLength(t) = -87"
},
{
    "assertion": "ApplyUnit ( NUMBER: 97, DEGREESTR: degree )",
    "id": 1581,
    "declarations": "97: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(97, degree) = None"
},
{
    "assertion": "Intersection ( CURVE: d, CURVE: b ) equals UpperFocus ( CONICSECTION: j )",
    "id": 1582,
    "declarations": "d: CURVE; b: CURVE; j: CONICSECTION",
    "facts": "Intersection(d, b) = UpperFocus(j)"
},
{
    "assertion": "NumIntersection ( CURVE: p, CURVE: Q ) equals XCoordinate ( UpperFocus ( CONICSECTION: i ) )",
    "id": 1583,
    "declarations": "p: CURVE; Q: CURVE; i: CONICSECTION",
    "facts": "NumIntersection(p, Q) = XCoordinate(UpperFocus(i))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: O ) equals UpperVertex ( CONICSECTION: l )",
    "id": 1584,
    "declarations": "O: CONICSECTION; l: CONICSECTION",
    "facts": "LowerFocus(O) = UpperVertex(l)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: f ) equals UpperVertex ( CONICSECTION: H )",
    "id": 1585,
    "declarations": "f: TRIANGLE; H: CONICSECTION",
    "facts": "Orthocenter(f) = UpperVertex(H)"
},
{
    "assertion": "FocalLength ( CONICSECTION: Y ) equals FocalLength ( CONICSECTION: R )",
    "id": 1586,
    "declarations": "Y: CONICSECTION; R: CONICSECTION",
    "facts": "FocalLength(Y) = FocalLength(R)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: F ) equals OverlappingLine ( MajorAxis ( ELLIPSE: b ) )",
    "id": 1587,
    "declarations": "F: LINESEGMENT; b: ELLIPSE",
    "facts": "PerpendicularBisector(F) = OverlappingLine(MajorAxis(b))"
},
{
    "assertion": "Slope ( LineOf ( LeftFocus ( CONICSECTION: z ), POINT: N ) ) equals DotProduct ( VectorOf ( Center ( CONICSECTION: b ), LeftFocus ( CONICSECTION: S ) ), VECTOR: G )",
    "id": 1588,
    "declarations": "z: CONICSECTION; N: POINT; b: CONICSECTION; S: CONICSECTION; G: VECTOR",
    "facts": "Slope(LineOf(LeftFocus(z), N)) = DotProduct(VectorOf(Center(b), LeftFocus(S)), G)"
},
{
    "assertion": "Quadrant ( MidPoint ( LineSegmentOf ( POINT: M, Projection ( POINT: Q, LINE: d ) ) ) ) equals NUMBER: 94",
    "id": 1589,
    "declarations": "M: POINT; Q: POINT; d: LINE; 94: NUMBER",
    "facts": "Quadrant(MidPoint(LineSegmentOf(M, Projection(Q, d)))) = 94"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: W ) equals AXIS: yAxis",
    "id": 1590,
    "declarations": "W: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(W) = yAxis"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: l ) equals LINE: W",
    "id": 1591,
    "declarations": "l: LINESEGMENT; W: LINE",
    "facts": "PerpendicularBisector(l) = W"
},
{
    "assertion": "Inclination ( LINE: w ) equals sqrt ( FocalLength ( CONICSECTION: V ) )",
    "id": 1592,
    "declarations": "w: LINE; V: CONICSECTION",
    "facts": "Inclination(w) = sqrt(FocalLength(V))"
},
{
    "assertion": "AngleOf ( Circumcenter ( TRIANGLE: o ), POINT: Y, POINT: Z ) equals AngleOf ( POINT: z, POINT: V, Incenter ( TRIANGLE: P ) )",
    "id": 1593,
    "declarations": "o: TRIANGLE; Y: POINT; Z: POINT; z: POINT; V: POINT; P: TRIANGLE",
    "facts": "AngleOf(Circumcenter(o), Y, Z) = AngleOf(z, V, Incenter(P))"
},
{
    "assertion": "Quadrant ( UpperFocus ( CONICSECTION: h ) ) equals Radius ( CIRCLE: q )",
    "id": 1594,
    "declarations": "h: CONICSECTION; q: CIRCLE",
    "facts": "Quadrant(UpperFocus(h)) = Radius(q)"
},
{
    "assertion": "RealAxis ( ELLIPSE: R ) equals LINESEGMENT: o",
    "id": 1595,
    "declarations": "R: ELLIPSE; o: LINESEGMENT",
    "facts": "RealAxis(R) = o"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: K ) equals RightDirectrix ( CONICSECTION: k )",
    "id": 1596,
    "declarations": "K: LINESEGMENT; k: CONICSECTION",
    "facts": "PerpendicularBisector(K) = RightDirectrix(k)"
},
{
    "assertion": "NumIntersection ( CURVE: v, CURVE: G ) equals HalfFocalLength ( CONICSECTION: O )",
    "id": 1597,
    "declarations": "v: CURVE; G: CURVE; O: CONICSECTION",
    "facts": "NumIntersection(v, G) = HalfFocalLength(O)"
},
{
    "assertion": "Between ( POINT: U, POINT: D, LowerVertex ( CONICSECTION: D ) ) equals BOOL: False",
    "id": 1598,
    "declarations": "U: POINT; D: POINT; D: CONICSECTION; False: BOOL",
    "facts": "Between(U, D, LowerVertex(D)) = False"
},
{
    "assertion": "Center ( CONICSECTION: c ) equals LeftFocus ( CONICSECTION: D )",
    "id": 1599,
    "declarations": "c: CONICSECTION; D: CONICSECTION",
    "facts": "Center(c) = LeftFocus(D)"
},
{
    "assertion": "DotProduct ( VECTOR: M, VECTOR: c ) equals lg ( Radius ( CIRCLE: f ) )",
    "id": 1600,
    "declarations": "M: VECTOR; c: VECTOR; f: CIRCLE",
    "facts": "DotProduct(M, c) = lg(Radius(f))"
},
{
    "assertion": "AngleOf ( RightFocus ( CONICSECTION: z ), LeftFocus ( CONICSECTION: Y ), Orthocenter ( TRIANGLE: h ) ) equals AngleOf ( POINT: P, POINT: I, POINT: p )",
    "id": 1601,
    "declarations": "z: CONICSECTION; Y: CONICSECTION; h: TRIANGLE; P: POINT; I: POINT; p: POINT",
    "facts": "AngleOf(RightFocus(z), LeftFocus(Y), Orthocenter(h)) = AngleOf(P, I, p)"
},
{
    "assertion": "RightFocus ( CONICSECTION: D ) equals UpperVertex ( CONICSECTION: z )",
    "id": 1602,
    "declarations": "D: CONICSECTION; z: CONICSECTION",
    "facts": "RightFocus(D) = UpperVertex(z)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: T, CONICSECTION: e ) equals BOOL: True",
    "id": 1603,
    "declarations": "T: LINESEGMENT; e: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(T, e) = True"
},
{
    "assertion": "ApplyUnit ( Perimeter ( CONICSECTION: B ), DEGREESTR: degree )",
    "id": 1604,
    "declarations": "B: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Perimeter(B), degree) = None"
},
{
    "assertion": "Abs ( LINESEGMENT: V ) equals Min ( Radius ( CIRCLE: T ) )",
    "id": 1605,
    "declarations": "V: LINESEGMENT; T: CIRCLE",
    "facts": "Abs(V) = Min(Radius(T))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: C ) equals CURVE: Y",
    "id": 1606,
    "declarations": "C: HYPERBOLA; Y: CURVE",
    "facts": "LeftPart(C) = Y"
},
{
    "assertion": "TangentOfPoint ( Orthocenter ( TRIANGLE: S ), CURVE: j ) equals PerpendicularBisector ( LINESEGMENT: m )",
    "id": 1607,
    "declarations": "S: TRIANGLE; j: CURVE; m: LINESEGMENT",
    "facts": "TangentOfPoint(Orthocenter(S), j) = PerpendicularBisector(m)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: x, TRIANGLE: I ) equals BOOL: True",
    "id": 1608,
    "declarations": "x: CIRCLE; I: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(x, I) = True"
},
{
    "assertion": "Area ( CONICSECTION: p ) equals Inclination ( LINE: H )",
    "id": 1609,
    "declarations": "p: CONICSECTION; H: LINE",
    "facts": "Area(p) = Inclination(H)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: x, CONICSECTION: N ) equals BOOL: True",
    "id": 1610,
    "declarations": "x: LINESEGMENT; N: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(x, N) = True"
},
{
    "assertion": "Projection ( POINT: R, LINE: i ) equals MidPoint ( LINESEGMENT: I )",
    "id": 1611,
    "declarations": "R: POINT; i: LINE; I: LINESEGMENT",
    "facts": "Projection(R, i) = MidPoint(I)"
},
{
    "assertion": "IsPerpendicular ( LINE: r, PerpendicularBisector ( LINESEGMENT: J ) ) equals BOOL: True",
    "id": 1612,
    "declarations": "r: LINE; J: LINESEGMENT; True: BOOL",
    "facts": "IsPerpendicular(r, PerpendicularBisector(J)) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: u ) equals FootPoint ( RightDirectrix ( CONICSECTION: Y ), LINE: C )",
    "id": 1613,
    "declarations": "u: CONICSECTION; Y: CONICSECTION; C: LINE",
    "facts": "LeftFocus(u) = FootPoint(RightDirectrix(Y), C)"
},
{
    "assertion": "IsInTangent ( CIRCLE: J, CIRCLE: H ) equals BOOL: False",
    "id": 1614,
    "declarations": "J: CIRCLE; H: CIRCLE; False: BOOL",
    "facts": "IsInTangent(J, H) = False"
},
{
    "assertion": "Endpoint ( LINESEGMENT: F ) equals POINT: m",
    "id": 1615,
    "declarations": "F: LINESEGMENT; m: POINT",
    "facts": "Endpoint(F) = m"
},
{
    "assertion": "RealAxis ( ELLIPSE: n ) equals InterceptChord ( LINE: L, CONICSECTION: p )",
    "id": 1616,
    "declarations": "n: ELLIPSE; L: LINE; p: CONICSECTION",
    "facts": "RealAxis(n) = InterceptChord(L, p)"
},
{
    "assertion": "Inclination ( LINE: p ) equals Perimeter ( CONICSECTION: L )",
    "id": 1617,
    "declarations": "p: LINE; L: CONICSECTION",
    "facts": "Inclination(p) = Perimeter(L)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: o ) equals AXIS: yAxis",
    "id": 1618,
    "declarations": "o: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(o) = yAxis"
},
{
    "assertion": "Area ( CONICSECTION: Z ) equals NUMBER: -73",
    "id": 1619,
    "declarations": "Z: CONICSECTION; -73: NUMBER",
    "facts": "Area(Z) = -73"
},
{
    "assertion": "TangentOfPoint ( Circumcenter ( TRIANGLE: b ), LeftPart ( HYPERBOLA: Q ) ) equals LINE: Y",
    "id": 1620,
    "declarations": "b: TRIANGLE; Q: HYPERBOLA; Y: LINE",
    "facts": "TangentOfPoint(Circumcenter(b), LeftPart(Q)) = Y"
},
{
    "assertion": "LeftPart ( HYPERBOLA: y ) equals RightPart ( HYPERBOLA: w )",
    "id": 1621,
    "declarations": "y: HYPERBOLA; w: HYPERBOLA",
    "facts": "LeftPart(y) = RightPart(w)"
},
{
    "assertion": "Between ( POINT: h, RightFocus ( CONICSECTION: q ), POINT: V ) equals BOOL: False",
    "id": 1622,
    "declarations": "h: POINT; q: CONICSECTION; V: POINT; False: BOOL",
    "facts": "Between(h, RightFocus(q), V) = False"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: i ) equals Length ( RealAxis ( ELLIPSE: y ) )",
    "id": 1623,
    "declarations": "i: CONICSECTION; y: ELLIPSE",
    "facts": "HalfFocalLength(i) = Length(RealAxis(y))"
},
{
    "assertion": "Distance ( POINT: d, LeftFocus ( CONICSECTION: G ) ) equals Min ( Length ( MajorAxis ( ELLIPSE: Y ) ) )",
    "id": 1624,
    "declarations": "d: POINT; G: CONICSECTION; Y: ELLIPSE",
    "facts": "Distance(d, LeftFocus(G)) = Min(Length(MajorAxis(Y)))"
},
{
    "assertion": "TangentOnPoint ( POINT: x, CURVE: k ) equals LINE: D",
    "id": 1625,
    "declarations": "x: POINT; k: CURVE; D: LINE",
    "facts": "TangentOnPoint(x, k) = D"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: f ) equals RightDirectrix ( CONICSECTION: J )",
    "id": 1626,
    "declarations": "f: CONICSECTION; J: CONICSECTION",
    "facts": "RightDirectrix(f) = RightDirectrix(J)"
},
{
    "assertion": "FocalLength ( CONICSECTION: w ) equals XCoordinate ( Circumcenter ( TRIANGLE: g ) )",
    "id": 1627,
    "declarations": "w: CONICSECTION; g: TRIANGLE",
    "facts": "FocalLength(w) = XCoordinate(Circumcenter(g))"
},
{
    "assertion": "Perimeter ( CONICSECTION: i ) equals NUMBER: 98",
    "id": 1628,
    "declarations": "i: CONICSECTION; 98: NUMBER",
    "facts": "Perimeter(i) = 98"
},
{
    "assertion": "Area ( CONICSECTION: G ) equals NUMBER: 81",
    "id": 1629,
    "declarations": "G: CONICSECTION; 81: NUMBER",
    "facts": "Area(G) = 81"
},
{
    "assertion": "LeftPart ( HYPERBOLA: f ) equals CURVE: i",
    "id": 1630,
    "declarations": "f: HYPERBOLA; i: CURVE",
    "facts": "LeftPart(f) = i"
},
{
    "assertion": "RealAxis ( ELLIPSE: u ) equals MinorAxis ( ELLIPSE: c )",
    "id": 1631,
    "declarations": "u: ELLIPSE; c: ELLIPSE",
    "facts": "RealAxis(u) = MinorAxis(c)"
},
{
    "assertion": "Radius ( CIRCLE: I ) equals HalfFocalLength ( CONICSECTION: g )",
    "id": 1632,
    "declarations": "I: CIRCLE; g: CONICSECTION",
    "facts": "Radius(I) = HalfFocalLength(g)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: Z, TRIANGLE: W ) equals BOOL: True",
    "id": 1633,
    "declarations": "Z: CIRCLE; W: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(Z, W) = True"
},
{
    "assertion": "RightFocus ( CONICSECTION: y ) equals LeftVertex ( CONICSECTION: I )",
    "id": 1634,
    "declarations": "y: CONICSECTION; I: CONICSECTION",
    "facts": "RightFocus(y) = LeftVertex(I)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: p ) equals Orthocenter ( TRIANGLE: q )",
    "id": 1635,
    "declarations": "p: LINESEGMENT; q: TRIANGLE",
    "facts": "MidPoint(p) = Orthocenter(q)"
},
{
    "assertion": "Max ( NUMBER: 47 ) equals Slope ( LINE: y )",
    "id": 1636,
    "declarations": "47: NUMBER; y: LINE",
    "facts": "Max(47) = Slope(y)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: I ) equals POINT: X",
    "id": 1637,
    "declarations": "I: LINESEGMENT; X: POINT",
    "facts": "Endpoint(I) = X"
},
{
    "assertion": "Max ( FocalLength ( CONICSECTION: d ) ) equals NUMBER: 52",
    "id": 1638,
    "declarations": "d: CONICSECTION; 52: NUMBER",
    "facts": "Max(FocalLength(d)) = 52"
},
{
    "assertion": "XCoordinate ( MidPoint ( LINESEGMENT: H ) ) equals lg ( NUMBER: -92 )",
    "id": 1639,
    "declarations": "H: LINESEGMENT; -92: NUMBER",
    "facts": "XCoordinate(MidPoint(H)) = lg(-92)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: N ) equals LINE: K",
    "id": 1640,
    "declarations": "N: LINESEGMENT; K: LINE",
    "facts": "PerpendicularBisector(N) = K"
},
{
    "assertion": "LineOf ( POINT: K, LowerFocus ( CONICSECTION: d ) ) equals OverlappingLine ( LINESEGMENT: s )",
    "id": 1641,
    "declarations": "K: POINT; d: CONICSECTION; s: LINESEGMENT",
    "facts": "LineOf(K, LowerFocus(d)) = OverlappingLine(s)"
},
{
    "assertion": "Perimeter ( CONICSECTION: f ) equals FocalLength ( CONICSECTION: L )",
    "id": 1642,
    "declarations": "f: CONICSECTION; L: CONICSECTION",
    "facts": "Perimeter(f) = FocalLength(L)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -9, DEGREESTR: degree )",
    "id": 1643,
    "declarations": "-9: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-9, degree) = None"
},
{
    "assertion": "RealAxis ( ELLIPSE: h ) equals ImaginaryAxis ( ELLIPSE: A )",
    "id": 1644,
    "declarations": "h: ELLIPSE; A: ELLIPSE",
    "facts": "RealAxis(h) = ImaginaryAxis(A)"
},
{
    "assertion": "RightFocus ( CONICSECTION: A ) equals Center ( CONICSECTION: W )",
    "id": 1645,
    "declarations": "A: CONICSECTION; W: CONICSECTION",
    "facts": "RightFocus(A) = Center(W)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: G ) equals MajorAxis ( ELLIPSE: C )",
    "id": 1646,
    "declarations": "G: ELLIPSE; C: ELLIPSE",
    "facts": "MinorAxis(G) = MajorAxis(C)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -34, DEGREESTR: degree )",
    "id": 1647,
    "declarations": "-34: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-34, degree) = None"
},
{
    "assertion": "Center ( CONICSECTION: T ) equals POINT: D",
    "id": 1648,
    "declarations": "T: CONICSECTION; D: POINT",
    "facts": "Center(T) = D"
},
{
    "assertion": "TriangleOf ( POINT: Y, RightFocus ( CONICSECTION: a ), POINT: i ) equals TRIANGLE: A",
    "id": 1649,
    "declarations": "Y: POINT; a: CONICSECTION; i: POINT; A: TRIANGLE",
    "facts": "TriangleOf(Y, RightFocus(a), i) = A"
},
{
    "assertion": "Eccentricity ( CONICSECTION: s ) equals NUMBER: -39",
    "id": 1650,
    "declarations": "s: CONICSECTION; -39: NUMBER",
    "facts": "Eccentricity(s) = -39"
},
{
    "assertion": "LeftPart ( HYPERBOLA: F ) equals CURVE: r",
    "id": 1651,
    "declarations": "F: HYPERBOLA; r: CURVE",
    "facts": "LeftPart(F) = r"
},
{
    "assertion": "Intersection ( CURVE: u, CURVE: N ) equals MidPoint ( LINESEGMENT: J )",
    "id": 1652,
    "declarations": "u: CURVE; N: CURVE; J: LINESEGMENT",
    "facts": "Intersection(u, N) = MidPoint(J)"
},
{
    "assertion": "Slope ( TangentOfPoint ( POINT: b, CURVE: P ) ) equals Diameter ( CIRCLE: T )",
    "id": 1653,
    "declarations": "b: POINT; P: CURVE; T: CIRCLE",
    "facts": "Slope(TangentOfPoint(b, P)) = Diameter(T)"
},
{
    "assertion": "Negation ( ImaginaryAxis ( ELLIPSE: Y ) equals LINESEGMENT: f ) equals BOOL: True",
    "id": 1654,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MidPoint ( LINESEGMENT: Z ) equals POINT: V",
    "id": 1655,
    "declarations": "Z: LINESEGMENT; V: POINT",
    "facts": "MidPoint(Z) = V"
},
{
    "assertion": "IsChordOf ( MinorAxis ( ELLIPSE: w ), CONICSECTION: H ) equals BOOL: False",
    "id": 1656,
    "declarations": "w: ELLIPSE; H: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(MinorAxis(w), H) = False"
},
{
    "assertion": "Diameter ( CIRCLE: c ) equals Intercept ( LINE: M, AXIS: xAxis )",
    "id": 1657,
    "declarations": "c: CIRCLE; M: LINE; xAxis: AXIS",
    "facts": "Diameter(c) = Intercept(M, xAxis)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: O, TRIANGLE: d ) equals BOOL: True",
    "id": 1658,
    "declarations": "O: CIRCLE; d: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(O, d) = True"
},
{
    "assertion": "Center ( CONICSECTION: O ) equals POINT: y",
    "id": 1659,
    "declarations": "O: CONICSECTION; y: POINT",
    "facts": "Center(O) = y"
},
{
    "assertion": "TriangleOf ( RightVertex ( CONICSECTION: g ), POINT: O, Incenter ( TRIANGLE: w ) ) equals TRIANGLE: W",
    "id": 1660,
    "declarations": "g: CONICSECTION; O: POINT; w: TRIANGLE; W: TRIANGLE",
    "facts": "TriangleOf(RightVertex(g), O, Incenter(w)) = W"
},
{
    "assertion": "Distance ( UpperFocus ( CONICSECTION: Y ), MidPoint ( LINESEGMENT: j ) ) equals NUMBER: -77",
    "id": 1661,
    "declarations": "Y: CONICSECTION; j: LINESEGMENT; -77: NUMBER",
    "facts": "Distance(UpperFocus(Y), MidPoint(j)) = -77"
},
{
    "assertion": "MajorAxis ( ELLIPSE: I ) equals LINESEGMENT: v",
    "id": 1662,
    "declarations": "I: ELLIPSE; v: LINESEGMENT",
    "facts": "MajorAxis(I) = v"
},
{
    "assertion": "IsDiameter ( MajorAxis ( ELLIPSE: o ), CIRCLE: W ) equals BOOL: False",
    "id": 1663,
    "declarations": "o: ELLIPSE; W: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MajorAxis(o), W) = False"
},
{
    "assertion": "InterceptChord ( LINE: F, CONICSECTION: n ) equals LINESEGMENT: c",
    "id": 1664,
    "declarations": "F: LINE; n: CONICSECTION; c: LINESEGMENT",
    "facts": "InterceptChord(F, n) = c"
},
{
    "assertion": "XCoordinate ( Circumcenter ( TRIANGLE: k ) ) equals NUMBER: -90",
    "id": 1665,
    "declarations": "k: TRIANGLE; -90: NUMBER",
    "facts": "XCoordinate(Circumcenter(k)) = -90"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: Z ) equals LINESEGMENT: w",
    "id": 1666,
    "declarations": "Z: ELLIPSE; w: LINESEGMENT",
    "facts": "ImaginaryAxis(Z) = w"
},
{
    "assertion": "DotProduct ( VECTOR: f, VECTOR: a ) equals NUMBER: 52",
    "id": 1667,
    "declarations": "f: VECTOR; a: VECTOR; 52: NUMBER",
    "facts": "DotProduct(f, a) = 52"
},
{
    "assertion": "PointOnCurve ( MidPoint ( MajorAxis ( ELLIPSE: G ) ), CURVE: Z ) equals BOOL: True",
    "id": 1668,
    "declarations": "G: ELLIPSE; Z: CURVE; True: BOOL",
    "facts": "PointOnCurve(MidPoint(MajorAxis(G)), Z) = True"
},
{
    "assertion": "Vertex ( CONICSECTION: Y ) equals POINT: R",
    "id": 1669,
    "declarations": "Y: CONICSECTION; R: POINT",
    "facts": "Vertex(Y) = R"
},
{
    "assertion": "Locus ( POINT: U ) equals CURVE: t",
    "id": 1670,
    "declarations": "U: POINT; t: CURVE",
    "facts": "Locus(U) = t"
},
{
    "assertion": "Incenter ( TRIANGLE: N ) equals RightVertex ( CONICSECTION: r )",
    "id": 1671,
    "declarations": "N: TRIANGLE; r: CONICSECTION",
    "facts": "Incenter(N) = RightVertex(r)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: n ) equals LINESEGMENT: J",
    "id": 1672,
    "declarations": "n: ELLIPSE; J: LINESEGMENT",
    "facts": "MinorAxis(n) = J"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: k, CONICSECTION: x ) equals BOOL: False",
    "id": 1673,
    "declarations": "k: LINESEGMENT; x: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(k, x) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: g ) equals POINT: P",
    "id": 1674,
    "declarations": "g: CONICSECTION; P: POINT",
    "facts": "LowerVertex(g) = P"
},
{
    "assertion": "MinorAxis ( ELLIPSE: h ) equals MinorAxis ( ELLIPSE: Z )",
    "id": 1675,
    "declarations": "h: ELLIPSE; Z: ELLIPSE",
    "facts": "MinorAxis(h) = MinorAxis(Z)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: B ) equals AXIS: xAxis",
    "id": 1676,
    "declarations": "B: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(B) = xAxis"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: H, TRIANGLE: G ) equals BOOL: True",
    "id": 1677,
    "declarations": "H: CIRCLE; G: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(H, G) = True"
},
{
    "assertion": "Intersection ( CURVE: r, CURVE: u ) equals POINT: y",
    "id": 1678,
    "declarations": "r: CURVE; u: CURVE; y: POINT",
    "facts": "Intersection(r, u) = y"
},
{
    "assertion": "YCoordinate ( MidPoint ( MinorAxis ( ELLIPSE: V ) ) ) equals FocalLength ( CONICSECTION: l )",
    "id": 1679,
    "declarations": "V: ELLIPSE; l: CONICSECTION",
    "facts": "YCoordinate(MidPoint(MinorAxis(V))) = FocalLength(l)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: d ) equals POINT: n",
    "id": 1680,
    "declarations": "d: CONICSECTION; n: POINT",
    "facts": "UpperVertex(d) = n"
},
{
    "assertion": "RealAxis ( ELLIPSE: u ) equals LINESEGMENT: V",
    "id": 1681,
    "declarations": "u: ELLIPSE; V: LINESEGMENT",
    "facts": "RealAxis(u) = V"
},
{
    "assertion": "TriangleOf ( POINT: x, POINT: C, POINT: P ) equals TRIANGLE: z",
    "id": 1682,
    "declarations": "x: POINT; C: POINT; P: POINT; z: TRIANGLE",
    "facts": "TriangleOf(x, C, P) = z"
},
{
    "assertion": "RealAxis ( ELLIPSE: T ) equals InterceptChord ( LINE: H, CONICSECTION: s )",
    "id": 1683,
    "declarations": "T: ELLIPSE; H: LINE; s: CONICSECTION",
    "facts": "RealAxis(T) = InterceptChord(H, s)"
},
{
    "assertion": "AngleOf ( POINT: f, POINT: J, RightFocus ( CONICSECTION: b ) ) equals AngleOf ( UpperVertex ( CONICSECTION: z ), POINT: L, POINT: z )",
    "id": 1684,
    "declarations": "f: POINT; J: POINT; b: CONICSECTION; z: CONICSECTION; L: POINT; z: POINT",
    "facts": "AngleOf(f, J, RightFocus(b)) = AngleOf(UpperVertex(z), L, z)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: z ) equals CURVE: h",
    "id": 1685,
    "declarations": "z: HYPERBOLA; h: CURVE",
    "facts": "LeftPart(z) = h"
},
{
    "assertion": "UpperVertex ( CONICSECTION: X ) equals Circumcenter ( TRIANGLE: G )",
    "id": 1686,
    "declarations": "X: CONICSECTION; G: TRIANGLE",
    "facts": "UpperVertex(X) = Circumcenter(G)"
},
{
    "assertion": "IsIntersect ( CURVE: G, CURVE: a ) equals BOOL: True",
    "id": 1687,
    "declarations": "G: CURVE; a: CURVE; True: BOOL",
    "facts": "IsIntersect(G, a) = True"
},
{
    "assertion": "Center ( CONICSECTION: c ) equals POINT: O",
    "id": 1688,
    "declarations": "c: CONICSECTION; O: POINT",
    "facts": "Center(c) = O"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: a ) equals LINESEGMENT: o",
    "id": 1689,
    "declarations": "a: ELLIPSE; o: LINESEGMENT",
    "facts": "ImaginaryAxis(a) = o"
},
{
    "assertion": "LowerVertex ( CONICSECTION: K ) equals POINT: X",
    "id": 1690,
    "declarations": "K: CONICSECTION; X: POINT",
    "facts": "LowerVertex(K) = X"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: F ) equals LINE: y",
    "id": 1691,
    "declarations": "F: LINESEGMENT; y: LINE",
    "facts": "PerpendicularBisector(F) = y"
},
{
    "assertion": "CircumCircle ( TRIANGLE: u ) equals CIRCLE: o",
    "id": 1692,
    "declarations": "u: TRIANGLE; o: CIRCLE",
    "facts": "CircumCircle(u) = o"
},
{
    "assertion": "CircumCircle ( TRIANGLE: q ) equals CIRCLE: Z",
    "id": 1693,
    "declarations": "q: TRIANGLE; Z: CIRCLE",
    "facts": "CircumCircle(q) = Z"
},
{
    "assertion": "ApplyUnit ( NUMBER: 94, DEGREESTR: degree )",
    "id": 1694,
    "declarations": "94: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(94, degree) = None"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: s ) equals LINE: S",
    "id": 1695,
    "declarations": "s: CONICSECTION; S: LINE",
    "facts": "RightDirectrix(s) = S"
},
{
    "assertion": "sqrt ( lg ( Perimeter ( CONICSECTION: J ) ) ) equals HalfFocalLength ( CONICSECTION: N )",
    "id": 1696,
    "declarations": "J: CONICSECTION; N: CONICSECTION",
    "facts": "sqrt(lg(Perimeter(J))) = HalfFocalLength(N)"
},
{
    "assertion": "LineSegmentOf ( MidPoint ( LINESEGMENT: Q ), RightFocus ( CONICSECTION: r ) ) equals ImaginaryAxis ( ELLIPSE: b )",
    "id": 1697,
    "declarations": "Q: LINESEGMENT; r: CONICSECTION; b: ELLIPSE",
    "facts": "LineSegmentOf(MidPoint(Q), RightFocus(r)) = ImaginaryAxis(b)"
},
{
    "assertion": "FocalLength ( CONICSECTION: b ) equals Inclination ( LINE: b )",
    "id": 1698,
    "declarations": "b: CONICSECTION; b: LINE",
    "facts": "FocalLength(b) = Inclination(b)"
},
{
    "assertion": "Endpoint ( MinorAxis ( ELLIPSE: c ) ) equals Incenter ( TRIANGLE: T )",
    "id": 1699,
    "declarations": "c: ELLIPSE; T: TRIANGLE",
    "facts": "Endpoint(MinorAxis(c)) = Incenter(T)"
},
{
    "assertion": "ApplyUnit ( Diameter ( CircumCircle ( TRIANGLE: z ) ), DEGREESTR: degree )",
    "id": 1700,
    "declarations": "z: TRIANGLE; degree: DEGREESTR",
    "facts": "ApplyUnit(Diameter(CircumCircle(z)), degree) = None"
},
{
    "assertion": "Intersection ( CURVE: T, LeftPart ( HYPERBOLA: C ) ) equals LowerVertex ( CONICSECTION: I )",
    "id": 1701,
    "declarations": "T: CURVE; C: HYPERBOLA; I: CONICSECTION",
    "facts": "Intersection(T, LeftPart(C)) = LowerVertex(I)"
},
{
    "assertion": "RightVertex ( CONICSECTION: t ) equals POINT: x",
    "id": 1702,
    "declarations": "t: CONICSECTION; x: POINT",
    "facts": "RightVertex(t) = x"
},
{
    "assertion": "MidPoint ( LINESEGMENT: S ) equals POINT: d",
    "id": 1703,
    "declarations": "S: LINESEGMENT; d: POINT",
    "facts": "MidPoint(S) = d"
},
{
    "assertion": "Center ( CONICSECTION: Y ) equals RightFocus ( CONICSECTION: Z )",
    "id": 1704,
    "declarations": "Y: CONICSECTION; Z: CONICSECTION",
    "facts": "Center(Y) = RightFocus(Z)"
},
{
    "assertion": "lg ( Min ( Radius ( CIRCLE: i ) ) ) equals Inclination ( LINE: V )",
    "id": 1705,
    "declarations": "i: CIRCLE; V: LINE",
    "facts": "lg(Min(Radius(i))) = Inclination(V)"
},
{
    "assertion": "IsPerpendicular ( LeftDirectrix ( CONICSECTION: p ), OverlappingLine ( MajorAxis ( ELLIPSE: i ) ) ) equals BOOL: False",
    "id": 1706,
    "declarations": "p: CONICSECTION; i: ELLIPSE; False: BOOL",
    "facts": "IsPerpendicular(LeftDirectrix(p), OverlappingLine(MajorAxis(i))) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: e ) equals lg ( Eccentricity ( CONICSECTION: L ) )",
    "id": 1707,
    "declarations": "e: CONICSECTION; L: CONICSECTION",
    "facts": "Perimeter(e) = lg(Eccentricity(L))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: i ) equals UpperVertex ( CONICSECTION: n )",
    "id": 1708,
    "declarations": "i: TRIANGLE; n: CONICSECTION",
    "facts": "Circumcenter(i) = UpperVertex(n)"
},
{
    "assertion": "And ( FootPoint ( RightDirectrix ( CONICSECTION: A ), LINE: P ) equals POINT: j, FootPoint ( LINE: y, LineOf ( RightFocus ( CONICSECTION: C ), UpperFocus ( CONICSECTION: s ) ) ) equals LeftFocus ( CONICSECTION: s ) ) equals BOOL: False",
    "id": 1709,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Locus ( RightFocus ( CONICSECTION: T ) ) equals CURVE: n",
    "id": 1710,
    "declarations": "T: CONICSECTION; n: CURVE",
    "facts": "Locus(RightFocus(T)) = n"
},
{
    "assertion": "LowerVertex ( CONICSECTION: C ) equals Center ( CONICSECTION: G )",
    "id": 1711,
    "declarations": "C: CONICSECTION; G: CONICSECTION",
    "facts": "LowerVertex(C) = Center(G)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: u ) equals LINESEGMENT: X",
    "id": 1712,
    "declarations": "u: ELLIPSE; X: LINESEGMENT",
    "facts": "MinorAxis(u) = X"
},
{
    "assertion": "Incenter ( TRIANGLE: u ) equals UpperVertex ( CONICSECTION: F )",
    "id": 1713,
    "declarations": "u: TRIANGLE; F: CONICSECTION",
    "facts": "Incenter(u) = UpperVertex(F)"
},
{
    "assertion": "Intercept ( RightDirectrix ( CONICSECTION: R ), AXIS: xAxis ) equals NUMBER: 54",
    "id": 1714,
    "declarations": "R: CONICSECTION; xAxis: AXIS; 54: NUMBER",
    "facts": "Intercept(RightDirectrix(R), xAxis) = 54"
},
{
    "assertion": "LowerFocus ( CONICSECTION: d ) equals POINT: I",
    "id": 1715,
    "declarations": "d: CONICSECTION; I: POINT",
    "facts": "LowerFocus(d) = I"
},
{
    "assertion": "Vertex ( CONICSECTION: O ) equals POINT: Y",
    "id": 1716,
    "declarations": "O: CONICSECTION; Y: POINT",
    "facts": "Vertex(O) = Y"
},
{
    "assertion": "Area ( CONICSECTION: n ) equals NUMBER: 0",
    "id": 1717,
    "declarations": "n: CONICSECTION; 0: NUMBER",
    "facts": "Area(n) = 0"
},
{
    "assertion": "sqrt ( NUMBER: 37 ) equals Slope ( LINE: P )",
    "id": 1718,
    "declarations": "37: NUMBER; P: LINE",
    "facts": "sqrt(37) = Slope(P)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: u ) equals MinorAxis ( ELLIPSE: z )",
    "id": 1719,
    "declarations": "u: ELLIPSE; z: ELLIPSE",
    "facts": "MinorAxis(u) = MinorAxis(z)"
},
{
    "assertion": "Perimeter ( CONICSECTION: j ) equals NUMBER: -27",
    "id": 1720,
    "declarations": "j: CONICSECTION; -27: NUMBER",
    "facts": "Perimeter(j) = -27"
},
{
    "assertion": "MidPoint ( LINESEGMENT: d ) equals POINT: G",
    "id": 1721,
    "declarations": "d: LINESEGMENT; G: POINT",
    "facts": "MidPoint(d) = G"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: Q ) ) equals MidPoint ( LINESEGMENT: R )",
    "id": 1722,
    "declarations": "Q: ELLIPSE; R: LINESEGMENT",
    "facts": "MidPoint(MajorAxis(Q)) = MidPoint(R)"
},
{
    "assertion": "FocalLength ( CONICSECTION: x ) equals Perimeter ( CONICSECTION: D )",
    "id": 1723,
    "declarations": "x: CONICSECTION; D: CONICSECTION",
    "facts": "FocalLength(x) = Perimeter(D)"
},
{
    "assertion": "Expression ( CURVE: m ) equals LocusEquation ( POINT: X )",
    "id": 1724,
    "declarations": "m: CURVE; X: POINT",
    "facts": "Expression(m) = LocusEquation(X)"
},
{
    "assertion": "Min ( NUMBER: 65 ) equals Diameter ( CIRCLE: e )",
    "id": 1725,
    "declarations": "65: NUMBER; e: CIRCLE",
    "facts": "Min(65) = Diameter(e)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: l ) equals POINT: n",
    "id": 1726,
    "declarations": "l: CONICSECTION; n: POINT",
    "facts": "UpperVertex(l) = n"
},
{
    "assertion": "Min ( Min ( Intercept ( LeftDirectrix ( CONICSECTION: o ), AXIS: xAxis ) ) ) equals NUMBER: -77",
    "id": 1727,
    "declarations": "o: CONICSECTION; xAxis: AXIS; -77: NUMBER",
    "facts": "Min(Min(Intercept(LeftDirectrix(o), xAxis))) = -77"
},
{
    "assertion": "Asymptote ( HYPERBOLA: d ) equals LINE: h",
    "id": 1728,
    "declarations": "d: HYPERBOLA; h: LINE",
    "facts": "Asymptote(d) = h"
},
{
    "assertion": "LeftVertex ( CONICSECTION: K ) equals POINT: Q",
    "id": 1729,
    "declarations": "K: CONICSECTION; Q: POINT",
    "facts": "LeftVertex(K) = Q"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: e ) equals LINE: N",
    "id": 1730,
    "declarations": "e: CONICSECTION; N: LINE",
    "facts": "RightDirectrix(e) = N"
},
{
    "assertion": "UpperVertex ( CONICSECTION: v ) equals POINT: M",
    "id": 1731,
    "declarations": "v: CONICSECTION; M: POINT",
    "facts": "UpperVertex(v) = M"
},
{
    "assertion": "Intercept ( LINE: q, AXIS: xAxis ) equals Min ( Quadrant ( POINT: W ) )",
    "id": 1732,
    "declarations": "q: LINE; xAxis: AXIS; W: POINT",
    "facts": "Intercept(q, xAxis) = Min(Quadrant(W))"
},
{
    "assertion": "RightFocus ( CONICSECTION: O ) equals POINT: L",
    "id": 1733,
    "declarations": "O: CONICSECTION; L: POINT",
    "facts": "RightFocus(O) = L"
},
{
    "assertion": "LowerVertex ( CONICSECTION: B ) equals LeftVertex ( CONICSECTION: e )",
    "id": 1734,
    "declarations": "B: CONICSECTION; e: CONICSECTION",
    "facts": "LowerVertex(B) = LeftVertex(e)"
},
{
    "assertion": "Incenter ( TRIANGLE: D ) equals POINT: H",
    "id": 1736,
    "declarations": "D: TRIANGLE; H: POINT",
    "facts": "Incenter(D) = H"
},
{
    "assertion": "LeftPart ( HYPERBOLA: K ) equals CURVE: J",
    "id": 1737,
    "declarations": "K: HYPERBOLA; J: CURVE",
    "facts": "LeftPart(K) = J"
},
{
    "assertion": "Orthocenter ( TRIANGLE: E ) equals UpperVertex ( CONICSECTION: c )",
    "id": 1738,
    "declarations": "E: TRIANGLE; c: CONICSECTION",
    "facts": "Orthocenter(E) = UpperVertex(c)"
},
{
    "assertion": "Negation ( ApplyUnit ( Abs ( LINESEGMENT: g ), DEGREESTR: degree ) ) equals BOOL: False",
    "id": 1739,
    "declarations": "g: LINESEGMENT; degree: DEGREESTR; False: BOOL",
    "facts": "Negation(ApplyUnit(Abs(g), degree)) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: j ) equals ImaginaryAxis ( ELLIPSE: p )",
    "id": 1740,
    "declarations": "j: ELLIPSE; p: ELLIPSE",
    "facts": "MinorAxis(j) = ImaginaryAxis(p)"
},
{
    "assertion": "Locus ( POINT: k ) equals CURVE: Q",
    "id": 1741,
    "declarations": "k: POINT; Q: CURVE",
    "facts": "Locus(k) = Q"
},
{
    "assertion": "MinorAxis ( ELLIPSE: u ) equals LINESEGMENT: Y",
    "id": 1742,
    "declarations": "u: ELLIPSE; Y: LINESEGMENT",
    "facts": "MinorAxis(u) = Y"
},
{
    "assertion": "Min ( FocalLength ( CONICSECTION: K ) ) equals NumIntersection ( CURVE: D, CURVE: b )",
    "id": 1743,
    "declarations": "K: CONICSECTION; D: CURVE; b: CURVE",
    "facts": "Min(FocalLength(K)) = NumIntersection(D, b)"
},
{
    "assertion": "sqrt ( NumIntersection ( CURVE: O, RightPart ( HYPERBOLA: D ) ) ) equals Min ( Diameter ( CIRCLE: i ) )",
    "id": 1744,
    "declarations": "O: CURVE; D: HYPERBOLA; i: CIRCLE",
    "facts": "sqrt(NumIntersection(O, RightPart(D))) = Min(Diameter(i))"
},
{
    "assertion": "Quadrant ( POINT: i ) equals Slope ( LINE: c )",
    "id": 1745,
    "declarations": "i: POINT; c: LINE",
    "facts": "Quadrant(i) = Slope(c)"
},
{
    "assertion": "Radius ( CIRCLE: h ) equals NUMBER: -48",
    "id": 1746,
    "declarations": "h: CIRCLE; -48: NUMBER",
    "facts": "Radius(h) = -48"
},
{
    "assertion": "Negation ( LeftDirectrix ( CONICSECTION: k ) equals LINE: N ) equals BOOL: False",
    "id": 1747,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: o, TRIANGLE: d ) equals BOOL: False",
    "id": 1748,
    "declarations": "o: CIRCLE; d: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(o, d) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: e ) equals Circumcenter ( TRIANGLE: i )",
    "id": 1749,
    "declarations": "e: CONICSECTION; i: TRIANGLE",
    "facts": "Vertex(e) = Circumcenter(i)"
},
{
    "assertion": "LocusEquation ( POINT: o ) equals EXPRESSION: y*space=*space3*x*space+*space2",
    "id": 1750,
    "declarations": "o: POINT; y*space=*space3*x*space+*space2: EXPRESSION",
    "facts": "LocusEquation(o) = y*space=*space3*x*space+*space2"
},
{
    "assertion": "FocalLength ( CONICSECTION: Z ) equals Diameter ( CIRCLE: V )",
    "id": 1751,
    "declarations": "Z: CONICSECTION; V: CIRCLE",
    "facts": "FocalLength(Z) = Diameter(V)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: b ) equals LeftVertex ( CONICSECTION: m )",
    "id": 1752,
    "declarations": "b: TRIANGLE; m: CONICSECTION",
    "facts": "Orthocenter(b) = LeftVertex(m)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: v ) equals POINT: X",
    "id": 1753,
    "declarations": "v: TRIANGLE; X: POINT",
    "facts": "Orthocenter(v) = X"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: s ) equals AXIS: xAxis",
    "id": 1754,
    "declarations": "s: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(s) = xAxis"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: q ) equals LINESEGMENT: w",
    "id": 1755,
    "declarations": "q: ELLIPSE; w: LINESEGMENT",
    "facts": "ImaginaryAxis(q) = w"
},
{
    "assertion": "ApplyUnit ( NumIntersection ( CURVE: m, CURVE: d ), DEGREESTR: degree )",
    "id": 1756,
    "declarations": "m: CURVE; d: CURVE; degree: DEGREESTR",
    "facts": "ApplyUnit(NumIntersection(m, d), degree) = None"
},
{
    "assertion": "Min ( sqrt ( InterReciprocal ( FocalLength ( CONICSECTION: W ) ) ) ) equals NUMBER: -74",
    "id": 1757,
    "declarations": "W: CONICSECTION; -74: NUMBER",
    "facts": "Min(sqrt(InterReciprocal(FocalLength(W)))) = -74"
},
{
    "assertion": "LeftPart ( HYPERBOLA: r ) equals CURVE: K",
    "id": 1758,
    "declarations": "r: HYPERBOLA; K: CURVE",
    "facts": "LeftPart(r) = K"
},
{
    "assertion": "LowerFocus ( CONICSECTION: t ) equals POINT: g",
    "id": 1759,
    "declarations": "t: CONICSECTION; g: POINT",
    "facts": "LowerFocus(t) = g"
},
{
    "assertion": "ApplyUnit ( NUMBER: -80, DEGREESTR: degree )",
    "id": 1760,
    "declarations": "-80: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-80, degree) = None"
},
{
    "assertion": "Center ( CONICSECTION: i ) equals POINT: t",
    "id": 1761,
    "declarations": "i: CONICSECTION; t: POINT",
    "facts": "Center(i) = t"
},
{
    "assertion": "Abs ( LINESEGMENT: S ) equals lg ( Min ( Abs ( LINESEGMENT: g ) ) )",
    "id": 1762,
    "declarations": "S: LINESEGMENT; g: LINESEGMENT",
    "facts": "Abs(S) = lg(Min(Abs(g)))"
},
{
    "assertion": "RightVertex ( CONICSECTION: V ) equals UpperFocus ( CONICSECTION: F )",
    "id": 1763,
    "declarations": "V: CONICSECTION; F: CONICSECTION",
    "facts": "RightVertex(V) = UpperFocus(F)"
},
{
    "assertion": "RightVertex ( CONICSECTION: F ) equals RightVertex ( CONICSECTION: D )",
    "id": 1764,
    "declarations": "F: CONICSECTION; D: CONICSECTION",
    "facts": "RightVertex(F) = RightVertex(D)"
},
{
    "assertion": "IsInTangent ( CIRCLE: I, CircumCircle ( TRIANGLE: S ) ) equals BOOL: True",
    "id": 1765,
    "declarations": "I: CIRCLE; S: TRIANGLE; True: BOOL",
    "facts": "IsInTangent(I, CircumCircle(S)) = True"
},
{
    "assertion": "YCoordinate ( POINT: z ) equals Inclination ( LINE: V )",
    "id": 1766,
    "declarations": "z: POINT; V: LINE",
    "facts": "YCoordinate(z) = Inclination(V)"
},
{
    "assertion": "LineSegmentOf ( POINT: m, POINT: m ) equals LINESEGMENT: U",
    "id": 1767,
    "declarations": "m: POINT; m: POINT; U: LINESEGMENT",
    "facts": "LineSegmentOf(m, m) = U"
},
{
    "assertion": "FootPoint ( LINE: a, LINE: p ) equals POINT: K",
    "id": 1768,
    "declarations": "a: LINE; p: LINE; K: POINT",
    "facts": "FootPoint(a, p) = K"
},
{
    "assertion": "PointOnCurve ( LeftFocus ( CONICSECTION: e ), CURVE: h ) equals BOOL: True",
    "id": 1769,
    "declarations": "e: CONICSECTION; h: CURVE; True: BOOL",
    "facts": "PointOnCurve(LeftFocus(e), h) = True"
},
{
    "assertion": "Vertex ( CONICSECTION: i ) equals Orthocenter ( TRIANGLE: K )",
    "id": 1770,
    "declarations": "i: CONICSECTION; K: TRIANGLE",
    "facts": "Vertex(i) = Orthocenter(K)"
},
{
    "assertion": "RealAxis ( ELLIPSE: Z ) equals LINESEGMENT: i",
    "id": 1771,
    "declarations": "Z: ELLIPSE; i: LINESEGMENT",
    "facts": "RealAxis(Z) = i"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: F ) equals LINE: v",
    "id": 1772,
    "declarations": "F: LINESEGMENT; v: LINE",
    "facts": "PerpendicularBisector(F) = v"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: p ) equals MinorAxis ( ELLIPSE: N )",
    "id": 1773,
    "declarations": "p: ELLIPSE; N: ELLIPSE",
    "facts": "ImaginaryAxis(p) = MinorAxis(N)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: y ) equals Intercept ( LINE: C, AXIS: yAxis )",
    "id": 1774,
    "declarations": "y: CONICSECTION; C: LINE; yAxis: AXIS",
    "facts": "HalfFocalLength(y) = Intercept(C, yAxis)"
},
{
    "assertion": "Directrix ( CONICSECTION: K ) equals LINE: G",
    "id": 1775,
    "declarations": "K: CONICSECTION; G: LINE",
    "facts": "Directrix(K) = G"
},
{
    "assertion": "LineOf ( Circumcenter ( TRIANGLE: y ), Center ( CONICSECTION: C ) ) equals LINE: y",
    "id": 1776,
    "declarations": "y: TRIANGLE; C: CONICSECTION; y: LINE",
    "facts": "LineOf(Circumcenter(y), Center(C)) = y"
},
{
    "assertion": "UpperVertex ( CONICSECTION: r ) equals Orthocenter ( TRIANGLE: P )",
    "id": 1777,
    "declarations": "r: CONICSECTION; P: TRIANGLE",
    "facts": "UpperVertex(r) = Orthocenter(P)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: T ) equals LeftVertex ( CONICSECTION: I )",
    "id": 1778,
    "declarations": "T: CONICSECTION; I: CONICSECTION",
    "facts": "LowerVertex(T) = LeftVertex(I)"
},
{
    "assertion": "Min ( Eccentricity ( CONICSECTION: S ) ) equals NUMBER: -7",
    "id": 1779,
    "declarations": "S: CONICSECTION; -7: NUMBER",
    "facts": "Min(Eccentricity(S)) = -7"
},
{
    "assertion": "LocusEquation ( POINT: T ) equals EXPRESSION: x^2*space+*spacey*space=*space4",
    "id": 1780,
    "declarations": "T: POINT; x^2*space+*spacey*space=*space4: EXPRESSION",
    "facts": "LocusEquation(T) = x^2*space+*spacey*space=*space4"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: t ) equals LINE: Q",
    "id": 1781,
    "declarations": "t: CONICSECTION; Q: LINE",
    "facts": "RightDirectrix(t) = Q"
},
{
    "assertion": "Radius ( CIRCLE: Z ) equals FocalLength ( CONICSECTION: c )",
    "id": 1782,
    "declarations": "Z: CIRCLE; c: CONICSECTION",
    "facts": "Radius(Z) = FocalLength(c)"
},
{
    "assertion": "XCoordinate ( POINT: z ) equals FocalLength ( CONICSECTION: r )",
    "id": 1783,
    "declarations": "z: POINT; r: CONICSECTION",
    "facts": "XCoordinate(z) = FocalLength(r)"
},
{
    "assertion": "Perimeter ( CONICSECTION: A ) equals NUMBER: 22",
    "id": 1784,
    "declarations": "A: CONICSECTION; 22: NUMBER",
    "facts": "Perimeter(A) = 22"
},
{
    "assertion": "LeftFocus ( CONICSECTION: b ) equals UpperVertex ( CONICSECTION: d )",
    "id": 1785,
    "declarations": "b: CONICSECTION; d: CONICSECTION",
    "facts": "LeftFocus(b) = UpperVertex(d)"
},
{
    "assertion": "lg ( Distance ( LowerVertex ( CONICSECTION: b ), Incenter ( TRIANGLE: s ) ) ) equals lg ( Perimeter ( CONICSECTION: c ) )",
    "id": 1786,
    "declarations": "b: CONICSECTION; s: TRIANGLE; c: CONICSECTION",
    "facts": "lg(Distance(LowerVertex(b), Incenter(s))) = lg(Perimeter(c))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: k ) equals MidPoint ( LINESEGMENT: o )",
    "id": 1787,
    "declarations": "k: CONICSECTION; o: LINESEGMENT",
    "facts": "UpperFocus(k) = MidPoint(o)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: b ) equals AXIS: xAxis",
    "id": 1788,
    "declarations": "b: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(b) = xAxis"
},
{
    "assertion": "XCoordinate ( POINT: A ) equals NUMBER: -65",
    "id": 1789,
    "declarations": "A: POINT; -65: NUMBER",
    "facts": "XCoordinate(A) = -65"
},
{
    "assertion": "Slope ( PerpendicularBisector ( LINESEGMENT: L ) ) equals Radius ( CIRCLE: X )",
    "id": 1790,
    "declarations": "L: LINESEGMENT; X: CIRCLE",
    "facts": "Slope(PerpendicularBisector(L)) = Radius(X)"
},
{
    "assertion": "Inclination ( TangentOnPoint ( LeftFocus ( CONICSECTION: u ), CURVE: D ) ) equals Quadrant ( POINT: W )",
    "id": 1791,
    "declarations": "u: CONICSECTION; D: CURVE; W: POINT",
    "facts": "Inclination(TangentOnPoint(LeftFocus(u), D)) = Quadrant(W)"
},
{
    "assertion": "DotProduct ( VECTOR: w, VECTOR: e ) equals NUMBER: -64",
    "id": 1792,
    "declarations": "w: VECTOR; e: VECTOR; -64: NUMBER",
    "facts": "DotProduct(w, e) = -64"
},
{
    "assertion": "Radius ( CIRCLE: y ) equals NUMBER: -72",
    "id": 1793,
    "declarations": "y: CIRCLE; -72: NUMBER",
    "facts": "Radius(y) = -72"
},
{
    "assertion": "LeftVertex ( CONICSECTION: w ) equals POINT: e",
    "id": 1794,
    "declarations": "w: CONICSECTION; e: POINT",
    "facts": "LeftVertex(w) = e"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: S ) equals LINE: w",
    "id": 1795,
    "declarations": "S: CONICSECTION; w: LINE",
    "facts": "LeftDirectrix(S) = w"
},
{
    "assertion": "And ( Projection ( POINT: F, LINE: Q ) equals POINT: m, Min ( Quadrant ( POINT: l ) ) equals NUMBER: 7 ) equals BOOL: False",
    "id": 1796,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Diameter ( CIRCLE: o ) equals Radius ( CIRCLE: L )",
    "id": 1797,
    "declarations": "o: CIRCLE; L: CIRCLE",
    "facts": "Diameter(o) = Radius(L)"
},
{
    "assertion": "Abs ( LINESEGMENT: K ) equals Min ( InterReciprocal ( NUMBER: -21 ) )",
    "id": 1798,
    "declarations": "K: LINESEGMENT; -21: NUMBER",
    "facts": "Abs(K) = Min(InterReciprocal(-21))"
},
{
    "assertion": "Abs ( LINESEGMENT: w ) equals NUMBER: -36",
    "id": 1799,
    "declarations": "w: LINESEGMENT; -36: NUMBER",
    "facts": "Abs(w) = -36"
},
{
    "assertion": "Perimeter ( CONICSECTION: w ) equals NUMBER: -87",
    "id": 1800,
    "declarations": "w: CONICSECTION; -87: NUMBER",
    "facts": "Perimeter(w) = -87"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: Y, TRIANGLE: Y ) equals BOOL: False",
    "id": 1801,
    "declarations": "Y: CIRCLE; Y: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(Y, Y) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: z, TRIANGLE: G ) equals BOOL: False",
    "id": 1802,
    "declarations": "z: CIRCLE; G: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(z, G) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: e ) equals NUMBER: -63",
    "id": 1803,
    "declarations": "e: CONICSECTION; -63: NUMBER",
    "facts": "Perimeter(e) = -63"
},
{
    "assertion": "Locus ( LowerFocus ( CONICSECTION: E ) ) equals CURVE: l",
    "id": 1804,
    "declarations": "E: CONICSECTION; l: CURVE",
    "facts": "Locus(LowerFocus(E)) = l"
},
{
    "assertion": "LeftPart ( HYPERBOLA: s ) equals CURVE: h",
    "id": 1805,
    "declarations": "s: HYPERBOLA; h: CURVE",
    "facts": "LeftPart(s) = h"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: Z ) equals PerpendicularBisector ( LINESEGMENT: w )",
    "id": 1806,
    "declarations": "Z: CONICSECTION; w: LINESEGMENT",
    "facts": "RightDirectrix(Z) = PerpendicularBisector(w)"
},
{
    "assertion": "InterceptChord ( LINE: b, CONICSECTION: X ) equals LINESEGMENT: e",
    "id": 1807,
    "declarations": "b: LINE; X: CONICSECTION; e: LINESEGMENT",
    "facts": "InterceptChord(b, X) = e"
},
{
    "assertion": "RightVertex ( CONICSECTION: P ) equals POINT: O",
    "id": 1808,
    "declarations": "P: CONICSECTION; O: POINT",
    "facts": "RightVertex(P) = O"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: a, TRIANGLE: g ) equals BOOL: True",
    "id": 1809,
    "declarations": "a: CIRCLE; g: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(a, g) = True"
},
{
    "assertion": "FocalLength ( CONICSECTION: Q ) equals NUMBER: 23",
    "id": 1810,
    "declarations": "Q: CONICSECTION; 23: NUMBER",
    "facts": "FocalLength(Q) = 23"
},
{
    "assertion": "LeftVertex ( CONICSECTION: M ) equals LeftVertex ( CONICSECTION: w )",
    "id": 1811,
    "declarations": "M: CONICSECTION; w: CONICSECTION",
    "facts": "LeftVertex(M) = LeftVertex(w)"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: j ), TRIANGLE: d ) equals BOOL: False",
    "id": 1812,
    "declarations": "j: TRIANGLE; d: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(j), d) = False"
},
{
    "assertion": "YCoordinate ( RightFocus ( CONICSECTION: I ) ) equals NUMBER: 27",
    "id": 1813,
    "declarations": "I: CONICSECTION; 27: NUMBER",
    "facts": "YCoordinate(RightFocus(I)) = 27"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: X, CONICSECTION: G ) equals BOOL: True",
    "id": 1814,
    "declarations": "X: LINESEGMENT; G: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(X, G) = True"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: p, TRIANGLE: K ) equals BOOL: True",
    "id": 1815,
    "declarations": "p: CIRCLE; K: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(p, K) = True"
},
{
    "assertion": "YCoordinate ( RightVertex ( CONICSECTION: X ) ) equals Diameter ( CIRCLE: S )",
    "id": 1816,
    "declarations": "X: CONICSECTION; S: CIRCLE",
    "facts": "YCoordinate(RightVertex(X)) = Diameter(S)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: T ) equals POINT: f",
    "id": 1817,
    "declarations": "T: CONICSECTION; f: POINT",
    "facts": "LeftFocus(T) = f"
},
{
    "assertion": "Center ( CONICSECTION: v ) equals UpperVertex ( CONICSECTION: W )",
    "id": 1818,
    "declarations": "v: CONICSECTION; W: CONICSECTION",
    "facts": "Center(v) = UpperVertex(W)"
},
{
    "assertion": "sqrt ( NUMBER: -84 ) equals NUMBER: -99",
    "id": 1819,
    "declarations": "-84: NUMBER; -99: NUMBER",
    "facts": "sqrt(-84) = -99"
},
{
    "assertion": "LeftPart ( HYPERBOLA: C ) equals CURVE: I",
    "id": 1820,
    "declarations": "C: HYPERBOLA; I: CURVE",
    "facts": "LeftPart(C) = I"
},
{
    "assertion": "Locus ( POINT: i ) equals CURVE: g",
    "id": 1821,
    "declarations": "i: POINT; g: CURVE",
    "facts": "Locus(i) = g"
},
{
    "assertion": "Quadrant ( Circumcenter ( TRIANGLE: s ) ) equals NUMBER: -92",
    "id": 1822,
    "declarations": "s: TRIANGLE; -92: NUMBER",
    "facts": "Quadrant(Circumcenter(s)) = -92"
},
{
    "assertion": "LineSegmentOf ( MidPoint ( RealAxis ( ELLIPSE: s ) ), POINT: n ) equals LINESEGMENT: p",
    "id": 1823,
    "declarations": "s: ELLIPSE; n: POINT; p: LINESEGMENT",
    "facts": "LineSegmentOf(MidPoint(RealAxis(s)), n) = p"
},
{
    "assertion": "Incenter ( TRIANGLE: z ) equals LowerFocus ( CONICSECTION: Q )",
    "id": 1824,
    "declarations": "z: TRIANGLE; Q: CONICSECTION",
    "facts": "Incenter(z) = LowerFocus(Q)"
},
{
    "assertion": "YCoordinate ( MidPoint ( ImaginaryAxis ( ELLIPSE: R ) ) ) equals FocalLength ( CONICSECTION: j )",
    "id": 1825,
    "declarations": "R: ELLIPSE; j: CONICSECTION",
    "facts": "YCoordinate(MidPoint(ImaginaryAxis(R))) = FocalLength(j)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: q, CIRCLE: b ) equals BOOL: True",
    "id": 1826,
    "declarations": "q: CIRCLE; b: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(q, b) = True"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: c ) ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 1827,
    "declarations": "c: HYPERBOLA; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "Expression(LeftPart(c)) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "AngleOf ( Center ( CONICSECTION: T ), LeftVertex ( CONICSECTION: G ), Orthocenter ( TRIANGLE: h ) ) equals ApplyUnit ( Intercept ( LINE: q, AXIS: yAxis ), DEGREESTR: degree )",
    "id": 1828,
    "declarations": "T: CONICSECTION; G: CONICSECTION; h: TRIANGLE; q: LINE; yAxis: AXIS; degree: DEGREESTR",
    "facts": "AngleOf(Center(T), LeftVertex(G), Orthocenter(h)) = ApplyUnit(Intercept(q, yAxis), degree)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: J ) equals LINESEGMENT: S",
    "id": 1829,
    "declarations": "J: ELLIPSE; S: LINESEGMENT",
    "facts": "ImaginaryAxis(J) = S"
},
{
    "assertion": "Directrix ( CONICSECTION: o ) equals RightDirectrix ( CONICSECTION: O )",
    "id": 1830,
    "declarations": "o: CONICSECTION; O: CONICSECTION",
    "facts": "Directrix(o) = RightDirectrix(O)"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: N ) ) equals Locus ( LowerVertex ( CONICSECTION: l ) )",
    "id": 1831,
    "declarations": "N: CONICSECTION; l: CONICSECTION",
    "facts": "Locus(LeftFocus(N)) = Locus(LowerVertex(l))"
},
{
    "assertion": "InterReciprocal ( Abs ( LINESEGMENT: z ) ) equals Inclination ( LINE: h )",
    "id": 1832,
    "declarations": "z: LINESEGMENT; h: LINE",
    "facts": "InterReciprocal(Abs(z)) = Inclination(h)"
},
{
    "assertion": "Slope ( LINE: S ) equals FocalLength ( CONICSECTION: A )",
    "id": 1833,
    "declarations": "S: LINE; A: CONICSECTION",
    "facts": "Slope(S) = FocalLength(A)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: s, CIRCLE: J ) equals BOOL: False",
    "id": 1834,
    "declarations": "s: CIRCLE; J: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(s, J) = False"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: o ) equals LINESEGMENT: S",
    "id": 1835,
    "declarations": "o: ELLIPSE; S: LINESEGMENT",
    "facts": "ImaginaryAxis(o) = S"
},
{
    "assertion": "And ( And ( HalfFocalLength ( CONICSECTION: U ) equals Diameter ( CIRCLE: M ), Inclination ( LINE: R ) equals Intercept ( LINE: K, AXIS: yAxis ) ) equals BOOL: True, Intersection ( LeftPart ( HYPERBOLA: q ), CURVE: o ) equals MidPoint ( LINESEGMENT: C ) ) equals BOOL: False",
    "id": 1836,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "FootPoint ( PerpendicularBisector ( LINESEGMENT: r ), LINE: i ) equals Projection ( RightFocus ( CONICSECTION: Z ), LINE: v )",
    "id": 1837,
    "declarations": "r: LINESEGMENT; i: LINE; Z: CONICSECTION; v: LINE",
    "facts": "FootPoint(PerpendicularBisector(r), i) = Projection(RightFocus(Z), v)"
},
{
    "assertion": "Directrix ( CONICSECTION: g ) equals LINE: E",
    "id": 1838,
    "declarations": "g: CONICSECTION; E: LINE",
    "facts": "Directrix(g) = E"
},
{
    "assertion": "IsOutTangent ( CIRCLE: q, CIRCLE: v ) equals BOOL: True",
    "id": 1839,
    "declarations": "q: CIRCLE; v: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(q, v) = True"
},
{
    "assertion": "NumIntersection ( CURVE: i, CURVE: N ) equals Diameter ( CIRCLE: Q )",
    "id": 1840,
    "declarations": "i: CURVE; N: CURVE; Q: CIRCLE",
    "facts": "NumIntersection(i, N) = Diameter(Q)"
},
{
    "assertion": "Quadrant ( POINT: g ) equals NUMBER: 78",
    "id": 1841,
    "declarations": "g: POINT; 78: NUMBER",
    "facts": "Quadrant(g) = 78"
},
{
    "assertion": "Focus ( CONICSECTION: a ) equals POINT: c",
    "id": 1842,
    "declarations": "a: CONICSECTION; c: POINT",
    "facts": "Focus(a) = c"
},
{
    "assertion": "Center ( CONICSECTION: p ) equals LowerFocus ( CONICSECTION: N )",
    "id": 1843,
    "declarations": "p: CONICSECTION; N: CONICSECTION",
    "facts": "Center(p) = LowerFocus(N)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: d ) equals LINESEGMENT: h",
    "id": 1844,
    "declarations": "d: ELLIPSE; h: LINESEGMENT",
    "facts": "MinorAxis(d) = h"
},
{
    "assertion": "TangentPoint ( LINE: A, CIRCLE: F ) equals POINT: q",
    "id": 1845,
    "declarations": "A: LINE; F: CIRCLE; q: POINT",
    "facts": "TangentPoint(A, F) = q"
},
{
    "assertion": "Eccentricity ( CONICSECTION: z ) equals NUMBER: 65",
    "id": 1846,
    "declarations": "z: CONICSECTION; 65: NUMBER",
    "facts": "Eccentricity(z) = 65"
},
{
    "assertion": "AngleOf ( LeftFocus ( CONICSECTION: D ), POINT: j, POINT: y ) equals ApplyUnit ( NUMBER: -40, DEGREESTR: degree )",
    "id": 1847,
    "declarations": "D: CONICSECTION; j: POINT; y: POINT; -40: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(LeftFocus(D), j, y) = ApplyUnit(-40, degree)"
},
{
    "assertion": "Negation ( ImaginaryAxis ( ELLIPSE: T ) equals LINESEGMENT: r ) equals BOOL: False",
    "id": 1848,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LowerVertex ( CONICSECTION: H ) equals Center ( CONICSECTION: p )",
    "id": 1849,
    "declarations": "H: CONICSECTION; p: CONICSECTION",
    "facts": "LowerVertex(H) = Center(p)"
},
{
    "assertion": "YCoordinate ( Incenter ( TRIANGLE: q ) ) equals NUMBER: -47",
    "id": 1850,
    "declarations": "q: TRIANGLE; -47: NUMBER",
    "facts": "YCoordinate(Incenter(q)) = -47"
},
{
    "assertion": "Between ( POINT: O, MidPoint ( LINESEGMENT: Y ), LeftFocus ( CONICSECTION: b ) ) equals BOOL: False",
    "id": 1851,
    "declarations": "O: POINT; Y: LINESEGMENT; b: CONICSECTION; False: BOOL",
    "facts": "Between(O, MidPoint(Y), LeftFocus(b)) = False"
},
{
    "assertion": "VectorOf ( POINT: V, POINT: u ) equals VECTOR: K",
    "id": 1852,
    "declarations": "V: POINT; u: POINT; K: VECTOR",
    "facts": "VectorOf(V, u) = K"
},
{
    "assertion": "LowerFocus ( CONICSECTION: p ) equals POINT: s",
    "id": 1853,
    "declarations": "p: CONICSECTION; s: POINT",
    "facts": "LowerFocus(p) = s"
},
{
    "assertion": "FootPoint ( LINE: B, LINE: k ) equals POINT: S",
    "id": 1854,
    "declarations": "B: LINE; k: LINE; S: POINT",
    "facts": "FootPoint(B, k) = S"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: a, TRIANGLE: I ) equals BOOL: False",
    "id": 1855,
    "declarations": "a: CIRCLE; I: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(a, I) = False"
},
{
    "assertion": "PointOnCurve ( POINT: i, CURVE: K ) equals BOOL: False",
    "id": 1856,
    "declarations": "i: POINT; K: CURVE; False: BOOL",
    "facts": "PointOnCurve(i, K) = False"
},
{
    "assertion": "Endpoint ( LineSegmentOf ( LeftFocus ( CONICSECTION: z ), LeftVertex ( CONICSECTION: v ) ) ) equals LowerVertex ( CONICSECTION: J )",
    "id": 1857,
    "declarations": "z: CONICSECTION; v: CONICSECTION; J: CONICSECTION",
    "facts": "Endpoint(LineSegmentOf(LeftFocus(z), LeftVertex(v))) = LowerVertex(J)"
},
{
    "assertion": "YCoordinate ( Center ( CONICSECTION: G ) ) equals Perimeter ( CONICSECTION: k )",
    "id": 1858,
    "declarations": "G: CONICSECTION; k: CONICSECTION",
    "facts": "YCoordinate(Center(G)) = Perimeter(k)"
},
{
    "assertion": "Inclination ( LineOf ( POINT: N, POINT: c ) ) equals Eccentricity ( CONICSECTION: g )",
    "id": 1859,
    "declarations": "N: POINT; c: POINT; g: CONICSECTION",
    "facts": "Inclination(LineOf(N, c)) = Eccentricity(g)"
},
{
    "assertion": "PointOnCurve ( LowerVertex ( CONICSECTION: y ), CURVE: Z ) equals BOOL: True",
    "id": 1860,
    "declarations": "y: CONICSECTION; Z: CURVE; True: BOOL",
    "facts": "PointOnCurve(LowerVertex(y), Z) = True"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: t ) ) equals Distance ( RightFocus ( CONICSECTION: S ), UpperFocus ( CONICSECTION: a ) )",
    "id": 1861,
    "declarations": "t: CONICSECTION; S: CONICSECTION; a: CONICSECTION",
    "facts": "Slope(RightDirectrix(t)) = Distance(RightFocus(S), UpperFocus(a))"
},
{
    "assertion": "FocalLength ( CONICSECTION: o ) equals Slope ( LINE: m )",
    "id": 1862,
    "declarations": "o: CONICSECTION; m: LINE",
    "facts": "FocalLength(o) = Slope(m)"
},
{
    "assertion": "Directrix ( CONICSECTION: B ) equals LINE: U",
    "id": 1863,
    "declarations": "B: CONICSECTION; U: LINE",
    "facts": "Directrix(B) = U"
},
{
    "assertion": "Directrix ( CONICSECTION: g ) equals RightDirectrix ( CONICSECTION: Z )",
    "id": 1864,
    "declarations": "g: CONICSECTION; Z: CONICSECTION",
    "facts": "Directrix(g) = RightDirectrix(Z)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: c ) equals LineOf ( POINT: f, MidPoint ( LineSegmentOf ( Orthocenter ( TRIANGLE: b ), POINT: T ) ) )",
    "id": 1865,
    "declarations": "c: HYPERBOLA; f: POINT; b: TRIANGLE; T: POINT",
    "facts": "Asymptote(c) = LineOf(f, MidPoint(LineSegmentOf(Orthocenter(b), T)))"
},
{
    "assertion": "RightFocus ( CONICSECTION: M ) equals POINT: s",
    "id": 1866,
    "declarations": "M: CONICSECTION; s: POINT",
    "facts": "RightFocus(M) = s"
},
{
    "assertion": "Orthocenter ( TRIANGLE: L ) equals Projection ( FootPoint ( LINE: S, LINE: c ), OverlappingLine ( MinorAxis ( ELLIPSE: z ) ) )",
    "id": 1867,
    "declarations": "L: TRIANGLE; S: LINE; c: LINE; z: ELLIPSE",
    "facts": "Orthocenter(L) = Projection(FootPoint(S, c), OverlappingLine(MinorAxis(z)))"
},
{
    "assertion": "LocusEquation ( POINT: I ) equals EXPRESSION: y*space=*space2x*space+*space3",
    "id": 1868,
    "declarations": "I: POINT; y*space=*space2x*space+*space3: EXPRESSION",
    "facts": "LocusEquation(I) = y*space=*space2x*space+*space3"
},
{
    "assertion": "Quadrant ( POINT: f ) equals NUMBER: 27",
    "id": 1869,
    "declarations": "f: POINT; 27: NUMBER",
    "facts": "Quadrant(f) = 27"
},
{
    "assertion": "YCoordinate ( POINT: z ) equals Diameter ( CIRCLE: U )",
    "id": 1870,
    "declarations": "z: POINT; U: CIRCLE",
    "facts": "YCoordinate(z) = Diameter(U)"
},
{
    "assertion": "Focus ( CONICSECTION: b ) equals LeftVertex ( CONICSECTION: q )",
    "id": 1871,
    "declarations": "b: CONICSECTION; q: CONICSECTION",
    "facts": "Focus(b) = LeftVertex(q)"
},
{
    "assertion": "Locus ( POINT: C ) equals CURVE: J",
    "id": 1872,
    "declarations": "C: POINT; J: CURVE",
    "facts": "Locus(C) = J"
},
{
    "assertion": "LowerVertex ( CONICSECTION: Q ) equals LeftFocus ( CONICSECTION: O )",
    "id": 1873,
    "declarations": "Q: CONICSECTION; O: CONICSECTION",
    "facts": "LowerVertex(Q) = LeftFocus(O)"
},
{
    "assertion": "Intercept ( LINE: K, AXIS: xAxis ) equals DotProduct ( VECTOR: I, VECTOR: z )",
    "id": 1874,
    "declarations": "K: LINE; xAxis: AXIS; I: VECTOR; z: VECTOR",
    "facts": "Intercept(K, xAxis) = DotProduct(I, z)"
},
{
    "assertion": "TangentOnPoint ( POINT: E, CURVE: Y ) equals RightDirectrix ( CONICSECTION: j )",
    "id": 1875,
    "declarations": "E: POINT; Y: CURVE; j: CONICSECTION",
    "facts": "TangentOnPoint(E, Y) = RightDirectrix(j)"
},
{
    "assertion": "TangentPoint ( LINE: h, CIRCLE: Z ) equals FootPoint ( LINE: I, OverlappingLine ( ImaginaryAxis ( ELLIPSE: H ) ) )",
    "id": 1876,
    "declarations": "h: LINE; Z: CIRCLE; I: LINE; H: ELLIPSE",
    "facts": "TangentPoint(h, Z) = FootPoint(I, OverlappingLine(ImaginaryAxis(H)))"
},
{
    "assertion": "DotProduct ( VectorOf ( LowerFocus ( CONICSECTION: l ), POINT: L ), VECTOR: z ) equals NUMBER: 49",
    "id": 1877,
    "declarations": "l: CONICSECTION; L: POINT; z: VECTOR; 49: NUMBER",
    "facts": "DotProduct(VectorOf(LowerFocus(l), L), z) = 49"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: A ) equals LINE: L",
    "id": 1878,
    "declarations": "A: LINESEGMENT; L: LINE",
    "facts": "OverlappingLine(A) = L"
},
{
    "assertion": "CircumCircle ( TRIANGLE: X ) equals CIRCLE: s",
    "id": 1879,
    "declarations": "X: TRIANGLE; s: CIRCLE",
    "facts": "CircumCircle(X) = s"
},
{
    "assertion": "RightPart ( HYPERBOLA: E ) equals CURVE: b",
    "id": 1880,
    "declarations": "E: HYPERBOLA; b: CURVE",
    "facts": "RightPart(E) = b"
},
{
    "assertion": "Eccentricity ( CONICSECTION: r ) equals XCoordinate ( Circumcenter ( TRIANGLE: n ) )",
    "id": 1881,
    "declarations": "r: CONICSECTION; n: TRIANGLE",
    "facts": "Eccentricity(r) = XCoordinate(Circumcenter(n))"
},
{
    "assertion": "Max ( HalfFocalLength ( CONICSECTION: g ) ) equals NUMBER: -26",
    "id": 1882,
    "declarations": "g: CONICSECTION; -26: NUMBER",
    "facts": "Max(HalfFocalLength(g)) = -26"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: t ) ) equals Intercept ( TangentOfPoint ( UpperVertex ( CONICSECTION: c ), CURVE: r ), AXIS: xAxis )",
    "id": 1883,
    "declarations": "t: TRIANGLE; c: CONICSECTION; r: CURVE; xAxis: AXIS",
    "facts": "Radius(CircumCircle(t)) = Intercept(TangentOfPoint(UpperVertex(c), r), xAxis)"
},
{
    "assertion": "RightPart ( HYPERBOLA: h ) equals CURVE: G",
    "id": 1884,
    "declarations": "h: HYPERBOLA; G: CURVE",
    "facts": "RightPart(h) = G"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: M ) equals LINESEGMENT: z",
    "id": 1885,
    "declarations": "M: ELLIPSE; z: LINESEGMENT",
    "facts": "ImaginaryAxis(M) = z"
},
{
    "assertion": "TangentOnPoint ( RightVertex ( CONICSECTION: P ), CURVE: M ) equals LINE: f",
    "id": 1886,
    "declarations": "P: CONICSECTION; M: CURVE; f: LINE",
    "facts": "TangentOnPoint(RightVertex(P), M) = f"
},
{
    "assertion": "Center ( CONICSECTION: G ) equals LeftVertex ( CONICSECTION: i )",
    "id": 1887,
    "declarations": "G: CONICSECTION; i: CONICSECTION",
    "facts": "Center(G) = LeftVertex(i)"
},
{
    "assertion": "Center ( CONICSECTION: T ) equals Center ( CONICSECTION: a )",
    "id": 1888,
    "declarations": "T: CONICSECTION; a: CONICSECTION",
    "facts": "Center(T) = Center(a)"
},
{
    "assertion": "Radius ( CIRCLE: v ) equals FocalLength ( CONICSECTION: n )",
    "id": 1889,
    "declarations": "v: CIRCLE; n: CONICSECTION",
    "facts": "Radius(v) = FocalLength(n)"
},
{
    "assertion": "FocalLength ( CONICSECTION: y ) equals NUMBER: -55",
    "id": 1890,
    "declarations": "y: CONICSECTION; -55: NUMBER",
    "facts": "FocalLength(y) = -55"
},
{
    "assertion": "LineSegmentOf ( Incenter ( TRIANGLE: l ), POINT: Z ) equals LINESEGMENT: W",
    "id": 1891,
    "declarations": "l: TRIANGLE; Z: POINT; W: LINESEGMENT",
    "facts": "LineSegmentOf(Incenter(l), Z) = W"
},
{
    "assertion": "Negation ( Locus ( Circumcenter ( TRIANGLE: V ) ) equals CURVE: q ) equals BOOL: True",
    "id": 1892,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "DotProduct ( VECTOR: X, VECTOR: b ) equals Min ( Radius ( CIRCLE: S ) )",
    "id": 1893,
    "declarations": "X: VECTOR; b: VECTOR; S: CIRCLE",
    "facts": "DotProduct(X, b) = Min(Radius(S))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: k ) equals POINT: p",
    "id": 1894,
    "declarations": "k: CONICSECTION; p: POINT",
    "facts": "UpperVertex(k) = p"
},
{
    "assertion": "CircumCircle ( TRIANGLE: h ) equals CIRCLE: n",
    "id": 1895,
    "declarations": "h: TRIANGLE; n: CIRCLE",
    "facts": "CircumCircle(h) = n"
},
{
    "assertion": "LowerFocus ( CONICSECTION: D ) equals Center ( CONICSECTION: C )",
    "id": 1896,
    "declarations": "D: CONICSECTION; C: CONICSECTION",
    "facts": "LowerFocus(D) = Center(C)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: b ) equals ImaginaryAxis ( ELLIPSE: T )",
    "id": 1897,
    "declarations": "b: ELLIPSE; T: ELLIPSE",
    "facts": "MinorAxis(b) = ImaginaryAxis(T)"
},
{
    "assertion": "FootPoint ( TangentOnPoint ( LowerVertex ( CONICSECTION: g ), Locus ( LowerVertex ( CONICSECTION: Y ) ) ), LINE: J ) equals Center ( CONICSECTION: a )",
    "id": 1898,
    "declarations": "g: CONICSECTION; Y: CONICSECTION; J: LINE; a: CONICSECTION",
    "facts": "FootPoint(TangentOnPoint(LowerVertex(g), Locus(LowerVertex(Y))), J) = Center(a)"
},
{
    "assertion": "IsChordOf ( MinorAxis ( ELLIPSE: Z ), CONICSECTION: B ) equals BOOL: True",
    "id": 1899,
    "declarations": "Z: ELLIPSE; B: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(MinorAxis(Z), B) = True"
},
{
    "assertion": "LineSegmentOf ( POINT: o, RightVertex ( CONICSECTION: e ) ) equals ImaginaryAxis ( ELLIPSE: x )",
    "id": 1900,
    "declarations": "o: POINT; e: CONICSECTION; x: ELLIPSE",
    "facts": "LineSegmentOf(o, RightVertex(e)) = ImaginaryAxis(x)"
},
{
    "assertion": "VectorOf ( RightVertex ( CONICSECTION: m ), UpperFocus ( CONICSECTION: Y ) ) equals VECTOR: i",
    "id": 1901,
    "declarations": "m: CONICSECTION; Y: CONICSECTION; i: VECTOR",
    "facts": "VectorOf(RightVertex(m), UpperFocus(Y)) = i"
},
{
    "assertion": "CircumCircle ( TRIANGLE: A ) equals CIRCLE: f",
    "id": 1902,
    "declarations": "A: TRIANGLE; f: CIRCLE",
    "facts": "CircumCircle(A) = f"
},
{
    "assertion": "Orthocenter ( TRIANGLE: g ) equals POINT: F",
    "id": 1903,
    "declarations": "g: TRIANGLE; F: POINT",
    "facts": "Orthocenter(g) = F"
},
{
    "assertion": "VectorOf ( POINT: M, POINT: f ) equals VECTOR: P",
    "id": 1904,
    "declarations": "M: POINT; f: POINT; P: VECTOR",
    "facts": "VectorOf(M, f) = P"
},
{
    "assertion": "Quadrant ( Circumcenter ( TRIANGLE: x ) ) equals NUMBER: 8",
    "id": 1905,
    "declarations": "x: TRIANGLE; 8: NUMBER",
    "facts": "Quadrant(Circumcenter(x)) = 8"
},
{
    "assertion": "Intercept ( LINE: j, AXIS: yAxis ) equals XCoordinate ( Circumcenter ( TRIANGLE: S ) )",
    "id": 1906,
    "declarations": "j: LINE; yAxis: AXIS; S: TRIANGLE",
    "facts": "Intercept(j, yAxis) = XCoordinate(Circumcenter(S))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: K, TRIANGLE: B ) equals BOOL: True",
    "id": 1907,
    "declarations": "K: CIRCLE; B: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(K, B) = True"
},
{
    "assertion": "Focus ( CONICSECTION: O ) equals MidPoint ( LINESEGMENT: O )",
    "id": 1908,
    "declarations": "O: CONICSECTION; O: LINESEGMENT",
    "facts": "Focus(O) = MidPoint(O)"
},
{
    "assertion": "Negation ( Abs ( LINESEGMENT: u ) equals Eccentricity ( CONICSECTION: O ) ) equals BOOL: False",
    "id": 1909,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: I ) equals TangentOfPoint ( UpperFocus ( CONICSECTION: x ), Locus ( POINT: G ) )",
    "id": 1910,
    "declarations": "I: CONICSECTION; x: CONICSECTION; G: POINT",
    "facts": "LeftDirectrix(I) = TangentOfPoint(UpperFocus(x), Locus(G))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: z ) equals LINESEGMENT: s",
    "id": 1911,
    "declarations": "z: ELLIPSE; s: LINESEGMENT",
    "facts": "MajorAxis(z) = s"
},
{
    "assertion": "Intercept ( LeftDirectrix ( CONICSECTION: K ), AXIS: xAxis ) equals Length ( RealAxis ( ELLIPSE: P ) )",
    "id": 1912,
    "declarations": "K: CONICSECTION; xAxis: AXIS; P: ELLIPSE",
    "facts": "Intercept(LeftDirectrix(K), xAxis) = Length(RealAxis(P))"
},
{
    "assertion": "Intercept ( LINE: Y, AXIS: xAxis ) equals NUMBER: -88",
    "id": 1913,
    "declarations": "Y: LINE; xAxis: AXIS; -88: NUMBER",
    "facts": "Intercept(Y, xAxis) = -88"
},
{
    "assertion": "Slope ( LINE: T ) equals NumIntersection ( CURVE: U, CURVE: M )",
    "id": 1914,
    "declarations": "T: LINE; U: CURVE; M: CURVE",
    "facts": "Slope(T) = NumIntersection(U, M)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: T, TRIANGLE: r ) equals BOOL: False",
    "id": 1915,
    "declarations": "T: CIRCLE; r: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(T, r) = False"
},
{
    "assertion": "CircumCircle ( TRIANGLE: X ) equals CIRCLE: x",
    "id": 1916,
    "declarations": "X: TRIANGLE; x: CIRCLE",
    "facts": "CircumCircle(X) = x"
},
{
    "assertion": "Diameter ( CIRCLE: a ) equals NUMBER: -88",
    "id": 1917,
    "declarations": "a: CIRCLE; -88: NUMBER",
    "facts": "Diameter(a) = -88"
},
{
    "assertion": "MidPoint ( LINESEGMENT: h ) equals UpperFocus ( CONICSECTION: y )",
    "id": 1918,
    "declarations": "h: LINESEGMENT; y: CONICSECTION",
    "facts": "MidPoint(h) = UpperFocus(y)"
},
{
    "assertion": "ApplyUnit ( Quadrant ( LeftVertex ( CONICSECTION: X ) ), DEGREESTR: degree )",
    "id": 1919,
    "declarations": "X: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Quadrant(LeftVertex(X)), degree) = None"
},
{
    "assertion": "Perimeter ( CONICSECTION: J ) equals Length ( InterceptChord ( OverlappingLine ( LINESEGMENT: r ), CONICSECTION: s ) )",
    "id": 1920,
    "declarations": "J: CONICSECTION; r: LINESEGMENT; s: CONICSECTION",
    "facts": "Perimeter(J) = Length(InterceptChord(OverlappingLine(r), s))"
},
{
    "assertion": "Area ( CONICSECTION: T ) equals HalfFocalLength ( CONICSECTION: k )",
    "id": 1921,
    "declarations": "T: CONICSECTION; k: CONICSECTION",
    "facts": "Area(T) = HalfFocalLength(k)"
},
{
    "assertion": "IsPerpendicular ( LINE: p, RightDirectrix ( CONICSECTION: K ) ) equals BOOL: False",
    "id": 1922,
    "declarations": "p: LINE; K: CONICSECTION; False: BOOL",
    "facts": "IsPerpendicular(p, RightDirectrix(K)) = False"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: v ) equals AXIS: xAxis",
    "id": 1923,
    "declarations": "v: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(v) = xAxis"
},
{
    "assertion": "NumIntersection ( CURVE: E, CURVE: N ) equals Diameter ( CIRCLE: t )",
    "id": 1924,
    "declarations": "E: CURVE; N: CURVE; t: CIRCLE",
    "facts": "NumIntersection(E, N) = Diameter(t)"
},
{
    "assertion": "NumIntersection ( CURVE: n, CURVE: u ) equals NUMBER: -71",
    "id": 1925,
    "declarations": "n: CURVE; u: CURVE; -71: NUMBER",
    "facts": "NumIntersection(n, u) = -71"
},
{
    "assertion": "IsPerpendicular ( LeftDirectrix ( CONICSECTION: p ), LINE: n ) equals BOOL: False",
    "id": 1926,
    "declarations": "p: CONICSECTION; n: LINE; False: BOOL",
    "facts": "IsPerpendicular(LeftDirectrix(p), n) = False"
},
{
    "assertion": "Min ( Area ( CONICSECTION: t ) ) equals NUMBER: 28",
    "id": 1927,
    "declarations": "t: CONICSECTION; 28: NUMBER",
    "facts": "Min(Area(t)) = 28"
},
{
    "assertion": "Min ( XCoordinate ( Center ( CONICSECTION: d ) ) ) equals Min ( Quadrant ( RightVertex ( CONICSECTION: X ) ) )",
    "id": 1928,
    "declarations": "d: CONICSECTION; X: CONICSECTION",
    "facts": "Min(XCoordinate(Center(d))) = Min(Quadrant(RightVertex(X)))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: Y ) equals LeftFocus ( CONICSECTION: l )",
    "id": 1929,
    "declarations": "Y: CONICSECTION; l: CONICSECTION",
    "facts": "LowerVertex(Y) = LeftFocus(l)"
},
{
    "assertion": "NumIntersection ( RightPart ( HYPERBOLA: x ), RightPart ( HYPERBOLA: h ) ) equals Area ( CONICSECTION: l )",
    "id": 1930,
    "declarations": "x: HYPERBOLA; h: HYPERBOLA; l: CONICSECTION",
    "facts": "NumIntersection(RightPart(x), RightPart(h)) = Area(l)"
},
{
    "assertion": "Slope ( LINE: z ) equals NUMBER: -25",
    "id": 1931,
    "declarations": "z: LINE; -25: NUMBER",
    "facts": "Slope(z) = -25"
},
{
    "assertion": "MajorAxis ( ELLIPSE: e ) equals InterceptChord ( LINE: y, CONICSECTION: s )",
    "id": 1932,
    "declarations": "e: ELLIPSE; y: LINE; s: CONICSECTION",
    "facts": "MajorAxis(e) = InterceptChord(y, s)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: y ) equals POINT: U",
    "id": 1933,
    "declarations": "y: CONICSECTION; U: POINT",
    "facts": "LowerFocus(y) = U"
},
{
    "assertion": "LeftFocus ( CONICSECTION: b ) equals MidPoint ( LINESEGMENT: r )",
    "id": 1934,
    "declarations": "b: CONICSECTION; r: LINESEGMENT",
    "facts": "LeftFocus(b) = MidPoint(r)"
},
{
    "assertion": "IsTangent ( LINE: T, CONICSECTION: I ) equals BOOL: False",
    "id": 1935,
    "declarations": "T: LINE; I: CONICSECTION; False: BOOL",
    "facts": "IsTangent(T, I) = False"
},
{
    "assertion": "LeftFocus ( CONICSECTION: M ) equals POINT: D",
    "id": 1936,
    "declarations": "M: CONICSECTION; D: POINT",
    "facts": "LeftFocus(M) = D"
},
{
    "assertion": "TriangleOf ( POINT: r, LeftFocus ( CONICSECTION: q ), POINT: Y ) equals TRIANGLE: O",
    "id": 1937,
    "declarations": "r: POINT; q: CONICSECTION; Y: POINT; O: TRIANGLE",
    "facts": "TriangleOf(r, LeftFocus(q), Y) = O"
},
{
    "assertion": "Radius ( CIRCLE: N ) equals InterReciprocal ( Quadrant ( UpperFocus ( CONICSECTION: p ) ) )",
    "id": 1938,
    "declarations": "N: CIRCLE; p: CONICSECTION",
    "facts": "Radius(N) = InterReciprocal(Quadrant(UpperFocus(p)))"
},
{
    "assertion": "TangentOfPoint ( POINT: l, CURVE: q ) equals PerpendicularBisector ( LINESEGMENT: Q )",
    "id": 1939,
    "declarations": "l: POINT; q: CURVE; Q: LINESEGMENT",
    "facts": "TangentOfPoint(l, q) = PerpendicularBisector(Q)"
},
{
    "assertion": "Quadrant ( POINT: q ) equals NUMBER: -58",
    "id": 1940,
    "declarations": "q: POINT; -58: NUMBER",
    "facts": "Quadrant(q) = -58"
},
{
    "assertion": "Intersection ( Locus ( POINT: e ), CURVE: X ) equals UpperVertex ( CONICSECTION: m )",
    "id": 1941,
    "declarations": "e: POINT; X: CURVE; m: CONICSECTION",
    "facts": "Intersection(Locus(e), X) = UpperVertex(m)"
},
{
    "assertion": "Length ( LineSegmentOf ( POINT: S, POINT: S ) ) equals Length ( LINESEGMENT: K )",
    "id": 1942,
    "declarations": "S: POINT; S: POINT; K: LINESEGMENT",
    "facts": "Length(LineSegmentOf(S, S)) = Length(K)"
},
{
    "assertion": "PointOnCurve ( POINT: a, CURVE: w ) equals BOOL: True",
    "id": 1943,
    "declarations": "a: POINT; w: CURVE; True: BOOL",
    "facts": "PointOnCurve(a, w) = True"
},
{
    "assertion": "InterReciprocal ( NUMBER: -58 ) equals InterReciprocal ( Length ( LINESEGMENT: F ) )",
    "id": 1944,
    "declarations": "-58: NUMBER; F: LINESEGMENT",
    "facts": "InterReciprocal(-58) = InterReciprocal(Length(F))"
},
{
    "assertion": "Length ( LINESEGMENT: u ) equals FocalLength ( CONICSECTION: o )",
    "id": 1945,
    "declarations": "u: LINESEGMENT; o: CONICSECTION",
    "facts": "Length(u) = FocalLength(o)"
},
{
    "assertion": "RightPart ( HYPERBOLA: L ) equals CURVE: R",
    "id": 1946,
    "declarations": "L: HYPERBOLA; R: CURVE",
    "facts": "RightPart(L) = R"
},
{
    "assertion": "ApplyUnit ( DotProduct ( VECTOR: f, VECTOR: k ), DEGREESTR: degree )",
    "id": 1947,
    "declarations": "f: VECTOR; k: VECTOR; degree: DEGREESTR",
    "facts": "ApplyUnit(DotProduct(f, k), degree) = None"
},
{
    "assertion": "Locus ( Incenter ( TRIANGLE: l ) ) equals CURVE: j",
    "id": 1948,
    "declarations": "l: TRIANGLE; j: CURVE",
    "facts": "Locus(Incenter(l)) = j"
},
{
    "assertion": "IsIntersect ( CURVE: e, LeftPart ( HYPERBOLA: e ) ) equals BOOL: True",
    "id": 1949,
    "declarations": "e: CURVE; e: HYPERBOLA; True: BOOL",
    "facts": "IsIntersect(e, LeftPart(e)) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: M ) equals LINE: T",
    "id": 1950,
    "declarations": "M: CONICSECTION; T: LINE",
    "facts": "RightDirectrix(M) = T"
},
{
    "assertion": "Quadrant ( LowerFocus ( CONICSECTION: i ) ) equals Slope ( LINE: U )",
    "id": 1951,
    "declarations": "i: CONICSECTION; U: LINE",
    "facts": "Quadrant(LowerFocus(i)) = Slope(U)"
},
{
    "assertion": "InterReciprocal ( NUMBER: -65 ) equals Quadrant ( UpperVertex ( CONICSECTION: C ) )",
    "id": 1952,
    "declarations": "-65: NUMBER; C: CONICSECTION",
    "facts": "InterReciprocal(-65) = Quadrant(UpperVertex(C))"
},
{
    "assertion": "LineSegmentOf ( Center ( CONICSECTION: T ), POINT: g ) equals ImaginaryAxis ( ELLIPSE: D )",
    "id": 1953,
    "declarations": "T: CONICSECTION; g: POINT; D: ELLIPSE",
    "facts": "LineSegmentOf(Center(T), g) = ImaginaryAxis(D)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: K ) equals NUMBER: -81",
    "id": 1954,
    "declarations": "K: CONICSECTION; -81: NUMBER",
    "facts": "HalfFocalLength(K) = -81"
},
{
    "assertion": "Incenter ( TRIANGLE: N ) equals POINT: u",
    "id": 1955,
    "declarations": "N: TRIANGLE; u: POINT",
    "facts": "Incenter(N) = u"
},
{
    "assertion": "Inclination ( TangentOfPoint ( LeftVertex ( CONICSECTION: m ), CURVE: U ) ) equals Min ( Perimeter ( CONICSECTION: d ) )",
    "id": 1956,
    "declarations": "m: CONICSECTION; U: CURVE; d: CONICSECTION",
    "facts": "Inclination(TangentOfPoint(LeftVertex(m), U)) = Min(Perimeter(d))"
},
{
    "assertion": "RealAxis ( ELLIPSE: d ) equals LINESEGMENT: f",
    "id": 1957,
    "declarations": "d: ELLIPSE; f: LINESEGMENT",
    "facts": "RealAxis(d) = f"
},
{
    "assertion": "Area ( CONICSECTION: u ) equals NUMBER: 42",
    "id": 1958,
    "declarations": "u: CONICSECTION; 42: NUMBER",
    "facts": "Area(u) = 42"
},
{
    "assertion": "DotProduct ( VECTOR: V, VECTOR: h ) equals Inclination ( LINE: b )",
    "id": 1959,
    "declarations": "V: VECTOR; h: VECTOR; b: LINE",
    "facts": "DotProduct(V, h) = Inclination(b)"
},
{
    "assertion": "Max ( DotProduct ( VECTOR: a, VECTOR: W ) ) equals NUMBER: -17",
    "id": 1960,
    "declarations": "a: VECTOR; W: VECTOR; -17: NUMBER",
    "facts": "Max(DotProduct(a, W)) = -17"
},
{
    "assertion": "MidPoint ( MinorAxis ( ELLIPSE: p ) ) equals POINT: d",
    "id": 1961,
    "declarations": "p: ELLIPSE; d: POINT",
    "facts": "MidPoint(MinorAxis(p)) = d"
},
{
    "assertion": "Vertex ( CONICSECTION: M ) equals RightVertex ( CONICSECTION: U )",
    "id": 1962,
    "declarations": "M: CONICSECTION; U: CONICSECTION",
    "facts": "Vertex(M) = RightVertex(U)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: P ) equals RightDirectrix ( CONICSECTION: c )",
    "id": 1963,
    "declarations": "P: CONICSECTION; c: CONICSECTION",
    "facts": "RightDirectrix(P) = RightDirectrix(c)"
},
{
    "assertion": "LineOf ( POINT: m, POINT: i ) equals LINE: W",
    "id": 1964,
    "declarations": "m: POINT; i: POINT; W: LINE",
    "facts": "LineOf(m, i) = W"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: V ) equals LINE: d",
    "id": 1965,
    "declarations": "V: CONICSECTION; d: LINE",
    "facts": "LeftDirectrix(V) = d"
},
{
    "assertion": "Perimeter ( CONICSECTION: s ) equals Length ( LINESEGMENT: i )",
    "id": 1966,
    "declarations": "s: CONICSECTION; i: LINESEGMENT",
    "facts": "Perimeter(s) = Length(i)"
},
{
    "assertion": "AngleOf ( POINT: r, POINT: w, POINT: q ) equals ApplyUnit ( NUMBER: 27, DEGREESTR: degree )",
    "id": 1967,
    "declarations": "r: POINT; w: POINT; q: POINT; 27: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(r, w, q) = ApplyUnit(27, degree)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: x ) equals LINE: e",
    "id": 1968,
    "declarations": "x: HYPERBOLA; e: LINE",
    "facts": "Asymptote(x) = e"
},
{
    "assertion": "MajorAxis ( ELLIPSE: f ) equals LINESEGMENT: n",
    "id": 1969,
    "declarations": "f: ELLIPSE; n: LINESEGMENT",
    "facts": "MajorAxis(f) = n"
},
{
    "assertion": "LineSegmentOf ( POINT: H, LowerVertex ( CONICSECTION: S ) ) equals LINESEGMENT: t",
    "id": 1970,
    "declarations": "H: POINT; S: CONICSECTION; t: LINESEGMENT",
    "facts": "LineSegmentOf(H, LowerVertex(S)) = t"
},
{
    "assertion": "UpperVertex ( CONICSECTION: g ) equals POINT: K",
    "id": 1971,
    "declarations": "g: CONICSECTION; K: POINT",
    "facts": "UpperVertex(g) = K"
},
{
    "assertion": "LeftPart ( HYPERBOLA: b ) equals CURVE: y",
    "id": 1972,
    "declarations": "b: HYPERBOLA; y: CURVE",
    "facts": "LeftPart(b) = y"
},
{
    "assertion": "Asymptote ( HYPERBOLA: p ) equals LINE: D",
    "id": 1973,
    "declarations": "p: HYPERBOLA; D: LINE",
    "facts": "Asymptote(p) = D"
},
{
    "assertion": "InterceptChord ( LINE: L, CONICSECTION: i ) equals ImaginaryAxis ( ELLIPSE: l )",
    "id": 1974,
    "declarations": "L: LINE; i: CONICSECTION; l: ELLIPSE",
    "facts": "InterceptChord(L, i) = ImaginaryAxis(l)"
},
{
    "assertion": "PointOnCurve ( UpperFocus ( CONICSECTION: C ), CURVE: z ) equals BOOL: True",
    "id": 1975,
    "declarations": "C: CONICSECTION; z: CURVE; True: BOOL",
    "facts": "PointOnCurve(UpperFocus(C), z) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: w ) equals POINT: v",
    "id": 1976,
    "declarations": "w: CONICSECTION; v: POINT",
    "facts": "LeftFocus(w) = v"
},
{
    "assertion": "Circumcenter ( TRIANGLE: e ) equals Projection ( UpperFocus ( CONICSECTION: I ), LINE: j )",
    "id": 1977,
    "declarations": "e: TRIANGLE; I: CONICSECTION; j: LINE",
    "facts": "Circumcenter(e) = Projection(UpperFocus(I), j)"
},
{
    "assertion": "Intersection ( LeftPart ( HYPERBOLA: o ), CURVE: M ) equals Incenter ( TRIANGLE: l )",
    "id": 1978,
    "declarations": "o: HYPERBOLA; M: CURVE; l: TRIANGLE",
    "facts": "Intersection(LeftPart(o), M) = Incenter(l)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: N ) equals CIRCLE: L",
    "id": 1979,
    "declarations": "N: TRIANGLE; L: CIRCLE",
    "facts": "CircumCircle(N) = L"
},
{
    "assertion": "FootPoint ( LINE: m, LINE: Y ) equals UpperVertex ( CONICSECTION: f )",
    "id": 1980,
    "declarations": "m: LINE; Y: LINE; f: CONICSECTION",
    "facts": "FootPoint(m, Y) = UpperVertex(f)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: w ) equals LINE: j",
    "id": 1981,
    "declarations": "w: HYPERBOLA; j: LINE",
    "facts": "Asymptote(w) = j"
},
{
    "assertion": "VectorOf ( POINT: z, MidPoint ( LINESEGMENT: X ) ) equals VectorOf ( RightFocus ( CONICSECTION: i ), MidPoint ( LINESEGMENT: H ) )",
    "id": 1982,
    "declarations": "z: POINT; X: LINESEGMENT; i: CONICSECTION; H: LINESEGMENT",
    "facts": "VectorOf(z, MidPoint(X)) = VectorOf(RightFocus(i), MidPoint(H))"
},
{
    "assertion": "LineOf ( Circumcenter ( TRIANGLE: a ), POINT: C ) equals PerpendicularBisector ( LINESEGMENT: k )",
    "id": 1983,
    "declarations": "a: TRIANGLE; C: POINT; k: LINESEGMENT",
    "facts": "LineOf(Circumcenter(a), C) = PerpendicularBisector(k)"
},
{
    "assertion": "Projection ( RightFocus ( CONICSECTION: X ), LINE: w ) equals UpperFocus ( CONICSECTION: S )",
    "id": 1984,
    "declarations": "X: CONICSECTION; w: LINE; S: CONICSECTION",
    "facts": "Projection(RightFocus(X), w) = UpperFocus(S)"
},
{
    "assertion": "TriangleOf ( UpperVertex ( CONICSECTION: T ), RightFocus ( CONICSECTION: S ), RightVertex ( CONICSECTION: s ) ) equals TRIANGLE: d",
    "id": 1985,
    "declarations": "T: CONICSECTION; S: CONICSECTION; s: CONICSECTION; d: TRIANGLE",
    "facts": "TriangleOf(UpperVertex(T), RightFocus(S), RightVertex(s)) = d"
},
{
    "assertion": "TangentOnPoint ( POINT: J, CURVE: H ) equals LINE: Q",
    "id": 1986,
    "declarations": "J: POINT; H: CURVE; Q: LINE",
    "facts": "TangentOnPoint(J, H) = Q"
},
{
    "assertion": "MinorAxis ( ELLIPSE: x ) equals LINESEGMENT: Q",
    "id": 1987,
    "declarations": "x: ELLIPSE; Q: LINESEGMENT",
    "facts": "MinorAxis(x) = Q"
},
{
    "assertion": "LineSegmentOf ( LowerFocus ( CONICSECTION: B ), FootPoint ( LINE: X, TangentOfPoint ( LowerVertex ( CONICSECTION: S ), CURVE: H ) ) ) equals LINESEGMENT: U",
    "id": 1989,
    "declarations": "B: CONICSECTION; X: LINE; S: CONICSECTION; H: CURVE; U: LINESEGMENT",
    "facts": "LineSegmentOf(LowerFocus(B), FootPoint(X, TangentOfPoint(LowerVertex(S), H))) = U"
},
{
    "assertion": "CircumCircle ( TRIANGLE: A ) equals CIRCLE: g",
    "id": 1990,
    "declarations": "A: TRIANGLE; g: CIRCLE",
    "facts": "CircumCircle(A) = g"
},
{
    "assertion": "LeftFocus ( CONICSECTION: h ) equals Center ( CONICSECTION: L )",
    "id": 1991,
    "declarations": "h: CONICSECTION; L: CONICSECTION",
    "facts": "LeftFocus(h) = Center(L)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: T ) equals LINESEGMENT: t",
    "id": 1992,
    "declarations": "T: ELLIPSE; t: LINESEGMENT",
    "facts": "MinorAxis(T) = t"
},
{
    "assertion": "CircumCircle ( TRIANGLE: l ) equals CIRCLE: b",
    "id": 1993,
    "declarations": "l: TRIANGLE; b: CIRCLE",
    "facts": "CircumCircle(l) = b"
},
{
    "assertion": "IsTangent ( LINE: a, CONICSECTION: C ) equals BOOL: True",
    "id": 1994,
    "declarations": "a: LINE; C: CONICSECTION; True: BOOL",
    "facts": "IsTangent(a, C) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: n ) equals POINT: U",
    "id": 1995,
    "declarations": "n: TRIANGLE; U: POINT",
    "facts": "Incenter(n) = U"
},
{
    "assertion": "Endpoint ( LINESEGMENT: S ) equals LowerFocus ( CONICSECTION: o )",
    "id": 1996,
    "declarations": "S: LINESEGMENT; o: CONICSECTION",
    "facts": "Endpoint(S) = LowerFocus(o)"
},
{
    "assertion": "Length ( LINESEGMENT: e ) equals NUMBER: 49",
    "id": 1997,
    "declarations": "e: LINESEGMENT; 49: NUMBER",
    "facts": "Length(e) = 49"
},
{
    "assertion": "ApplyUnit ( NUMBER: 43, DEGREESTR: degree )",
    "id": 1998,
    "declarations": "43: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(43, degree) = None"
},
{
    "assertion": "Directrix ( CONICSECTION: B ) equals LINE: c",
    "id": 1999,
    "declarations": "B: CONICSECTION; c: LINE",
    "facts": "Directrix(B) = c"
},
{
    "assertion": "LineOf ( POINT: h, POINT: J ) equals LINE: n",
    "id": 2000,
    "declarations": "h: POINT; J: POINT; n: LINE",
    "facts": "LineOf(h, J) = n"
},
{
    "assertion": "sqrt ( NUMBER: 5 ) equals InterReciprocal ( FocalLength ( CONICSECTION: g ) )",
    "id": 2001,
    "declarations": "5: NUMBER; g: CONICSECTION",
    "facts": "sqrt(5) = InterReciprocal(FocalLength(g))"
},
{
    "assertion": "IsChordOf ( ImaginaryAxis ( ELLIPSE: h ), CONICSECTION: f ) equals BOOL: False",
    "id": 2002,
    "declarations": "h: ELLIPSE; f: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(ImaginaryAxis(h), f) = False"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: f ) equals Slope ( LINE: r )",
    "id": 2003,
    "declarations": "f: CONICSECTION; r: LINE",
    "facts": "HalfFocalLength(f) = Slope(r)"
},
{
    "assertion": "Max ( NUMBER: 35 ) equals XCoordinate ( RightFocus ( CONICSECTION: b ) )",
    "id": 2004,
    "declarations": "35: NUMBER; b: CONICSECTION",
    "facts": "Max(35) = XCoordinate(RightFocus(b))"
},
{
    "assertion": "Negation ( UpperFocus ( CONICSECTION: X ) equals Center ( CONICSECTION: Y ) ) equals BOOL: True",
    "id": 2005,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftVertex ( CONICSECTION: A ) equals POINT: v",
    "id": 2006,
    "declarations": "A: CONICSECTION; v: POINT",
    "facts": "LeftVertex(A) = v"
},
{
    "assertion": "Orthocenter ( TRIANGLE: F ) equals RightVertex ( CONICSECTION: i )",
    "id": 2007,
    "declarations": "F: TRIANGLE; i: CONICSECTION",
    "facts": "Orthocenter(F) = RightVertex(i)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: m ) equals NUMBER: -26",
    "id": 2008,
    "declarations": "m: CONICSECTION; -26: NUMBER",
    "facts": "Eccentricity(m) = -26"
},
{
    "assertion": "sqrt ( HalfFocalLength ( CONICSECTION: r ) ) equals Min ( NUMBER: 17 )",
    "id": 2009,
    "declarations": "r: CONICSECTION; 17: NUMBER",
    "facts": "sqrt(HalfFocalLength(r)) = Min(17)"
},
{
    "assertion": "Min ( lg ( Eccentricity ( CONICSECTION: W ) ) ) equals NUMBER: -33",
    "id": 2010,
    "declarations": "W: CONICSECTION; -33: NUMBER",
    "facts": "Min(lg(Eccentricity(W))) = -33"
},
{
    "assertion": "LeftVertex ( CONICSECTION: D ) equals POINT: t",
    "id": 2011,
    "declarations": "D: CONICSECTION; t: POINT",
    "facts": "LeftVertex(D) = t"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: Z, CIRCLE: g ) equals BOOL: False",
    "id": 2012,
    "declarations": "Z: LINESEGMENT; g: CIRCLE; False: BOOL",
    "facts": "IsDiameter(Z, g) = False"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: D ) equals AXIS: xAxis",
    "id": 2013,
    "declarations": "D: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(D) = xAxis"
},
{
    "assertion": "Radius ( CIRCLE: q ) equals NUMBER: 96",
    "id": 2014,
    "declarations": "q: CIRCLE; 96: NUMBER",
    "facts": "Radius(q) = 96"
},
{
    "assertion": "ApplyUnit ( FocalLength ( CONICSECTION: J ), DEGREESTR: degree )",
    "id": 2015,
    "declarations": "J: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(FocalLength(J), degree) = None"
},
{
    "assertion": "Incenter ( TRIANGLE: N ) equals UpperFocus ( CONICSECTION: g )",
    "id": 2016,
    "declarations": "N: TRIANGLE; g: CONICSECTION",
    "facts": "Incenter(N) = UpperFocus(g)"
},
{
    "assertion": "RightFocus ( CONICSECTION: Q ) equals LowerVertex ( CONICSECTION: r )",
    "id": 2017,
    "declarations": "Q: CONICSECTION; r: CONICSECTION",
    "facts": "RightFocus(Q) = LowerVertex(r)"
},
{
    "assertion": "Quadrant ( Incenter ( TRIANGLE: K ) ) equals NUMBER: 85",
    "id": 2018,
    "declarations": "K: TRIANGLE; 85: NUMBER",
    "facts": "Quadrant(Incenter(K)) = 85"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: J ) equals LINESEGMENT: Y",
    "id": 2019,
    "declarations": "J: ELLIPSE; Y: LINESEGMENT",
    "facts": "ImaginaryAxis(J) = Y"
},
{
    "assertion": "sqrt ( HalfFocalLength ( CONICSECTION: P ) ) equals NUMBER: -54",
    "id": 2020,
    "declarations": "P: CONICSECTION; -54: NUMBER",
    "facts": "sqrt(HalfFocalLength(P)) = -54"
},
{
    "assertion": "Expression ( CURVE: z ) equals LocusEquation ( LowerVertex ( CONICSECTION: W ) )",
    "id": 2021,
    "declarations": "z: CURVE; W: CONICSECTION",
    "facts": "Expression(z) = LocusEquation(LowerVertex(W))"
},
{
    "assertion": "ApplyUnit ( NUMBER: 75, DEGREESTR: degree )",
    "id": 2022,
    "declarations": "75: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(75, degree) = None"
},
{
    "assertion": "Quadrant ( LowerFocus ( CONICSECTION: d ) ) equals Inclination ( LINE: V )",
    "id": 2023,
    "declarations": "d: CONICSECTION; V: LINE",
    "facts": "Quadrant(LowerFocus(d)) = Inclination(V)"
},
{
    "assertion": "Quadrant ( POINT: k ) equals Perimeter ( CONICSECTION: j )",
    "id": 2024,
    "declarations": "k: POINT; j: CONICSECTION",
    "facts": "Quadrant(k) = Perimeter(j)"
},
{
    "assertion": "Expression ( CURVE: l ) equals EXPRESSION: x*space+*spacey^2*space=*space4",
    "id": 2025,
    "declarations": "l: CURVE; x*space+*spacey^2*space=*space4: EXPRESSION",
    "facts": "Expression(l) = x*space+*spacey^2*space=*space4"
},
{
    "assertion": "Locus ( LeftVertex ( CONICSECTION: Y ) ) equals CURVE: C",
    "id": 2026,
    "declarations": "Y: CONICSECTION; C: CURVE",
    "facts": "Locus(LeftVertex(Y)) = C"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: S, TRIANGLE: Y ) equals BOOL: False",
    "id": 2027,
    "declarations": "S: CIRCLE; Y: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(S, Y) = False"
},
{
    "assertion": "Radius ( CIRCLE: U ) equals NUMBER: 48",
    "id": 2028,
    "declarations": "U: CIRCLE; 48: NUMBER",
    "facts": "Radius(U) = 48"
},
{
    "assertion": "MajorAxis ( ELLIPSE: l ) equals LINESEGMENT: n",
    "id": 2029,
    "declarations": "l: ELLIPSE; n: LINESEGMENT",
    "facts": "MajorAxis(l) = n"
},
{
    "assertion": "LeftPart ( HYPERBOLA: e ) equals CURVE: U",
    "id": 2030,
    "declarations": "e: HYPERBOLA; U: CURVE",
    "facts": "LeftPart(e) = U"
},
{
    "assertion": "IsOutTangent ( CIRCLE: k, CIRCLE: u ) equals BOOL: False",
    "id": 2031,
    "declarations": "k: CIRCLE; u: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(k, u) = False"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: n ) equals LINESEGMENT: v",
    "id": 2032,
    "declarations": "n: ELLIPSE; v: LINESEGMENT",
    "facts": "ImaginaryAxis(n) = v"
},
{
    "assertion": "Asymptote ( HYPERBOLA: e ) equals LINE: e",
    "id": 2033,
    "declarations": "e: HYPERBOLA; e: LINE",
    "facts": "Asymptote(e) = e"
},
{
    "assertion": "Intercept ( LINE: G, AXIS: yAxis ) equals NUMBER: -39",
    "id": 2034,
    "declarations": "G: LINE; yAxis: AXIS; -39: NUMBER",
    "facts": "Intercept(G, yAxis) = -39"
},
{
    "assertion": "RightFocus ( CONICSECTION: Y ) equals POINT: A",
    "id": 2035,
    "declarations": "Y: CONICSECTION; A: POINT",
    "facts": "RightFocus(Y) = A"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: N, TRIANGLE: B ) equals BOOL: True",
    "id": 2036,
    "declarations": "N: CIRCLE; B: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(N, B) = True"
},
{
    "assertion": "IsIntersect ( CURVE: n, CURVE: k ) equals BOOL: True",
    "id": 2037,
    "declarations": "n: CURVE; k: CURVE; True: BOOL",
    "facts": "IsIntersect(n, k) = True"
},
{
    "assertion": "Radius ( CIRCLE: I ) equals NUMBER: 55",
    "id": 2038,
    "declarations": "I: CIRCLE; 55: NUMBER",
    "facts": "Radius(I) = 55"
},
{
    "assertion": "RightPart ( HYPERBOLA: T ) equals CURVE: s",
    "id": 2039,
    "declarations": "T: HYPERBOLA; s: CURVE",
    "facts": "RightPart(T) = s"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: n ) equals OverlappingLine ( LINESEGMENT: K )",
    "id": 2040,
    "declarations": "n: CONICSECTION; K: LINESEGMENT",
    "facts": "RightDirectrix(n) = OverlappingLine(K)"
},
{
    "assertion": "sqrt ( Slope ( LINE: P ) ) equals Radius ( CircumCircle ( TRIANGLE: n ) )",
    "id": 2041,
    "declarations": "P: LINE; n: TRIANGLE",
    "facts": "sqrt(Slope(P)) = Radius(CircumCircle(n))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: j ) equals LINE: i",
    "id": 2042,
    "declarations": "j: HYPERBOLA; i: LINE",
    "facts": "Asymptote(j) = i"
},
{
    "assertion": "Max ( NUMBER: 42 ) equals NUMBER: -52",
    "id": 2043,
    "declarations": "42: NUMBER; -52: NUMBER",
    "facts": "Max(42) = -52"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: E, TRIANGLE: b ) equals BOOL: False",
    "id": 2044,
    "declarations": "E: CIRCLE; b: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(E, b) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: r ) equals POINT: t",
    "id": 2045,
    "declarations": "r: CONICSECTION; t: POINT",
    "facts": "LowerVertex(r) = t"
},
{
    "assertion": "RightPart ( HYPERBOLA: G ) equals CURVE: N",
    "id": 2046,
    "declarations": "G: HYPERBOLA; N: CURVE",
    "facts": "RightPart(G) = N"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: y ) ) equals POINT: d",
    "id": 2047,
    "declarations": "y: ELLIPSE; d: POINT",
    "facts": "MidPoint(MajorAxis(y)) = d"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( LINESEGMENT: f ) ) equals InterReciprocal ( XCoordinate ( Projection ( POINT: V, TangentOfPoint ( RightVertex ( CONICSECTION: X ), LeftPart ( HYPERBOLA: I ) ) ) ) )",
    "id": 2048,
    "declarations": "f: LINESEGMENT; V: POINT; X: CONICSECTION; I: HYPERBOLA",
    "facts": "Inclination(PerpendicularBisector(f)) = InterReciprocal(XCoordinate(Projection(V, TangentOfPoint(RightVertex(X), LeftPart(I)))))"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: h ) ) equals RightDirectrix ( CONICSECTION: G )",
    "id": 2049,
    "declarations": "h: ELLIPSE; G: CONICSECTION",
    "facts": "PerpendicularBisector(ImaginaryAxis(h)) = RightDirectrix(G)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: j ) equals LINESEGMENT: m",
    "id": 2050,
    "declarations": "j: ELLIPSE; m: LINESEGMENT",
    "facts": "MajorAxis(j) = m"
},
{
    "assertion": "LeftFocus ( CONICSECTION: M ) equals LowerVertex ( CONICSECTION: y )",
    "id": 2051,
    "declarations": "M: CONICSECTION; y: CONICSECTION",
    "facts": "LeftFocus(M) = LowerVertex(y)"
},
{
    "assertion": "Slope ( LINE: y ) equals NUMBER: 68",
    "id": 2052,
    "declarations": "y: LINE; 68: NUMBER",
    "facts": "Slope(y) = 68"
},
{
    "assertion": "TangentOnPoint ( LowerFocus ( CONICSECTION: f ), Locus ( LeftFocus ( CONICSECTION: e ) ) ) equals LINE: H",
    "id": 2053,
    "declarations": "f: CONICSECTION; e: CONICSECTION; H: LINE",
    "facts": "TangentOnPoint(LowerFocus(f), Locus(LeftFocus(e))) = H"
},
{
    "assertion": "InterReciprocal ( Abs ( MinorAxis ( ELLIPSE: v ) ) ) equals Perimeter ( CONICSECTION: H )",
    "id": 2054,
    "declarations": "v: ELLIPSE; H: CONICSECTION",
    "facts": "InterReciprocal(Abs(MinorAxis(v))) = Perimeter(H)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: p, CIRCLE: g ) equals BOOL: True",
    "id": 2055,
    "declarations": "p: LINESEGMENT; g: CIRCLE; True: BOOL",
    "facts": "IsDiameter(p, g) = True"
},
{
    "assertion": "IsOutTangent ( CIRCLE: r, CircumCircle ( TRIANGLE: V ) ) equals BOOL: False",
    "id": 2056,
    "declarations": "r: CIRCLE; V: TRIANGLE; False: BOOL",
    "facts": "IsOutTangent(r, CircumCircle(V)) = False"
},
{
    "assertion": "Orthocenter ( TRIANGLE: b ) equals MidPoint ( LINESEGMENT: B )",
    "id": 2057,
    "declarations": "b: TRIANGLE; B: LINESEGMENT",
    "facts": "Orthocenter(b) = MidPoint(B)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: g ) equals POINT: A",
    "id": 2058,
    "declarations": "g: CONICSECTION; A: POINT",
    "facts": "LeftFocus(g) = A"
},
{
    "assertion": "Orthocenter ( TRIANGLE: W ) equals POINT: H",
    "id": 2059,
    "declarations": "W: TRIANGLE; H: POINT",
    "facts": "Orthocenter(W) = H"
},
{
    "assertion": "IsOutTangent ( CIRCLE: x, CIRCLE: D ) equals BOOL: True",
    "id": 2060,
    "declarations": "x: CIRCLE; D: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(x, D) = True"
},
{
    "assertion": "LowerVertex ( CONICSECTION: W ) equals POINT: K",
    "id": 2061,
    "declarations": "W: CONICSECTION; K: POINT",
    "facts": "LowerVertex(W) = K"
},
{
    "assertion": "TangentOfPoint ( Circumcenter ( TRIANGLE: Z ), CURVE: n ) equals LINE: i",
    "id": 2062,
    "declarations": "Z: TRIANGLE; n: CURVE; i: LINE",
    "facts": "TangentOfPoint(Circumcenter(Z), n) = i"
},
{
    "assertion": "XCoordinate ( POINT: b ) equals NUMBER: 82",
    "id": 2063,
    "declarations": "b: POINT; 82: NUMBER",
    "facts": "XCoordinate(b) = 82"
},
{
    "assertion": "Slope ( LINE: m ) equals Eccentricity ( CONICSECTION: a )",
    "id": 2064,
    "declarations": "m: LINE; a: CONICSECTION",
    "facts": "Slope(m) = Eccentricity(a)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: Q ) equals LINE: E",
    "id": 2065,
    "declarations": "Q: LINESEGMENT; E: LINE",
    "facts": "PerpendicularBisector(Q) = E"
},
{
    "assertion": "MidPoint ( RealAxis ( ELLIPSE: N ) ) equals Orthocenter ( TRIANGLE: S )",
    "id": 2066,
    "declarations": "N: ELLIPSE; S: TRIANGLE",
    "facts": "MidPoint(RealAxis(N)) = Orthocenter(S)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: R ) equals Circumcenter ( TRIANGLE: Z )",
    "id": 2067,
    "declarations": "R: CONICSECTION; Z: TRIANGLE",
    "facts": "LeftVertex(R) = Circumcenter(Z)"
},
{
    "assertion": "Intersection ( CURVE: T, CURVE: Z ) equals POINT: N",
    "id": 2068,
    "declarations": "T: CURVE; Z: CURVE; N: POINT",
    "facts": "Intersection(T, Z) = N"
},
{
    "assertion": "LocusEquation ( Center ( CONICSECTION: v ) ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 2069,
    "declarations": "v: CONICSECTION; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "LocusEquation(Center(v)) = x*space+*spacey*space=*space5"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: U, CIRCLE: Y ) equals BOOL: False",
    "id": 2070,
    "declarations": "U: LINESEGMENT; Y: CIRCLE; False: BOOL",
    "facts": "IsDiameter(U, Y) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: d ) equals Center ( CONICSECTION: F )",
    "id": 2071,
    "declarations": "d: CONICSECTION; F: CONICSECTION",
    "facts": "Vertex(d) = Center(F)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: l ) equals MinorAxis ( ELLIPSE: k )",
    "id": 2072,
    "declarations": "l: ELLIPSE; k: ELLIPSE",
    "facts": "ImaginaryAxis(l) = MinorAxis(k)"
},
{
    "assertion": "TangentPoint ( LINE: k, CIRCLE: x ) equals POINT: J",
    "id": 2073,
    "declarations": "k: LINE; x: CIRCLE; J: POINT",
    "facts": "TangentPoint(k, x) = J"
},
{
    "assertion": "Quadrant ( LowerVertex ( CONICSECTION: S ) ) equals NumIntersection ( LeftPart ( HYPERBOLA: O ), RightPart ( HYPERBOLA: p ) )",
    "id": 2074,
    "declarations": "S: CONICSECTION; O: HYPERBOLA; p: HYPERBOLA",
    "facts": "Quadrant(LowerVertex(S)) = NumIntersection(LeftPart(O), RightPart(p))"
},
{
    "assertion": "Length ( ImaginaryAxis ( ELLIPSE: w ) ) equals Length ( LINESEGMENT: l )",
    "id": 2075,
    "declarations": "w: ELLIPSE; l: LINESEGMENT",
    "facts": "Length(ImaginaryAxis(w)) = Length(l)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: W ) equals NUMBER: -92",
    "id": 2076,
    "declarations": "W: CONICSECTION; -92: NUMBER",
    "facts": "Eccentricity(W) = -92"
},
{
    "assertion": "IsIntersect ( CURVE: f, RightPart ( HYPERBOLA: z ) ) equals BOOL: False",
    "id": 2077,
    "declarations": "f: CURVE; z: HYPERBOLA; False: BOOL",
    "facts": "IsIntersect(f, RightPart(z)) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: P ) equals POINT: O",
    "id": 2078,
    "declarations": "P: CONICSECTION; O: POINT",
    "facts": "Vertex(P) = O"
},
{
    "assertion": "Max ( YCoordinate ( POINT: E ) ) equals NUMBER: 5",
    "id": 2079,
    "declarations": "E: POINT; 5: NUMBER",
    "facts": "Max(YCoordinate(E)) = 5"
},
{
    "assertion": "Slope ( LINE: A ) equals NUMBER: -85",
    "id": 2080,
    "declarations": "A: LINE; -85: NUMBER",
    "facts": "Slope(A) = -85"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: N, TRIANGLE: d ) equals BOOL: True",
    "id": 2081,
    "declarations": "N: CIRCLE; d: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(N, d) = True"
},
{
    "assertion": "LowerFocus ( CONICSECTION: j ) equals Incenter ( TRIANGLE: m )",
    "id": 2082,
    "declarations": "j: CONICSECTION; m: TRIANGLE",
    "facts": "LowerFocus(j) = Incenter(m)"
},
{
    "assertion": "RealAxis ( ELLIPSE: O ) equals LINESEGMENT: n",
    "id": 2083,
    "declarations": "O: ELLIPSE; n: LINESEGMENT",
    "facts": "RealAxis(O) = n"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: y, TRIANGLE: n ) equals BOOL: True",
    "id": 2084,
    "declarations": "y: CIRCLE; n: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(y, n) = True"
},
{
    "assertion": "And ( Vertex ( CONICSECTION: y ) equals RightFocus ( CONICSECTION: J ), Negation ( MinorAxis ( ELLIPSE: d ) equals LINESEGMENT: H ) equals BOOL: True ) equals BOOL: False",
    "id": 2085,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MinorAxis ( ELLIPSE: G ) equals LINESEGMENT: L",
    "id": 2086,
    "declarations": "G: ELLIPSE; L: LINESEGMENT",
    "facts": "MinorAxis(G) = L"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: I ) equals Min ( YCoordinate ( LeftFocus ( CONICSECTION: e ) ) )",
    "id": 2087,
    "declarations": "I: CONICSECTION; e: CONICSECTION",
    "facts": "HalfFocalLength(I) = Min(YCoordinate(LeftFocus(e)))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Y ) equals RightVertex ( CONICSECTION: o )",
    "id": 2088,
    "declarations": "Y: TRIANGLE; o: CONICSECTION",
    "facts": "Orthocenter(Y) = RightVertex(o)"
},
{
    "assertion": "NumIntersection ( CURVE: T, CURVE: m ) equals NUMBER: 71",
    "id": 2089,
    "declarations": "T: CURVE; m: CURVE; 71: NUMBER",
    "facts": "NumIntersection(T, m) = 71"
},
{
    "assertion": "And ( Slope ( LINE: p ) equals DotProduct ( VECTOR: X, VECTOR: N ), RealAxis ( ELLIPSE: u ) equals LINESEGMENT: E ) equals BOOL: True",
    "id": 2090,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: z ) equals LINE: w",
    "id": 2091,
    "declarations": "z: CONICSECTION; w: LINE",
    "facts": "LeftDirectrix(z) = w"
},
{
    "assertion": "Orthocenter ( TRIANGLE: g ) equals POINT: P",
    "id": 2092,
    "declarations": "g: TRIANGLE; P: POINT",
    "facts": "Orthocenter(g) = P"
},
{
    "assertion": "lg ( NUMBER: 43 ) equals Diameter ( CIRCLE: F )",
    "id": 2093,
    "declarations": "43: NUMBER; F: CIRCLE",
    "facts": "lg(43) = Diameter(F)"
},
{
    "assertion": "Radius ( CIRCLE: b ) equals HalfFocalLength ( CONICSECTION: u )",
    "id": 2094,
    "declarations": "b: CIRCLE; u: CONICSECTION",
    "facts": "Radius(b) = HalfFocalLength(u)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: z ) equals POINT: g",
    "id": 2095,
    "declarations": "z: LINESEGMENT; g: POINT",
    "facts": "MidPoint(z) = g"
},
{
    "assertion": "LineOf ( Orthocenter ( TRIANGLE: d ), UpperFocus ( CONICSECTION: q ) ) equals LINE: u",
    "id": 2096,
    "declarations": "d: TRIANGLE; q: CONICSECTION; u: LINE",
    "facts": "LineOf(Orthocenter(d), UpperFocus(q)) = u"
},
{
    "assertion": "MajorAxis ( ELLIPSE: F ) equals MajorAxis ( ELLIPSE: J )",
    "id": 2097,
    "declarations": "F: ELLIPSE; J: ELLIPSE",
    "facts": "MajorAxis(F) = MajorAxis(J)"
},
{
    "assertion": "Expression ( CURVE: D ) equals EXPRESSION: x^2*space+*spacey*space=*space10",
    "id": 2098,
    "declarations": "D: CURVE; x^2*space+*spacey*space=*space10: EXPRESSION",
    "facts": "Expression(D) = x^2*space+*spacey*space=*space10"
},
{
    "assertion": "CircumCircle ( TriangleOf ( POINT: l, POINT: i, POINT: Q ) ) equals CIRCLE: e",
    "id": 2099,
    "declarations": "l: POINT; i: POINT; Q: POINT; e: CIRCLE",
    "facts": "CircumCircle(TriangleOf(l, i, Q)) = e"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: e, TRIANGLE: v ) equals BOOL: False",
    "id": 2100,
    "declarations": "e: CIRCLE; v: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(e, v) = False"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: z ) equals LINE: c",
    "id": 2101,
    "declarations": "z: LINESEGMENT; c: LINE",
    "facts": "PerpendicularBisector(z) = c"
},
{
    "assertion": "LocusEquation ( Orthocenter ( TRIANGLE: K ) ) equals Expression ( CURVE: a )",
    "id": 2102,
    "declarations": "K: TRIANGLE; a: CURVE",
    "facts": "LocusEquation(Orthocenter(K)) = Expression(a)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Z ) equals POINT: o",
    "id": 2103,
    "declarations": "Z: CONICSECTION; o: POINT",
    "facts": "LeftFocus(Z) = o"
},
{
    "assertion": "Endpoint ( LINESEGMENT: r ) equals POINT: X",
    "id": 2104,
    "declarations": "r: LINESEGMENT; X: POINT",
    "facts": "Endpoint(r) = X"
},
{
    "assertion": "FocalLength ( CONICSECTION: o ) equals Quadrant ( POINT: P )",
    "id": 2105,
    "declarations": "o: CONICSECTION; P: POINT",
    "facts": "FocalLength(o) = Quadrant(P)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: n ) equals LINE: g",
    "id": 2106,
    "declarations": "n: HYPERBOLA; g: LINE",
    "facts": "Asymptote(n) = g"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: s ) ) equals Center ( CONICSECTION: A )",
    "id": 2107,
    "declarations": "s: ELLIPSE; A: CONICSECTION",
    "facts": "MidPoint(MajorAxis(s)) = Center(A)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: K ) equals UpperVertex ( CONICSECTION: X )",
    "id": 2108,
    "declarations": "K: CONICSECTION; X: CONICSECTION",
    "facts": "LowerFocus(K) = UpperVertex(X)"
},
{
    "assertion": "RightFocus ( CONICSECTION: x ) equals UpperFocus ( CONICSECTION: I )",
    "id": 2109,
    "declarations": "x: CONICSECTION; I: CONICSECTION",
    "facts": "RightFocus(x) = UpperFocus(I)"
},
{
    "assertion": "Expression ( CURVE: h ) equals EXPRESSION: x^2*space+*spacexy*space+*spacey^2*space=*space1",
    "id": 2110,
    "declarations": "h: CURVE; x^2*space+*spacexy*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "Expression(h) = x^2*space+*spacexy*space+*spacey^2*space=*space1"
},
{
    "assertion": "Vertex ( CONICSECTION: d ) equals POINT: x",
    "id": 2111,
    "declarations": "d: CONICSECTION; x: POINT",
    "facts": "Vertex(d) = x"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: n ) equals InterceptChord ( LINE: b, CONICSECTION: y )",
    "id": 2112,
    "declarations": "n: ELLIPSE; b: LINE; y: CONICSECTION",
    "facts": "ImaginaryAxis(n) = InterceptChord(b, y)"
},
{
    "assertion": "InterceptChord ( LINE: M, CONICSECTION: q ) equals LINESEGMENT: O",
    "id": 2113,
    "declarations": "M: LINE; q: CONICSECTION; O: LINESEGMENT",
    "facts": "InterceptChord(M, q) = O"
},
{
    "assertion": "UpperVertex ( CONICSECTION: H ) equals LowerVertex ( CONICSECTION: E )",
    "id": 2114,
    "declarations": "H: CONICSECTION; E: CONICSECTION",
    "facts": "UpperVertex(H) = LowerVertex(E)"
},
{
    "assertion": "Intercept ( LINE: J, AXIS: xAxis ) equals Radius ( CIRCLE: C )",
    "id": 2115,
    "declarations": "J: LINE; xAxis: AXIS; C: CIRCLE",
    "facts": "Intercept(J, xAxis) = Radius(C)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: D ) equals LINE: y",
    "id": 2116,
    "declarations": "D: CONICSECTION; y: LINE",
    "facts": "RightDirectrix(D) = y"
},
{
    "assertion": "Abs ( MajorAxis ( ELLIPSE: h ) ) equals NUMBER: -14",
    "id": 2117,
    "declarations": "h: ELLIPSE; -14: NUMBER",
    "facts": "Abs(MajorAxis(h)) = -14"
},
{
    "assertion": "LocusEquation ( UpperVertex ( CONICSECTION: W ) ) equals EXPRESSION: y*space=*spacex^2*space-*space4*x*space+*space4",
    "id": 2118,
    "declarations": "W: CONICSECTION; y*space=*spacex^2*space-*space4*x*space+*space4: EXPRESSION",
    "facts": "LocusEquation(UpperVertex(W)) = y*space=*spacex^2*space-*space4*x*space+*space4"
},
{
    "assertion": "MajorAxis ( ELLIPSE: Y ) equals LINESEGMENT: J",
    "id": 2119,
    "declarations": "Y: ELLIPSE; J: LINESEGMENT",
    "facts": "MajorAxis(Y) = J"
},
{
    "assertion": "Perimeter ( CONICSECTION: z ) equals NUMBER: 100",
    "id": 2120,
    "declarations": "z: CONICSECTION; 100: NUMBER",
    "facts": "Perimeter(z) = 100"
},
{
    "assertion": "Focus ( CONICSECTION: Y ) equals POINT: c",
    "id": 2121,
    "declarations": "Y: CONICSECTION; c: POINT",
    "facts": "Focus(Y) = c"
},
{
    "assertion": "Orthocenter ( TRIANGLE: J ) equals LeftVertex ( CONICSECTION: S )",
    "id": 2122,
    "declarations": "J: TRIANGLE; S: CONICSECTION",
    "facts": "Orthocenter(J) = LeftVertex(S)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: A ) equals LINESEGMENT: a",
    "id": 2123,
    "declarations": "A: ELLIPSE; a: LINESEGMENT",
    "facts": "ImaginaryAxis(A) = a"
},
{
    "assertion": "TangentOfPoint ( RightFocus ( CONICSECTION: l ), CURVE: s ) equals TangentOfPoint ( POINT: f, CURVE: I )",
    "id": 2124,
    "declarations": "l: CONICSECTION; s: CURVE; f: POINT; I: CURVE",
    "facts": "TangentOfPoint(RightFocus(l), s) = TangentOfPoint(f, I)"
},
{
    "assertion": "TangentPoint ( LINE: z, CIRCLE: P ) equals POINT: b",
    "id": 2125,
    "declarations": "z: LINE; P: CIRCLE; b: POINT",
    "facts": "TangentPoint(z, P) = b"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: m ) equals LINE: f",
    "id": 2126,
    "declarations": "m: LINESEGMENT; f: LINE",
    "facts": "PerpendicularBisector(m) = f"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: r, CIRCLE: Z ) equals BOOL: True",
    "id": 2127,
    "declarations": "r: LINESEGMENT; Z: CIRCLE; True: BOOL",
    "facts": "IsDiameter(r, Z) = True"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: Z ) equals AXIS: yAxis",
    "id": 2128,
    "declarations": "Z: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(Z) = yAxis"
},
{
    "assertion": "Circumcenter ( TRIANGLE: l ) equals POINT: M",
    "id": 2129,
    "declarations": "l: TRIANGLE; M: POINT",
    "facts": "Circumcenter(l) = M"
},
{
    "assertion": "LowerFocus ( CONICSECTION: g ) equals POINT: D",
    "id": 2130,
    "declarations": "g: CONICSECTION; D: POINT",
    "facts": "LowerFocus(g) = D"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: l ) equals LINESEGMENT: U",
    "id": 2131,
    "declarations": "l: ELLIPSE; U: LINESEGMENT",
    "facts": "ImaginaryAxis(l) = U"
},
{
    "assertion": "LineSegmentOf ( LeftFocus ( CONICSECTION: u ), UpperVertex ( CONICSECTION: e ) ) equals LINESEGMENT: v",
    "id": 2132,
    "declarations": "u: CONICSECTION; e: CONICSECTION; v: LINESEGMENT",
    "facts": "LineSegmentOf(LeftFocus(u), UpperVertex(e)) = v"
},
{
    "assertion": "Intercept ( LINE: Y, AXIS: yAxis ) equals DotProduct ( VECTOR: X, VECTOR: s )",
    "id": 2133,
    "declarations": "Y: LINE; yAxis: AXIS; X: VECTOR; s: VECTOR",
    "facts": "Intercept(Y, yAxis) = DotProduct(X, s)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: S ) equals Circumcenter ( TRIANGLE: H )",
    "id": 2134,
    "declarations": "S: TRIANGLE; H: TRIANGLE",
    "facts": "Orthocenter(S) = Circumcenter(H)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: y ) equals POINT: C",
    "id": 2135,
    "declarations": "y: TRIANGLE; C: POINT",
    "facts": "Orthocenter(y) = C"
},
{
    "assertion": "Radius ( CIRCLE: u ) equals NUMBER: 93",
    "id": 2136,
    "declarations": "u: CIRCLE; 93: NUMBER",
    "facts": "Radius(u) = 93"
},
{
    "assertion": "LineOf ( Center ( CONICSECTION: M ), UpperFocus ( CONICSECTION: j ) ) equals LINE: F",
    "id": 2137,
    "declarations": "M: CONICSECTION; j: CONICSECTION; F: LINE",
    "facts": "LineOf(Center(M), UpperFocus(j)) = F"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: R ) equals LINE: d",
    "id": 2138,
    "declarations": "R: CONICSECTION; d: LINE",
    "facts": "RightDirectrix(R) = d"
},
{
    "assertion": "Intersection ( CURVE: H, CURVE: u ) equals POINT: J",
    "id": 2139,
    "declarations": "H: CURVE; u: CURVE; J: POINT",
    "facts": "Intersection(H, u) = J"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: Y ) equals AXIS: yAxis",
    "id": 2140,
    "declarations": "Y: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(Y) = yAxis"
},
{
    "assertion": "Min ( Min ( Length ( LINESEGMENT: S ) ) ) equals NUMBER: -70",
    "id": 2141,
    "declarations": "S: LINESEGMENT; -70: NUMBER",
    "facts": "Min(Min(Length(S))) = -70"
},
{
    "assertion": "TangentOfPoint ( LowerFocus ( CONICSECTION: U ), RightPart ( HYPERBOLA: x ) ) equals TangentOfPoint ( POINT: q, CURVE: n )",
    "id": 2142,
    "declarations": "U: CONICSECTION; x: HYPERBOLA; q: POINT; n: CURVE",
    "facts": "TangentOfPoint(LowerFocus(U), RightPart(x)) = TangentOfPoint(q, n)"
},
{
    "assertion": "FootPoint ( LINE: V, LINE: Y ) equals UpperVertex ( CONICSECTION: t )",
    "id": 2143,
    "declarations": "V: LINE; Y: LINE; t: CONICSECTION",
    "facts": "FootPoint(V, Y) = UpperVertex(t)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: C ) equals CIRCLE: v",
    "id": 2144,
    "declarations": "C: TRIANGLE; v: CIRCLE",
    "facts": "CircumCircle(C) = v"
},
{
    "assertion": "IsOutTangent ( CIRCLE: v, CIRCLE: S ) equals BOOL: True",
    "id": 2145,
    "declarations": "v: CIRCLE; S: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(v, S) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: X ) equals Center ( CONICSECTION: T )",
    "id": 2146,
    "declarations": "X: CONICSECTION; T: CONICSECTION",
    "facts": "LeftFocus(X) = Center(T)"
},
{
    "assertion": "Intersection ( CURVE: G, RightPart ( HYPERBOLA: D ) ) equals LeftFocus ( CONICSECTION: U )",
    "id": 2147,
    "declarations": "G: CURVE; D: HYPERBOLA; U: CONICSECTION",
    "facts": "Intersection(G, RightPart(D)) = LeftFocus(U)"
},
{
    "assertion": "Length ( LINESEGMENT: I ) equals NUMBER: 31",
    "id": 2148,
    "declarations": "I: LINESEGMENT; 31: NUMBER",
    "facts": "Length(I) = 31"
},
{
    "assertion": "LineOf ( POINT: i, POINT: j ) equals LINE: O",
    "id": 2149,
    "declarations": "i: POINT; j: POINT; O: LINE",
    "facts": "LineOf(i, j) = O"
},
{
    "assertion": "NumIntersection ( CURVE: i, CURVE: c ) equals NUMBER: -16",
    "id": 2150,
    "declarations": "i: CURVE; c: CURVE; -16: NUMBER",
    "facts": "NumIntersection(i, c) = -16"
},
{
    "assertion": "TangentOnPoint ( POINT: A, Locus ( Circumcenter ( TRIANGLE: E ) ) ) equals LINE: x",
    "id": 2151,
    "declarations": "A: POINT; E: TRIANGLE; x: LINE",
    "facts": "TangentOnPoint(A, Locus(Circumcenter(E))) = x"
},
{
    "assertion": "FootPoint ( LeftDirectrix ( CONICSECTION: L ), LINE: g ) equals POINT: t",
    "id": 2152,
    "declarations": "L: CONICSECTION; g: LINE; t: POINT",
    "facts": "FootPoint(LeftDirectrix(L), g) = t"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: G, TRIANGLE: f ) equals BOOL: True",
    "id": 2153,
    "declarations": "G: CIRCLE; f: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(G, f) = True"
},
{
    "assertion": "VectorOf ( POINT: W, Orthocenter ( TRIANGLE: p ) ) equals VectorOf ( RightFocus ( CONICSECTION: N ), POINT: n )",
    "id": 2154,
    "declarations": "W: POINT; p: TRIANGLE; N: CONICSECTION; n: POINT",
    "facts": "VectorOf(W, Orthocenter(p)) = VectorOf(RightFocus(N), n)"
},
{
    "assertion": "Endpoint ( LineSegmentOf ( POINT: F, POINT: L ) ) equals FootPoint ( LINE: O, RightDirectrix ( CONICSECTION: B ) )",
    "id": 2155,
    "declarations": "F: POINT; L: POINT; O: LINE; B: CONICSECTION",
    "facts": "Endpoint(LineSegmentOf(F, L)) = FootPoint(O, RightDirectrix(B))"
},
{
    "assertion": "MidPoint ( MinorAxis ( ELLIPSE: W ) ) equals POINT: V",
    "id": 2156,
    "declarations": "W: ELLIPSE; V: POINT",
    "facts": "MidPoint(MinorAxis(W)) = V"
},
{
    "assertion": "Orthocenter ( TRIANGLE: E ) equals Orthocenter ( TRIANGLE: I )",
    "id": 2157,
    "declarations": "E: TRIANGLE; I: TRIANGLE",
    "facts": "Orthocenter(E) = Orthocenter(I)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: o ) equals FocalLength ( CONICSECTION: Q )",
    "id": 2158,
    "declarations": "o: CONICSECTION; Q: CONICSECTION",
    "facts": "HalfFocalLength(o) = FocalLength(Q)"
},
{
    "assertion": "RealAxis ( ELLIPSE: X ) equals LINESEGMENT: V",
    "id": 2159,
    "declarations": "X: ELLIPSE; V: LINESEGMENT",
    "facts": "RealAxis(X) = V"
},
{
    "assertion": "PerpendicularBisector ( RealAxis ( ELLIPSE: m ) ) equals TangentOfPoint ( Circumcenter ( TRIANGLE: P ), CURVE: V )",
    "id": 2160,
    "declarations": "m: ELLIPSE; P: TRIANGLE; V: CURVE",
    "facts": "PerpendicularBisector(RealAxis(m)) = TangentOfPoint(Circumcenter(P), V)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: r ) equals LINE: L",
    "id": 2161,
    "declarations": "r: CONICSECTION; L: LINE",
    "facts": "LeftDirectrix(r) = L"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: G ) equals LINESEGMENT: k",
    "id": 2162,
    "declarations": "G: ELLIPSE; k: LINESEGMENT",
    "facts": "ImaginaryAxis(G) = k"
},
{
    "assertion": "Directrix ( CONICSECTION: B ) equals LINE: o",
    "id": 2163,
    "declarations": "B: CONICSECTION; o: LINE",
    "facts": "Directrix(B) = o"
},
{
    "assertion": "RightFocus ( CONICSECTION: D ) equals POINT: g",
    "id": 2164,
    "declarations": "D: CONICSECTION; g: POINT",
    "facts": "RightFocus(D) = g"
},
{
    "assertion": "Incenter ( TRIANGLE: n ) equals POINT: Y",
    "id": 2165,
    "declarations": "n: TRIANGLE; Y: POINT",
    "facts": "Incenter(n) = Y"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: K, TRIANGLE: G ) equals BOOL: True",
    "id": 2166,
    "declarations": "K: CIRCLE; G: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(K, G) = True"
},
{
    "assertion": "Max ( NUMBER: 33 ) equals sqrt ( NUMBER: 81 )",
    "id": 2167,
    "declarations": "33: NUMBER; 81: NUMBER",
    "facts": "Max(33) = sqrt(81)"
},
{
    "assertion": "Center ( CONICSECTION: q ) equals Circumcenter ( TRIANGLE: Q )",
    "id": 2168,
    "declarations": "q: CONICSECTION; Q: TRIANGLE",
    "facts": "Center(q) = Circumcenter(Q)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: O ) equals Area ( CONICSECTION: W )",
    "id": 2169,
    "declarations": "O: CONICSECTION; W: CONICSECTION",
    "facts": "HalfFocalLength(O) = Area(W)"
},
{
    "assertion": "Projection ( POINT: E, LINE: o ) equals Center ( CONICSECTION: s )",
    "id": 2170,
    "declarations": "E: POINT; o: LINE; s: CONICSECTION",
    "facts": "Projection(E, o) = Center(s)"
},
{
    "assertion": "RightFocus ( CONICSECTION: v ) equals Circumcenter ( TRIANGLE: D )",
    "id": 2172,
    "declarations": "v: CONICSECTION; D: TRIANGLE",
    "facts": "RightFocus(v) = Circumcenter(D)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: I ) equals POINT: N",
    "id": 2173,
    "declarations": "I: CONICSECTION; N: POINT",
    "facts": "LeftFocus(I) = N"
},
{
    "assertion": "Center ( CONICSECTION: m ) equals LowerVertex ( CONICSECTION: d )",
    "id": 2174,
    "declarations": "m: CONICSECTION; d: CONICSECTION",
    "facts": "Center(m) = LowerVertex(d)"
},
{
    "assertion": "IsParallel ( TangentOnPoint ( POINT: h, CURVE: O ), LINE: H ) equals BOOL: False",
    "id": 2175,
    "declarations": "h: POINT; O: CURVE; H: LINE; False: BOOL",
    "facts": "IsParallel(TangentOnPoint(h, O), H) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: v, TRIANGLE: K ) equals BOOL: False",
    "id": 2176,
    "declarations": "v: CIRCLE; K: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(v, K) = False"
},
{
    "assertion": "Inclination ( LINE: v ) equals Perimeter ( CONICSECTION: M )",
    "id": 2177,
    "declarations": "v: LINE; M: CONICSECTION",
    "facts": "Inclination(v) = Perimeter(M)"
},
{
    "assertion": "Quadrant ( POINT: F ) equals Inclination ( LINE: B )",
    "id": 2178,
    "declarations": "F: POINT; B: LINE",
    "facts": "Quadrant(F) = Inclination(B)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: B ) equals HalfFocalLength ( CONICSECTION: h )",
    "id": 2179,
    "declarations": "B: CONICSECTION; h: CONICSECTION",
    "facts": "Eccentricity(B) = HalfFocalLength(h)"
},
{
    "assertion": "AngleOf ( UpperVertex ( CONICSECTION: j ), POINT: Z, POINT: V ) equals ApplyUnit ( NUMBER: 8, DEGREESTR: degree )",
    "id": 2180,
    "declarations": "j: CONICSECTION; Z: POINT; V: POINT; 8: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(UpperVertex(j), Z, V) = ApplyUnit(8, degree)"
},
{
    "assertion": "Area ( CONICSECTION: D ) equals FocalLength ( CONICSECTION: t )",
    "id": 2181,
    "declarations": "D: CONICSECTION; t: CONICSECTION",
    "facts": "Area(D) = FocalLength(t)"
},
{
    "assertion": "LineSegmentOf ( POINT: X, POINT: y ) equals LINESEGMENT: y",
    "id": 2182,
    "declarations": "X: POINT; y: POINT; y: LINESEGMENT",
    "facts": "LineSegmentOf(X, y) = y"
},
{
    "assertion": "Area ( CONICSECTION: a ) equals Distance ( POINT: d, UpperFocus ( CONICSECTION: u ) )",
    "id": 2183,
    "declarations": "a: CONICSECTION; d: POINT; u: CONICSECTION",
    "facts": "Area(a) = Distance(d, UpperFocus(u))"
},
{
    "assertion": "Expression ( CURVE: M ) equals EXPRESSION: x*y*space=*space1",
    "id": 2184,
    "declarations": "M: CURVE; x*y*space=*space1: EXPRESSION",
    "facts": "Expression(M) = x*y*space=*space1"
},
{
    "assertion": "TangentOfPoint ( Incenter ( TRIANGLE: t ), CURVE: p ) equals LINE: F",
    "id": 2185,
    "declarations": "t: TRIANGLE; p: CURVE; F: LINE",
    "facts": "TangentOfPoint(Incenter(t), p) = F"
},
{
    "assertion": "IsInTangent ( CircumCircle ( TRIANGLE: A ), CIRCLE: K ) equals BOOL: True",
    "id": 2186,
    "declarations": "A: TRIANGLE; K: CIRCLE; True: BOOL",
    "facts": "IsInTangent(CircumCircle(A), K) = True"
},
{
    "assertion": "LowerVertex ( CONICSECTION: m ) equals LowerFocus ( CONICSECTION: O )",
    "id": 2187,
    "declarations": "m: CONICSECTION; O: CONICSECTION",
    "facts": "LowerVertex(m) = LowerFocus(O)"
},
{
    "assertion": "Negation ( DotProduct ( VECTOR: n, VECTOR: E ) equals FocalLength ( CONICSECTION: b ) ) equals BOOL: False",
    "id": 2188,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "UpperVertex ( CONICSECTION: U ) equals Circumcenter ( TRIANGLE: Y )",
    "id": 2189,
    "declarations": "U: CONICSECTION; Y: TRIANGLE",
    "facts": "UpperVertex(U) = Circumcenter(Y)"
},
{
    "assertion": "RightVertex ( CONICSECTION: P ) equals MidPoint ( LINESEGMENT: P )",
    "id": 2190,
    "declarations": "P: CONICSECTION; P: LINESEGMENT",
    "facts": "RightVertex(P) = MidPoint(P)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: Z ) equals LeftDirectrix ( CONICSECTION: L )",
    "id": 2191,
    "declarations": "Z: CONICSECTION; L: CONICSECTION",
    "facts": "RightDirectrix(Z) = LeftDirectrix(L)"
},
{
    "assertion": "Projection ( POINT: n, LINE: y ) equals POINT: G",
    "id": 2192,
    "declarations": "n: POINT; y: LINE; G: POINT",
    "facts": "Projection(n, y) = G"
},
{
    "assertion": "UpperVertex ( CONICSECTION: m ) equals Circumcenter ( TRIANGLE: Q )",
    "id": 2193,
    "declarations": "m: CONICSECTION; Q: TRIANGLE",
    "facts": "UpperVertex(m) = Circumcenter(Q)"
},
{
    "assertion": "IsInTangent ( CIRCLE: S, CIRCLE: I ) equals BOOL: False",
    "id": 2194,
    "declarations": "S: CIRCLE; I: CIRCLE; False: BOOL",
    "facts": "IsInTangent(S, I) = False"
},
{
    "assertion": "InterceptChord ( LINE: z, CONICSECTION: o ) equals LINESEGMENT: u",
    "id": 2195,
    "declarations": "z: LINE; o: CONICSECTION; u: LINESEGMENT",
    "facts": "InterceptChord(z, o) = u"
},
{
    "assertion": "IsInTangent ( CIRCLE: G, CircumCircle ( TRIANGLE: i ) ) equals BOOL: False",
    "id": 2196,
    "declarations": "G: CIRCLE; i: TRIANGLE; False: BOOL",
    "facts": "IsInTangent(G, CircumCircle(i)) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: L ) equals POINT: p",
    "id": 2197,
    "declarations": "L: CONICSECTION; p: POINT",
    "facts": "RightVertex(L) = p"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: O ) equals LINE: I",
    "id": 2198,
    "declarations": "O: CONICSECTION; I: LINE",
    "facts": "RightDirectrix(O) = I"
},
{
    "assertion": "Asymptote ( HYPERBOLA: O ) equals LINE: k",
    "id": 2199,
    "declarations": "O: HYPERBOLA; k: LINE",
    "facts": "Asymptote(O) = k"
},
{
    "assertion": "Projection ( POINT: Z, LINE: r ) equals POINT: t",
    "id": 2200,
    "declarations": "Z: POINT; r: LINE; t: POINT",
    "facts": "Projection(Z, r) = t"
},
{
    "assertion": "LeftFocus ( CONICSECTION: U ) equals FootPoint ( LINE: n, LINE: b )",
    "id": 2201,
    "declarations": "U: CONICSECTION; n: LINE; b: LINE",
    "facts": "LeftFocus(U) = FootPoint(n, b)"
},
{
    "assertion": "AngleOf ( POINT: a, POINT: t, POINT: K ) equals AngleOf ( MidPoint ( LINESEGMENT: d ), POINT: Q, POINT: L )",
    "id": 2202,
    "declarations": "a: POINT; t: POINT; K: POINT; d: LINESEGMENT; Q: POINT; L: POINT",
    "facts": "AngleOf(a, t, K) = AngleOf(MidPoint(d), Q, L)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: t ) equals LINESEGMENT: f",
    "id": 2203,
    "declarations": "t: ELLIPSE; f: LINESEGMENT",
    "facts": "ImaginaryAxis(t) = f"
},
{
    "assertion": "MidPoint ( LINESEGMENT: a ) equals POINT: H",
    "id": 2204,
    "declarations": "a: LINESEGMENT; H: POINT",
    "facts": "MidPoint(a) = H"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: S ) equals ImaginaryAxis ( ELLIPSE: z )",
    "id": 2205,
    "declarations": "S: ELLIPSE; z: ELLIPSE",
    "facts": "ImaginaryAxis(S) = ImaginaryAxis(z)"
},
{
    "assertion": "Perimeter ( CONICSECTION: M ) equals XCoordinate ( POINT: k )",
    "id": 2206,
    "declarations": "M: CONICSECTION; k: POINT",
    "facts": "Perimeter(M) = XCoordinate(k)"
},
{
    "assertion": "Abs ( InterceptChord ( LINE: d, CONICSECTION: X ) ) equals YCoordinate ( Center ( CONICSECTION: W ) )",
    "id": 2207,
    "declarations": "d: LINE; X: CONICSECTION; W: CONICSECTION",
    "facts": "Abs(InterceptChord(d, X)) = YCoordinate(Center(W))"
},
{
    "assertion": "Area ( CONICSECTION: u ) equals Length ( LINESEGMENT: n )",
    "id": 2208,
    "declarations": "u: CONICSECTION; n: LINESEGMENT",
    "facts": "Area(u) = Length(n)"
},
{
    "assertion": "IsTangent ( LINE: D, CONICSECTION: N ) equals BOOL: True",
    "id": 2209,
    "declarations": "D: LINE; N: CONICSECTION; True: BOOL",
    "facts": "IsTangent(D, N) = True"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: M ) ) equals Slope ( LINE: J )",
    "id": 2210,
    "declarations": "M: TRIANGLE; J: LINE",
    "facts": "Radius(CircumCircle(M)) = Slope(J)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: R, TRIANGLE: n ) equals BOOL: False",
    "id": 2211,
    "declarations": "R: CIRCLE; n: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(R, n) = False"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: r ) equals LINE: e",
    "id": 2212,
    "declarations": "r: CONICSECTION; e: LINE",
    "facts": "RightDirectrix(r) = e"
},
{
    "assertion": "Min ( Slope ( RightDirectrix ( CONICSECTION: Q ) ) ) equals NUMBER: 52",
    "id": 2213,
    "declarations": "Q: CONICSECTION; 52: NUMBER",
    "facts": "Min(Slope(RightDirectrix(Q))) = 52"
},
{
    "assertion": "IsIntersect ( CURVE: i, CURVE: T ) equals BOOL: False",
    "id": 2214,
    "declarations": "i: CURVE; T: CURVE; False: BOOL",
    "facts": "IsIntersect(i, T) = False"
},
{
    "assertion": "IsIntersect ( CURVE: Z, CURVE: c ) equals BOOL: False",
    "id": 2215,
    "declarations": "Z: CURVE; c: CURVE; False: BOOL",
    "facts": "IsIntersect(Z, c) = False"
},
{
    "assertion": "ApplyUnit ( Eccentricity ( CONICSECTION: c ), DEGREESTR: degree )",
    "id": 2216,
    "declarations": "c: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Eccentricity(c), degree) = None"
},
{
    "assertion": "Asymptote ( HYPERBOLA: H ) equals RightDirectrix ( CONICSECTION: G )",
    "id": 2217,
    "declarations": "H: HYPERBOLA; G: CONICSECTION",
    "facts": "Asymptote(H) = RightDirectrix(G)"
},
{
    "assertion": "Length ( LINESEGMENT: j ) equals sqrt ( Eccentricity ( CONICSECTION: N ) )",
    "id": 2218,
    "declarations": "j: LINESEGMENT; N: CONICSECTION",
    "facts": "Length(j) = sqrt(Eccentricity(N))"
},
{
    "assertion": "Expression ( Locus ( POINT: y ) ) equals EXPRESSION: x*space=*spacey^2*space-*space4*y*space+*space4",
    "id": 2219,
    "declarations": "y: POINT; x*space=*spacey^2*space-*space4*y*space+*space4: EXPRESSION",
    "facts": "Expression(Locus(y)) = x*space=*spacey^2*space-*space4*y*space+*space4"
},
{
    "assertion": "Diameter ( CIRCLE: P ) equals HalfFocalLength ( CONICSECTION: P )",
    "id": 2220,
    "declarations": "P: CIRCLE; P: CONICSECTION",
    "facts": "Diameter(P) = HalfFocalLength(P)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: f ) equals LINE: M",
    "id": 2221,
    "declarations": "f: CONICSECTION; M: LINE",
    "facts": "LeftDirectrix(f) = M"
},
{
    "assertion": "MinorAxis ( ELLIPSE: O ) equals LINESEGMENT: r",
    "id": 2222,
    "declarations": "O: ELLIPSE; r: LINESEGMENT",
    "facts": "MinorAxis(O) = r"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: d ) equals LINESEGMENT: I",
    "id": 2223,
    "declarations": "d: ELLIPSE; I: LINESEGMENT",
    "facts": "ImaginaryAxis(d) = I"
},
{
    "assertion": "Negation ( IsInscribedCircle ( CIRCLE: G, TRIANGLE: W ) equals BOOL: False ) equals BOOL: False",
    "id": 2224,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Length ( ImaginaryAxis ( ELLIPSE: b ) ) equals HalfFocalLength ( CONICSECTION: e )",
    "id": 2225,
    "declarations": "b: ELLIPSE; e: CONICSECTION",
    "facts": "Length(ImaginaryAxis(b)) = HalfFocalLength(e)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: q ) equals Locus ( Center ( CONICSECTION: k ) )",
    "id": 2226,
    "declarations": "q: HYPERBOLA; k: CONICSECTION",
    "facts": "LeftPart(q) = Locus(Center(k))"
},
{
    "assertion": "Between ( POINT: k, LeftVertex ( CONICSECTION: T ), POINT: Z ) equals BOOL: False",
    "id": 2227,
    "declarations": "k: POINT; T: CONICSECTION; Z: POINT; False: BOOL",
    "facts": "Between(k, LeftVertex(T), Z) = False"
},
{
    "assertion": "PointOnCurve ( Orthocenter ( TRIANGLE: W ), CURVE: C ) equals BOOL: False",
    "id": 2228,
    "declarations": "W: TRIANGLE; C: CURVE; False: BOOL",
    "facts": "PointOnCurve(Orthocenter(W), C) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: T ) equals POINT: d",
    "id": 2229,
    "declarations": "T: CONICSECTION; d: POINT",
    "facts": "RightFocus(T) = d"
},
{
    "assertion": "LeftPart ( HYPERBOLA: r ) equals RightPart ( HYPERBOLA: S )",
    "id": 2230,
    "declarations": "r: HYPERBOLA; S: HYPERBOLA",
    "facts": "LeftPart(r) = RightPart(S)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: l, CIRCLE: q ) equals BOOL: False",
    "id": 2231,
    "declarations": "l: CIRCLE; q: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(l, q) = False"
},
{
    "assertion": "InterReciprocal ( HalfFocalLength ( CONICSECTION: N ) ) equals NUMBER: 23",
    "id": 2232,
    "declarations": "N: CONICSECTION; 23: NUMBER",
    "facts": "InterReciprocal(HalfFocalLength(N)) = 23"
},
{
    "assertion": "OverlappingLine ( RealAxis ( ELLIPSE: A ) ) equals LINE: F",
    "id": 2233,
    "declarations": "A: ELLIPSE; F: LINE",
    "facts": "OverlappingLine(RealAxis(A)) = F"
},
{
    "assertion": "FootPoint ( PerpendicularBisector ( LINESEGMENT: u ), TangentOfPoint ( Center ( CONICSECTION: d ), CURVE: H ) ) equals LeftFocus ( CONICSECTION: r )",
    "id": 2234,
    "declarations": "u: LINESEGMENT; d: CONICSECTION; H: CURVE; r: CONICSECTION",
    "facts": "FootPoint(PerpendicularBisector(u), TangentOfPoint(Center(d), H)) = LeftFocus(r)"
},
{
    "assertion": "Directrix ( CONICSECTION: k ) equals LINE: L",
    "id": 2235,
    "declarations": "k: CONICSECTION; L: LINE",
    "facts": "Directrix(k) = L"
},
{
    "assertion": "UpperFocus ( CONICSECTION: D ) equals POINT: T",
    "id": 2236,
    "declarations": "D: CONICSECTION; T: POINT",
    "facts": "UpperFocus(D) = T"
},
{
    "assertion": "Focus ( CONICSECTION: K ) equals Center ( CONICSECTION: n )",
    "id": 2237,
    "declarations": "K: CONICSECTION; n: CONICSECTION",
    "facts": "Focus(K) = Center(n)"
},
{
    "assertion": "Focus ( CONICSECTION: y ) equals LeftFocus ( CONICSECTION: y )",
    "id": 2238,
    "declarations": "y: CONICSECTION; y: CONICSECTION",
    "facts": "Focus(y) = LeftFocus(y)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: S ) equals RightVertex ( CONICSECTION: Z )",
    "id": 2239,
    "declarations": "S: TRIANGLE; Z: CONICSECTION",
    "facts": "Circumcenter(S) = RightVertex(Z)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: E ) equals Min ( NUMBER: -10 )",
    "id": 2240,
    "declarations": "E: CONICSECTION; -10: NUMBER",
    "facts": "Eccentricity(E) = Min(-10)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 9, DEGREESTR: degree )",
    "id": 2241,
    "declarations": "9: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(9, degree) = None"
},
{
    "assertion": "Perimeter ( CONICSECTION: t ) equals Diameter ( CIRCLE: h )",
    "id": 2242,
    "declarations": "t: CONICSECTION; h: CIRCLE",
    "facts": "Perimeter(t) = Diameter(h)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: n, CIRCLE: L ) equals BOOL: True",
    "id": 2243,
    "declarations": "n: CIRCLE; L: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(n, L) = True"
},
{
    "assertion": "Inclination ( LINE: s ) equals YCoordinate ( Circumcenter ( TRIANGLE: C ) )",
    "id": 2244,
    "declarations": "s: LINE; C: TRIANGLE",
    "facts": "Inclination(s) = YCoordinate(Circumcenter(C))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: k ) equals NUMBER: -24",
    "id": 2245,
    "declarations": "k: CONICSECTION; -24: NUMBER",
    "facts": "Eccentricity(k) = -24"
},
{
    "assertion": "RightFocus ( CONICSECTION: m ) equals POINT: i",
    "id": 2246,
    "declarations": "m: CONICSECTION; i: POINT",
    "facts": "RightFocus(m) = i"
},
{
    "assertion": "LineSegmentOf ( Projection ( LeftFocus ( CONICSECTION: B ), LeftDirectrix ( CONICSECTION: x ) ), Circumcenter ( TriangleOf ( Center ( CONICSECTION: J ), POINT: w, POINT: e ) ) ) equals LINESEGMENT: d",
    "id": 2247,
    "declarations": "B: CONICSECTION; x: CONICSECTION; J: CONICSECTION; w: POINT; e: POINT; d: LINESEGMENT",
    "facts": "LineSegmentOf(Projection(LeftFocus(B), LeftDirectrix(x)), Circumcenter(TriangleOf(Center(J), w, e))) = d"
},
{
    "assertion": "MajorAxis ( ELLIPSE: r ) equals LINESEGMENT: u",
    "id": 2248,
    "declarations": "r: ELLIPSE; u: LINESEGMENT",
    "facts": "MajorAxis(r) = u"
},
{
    "assertion": "Negation ( Incenter ( TRIANGLE: Q ) equals POINT: p ) equals BOOL: True",
    "id": 2249,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RealAxis ( ELLIPSE: b ) equals MinorAxis ( ELLIPSE: q )",
    "id": 2250,
    "declarations": "b: ELLIPSE; q: ELLIPSE",
    "facts": "RealAxis(b) = MinorAxis(q)"
},
{
    "assertion": "TriangleOf ( POINT: d, Circumcenter ( TRIANGLE: r ), POINT: g ) equals TRIANGLE: O",
    "id": 2251,
    "declarations": "d: POINT; r: TRIANGLE; g: POINT; O: TRIANGLE",
    "facts": "TriangleOf(d, Circumcenter(r), g) = O"
},
{
    "assertion": "RightFocus ( CONICSECTION: s ) equals LeftFocus ( CONICSECTION: H )",
    "id": 2252,
    "declarations": "s: CONICSECTION; H: CONICSECTION",
    "facts": "RightFocus(s) = LeftFocus(H)"
},
{
    "assertion": "PerpendicularBisector ( MajorAxis ( ELLIPSE: r ) ) equals LineOf ( POINT: X, LowerVertex ( CONICSECTION: a ) )",
    "id": 2253,
    "declarations": "r: ELLIPSE; X: POINT; a: CONICSECTION",
    "facts": "PerpendicularBisector(MajorAxis(r)) = LineOf(X, LowerVertex(a))"
},
{
    "assertion": "Between ( RightFocus ( CONICSECTION: y ), POINT: k, RightVertex ( CONICSECTION: X ) ) equals BOOL: False",
    "id": 2254,
    "declarations": "y: CONICSECTION; k: POINT; X: CONICSECTION; False: BOOL",
    "facts": "Between(RightFocus(y), k, RightVertex(X)) = False"
},
{
    "assertion": "TangentOnPoint ( FootPoint ( OverlappingLine ( MinorAxis ( ELLIPSE: N ) ), LineOf ( POINT: z, MidPoint ( LINESEGMENT: D ) ) ), CURVE: z ) equals TangentOnPoint ( Orthocenter ( TRIANGLE: c ), CURVE: o )",
    "id": 2255,
    "declarations": "N: ELLIPSE; z: POINT; D: LINESEGMENT; z: CURVE; c: TRIANGLE; o: CURVE",
    "facts": "TangentOnPoint(FootPoint(OverlappingLine(MinorAxis(N)), LineOf(z, MidPoint(D))), z) = TangentOnPoint(Orthocenter(c), o)"
},
{
    "assertion": "FootPoint ( LINE: j, LINE: a ) equals POINT: I",
    "id": 2256,
    "declarations": "j: LINE; a: LINE; I: POINT",
    "facts": "FootPoint(j, a) = I"
},
{
    "assertion": "Directrix ( CONICSECTION: I ) equals PerpendicularBisector ( LINESEGMENT: l )",
    "id": 2257,
    "declarations": "I: CONICSECTION; l: LINESEGMENT",
    "facts": "Directrix(I) = PerpendicularBisector(l)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: V ) equals POINT: Y",
    "id": 2258,
    "declarations": "V: CONICSECTION; Y: POINT",
    "facts": "LowerVertex(V) = Y"
},
{
    "assertion": "MidPoint ( InterceptChord ( LINE: g, CONICSECTION: Q ) ) equals POINT: s",
    "id": 2259,
    "declarations": "g: LINE; Q: CONICSECTION; s: POINT",
    "facts": "MidPoint(InterceptChord(g, Q)) = s"
},
{
    "assertion": "Max ( Length ( LINESEGMENT: V ) ) equals Radius ( CIRCLE: E )",
    "id": 2260,
    "declarations": "V: LINESEGMENT; E: CIRCLE",
    "facts": "Max(Length(V)) = Radius(E)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: u ) equals LINESEGMENT: M",
    "id": 2261,
    "declarations": "u: ELLIPSE; M: LINESEGMENT",
    "facts": "MinorAxis(u) = M"
},
{
    "assertion": "Vertex ( CONICSECTION: Q ) equals POINT: q",
    "id": 2262,
    "declarations": "Q: CONICSECTION; q: POINT",
    "facts": "Vertex(Q) = q"
},
{
    "assertion": "Max ( Diameter ( CIRCLE: D ) ) equals NUMBER: -52",
    "id": 2263,
    "declarations": "D: CIRCLE; -52: NUMBER",
    "facts": "Max(Diameter(D)) = -52"
},
{
    "assertion": "RightPart ( HYPERBOLA: L ) equals LeftPart ( HYPERBOLA: y )",
    "id": 2264,
    "declarations": "L: HYPERBOLA; y: HYPERBOLA",
    "facts": "RightPart(L) = LeftPart(y)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: s ) equals OverlappingLine ( LINESEGMENT: a )",
    "id": 2265,
    "declarations": "s: LINESEGMENT; a: LINESEGMENT",
    "facts": "PerpendicularBisector(s) = OverlappingLine(a)"
},
{
    "assertion": "Max ( DotProduct ( VECTOR: R, VECTOR: z ) ) equals NUMBER: 32",
    "id": 2266,
    "declarations": "R: VECTOR; z: VECTOR; 32: NUMBER",
    "facts": "Max(DotProduct(R, z)) = 32"
},
{
    "assertion": "TriangleOf ( POINT: S, POINT: v, MidPoint ( MajorAxis ( ELLIPSE: n ) ) ) equals TRIANGLE: N",
    "id": 2267,
    "declarations": "S: POINT; v: POINT; n: ELLIPSE; N: TRIANGLE",
    "facts": "TriangleOf(S, v, MidPoint(MajorAxis(n))) = N"
},
{
    "assertion": "IsTangent ( PerpendicularBisector ( LINESEGMENT: r ), CONICSECTION: C ) equals BOOL: False",
    "id": 2268,
    "declarations": "r: LINESEGMENT; C: CONICSECTION; False: BOOL",
    "facts": "IsTangent(PerpendicularBisector(r), C) = False"
},
{
    "assertion": "Slope ( LINE: V ) equals Abs ( LINESEGMENT: t )",
    "id": 2269,
    "declarations": "V: LINE; t: LINESEGMENT",
    "facts": "Slope(V) = Abs(t)"
},
{
    "assertion": "lg ( NUMBER: -70 ) equals NUMBER: 83",
    "id": 2270,
    "declarations": "-70: NUMBER; 83: NUMBER",
    "facts": "lg(-70) = 83"
},
{
    "assertion": "UpperFocus ( CONICSECTION: u ) equals POINT: p",
    "id": 2271,
    "declarations": "u: CONICSECTION; p: POINT",
    "facts": "UpperFocus(u) = p"
},
{
    "assertion": "NumIntersection ( CURVE: l, CURVE: G ) equals HalfFocalLength ( CONICSECTION: W )",
    "id": 2272,
    "declarations": "l: CURVE; G: CURVE; W: CONICSECTION",
    "facts": "NumIntersection(l, G) = HalfFocalLength(W)"
},
{
    "assertion": "Between ( POINT: j, FootPoint ( LINE: s, LINE: M ), POINT: e ) equals BOOL: True",
    "id": 2273,
    "declarations": "j: POINT; s: LINE; M: LINE; e: POINT; True: BOOL",
    "facts": "Between(j, FootPoint(s, M), e) = True"
},
{
    "assertion": "Area ( CONICSECTION: o ) equals lg ( NUMBER: -68 )",
    "id": 2274,
    "declarations": "o: CONICSECTION; -68: NUMBER",
    "facts": "Area(o) = lg(-68)"
},
{
    "assertion": "Vertex ( CONICSECTION: X ) equals POINT: N",
    "id": 2275,
    "declarations": "X: CONICSECTION; N: POINT",
    "facts": "Vertex(X) = N"
},
{
    "assertion": "Max ( Diameter ( CIRCLE: p ) ) equals Intercept ( LINE: S, AXIS: yAxis )",
    "id": 2276,
    "declarations": "p: CIRCLE; S: LINE; yAxis: AXIS",
    "facts": "Max(Diameter(p)) = Intercept(S, yAxis)"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: f ) ) equals Area ( CONICSECTION: Y )",
    "id": 2277,
    "declarations": "f: CONICSECTION; Y: CONICSECTION",
    "facts": "Inclination(LeftDirectrix(f)) = Area(Y)"
},
{
    "assertion": "RightFocus ( CONICSECTION: W ) equals Orthocenter ( TRIANGLE: S )",
    "id": 2278,
    "declarations": "W: CONICSECTION; S: TRIANGLE",
    "facts": "RightFocus(W) = Orthocenter(S)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: U ) equals Circumcenter ( TRIANGLE: U )",
    "id": 2279,
    "declarations": "U: LINESEGMENT; U: TRIANGLE",
    "facts": "Endpoint(U) = Circumcenter(U)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: E, TRIANGLE: r ) equals BOOL: True",
    "id": 2280,
    "declarations": "E: CIRCLE; r: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(E, r) = True"
},
{
    "assertion": "DotProduct ( VECTOR: L, VECTOR: F ) equals NUMBER: -53",
    "id": 2281,
    "declarations": "L: VECTOR; F: VECTOR; -53: NUMBER",
    "facts": "DotProduct(L, F) = -53"
},
{
    "assertion": "Locus ( POINT: Q ) equals CURVE: j",
    "id": 2282,
    "declarations": "Q: POINT; j: CURVE",
    "facts": "Locus(Q) = j"
},
{
    "assertion": "Expression ( CURVE: c ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 2283,
    "declarations": "c: CURVE; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "Expression(c) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "LeftPart ( HYPERBOLA: G ) equals CURVE: o",
    "id": 2284,
    "declarations": "G: HYPERBOLA; o: CURVE",
    "facts": "LeftPart(G) = o"
},
{
    "assertion": "RightVertex ( CONICSECTION: L ) equals POINT: m",
    "id": 2285,
    "declarations": "L: CONICSECTION; m: POINT",
    "facts": "RightVertex(L) = m"
},
{
    "assertion": "LineSegmentOf ( POINT: f, MidPoint ( LINESEGMENT: V ) ) equals LINESEGMENT: J",
    "id": 2286,
    "declarations": "f: POINT; V: LINESEGMENT; J: LINESEGMENT",
    "facts": "LineSegmentOf(f, MidPoint(V)) = J"
},
{
    "assertion": "Directrix ( CONICSECTION: W ) equals LINE: V",
    "id": 2287,
    "declarations": "W: CONICSECTION; V: LINE",
    "facts": "Directrix(W) = V"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: M ) ) equals Length ( MajorAxis ( ELLIPSE: w ) )",
    "id": 2288,
    "declarations": "M: ELLIPSE; w: ELLIPSE",
    "facts": "Abs(MinorAxis(M)) = Length(MajorAxis(w))"
},
{
    "assertion": "Projection ( POINT: v, RightDirectrix ( CONICSECTION: G ) ) equals LowerFocus ( CONICSECTION: w )",
    "id": 2289,
    "declarations": "v: POINT; G: CONICSECTION; w: CONICSECTION",
    "facts": "Projection(v, RightDirectrix(G)) = LowerFocus(w)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: Y ) equals POINT: w",
    "id": 2290,
    "declarations": "Y: LINESEGMENT; w: POINT",
    "facts": "Endpoint(Y) = w"
},
{
    "assertion": "ApplyUnit ( Eccentricity ( CONICSECTION: O ), DEGREESTR: degree )",
    "id": 2291,
    "declarations": "O: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Eccentricity(O), degree) = None"
},
{
    "assertion": "PointOnCurve ( RightVertex ( CONICSECTION: M ), CURVE: z ) equals BOOL: False",
    "id": 2292,
    "declarations": "M: CONICSECTION; z: CURVE; False: BOOL",
    "facts": "PointOnCurve(RightVertex(M), z) = False"
},
{
    "assertion": "RightPart ( HYPERBOLA: o ) equals CURVE: v",
    "id": 2293,
    "declarations": "o: HYPERBOLA; v: CURVE",
    "facts": "RightPart(o) = v"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: c ) equals lg ( sqrt ( Quadrant ( POINT: h ) ) )",
    "id": 2294,
    "declarations": "c: CONICSECTION; h: POINT",
    "facts": "HalfFocalLength(c) = lg(sqrt(Quadrant(h)))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: J ) equals CIRCLE: m",
    "id": 2295,
    "declarations": "J: TRIANGLE; m: CIRCLE",
    "facts": "CircumCircle(J) = m"
},
{
    "assertion": "VectorOf ( LowerVertex ( CONICSECTION: i ), LeftVertex ( CONICSECTION: h ) ) equals VECTOR: B",
    "id": 2296,
    "declarations": "i: CONICSECTION; h: CONICSECTION; B: VECTOR",
    "facts": "VectorOf(LowerVertex(i), LeftVertex(h)) = B"
},
{
    "assertion": "LeftVertex ( CONICSECTION: l ) equals POINT: v",
    "id": 2297,
    "declarations": "l: CONICSECTION; v: POINT",
    "facts": "LeftVertex(l) = v"
},
{
    "assertion": "sqrt ( NumIntersection ( Locus ( Center ( CONICSECTION: T ) ), RightPart ( HYPERBOLA: d ) ) ) equals NUMBER: 7",
    "id": 2298,
    "declarations": "T: CONICSECTION; d: HYPERBOLA; 7: NUMBER",
    "facts": "sqrt(NumIntersection(Locus(Center(T)), RightPart(d))) = 7"
},
{
    "assertion": "IsChordOf ( MinorAxis ( ELLIPSE: e ), CONICSECTION: i ) equals BOOL: False",
    "id": 2299,
    "declarations": "e: ELLIPSE; i: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(MinorAxis(e), i) = False"
},
{
    "assertion": "InterReciprocal ( Inclination ( LINE: C ) ) equals Diameter ( CIRCLE: l )",
    "id": 2300,
    "declarations": "C: LINE; l: CIRCLE",
    "facts": "InterReciprocal(Inclination(C)) = Diameter(l)"
},
{
    "assertion": "RightFocus ( CONICSECTION: U ) equals RightVertex ( CONICSECTION: T )",
    "id": 2301,
    "declarations": "U: CONICSECTION; T: CONICSECTION",
    "facts": "RightFocus(U) = RightVertex(T)"
},
{
    "assertion": "Negation ( IsTangent ( TangentOfPoint ( POINT: c, CURVE: f ), CONICSECTION: q ) equals BOOL: False ) equals BOOL: False",
    "id": 2302,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Focus ( CONICSECTION: H ) equals Center ( CONICSECTION: S )",
    "id": 2303,
    "declarations": "H: CONICSECTION; S: CONICSECTION",
    "facts": "Focus(H) = Center(S)"
},
{
    "assertion": "IsDiameter ( RealAxis ( ELLIPSE: E ), CIRCLE: Z ) equals BOOL: True",
    "id": 2304,
    "declarations": "E: ELLIPSE; Z: CIRCLE; True: BOOL",
    "facts": "IsDiameter(RealAxis(E), Z) = True"
},
{
    "assertion": "Max ( Length ( LINESEGMENT: u ) ) equals NUMBER: 44",
    "id": 2305,
    "declarations": "u: LINESEGMENT; 44: NUMBER",
    "facts": "Max(Length(u)) = 44"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: B ) ) equals NUMBER: -11",
    "id": 2306,
    "declarations": "B: ELLIPSE; -11: NUMBER",
    "facts": "Abs(MinorAxis(B)) = -11"
},
{
    "assertion": "Negation ( Focus ( CONICSECTION: i ) equals POINT: Z ) equals BOOL: True",
    "id": 2307,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Circumcenter ( TriangleOf ( Center ( CONICSECTION: j ), POINT: l, POINT: E ) ) equals POINT: H",
    "id": 2308,
    "declarations": "j: CONICSECTION; l: POINT; E: POINT; H: POINT",
    "facts": "Circumcenter(TriangleOf(Center(j), l, E)) = H"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: J ) ) equals NUMBER: -2",
    "id": 2309,
    "declarations": "J: ELLIPSE; -2: NUMBER",
    "facts": "Abs(MinorAxis(J)) = -2"
},
{
    "assertion": "Abs ( ImaginaryAxis ( ELLIPSE: o ) ) equals Length ( MinorAxis ( ELLIPSE: o ) )",
    "id": 2310,
    "declarations": "o: ELLIPSE; o: ELLIPSE",
    "facts": "Abs(ImaginaryAxis(o)) = Length(MinorAxis(o))"
},
{
    "assertion": "FocalLength ( CONICSECTION: T ) equals Min ( NUMBER: -24 )",
    "id": 2311,
    "declarations": "T: CONICSECTION; -24: NUMBER",
    "facts": "FocalLength(T) = Min(-24)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: v, TRIANGLE: c ) equals BOOL: False",
    "id": 2312,
    "declarations": "v: CIRCLE; c: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(v, c) = False"
},
{
    "assertion": "AngleOf ( POINT: l, RightVertex ( CONICSECTION: F ), POINT: y ) equals AngleOf ( RightVertex ( CONICSECTION: k ), Incenter ( TRIANGLE: Z ), Center ( CONICSECTION: M ) )",
    "id": 2313,
    "declarations": "l: POINT; F: CONICSECTION; y: POINT; k: CONICSECTION; Z: TRIANGLE; M: CONICSECTION",
    "facts": "AngleOf(l, RightVertex(F), y) = AngleOf(RightVertex(k), Incenter(Z), Center(M))"
},
{
    "assertion": "MidPoint ( LINESEGMENT: t ) equals POINT: J",
    "id": 2314,
    "declarations": "t: LINESEGMENT; J: POINT",
    "facts": "MidPoint(t) = J"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: g, CIRCLE: P ) equals BOOL: False",
    "id": 2315,
    "declarations": "g: LINESEGMENT; P: CIRCLE; False: BOOL",
    "facts": "IsDiameter(g, P) = False"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: P ) equals NUMBER: -17",
    "id": 2316,
    "declarations": "P: CONICSECTION; -17: NUMBER",
    "facts": "HalfFocalLength(P) = -17"
},
{
    "assertion": "Slope ( LINE: U ) equals NUMBER: -54",
    "id": 2317,
    "declarations": "U: LINE; -54: NUMBER",
    "facts": "Slope(U) = -54"
},
{
    "assertion": "VectorOf ( POINT: k, MidPoint ( LINESEGMENT: Q ) ) equals VECTOR: M",
    "id": 2318,
    "declarations": "k: POINT; Q: LINESEGMENT; M: VECTOR",
    "facts": "VectorOf(k, MidPoint(Q)) = M"
},
{
    "assertion": "Slope ( LINE: L ) equals Area ( CONICSECTION: t )",
    "id": 2319,
    "declarations": "L: LINE; t: CONICSECTION",
    "facts": "Slope(L) = Area(t)"
},
{
    "assertion": "LineSegmentOf ( LowerFocus ( CONICSECTION: m ), POINT: A ) equals LineSegmentOf ( Orthocenter ( TRIANGLE: m ), RightFocus ( CONICSECTION: D ) )",
    "id": 2320,
    "declarations": "m: CONICSECTION; A: POINT; m: TRIANGLE; D: CONICSECTION",
    "facts": "LineSegmentOf(LowerFocus(m), A) = LineSegmentOf(Orthocenter(m), RightFocus(D))"
},
{
    "assertion": "ApplyUnit ( NUMBER: -45, DEGREESTR: degree )",
    "id": 2321,
    "declarations": "-45: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-45, degree) = None"
},
{
    "assertion": "Radius ( CIRCLE: I ) equals Area ( CONICSECTION: B )",
    "id": 2322,
    "declarations": "I: CIRCLE; B: CONICSECTION",
    "facts": "Radius(I) = Area(B)"
},
{
    "assertion": "IsInTangent ( CIRCLE: a, CIRCLE: H ) equals BOOL: True",
    "id": 2323,
    "declarations": "a: CIRCLE; H: CIRCLE; True: BOOL",
    "facts": "IsInTangent(a, H) = True"
},
{
    "assertion": "Asymptote ( HYPERBOLA: E ) equals PerpendicularBisector ( LINESEGMENT: Y )",
    "id": 2324,
    "declarations": "E: HYPERBOLA; Y: LINESEGMENT",
    "facts": "Asymptote(E) = PerpendicularBisector(Y)"
},
{
    "assertion": "InterceptChord ( LINE: u, CONICSECTION: q ) equals LINESEGMENT: W",
    "id": 2325,
    "declarations": "u: LINE; q: CONICSECTION; W: LINESEGMENT",
    "facts": "InterceptChord(u, q) = W"
},
{
    "assertion": "InterceptChord ( LINE: z, CONICSECTION: a ) equals LINESEGMENT: E",
    "id": 2326,
    "declarations": "z: LINE; a: CONICSECTION; E: LINESEGMENT",
    "facts": "InterceptChord(z, a) = E"
},
{
    "assertion": "AngleOf ( LeftFocus ( CONICSECTION: N ), LeftVertex ( CONICSECTION: b ), FootPoint ( OverlappingLine ( LINESEGMENT: B ), LINE: n ) ) equals ApplyUnit ( Diameter ( CIRCLE: z ), DEGREESTR: degree )",
    "id": 2327,
    "declarations": "N: CONICSECTION; b: CONICSECTION; B: LINESEGMENT; n: LINE; z: CIRCLE; degree: DEGREESTR",
    "facts": "AngleOf(LeftFocus(N), LeftVertex(b), FootPoint(OverlappingLine(B), n)) = ApplyUnit(Diameter(z), degree)"
},
{
    "assertion": "Slope ( LINE: f ) equals Intercept ( LINE: u, AXIS: xAxis )",
    "id": 2328,
    "declarations": "f: LINE; u: LINE; xAxis: AXIS",
    "facts": "Slope(f) = Intercept(u, xAxis)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: S ) equals UpperFocus ( CONICSECTION: H )",
    "id": 2329,
    "declarations": "S: CONICSECTION; H: CONICSECTION",
    "facts": "LowerVertex(S) = UpperFocus(H)"
},
{
    "assertion": "Perimeter ( CONICSECTION: I ) equals NumIntersection ( CURVE: N, CURVE: I )",
    "id": 2330,
    "declarations": "I: CONICSECTION; N: CURVE; I: CURVE",
    "facts": "Perimeter(I) = NumIntersection(N, I)"
},
{
    "assertion": "Slope ( LINE: m ) equals NUMBER: 89",
    "id": 2331,
    "declarations": "m: LINE; 89: NUMBER",
    "facts": "Slope(m) = 89"
},
{
    "assertion": "Endpoint ( LINESEGMENT: C ) equals RightFocus ( CONICSECTION: I )",
    "id": 2332,
    "declarations": "C: LINESEGMENT; I: CONICSECTION",
    "facts": "Endpoint(C) = RightFocus(I)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: T ) equals LINE: n",
    "id": 2333,
    "declarations": "T: LINESEGMENT; n: LINE",
    "facts": "OverlappingLine(T) = n"
},
{
    "assertion": "Eccentricity ( CONICSECTION: v ) equals Radius ( CIRCLE: j )",
    "id": 2334,
    "declarations": "v: CONICSECTION; j: CIRCLE",
    "facts": "Eccentricity(v) = Radius(j)"
},
{
    "assertion": "DotProduct ( VECTOR: a, VECTOR: e ) equals Min ( lg ( NUMBER: 62 ) )",
    "id": 2335,
    "declarations": "a: VECTOR; e: VECTOR; 62: NUMBER",
    "facts": "DotProduct(a, e) = Min(lg(62))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: f ) equals LINESEGMENT: t",
    "id": 2336,
    "declarations": "f: ELLIPSE; t: LINESEGMENT",
    "facts": "MinorAxis(f) = t"
},
{
    "assertion": "IsParallel ( LINE: T, OverlappingLine ( LineSegmentOf ( LowerVertex ( CONICSECTION: D ), UpperVertex ( CONICSECTION: h ) ) ) ) equals BOOL: False",
    "id": 2337,
    "declarations": "T: LINE; D: CONICSECTION; h: CONICSECTION; False: BOOL",
    "facts": "IsParallel(T, OverlappingLine(LineSegmentOf(LowerVertex(D), UpperVertex(h)))) = False"
},
{
    "assertion": "Expression ( CURVE: S ) equals Expression ( CURVE: y )",
    "id": 2338,
    "declarations": "S: CURVE; y: CURVE",
    "facts": "Expression(S) = Expression(y)"
},
{
    "assertion": "TangentPoint ( LeftDirectrix ( CONICSECTION: K ), CircumCircle ( TRIANGLE: u ) ) equals UpperFocus ( CONICSECTION: H )",
    "id": 2339,
    "declarations": "K: CONICSECTION; u: TRIANGLE; H: CONICSECTION",
    "facts": "TangentPoint(LeftDirectrix(K), CircumCircle(u)) = UpperFocus(H)"
},
{
    "assertion": "RightFocus ( CONICSECTION: Y ) equals LowerVertex ( CONICSECTION: u )",
    "id": 2340,
    "declarations": "Y: CONICSECTION; u: CONICSECTION",
    "facts": "RightFocus(Y) = LowerVertex(u)"
},
{
    "assertion": "Distance ( POINT: r, MidPoint ( LINESEGMENT: A ) ) equals DotProduct ( VECTOR: C, VECTOR: y )",
    "id": 2341,
    "declarations": "r: POINT; A: LINESEGMENT; C: VECTOR; y: VECTOR",
    "facts": "Distance(r, MidPoint(A)) = DotProduct(C, y)"
},
{
    "assertion": "IsParallel ( RightDirectrix ( CONICSECTION: e ), LINE: D ) equals BOOL: True",
    "id": 2342,
    "declarations": "e: CONICSECTION; D: LINE; True: BOOL",
    "facts": "IsParallel(RightDirectrix(e), D) = True"
},
{
    "assertion": "Inclination ( TangentOfPoint ( Incenter ( TRIANGLE: B ), Locus ( POINT: x ) ) ) equals Radius ( CIRCLE: R )",
    "id": 2343,
    "declarations": "B: TRIANGLE; x: POINT; R: CIRCLE",
    "facts": "Inclination(TangentOfPoint(Incenter(B), Locus(x))) = Radius(R)"
},
{
    "assertion": "XCoordinate ( POINT: X ) equals YCoordinate ( POINT: G )",
    "id": 2344,
    "declarations": "X: POINT; G: POINT",
    "facts": "XCoordinate(X) = YCoordinate(G)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: x, TRIANGLE: i ) equals BOOL: True",
    "id": 2345,
    "declarations": "x: CIRCLE; i: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(x, i) = True"
},
{
    "assertion": "DotProduct ( VECTOR: W, VECTOR: j ) equals Perimeter ( CONICSECTION: P )",
    "id": 2346,
    "declarations": "W: VECTOR; j: VECTOR; P: CONICSECTION",
    "facts": "DotProduct(W, j) = Perimeter(P)"
},
{
    "assertion": "sqrt ( Slope ( TangentOfPoint ( RightFocus ( CONICSECTION: L ), LeftPart ( HYPERBOLA: j ) ) ) ) equals NUMBER: -94",
    "id": 2347,
    "declarations": "L: CONICSECTION; j: HYPERBOLA; -94: NUMBER",
    "facts": "sqrt(Slope(TangentOfPoint(RightFocus(L), LeftPart(j)))) = -94"
},
{
    "assertion": "lg ( NUMBER: -69 ) equals NUMBER: 72",
    "id": 2348,
    "declarations": "-69: NUMBER; 72: NUMBER",
    "facts": "lg(-69) = 72"
},
{
    "assertion": "CircumCircle ( TRIANGLE: C ) equals CIRCLE: r",
    "id": 2349,
    "declarations": "C: TRIANGLE; r: CIRCLE",
    "facts": "CircumCircle(C) = r"
},
{
    "assertion": "Expression ( CURVE: U ) equals EXPRESSION: y*space=*spacee^x",
    "id": 2350,
    "declarations": "U: CURVE; y*space=*spacee^x: EXPRESSION",
    "facts": "Expression(U) = y*space=*spacee^x"
},
{
    "assertion": "UpperVertex ( CONICSECTION: z ) equals LowerVertex ( CONICSECTION: U )",
    "id": 2351,
    "declarations": "z: CONICSECTION; U: CONICSECTION",
    "facts": "UpperVertex(z) = LowerVertex(U)"
},
{
    "assertion": "sqrt ( Slope ( LINE: n ) ) equals Area ( CONICSECTION: X )",
    "id": 2352,
    "declarations": "n: LINE; X: CONICSECTION",
    "facts": "sqrt(Slope(n)) = Area(X)"
},
{
    "assertion": "RightFocus ( CONICSECTION: Q ) equals POINT: q",
    "id": 2353,
    "declarations": "Q: CONICSECTION; q: POINT",
    "facts": "RightFocus(Q) = q"
},
{
    "assertion": "TangentOnPoint ( POINT: p, CURVE: o ) equals RightDirectrix ( CONICSECTION: Z )",
    "id": 2354,
    "declarations": "p: POINT; o: CURVE; Z: CONICSECTION",
    "facts": "TangentOnPoint(p, o) = RightDirectrix(Z)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: e ) equals LINESEGMENT: T",
    "id": 2356,
    "declarations": "e: ELLIPSE; T: LINESEGMENT",
    "facts": "ImaginaryAxis(e) = T"
},
{
    "assertion": "FocalLength ( CONICSECTION: C ) equals lg ( Eccentricity ( CONICSECTION: Q ) )",
    "id": 2357,
    "declarations": "C: CONICSECTION; Q: CONICSECTION",
    "facts": "FocalLength(C) = lg(Eccentricity(Q))"
},
{
    "assertion": "RightVertex ( CONICSECTION: E ) equals POINT: U",
    "id": 2358,
    "declarations": "E: CONICSECTION; U: POINT",
    "facts": "RightVertex(E) = U"
},
{
    "assertion": "LeftFocus ( CONICSECTION: T ) equals UpperVertex ( CONICSECTION: z )",
    "id": 2359,
    "declarations": "T: CONICSECTION; z: CONICSECTION",
    "facts": "LeftFocus(T) = UpperVertex(z)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: P, CIRCLE: u ) equals BOOL: False",
    "id": 2360,
    "declarations": "P: LINESEGMENT; u: CIRCLE; False: BOOL",
    "facts": "IsDiameter(P, u) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: R ) equals LINESEGMENT: x",
    "id": 2361,
    "declarations": "R: ELLIPSE; x: LINESEGMENT",
    "facts": "MinorAxis(R) = x"
},
{
    "assertion": "MajorAxis ( ELLIPSE: u ) equals ImaginaryAxis ( ELLIPSE: h )",
    "id": 2362,
    "declarations": "u: ELLIPSE; h: ELLIPSE",
    "facts": "MajorAxis(u) = ImaginaryAxis(h)"
},
{
    "assertion": "lg ( Radius ( CIRCLE: w ) ) equals NUMBER: 81",
    "id": 2363,
    "declarations": "w: CIRCLE; 81: NUMBER",
    "facts": "lg(Radius(w)) = 81"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: S ) ) equals LINE: r",
    "id": 2364,
    "declarations": "S: ELLIPSE; r: LINE",
    "facts": "OverlappingLine(MajorAxis(S)) = r"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: y, CIRCLE: n ) equals BOOL: True",
    "id": 2365,
    "declarations": "y: LINESEGMENT; n: CIRCLE; True: BOOL",
    "facts": "IsDiameter(y, n) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: f ) equals POINT: s",
    "id": 2366,
    "declarations": "f: TRIANGLE; s: POINT",
    "facts": "Circumcenter(f) = s"
},
{
    "assertion": "Asymptote ( HYPERBOLA: v ) equals LINE: X",
    "id": 2367,
    "declarations": "v: HYPERBOLA; X: LINE",
    "facts": "Asymptote(v) = X"
},
{
    "assertion": "Area ( CONICSECTION: D ) equals YCoordinate ( FootPoint ( LINE: c, LINE: b ) )",
    "id": 2368,
    "declarations": "D: CONICSECTION; c: LINE; b: LINE",
    "facts": "Area(D) = YCoordinate(FootPoint(c, b))"
},
{
    "assertion": "Abs ( LINESEGMENT: v ) equals NUMBER: -25",
    "id": 2369,
    "declarations": "v: LINESEGMENT; -25: NUMBER",
    "facts": "Abs(v) = -25"
},
{
    "assertion": "ApplyUnit ( FocalLength ( CONICSECTION: w ), DEGREESTR: degree )",
    "id": 2370,
    "declarations": "w: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(FocalLength(w), degree) = None"
},
{
    "assertion": "IsDiameter ( MajorAxis ( ELLIPSE: j ), CircumCircle ( TRIANGLE: H ) ) equals BOOL: True",
    "id": 2371,
    "declarations": "j: ELLIPSE; H: TRIANGLE; True: BOOL",
    "facts": "IsDiameter(MajorAxis(j), CircumCircle(H)) = True"
},
{
    "assertion": "lg ( NUMBER: -25 ) equals NUMBER: -11",
    "id": 2372,
    "declarations": "-25: NUMBER; -11: NUMBER",
    "facts": "lg(-25) = -11"
},
{
    "assertion": "MajorAxis ( ELLIPSE: p ) equals LINESEGMENT: o",
    "id": 2373,
    "declarations": "p: ELLIPSE; o: LINESEGMENT",
    "facts": "MajorAxis(p) = o"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: O, TRIANGLE: l ) equals BOOL: False",
    "id": 2374,
    "declarations": "O: CIRCLE; l: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(O, l) = False"
},
{
    "assertion": "Quadrant ( Center ( CONICSECTION: L ) ) equals Eccentricity ( CONICSECTION: M )",
    "id": 2375,
    "declarations": "L: CONICSECTION; M: CONICSECTION",
    "facts": "Quadrant(Center(L)) = Eccentricity(M)"
},
{
    "assertion": "IsIntersect ( CURVE: p, CURVE: W ) equals BOOL: False",
    "id": 2376,
    "declarations": "p: CURVE; W: CURVE; False: BOOL",
    "facts": "IsIntersect(p, W) = False"
},
{
    "assertion": "Length ( LINESEGMENT: L ) equals NUMBER: 44",
    "id": 2377,
    "declarations": "L: LINESEGMENT; 44: NUMBER",
    "facts": "Length(L) = 44"
},
{
    "assertion": "UpperFocus ( CONICSECTION: a ) equals POINT: l",
    "id": 2378,
    "declarations": "a: CONICSECTION; l: POINT",
    "facts": "UpperFocus(a) = l"
},
{
    "assertion": "Endpoint ( LINESEGMENT: L ) equals RightVertex ( CONICSECTION: V )",
    "id": 2379,
    "declarations": "L: LINESEGMENT; V: CONICSECTION",
    "facts": "Endpoint(L) = RightVertex(V)"
},
{
    "assertion": "YCoordinate ( RightVertex ( CONICSECTION: p ) ) equals Intercept ( PerpendicularBisector ( LINESEGMENT: x ), AXIS: yAxis )",
    "id": 2380,
    "declarations": "p: CONICSECTION; x: LINESEGMENT; yAxis: AXIS",
    "facts": "YCoordinate(RightVertex(p)) = Intercept(PerpendicularBisector(x), yAxis)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: m, CONICSECTION: a ) equals BOOL: True",
    "id": 2381,
    "declarations": "m: LINESEGMENT; a: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(m, a) = True"
},
{
    "assertion": "RealAxis ( ELLIPSE: E ) equals MinorAxis ( ELLIPSE: O )",
    "id": 2382,
    "declarations": "E: ELLIPSE; O: ELLIPSE",
    "facts": "RealAxis(E) = MinorAxis(O)"
},
{
    "assertion": "Max ( XCoordinate ( POINT: b ) ) equals NUMBER: -59",
    "id": 2383,
    "declarations": "b: POINT; -59: NUMBER",
    "facts": "Max(XCoordinate(b)) = -59"
},
{
    "assertion": "InterReciprocal ( InterReciprocal ( FocalLength ( CONICSECTION: x ) ) ) equals XCoordinate ( MidPoint ( MajorAxis ( ELLIPSE: Q ) ) )",
    "id": 2384,
    "declarations": "x: CONICSECTION; Q: ELLIPSE",
    "facts": "InterReciprocal(InterReciprocal(FocalLength(x))) = XCoordinate(MidPoint(MajorAxis(Q)))"
},
{
    "assertion": "DotProduct ( VECTOR: p, VECTOR: F ) equals NUMBER: 66",
    "id": 2385,
    "declarations": "p: VECTOR; F: VECTOR; 66: NUMBER",
    "facts": "DotProduct(p, F) = 66"
},
{
    "assertion": "sqrt ( NUMBER: -88 ) equals Inclination ( LINE: X )",
    "id": 2386,
    "declarations": "-88: NUMBER; X: LINE",
    "facts": "sqrt(-88) = Inclination(X)"
},
{
    "assertion": "Directrix ( CONICSECTION: v ) equals LINE: S",
    "id": 2387,
    "declarations": "v: CONICSECTION; S: LINE",
    "facts": "Directrix(v) = S"
},
{
    "assertion": "TriangleOf ( POINT: L, LowerFocus ( CONICSECTION: q ), LowerVertex ( CONICSECTION: T ) ) equals TRIANGLE: w",
    "id": 2388,
    "declarations": "L: POINT; q: CONICSECTION; T: CONICSECTION; w: TRIANGLE",
    "facts": "TriangleOf(L, LowerFocus(q), LowerVertex(T)) = w"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: N ) equals MinorAxis ( ELLIPSE: R )",
    "id": 2389,
    "declarations": "N: ELLIPSE; R: ELLIPSE",
    "facts": "ImaginaryAxis(N) = MinorAxis(R)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: L ) equals LINE: B",
    "id": 2390,
    "declarations": "L: CONICSECTION; B: LINE",
    "facts": "LeftDirectrix(L) = B"
},
{
    "assertion": "LowerFocus ( CONICSECTION: d ) equals POINT: H",
    "id": 2391,
    "declarations": "d: CONICSECTION; H: POINT",
    "facts": "LowerFocus(d) = H"
},
{
    "assertion": "Projection ( UpperVertex ( CONICSECTION: f ), LeftDirectrix ( CONICSECTION: z ) ) equals Circumcenter ( TRIANGLE: f )",
    "id": 2392,
    "declarations": "f: CONICSECTION; z: CONICSECTION; f: TRIANGLE",
    "facts": "Projection(UpperVertex(f), LeftDirectrix(z)) = Circumcenter(f)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: c ) equals Circumcenter ( TriangleOf ( Center ( CONICSECTION: j ), POINT: t, POINT: Y ) )",
    "id": 2393,
    "declarations": "c: LINESEGMENT; j: CONICSECTION; t: POINT; Y: POINT",
    "facts": "Endpoint(c) = Circumcenter(TriangleOf(Center(j), t, Y))"
},
{
    "assertion": "LocusEquation ( LeftVertex ( CONICSECTION: D ) ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 2394,
    "declarations": "D: CONICSECTION; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "LocusEquation(LeftVertex(D)) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "Projection ( POINT: N, LINE: y ) equals Projection ( POINT: e, LINE: f )",
    "id": 2395,
    "declarations": "N: POINT; y: LINE; e: POINT; f: LINE",
    "facts": "Projection(N, y) = Projection(e, f)"
},
{
    "assertion": "sqrt ( Radius ( CIRCLE: R ) ) equals Diameter ( CIRCLE: T )",
    "id": 2396,
    "declarations": "R: CIRCLE; T: CIRCLE",
    "facts": "sqrt(Radius(R)) = Diameter(T)"
},
{
    "assertion": "LineOf ( LeftFocus ( CONICSECTION: H ), POINT: f ) equals LINE: c",
    "id": 2397,
    "declarations": "H: CONICSECTION; f: POINT; c: LINE",
    "facts": "LineOf(LeftFocus(H), f) = c"
},
{
    "assertion": "LeftPart ( HYPERBOLA: T ) equals CURVE: N",
    "id": 2398,
    "declarations": "T: HYPERBOLA; N: CURVE",
    "facts": "LeftPart(T) = N"
},
{
    "assertion": "LeftVertex ( CONICSECTION: f ) equals LowerFocus ( CONICSECTION: y )",
    "id": 2399,
    "declarations": "f: CONICSECTION; y: CONICSECTION",
    "facts": "LeftVertex(f) = LowerFocus(y)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: R ) equals OverlappingLine ( InterceptChord ( LeftDirectrix ( CONICSECTION: s ), CONICSECTION: m ) )",
    "id": 2400,
    "declarations": "R: LINESEGMENT; s: CONICSECTION; m: CONICSECTION",
    "facts": "PerpendicularBisector(R) = OverlappingLine(InterceptChord(LeftDirectrix(s), m))"
},
{
    "assertion": "XCoordinate ( POINT: t ) equals Length ( LINESEGMENT: K )",
    "id": 2401,
    "declarations": "t: POINT; K: LINESEGMENT",
    "facts": "XCoordinate(t) = Length(K)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: z ) equals LeftDirectrix ( CONICSECTION: j )",
    "id": 2402,
    "declarations": "z: CONICSECTION; j: CONICSECTION",
    "facts": "LeftDirectrix(z) = LeftDirectrix(j)"
},
{
    "assertion": "LocusEquation ( UpperFocus ( CONICSECTION: o ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 2403,
    "declarations": "o: CONICSECTION; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(UpperFocus(o)) = y*space=*spacelog(x)"
},
{
    "assertion": "FocalLength ( CONICSECTION: A ) equals Perimeter ( CONICSECTION: B )",
    "id": 2404,
    "declarations": "A: CONICSECTION; B: CONICSECTION",
    "facts": "FocalLength(A) = Perimeter(B)"
},
{
    "assertion": "Area ( CONICSECTION: V ) equals NUMBER: -41",
    "id": 2405,
    "declarations": "V: CONICSECTION; -41: NUMBER",
    "facts": "Area(V) = -41"
},
{
    "assertion": "UpperVertex ( CONICSECTION: y ) equals POINT: j",
    "id": 2406,
    "declarations": "y: CONICSECTION; j: POINT",
    "facts": "UpperVertex(y) = j"
},
{
    "assertion": "LocusEquation ( POINT: b ) equals EXPRESSION: x^2*space+*spacey^2*space+*space6*x*space-*space4*y*space=*space12",
    "id": 2407,
    "declarations": "b: POINT; x^2*space+*spacey^2*space+*space6*x*space-*space4*y*space=*space12: EXPRESSION",
    "facts": "LocusEquation(b) = x^2*space+*spacey^2*space+*space6*x*space-*space4*y*space=*space12"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: S, TRIANGLE: i ) equals BOOL: False",
    "id": 2408,
    "declarations": "S: CIRCLE; i: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(S, i) = False"
},
{
    "assertion": "lg ( Diameter ( CIRCLE: G ) ) equals NUMBER: -75",
    "id": 2409,
    "declarations": "G: CIRCLE; -75: NUMBER",
    "facts": "lg(Diameter(G)) = -75"
},
{
    "assertion": "NumIntersection ( CURVE: n, CURVE: I ) equals YCoordinate ( UpperVertex ( CONICSECTION: P ) )",
    "id": 2410,
    "declarations": "n: CURVE; I: CURVE; P: CONICSECTION",
    "facts": "NumIntersection(n, I) = YCoordinate(UpperVertex(P))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: Z ) equals NUMBER: 1",
    "id": 2411,
    "declarations": "Z: CONICSECTION; 1: NUMBER",
    "facts": "Eccentricity(Z) = 1"
},
{
    "assertion": "DotProduct ( VECTOR: M, VECTOR: l ) equals HalfFocalLength ( CONICSECTION: L )",
    "id": 2412,
    "declarations": "M: VECTOR; l: VECTOR; L: CONICSECTION",
    "facts": "DotProduct(M, l) = HalfFocalLength(L)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: J, CIRCLE: o ) equals BOOL: False",
    "id": 2413,
    "declarations": "J: CIRCLE; o: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(J, o) = False"
},
{
    "assertion": "TangentOfPoint ( POINT: Q, CURVE: p ) equals LINE: u",
    "id": 2414,
    "declarations": "Q: POINT; p: CURVE; u: LINE",
    "facts": "TangentOfPoint(Q, p) = u"
},
{
    "assertion": "IsDiameter ( MajorAxis ( ELLIPSE: U ), CircumCircle ( TRIANGLE: G ) ) equals BOOL: False",
    "id": 2415,
    "declarations": "U: ELLIPSE; G: TRIANGLE; False: BOOL",
    "facts": "IsDiameter(MajorAxis(U), CircumCircle(G)) = False"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: y ) equals LINE: e",
    "id": 2416,
    "declarations": "y: LINESEGMENT; e: LINE",
    "facts": "OverlappingLine(y) = e"
},
{
    "assertion": "Abs ( LINESEGMENT: q ) equals Radius ( CIRCLE: f )",
    "id": 2417,
    "declarations": "q: LINESEGMENT; f: CIRCLE",
    "facts": "Abs(q) = Radius(f)"
},
{
    "assertion": "Abs ( MajorAxis ( ELLIPSE: x ) ) equals NUMBER: -52",
    "id": 2418,
    "declarations": "x: ELLIPSE; -52: NUMBER",
    "facts": "Abs(MajorAxis(x)) = -52"
},
{
    "assertion": "Abs ( LineSegmentOf ( LeftVertex ( CONICSECTION: j ), LowerFocus ( CONICSECTION: b ) ) ) equals Length ( LINESEGMENT: A )",
    "id": 2419,
    "declarations": "j: CONICSECTION; b: CONICSECTION; A: LINESEGMENT",
    "facts": "Abs(LineSegmentOf(LeftVertex(j), LowerFocus(b))) = Length(A)"
},
{
    "assertion": "Incenter ( TRIANGLE: J ) equals POINT: r",
    "id": 2420,
    "declarations": "J: TRIANGLE; r: POINT",
    "facts": "Incenter(J) = r"
},
{
    "assertion": "RealAxis ( ELLIPSE: z ) equals LINESEGMENT: W",
    "id": 2421,
    "declarations": "z: ELLIPSE; W: LINESEGMENT",
    "facts": "RealAxis(z) = W"
},
{
    "assertion": "Quadrant ( Circumcenter ( TRIANGLE: K ) ) equals Intercept ( OverlappingLine ( LINESEGMENT: Z ), AXIS: yAxis )",
    "id": 2422,
    "declarations": "K: TRIANGLE; Z: LINESEGMENT; yAxis: AXIS",
    "facts": "Quadrant(Circumcenter(K)) = Intercept(OverlappingLine(Z), yAxis)"
},
{
    "assertion": "LineOf ( LowerFocus ( CONICSECTION: k ), POINT: a ) equals LINE: S",
    "id": 2423,
    "declarations": "k: CONICSECTION; a: POINT; S: LINE",
    "facts": "LineOf(LowerFocus(k), a) = S"
},
{
    "assertion": "TangentOnPoint ( Circumcenter ( TRIANGLE: d ), CURVE: n ) equals LINE: d",
    "id": 2424,
    "declarations": "d: TRIANGLE; n: CURVE; d: LINE",
    "facts": "TangentOnPoint(Circumcenter(d), n) = d"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: D ) equals AXIS: yAxis",
    "id": 2425,
    "declarations": "D: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(D) = yAxis"
},
{
    "assertion": "ApplyUnit ( NUMBER: 47, DEGREESTR: degree )",
    "id": 2426,
    "declarations": "47: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(47, degree) = None"
},
{
    "assertion": "PerpendicularBisector ( InterceptChord ( LINE: o, CONICSECTION: l ) ) equals OverlappingLine ( LINESEGMENT: Q )",
    "id": 2427,
    "declarations": "o: LINE; l: CONICSECTION; Q: LINESEGMENT",
    "facts": "PerpendicularBisector(InterceptChord(o, l)) = OverlappingLine(Q)"
},
{
    "assertion": "PointOnCurve ( Incenter ( TRIANGLE: b ), Locus ( POINT: D ) ) equals BOOL: False",
    "id": 2428,
    "declarations": "b: TRIANGLE; D: POINT; False: BOOL",
    "facts": "PointOnCurve(Incenter(b), Locus(D)) = False"
},
{
    "assertion": "InterReciprocal ( NUMBER: -88 ) equals Radius ( CircumCircle ( TRIANGLE: M ) )",
    "id": 2429,
    "declarations": "-88: NUMBER; M: TRIANGLE",
    "facts": "InterReciprocal(-88) = Radius(CircumCircle(M))"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: A ) ) equals UpperVertex ( CONICSECTION: k )",
    "id": 2430,
    "declarations": "A: ELLIPSE; k: CONICSECTION",
    "facts": "Endpoint(ImaginaryAxis(A)) = UpperVertex(k)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: k ) equals MidPoint ( RealAxis ( ELLIPSE: x ) )",
    "id": 2431,
    "declarations": "k: LINESEGMENT; x: ELLIPSE",
    "facts": "MidPoint(k) = MidPoint(RealAxis(x))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: d ) equals LowerFocus ( CONICSECTION: k )",
    "id": 2432,
    "declarations": "d: CONICSECTION; k: CONICSECTION",
    "facts": "LowerVertex(d) = LowerFocus(k)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: I ) equals MinorAxis ( ELLIPSE: S )",
    "id": 2433,
    "declarations": "I: ELLIPSE; S: ELLIPSE",
    "facts": "ImaginaryAxis(I) = MinorAxis(S)"
},
{
    "assertion": "Min ( YCoordinate ( POINT: I ) ) equals NUMBER: 72",
    "id": 2434,
    "declarations": "I: POINT; 72: NUMBER",
    "facts": "Min(YCoordinate(I)) = 72"
},
{
    "assertion": "IsTangent ( LeftDirectrix ( CONICSECTION: o ), CONICSECTION: f ) equals BOOL: True",
    "id": 2435,
    "declarations": "o: CONICSECTION; f: CONICSECTION; True: BOOL",
    "facts": "IsTangent(LeftDirectrix(o), f) = True"
},
{
    "assertion": "IsChordOf ( InterceptChord ( LINE: c, CONICSECTION: j ), CONICSECTION: d ) equals BOOL: True",
    "id": 2436,
    "declarations": "c: LINE; j: CONICSECTION; d: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(InterceptChord(c, j), d) = True"
},
{
    "assertion": "Max ( NUMBER: -17 ) equals XCoordinate ( UpperVertex ( CONICSECTION: S ) )",
    "id": 2437,
    "declarations": "-17: NUMBER; S: CONICSECTION",
    "facts": "Max(-17) = XCoordinate(UpperVertex(S))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: b ) equals POINT: Z",
    "id": 2438,
    "declarations": "b: CONICSECTION; Z: POINT",
    "facts": "LowerVertex(b) = Z"
},
{
    "assertion": "InterReciprocal ( NUMBER: -93 ) equals NUMBER: 1",
    "id": 2439,
    "declarations": "-93: NUMBER; 1: NUMBER",
    "facts": "InterReciprocal(-93) = 1"
},
{
    "assertion": "Orthocenter ( TRIANGLE: u ) equals FootPoint ( LINE: X, LINE: G )",
    "id": 2440,
    "declarations": "u: TRIANGLE; X: LINE; G: LINE",
    "facts": "Orthocenter(u) = FootPoint(X, G)"
},
{
    "assertion": "InterReciprocal ( Distance ( POINT: r, Projection ( POINT: V, LINE: o ) ) ) equals Abs ( LINESEGMENT: V )",
    "id": 2441,
    "declarations": "r: POINT; V: POINT; o: LINE; V: LINESEGMENT",
    "facts": "InterReciprocal(Distance(r, Projection(V, o))) = Abs(V)"
},
{
    "assertion": "Locus ( LowerFocus ( CONICSECTION: A ) ) equals CURVE: J",
    "id": 2442,
    "declarations": "A: CONICSECTION; J: CURVE",
    "facts": "Locus(LowerFocus(A)) = J"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: a ) equals LINE: e",
    "id": 2443,
    "declarations": "a: CONICSECTION; e: LINE",
    "facts": "LeftDirectrix(a) = e"
},
{
    "assertion": "Max ( NUMBER: -33 ) equals NUMBER: 7",
    "id": 2444,
    "declarations": "-33: NUMBER; 7: NUMBER",
    "facts": "Max(-33) = 7"
},
{
    "assertion": "LeftVertex ( CONICSECTION: G ) equals MidPoint ( MajorAxis ( ELLIPSE: s ) )",
    "id": 2445,
    "declarations": "G: CONICSECTION; s: ELLIPSE",
    "facts": "LeftVertex(G) = MidPoint(MajorAxis(s))"
},
{
    "assertion": "Radius ( CIRCLE: J ) equals NUMBER: -34",
    "id": 2446,
    "declarations": "J: CIRCLE; -34: NUMBER",
    "facts": "Radius(J) = -34"
},
{
    "assertion": "Abs ( LINESEGMENT: I ) equals Perimeter ( CONICSECTION: T )",
    "id": 2447,
    "declarations": "I: LINESEGMENT; T: CONICSECTION",
    "facts": "Abs(I) = Perimeter(T)"
},
{
    "assertion": "YCoordinate ( POINT: P ) equals NUMBER: -100",
    "id": 2448,
    "declarations": "P: POINT; -100: NUMBER",
    "facts": "YCoordinate(P) = -100"
},
{
    "assertion": "Negation ( Directrix ( CONICSECTION: z ) equals LINE: a ) equals BOOL: True",
    "id": 2449,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LocusEquation ( LowerFocus ( CONICSECTION: o ) ) equals Expression ( RightPart ( HYPERBOLA: J ) )",
    "id": 2450,
    "declarations": "o: CONICSECTION; J: HYPERBOLA",
    "facts": "LocusEquation(LowerFocus(o)) = Expression(RightPart(J))"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: M ) equals InterceptChord ( LINE: t, CONICSECTION: j )",
    "id": 2451,
    "declarations": "M: ELLIPSE; t: LINE; j: CONICSECTION",
    "facts": "ImaginaryAxis(M) = InterceptChord(t, j)"
},
{
    "assertion": "Vertex ( CONICSECTION: p ) equals UpperFocus ( CONICSECTION: S )",
    "id": 2452,
    "declarations": "p: CONICSECTION; S: CONICSECTION",
    "facts": "Vertex(p) = UpperFocus(S)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: L ) equals YCoordinate ( POINT: N )",
    "id": 2453,
    "declarations": "L: CONICSECTION; N: POINT",
    "facts": "Eccentricity(L) = YCoordinate(N)"
},
{
    "assertion": "Distance ( Incenter ( TRIANGLE: C ), UpperFocus ( CONICSECTION: P ) ) equals lg ( NUMBER: -68 )",
    "id": 2454,
    "declarations": "C: TRIANGLE; P: CONICSECTION; -68: NUMBER",
    "facts": "Distance(Incenter(C), UpperFocus(P)) = lg(-68)"
},
{
    "assertion": "sqrt ( NUMBER: 74 ) equals sqrt ( Length ( MinorAxis ( ELLIPSE: l ) ) )",
    "id": 2456,
    "declarations": "74: NUMBER; l: ELLIPSE",
    "facts": "sqrt(74) = sqrt(Length(MinorAxis(l)))"
},
{
    "assertion": "MidPoint ( LINESEGMENT: R ) equals Incenter ( TRIANGLE: R )",
    "id": 2457,
    "declarations": "R: LINESEGMENT; R: TRIANGLE",
    "facts": "MidPoint(R) = Incenter(R)"
},
{
    "assertion": "Projection ( Incenter ( TRIANGLE: g ), LINE: V ) equals POINT: B",
    "id": 2458,
    "declarations": "g: TRIANGLE; V: LINE; B: POINT",
    "facts": "Projection(Incenter(g), V) = B"
},
{
    "assertion": "LowerFocus ( CONICSECTION: R ) equals POINT: r",
    "id": 2459,
    "declarations": "R: CONICSECTION; r: POINT",
    "facts": "LowerFocus(R) = r"
},
{
    "assertion": "Orthocenter ( TRIANGLE: B ) equals Orthocenter ( TriangleOf ( POINT: h, Orthocenter ( TRIANGLE: E ), POINT: Y ) )",
    "id": 2460,
    "declarations": "B: TRIANGLE; h: POINT; E: TRIANGLE; Y: POINT",
    "facts": "Orthocenter(B) = Orthocenter(TriangleOf(h, Orthocenter(E), Y))"
},
{
    "assertion": "LocusEquation ( POINT: d ) equals EXPRESSION: x^2*space+*spacey*space=*space4",
    "id": 2461,
    "declarations": "d: POINT; x^2*space+*spacey*space=*space4: EXPRESSION",
    "facts": "LocusEquation(d) = x^2*space+*spacey*space=*space4"
},
{
    "assertion": "LeftVertex ( CONICSECTION: w ) equals RightFocus ( CONICSECTION: f )",
    "id": 2462,
    "declarations": "w: CONICSECTION; f: CONICSECTION",
    "facts": "LeftVertex(w) = RightFocus(f)"
},
{
    "assertion": "Perimeter ( CONICSECTION: z ) equals Area ( CONICSECTION: v )",
    "id": 2463,
    "declarations": "z: CONICSECTION; v: CONICSECTION",
    "facts": "Perimeter(z) = Area(v)"
},
{
    "assertion": "RightVertex ( CONICSECTION: i ) equals POINT: L",
    "id": 2464,
    "declarations": "i: CONICSECTION; L: POINT",
    "facts": "RightVertex(i) = L"
},
{
    "assertion": "Eccentricity ( CONICSECTION: m ) equals Eccentricity ( CONICSECTION: G )",
    "id": 2465,
    "declarations": "m: CONICSECTION; G: CONICSECTION",
    "facts": "Eccentricity(m) = Eccentricity(G)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: A ) equals OverlappingLine ( LINESEGMENT: O )",
    "id": 2466,
    "declarations": "A: LINESEGMENT; O: LINESEGMENT",
    "facts": "PerpendicularBisector(A) = OverlappingLine(O)"
},
{
    "assertion": "IsIntersect ( CURVE: n, CURVE: O ) equals BOOL: True",
    "id": 2467,
    "declarations": "n: CURVE; O: CURVE; True: BOOL",
    "facts": "IsIntersect(n, O) = True"
},
{
    "assertion": "And ( Max ( lg ( NUMBER: 82 ) ) equals NUMBER: -80, Locus ( POINT: q ) equals CURVE: q ) equals BOOL: True",
    "id": 2468,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MinorAxis ( ELLIPSE: w ) equals MajorAxis ( ELLIPSE: q )",
    "id": 2469,
    "declarations": "w: ELLIPSE; q: ELLIPSE",
    "facts": "MinorAxis(w) = MajorAxis(q)"
},
{
    "assertion": "TangentOnPoint ( LowerVertex ( CONICSECTION: c ), CURVE: L ) equals LINE: H",
    "id": 2470,
    "declarations": "c: CONICSECTION; L: CURVE; H: LINE",
    "facts": "TangentOnPoint(LowerVertex(c), L) = H"
},
{
    "assertion": "LowerVertex ( CONICSECTION: j ) equals Center ( CONICSECTION: U )",
    "id": 2471,
    "declarations": "j: CONICSECTION; U: CONICSECTION",
    "facts": "LowerVertex(j) = Center(U)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: w ) equals CURVE: T",
    "id": 2472,
    "declarations": "w: HYPERBOLA; T: CURVE",
    "facts": "LeftPart(w) = T"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: m ) equals LINESEGMENT: C",
    "id": 2473,
    "declarations": "m: ELLIPSE; C: LINESEGMENT",
    "facts": "ImaginaryAxis(m) = C"
},
{
    "assertion": "Projection ( Incenter ( TRIANGLE: r ), LINE: D ) equals POINT: K",
    "id": 2474,
    "declarations": "r: TRIANGLE; D: LINE; K: POINT",
    "facts": "Projection(Incenter(r), D) = K"
},
{
    "assertion": "RightFocus ( CONICSECTION: M ) equals POINT: g",
    "id": 2475,
    "declarations": "M: CONICSECTION; g: POINT",
    "facts": "RightFocus(M) = g"
},
{
    "assertion": "lg ( NUMBER: 45 ) equals Length ( LINESEGMENT: f )",
    "id": 2476,
    "declarations": "45: NUMBER; f: LINESEGMENT",
    "facts": "lg(45) = Length(f)"
},
{
    "assertion": "VectorOf ( Center ( CONICSECTION: a ), POINT: J ) equals VECTOR: L",
    "id": 2477,
    "declarations": "a: CONICSECTION; J: POINT; L: VECTOR",
    "facts": "VectorOf(Center(a), J) = L"
},
{
    "assertion": "MinorAxis ( ELLIPSE: V ) equals LineSegmentOf ( POINT: c, POINT: q )",
    "id": 2478,
    "declarations": "V: ELLIPSE; c: POINT; q: POINT",
    "facts": "MinorAxis(V) = LineSegmentOf(c, q)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: i ) equals POINT: M",
    "id": 2479,
    "declarations": "i: TRIANGLE; M: POINT",
    "facts": "Orthocenter(i) = M"
},
{
    "assertion": "IsIntersect ( CURVE: f, CURVE: v ) equals BOOL: True",
    "id": 2480,
    "declarations": "f: CURVE; v: CURVE; True: BOOL",
    "facts": "IsIntersect(f, v) = True"
},
{
    "assertion": "IsParallel ( LINE: z, LINE: v ) equals BOOL: False",
    "id": 2481,
    "declarations": "z: LINE; v: LINE; False: BOOL",
    "facts": "IsParallel(z, v) = False"
},
{
    "assertion": "YCoordinate ( UpperFocus ( CONICSECTION: a ) ) equals Slope ( PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: r ) ) )",
    "id": 2482,
    "declarations": "a: CONICSECTION; r: ELLIPSE",
    "facts": "YCoordinate(UpperFocus(a)) = Slope(PerpendicularBisector(ImaginaryAxis(r)))"
},
{
    "assertion": "Diameter ( CIRCLE: B ) equals YCoordinate ( RightVertex ( CONICSECTION: T ) )",
    "id": 2483,
    "declarations": "B: CIRCLE; T: CONICSECTION",
    "facts": "Diameter(B) = YCoordinate(RightVertex(T))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: W ) equals CIRCLE: V",
    "id": 2484,
    "declarations": "W: TRIANGLE; V: CIRCLE",
    "facts": "CircumCircle(W) = V"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: H ) equals RealAxis ( ELLIPSE: N )",
    "id": 2485,
    "declarations": "H: ELLIPSE; N: ELLIPSE",
    "facts": "ImaginaryAxis(H) = RealAxis(N)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: Q ) equals LINESEGMENT: b",
    "id": 2486,
    "declarations": "Q: ELLIPSE; b: LINESEGMENT",
    "facts": "MajorAxis(Q) = b"
},
{
    "assertion": "Center ( CONICSECTION: h ) equals POINT: e",
    "id": 2487,
    "declarations": "h: CONICSECTION; e: POINT",
    "facts": "Center(h) = e"
},
{
    "assertion": "NumIntersection ( Locus ( RightFocus ( CONICSECTION: J ) ), CURVE: p ) equals NUMBER: -26",
    "id": 2488,
    "declarations": "J: CONICSECTION; p: CURVE; -26: NUMBER",
    "facts": "NumIntersection(Locus(RightFocus(J)), p) = -26"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: v, TRIANGLE: M ) equals BOOL: True",
    "id": 2489,
    "declarations": "v: CIRCLE; M: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(v, M) = True"
},
{
    "assertion": "InterReciprocal ( NUMBER: 98 ) equals Slope ( LINE: P )",
    "id": 2490,
    "declarations": "98: NUMBER; P: LINE",
    "facts": "InterReciprocal(98) = Slope(P)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: g ) equals POINT: p",
    "id": 2491,
    "declarations": "g: CONICSECTION; p: POINT",
    "facts": "LowerVertex(g) = p"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: m ) equals LINE: y",
    "id": 2492,
    "declarations": "m: CONICSECTION; y: LINE",
    "facts": "RightDirectrix(m) = y"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: D ) equals InterceptChord ( LINE: v, CONICSECTION: r )",
    "id": 2493,
    "declarations": "D: ELLIPSE; v: LINE; r: CONICSECTION",
    "facts": "ImaginaryAxis(D) = InterceptChord(v, r)"
},
{
    "assertion": "TangentOnPoint ( POINT: b, CURVE: F ) equals LINE: L",
    "id": 2494,
    "declarations": "b: POINT; F: CURVE; L: LINE",
    "facts": "TangentOnPoint(b, F) = L"
},
{
    "assertion": "Slope ( LINE: W ) equals Min ( Eccentricity ( CONICSECTION: B ) )",
    "id": 2495,
    "declarations": "W: LINE; B: CONICSECTION",
    "facts": "Slope(W) = Min(Eccentricity(B))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: J ) equals Incenter ( TRIANGLE: U )",
    "id": 2496,
    "declarations": "J: CONICSECTION; U: TRIANGLE",
    "facts": "LeftFocus(J) = Incenter(U)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: U ) equals LINE: D",
    "id": 2497,
    "declarations": "U: LINESEGMENT; D: LINE",
    "facts": "PerpendicularBisector(U) = D"
},
{
    "assertion": "Area ( CONICSECTION: C ) equals NUMBER: -75",
    "id": 2498,
    "declarations": "C: CONICSECTION; -75: NUMBER",
    "facts": "Area(C) = -75"
},
{
    "assertion": "Perimeter ( CONICSECTION: m ) equals Area ( CONICSECTION: F )",
    "id": 2499,
    "declarations": "m: CONICSECTION; F: CONICSECTION",
    "facts": "Perimeter(m) = Area(F)"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: w ) ) equals POINT: w",
    "id": 2500,
    "declarations": "w: ELLIPSE; w: POINT",
    "facts": "Endpoint(MajorAxis(w)) = w"
},
{
    "assertion": "TangentOfPoint ( Orthocenter ( TRIANGLE: I ), CURVE: a ) equals LINE: h",
    "id": 2501,
    "declarations": "I: TRIANGLE; a: CURVE; h: LINE",
    "facts": "TangentOfPoint(Orthocenter(I), a) = h"
},
{
    "assertion": "InterceptChord ( LINE: N, CONICSECTION: M ) equals LINESEGMENT: d",
    "id": 2502,
    "declarations": "N: LINE; M: CONICSECTION; d: LINESEGMENT",
    "facts": "InterceptChord(N, M) = d"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: T ) equals NUMBER: 61",
    "id": 2503,
    "declarations": "T: CONICSECTION; 61: NUMBER",
    "facts": "HalfFocalLength(T) = 61"
},
{
    "assertion": "LeftVertex ( CONICSECTION: P ) equals POINT: e",
    "id": 2504,
    "declarations": "P: CONICSECTION; e: POINT",
    "facts": "LeftVertex(P) = e"
},
{
    "assertion": "Min ( NUMBER: -33 ) equals lg ( NUMBER: -33 )",
    "id": 2505,
    "declarations": "-33: NUMBER; -33: NUMBER",
    "facts": "Min(-33) = lg(-33)"
},
{
    "assertion": "LineSegmentOf ( Circumcenter ( TRIANGLE: u ), POINT: k ) equals MinorAxis ( ELLIPSE: O )",
    "id": 2506,
    "declarations": "u: TRIANGLE; k: POINT; O: ELLIPSE",
    "facts": "LineSegmentOf(Circumcenter(u), k) = MinorAxis(O)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: F, CIRCLE: r ) equals BOOL: True",
    "id": 2507,
    "declarations": "F: CIRCLE; r: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(F, r) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: A ) equals PerpendicularBisector ( RealAxis ( ELLIPSE: l ) )",
    "id": 2508,
    "declarations": "A: CONICSECTION; l: ELLIPSE",
    "facts": "RightDirectrix(A) = PerpendicularBisector(RealAxis(l))"
},
{
    "assertion": "Perimeter ( CONICSECTION: F ) equals NUMBER: 7",
    "id": 2509,
    "declarations": "F: CONICSECTION; 7: NUMBER",
    "facts": "Perimeter(F) = 7"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: V ) equals PerpendicularBisector ( MinorAxis ( ELLIPSE: Y ) )",
    "id": 2510,
    "declarations": "V: CONICSECTION; Y: ELLIPSE",
    "facts": "RightDirectrix(V) = PerpendicularBisector(MinorAxis(Y))"
},
{
    "assertion": "Projection ( LowerFocus ( CONICSECTION: z ), PerpendicularBisector ( LINESEGMENT: R ) ) equals Orthocenter ( TRIANGLE: j )",
    "id": 2511,
    "declarations": "z: CONICSECTION; R: LINESEGMENT; j: TRIANGLE",
    "facts": "Projection(LowerFocus(z), PerpendicularBisector(R)) = Orthocenter(j)"
},
{
    "assertion": "VectorOf ( Incenter ( TRIANGLE: l ), POINT: s ) equals VECTOR: c",
    "id": 2512,
    "declarations": "l: TRIANGLE; s: POINT; c: VECTOR",
    "facts": "VectorOf(Incenter(l), s) = c"
},
{
    "assertion": "Focus ( CONICSECTION: r ) equals UpperFocus ( CONICSECTION: X )",
    "id": 2513,
    "declarations": "r: CONICSECTION; X: CONICSECTION",
    "facts": "Focus(r) = UpperFocus(X)"
},
{
    "assertion": "Abs ( LINESEGMENT: x ) equals NUMBER: -99",
    "id": 2514,
    "declarations": "x: LINESEGMENT; -99: NUMBER",
    "facts": "Abs(x) = -99"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: l ) equals AXIS: xAxis",
    "id": 2515,
    "declarations": "l: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(l) = xAxis"
},
{
    "assertion": "MinorAxis ( ELLIPSE: K ) equals LINESEGMENT: M",
    "id": 2516,
    "declarations": "K: ELLIPSE; M: LINESEGMENT",
    "facts": "MinorAxis(K) = M"
},
{
    "assertion": "Perimeter ( CONICSECTION: h ) equals NUMBER: 58",
    "id": 2517,
    "declarations": "h: CONICSECTION; 58: NUMBER",
    "facts": "Perimeter(h) = 58"
},
{
    "assertion": "Radius ( CIRCLE: U ) equals HalfFocalLength ( CONICSECTION: K )",
    "id": 2518,
    "declarations": "U: CIRCLE; K: CONICSECTION",
    "facts": "Radius(U) = HalfFocalLength(K)"
},
{
    "assertion": "Incenter ( TRIANGLE: S ) equals POINT: D",
    "id": 2519,
    "declarations": "S: TRIANGLE; D: POINT",
    "facts": "Incenter(S) = D"
},
{
    "assertion": "CircumCircle ( TRIANGLE: L ) equals CIRCLE: q",
    "id": 2520,
    "declarations": "L: TRIANGLE; q: CIRCLE",
    "facts": "CircumCircle(L) = q"
},
{
    "assertion": "Center ( CONICSECTION: M ) equals LowerVertex ( CONICSECTION: G )",
    "id": 2521,
    "declarations": "M: CONICSECTION; G: CONICSECTION",
    "facts": "Center(M) = LowerVertex(G)"
},
{
    "assertion": "Area ( CONICSECTION: K ) equals InterReciprocal ( Min ( NUMBER: 82 ) )",
    "id": 2522,
    "declarations": "K: CONICSECTION; 82: NUMBER",
    "facts": "Area(K) = InterReciprocal(Min(82))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: a ) equals RightVertex ( CONICSECTION: T )",
    "id": 2523,
    "declarations": "a: CONICSECTION; T: CONICSECTION",
    "facts": "UpperVertex(a) = RightVertex(T)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: k ) equals LINE: w",
    "id": 2524,
    "declarations": "k: CONICSECTION; w: LINE",
    "facts": "RightDirectrix(k) = w"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: x ) equals NUMBER: 21",
    "id": 2525,
    "declarations": "x: CONICSECTION; 21: NUMBER",
    "facts": "HalfFocalLength(x) = 21"
},
{
    "assertion": "Endpoint ( LINESEGMENT: A ) equals Orthocenter ( TRIANGLE: l )",
    "id": 2526,
    "declarations": "A: LINESEGMENT; l: TRIANGLE",
    "facts": "Endpoint(A) = Orthocenter(l)"
},
{
    "assertion": "sqrt ( Length ( LINESEGMENT: J ) ) equals Distance ( RightFocus ( CONICSECTION: R ), POINT: X )",
    "id": 2527,
    "declarations": "J: LINESEGMENT; R: CONICSECTION; X: POINT",
    "facts": "sqrt(Length(J)) = Distance(RightFocus(R), X)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: g ) equals lg ( XCoordinate ( UpperVertex ( CONICSECTION: E ) ) )",
    "id": 2528,
    "declarations": "g: CONICSECTION; E: CONICSECTION",
    "facts": "Eccentricity(g) = lg(XCoordinate(UpperVertex(E)))"
},
{
    "assertion": "Area ( CONICSECTION: o ) equals NUMBER: 8",
    "id": 2529,
    "declarations": "o: CONICSECTION; 8: NUMBER",
    "facts": "Area(o) = 8"
},
{
    "assertion": "LowerVertex ( CONICSECTION: l ) equals RightVertex ( CONICSECTION: t )",
    "id": 2530,
    "declarations": "l: CONICSECTION; t: CONICSECTION",
    "facts": "LowerVertex(l) = RightVertex(t)"
},
{
    "assertion": "Slope ( LINE: T ) equals Area ( CONICSECTION: I )",
    "id": 2531,
    "declarations": "T: LINE; I: CONICSECTION",
    "facts": "Slope(T) = Area(I)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: N ) equals LINE: a",
    "id": 2532,
    "declarations": "N: HYPERBOLA; a: LINE",
    "facts": "Asymptote(N) = a"
},
{
    "assertion": "UpperVertex ( CONICSECTION: q ) equals POINT: R",
    "id": 2533,
    "declarations": "q: CONICSECTION; R: POINT",
    "facts": "UpperVertex(q) = R"
},
{
    "assertion": "IsTangent ( OverlappingLine ( LINESEGMENT: O ), CONICSECTION: O ) equals BOOL: True",
    "id": 2534,
    "declarations": "O: LINESEGMENT; O: CONICSECTION; True: BOOL",
    "facts": "IsTangent(OverlappingLine(O), O) = True"
},
{
    "assertion": "TangentOfPoint ( FootPoint ( LINE: t, LINE: T ), CURVE: E ) equals LINE: V",
    "id": 2535,
    "declarations": "t: LINE; T: LINE; E: CURVE; V: LINE",
    "facts": "TangentOfPoint(FootPoint(t, T), E) = V"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: z ) ) equals Abs ( LINESEGMENT: M )",
    "id": 2536,
    "declarations": "z: CONICSECTION; M: LINESEGMENT",
    "facts": "Quadrant(LeftVertex(z)) = Abs(M)"
},
{
    "assertion": "InterReciprocal ( Intercept ( LINE: e, AXIS: yAxis ) ) equals HalfFocalLength ( CONICSECTION: c )",
    "id": 2537,
    "declarations": "e: LINE; yAxis: AXIS; c: CONICSECTION",
    "facts": "InterReciprocal(Intercept(e, yAxis)) = HalfFocalLength(c)"
},
{
    "assertion": "TriangleOf ( Circumcenter ( TRIANGLE: S ), POINT: y, Center ( CONICSECTION: H ) ) equals TRIANGLE: c",
    "id": 2538,
    "declarations": "S: TRIANGLE; y: POINT; H: CONICSECTION; c: TRIANGLE",
    "facts": "TriangleOf(Circumcenter(S), y, Center(H)) = c"
},
{
    "assertion": "Negation ( PerpendicularBisector ( LINESEGMENT: F ) equals LINE: H ) equals BOOL: False",
    "id": 2539,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "YCoordinate ( LeftFocus ( CONICSECTION: Q ) ) equals Perimeter ( CONICSECTION: I )",
    "id": 2540,
    "declarations": "Q: CONICSECTION; I: CONICSECTION",
    "facts": "YCoordinate(LeftFocus(Q)) = Perimeter(I)"
},
{
    "assertion": "Directrix ( CONICSECTION: C ) equals LINE: j",
    "id": 2541,
    "declarations": "C: CONICSECTION; j: LINE",
    "facts": "Directrix(C) = j"
},
{
    "assertion": "LeftFocus ( CONICSECTION: f ) equals POINT: q",
    "id": 2542,
    "declarations": "f: CONICSECTION; q: POINT",
    "facts": "LeftFocus(f) = q"
},
{
    "assertion": "Expression ( CURVE: K ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 2543,
    "declarations": "K: CURVE; y*space=*spacesin(x): EXPRESSION",
    "facts": "Expression(K) = y*space=*spacesin(x)"
},
{
    "assertion": "InterReciprocal ( NUMBER: -57 ) equals Quadrant ( Projection ( Circumcenter ( TRIANGLE: Y ), PerpendicularBisector ( LINESEGMENT: o ) ) )",
    "id": 2544,
    "declarations": "-57: NUMBER; Y: TRIANGLE; o: LINESEGMENT",
    "facts": "InterReciprocal(-57) = Quadrant(Projection(Circumcenter(Y), PerpendicularBisector(o)))"
},
{
    "assertion": "RightVertex ( CONICSECTION: o ) equals POINT: V",
    "id": 2545,
    "declarations": "o: CONICSECTION; V: POINT",
    "facts": "RightVertex(o) = V"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: g ) ) equals Abs ( LINESEGMENT: P )",
    "id": 2546,
    "declarations": "g: TRIANGLE; P: LINESEGMENT",
    "facts": "Diameter(CircumCircle(g)) = Abs(P)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: e ) equals POINT: E",
    "id": 2547,
    "declarations": "e: CONICSECTION; E: POINT",
    "facts": "LeftVertex(e) = E"
},
{
    "assertion": "Negation ( LeftPart ( HYPERBOLA: u ) equals CURVE: n ) equals BOOL: True",
    "id": 2548,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Inclination ( LINE: u ) equals NUMBER: 27",
    "id": 2549,
    "declarations": "u: LINE; 27: NUMBER",
    "facts": "Inclination(u) = 27"
},
{
    "assertion": "Locus ( POINT: y ) equals CURVE: T",
    "id": 2550,
    "declarations": "y: POINT; T: CURVE",
    "facts": "Locus(y) = T"
},
{
    "assertion": "FocalLength ( CONICSECTION: I ) equals NUMBER: -69",
    "id": 2551,
    "declarations": "I: CONICSECTION; -69: NUMBER",
    "facts": "FocalLength(I) = -69"
},
{
    "assertion": "Orthocenter ( TRIANGLE: j ) equals Projection ( POINT: Q, LINE: D )",
    "id": 2552,
    "declarations": "j: TRIANGLE; Q: POINT; D: LINE",
    "facts": "Orthocenter(j) = Projection(Q, D)"
},
{
    "assertion": "OverlappingLine ( ImaginaryAxis ( ELLIPSE: o ) ) equals LINE: L",
    "id": 2553,
    "declarations": "o: ELLIPSE; L: LINE",
    "facts": "OverlappingLine(ImaginaryAxis(o)) = L"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: g ) equals LINE: X",
    "id": 2554,
    "declarations": "g: LINESEGMENT; X: LINE",
    "facts": "PerpendicularBisector(g) = X"
},
{
    "assertion": "Negation ( RightVertex ( CONICSECTION: B ) equals RightVertex ( CONICSECTION: s ) ) equals BOOL: True",
    "id": 2555,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Radius ( CIRCLE: O ) equals FocalLength ( CONICSECTION: o )",
    "id": 2556,
    "declarations": "O: CIRCLE; o: CONICSECTION",
    "facts": "Radius(O) = FocalLength(o)"
},
{
    "assertion": "Directrix ( CONICSECTION: W ) equals LINE: s",
    "id": 2557,
    "declarations": "W: CONICSECTION; s: LINE",
    "facts": "Directrix(W) = s"
},
{
    "assertion": "Incenter ( TRIANGLE: n ) equals Circumcenter ( TRIANGLE: C )",
    "id": 2558,
    "declarations": "n: TRIANGLE; C: TRIANGLE",
    "facts": "Incenter(n) = Circumcenter(C)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: r ) equals POINT: o",
    "id": 2559,
    "declarations": "r: CONICSECTION; o: POINT",
    "facts": "LowerFocus(r) = o"
},
{
    "assertion": "LineOf ( Projection ( Incenter ( TRIANGLE: B ), TangentOnPoint ( LowerVertex ( CONICSECTION: Y ), CURVE: J ) ), POINT: k ) equals LINE: B",
    "id": 2560,
    "declarations": "B: TRIANGLE; Y: CONICSECTION; J: CURVE; k: POINT; B: LINE",
    "facts": "LineOf(Projection(Incenter(B), TangentOnPoint(LowerVertex(Y), J)), k) = B"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Q ) equals POINT: N",
    "id": 2561,
    "declarations": "Q: TRIANGLE; N: POINT",
    "facts": "Orthocenter(Q) = N"
},
{
    "assertion": "VectorOf ( POINT: o, Incenter ( TRIANGLE: e ) ) equals VECTOR: x",
    "id": 2562,
    "declarations": "o: POINT; e: TRIANGLE; x: VECTOR",
    "facts": "VectorOf(o, Incenter(e)) = x"
},
{
    "assertion": "LeftPart ( HYPERBOLA: r ) equals CURVE: q",
    "id": 2563,
    "declarations": "r: HYPERBOLA; q: CURVE",
    "facts": "LeftPart(r) = q"
},
{
    "assertion": "IsPerpendicular ( OverlappingLine ( LINESEGMENT: K ), PerpendicularBisector ( LINESEGMENT: i ) ) equals BOOL: False",
    "id": 2564,
    "declarations": "K: LINESEGMENT; i: LINESEGMENT; False: BOOL",
    "facts": "IsPerpendicular(OverlappingLine(K), PerpendicularBisector(i)) = False"
},
{
    "assertion": "Diameter ( CIRCLE: A ) equals NUMBER: -44",
    "id": 2565,
    "declarations": "A: CIRCLE; -44: NUMBER",
    "facts": "Diameter(A) = -44"
},
{
    "assertion": "CircumCircle ( TRIANGLE: g ) equals CIRCLE: T",
    "id": 2566,
    "declarations": "g: TRIANGLE; T: CIRCLE",
    "facts": "CircumCircle(g) = T"
},
{
    "assertion": "Radius ( CIRCLE: e ) equals NUMBER: -55",
    "id": 2567,
    "declarations": "e: CIRCLE; -55: NUMBER",
    "facts": "Radius(e) = -55"
},
{
    "assertion": "InterReciprocal ( Abs ( MinorAxis ( ELLIPSE: d ) ) ) equals NUMBER: -98",
    "id": 2568,
    "declarations": "d: ELLIPSE; -98: NUMBER",
    "facts": "InterReciprocal(Abs(MinorAxis(d))) = -98"
},
{
    "assertion": "PointOnCurve ( POINT: f, CURVE: a ) equals BOOL: True",
    "id": 2569,
    "declarations": "f: POINT; a: CURVE; True: BOOL",
    "facts": "PointOnCurve(f, a) = True"
},
{
    "assertion": "Negation ( InterReciprocal ( NUMBER: 25 ) equals FocalLength ( CONICSECTION: m ) ) equals BOOL: False",
    "id": 2570,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Intercept ( LINE: c, AXIS: yAxis ) equals XCoordinate ( UpperVertex ( CONICSECTION: X ) )",
    "id": 2571,
    "declarations": "c: LINE; yAxis: AXIS; X: CONICSECTION",
    "facts": "Intercept(c, yAxis) = XCoordinate(UpperVertex(X))"
},
{
    "assertion": "XCoordinate ( POINT: Y ) equals NUMBER: 59",
    "id": 2572,
    "declarations": "Y: POINT; 59: NUMBER",
    "facts": "XCoordinate(Y) = 59"
},
{
    "assertion": "AngleOf ( RightVertex ( CONICSECTION: d ), LowerVertex ( CONICSECTION: m ), POINT: Q ) equals AngleOf ( UpperVertex ( CONICSECTION: I ), MidPoint ( InterceptChord ( LINE: A, CONICSECTION: e ) ), Orthocenter ( TRIANGLE: T ) )",
    "id": 2573,
    "declarations": "d: CONICSECTION; m: CONICSECTION; Q: POINT; I: CONICSECTION; A: LINE; e: CONICSECTION; T: TRIANGLE",
    "facts": "AngleOf(RightVertex(d), LowerVertex(m), Q) = AngleOf(UpperVertex(I), MidPoint(InterceptChord(A, e)), Orthocenter(T))"
},
{
    "assertion": "TangentOnPoint ( MidPoint ( LINESEGMENT: v ), CURVE: t ) equals LINE: A",
    "id": 2574,
    "declarations": "v: LINESEGMENT; t: CURVE; A: LINE",
    "facts": "TangentOnPoint(MidPoint(v), t) = A"
},
{
    "assertion": "IsPerpendicular ( LINE: m, LINE: G ) equals BOOL: False",
    "id": 2575,
    "declarations": "m: LINE; G: LINE; False: BOOL",
    "facts": "IsPerpendicular(m, G) = False"
},
{
    "assertion": "PerpendicularBisector ( RealAxis ( ELLIPSE: s ) ) equals LeftDirectrix ( CONICSECTION: V )",
    "id": 2576,
    "declarations": "s: ELLIPSE; V: CONICSECTION",
    "facts": "PerpendicularBisector(RealAxis(s)) = LeftDirectrix(V)"
},
{
    "assertion": "sqrt ( NUMBER: -34 ) equals lg ( InterReciprocal ( HalfFocalLength ( CONICSECTION: B ) ) )",
    "id": 2577,
    "declarations": "-34: NUMBER; B: CONICSECTION",
    "facts": "sqrt(-34) = lg(InterReciprocal(HalfFocalLength(B)))"
},
{
    "assertion": "IsOutTangent ( CIRCLE: B, CIRCLE: Y ) equals BOOL: False",
    "id": 2578,
    "declarations": "B: CIRCLE; Y: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(B, Y) = False"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: A ) equals LINESEGMENT: E",
    "id": 2579,
    "declarations": "A: ELLIPSE; E: LINESEGMENT",
    "facts": "ImaginaryAxis(A) = E"
},
{
    "assertion": "YCoordinate ( UpperFocus ( CONICSECTION: I ) ) equals NUMBER: 90",
    "id": 2580,
    "declarations": "I: CONICSECTION; 90: NUMBER",
    "facts": "YCoordinate(UpperFocus(I)) = 90"
},
{
    "assertion": "InterReciprocal ( Length ( LINESEGMENT: B ) ) equals Area ( CONICSECTION: b )",
    "id": 2581,
    "declarations": "B: LINESEGMENT; b: CONICSECTION",
    "facts": "InterReciprocal(Length(B)) = Area(b)"
},
{
    "assertion": "Incenter ( TRIANGLE: a ) equals LowerVertex ( CONICSECTION: T )",
    "id": 2582,
    "declarations": "a: TRIANGLE; T: CONICSECTION",
    "facts": "Incenter(a) = LowerVertex(T)"
},
{
    "assertion": "Vertex ( CONICSECTION: g ) equals POINT: e",
    "id": 2583,
    "declarations": "g: CONICSECTION; e: POINT",
    "facts": "Vertex(g) = e"
},
{
    "assertion": "Slope ( LINE: W ) equals Abs ( LINESEGMENT: g )",
    "id": 2584,
    "declarations": "W: LINE; g: LINESEGMENT",
    "facts": "Slope(W) = Abs(g)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: N ) equals InterReciprocal ( Diameter ( CIRCLE: T ) )",
    "id": 2585,
    "declarations": "N: CONICSECTION; T: CIRCLE",
    "facts": "HalfFocalLength(N) = InterReciprocal(Diameter(T))"
},
{
    "assertion": "LineOf ( POINT: I, RightFocus ( CONICSECTION: z ) ) equals LINE: m",
    "id": 2586,
    "declarations": "I: POINT; z: CONICSECTION; m: LINE",
    "facts": "LineOf(I, RightFocus(z)) = m"
},
{
    "assertion": "RealAxis ( ELLIPSE: y ) equals LINESEGMENT: f",
    "id": 2587,
    "declarations": "y: ELLIPSE; f: LINESEGMENT",
    "facts": "RealAxis(y) = f"
},
{
    "assertion": "ApplyUnit ( NUMBER: -69, DEGREESTR: degree )",
    "id": 2588,
    "declarations": "-69: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-69, degree) = None"
},
{
    "assertion": "InterceptChord ( LINE: j, CONICSECTION: p ) equals RealAxis ( ELLIPSE: H )",
    "id": 2589,
    "declarations": "j: LINE; p: CONICSECTION; H: ELLIPSE",
    "facts": "InterceptChord(j, p) = RealAxis(H)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: x ) equals sqrt ( HalfFocalLength ( CONICSECTION: i ) )",
    "id": 2590,
    "declarations": "x: CONICSECTION; i: CONICSECTION",
    "facts": "HalfFocalLength(x) = sqrt(HalfFocalLength(i))"
},
{
    "assertion": "Radius ( CIRCLE: g ) equals Area ( CONICSECTION: z )",
    "id": 2591,
    "declarations": "g: CIRCLE; z: CONICSECTION",
    "facts": "Radius(g) = Area(z)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: L ) equals XCoordinate ( POINT: D )",
    "id": 2592,
    "declarations": "L: CONICSECTION; D: POINT",
    "facts": "HalfFocalLength(L) = XCoordinate(D)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: M ) equals LeftFocus ( CONICSECTION: Y )",
    "id": 2593,
    "declarations": "M: TRIANGLE; Y: CONICSECTION",
    "facts": "Circumcenter(M) = LeftFocus(Y)"
},
{
    "assertion": "Focus ( CONICSECTION: F ) equals LowerFocus ( CONICSECTION: p )",
    "id": 2594,
    "declarations": "F: CONICSECTION; p: CONICSECTION",
    "facts": "Focus(F) = LowerFocus(p)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: D ) equals NUMBER: 72",
    "id": 2595,
    "declarations": "D: CONICSECTION; 72: NUMBER",
    "facts": "Eccentricity(D) = 72"
},
{
    "assertion": "Orthocenter ( TRIANGLE: o ) equals RightFocus ( CONICSECTION: q )",
    "id": 2596,
    "declarations": "o: TRIANGLE; q: CONICSECTION",
    "facts": "Orthocenter(o) = RightFocus(q)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: t ) equals POINT: L",
    "id": 2597,
    "declarations": "t: CONICSECTION; L: POINT",
    "facts": "LowerVertex(t) = L"
},
{
    "assertion": "LocusEquation ( Center ( CONICSECTION: u ) ) equals EXPRESSION: y*space=*spacex^3*space-*space4*x",
    "id": 2598,
    "declarations": "u: CONICSECTION; y*space=*spacex^3*space-*space4*x: EXPRESSION",
    "facts": "LocusEquation(Center(u)) = y*space=*spacex^3*space-*space4*x"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: o ) equals LINE: X",
    "id": 2599,
    "declarations": "o: LINESEGMENT; X: LINE",
    "facts": "OverlappingLine(o) = X"
},
{
    "assertion": "Area ( CONICSECTION: p ) equals Intercept ( LINE: P, AXIS: yAxis )",
    "id": 2600,
    "declarations": "p: CONICSECTION; P: LINE; yAxis: AXIS",
    "facts": "Area(p) = Intercept(P, yAxis)"
},
{
    "assertion": "FocalLength ( CONICSECTION: Y ) equals Slope ( LINE: K )",
    "id": 2601,
    "declarations": "Y: CONICSECTION; K: LINE",
    "facts": "FocalLength(Y) = Slope(K)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: m ) equals NUMBER: 19",
    "id": 2602,
    "declarations": "m: CONICSECTION; 19: NUMBER",
    "facts": "Eccentricity(m) = 19"
},
{
    "assertion": "LocusEquation ( RightFocus ( CONICSECTION: r ) ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 2603,
    "declarations": "r: CONICSECTION; y*space=*spacesin(x): EXPRESSION",
    "facts": "LocusEquation(RightFocus(r)) = y*space=*spacesin(x)"
},
{
    "assertion": "Negation ( LowerVertex ( CONICSECTION: p ) equals POINT: Q ) equals BOOL: False",
    "id": 2604,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "ApplyUnit ( Inclination ( RightDirectrix ( CONICSECTION: Z ) ), DEGREESTR: degree )",
    "id": 2605,
    "declarations": "Z: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Inclination(RightDirectrix(Z)), degree) = None"
},
{
    "assertion": "LineSegmentOf ( Projection ( POINT: b, LINE: F ), RightVertex ( CONICSECTION: d ) ) equals LINESEGMENT: o",
    "id": 2606,
    "declarations": "b: POINT; F: LINE; d: CONICSECTION; o: LINESEGMENT",
    "facts": "LineSegmentOf(Projection(b, F), RightVertex(d)) = o"
},
{
    "assertion": "PointOnCurve ( LowerVertex ( CONICSECTION: I ), CURVE: l ) equals BOOL: True",
    "id": 2607,
    "declarations": "I: CONICSECTION; l: CURVE; True: BOOL",
    "facts": "PointOnCurve(LowerVertex(I), l) = True"
},
{
    "assertion": "FootPoint ( LINE: z, LINE: l ) equals POINT: C",
    "id": 2608,
    "declarations": "z: LINE; l: LINE; C: POINT",
    "facts": "FootPoint(z, l) = C"
},
{
    "assertion": "LocusEquation ( POINT: Q ) equals EXPRESSION: x^2*space+*space(y*space-*space2)^2*space=*space4",
    "id": 2609,
    "declarations": "Q: POINT; x^2*space+*space(y*space-*space2)^2*space=*space4: EXPRESSION",
    "facts": "LocusEquation(Q) = x^2*space+*space(y*space-*space2)^2*space=*space4"
},
{
    "assertion": "Max ( NUMBER: 74 ) equals NUMBER: -51",
    "id": 2610,
    "declarations": "74: NUMBER; -51: NUMBER",
    "facts": "Max(74) = -51"
},
{
    "assertion": "LineSegmentOf ( Center ( CONICSECTION: U ), POINT: Q ) equals LINESEGMENT: J",
    "id": 2611,
    "declarations": "U: CONICSECTION; Q: POINT; J: LINESEGMENT",
    "facts": "LineSegmentOf(Center(U), Q) = J"
},
{
    "assertion": "Vertex ( CONICSECTION: L ) equals LowerVertex ( CONICSECTION: t )",
    "id": 2612,
    "declarations": "L: CONICSECTION; t: CONICSECTION",
    "facts": "Vertex(L) = LowerVertex(t)"
},
{
    "assertion": "Negation ( IsInscribedCircle ( CIRCLE: q, TRIANGLE: z ) equals BOOL: True ) equals BOOL: True",
    "id": 2613,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Eccentricity ( CONICSECTION: v ) equals Radius ( CIRCLE: y )",
    "id": 2614,
    "declarations": "v: CONICSECTION; y: CIRCLE",
    "facts": "Eccentricity(v) = Radius(y)"
},
{
    "assertion": "RealAxis ( ELLIPSE: p ) equals LINESEGMENT: a",
    "id": 2615,
    "declarations": "p: ELLIPSE; a: LINESEGMENT",
    "facts": "RealAxis(p) = a"
},
{
    "assertion": "Max ( Area ( CONICSECTION: U ) ) equals NUMBER: -16",
    "id": 2616,
    "declarations": "U: CONICSECTION; -16: NUMBER",
    "facts": "Max(Area(U)) = -16"
},
{
    "assertion": "MajorAxis ( ELLIPSE: v ) equals MajorAxis ( ELLIPSE: V )",
    "id": 2617,
    "declarations": "v: ELLIPSE; V: ELLIPSE",
    "facts": "MajorAxis(v) = MajorAxis(V)"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: d ) ) equals XCoordinate ( POINT: A )",
    "id": 2618,
    "declarations": "d: TRIANGLE; A: POINT",
    "facts": "Diameter(CircumCircle(d)) = XCoordinate(A)"
},
{
    "assertion": "Max ( NUMBER: -74 ) equals Distance ( LeftVertex ( CONICSECTION: h ), RightFocus ( CONICSECTION: p ) )",
    "id": 2619,
    "declarations": "-74: NUMBER; h: CONICSECTION; p: CONICSECTION",
    "facts": "Max(-74) = Distance(LeftVertex(h), RightFocus(p))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: d ) equals POINT: z",
    "id": 2620,
    "declarations": "d: CONICSECTION; z: POINT",
    "facts": "UpperFocus(d) = z"
},
{
    "assertion": "Length ( LINESEGMENT: o ) equals NUMBER: 64",
    "id": 2621,
    "declarations": "o: LINESEGMENT; 64: NUMBER",
    "facts": "Length(o) = 64"
},
{
    "assertion": "CircumCircle ( TRIANGLE: a ) equals CIRCLE: I",
    "id": 2622,
    "declarations": "a: TRIANGLE; I: CIRCLE",
    "facts": "CircumCircle(a) = I"
},
{
    "assertion": "XCoordinate ( LowerFocus ( CONICSECTION: H ) ) equals Area ( CONICSECTION: C )",
    "id": 2623,
    "declarations": "H: CONICSECTION; C: CONICSECTION",
    "facts": "XCoordinate(LowerFocus(H)) = Area(C)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: h ) equals LeftVertex ( CONICSECTION: t )",
    "id": 2624,
    "declarations": "h: CONICSECTION; t: CONICSECTION",
    "facts": "UpperVertex(h) = LeftVertex(t)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: u ) equals POINT: p",
    "id": 2625,
    "declarations": "u: CONICSECTION; p: POINT",
    "facts": "UpperVertex(u) = p"
},
{
    "assertion": "DotProduct ( VECTOR: S, VECTOR: V ) equals Area ( CONICSECTION: c )",
    "id": 2626,
    "declarations": "S: VECTOR; V: VECTOR; c: CONICSECTION",
    "facts": "DotProduct(S, V) = Area(c)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: T, TriangleOf ( UpperVertex ( CONICSECTION: X ), POINT: n, UpperVertex ( CONICSECTION: I ) ) ) equals BOOL: True",
    "id": 2627,
    "declarations": "T: CIRCLE; X: CONICSECTION; n: POINT; I: CONICSECTION; True: BOOL",
    "facts": "IsCircumCircle(T, TriangleOf(UpperVertex(X), n, UpperVertex(I))) = True"
},
{
    "assertion": "RightFocus ( CONICSECTION: s ) equals RightFocus ( CONICSECTION: P )",
    "id": 2628,
    "declarations": "s: CONICSECTION; P: CONICSECTION",
    "facts": "RightFocus(s) = RightFocus(P)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: y ) equals CURVE: Y",
    "id": 2629,
    "declarations": "y: HYPERBOLA; Y: CURVE",
    "facts": "LeftPart(y) = Y"
},
{
    "assertion": "InterReciprocal ( Area ( CONICSECTION: y ) ) equals Abs ( LINESEGMENT: A )",
    "id": 2630,
    "declarations": "y: CONICSECTION; A: LINESEGMENT",
    "facts": "InterReciprocal(Area(y)) = Abs(A)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: x ) equals POINT: m",
    "id": 2631,
    "declarations": "x: CONICSECTION; m: POINT",
    "facts": "LowerVertex(x) = m"
},
{
    "assertion": "YCoordinate ( POINT: s ) equals sqrt ( InterReciprocal ( NUMBER: 8 ) )",
    "id": 2632,
    "declarations": "s: POINT; 8: NUMBER",
    "facts": "YCoordinate(s) = sqrt(InterReciprocal(8))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: p ) equals LeftFocus ( CONICSECTION: K )",
    "id": 2633,
    "declarations": "p: CONICSECTION; K: CONICSECTION",
    "facts": "LeftVertex(p) = LeftFocus(K)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: m, TRIANGLE: H ) equals BOOL: True",
    "id": 2634,
    "declarations": "m: CIRCLE; H: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(m, H) = True"
},
{
    "assertion": "Min ( NUMBER: -97 ) equals Inclination ( LINE: m )",
    "id": 2635,
    "declarations": "-97: NUMBER; m: LINE",
    "facts": "Min(-97) = Inclination(m)"
},
{
    "assertion": "Diameter ( CIRCLE: k ) equals NUMBER: 43",
    "id": 2636,
    "declarations": "k: CIRCLE; 43: NUMBER",
    "facts": "Diameter(k) = 43"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: D ) equals LINE: D",
    "id": 2637,
    "declarations": "D: LINESEGMENT; D: LINE",
    "facts": "OverlappingLine(D) = D"
},
{
    "assertion": "Quadrant ( RightVertex ( CONICSECTION: J ) ) equals NUMBER: 57",
    "id": 2639,
    "declarations": "J: CONICSECTION; 57: NUMBER",
    "facts": "Quadrant(RightVertex(J)) = 57"
},
{
    "assertion": "Orthocenter ( TRIANGLE: W ) equals Orthocenter ( TRIANGLE: O )",
    "id": 2640,
    "declarations": "W: TRIANGLE; O: TRIANGLE",
    "facts": "Orthocenter(W) = Orthocenter(O)"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: o ) ) equals XCoordinate ( POINT: u )",
    "id": 2641,
    "declarations": "o: CONICSECTION; u: POINT",
    "facts": "Inclination(LeftDirectrix(o)) = XCoordinate(u)"
},
{
    "assertion": "Inclination ( LINE: Z ) equals Radius ( CIRCLE: Z )",
    "id": 2642,
    "declarations": "Z: LINE; Z: CIRCLE",
    "facts": "Inclination(Z) = Radius(Z)"
},
{
    "assertion": "NumIntersection ( CURVE: H, CURVE: y ) equals NUMBER: 46",
    "id": 2643,
    "declarations": "H: CURVE; y: CURVE; 46: NUMBER",
    "facts": "NumIntersection(H, y) = 46"
},
{
    "assertion": "Projection ( RightFocus ( CONICSECTION: o ), LINE: Y ) equals Center ( CONICSECTION: Q )",
    "id": 2644,
    "declarations": "o: CONICSECTION; Y: LINE; Q: CONICSECTION",
    "facts": "Projection(RightFocus(o), Y) = Center(Q)"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( LINESEGMENT: e ) ) equals Slope ( LINE: u )",
    "id": 2645,
    "declarations": "e: LINESEGMENT; u: LINE",
    "facts": "Inclination(PerpendicularBisector(e)) = Slope(u)"
},
{
    "assertion": "RightVertex ( CONICSECTION: Y ) equals LeftVertex ( CONICSECTION: a )",
    "id": 2646,
    "declarations": "Y: CONICSECTION; a: CONICSECTION",
    "facts": "RightVertex(Y) = LeftVertex(a)"
},
{
    "assertion": "VectorOf ( LeftFocus ( CONICSECTION: B ), RightFocus ( CONICSECTION: Z ) ) equals VECTOR: P",
    "id": 2647,
    "declarations": "B: CONICSECTION; Z: CONICSECTION; P: VECTOR",
    "facts": "VectorOf(LeftFocus(B), RightFocus(Z)) = P"
},
{
    "assertion": "Focus ( CONICSECTION: w ) equals POINT: q",
    "id": 2648,
    "declarations": "w: CONICSECTION; q: POINT",
    "facts": "Focus(w) = q"
},
{
    "assertion": "LeftPart ( HYPERBOLA: R ) equals CURVE: B",
    "id": 2650,
    "declarations": "R: HYPERBOLA; B: CURVE",
    "facts": "LeftPart(R) = B"
},
{
    "assertion": "IsInTangent ( CIRCLE: U, CIRCLE: t ) equals BOOL: False",
    "id": 2651,
    "declarations": "U: CIRCLE; t: CIRCLE; False: BOOL",
    "facts": "IsInTangent(U, t) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: N ) equals TangentOnPoint ( Circumcenter ( TRIANGLE: p ), CURVE: Q )",
    "id": 2652,
    "declarations": "N: CONICSECTION; p: TRIANGLE; Q: CURVE",
    "facts": "Directrix(N) = TangentOnPoint(Circumcenter(p), Q)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: v, TRIANGLE: L ) equals BOOL: False",
    "id": 2653,
    "declarations": "v: CIRCLE; L: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(v, L) = False"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: D ) ) equals Diameter ( CIRCLE: q )",
    "id": 2654,
    "declarations": "D: CONICSECTION; q: CIRCLE",
    "facts": "Slope(RightDirectrix(D)) = Diameter(q)"
},
{
    "assertion": "LineOf ( POINT: F, POINT: G ) equals LINE: w",
    "id": 2655,
    "declarations": "F: POINT; G: POINT; w: LINE",
    "facts": "LineOf(F, G) = w"
},
{
    "assertion": "Min ( Radius ( CIRCLE: b ) ) equals NUMBER: -95",
    "id": 2656,
    "declarations": "b: CIRCLE; -95: NUMBER",
    "facts": "Min(Radius(b)) = -95"
},
{
    "assertion": "LineOf ( LowerFocus ( CONICSECTION: P ), POINT: w ) equals LINE: d",
    "id": 2657,
    "declarations": "P: CONICSECTION; w: POINT; d: LINE",
    "facts": "LineOf(LowerFocus(P), w) = d"
},
{
    "assertion": "LineSegmentOf ( MidPoint ( LINESEGMENT: Y ), FootPoint ( LINE: C, LINE: g ) ) equals LINESEGMENT: c",
    "id": 2658,
    "declarations": "Y: LINESEGMENT; C: LINE; g: LINE; c: LINESEGMENT",
    "facts": "LineSegmentOf(MidPoint(Y), FootPoint(C, g)) = c"
},
{
    "assertion": "Center ( CONICSECTION: O ) equals LeftVertex ( CONICSECTION: O )",
    "id": 2659,
    "declarations": "O: CONICSECTION; O: CONICSECTION",
    "facts": "Center(O) = LeftVertex(O)"
},
{
    "assertion": "LineSegmentOf ( POINT: g, POINT: K ) equals LINESEGMENT: V",
    "id": 2660,
    "declarations": "g: POINT; K: POINT; V: LINESEGMENT",
    "facts": "LineSegmentOf(g, K) = V"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: t, TRIANGLE: N ) equals BOOL: False",
    "id": 2661,
    "declarations": "t: CIRCLE; N: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(t, N) = False"
},
{
    "assertion": "Eccentricity ( CONICSECTION: P ) equals Perimeter ( CONICSECTION: H )",
    "id": 2662,
    "declarations": "P: CONICSECTION; H: CONICSECTION",
    "facts": "Eccentricity(P) = Perimeter(H)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: s ) equals AXIS: yAxis",
    "id": 2663,
    "declarations": "s: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(s) = yAxis"
},
{
    "assertion": "Radius ( CIRCLE: c ) equals sqrt ( FocalLength ( CONICSECTION: H ) )",
    "id": 2664,
    "declarations": "c: CIRCLE; H: CONICSECTION",
    "facts": "Radius(c) = sqrt(FocalLength(H))"
},
{
    "assertion": "RightFocus ( CONICSECTION: p ) equals POINT: C",
    "id": 2665,
    "declarations": "p: CONICSECTION; C: POINT",
    "facts": "RightFocus(p) = C"
},
{
    "assertion": "Intersection ( CURVE: J, CURVE: K ) equals Circumcenter ( TRIANGLE: F )",
    "id": 2666,
    "declarations": "J: CURVE; K: CURVE; F: TRIANGLE",
    "facts": "Intersection(J, K) = Circumcenter(F)"
},
{
    "assertion": "YCoordinate ( POINT: a ) equals Area ( CONICSECTION: k )",
    "id": 2667,
    "declarations": "a: POINT; k: CONICSECTION",
    "facts": "YCoordinate(a) = Area(k)"
},
{
    "assertion": "XCoordinate ( RightFocus ( CONICSECTION: D ) ) equals HalfFocalLength ( CONICSECTION: w )",
    "id": 2668,
    "declarations": "D: CONICSECTION; w: CONICSECTION",
    "facts": "XCoordinate(RightFocus(D)) = HalfFocalLength(w)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: T ) equals RightFocus ( CONICSECTION: J )",
    "id": 2669,
    "declarations": "T: TRIANGLE; J: CONICSECTION",
    "facts": "Orthocenter(T) = RightFocus(J)"
},
{
    "assertion": "FocalLength ( CONICSECTION: x ) equals NUMBER: -44",
    "id": 2670,
    "declarations": "x: CONICSECTION; -44: NUMBER",
    "facts": "FocalLength(x) = -44"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: G ) equals LINE: w",
    "id": 2671,
    "declarations": "G: CONICSECTION; w: LINE",
    "facts": "RightDirectrix(G) = w"
},
{
    "assertion": "LeftPart ( HYPERBOLA: h ) equals CURVE: H",
    "id": 2672,
    "declarations": "h: HYPERBOLA; H: CURVE",
    "facts": "LeftPart(h) = H"
},
{
    "assertion": "Negation ( Expression ( CURVE: D ) equals EXPRESSION: y*space=*space2*x*space+*space3 ) equals BOOL: True",
    "id": 2673,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftFocus ( CONICSECTION: v ) equals Center ( CONICSECTION: b )",
    "id": 2674,
    "declarations": "v: CONICSECTION; b: CONICSECTION",
    "facts": "LeftFocus(v) = Center(b)"
},
{
    "assertion": "Length ( MinorAxis ( ELLIPSE: d ) ) equals NumIntersection ( CURVE: Y, Locus ( LowerVertex ( CONICSECTION: R ) ) )",
    "id": 2675,
    "declarations": "d: ELLIPSE; Y: CURVE; R: CONICSECTION",
    "facts": "Length(MinorAxis(d)) = NumIntersection(Y, Locus(LowerVertex(R)))"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: w ) equals LINE: v",
    "id": 2676,
    "declarations": "w: LINESEGMENT; v: LINE",
    "facts": "OverlappingLine(w) = v"
},
{
    "assertion": "Focus ( CONICSECTION: X ) equals POINT: l",
    "id": 2677,
    "declarations": "X: CONICSECTION; l: POINT",
    "facts": "Focus(X) = l"
},
{
    "assertion": "UpperVertex ( CONICSECTION: s ) equals Center ( CONICSECTION: I )",
    "id": 2678,
    "declarations": "s: CONICSECTION; I: CONICSECTION",
    "facts": "UpperVertex(s) = Center(I)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: t ) equals TangentOfPoint ( MidPoint ( LINESEGMENT: o ), CURVE: T )",
    "id": 2679,
    "declarations": "t: CONICSECTION; o: LINESEGMENT; T: CURVE",
    "facts": "RightDirectrix(t) = TangentOfPoint(MidPoint(o), T)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: w ) equals YCoordinate ( Projection ( RightVertex ( CONICSECTION: w ), LINE: z ) )",
    "id": 2680,
    "declarations": "w: CONICSECTION; w: CONICSECTION; z: LINE",
    "facts": "HalfFocalLength(w) = YCoordinate(Projection(RightVertex(w), z))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: p ) equals LowerFocus ( CONICSECTION: w )",
    "id": 2681,
    "declarations": "p: CONICSECTION; w: CONICSECTION",
    "facts": "LeftFocus(p) = LowerFocus(w)"
},
{
    "assertion": "Directrix ( CONICSECTION: c ) equals PerpendicularBisector ( InterceptChord ( LINE: i, CONICSECTION: H ) )",
    "id": 2682,
    "declarations": "c: CONICSECTION; i: LINE; H: CONICSECTION",
    "facts": "Directrix(c) = PerpendicularBisector(InterceptChord(i, H))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: d ) equals InterceptChord ( LINE: a, CONICSECTION: f )",
    "id": 2683,
    "declarations": "d: ELLIPSE; a: LINE; f: CONICSECTION",
    "facts": "MajorAxis(d) = InterceptChord(a, f)"
},
{
    "assertion": "RightFocus ( CONICSECTION: R ) equals MidPoint ( LINESEGMENT: r )",
    "id": 2684,
    "declarations": "R: CONICSECTION; r: LINESEGMENT",
    "facts": "RightFocus(R) = MidPoint(r)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: X ) equals POINT: O",
    "id": 2685,
    "declarations": "X: CONICSECTION; O: POINT",
    "facts": "LowerVertex(X) = O"
},
{
    "assertion": "MinorAxis ( ELLIPSE: M ) equals LINESEGMENT: L",
    "id": 2686,
    "declarations": "M: ELLIPSE; L: LINESEGMENT",
    "facts": "MinorAxis(M) = L"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: v, TRIANGLE: A ) equals BOOL: False",
    "id": 2687,
    "declarations": "v: CIRCLE; A: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(v, A) = False"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: E, CONICSECTION: t ) equals BOOL: False",
    "id": 2688,
    "declarations": "E: LINESEGMENT; t: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(E, t) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: I ) equals UpperFocus ( CONICSECTION: k )",
    "id": 2689,
    "declarations": "I: CONICSECTION; k: CONICSECTION",
    "facts": "LeftVertex(I) = UpperFocus(k)"
},
{
    "assertion": "DotProduct ( VECTOR: h, VECTOR: P ) equals HalfFocalLength ( CONICSECTION: u )",
    "id": 2690,
    "declarations": "h: VECTOR; P: VECTOR; u: CONICSECTION",
    "facts": "DotProduct(h, P) = HalfFocalLength(u)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: x, CIRCLE: w ) equals BOOL: False",
    "id": 2691,
    "declarations": "x: CIRCLE; w: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(x, w) = False"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: a, CIRCLE: A ) equals BOOL: False",
    "id": 2692,
    "declarations": "a: LINESEGMENT; A: CIRCLE; False: BOOL",
    "facts": "IsDiameter(a, A) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: r ) equals Center ( CONICSECTION: e )",
    "id": 2693,
    "declarations": "r: CONICSECTION; e: CONICSECTION",
    "facts": "Vertex(r) = Center(e)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: Z ) equals LowerFocus ( CONICSECTION: I )",
    "id": 2694,
    "declarations": "Z: CONICSECTION; I: CONICSECTION",
    "facts": "LowerFocus(Z) = LowerFocus(I)"
},
{
    "assertion": "Inclination ( LINE: Z ) equals Intercept ( LINE: h, AXIS: yAxis )",
    "id": 2695,
    "declarations": "Z: LINE; h: LINE; yAxis: AXIS",
    "facts": "Inclination(Z) = Intercept(h, yAxis)"
},
{
    "assertion": "Projection ( Circumcenter ( TRIANGLE: n ), LINE: g ) equals Orthocenter ( TRIANGLE: b )",
    "id": 2696,
    "declarations": "n: TRIANGLE; g: LINE; b: TRIANGLE",
    "facts": "Projection(Circumcenter(n), g) = Orthocenter(b)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: Z ) equals Slope ( RightDirectrix ( CONICSECTION: I ) )",
    "id": 2697,
    "declarations": "Z: CONICSECTION; I: CONICSECTION",
    "facts": "HalfFocalLength(Z) = Slope(RightDirectrix(I))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: k ) equals LINE: l",
    "id": 2698,
    "declarations": "k: HYPERBOLA; l: LINE",
    "facts": "Asymptote(k) = l"
},
{
    "assertion": "IsOutTangent ( CIRCLE: h, CIRCLE: r ) equals BOOL: True",
    "id": 2699,
    "declarations": "h: CIRCLE; r: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(h, r) = True"
},
{
    "assertion": "LocusEquation ( POINT: H ) equals EXPRESSION: y*space=*spacee^x",
    "id": 2700,
    "declarations": "H: POINT; y*space=*spacee^x: EXPRESSION",
    "facts": "LocusEquation(H) = y*space=*spacee^x"
},
{
    "assertion": "TangentOfPoint ( Orthocenter ( TRIANGLE: C ), CURVE: n ) equals OverlappingLine ( LINESEGMENT: q )",
    "id": 2701,
    "declarations": "C: TRIANGLE; n: CURVE; q: LINESEGMENT",
    "facts": "TangentOfPoint(Orthocenter(C), n) = OverlappingLine(q)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: G ) equals POINT: N",
    "id": 2702,
    "declarations": "G: LINESEGMENT; N: POINT",
    "facts": "MidPoint(G) = N"
},
{
    "assertion": "Endpoint ( LINESEGMENT: w ) equals Circumcenter ( TRIANGLE: y )",
    "id": 2703,
    "declarations": "w: LINESEGMENT; y: TRIANGLE",
    "facts": "Endpoint(w) = Circumcenter(y)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: E ) equals LINE: p",
    "id": 2704,
    "declarations": "E: CONICSECTION; p: LINE",
    "facts": "LeftDirectrix(E) = p"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: C ) equals LINE: O",
    "id": 2705,
    "declarations": "C: CONICSECTION; O: LINE",
    "facts": "RightDirectrix(C) = O"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: s ) equals LINE: a",
    "id": 2706,
    "declarations": "s: CONICSECTION; a: LINE",
    "facts": "LeftDirectrix(s) = a"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: S ) equals LINE: O",
    "id": 2707,
    "declarations": "S: LINESEGMENT; O: LINE",
    "facts": "PerpendicularBisector(S) = O"
},
{
    "assertion": "lg ( NUMBER: 99 ) equals XCoordinate ( RightFocus ( CONICSECTION: j ) )",
    "id": 2708,
    "declarations": "99: NUMBER; j: CONICSECTION",
    "facts": "lg(99) = XCoordinate(RightFocus(j))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: r ) equals LINESEGMENT: E",
    "id": 2709,
    "declarations": "r: ELLIPSE; E: LINESEGMENT",
    "facts": "MajorAxis(r) = E"
},
{
    "assertion": "Min ( NUMBER: -12 ) equals HalfFocalLength ( CONICSECTION: W )",
    "id": 2710,
    "declarations": "-12: NUMBER; W: CONICSECTION",
    "facts": "Min(-12) = HalfFocalLength(W)"
},
{
    "assertion": "InterceptChord ( LINE: t, CONICSECTION: i ) equals LINESEGMENT: a",
    "id": 2711,
    "declarations": "t: LINE; i: CONICSECTION; a: LINESEGMENT",
    "facts": "InterceptChord(t, i) = a"
},
{
    "assertion": "Locus ( RightFocus ( CONICSECTION: i ) ) equals CURVE: f",
    "id": 2712,
    "declarations": "i: CONICSECTION; f: CURVE",
    "facts": "Locus(RightFocus(i)) = f"
},
{
    "assertion": "Directrix ( CONICSECTION: e ) equals LINE: e",
    "id": 2713,
    "declarations": "e: CONICSECTION; e: LINE",
    "facts": "Directrix(e) = e"
},
{
    "assertion": "LineOf ( Incenter ( TRIANGLE: g ), POINT: e ) equals RightDirectrix ( CONICSECTION: u )",
    "id": 2714,
    "declarations": "g: TRIANGLE; e: POINT; u: CONICSECTION",
    "facts": "LineOf(Incenter(g), e) = RightDirectrix(u)"
},
{
    "assertion": "InterReciprocal ( Radius ( CIRCLE: S ) ) equals Quadrant ( Center ( CONICSECTION: Y ) )",
    "id": 2715,
    "declarations": "S: CIRCLE; Y: CONICSECTION",
    "facts": "InterReciprocal(Radius(S)) = Quadrant(Center(Y))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: e ) equals Orthocenter ( TRIANGLE: J )",
    "id": 2716,
    "declarations": "e: LINESEGMENT; J: TRIANGLE",
    "facts": "Endpoint(e) = Orthocenter(J)"
},
{
    "assertion": "XCoordinate ( Projection ( POINT: x, RightDirectrix ( CONICSECTION: z ) ) ) equals Radius ( CIRCLE: z )",
    "id": 2717,
    "declarations": "x: POINT; z: CONICSECTION; z: CIRCLE",
    "facts": "XCoordinate(Projection(x, RightDirectrix(z))) = Radius(z)"
},
{
    "assertion": "RightPart ( HYPERBOLA: I ) equals CURVE: V",
    "id": 2718,
    "declarations": "I: HYPERBOLA; V: CURVE",
    "facts": "RightPart(I) = V"
},
{
    "assertion": "LeftVertex ( CONICSECTION: S ) equals POINT: f",
    "id": 2719,
    "declarations": "S: CONICSECTION; f: POINT",
    "facts": "LeftVertex(S) = f"
},
{
    "assertion": "LocusEquation ( LeftVertex ( CONICSECTION: K ) ) equals EXPRESSION: y*space=*spacex^3*space-*space2x*space+*space1",
    "id": 2720,
    "declarations": "K: CONICSECTION; y*space=*spacex^3*space-*space2x*space+*space1: EXPRESSION",
    "facts": "LocusEquation(LeftVertex(K)) = y*space=*spacex^3*space-*space2x*space+*space1"
},
{
    "assertion": "IsOutTangent ( CIRCLE: W, CircumCircle ( TRIANGLE: a ) ) equals BOOL: True",
    "id": 2721,
    "declarations": "W: CIRCLE; a: TRIANGLE; True: BOOL",
    "facts": "IsOutTangent(W, CircumCircle(a)) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: v ) equals RightFocus ( CONICSECTION: v )",
    "id": 2722,
    "declarations": "v: TRIANGLE; v: CONICSECTION",
    "facts": "Incenter(v) = RightFocus(v)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: c, CIRCLE: R ) equals BOOL: True",
    "id": 2723,
    "declarations": "c: CIRCLE; R: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(c, R) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: M ) equals POINT: C",
    "id": 2724,
    "declarations": "M: TRIANGLE; C: POINT",
    "facts": "Incenter(M) = C"
},
{
    "assertion": "Min ( XCoordinate ( RightVertex ( CONICSECTION: O ) ) ) equals NUMBER: -37",
    "id": 2725,
    "declarations": "O: CONICSECTION; -37: NUMBER",
    "facts": "Min(XCoordinate(RightVertex(O))) = -37"
},
{
    "assertion": "TangentOfPoint ( Orthocenter ( TRIANGLE: x ), CURVE: V ) equals LINE: h",
    "id": 2726,
    "declarations": "x: TRIANGLE; V: CURVE; h: LINE",
    "facts": "TangentOfPoint(Orthocenter(x), V) = h"
},
{
    "assertion": "Endpoint ( RealAxis ( ELLIPSE: D ) ) equals POINT: m",
    "id": 2727,
    "declarations": "D: ELLIPSE; m: POINT",
    "facts": "Endpoint(RealAxis(D)) = m"
},
{
    "assertion": "Min ( Abs ( RealAxis ( ELLIPSE: J ) ) ) equals Distance ( LowerFocus ( CONICSECTION: g ), POINT: F )",
    "id": 2728,
    "declarations": "J: ELLIPSE; g: CONICSECTION; F: POINT",
    "facts": "Min(Abs(RealAxis(J))) = Distance(LowerFocus(g), F)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: d ) equals POINT: B",
    "id": 2729,
    "declarations": "d: LINESEGMENT; B: POINT",
    "facts": "Endpoint(d) = B"
},
{
    "assertion": "VectorOf ( Center ( CONICSECTION: G ), POINT: D ) equals VECTOR: H",
    "id": 2730,
    "declarations": "G: CONICSECTION; D: POINT; H: VECTOR",
    "facts": "VectorOf(Center(G), D) = H"
},
{
    "assertion": "Directrix ( CONICSECTION: G ) equals RightDirectrix ( CONICSECTION: D )",
    "id": 2731,
    "declarations": "G: CONICSECTION; D: CONICSECTION",
    "facts": "Directrix(G) = RightDirectrix(D)"
},
{
    "assertion": "LocusEquation ( UpperVertex ( CONICSECTION: a ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 2732,
    "declarations": "a: CONICSECTION; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(UpperVertex(a)) = y*space=*spacelog(x)"
},
{
    "assertion": "VectorOf ( POINT: e, Incenter ( TRIANGLE: U ) ) equals VECTOR: q",
    "id": 2733,
    "declarations": "e: POINT; U: TRIANGLE; q: VECTOR",
    "facts": "VectorOf(e, Incenter(U)) = q"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: V ) ) equals EXPRESSION: y*space=*space3x*space+*space2",
    "id": 2734,
    "declarations": "V: HYPERBOLA; y*space=*space3x*space+*space2: EXPRESSION",
    "facts": "Expression(LeftPart(V)) = y*space=*space3x*space+*space2"
},
{
    "assertion": "UpperVertex ( CONICSECTION: X ) equals UpperVertex ( CONICSECTION: O )",
    "id": 2735,
    "declarations": "X: CONICSECTION; O: CONICSECTION",
    "facts": "UpperVertex(X) = UpperVertex(O)"
},
{
    "assertion": "MidPoint ( MinorAxis ( ELLIPSE: y ) ) equals RightVertex ( CONICSECTION: p )",
    "id": 2736,
    "declarations": "y: ELLIPSE; p: CONICSECTION",
    "facts": "MidPoint(MinorAxis(y)) = RightVertex(p)"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: F ) ) equals Area ( CONICSECTION: i )",
    "id": 2737,
    "declarations": "F: ELLIPSE; i: CONICSECTION",
    "facts": "Abs(MinorAxis(F)) = Area(i)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: o ) equals Circumcenter ( TriangleOf ( UpperFocus ( CONICSECTION: p ), MidPoint ( RealAxis ( ELLIPSE: Q ) ), POINT: P ) )",
    "id": 2738,
    "declarations": "o: CONICSECTION; p: CONICSECTION; Q: ELLIPSE; P: POINT",
    "facts": "LeftVertex(o) = Circumcenter(TriangleOf(UpperFocus(p), MidPoint(RealAxis(Q)), P))"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: t ) equals RealAxis ( ELLIPSE: i )",
    "id": 2739,
    "declarations": "t: ELLIPSE; i: ELLIPSE",
    "facts": "ImaginaryAxis(t) = RealAxis(i)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: K, TRIANGLE: k ) equals BOOL: True",
    "id": 2740,
    "declarations": "K: CIRCLE; k: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(K, k) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: o ) equals LINESEGMENT: x",
    "id": 2741,
    "declarations": "o: ELLIPSE; x: LINESEGMENT",
    "facts": "MinorAxis(o) = x"
},
{
    "assertion": "lg ( NUMBER: -93 ) equals NUMBER: 4",
    "id": 2742,
    "declarations": "-93: NUMBER; 4: NUMBER",
    "facts": "lg(-93) = 4"
},
{
    "assertion": "LeftVertex ( CONICSECTION: V ) equals RightVertex ( CONICSECTION: Y )",
    "id": 2743,
    "declarations": "V: CONICSECTION; Y: CONICSECTION",
    "facts": "LeftVertex(V) = RightVertex(Y)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: w ) equals LINESEGMENT: d",
    "id": 2744,
    "declarations": "w: ELLIPSE; d: LINESEGMENT",
    "facts": "MinorAxis(w) = d"
},
{
    "assertion": "VectorOf ( POINT: f, POINT: m ) equals VECTOR: W",
    "id": 2745,
    "declarations": "f: POINT; m: POINT; W: VECTOR",
    "facts": "VectorOf(f, m) = W"
},
{
    "assertion": "Radius ( CIRCLE: B ) equals Perimeter ( CONICSECTION: C )",
    "id": 2746,
    "declarations": "B: CIRCLE; C: CONICSECTION",
    "facts": "Radius(B) = Perimeter(C)"
},
{
    "assertion": "PerpendicularBisector ( InterceptChord ( LINE: W, CONICSECTION: C ) ) equals LINE: R",
    "id": 2747,
    "declarations": "W: LINE; C: CONICSECTION; R: LINE",
    "facts": "PerpendicularBisector(InterceptChord(W, C)) = R"
},
{
    "assertion": "NumIntersection ( CURVE: u, CURVE: x ) equals Eccentricity ( CONICSECTION: e )",
    "id": 2748,
    "declarations": "u: CURVE; x: CURVE; e: CONICSECTION",
    "facts": "NumIntersection(u, x) = Eccentricity(e)"
},
{
    "assertion": "RightPart ( HYPERBOLA: s ) equals CURVE: G",
    "id": 2749,
    "declarations": "s: HYPERBOLA; G: CURVE",
    "facts": "RightPart(s) = G"
},
{
    "assertion": "RightVertex ( CONICSECTION: Z ) equals MidPoint ( LINESEGMENT: y )",
    "id": 2750,
    "declarations": "Z: CONICSECTION; y: LINESEGMENT",
    "facts": "RightVertex(Z) = MidPoint(y)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -26, DEGREESTR: degree )",
    "id": 2751,
    "declarations": "-26: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-26, degree) = None"
},
{
    "assertion": "MajorAxis ( ELLIPSE: P ) equals MinorAxis ( ELLIPSE: l )",
    "id": 2752,
    "declarations": "P: ELLIPSE; l: ELLIPSE",
    "facts": "MajorAxis(P) = MinorAxis(l)"
},
{
    "assertion": "Directrix ( CONICSECTION: Q ) equals OverlappingLine ( LINESEGMENT: l )",
    "id": 2753,
    "declarations": "Q: CONICSECTION; l: LINESEGMENT",
    "facts": "Directrix(Q) = OverlappingLine(l)"
},
{
    "assertion": "Slope ( LINE: I ) equals Radius ( CIRCLE: W )",
    "id": 2754,
    "declarations": "I: LINE; W: CIRCLE",
    "facts": "Slope(I) = Radius(W)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: F ) equals POINT: w",
    "id": 2755,
    "declarations": "F: LINESEGMENT; w: POINT",
    "facts": "Endpoint(F) = w"
},
{
    "assertion": "RightVertex ( CONICSECTION: B ) equals POINT: q",
    "id": 2756,
    "declarations": "B: CONICSECTION; q: POINT",
    "facts": "RightVertex(B) = q"
},
{
    "assertion": "UpperFocus ( CONICSECTION: f ) equals RightFocus ( CONICSECTION: N )",
    "id": 2757,
    "declarations": "f: CONICSECTION; N: CONICSECTION",
    "facts": "UpperFocus(f) = RightFocus(N)"
},
{
    "assertion": "TangentPoint ( LINE: T, CIRCLE: D ) equals POINT: y",
    "id": 2758,
    "declarations": "T: LINE; D: CIRCLE; y: POINT",
    "facts": "TangentPoint(T, D) = y"
},
{
    "assertion": "Intersection ( Locus ( LowerVertex ( CONICSECTION: l ) ), LeftPart ( HYPERBOLA: P ) ) equals POINT: G",
    "id": 2759,
    "declarations": "l: CONICSECTION; P: HYPERBOLA; G: POINT",
    "facts": "Intersection(Locus(LowerVertex(l)), LeftPart(P)) = G"
},
{
    "assertion": "Circumcenter ( TRIANGLE: X ) equals LeftFocus ( CONICSECTION: T )",
    "id": 2760,
    "declarations": "X: TRIANGLE; T: CONICSECTION",
    "facts": "Circumcenter(X) = LeftFocus(T)"
},
{
    "assertion": "RightPart ( HYPERBOLA: N ) equals CURVE: a",
    "id": 2761,
    "declarations": "N: HYPERBOLA; a: CURVE",
    "facts": "RightPart(N) = a"
},
{
    "assertion": "Center ( CONICSECTION: y ) equals POINT: B",
    "id": 2762,
    "declarations": "y: CONICSECTION; B: POINT",
    "facts": "Center(y) = B"
},
{
    "assertion": "sqrt ( NUMBER: -80 ) equals Area ( CONICSECTION: n )",
    "id": 2763,
    "declarations": "-80: NUMBER; n: CONICSECTION",
    "facts": "sqrt(-80) = Area(n)"
},
{
    "assertion": "Radius ( CIRCLE: C ) equals NUMBER: 45",
    "id": 2764,
    "declarations": "C: CIRCLE; 45: NUMBER",
    "facts": "Radius(C) = 45"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: l, CONICSECTION: z ) equals BOOL: True",
    "id": 2765,
    "declarations": "l: LINESEGMENT; z: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(l, z) = True"
},
{
    "assertion": "RightVertex ( CONICSECTION: T ) equals POINT: y",
    "id": 2766,
    "declarations": "T: CONICSECTION; y: POINT",
    "facts": "RightVertex(T) = y"
},
{
    "assertion": "LowerVertex ( CONICSECTION: D ) equals POINT: Q",
    "id": 2767,
    "declarations": "D: CONICSECTION; Q: POINT",
    "facts": "LowerVertex(D) = Q"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: p, TRIANGLE: B ) equals BOOL: False",
    "id": 2768,
    "declarations": "p: CIRCLE; B: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(p, B) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: q ) equals LINESEGMENT: U",
    "id": 2769,
    "declarations": "q: ELLIPSE; U: LINESEGMENT",
    "facts": "MinorAxis(q) = U"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: L ) equals NUMBER: 64",
    "id": 2770,
    "declarations": "L: CONICSECTION; 64: NUMBER",
    "facts": "HalfFocalLength(L) = 64"
},
{
    "assertion": "RightVertex ( CONICSECTION: u ) equals POINT: F",
    "id": 2771,
    "declarations": "u: CONICSECTION; F: POINT",
    "facts": "RightVertex(u) = F"
},
{
    "assertion": "Quadrant ( FootPoint ( LeftDirectrix ( CONICSECTION: M ), LINE: Q ) ) equals NUMBER: 50",
    "id": 2772,
    "declarations": "M: CONICSECTION; Q: LINE; 50: NUMBER",
    "facts": "Quadrant(FootPoint(LeftDirectrix(M), Q)) = 50"
},
{
    "assertion": "Perimeter ( CONICSECTION: w ) equals NUMBER: -37",
    "id": 2773,
    "declarations": "w: CONICSECTION; -37: NUMBER",
    "facts": "Perimeter(w) = -37"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: B ) equals LINESEGMENT: e",
    "id": 2775,
    "declarations": "B: ELLIPSE; e: LINESEGMENT",
    "facts": "ImaginaryAxis(B) = e"
},
{
    "assertion": "Center ( CONICSECTION: b ) equals LowerVertex ( CONICSECTION: q )",
    "id": 2777,
    "declarations": "b: CONICSECTION; q: CONICSECTION",
    "facts": "Center(b) = LowerVertex(q)"
},
{
    "assertion": "Distance ( UpperVertex ( CONICSECTION: S ), POINT: F ) equals Radius ( CIRCLE: s )",
    "id": 2778,
    "declarations": "S: CONICSECTION; F: POINT; s: CIRCLE",
    "facts": "Distance(UpperVertex(S), F) = Radius(s)"
},
{
    "assertion": "Slope ( LINE: g ) equals HalfFocalLength ( CONICSECTION: C )",
    "id": 2779,
    "declarations": "g: LINE; C: CONICSECTION",
    "facts": "Slope(g) = HalfFocalLength(C)"
},
{
    "assertion": "RightVertex ( CONICSECTION: E ) equals POINT: W",
    "id": 2780,
    "declarations": "E: CONICSECTION; W: POINT",
    "facts": "RightVertex(E) = W"
},
{
    "assertion": "LeftVertex ( CONICSECTION: X ) equals POINT: O",
    "id": 2781,
    "declarations": "X: CONICSECTION; O: POINT",
    "facts": "LeftVertex(X) = O"
},
{
    "assertion": "LowerVertex ( CONICSECTION: M ) equals RightFocus ( CONICSECTION: t )",
    "id": 2782,
    "declarations": "M: CONICSECTION; t: CONICSECTION",
    "facts": "LowerVertex(M) = RightFocus(t)"
},
{
    "assertion": "RightPart ( HYPERBOLA: I ) equals CURVE: i",
    "id": 2783,
    "declarations": "I: HYPERBOLA; i: CURVE",
    "facts": "RightPart(I) = i"
},
{
    "assertion": "lg ( FocalLength ( CONICSECTION: U ) ) equals NUMBER: 4",
    "id": 2784,
    "declarations": "U: CONICSECTION; 4: NUMBER",
    "facts": "lg(FocalLength(U)) = 4"
},
{
    "assertion": "FocalLength ( CONICSECTION: s ) equals lg ( NUMBER: -67 )",
    "id": 2785,
    "declarations": "s: CONICSECTION; -67: NUMBER",
    "facts": "FocalLength(s) = lg(-67)"
},
{
    "assertion": "RealAxis ( ELLIPSE: b ) equals LINESEGMENT: Q",
    "id": 2786,
    "declarations": "b: ELLIPSE; Q: LINESEGMENT",
    "facts": "RealAxis(b) = Q"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: s ) equals lg ( NUMBER: 33 )",
    "id": 2787,
    "declarations": "s: CONICSECTION; 33: NUMBER",
    "facts": "HalfFocalLength(s) = lg(33)"
},
{
    "assertion": "And ( Coordinate ( LowerFocus ( CONICSECTION: O ) ) equals ( Intercept ( LINE: V, AXIS: yAxis ), lg ( NUMBER: 42 ) ), Min ( NUMBER: -13 ) equals Inclination ( LeftDirectrix ( CONICSECTION: A ) ) ) equals BOOL: True",
    "id": 2788,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsIntersect ( CURVE: L, CURVE: x ) equals BOOL: False",
    "id": 2789,
    "declarations": "L: CURVE; x: CURVE; False: BOOL",
    "facts": "IsIntersect(L, x) = False"
},
{
    "assertion": "Distance ( POINT: n, POINT: F ) equals Abs ( LINESEGMENT: y )",
    "id": 2790,
    "declarations": "n: POINT; F: POINT; y: LINESEGMENT",
    "facts": "Distance(n, F) = Abs(y)"
},
{
    "assertion": "OverlappingLine ( RealAxis ( ELLIPSE: z ) ) equals LINE: A",
    "id": 2791,
    "declarations": "z: ELLIPSE; A: LINE",
    "facts": "OverlappingLine(RealAxis(z)) = A"
},
{
    "assertion": "Intercept ( LINE: q, SymmetryAxis ( CONICSECTION: m ) ) equals Quadrant ( POINT: H )",
    "id": 2792,
    "declarations": "q: LINE; m: CONICSECTION; H: POINT",
    "facts": "Intercept(q, SymmetryAxis(m)) = Quadrant(H)"
},
{
    "assertion": "RealAxis ( ELLIPSE: a ) equals LINESEGMENT: p",
    "id": 2793,
    "declarations": "a: ELLIPSE; p: LINESEGMENT",
    "facts": "RealAxis(a) = p"
},
{
    "assertion": "Intercept ( LINE: A, SymmetryAxis ( CONICSECTION: J ) ) equals Quadrant ( UpperFocus ( CONICSECTION: Y ) )",
    "id": 2794,
    "declarations": "A: LINE; J: CONICSECTION; Y: CONICSECTION",
    "facts": "Intercept(A, SymmetryAxis(J)) = Quadrant(UpperFocus(Y))"
},
{
    "assertion": "RightVertex ( CONICSECTION: u ) equals POINT: G",
    "id": 2795,
    "declarations": "u: CONICSECTION; G: POINT",
    "facts": "RightVertex(u) = G"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: G ) equals LINE: A",
    "id": 2796,
    "declarations": "G: LINESEGMENT; A: LINE",
    "facts": "OverlappingLine(G) = A"
},
{
    "assertion": "UpperVertex ( CONICSECTION: U ) equals FootPoint ( LINE: p, LeftDirectrix ( CONICSECTION: P ) )",
    "id": 2797,
    "declarations": "U: CONICSECTION; p: LINE; P: CONICSECTION",
    "facts": "UpperVertex(U) = FootPoint(p, LeftDirectrix(P))"
},
{
    "assertion": "Distance ( POINT: t, Incenter ( TRIANGLE: F ) ) equals NUMBER: 15",
    "id": 2798,
    "declarations": "t: POINT; F: TRIANGLE; 15: NUMBER",
    "facts": "Distance(t, Incenter(F)) = 15"
},
{
    "assertion": "TangentOfPoint ( Orthocenter ( TRIANGLE: s ), CURVE: a ) equals LINE: G",
    "id": 2799,
    "declarations": "s: TRIANGLE; a: CURVE; G: LINE",
    "facts": "TangentOfPoint(Orthocenter(s), a) = G"
},
{
    "assertion": "Circumcenter ( TRIANGLE: a ) equals POINT: m",
    "id": 2800,
    "declarations": "a: TRIANGLE; m: POINT",
    "facts": "Circumcenter(a) = m"
},
{
    "assertion": "AngleOf ( RightFocus ( CONICSECTION: s ), LowerVertex ( CONICSECTION: M ), POINT: i ) equals ApplyUnit ( Min ( NUMBER: -90 ), DEGREESTR: degree )",
    "id": 2801,
    "declarations": "s: CONICSECTION; M: CONICSECTION; i: POINT; -90: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(RightFocus(s), LowerVertex(M), i) = ApplyUnit(Min(-90), degree)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: Q ) equals OverlappingLine ( LINESEGMENT: e )",
    "id": 2802,
    "declarations": "Q: CONICSECTION; e: LINESEGMENT",
    "facts": "RightDirectrix(Q) = OverlappingLine(e)"
},
{
    "assertion": "Directrix ( CONICSECTION: Y ) equals LineOf ( POINT: l, RightVertex ( CONICSECTION: r ) )",
    "id": 2803,
    "declarations": "Y: CONICSECTION; l: POINT; r: CONICSECTION",
    "facts": "Directrix(Y) = LineOf(l, RightVertex(r))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: Q, TRIANGLE: D ) equals BOOL: False",
    "id": 2804,
    "declarations": "Q: CIRCLE; D: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(Q, D) = False"
},
{
    "assertion": "Center ( CONICSECTION: W ) equals LeftVertex ( CONICSECTION: b )",
    "id": 2805,
    "declarations": "W: CONICSECTION; b: CONICSECTION",
    "facts": "Center(W) = LeftVertex(b)"
},
{
    "assertion": "MidPoint ( MinorAxis ( ELLIPSE: A ) ) equals POINT: s",
    "id": 2806,
    "declarations": "A: ELLIPSE; s: POINT",
    "facts": "MidPoint(MinorAxis(A)) = s"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: B ) equals LeftDirectrix ( CONICSECTION: e )",
    "id": 2807,
    "declarations": "B: CONICSECTION; e: CONICSECTION",
    "facts": "LeftDirectrix(B) = LeftDirectrix(e)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: t ) equals CURVE: f",
    "id": 2808,
    "declarations": "t: HYPERBOLA; f: CURVE",
    "facts": "LeftPart(t) = f"
},
{
    "assertion": "lg ( NumIntersection ( CURVE: I, CURVE: F ) ) equals lg ( NUMBER: 50 )",
    "id": 2809,
    "declarations": "I: CURVE; F: CURVE; 50: NUMBER",
    "facts": "lg(NumIntersection(I, F)) = lg(50)"
},
{
    "assertion": "Area ( CONICSECTION: O ) equals Perimeter ( CONICSECTION: Y )",
    "id": 2810,
    "declarations": "O: CONICSECTION; Y: CONICSECTION",
    "facts": "Area(O) = Perimeter(Y)"
},
{
    "assertion": "RightPart ( HYPERBOLA: D ) equals CURVE: N",
    "id": 2811,
    "declarations": "D: HYPERBOLA; N: CURVE",
    "facts": "RightPart(D) = N"
},
{
    "assertion": "Asymptote ( HYPERBOLA: I ) equals RightDirectrix ( CONICSECTION: F )",
    "id": 2812,
    "declarations": "I: HYPERBOLA; F: CONICSECTION",
    "facts": "Asymptote(I) = RightDirectrix(F)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: V ) equals POINT: n",
    "id": 2813,
    "declarations": "V: LINESEGMENT; n: POINT",
    "facts": "Endpoint(V) = n"
},
{
    "assertion": "IsDiameter ( MajorAxis ( ELLIPSE: d ), CIRCLE: h ) equals BOOL: False",
    "id": 2814,
    "declarations": "d: ELLIPSE; h: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MajorAxis(d), h) = False"
},
{
    "assertion": "NumIntersection ( CURVE: X, CURVE: j ) equals lg ( NUMBER: -66 )",
    "id": 2815,
    "declarations": "X: CURVE; j: CURVE; -66: NUMBER",
    "facts": "NumIntersection(X, j) = lg(-66)"
},
{
    "assertion": "ApplyUnit ( Perimeter ( CONICSECTION: K ), DEGREESTR: degree )",
    "id": 2816,
    "declarations": "K: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Perimeter(K), degree) = None"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: R ) equals NUMBER: -82",
    "id": 2817,
    "declarations": "R: CONICSECTION; -82: NUMBER",
    "facts": "HalfFocalLength(R) = -82"
},
{
    "assertion": "Circumcenter ( TRIANGLE: A ) equals Circumcenter ( TRIANGLE: Q )",
    "id": 2818,
    "declarations": "A: TRIANGLE; Q: TRIANGLE",
    "facts": "Circumcenter(A) = Circumcenter(Q)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: H, TRIANGLE: f ) equals BOOL: True",
    "id": 2819,
    "declarations": "H: CIRCLE; f: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(H, f) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: h ) equals RightFocus ( CONICSECTION: j )",
    "id": 2820,
    "declarations": "h: TRIANGLE; j: CONICSECTION",
    "facts": "Orthocenter(h) = RightFocus(j)"
},
{
    "assertion": "Expression ( CURVE: u ) equals EXPRESSION: x*y*space=*space1",
    "id": 2821,
    "declarations": "u: CURVE; x*y*space=*space1: EXPRESSION",
    "facts": "Expression(u) = x*y*space=*space1"
},
{
    "assertion": "IsParallel ( LeftDirectrix ( CONICSECTION: g ), RightDirectrix ( CONICSECTION: i ) ) equals BOOL: False",
    "id": 2822,
    "declarations": "g: CONICSECTION; i: CONICSECTION; False: BOOL",
    "facts": "IsParallel(LeftDirectrix(g), RightDirectrix(i)) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: u ) equals POINT: K",
    "id": 2823,
    "declarations": "u: CONICSECTION; K: POINT",
    "facts": "LowerVertex(u) = K"
},
{
    "assertion": "IsTangent ( LeftDirectrix ( CONICSECTION: s ), CONICSECTION: U ) equals BOOL: False",
    "id": 2824,
    "declarations": "s: CONICSECTION; U: CONICSECTION; False: BOOL",
    "facts": "IsTangent(LeftDirectrix(s), U) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: i, TRIANGLE: I ) equals BOOL: False",
    "id": 2825,
    "declarations": "i: CIRCLE; I: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(i, I) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: y ) equals Orthocenter ( TRIANGLE: w )",
    "id": 2826,
    "declarations": "y: TRIANGLE; w: TRIANGLE",
    "facts": "Incenter(y) = Orthocenter(w)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: O ) equals LINE: E",
    "id": 2827,
    "declarations": "O: HYPERBOLA; E: LINE",
    "facts": "Asymptote(O) = E"
},
{
    "assertion": "Slope ( LeftDirectrix ( CONICSECTION: j ) ) equals NUMBER: -76",
    "id": 2828,
    "declarations": "j: CONICSECTION; -76: NUMBER",
    "facts": "Slope(LeftDirectrix(j)) = -76"
},
{
    "assertion": "Abs ( LINESEGMENT: N ) equals Area ( CONICSECTION: H )",
    "id": 2829,
    "declarations": "N: LINESEGMENT; H: CONICSECTION",
    "facts": "Abs(N) = Area(H)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: v ) equals LINE: z",
    "id": 2830,
    "declarations": "v: CONICSECTION; z: LINE",
    "facts": "LeftDirectrix(v) = z"
},
{
    "assertion": "LowerFocus ( CONICSECTION: n ) equals Orthocenter ( TRIANGLE: T )",
    "id": 2831,
    "declarations": "n: CONICSECTION; T: TRIANGLE",
    "facts": "LowerFocus(n) = Orthocenter(T)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: g ) equals NUMBER: -82",
    "id": 2832,
    "declarations": "g: CONICSECTION; -82: NUMBER",
    "facts": "HalfFocalLength(g) = -82"
},
{
    "assertion": "Inclination ( TangentOnPoint ( POINT: j, CURVE: w ) ) equals NUMBER: 75",
    "id": 2833,
    "declarations": "j: POINT; w: CURVE; 75: NUMBER",
    "facts": "Inclination(TangentOnPoint(j, w)) = 75"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: h ) equals LINE: Q",
    "id": 2834,
    "declarations": "h: CONICSECTION; Q: LINE",
    "facts": "RightDirectrix(h) = Q"
},
{
    "assertion": "Locus ( UpperFocus ( CONICSECTION: z ) ) equals CURVE: g",
    "id": 2835,
    "declarations": "z: CONICSECTION; g: CURVE",
    "facts": "Locus(UpperFocus(z)) = g"
},
{
    "assertion": "UpperVertex ( CONICSECTION: H ) equals POINT: w",
    "id": 2836,
    "declarations": "H: CONICSECTION; w: POINT",
    "facts": "UpperVertex(H) = w"
},
{
    "assertion": "Incenter ( TRIANGLE: k ) equals RightFocus ( CONICSECTION: M )",
    "id": 2837,
    "declarations": "k: TRIANGLE; M: CONICSECTION",
    "facts": "Incenter(k) = RightFocus(M)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: x ) equals LINE: U",
    "id": 2838,
    "declarations": "x: LINESEGMENT; U: LINE",
    "facts": "PerpendicularBisector(x) = U"
},
{
    "assertion": "PointOnCurve ( UpperFocus ( CONICSECTION: r ), LeftPart ( HYPERBOLA: v ) ) equals BOOL: True",
    "id": 2839,
    "declarations": "r: CONICSECTION; v: HYPERBOLA; True: BOOL",
    "facts": "PointOnCurve(UpperFocus(r), LeftPart(v)) = True"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: w, TRIANGLE: R ) equals BOOL: True",
    "id": 2840,
    "declarations": "w: CIRCLE; R: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(w, R) = True"
},
{
    "assertion": "AngleOf ( Center ( CONICSECTION: U ), MidPoint ( LINESEGMENT: a ), LeftFocus ( CONICSECTION: O ) ) equals AngleOf ( LowerVertex ( CONICSECTION: H ), POINT: K, POINT: b )",
    "id": 2841,
    "declarations": "U: CONICSECTION; a: LINESEGMENT; O: CONICSECTION; H: CONICSECTION; K: POINT; b: POINT",
    "facts": "AngleOf(Center(U), MidPoint(a), LeftFocus(O)) = AngleOf(LowerVertex(H), K, b)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: p, TRIANGLE: c ) equals BOOL: False",
    "id": 2842,
    "declarations": "p: CIRCLE; c: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(p, c) = False"
},
{
    "assertion": "IsIntersect ( CURVE: F, RightPart ( HYPERBOLA: a ) ) equals BOOL: True",
    "id": 2843,
    "declarations": "F: CURVE; a: HYPERBOLA; True: BOOL",
    "facts": "IsIntersect(F, RightPart(a)) = True"
},
{
    "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: n ) ) equals lg ( Perimeter ( CONICSECTION: e ) )",
    "id": 2844,
    "declarations": "n: CONICSECTION; e: CONICSECTION",
    "facts": "XCoordinate(UpperVertex(n)) = lg(Perimeter(e))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: B ) equals PerpendicularBisector ( LINESEGMENT: J )",
    "id": 2845,
    "declarations": "B: CONICSECTION; J: LINESEGMENT",
    "facts": "RightDirectrix(B) = PerpendicularBisector(J)"
},
{
    "assertion": "Min ( XCoordinate ( POINT: m ) ) equals NUMBER: 28",
    "id": 2846,
    "declarations": "m: POINT; 28: NUMBER",
    "facts": "Min(XCoordinate(m)) = 28"
},
{
    "assertion": "Expression ( CURVE: N ) equals EXPRESSION: y*space=*spacex^2*space-*space4*x*space+*space4",
    "id": 2847,
    "declarations": "N: CURVE; y*space=*spacex^2*space-*space4*x*space+*space4: EXPRESSION",
    "facts": "Expression(N) = y*space=*spacex^2*space-*space4*x*space+*space4"
},
{
    "assertion": "Endpoint ( LINESEGMENT: s ) equals POINT: t",
    "id": 2848,
    "declarations": "s: LINESEGMENT; t: POINT",
    "facts": "Endpoint(s) = t"
},
{
    "assertion": "IsChordOf ( LineSegmentOf ( RightVertex ( CONICSECTION: V ), Center ( CONICSECTION: g ) ), CONICSECTION: i ) equals BOOL: True",
    "id": 2849,
    "declarations": "V: CONICSECTION; g: CONICSECTION; i: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(LineSegmentOf(RightVertex(V), Center(g)), i) = True"
},
{
    "assertion": "Diameter ( CIRCLE: V ) equals YCoordinate ( Incenter ( TRIANGLE: w ) )",
    "id": 2850,
    "declarations": "V: CIRCLE; w: TRIANGLE",
    "facts": "Diameter(V) = YCoordinate(Incenter(w))"
},
{
    "assertion": "LineSegmentOf ( LowerFocus ( CONICSECTION: i ), POINT: a ) equals RealAxis ( ELLIPSE: k )",
    "id": 2851,
    "declarations": "i: CONICSECTION; a: POINT; k: ELLIPSE",
    "facts": "LineSegmentOf(LowerFocus(i), a) = RealAxis(k)"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: s ) ) equals Eccentricity ( CONICSECTION: z )",
    "id": 2852,
    "declarations": "s: ELLIPSE; z: CONICSECTION",
    "facts": "Abs(MinorAxis(s)) = Eccentricity(z)"
},
{
    "assertion": "Directrix ( CONICSECTION: T ) equals RightDirectrix ( CONICSECTION: e )",
    "id": 2853,
    "declarations": "T: CONICSECTION; e: CONICSECTION",
    "facts": "Directrix(T) = RightDirectrix(e)"
},
{
    "assertion": "LocusEquation ( POINT: E ) equals EXPRESSION: y*space=*spacex^2*space-*space4*x*space+*space4",
    "id": 2854,
    "declarations": "E: POINT; y*space=*spacex^2*space-*space4*x*space+*space4: EXPRESSION",
    "facts": "LocusEquation(E) = y*space=*spacex^2*space-*space4*x*space+*space4"
},
{
    "assertion": "Distance ( POINT: w, Center ( CONICSECTION: N ) ) equals Perimeter ( CONICSECTION: W )",
    "id": 2855,
    "declarations": "w: POINT; N: CONICSECTION; W: CONICSECTION",
    "facts": "Distance(w, Center(N)) = Perimeter(W)"
},
{
    "assertion": "Diameter ( CIRCLE: I ) equals Perimeter ( CONICSECTION: W )",
    "id": 2856,
    "declarations": "I: CIRCLE; W: CONICSECTION",
    "facts": "Diameter(I) = Perimeter(W)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: h ) equals POINT: j",
    "id": 2857,
    "declarations": "h: CONICSECTION; j: POINT",
    "facts": "LeftFocus(h) = j"
},
{
    "assertion": "Projection ( POINT: w, RightDirectrix ( CONICSECTION: N ) ) equals POINT: Z",
    "id": 2859,
    "declarations": "w: POINT; N: CONICSECTION; Z: POINT",
    "facts": "Projection(w, RightDirectrix(N)) = Z"
},
{
    "assertion": "Min ( sqrt ( Min ( NUMBER: 29 ) ) ) equals Length ( LINESEGMENT: X )",
    "id": 2860,
    "declarations": "29: NUMBER; X: LINESEGMENT",
    "facts": "Min(sqrt(Min(29))) = Length(X)"
},
{
    "assertion": "IsDiameter ( MinorAxis ( ELLIPSE: u ), CIRCLE: u ) equals BOOL: False",
    "id": 2861,
    "declarations": "u: ELLIPSE; u: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MinorAxis(u), u) = False"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: l ) ) equals LINE: J",
    "id": 2862,
    "declarations": "l: ELLIPSE; J: LINE",
    "facts": "PerpendicularBisector(ImaginaryAxis(l)) = J"
},
{
    "assertion": "MinorAxis ( ELLIPSE: q ) equals RealAxis ( ELLIPSE: r )",
    "id": 2863,
    "declarations": "q: ELLIPSE; r: ELLIPSE",
    "facts": "MinorAxis(q) = RealAxis(r)"
},
{
    "assertion": "RightFocus ( CONICSECTION: D ) equals POINT: R",
    "id": 2864,
    "declarations": "D: CONICSECTION; R: POINT",
    "facts": "RightFocus(D) = R"
},
{
    "assertion": "Eccentricity ( CONICSECTION: e ) equals NUMBER: 3",
    "id": 2865,
    "declarations": "e: CONICSECTION; 3: NUMBER",
    "facts": "Eccentricity(e) = 3"
},
{
    "assertion": "CircumCircle ( TRIANGLE: V ) equals CIRCLE: X",
    "id": 2866,
    "declarations": "V: TRIANGLE; X: CIRCLE",
    "facts": "CircumCircle(V) = X"
},
{
    "assertion": "Quadrant ( Incenter ( TRIANGLE: v ) ) equals NumIntersection ( Locus ( Orthocenter ( TRIANGLE: k ) ), CURVE: x )",
    "id": 2867,
    "declarations": "v: TRIANGLE; k: TRIANGLE; x: CURVE",
    "facts": "Quadrant(Incenter(v)) = NumIntersection(Locus(Orthocenter(k)), x)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: M ) equals RealAxis ( ELLIPSE: E )",
    "id": 2868,
    "declarations": "M: ELLIPSE; E: ELLIPSE",
    "facts": "MajorAxis(M) = RealAxis(E)"
},
{
    "assertion": "Directrix ( CONICSECTION: k ) equals LINE: K",
    "id": 2869,
    "declarations": "k: CONICSECTION; K: LINE",
    "facts": "Directrix(k) = K"
},
{
    "assertion": "LocusEquation ( LowerFocus ( CONICSECTION: J ) ) equals Expression ( CURVE: C )",
    "id": 2870,
    "declarations": "J: CONICSECTION; C: CURVE",
    "facts": "LocusEquation(LowerFocus(J)) = Expression(C)"
},
{
    "assertion": "XCoordinate ( Center ( CONICSECTION: X ) ) equals NUMBER: 72",
    "id": 2871,
    "declarations": "X: CONICSECTION; 72: NUMBER",
    "facts": "XCoordinate(Center(X)) = 72"
},
{
    "assertion": "XCoordinate ( POINT: B ) equals NUMBER: 74",
    "id": 2872,
    "declarations": "B: POINT; 74: NUMBER",
    "facts": "XCoordinate(B) = 74"
},
{
    "assertion": "Vertex ( CONICSECTION: B ) equals POINT: G",
    "id": 2873,
    "declarations": "B: CONICSECTION; G: POINT",
    "facts": "Vertex(B) = G"
},
{
    "assertion": "TangentOfPoint ( LowerFocus ( CONICSECTION: A ), CURVE: A ) equals LINE: F",
    "id": 2874,
    "declarations": "A: CONICSECTION; A: CURVE; F: LINE",
    "facts": "TangentOfPoint(LowerFocus(A), A) = F"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: y, TRIANGLE: e ) equals BOOL: False",
    "id": 2875,
    "declarations": "y: CIRCLE; e: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(y, e) = False"
},
{
    "assertion": "NumIntersection ( Locus ( UpperVertex ( CONICSECTION: Z ) ), CURVE: O ) equals Diameter ( CIRCLE: c )",
    "id": 2876,
    "declarations": "Z: CONICSECTION; O: CURVE; c: CIRCLE",
    "facts": "NumIntersection(Locus(UpperVertex(Z)), O) = Diameter(c)"
},
{
    "assertion": "IsParallel ( LINE: k, LINE: x ) equals BOOL: False",
    "id": 2877,
    "declarations": "k: LINE; x: LINE; False: BOOL",
    "facts": "IsParallel(k, x) = False"
},
{
    "assertion": "Asymptote ( HYPERBOLA: j ) equals LINE: I",
    "id": 2878,
    "declarations": "j: HYPERBOLA; I: LINE",
    "facts": "Asymptote(j) = I"
},
{
    "assertion": "Area ( CONICSECTION: f ) equals NUMBER: -71",
    "id": 2879,
    "declarations": "f: CONICSECTION; -71: NUMBER",
    "facts": "Area(f) = -71"
},
{
    "assertion": "TangentPoint ( LINE: B, CIRCLE: g ) equals POINT: z",
    "id": 2880,
    "declarations": "B: LINE; g: CIRCLE; z: POINT",
    "facts": "TangentPoint(B, g) = z"
},
{
    "assertion": "NumIntersection ( CURVE: Y, CURVE: u ) equals InterReciprocal ( FocalLength ( CONICSECTION: D ) )",
    "id": 2881,
    "declarations": "Y: CURVE; u: CURVE; D: CONICSECTION",
    "facts": "NumIntersection(Y, u) = InterReciprocal(FocalLength(D))"
},
{
    "assertion": "IsOutTangent ( CIRCLE: m, CIRCLE: f ) equals BOOL: False",
    "id": 2882,
    "declarations": "m: CIRCLE; f: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(m, f) = False"
},
{
    "assertion": "IsIntersect ( LeftPart ( HYPERBOLA: l ), CURVE: E ) equals BOOL: True",
    "id": 2883,
    "declarations": "l: HYPERBOLA; E: CURVE; True: BOOL",
    "facts": "IsIntersect(LeftPart(l), E) = True"
},
{
    "assertion": "XCoordinate ( RightVertex ( CONICSECTION: x ) ) equals sqrt ( Quadrant ( Circumcenter ( TRIANGLE: H ) ) )",
    "id": 2884,
    "declarations": "x: CONICSECTION; H: TRIANGLE",
    "facts": "XCoordinate(RightVertex(x)) = sqrt(Quadrant(Circumcenter(H)))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: T ) equals Quadrant ( Center ( CONICSECTION: s ) )",
    "id": 2885,
    "declarations": "T: CONICSECTION; s: CONICSECTION",
    "facts": "Eccentricity(T) = Quadrant(Center(s))"
},
{
    "assertion": "InterceptChord ( LINE: i, CONICSECTION: H ) equals LINESEGMENT: x",
    "id": 2886,
    "declarations": "i: LINE; H: CONICSECTION; x: LINESEGMENT",
    "facts": "InterceptChord(i, H) = x"
},
{
    "assertion": "LeftFocus ( CONICSECTION: g ) equals Incenter ( TRIANGLE: Y )",
    "id": 2887,
    "declarations": "g: CONICSECTION; Y: TRIANGLE",
    "facts": "LeftFocus(g) = Incenter(Y)"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: n ) ) equals Center ( CONICSECTION: w )",
    "id": 2888,
    "declarations": "n: ELLIPSE; w: CONICSECTION",
    "facts": "MidPoint(MajorAxis(n)) = Center(w)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: E ) equals POINT: Q",
    "id": 2889,
    "declarations": "E: CONICSECTION; Q: POINT",
    "facts": "LeftFocus(E) = Q"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Q ) equals LowerVertex ( CONICSECTION: I )",
    "id": 2890,
    "declarations": "Q: TRIANGLE; I: CONICSECTION",
    "facts": "Orthocenter(Q) = LowerVertex(I)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: v ) equals Eccentricity ( CONICSECTION: J )",
    "id": 2891,
    "declarations": "v: CONICSECTION; J: CONICSECTION",
    "facts": "HalfFocalLength(v) = Eccentricity(J)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: Z ) equals POINT: l",
    "id": 2892,
    "declarations": "Z: TRIANGLE; l: POINT",
    "facts": "Circumcenter(Z) = l"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: m ) equals RightDirectrix ( CONICSECTION: Q )",
    "id": 2893,
    "declarations": "m: CONICSECTION; Q: CONICSECTION",
    "facts": "RightDirectrix(m) = RightDirectrix(Q)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: X, TRIANGLE: R ) equals BOOL: False",
    "id": 2894,
    "declarations": "X: CIRCLE; R: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(X, R) = False"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: i ) equals MajorAxis ( ELLIPSE: B )",
    "id": 2895,
    "declarations": "i: ELLIPSE; B: ELLIPSE",
    "facts": "ImaginaryAxis(i) = MajorAxis(B)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: q ) equals LINE: P",
    "id": 2896,
    "declarations": "q: LINESEGMENT; P: LINE",
    "facts": "PerpendicularBisector(q) = P"
},
{
    "assertion": "And ( RightFocus ( CONICSECTION: Y ) equals Circumcenter ( TRIANGLE: W ), TangentOfPoint ( Circumcenter ( TRIANGLE: z ), CURVE: H ) equals LINE: K ) equals BOOL: False",
    "id": 2897,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Asymptote ( HYPERBOLA: R ) equals OverlappingLine ( LINESEGMENT: h )",
    "id": 2898,
    "declarations": "R: HYPERBOLA; h: LINESEGMENT",
    "facts": "Asymptote(R) = OverlappingLine(h)"
},
{
    "assertion": "FootPoint ( LINE: X, LINE: M ) equals Projection ( Circumcenter ( TRIANGLE: g ), LINE: z )",
    "id": 2899,
    "declarations": "X: LINE; M: LINE; g: TRIANGLE; z: LINE",
    "facts": "FootPoint(X, M) = Projection(Circumcenter(g), z)"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: s ) ) equals NUMBER: 79",
    "id": 2900,
    "declarations": "s: TRIANGLE; 79: NUMBER",
    "facts": "Radius(CircumCircle(s)) = 79"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: m, TRIANGLE: N ) equals BOOL: False",
    "id": 2901,
    "declarations": "m: CIRCLE; N: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(m, N) = False"
},
{
    "assertion": "Diameter ( CIRCLE: p ) equals InterReciprocal ( NUMBER: -51 )",
    "id": 2902,
    "declarations": "p: CIRCLE; -51: NUMBER",
    "facts": "Diameter(p) = InterReciprocal(-51)"
},
{
    "assertion": "Locus ( UpperFocus ( CONICSECTION: r ) ) equals CURVE: G",
    "id": 2903,
    "declarations": "r: CONICSECTION; G: CURVE",
    "facts": "Locus(UpperFocus(r)) = G"
},
{
    "assertion": "LeftFocus ( CONICSECTION: X ) equals POINT: c",
    "id": 2904,
    "declarations": "X: CONICSECTION; c: POINT",
    "facts": "LeftFocus(X) = c"
},
{
    "assertion": "lg ( Slope ( OverlappingLine ( InterceptChord ( RightDirectrix ( CONICSECTION: L ), CONICSECTION: b ) ) ) ) equals NUMBER: -10",
    "id": 2905,
    "declarations": "L: CONICSECTION; b: CONICSECTION; -10: NUMBER",
    "facts": "lg(Slope(OverlappingLine(InterceptChord(RightDirectrix(L), b)))) = -10"
},
{
    "assertion": "LineOf ( RightVertex ( CONICSECTION: m ), UpperVertex ( CONICSECTION: B ) ) equals LINE: l",
    "id": 2906,
    "declarations": "m: CONICSECTION; B: CONICSECTION; l: LINE",
    "facts": "LineOf(RightVertex(m), UpperVertex(B)) = l"
},
{
    "assertion": "Diameter ( CIRCLE: G ) equals Quadrant ( LowerVertex ( CONICSECTION: L ) )",
    "id": 2907,
    "declarations": "G: CIRCLE; L: CONICSECTION",
    "facts": "Diameter(G) = Quadrant(LowerVertex(L))"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: r ) ) equals NumIntersection ( CURVE: c, CURVE: l )",
    "id": 2908,
    "declarations": "r: CONICSECTION; c: CURVE; l: CURVE",
    "facts": "Slope(RightDirectrix(r)) = NumIntersection(c, l)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: t ) equals POINT: Y",
    "id": 2909,
    "declarations": "t: CONICSECTION; Y: POINT",
    "facts": "LowerVertex(t) = Y"
},
{
    "assertion": "LeftPart ( HYPERBOLA: N ) equals CURVE: d",
    "id": 2910,
    "declarations": "N: HYPERBOLA; d: CURVE",
    "facts": "LeftPart(N) = d"
},
{
    "assertion": "Center ( CONICSECTION: l ) equals POINT: J",
    "id": 2911,
    "declarations": "l: CONICSECTION; J: POINT",
    "facts": "Center(l) = J"
},
{
    "assertion": "Slope ( LINE: M ) equals HalfFocalLength ( CONICSECTION: v )",
    "id": 2912,
    "declarations": "M: LINE; v: CONICSECTION",
    "facts": "Slope(M) = HalfFocalLength(v)"
},
{
    "assertion": "Incenter ( TRIANGLE: S ) equals MidPoint ( LINESEGMENT: r )",
    "id": 2913,
    "declarations": "S: TRIANGLE; r: LINESEGMENT",
    "facts": "Incenter(S) = MidPoint(r)"
},
{
    "assertion": "ApplyUnit ( Inclination ( LeftDirectrix ( CONICSECTION: L ) ), DEGREESTR: degree )",
    "id": 2914,
    "declarations": "L: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Inclination(LeftDirectrix(L)), degree) = None"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: m, CIRCLE: e ) equals BOOL: False",
    "id": 2915,
    "declarations": "m: LINESEGMENT; e: CIRCLE; False: BOOL",
    "facts": "IsDiameter(m, e) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: Y ) equals NUMBER: 26",
    "id": 2916,
    "declarations": "Y: CONICSECTION; 26: NUMBER",
    "facts": "Perimeter(Y) = 26"
},
{
    "assertion": "RightFocus ( CONICSECTION: u ) equals POINT: a",
    "id": 2917,
    "declarations": "u: CONICSECTION; a: POINT",
    "facts": "RightFocus(u) = a"
},
{
    "assertion": "Between ( FootPoint ( LINE: v, LINE: M ), LowerFocus ( CONICSECTION: t ), Orthocenter ( TRIANGLE: F ) ) equals BOOL: False",
    "id": 2918,
    "declarations": "v: LINE; M: LINE; t: CONICSECTION; F: TRIANGLE; False: BOOL",
    "facts": "Between(FootPoint(v, M), LowerFocus(t), Orthocenter(F)) = False"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: V ) equals LINE: O",
    "id": 2919,
    "declarations": "V: CONICSECTION; O: LINE",
    "facts": "RightDirectrix(V) = O"
},
{
    "assertion": "InterReciprocal ( Inclination ( LINE: x ) ) equals NUMBER: 58",
    "id": 2920,
    "declarations": "x: LINE; 58: NUMBER",
    "facts": "InterReciprocal(Inclination(x)) = 58"
},
{
    "assertion": "Slope ( LeftDirectrix ( CONICSECTION: G ) ) equals XCoordinate ( LowerVertex ( CONICSECTION: P ) )",
    "id": 2921,
    "declarations": "G: CONICSECTION; P: CONICSECTION",
    "facts": "Slope(LeftDirectrix(G)) = XCoordinate(LowerVertex(P))"
},
{
    "assertion": "IsPerpendicular ( LINE: d, LINE: Q ) equals BOOL: True",
    "id": 2922,
    "declarations": "d: LINE; Q: LINE; True: BOOL",
    "facts": "IsPerpendicular(d, Q) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: H ) equals POINT: x",
    "id": 2923,
    "declarations": "H: TRIANGLE; x: POINT",
    "facts": "Orthocenter(H) = x"
},
{
    "assertion": "IsChordOf ( ImaginaryAxis ( ELLIPSE: j ), CONICSECTION: t ) equals BOOL: False",
    "id": 2924,
    "declarations": "j: ELLIPSE; t: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(ImaginaryAxis(j), t) = False"
},
{
    "assertion": "Length ( LINESEGMENT: h ) equals Slope ( LINE: O )",
    "id": 2925,
    "declarations": "h: LINESEGMENT; O: LINE",
    "facts": "Length(h) = Slope(O)"
},
{
    "assertion": "Diameter ( CIRCLE: E ) equals Quadrant ( Orthocenter ( TRIANGLE: i ) )",
    "id": 2926,
    "declarations": "E: CIRCLE; i: TRIANGLE",
    "facts": "Diameter(E) = Quadrant(Orthocenter(i))"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: D ) equals TangentOfPoint ( POINT: O, CURVE: v )",
    "id": 2927,
    "declarations": "D: LINESEGMENT; O: POINT; v: CURVE",
    "facts": "OverlappingLine(D) = TangentOfPoint(O, v)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: b ) equals RightPart ( HYPERBOLA: V )",
    "id": 2928,
    "declarations": "b: HYPERBOLA; V: HYPERBOLA",
    "facts": "LeftPart(b) = RightPart(V)"
},
{
    "assertion": "Perimeter ( CONICSECTION: r ) equals Slope ( LINE: x )",
    "id": 2929,
    "declarations": "r: CONICSECTION; x: LINE",
    "facts": "Perimeter(r) = Slope(x)"
},
{
    "assertion": "Area ( CONICSECTION: F ) equals YCoordinate ( POINT: S )",
    "id": 2930,
    "declarations": "F: CONICSECTION; S: POINT",
    "facts": "Area(F) = YCoordinate(S)"
},
{
    "assertion": "Area ( CONICSECTION: S ) equals YCoordinate ( MidPoint ( LINESEGMENT: a ) )",
    "id": 2931,
    "declarations": "S: CONICSECTION; a: LINESEGMENT",
    "facts": "Area(S) = YCoordinate(MidPoint(a))"
},
{
    "assertion": "Area ( CONICSECTION: K ) equals InterReciprocal ( Area ( CONICSECTION: H ) )",
    "id": 2932,
    "declarations": "K: CONICSECTION; H: CONICSECTION",
    "facts": "Area(K) = InterReciprocal(Area(H))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: n ) equals RightVertex ( CONICSECTION: O )",
    "id": 2933,
    "declarations": "n: CONICSECTION; O: CONICSECTION",
    "facts": "LowerVertex(n) = RightVertex(O)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: f, TRIANGLE: J ) equals BOOL: True",
    "id": 2934,
    "declarations": "f: CIRCLE; J: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(f, J) = True"
},
{
    "assertion": "Focus ( CONICSECTION: D ) equals Orthocenter ( TRIANGLE: V )",
    "id": 2935,
    "declarations": "D: CONICSECTION; V: TRIANGLE",
    "facts": "Focus(D) = Orthocenter(V)"
},
{
    "assertion": "RightVertex ( CONICSECTION: e ) equals POINT: y",
    "id": 2936,
    "declarations": "e: CONICSECTION; y: POINT",
    "facts": "RightVertex(e) = y"
},
{
    "assertion": "RealAxis ( ELLIPSE: U ) equals LINESEGMENT: H",
    "id": 2937,
    "declarations": "U: ELLIPSE; H: LINESEGMENT",
    "facts": "RealAxis(U) = H"
},
{
    "assertion": "Center ( CONICSECTION: u ) equals RightVertex ( CONICSECTION: Z )",
    "id": 2938,
    "declarations": "u: CONICSECTION; Z: CONICSECTION",
    "facts": "Center(u) = RightVertex(Z)"
},
{
    "assertion": "Directrix ( CONICSECTION: I ) equals PerpendicularBisector ( LINESEGMENT: g )",
    "id": 2939,
    "declarations": "I: CONICSECTION; g: LINESEGMENT",
    "facts": "Directrix(I) = PerpendicularBisector(g)"
},
{
    "assertion": "LineOf ( Center ( CONICSECTION: e ), LowerFocus ( CONICSECTION: a ) ) equals LINE: J",
    "id": 2940,
    "declarations": "e: CONICSECTION; a: CONICSECTION; J: LINE",
    "facts": "LineOf(Center(e), LowerFocus(a)) = J"
},
{
    "assertion": "Diameter ( CIRCLE: N ) equals NUMBER: -63",
    "id": 2941,
    "declarations": "N: CIRCLE; -63: NUMBER",
    "facts": "Diameter(N) = -63"
},
{
    "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: S ) ) equals NUMBER: 26",
    "id": 2942,
    "declarations": "S: CONICSECTION; 26: NUMBER",
    "facts": "XCoordinate(UpperVertex(S)) = 26"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: u ) equals LINE: B",
    "id": 2944,
    "declarations": "u: CONICSECTION; B: LINE",
    "facts": "RightDirectrix(u) = B"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: I ) equals LINE: p",
    "id": 2945,
    "declarations": "I: CONICSECTION; p: LINE",
    "facts": "LeftDirectrix(I) = p"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: l, CONICSECTION: C ) equals BOOL: False",
    "id": 2946,
    "declarations": "l: LINESEGMENT; C: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(l, C) = False"
},
{
    "assertion": "Eccentricity ( CONICSECTION: h ) equals NUMBER: 85",
    "id": 2947,
    "declarations": "h: CONICSECTION; 85: NUMBER",
    "facts": "Eccentricity(h) = 85"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: y ) equals LINESEGMENT: u",
    "id": 2948,
    "declarations": "y: ELLIPSE; u: LINESEGMENT",
    "facts": "ImaginaryAxis(y) = u"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: a ) equals LINE: u",
    "id": 2949,
    "declarations": "a: CONICSECTION; u: LINE",
    "facts": "LeftDirectrix(a) = u"
},
{
    "assertion": "Inclination ( RightDirectrix ( CONICSECTION: D ) ) equals NUMBER: 17",
    "id": 2950,
    "declarations": "D: CONICSECTION; 17: NUMBER",
    "facts": "Inclination(RightDirectrix(D)) = 17"
},
{
    "assertion": "Asymptote ( HYPERBOLA: z ) equals LINE: P",
    "id": 2951,
    "declarations": "z: HYPERBOLA; P: LINE",
    "facts": "Asymptote(z) = P"
},
{
    "assertion": "IsTangent ( LINE: y, CONICSECTION: e ) equals BOOL: True",
    "id": 2952,
    "declarations": "y: LINE; e: CONICSECTION; True: BOOL",
    "facts": "IsTangent(y, e) = True"
},
{
    "assertion": "LeftPart ( HYPERBOLA: D ) equals CURVE: g",
    "id": 2953,
    "declarations": "D: HYPERBOLA; g: CURVE",
    "facts": "LeftPart(D) = g"
},
{
    "assertion": "LocusEquation ( POINT: K ) equals EXPRESSION: x*space+*spacey^2*space=*space9",
    "id": 2954,
    "declarations": "K: POINT; x*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "LocusEquation(K) = x*space+*spacey^2*space=*space9"
},
{
    "assertion": "TangentOnPoint ( POINT: g, CURVE: P ) equals RightDirectrix ( CONICSECTION: o )",
    "id": 2955,
    "declarations": "g: POINT; P: CURVE; o: CONICSECTION",
    "facts": "TangentOnPoint(g, P) = RightDirectrix(o)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: d ) equals POINT: k",
    "id": 2956,
    "declarations": "d: LINESEGMENT; k: POINT",
    "facts": "MidPoint(d) = k"
},
{
    "assertion": "Directrix ( CONICSECTION: u ) equals LINE: T",
    "id": 2957,
    "declarations": "u: CONICSECTION; T: LINE",
    "facts": "Directrix(u) = T"
},
{
    "assertion": "MinorAxis ( ELLIPSE: z ) equals LINESEGMENT: u",
    "id": 2958,
    "declarations": "z: ELLIPSE; u: LINESEGMENT",
    "facts": "MinorAxis(z) = u"
},
{
    "assertion": "RightVertex ( CONICSECTION: c ) equals POINT: W",
    "id": 2959,
    "declarations": "c: CONICSECTION; W: POINT",
    "facts": "RightVertex(c) = W"
},
{
    "assertion": "MajorAxis ( ELLIPSE: T ) equals LINESEGMENT: b",
    "id": 2960,
    "declarations": "T: ELLIPSE; b: LINESEGMENT",
    "facts": "MajorAxis(T) = b"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: p ) equals LINE: M",
    "id": 2961,
    "declarations": "p: CONICSECTION; M: LINE",
    "facts": "RightDirectrix(p) = M"
},
{
    "assertion": "RightPart ( HYPERBOLA: D ) equals Locus ( POINT: B )",
    "id": 2962,
    "declarations": "D: HYPERBOLA; B: POINT",
    "facts": "RightPart(D) = Locus(B)"
},
{
    "assertion": "Center ( CONICSECTION: z ) equals POINT: W",
    "id": 2963,
    "declarations": "z: CONICSECTION; W: POINT",
    "facts": "Center(z) = W"
},
{
    "assertion": "LeftPart ( HYPERBOLA: k ) equals CURVE: y",
    "id": 2964,
    "declarations": "k: HYPERBOLA; y: CURVE",
    "facts": "LeftPart(k) = y"
},
{
    "assertion": "Eccentricity ( CONICSECTION: v ) equals NUMBER: -72",
    "id": 2965,
    "declarations": "v: CONICSECTION; -72: NUMBER",
    "facts": "Eccentricity(v) = -72"
},
{
    "assertion": "Radius ( CIRCLE: I ) equals NUMBER: -54",
    "id": 2966,
    "declarations": "I: CIRCLE; -54: NUMBER",
    "facts": "Radius(I) = -54"
},
{
    "assertion": "Circumcenter ( TRIANGLE: x ) equals LowerVertex ( CONICSECTION: Q )",
    "id": 2967,
    "declarations": "x: TRIANGLE; Q: CONICSECTION",
    "facts": "Circumcenter(x) = LowerVertex(Q)"
},
{
    "assertion": "LineSegmentOf ( POINT: w, LowerFocus ( CONICSECTION: T ) ) equals RealAxis ( ELLIPSE: X )",
    "id": 2968,
    "declarations": "w: POINT; T: CONICSECTION; X: ELLIPSE",
    "facts": "LineSegmentOf(w, LowerFocus(T)) = RealAxis(X)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: R ) equals LINE: H",
    "id": 2969,
    "declarations": "R: LINESEGMENT; H: LINE",
    "facts": "OverlappingLine(R) = H"
},
{
    "assertion": "TangentPoint ( LINE: m, CIRCLE: w ) equals POINT: k",
    "id": 2970,
    "declarations": "m: LINE; w: CIRCLE; k: POINT",
    "facts": "TangentPoint(m, w) = k"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: r, TRIANGLE: H ) equals BOOL: True",
    "id": 2971,
    "declarations": "r: CIRCLE; H: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(r, H) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: I ) equals Incenter ( TRIANGLE: y )",
    "id": 2972,
    "declarations": "I: TRIANGLE; y: TRIANGLE",
    "facts": "Orthocenter(I) = Incenter(y)"
},
{
    "assertion": "VectorOf ( POINT: N, POINT: K ) equals VECTOR: R",
    "id": 2973,
    "declarations": "N: POINT; K: POINT; R: VECTOR",
    "facts": "VectorOf(N, K) = R"
},
{
    "assertion": "Abs ( LINESEGMENT: S ) equals Slope ( LINE: a )",
    "id": 2974,
    "declarations": "S: LINESEGMENT; a: LINE",
    "facts": "Abs(S) = Slope(a)"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: C ) ) equals LINE: Z",
    "id": 2975,
    "declarations": "C: ELLIPSE; Z: LINE",
    "facts": "OverlappingLine(MajorAxis(C)) = Z"
},
{
    "assertion": "Length ( MinorAxis ( ELLIPSE: F ) ) equals FocalLength ( CONICSECTION: J )",
    "id": 2976,
    "declarations": "F: ELLIPSE; J: CONICSECTION",
    "facts": "Length(MinorAxis(F)) = FocalLength(J)"
},
{
    "assertion": "Incenter ( TRIANGLE: s ) equals RightFocus ( CONICSECTION: u )",
    "id": 2977,
    "declarations": "s: TRIANGLE; u: CONICSECTION",
    "facts": "Incenter(s) = RightFocus(u)"
},
{
    "assertion": "And ( LeftFocus ( CONICSECTION: u ) equals UpperVertex ( CONICSECTION: N ), LocusEquation ( LeftFocus ( CONICSECTION: i ) ) equals EXPRESSION: y*space=*space3*x*space+*space2 ) equals BOOL: False",
    "id": 2978,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Abs ( LINESEGMENT: F ) equals Min ( HalfFocalLength ( CONICSECTION: t ) )",
    "id": 2979,
    "declarations": "F: LINESEGMENT; t: CONICSECTION",
    "facts": "Abs(F) = Min(HalfFocalLength(t))"
},
{
    "assertion": "Incenter ( TriangleOf ( LeftVertex ( CONICSECTION: W ), RightFocus ( CONICSECTION: L ), POINT: g ) ) equals RightVertex ( CONICSECTION: q )",
    "id": 2980,
    "declarations": "W: CONICSECTION; L: CONICSECTION; g: POINT; q: CONICSECTION",
    "facts": "Incenter(TriangleOf(LeftVertex(W), RightFocus(L), g)) = RightVertex(q)"
},
{
    "assertion": "NumIntersection ( CURVE: Z, CURVE: t ) equals lg ( Radius ( CIRCLE: g ) )",
    "id": 2981,
    "declarations": "Z: CURVE; t: CURVE; g: CIRCLE",
    "facts": "NumIntersection(Z, t) = lg(Radius(g))"
},
{
    "assertion": "Area ( CONICSECTION: A ) equals lg ( Min ( NUMBER: -21 ) )",
    "id": 2982,
    "declarations": "A: CONICSECTION; -21: NUMBER",
    "facts": "Area(A) = lg(Min(-21))"
},
{
    "assertion": "RightVertex ( CONICSECTION: F ) equals LeftVertex ( CONICSECTION: x )",
    "id": 2983,
    "declarations": "F: CONICSECTION; x: CONICSECTION",
    "facts": "RightVertex(F) = LeftVertex(x)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: u ) equals Orthocenter ( TRIANGLE: Y )",
    "id": 2984,
    "declarations": "u: CONICSECTION; Y: TRIANGLE",
    "facts": "UpperVertex(u) = Orthocenter(Y)"
},
{
    "assertion": "Incenter ( TRIANGLE: M ) equals RightVertex ( CONICSECTION: N )",
    "id": 2985,
    "declarations": "M: TRIANGLE; N: CONICSECTION",
    "facts": "Incenter(M) = RightVertex(N)"
},
{
    "assertion": "LocusEquation ( Circumcenter ( TRIANGLE: f ) ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 2986,
    "declarations": "f: TRIANGLE; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "LocusEquation(Circumcenter(f)) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "Diameter ( CIRCLE: o ) equals Min ( Area ( CONICSECTION: F ) )",
    "id": 2987,
    "declarations": "o: CIRCLE; F: CONICSECTION",
    "facts": "Diameter(o) = Min(Area(F))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: N ) equals FootPoint ( LINE: s, LineOf ( POINT: l, Orthocenter ( TRIANGLE: Y ) ) )",
    "id": 2988,
    "declarations": "N: CONICSECTION; s: LINE; l: POINT; Y: TRIANGLE",
    "facts": "UpperFocus(N) = FootPoint(s, LineOf(l, Orthocenter(Y)))"
},
{
    "assertion": "DotProduct ( VECTOR: y, VECTOR: z ) equals NUMBER: 2",
    "id": 2989,
    "declarations": "y: VECTOR; z: VECTOR; 2: NUMBER",
    "facts": "DotProduct(y, z) = 2"
},
{
    "assertion": "Inclination ( LINE: n ) equals Diameter ( CIRCLE: y )",
    "id": 2990,
    "declarations": "n: LINE; y: CIRCLE",
    "facts": "Inclination(n) = Diameter(y)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: R ) equals LINE: N",
    "id": 2991,
    "declarations": "R: CONICSECTION; N: LINE",
    "facts": "LeftDirectrix(R) = N"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: C, CONICSECTION: l ) equals BOOL: True",
    "id": 2992,
    "declarations": "C: LINESEGMENT; l: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(C, l) = True"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: z ) equals LINE: y",
    "id": 2993,
    "declarations": "z: LINESEGMENT; y: LINE",
    "facts": "PerpendicularBisector(z) = y"
},
{
    "assertion": "Area ( CONICSECTION: d ) equals Radius ( CIRCLE: x )",
    "id": 2994,
    "declarations": "d: CONICSECTION; x: CIRCLE",
    "facts": "Area(d) = Radius(x)"
},
{
    "assertion": "Center ( CONICSECTION: P ) equals POINT: p",
    "id": 2995,
    "declarations": "P: CONICSECTION; p: POINT",
    "facts": "Center(P) = p"
},
{
    "assertion": "Eccentricity ( CONICSECTION: V ) equals Intercept ( LINE: F, AXIS: xAxis )",
    "id": 2996,
    "declarations": "V: CONICSECTION; F: LINE; xAxis: AXIS",
    "facts": "Eccentricity(V) = Intercept(F, xAxis)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: i ) equals LeftFocus ( CONICSECTION: n )",
    "id": 2997,
    "declarations": "i: TRIANGLE; n: CONICSECTION",
    "facts": "Circumcenter(i) = LeftFocus(n)"
},
{
    "assertion": "Diameter ( CIRCLE: l ) equals InterReciprocal ( YCoordinate ( LeftVertex ( CONICSECTION: v ) ) )",
    "id": 2998,
    "declarations": "l: CIRCLE; v: CONICSECTION",
    "facts": "Diameter(l) = InterReciprocal(YCoordinate(LeftVertex(v)))"
},
{
    "assertion": "Expression ( CURVE: o ) equals EXPRESSION: y*space=*spacex^3*space-*space4*x",
    "id": 2999,
    "declarations": "o: CURVE; y*space=*spacex^3*space-*space4*x: EXPRESSION",
    "facts": "Expression(o) = y*space=*spacex^3*space-*space4*x"
},
{
    "assertion": "DotProduct ( VECTOR: N, VECTOR: a ) equals sqrt ( Min ( NUMBER: 52 ) )",
    "id": 3000,
    "declarations": "N: VECTOR; a: VECTOR; 52: NUMBER",
    "facts": "DotProduct(N, a) = sqrt(Min(52))"
},
{
    "assertion": "Quadrant ( POINT: d ) equals XCoordinate ( MidPoint ( LINESEGMENT: w ) )",
    "id": 3001,
    "declarations": "d: POINT; w: LINESEGMENT",
    "facts": "Quadrant(d) = XCoordinate(MidPoint(w))"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: W ) ) equals CURVE: f",
    "id": 3002,
    "declarations": "W: CONICSECTION; f: CURVE",
    "facts": "Locus(LeftFocus(W)) = f"
},
{
    "assertion": "MidPoint ( LINESEGMENT: a ) equals POINT: E",
    "id": 3003,
    "declarations": "a: LINESEGMENT; E: POINT",
    "facts": "MidPoint(a) = E"
},
{
    "assertion": "IsParallel ( LINE: c, PerpendicularBisector ( LINESEGMENT: j ) ) equals BOOL: False",
    "id": 3004,
    "declarations": "c: LINE; j: LINESEGMENT; False: BOOL",
    "facts": "IsParallel(c, PerpendicularBisector(j)) = False"
},
{
    "assertion": "TangentOfPoint ( RightFocus ( CONICSECTION: W ), CURVE: t ) equals LeftDirectrix ( CONICSECTION: r )",
    "id": 3005,
    "declarations": "W: CONICSECTION; t: CURVE; r: CONICSECTION",
    "facts": "TangentOfPoint(RightFocus(W), t) = LeftDirectrix(r)"
},
{
    "assertion": "RightVertex ( CONICSECTION: G ) equals POINT: k",
    "id": 3006,
    "declarations": "G: CONICSECTION; k: POINT",
    "facts": "RightVertex(G) = k"
},
{
    "assertion": "IsPerpendicular ( LINE: v, PerpendicularBisector ( RealAxis ( ELLIPSE: W ) ) ) equals BOOL: False",
    "id": 3007,
    "declarations": "v: LINE; W: ELLIPSE; False: BOOL",
    "facts": "IsPerpendicular(v, PerpendicularBisector(RealAxis(W))) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: K ) equals RightFocus ( CONICSECTION: h )",
    "id": 3008,
    "declarations": "K: CONICSECTION; h: CONICSECTION",
    "facts": "LowerVertex(K) = RightFocus(h)"
},
{
    "assertion": "Quadrant ( POINT: L ) equals NUMBER: 40",
    "id": 3009,
    "declarations": "L: POINT; 40: NUMBER",
    "facts": "Quadrant(L) = 40"
},
{
    "assertion": "PointOnCurve ( LowerFocus ( CONICSECTION: s ), CURVE: B ) equals BOOL: True",
    "id": 3010,
    "declarations": "s: CONICSECTION; B: CURVE; True: BOOL",
    "facts": "PointOnCurve(LowerFocus(s), B) = True"
},
{
    "assertion": "AngleOf ( MidPoint ( LINESEGMENT: n ), POINT: h, Circumcenter ( TRIANGLE: Y ) ) equals ApplyUnit ( FocalLength ( CONICSECTION: a ), DEGREESTR: degree )",
    "id": 3011,
    "declarations": "n: LINESEGMENT; h: POINT; Y: TRIANGLE; a: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(MidPoint(n), h, Circumcenter(Y)) = ApplyUnit(FocalLength(a), degree)"
},
{
    "assertion": "Max ( NUMBER: 21 ) equals NUMBER: -50",
    "id": 3012,
    "declarations": "21: NUMBER; -50: NUMBER",
    "facts": "Max(21) = -50"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: c, TRIANGLE: d ) equals BOOL: True",
    "id": 3013,
    "declarations": "c: CIRCLE; d: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(c, d) = True"
},
{
    "assertion": "LowerVertex ( CONICSECTION: N ) equals POINT: q",
    "id": 3014,
    "declarations": "N: CONICSECTION; q: POINT",
    "facts": "LowerVertex(N) = q"
},
{
    "assertion": "Projection ( Orthocenter ( TRIANGLE: X ), TangentOnPoint ( Projection ( Projection ( FootPoint ( LINE: e, LINE: G ), LINE: a ), LINE: X ), CURVE: z ) ) equals POINT: I",
    "id": 3015,
    "declarations": "X: TRIANGLE; e: LINE; G: LINE; a: LINE; X: LINE; z: CURVE; I: POINT",
    "facts": "Projection(Orthocenter(X), TangentOnPoint(Projection(Projection(FootPoint(e, G), a), X), z)) = I"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: f ) ) equals EXPRESSION: x^2*space+*spacexy*space+*spacey^2*space=*space1",
    "id": 3016,
    "declarations": "f: HYPERBOLA; x^2*space+*spacexy*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "Expression(LeftPart(f)) = x^2*space+*spacexy*space+*spacey^2*space=*space1"
},
{
    "assertion": "Quadrant ( POINT: q ) equals Slope ( LINE: B )",
    "id": 3017,
    "declarations": "q: POINT; B: LINE",
    "facts": "Quadrant(q) = Slope(B)"
},
{
    "assertion": "FootPoint ( LINE: C, LINE: g ) equals LowerFocus ( CONICSECTION: m )",
    "id": 3018,
    "declarations": "C: LINE; g: LINE; m: CONICSECTION",
    "facts": "FootPoint(C, g) = LowerFocus(m)"
},
{
    "assertion": "TangentOfPoint ( POINT: C, CURVE: k ) equals LINE: w",
    "id": 3020,
    "declarations": "C: POINT; k: CURVE; w: LINE",
    "facts": "TangentOfPoint(C, k) = w"
},
{
    "assertion": "LeftFocus ( CONICSECTION: z ) equals RightVertex ( CONICSECTION: W )",
    "id": 3021,
    "declarations": "z: CONICSECTION; W: CONICSECTION",
    "facts": "LeftFocus(z) = RightVertex(W)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: a ) equals Circumcenter ( TRIANGLE: g )",
    "id": 3022,
    "declarations": "a: CONICSECTION; g: TRIANGLE",
    "facts": "UpperFocus(a) = Circumcenter(g)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: D, CONICSECTION: s ) equals BOOL: False",
    "id": 3023,
    "declarations": "D: LINESEGMENT; s: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(D, s) = False"
},
{
    "assertion": "MidPoint ( LINESEGMENT: L ) equals POINT: H",
    "id": 3024,
    "declarations": "L: LINESEGMENT; H: POINT",
    "facts": "MidPoint(L) = H"
},
{
    "assertion": "Circumcenter ( TRIANGLE: e ) equals POINT: E",
    "id": 3025,
    "declarations": "e: TRIANGLE; E: POINT",
    "facts": "Circumcenter(e) = E"
},
{
    "assertion": "Negation ( MajorAxis ( ELLIPSE: n ) equals LINESEGMENT: B ) equals BOOL: True",
    "id": 3026,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Locus ( Projection ( POINT: g, LINE: v ) ) equals CURVE: u",
    "id": 3027,
    "declarations": "g: POINT; v: LINE; u: CURVE",
    "facts": "Locus(Projection(g, v)) = u"
},
{
    "assertion": "Negation ( Asymptote ( HYPERBOLA: m ) equals LINE: L ) equals BOOL: False",
    "id": 3028,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "XCoordinate ( LeftVertex ( CONICSECTION: B ) ) equals sqrt ( sqrt ( HalfFocalLength ( CONICSECTION: y ) ) )",
    "id": 3029,
    "declarations": "B: CONICSECTION; y: CONICSECTION",
    "facts": "XCoordinate(LeftVertex(B)) = sqrt(sqrt(HalfFocalLength(y)))"
},
{
    "assertion": "RealAxis ( ELLIPSE: b ) equals LINESEGMENT: a",
    "id": 3030,
    "declarations": "b: ELLIPSE; a: LINESEGMENT",
    "facts": "RealAxis(b) = a"
},
{
    "assertion": "VectorOf ( POINT: M, POINT: w ) equals VECTOR: H",
    "id": 3031,
    "declarations": "M: POINT; w: POINT; H: VECTOR",
    "facts": "VectorOf(M, w) = H"
},
{
    "assertion": "IsTangent ( LINE: F, CONICSECTION: X ) equals BOOL: True",
    "id": 3032,
    "declarations": "F: LINE; X: CONICSECTION; True: BOOL",
    "facts": "IsTangent(F, X) = True"
},
{
    "assertion": "OverlappingLine ( RealAxis ( ELLIPSE: a ) ) equals LINE: p",
    "id": 3033,
    "declarations": "a: ELLIPSE; p: LINE",
    "facts": "OverlappingLine(RealAxis(a)) = p"
},
{
    "assertion": "Asymptote ( HYPERBOLA: I ) equals LINE: H",
    "id": 3034,
    "declarations": "I: HYPERBOLA; H: LINE",
    "facts": "Asymptote(I) = H"
},
{
    "assertion": "Length ( MinorAxis ( ELLIPSE: r ) ) equals NUMBER: 60",
    "id": 3035,
    "declarations": "r: ELLIPSE; 60: NUMBER",
    "facts": "Length(MinorAxis(r)) = 60"
},
{
    "assertion": "Expression ( Locus ( POINT: M ) ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 3036,
    "declarations": "M: POINT; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "Expression(Locus(M)) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "Max ( NUMBER: -92 ) equals Abs ( MajorAxis ( ELLIPSE: f ) )",
    "id": 3037,
    "declarations": "-92: NUMBER; f: ELLIPSE",
    "facts": "Max(-92) = Abs(MajorAxis(f))"
},
{
    "assertion": "Intercept ( LeftDirectrix ( CONICSECTION: S ), AXIS: yAxis ) equals NUMBER: -43",
    "id": 3038,
    "declarations": "S: CONICSECTION; yAxis: AXIS; -43: NUMBER",
    "facts": "Intercept(LeftDirectrix(S), yAxis) = -43"
},
{
    "assertion": "IsInTangent ( CIRCLE: Z, CIRCLE: G ) equals BOOL: True",
    "id": 3039,
    "declarations": "Z: CIRCLE; G: CIRCLE; True: BOOL",
    "facts": "IsInTangent(Z, G) = True"
},
{
    "assertion": "Quadrant ( LeftFocus ( CONICSECTION: n ) ) equals NUMBER: -81",
    "id": 3040,
    "declarations": "n: CONICSECTION; -81: NUMBER",
    "facts": "Quadrant(LeftFocus(n)) = -81"
},
{
    "assertion": "Negation ( RightFocus ( CONICSECTION: e ) equals POINT: z ) equals BOOL: False",
    "id": 3041,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: t ) ) equals LINE: t",
    "id": 3042,
    "declarations": "t: ELLIPSE; t: LINE",
    "facts": "PerpendicularBisector(ImaginaryAxis(t)) = t"
},
{
    "assertion": "Inclination ( LINE: z ) equals Abs ( LineSegmentOf ( POINT: w, POINT: S ) )",
    "id": 3043,
    "declarations": "z: LINE; w: POINT; S: POINT",
    "facts": "Inclination(z) = Abs(LineSegmentOf(w, S))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: e ) equals PerpendicularBisector ( MinorAxis ( ELLIPSE: F ) )",
    "id": 3044,
    "declarations": "e: CONICSECTION; F: ELLIPSE",
    "facts": "RightDirectrix(e) = PerpendicularBisector(MinorAxis(F))"
},
{
    "assertion": "Quadrant ( POINT: n ) equals FocalLength ( CONICSECTION: K )",
    "id": 3045,
    "declarations": "n: POINT; K: CONICSECTION",
    "facts": "Quadrant(n) = FocalLength(K)"
},
{
    "assertion": "Intersection ( CURVE: C, CURVE: q ) equals POINT: n",
    "id": 3046,
    "declarations": "C: CURVE; q: CURVE; n: POINT",
    "facts": "Intersection(C, q) = n"
},
{
    "assertion": "LeftFocus ( CONICSECTION: s ) equals Orthocenter ( TRIANGLE: o )",
    "id": 3047,
    "declarations": "s: CONICSECTION; o: TRIANGLE",
    "facts": "LeftFocus(s) = Orthocenter(o)"
},
{
    "assertion": "sqrt ( XCoordinate ( POINT: S ) ) equals NUMBER: 99",
    "id": 3048,
    "declarations": "S: POINT; 99: NUMBER",
    "facts": "sqrt(XCoordinate(S)) = 99"
},
{
    "assertion": "Inclination ( LINE: E ) equals NUMBER: -86",
    "id": 3049,
    "declarations": "E: LINE; -86: NUMBER",
    "facts": "Inclination(E) = -86"
},
{
    "assertion": "Length ( LINESEGMENT: w ) equals InterReciprocal ( HalfFocalLength ( CONICSECTION: j ) )",
    "id": 3050,
    "declarations": "w: LINESEGMENT; j: CONICSECTION",
    "facts": "Length(w) = InterReciprocal(HalfFocalLength(j))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: U ) equals POINT: L",
    "id": 3051,
    "declarations": "U: CONICSECTION; L: POINT",
    "facts": "LowerFocus(U) = L"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: N ) equals LINESEGMENT: c",
    "id": 3052,
    "declarations": "N: ELLIPSE; c: LINESEGMENT",
    "facts": "ImaginaryAxis(N) = c"
},
{
    "assertion": "VectorOf ( POINT: H, MidPoint ( LINESEGMENT: l ) ) equals VECTOR: T",
    "id": 3053,
    "declarations": "H: POINT; l: LINESEGMENT; T: VECTOR",
    "facts": "VectorOf(H, MidPoint(l)) = T"
},
{
    "assertion": "Length ( MajorAxis ( ELLIPSE: q ) ) equals NUMBER: -33",
    "id": 3054,
    "declarations": "q: ELLIPSE; -33: NUMBER",
    "facts": "Length(MajorAxis(q)) = -33"
},
{
    "assertion": "PointOnCurve ( POINT: N, LeftPart ( HYPERBOLA: x ) ) equals BOOL: True",
    "id": 3055,
    "declarations": "N: POINT; x: HYPERBOLA; True: BOOL",
    "facts": "PointOnCurve(N, LeftPart(x)) = True"
},
{
    "assertion": "CircumCircle ( TRIANGLE: I ) equals CIRCLE: v",
    "id": 3056,
    "declarations": "I: TRIANGLE; v: CIRCLE",
    "facts": "CircumCircle(I) = v"
},
{
    "assertion": "Diameter ( CIRCLE: M ) equals NUMBER: 25",
    "id": 3057,
    "declarations": "M: CIRCLE; 25: NUMBER",
    "facts": "Diameter(M) = 25"
},
{
    "assertion": "MidPoint ( LINESEGMENT: l ) equals Center ( CONICSECTION: u )",
    "id": 3058,
    "declarations": "l: LINESEGMENT; u: CONICSECTION",
    "facts": "MidPoint(l) = Center(u)"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: x ) ) equals POINT: B",
    "id": 3059,
    "declarations": "x: ELLIPSE; B: POINT",
    "facts": "MidPoint(MajorAxis(x)) = B"
},
{
    "assertion": "IsTangent ( PerpendicularBisector ( MajorAxis ( ELLIPSE: P ) ), CONICSECTION: N ) equals BOOL: True",
    "id": 3061,
    "declarations": "P: ELLIPSE; N: CONICSECTION; True: BOOL",
    "facts": "IsTangent(PerpendicularBisector(MajorAxis(P)), N) = True"
},
{
    "assertion": "Center ( CONICSECTION: W ) equals POINT: a",
    "id": 3062,
    "declarations": "W: CONICSECTION; a: POINT",
    "facts": "Center(W) = a"
},
{
    "assertion": "InterReciprocal ( Quadrant ( Circumcenter ( TRIANGLE: F ) ) ) equals HalfFocalLength ( CONICSECTION: l )",
    "id": 3063,
    "declarations": "F: TRIANGLE; l: CONICSECTION",
    "facts": "InterReciprocal(Quadrant(Circumcenter(F))) = HalfFocalLength(l)"
},
{
    "assertion": "FootPoint ( RightDirectrix ( CONICSECTION: L ), LINE: j ) equals LowerFocus ( CONICSECTION: X )",
    "id": 3064,
    "declarations": "L: CONICSECTION; j: LINE; X: CONICSECTION",
    "facts": "FootPoint(RightDirectrix(L), j) = LowerFocus(X)"
},
{
    "assertion": "FocalLength ( CONICSECTION: O ) equals lg ( NUMBER: 11 )",
    "id": 3065,
    "declarations": "O: CONICSECTION; 11: NUMBER",
    "facts": "FocalLength(O) = lg(11)"
},
{
    "assertion": "IsParallel ( OverlappingLine ( LineSegmentOf ( POINT: D, POINT: h ) ), RightDirectrix ( CONICSECTION: Q ) ) equals BOOL: True",
    "id": 3066,
    "declarations": "D: POINT; h: POINT; Q: CONICSECTION; True: BOOL",
    "facts": "IsParallel(OverlappingLine(LineSegmentOf(D, h)), RightDirectrix(Q)) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: R ) equals LINE: z",
    "id": 3067,
    "declarations": "R: CONICSECTION; z: LINE",
    "facts": "Directrix(R) = z"
},
{
    "assertion": "Length ( LINESEGMENT: i ) equals NUMBER: -96",
    "id": 3068,
    "declarations": "i: LINESEGMENT; -96: NUMBER",
    "facts": "Length(i) = -96"
},
{
    "assertion": "AngleOf ( LeftVertex ( CONICSECTION: S ), UpperFocus ( CONICSECTION: X ), UpperFocus ( CONICSECTION: N ) ) equals ApplyUnit ( NUMBER: -42, DEGREESTR: degree )",
    "id": 3069,
    "declarations": "S: CONICSECTION; X: CONICSECTION; N: CONICSECTION; -42: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(LeftVertex(S), UpperFocus(X), UpperFocus(N)) = ApplyUnit(-42, degree)"
},
{
    "assertion": "TangentOnPoint ( Orthocenter ( TRIANGLE: g ), CURVE: J ) equals RightDirectrix ( CONICSECTION: f )",
    "id": 3070,
    "declarations": "g: TRIANGLE; J: CURVE; f: CONICSECTION",
    "facts": "TangentOnPoint(Orthocenter(g), J) = RightDirectrix(f)"
},
{
    "assertion": "Center ( CONICSECTION: R ) equals LowerFocus ( CONICSECTION: v )",
    "id": 3071,
    "declarations": "R: CONICSECTION; v: CONICSECTION",
    "facts": "Center(R) = LowerFocus(v)"
},
{
    "assertion": "Vertex ( CONICSECTION: L ) equals POINT: a",
    "id": 3072,
    "declarations": "L: CONICSECTION; a: POINT",
    "facts": "Vertex(L) = a"
},
{
    "assertion": "InterReciprocal ( NUMBER: 27 ) equals DotProduct ( VECTOR: u, VECTOR: G )",
    "id": 3073,
    "declarations": "27: NUMBER; u: VECTOR; G: VECTOR",
    "facts": "InterReciprocal(27) = DotProduct(u, G)"
},
{
    "assertion": "VectorOf ( POINT: I, RightFocus ( CONICSECTION: R ) ) equals VECTOR: u",
    "id": 3074,
    "declarations": "I: POINT; R: CONICSECTION; u: VECTOR",
    "facts": "VectorOf(I, RightFocus(R)) = u"
},
{
    "assertion": "Endpoint ( LINESEGMENT: K ) equals LowerFocus ( CONICSECTION: h )",
    "id": 3075,
    "declarations": "K: LINESEGMENT; h: CONICSECTION",
    "facts": "Endpoint(K) = LowerFocus(h)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: K ) equals FootPoint ( PerpendicularBisector ( LINESEGMENT: u ), LINE: q )",
    "id": 3076,
    "declarations": "K: CONICSECTION; u: LINESEGMENT; q: LINE",
    "facts": "UpperVertex(K) = FootPoint(PerpendicularBisector(u), q)"
},
{
    "assertion": "Min ( Min ( NUMBER: 8 ) ) equals NUMBER: -64",
    "id": 3077,
    "declarations": "8: NUMBER; -64: NUMBER",
    "facts": "Min(Min(8)) = -64"
},
{
    "assertion": "Length ( LineSegmentOf ( POINT: c, UpperVertex ( CONICSECTION: Z ) ) ) equals NUMBER: 49",
    "id": 3078,
    "declarations": "c: POINT; Z: CONICSECTION; 49: NUMBER",
    "facts": "Length(LineSegmentOf(c, UpperVertex(Z))) = 49"
},
{
    "assertion": "Center ( CONICSECTION: n ) equals LeftFocus ( CONICSECTION: d )",
    "id": 3079,
    "declarations": "n: CONICSECTION; d: CONICSECTION",
    "facts": "Center(n) = LeftFocus(d)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: v ) equals LineOf ( LowerVertex ( CONICSECTION: t ), Circumcenter ( TRIANGLE: u ) )",
    "id": 3080,
    "declarations": "v: CONICSECTION; t: CONICSECTION; u: TRIANGLE",
    "facts": "RightDirectrix(v) = LineOf(LowerVertex(t), Circumcenter(u))"
},
{
    "assertion": "Min ( NUMBER: -4 ) equals NUMBER: -47",
    "id": 3082,
    "declarations": "-4: NUMBER; -47: NUMBER",
    "facts": "Min(-4) = -47"
},
{
    "assertion": "Center ( CONICSECTION: I ) equals Circumcenter ( TRIANGLE: O )",
    "id": 3083,
    "declarations": "I: CONICSECTION; O: TRIANGLE",
    "facts": "Center(I) = Circumcenter(O)"
},
{
    "assertion": "Between ( POINT: l, POINT: f, Circumcenter ( TRIANGLE: Z ) ) equals BOOL: True",
    "id": 3084,
    "declarations": "l: POINT; f: POINT; Z: TRIANGLE; True: BOOL",
    "facts": "Between(l, f, Circumcenter(Z)) = True"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: p ) equals LINE: H",
    "id": 3085,
    "declarations": "p: LINESEGMENT; H: LINE",
    "facts": "PerpendicularBisector(p) = H"
},
{
    "assertion": "LocusEquation ( FootPoint ( LINE: P, LINE: b ) ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 3086,
    "declarations": "P: LINE; b: LINE; y*space=*spacesin(x): EXPRESSION",
    "facts": "LocusEquation(FootPoint(P, b)) = y*space=*spacesin(x)"
},
{
    "assertion": "RightPart ( HYPERBOLA: x ) equals CURVE: G",
    "id": 3087,
    "declarations": "x: HYPERBOLA; G: CURVE",
    "facts": "RightPart(x) = G"
},
{
    "assertion": "LowerFocus ( CONICSECTION: V ) equals LeftFocus ( CONICSECTION: p )",
    "id": 3088,
    "declarations": "V: CONICSECTION; p: CONICSECTION",
    "facts": "LowerFocus(V) = LeftFocus(p)"
},
{
    "assertion": "Min ( NUMBER: 91 ) equals Inclination ( LINE: T )",
    "id": 3089,
    "declarations": "91: NUMBER; T: LINE",
    "facts": "Min(91) = Inclination(T)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: g ) equals Intercept ( LINE: g, AXIS: xAxis )",
    "id": 3090,
    "declarations": "g: CONICSECTION; g: LINE; xAxis: AXIS",
    "facts": "HalfFocalLength(g) = Intercept(g, xAxis)"
},
{
    "assertion": "Slope ( LINE: V ) equals NUMBER: -74",
    "id": 3091,
    "declarations": "V: LINE; -74: NUMBER",
    "facts": "Slope(V) = -74"
},
{
    "assertion": "XCoordinate ( LowerFocus ( CONICSECTION: K ) ) equals FocalLength ( CONICSECTION: V )",
    "id": 3092,
    "declarations": "K: CONICSECTION; V: CONICSECTION",
    "facts": "XCoordinate(LowerFocus(K)) = FocalLength(V)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: h ) equals LINESEGMENT: Y",
    "id": 3093,
    "declarations": "h: ELLIPSE; Y: LINESEGMENT",
    "facts": "MinorAxis(h) = Y"
},
{
    "assertion": "UpperFocus ( CONICSECTION: r ) equals Center ( CONICSECTION: G )",
    "id": 3094,
    "declarations": "r: CONICSECTION; G: CONICSECTION",
    "facts": "UpperFocus(r) = Center(G)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: L ) equals Incenter ( TRIANGLE: H )",
    "id": 3095,
    "declarations": "L: CONICSECTION; H: TRIANGLE",
    "facts": "LowerFocus(L) = Incenter(H)"
},
{
    "assertion": "Perimeter ( CONICSECTION: h ) equals NUMBER: -84",
    "id": 3096,
    "declarations": "h: CONICSECTION; -84: NUMBER",
    "facts": "Perimeter(h) = -84"
},
{
    "assertion": "Slope ( LINE: b ) equals Perimeter ( CONICSECTION: K )",
    "id": 3097,
    "declarations": "b: LINE; K: CONICSECTION",
    "facts": "Slope(b) = Perimeter(K)"
},
{
    "assertion": "IsPerpendicular ( LINE: D, LINE: b ) equals BOOL: False",
    "id": 3098,
    "declarations": "D: LINE; b: LINE; False: BOOL",
    "facts": "IsPerpendicular(D, b) = False"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: p ) equals AXIS: yAxis",
    "id": 3099,
    "declarations": "p: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(p) = yAxis"
},
{
    "assertion": "IsChordOf ( MinorAxis ( ELLIPSE: P ), CONICSECTION: I ) equals BOOL: True",
    "id": 3100,
    "declarations": "P: ELLIPSE; I: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(MinorAxis(P), I) = True"
},
{
    "assertion": "XCoordinate ( Center ( CONICSECTION: s ) ) equals HalfFocalLength ( CONICSECTION: j )",
    "id": 3101,
    "declarations": "s: CONICSECTION; j: CONICSECTION",
    "facts": "XCoordinate(Center(s)) = HalfFocalLength(j)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: v ) equals Orthocenter ( TRIANGLE: W )",
    "id": 3102,
    "declarations": "v: LINESEGMENT; W: TRIANGLE",
    "facts": "MidPoint(v) = Orthocenter(W)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: R ) equals Inclination ( LINE: i )",
    "id": 3103,
    "declarations": "R: CONICSECTION; i: LINE",
    "facts": "Eccentricity(R) = Inclination(i)"
},
{
    "assertion": "InterReciprocal ( Length ( LINESEGMENT: X ) ) equals lg ( Abs ( LINESEGMENT: E ) )",
    "id": 3104,
    "declarations": "X: LINESEGMENT; E: LINESEGMENT",
    "facts": "InterReciprocal(Length(X)) = lg(Abs(E))"
},
{
    "assertion": "InterReciprocal ( Area ( CONICSECTION: b ) ) equals NUMBER: -72",
    "id": 3105,
    "declarations": "b: CONICSECTION; -72: NUMBER",
    "facts": "InterReciprocal(Area(b)) = -72"
},
{
    "assertion": "Diameter ( CIRCLE: t ) equals Eccentricity ( CONICSECTION: e )",
    "id": 3106,
    "declarations": "t: CIRCLE; e: CONICSECTION",
    "facts": "Diameter(t) = Eccentricity(e)"
},
{
    "assertion": "Vertex ( CONICSECTION: U ) equals LeftVertex ( CONICSECTION: y )",
    "id": 3107,
    "declarations": "U: CONICSECTION; y: CONICSECTION",
    "facts": "Vertex(U) = LeftVertex(y)"
},
{
    "assertion": "Negation ( And ( LocusEquation ( POINT: Z ) equals EXPRESSION: y*space=*spacesin(x), IsPerpendicular ( LINE: v, LINE: f ) equals BOOL: False ) equals BOOL: False ) equals BOOL: False",
    "id": 3108,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "VectorOf ( POINT: N, UpperFocus ( CONICSECTION: e ) ) equals VECTOR: e",
    "id": 3109,
    "declarations": "N: POINT; e: CONICSECTION; e: VECTOR",
    "facts": "VectorOf(N, UpperFocus(e)) = e"
},
{
    "assertion": "OverlappingLine ( RealAxis ( ELLIPSE: A ) ) equals PerpendicularBisector ( InterceptChord ( PerpendicularBisector ( LINESEGMENT: g ), CONICSECTION: W ) )",
    "id": 3110,
    "declarations": "A: ELLIPSE; g: LINESEGMENT; W: CONICSECTION",
    "facts": "OverlappingLine(RealAxis(A)) = PerpendicularBisector(InterceptChord(PerpendicularBisector(g), W))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: b ) equals LowerFocus ( CONICSECTION: M )",
    "id": 3111,
    "declarations": "b: CONICSECTION; M: CONICSECTION",
    "facts": "LowerFocus(b) = LowerFocus(M)"
},
{
    "assertion": "Expression ( CURVE: D ) equals EXPRESSION: y*space=*spacex^3*space-*space2*x*space+*space1",
    "id": 3112,
    "declarations": "D: CURVE; y*space=*spacex^3*space-*space2*x*space+*space1: EXPRESSION",
    "facts": "Expression(D) = y*space=*spacex^3*space-*space2*x*space+*space1"
},
{
    "assertion": "ApplyUnit ( XCoordinate ( Incenter ( TRIANGLE: D ) ), DEGREESTR: degree )",
    "id": 3113,
    "declarations": "D: TRIANGLE; degree: DEGREESTR",
    "facts": "ApplyUnit(XCoordinate(Incenter(D)), degree) = None"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: E, CIRCLE: A ) equals BOOL: True",
    "id": 3114,
    "declarations": "E: LINESEGMENT; A: CIRCLE; True: BOOL",
    "facts": "IsDiameter(E, A) = True"
},
{
    "assertion": "IsIntersect ( CURVE: k, CURVE: Y ) equals BOOL: True",
    "id": 3115,
    "declarations": "k: CURVE; Y: CURVE; True: BOOL",
    "facts": "IsIntersect(k, Y) = True"
},
{
    "assertion": "IsPerpendicular ( PerpendicularBisector ( LINESEGMENT: H ), RightDirectrix ( CONICSECTION: S ) ) equals BOOL: True",
    "id": 3116,
    "declarations": "H: LINESEGMENT; S: CONICSECTION; True: BOOL",
    "facts": "IsPerpendicular(PerpendicularBisector(H), RightDirectrix(S)) = True"
},
{
    "assertion": "IsTangent ( LINE: m, CONICSECTION: p ) equals BOOL: False",
    "id": 3117,
    "declarations": "m: LINE; p: CONICSECTION; False: BOOL",
    "facts": "IsTangent(m, p) = False"
},
{
    "assertion": "IsOutTangent ( CIRCLE: M, CIRCLE: A ) equals BOOL: False",
    "id": 3118,
    "declarations": "M: CIRCLE; A: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(M, A) = False"
},
{
    "assertion": "LeftPart ( HYPERBOLA: F ) equals CURVE: g",
    "id": 3119,
    "declarations": "F: HYPERBOLA; g: CURVE",
    "facts": "LeftPart(F) = g"
},
{
    "assertion": "Vertex ( CONICSECTION: x ) equals POINT: a",
    "id": 3120,
    "declarations": "x: CONICSECTION; a: POINT",
    "facts": "Vertex(x) = a"
},
{
    "assertion": "Abs ( LINESEGMENT: n ) equals Quadrant ( POINT: q )",
    "id": 3121,
    "declarations": "n: LINESEGMENT; q: POINT",
    "facts": "Abs(n) = Quadrant(q)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: R ) equals LINESEGMENT: d",
    "id": 3122,
    "declarations": "R: ELLIPSE; d: LINESEGMENT",
    "facts": "MajorAxis(R) = d"
},
{
    "assertion": "FocalLength ( CONICSECTION: z ) equals NUMBER: 0",
    "id": 3123,
    "declarations": "z: CONICSECTION; 0: NUMBER",
    "facts": "FocalLength(z) = 0"
},
{
    "assertion": "VectorOf ( POINT: A, POINT: L ) equals VECTOR: L",
    "id": 3124,
    "declarations": "A: POINT; L: POINT; L: VECTOR",
    "facts": "VectorOf(A, L) = L"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: a ) equals ImaginaryAxis ( ELLIPSE: n )",
    "id": 3125,
    "declarations": "a: ELLIPSE; n: ELLIPSE",
    "facts": "ImaginaryAxis(a) = ImaginaryAxis(n)"
},
{
    "assertion": "RightFocus ( CONICSECTION: O ) equals Center ( CONICSECTION: N )",
    "id": 3126,
    "declarations": "O: CONICSECTION; N: CONICSECTION",
    "facts": "RightFocus(O) = Center(N)"
},
{
    "assertion": "sqrt ( Length ( LINESEGMENT: k ) ) equals Inclination ( LINE: S )",
    "id": 3127,
    "declarations": "k: LINESEGMENT; S: LINE",
    "facts": "sqrt(Length(k)) = Inclination(S)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: d ) equals DotProduct ( VectorOf ( LeftVertex ( CONICSECTION: q ), POINT: q ), VECTOR: J )",
    "id": 3128,
    "declarations": "d: CONICSECTION; q: CONICSECTION; q: POINT; J: VECTOR",
    "facts": "HalfFocalLength(d) = DotProduct(VectorOf(LeftVertex(q), q), J)"
},
{
    "assertion": "Min ( Perimeter ( CONICSECTION: s ) ) equals Radius ( CIRCLE: c )",
    "id": 3129,
    "declarations": "s: CONICSECTION; c: CIRCLE",
    "facts": "Min(Perimeter(s)) = Radius(c)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: w ) equals LINESEGMENT: z",
    "id": 3130,
    "declarations": "w: ELLIPSE; z: LINESEGMENT",
    "facts": "MajorAxis(w) = z"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: D, TRIANGLE: f ) equals BOOL: False",
    "id": 3131,
    "declarations": "D: CIRCLE; f: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(D, f) = False"
},
{
    "assertion": "Min ( Inclination ( PerpendicularBisector ( LINESEGMENT: U ) ) ) equals Intercept ( LINE: f, AXIS: xAxis )",
    "id": 3132,
    "declarations": "U: LINESEGMENT; f: LINE; xAxis: AXIS",
    "facts": "Min(Inclination(PerpendicularBisector(U))) = Intercept(f, xAxis)"
},
{
    "assertion": "sqrt ( NUMBER: -78 ) equals Min ( NUMBER: -8 )",
    "id": 3133,
    "declarations": "-78: NUMBER; -8: NUMBER",
    "facts": "sqrt(-78) = Min(-8)"
},
{
    "assertion": "sqrt ( Distance ( MidPoint ( MinorAxis ( ELLIPSE: d ) ), RightFocus ( CONICSECTION: f ) ) ) equals NUMBER: 72",
    "id": 3134,
    "declarations": "d: ELLIPSE; f: CONICSECTION; 72: NUMBER",
    "facts": "sqrt(Distance(MidPoint(MinorAxis(d)), RightFocus(f))) = 72"
},
{
    "assertion": "NumIntersection ( RightPart ( HYPERBOLA: L ), CURVE: e ) equals NUMBER: -55",
    "id": 3135,
    "declarations": "L: HYPERBOLA; e: CURVE; -55: NUMBER",
    "facts": "NumIntersection(RightPart(L), e) = -55"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: p ) equals NUMBER: 68",
    "id": 3136,
    "declarations": "p: CONICSECTION; 68: NUMBER",
    "facts": "HalfFocalLength(p) = 68"
},
{
    "assertion": "Directrix ( CONICSECTION: H ) equals LINE: O",
    "id": 3137,
    "declarations": "H: CONICSECTION; O: LINE",
    "facts": "Directrix(H) = O"
},
{
    "assertion": "Perimeter ( CONICSECTION: r ) equals NUMBER: 85",
    "id": 3138,
    "declarations": "r: CONICSECTION; 85: NUMBER",
    "facts": "Perimeter(r) = 85"
},
{
    "assertion": "PointOnCurve ( RightVertex ( CONICSECTION: h ), CURVE: I ) equals BOOL: True",
    "id": 3139,
    "declarations": "h: CONICSECTION; I: CURVE; True: BOOL",
    "facts": "PointOnCurve(RightVertex(h), I) = True"
},
{
    "assertion": "Asymptote ( HYPERBOLA: c ) equals TangentOfPoint ( Circumcenter ( TRIANGLE: L ), CURVE: a )",
    "id": 3140,
    "declarations": "c: HYPERBOLA; L: TRIANGLE; a: CURVE",
    "facts": "Asymptote(c) = TangentOfPoint(Circumcenter(L), a)"
},
{
    "assertion": "sqrt ( NUMBER: 21 ) equals Perimeter ( CONICSECTION: A )",
    "id": 3141,
    "declarations": "21: NUMBER; A: CONICSECTION",
    "facts": "sqrt(21) = Perimeter(A)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: h ) equals CIRCLE: p",
    "id": 3142,
    "declarations": "h: TRIANGLE; p: CIRCLE",
    "facts": "CircumCircle(h) = p"
},
{
    "assertion": "InterReciprocal ( Eccentricity ( CONICSECTION: d ) ) equals Area ( CONICSECTION: z )",
    "id": 3143,
    "declarations": "d: CONICSECTION; z: CONICSECTION",
    "facts": "InterReciprocal(Eccentricity(d)) = Area(z)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 89, DEGREESTR: degree )",
    "id": 3144,
    "declarations": "89: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(89, degree) = None"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: X ) equals LINE: o",
    "id": 3145,
    "declarations": "X: CONICSECTION; o: LINE",
    "facts": "RightDirectrix(X) = o"
},
{
    "assertion": "IsPerpendicular ( PerpendicularBisector ( LINESEGMENT: N ), LINE: V ) equals BOOL: False",
    "id": 3146,
    "declarations": "N: LINESEGMENT; V: LINE; False: BOOL",
    "facts": "IsPerpendicular(PerpendicularBisector(N), V) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: P ) equals UpperFocus ( CONICSECTION: i )",
    "id": 3147,
    "declarations": "P: CONICSECTION; i: CONICSECTION",
    "facts": "LeftVertex(P) = UpperFocus(i)"
},
{
    "assertion": "RealAxis ( ELLIPSE: W ) equals LINESEGMENT: u",
    "id": 3148,
    "declarations": "W: ELLIPSE; u: LINESEGMENT",
    "facts": "RealAxis(W) = u"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( LineSegmentOf ( POINT: O, Center ( CONICSECTION: c ) ) ) ) equals NUMBER: -95",
    "id": 3149,
    "declarations": "O: POINT; c: CONICSECTION; -95: NUMBER",
    "facts": "Inclination(PerpendicularBisector(LineSegmentOf(O, Center(c)))) = -95"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: O, CIRCLE: S ) equals BOOL: True",
    "id": 3150,
    "declarations": "O: LINESEGMENT; S: CIRCLE; True: BOOL",
    "facts": "IsDiameter(O, S) = True"
},
{
    "assertion": "RightVertex ( CONICSECTION: V ) equals POINT: e",
    "id": 3151,
    "declarations": "V: CONICSECTION; e: POINT",
    "facts": "RightVertex(V) = e"
},
{
    "assertion": "Intersection ( CURVE: q, CURVE: C ) equals Circumcenter ( TRIANGLE: c )",
    "id": 3153,
    "declarations": "q: CURVE; C: CURVE; c: TRIANGLE",
    "facts": "Intersection(q, C) = Circumcenter(c)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: E, CIRCLE: C ) equals BOOL: False",
    "id": 3154,
    "declarations": "E: CIRCLE; C: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(E, C) = False"
},
{
    "assertion": "TangentOfPoint ( Projection ( Circumcenter ( TRIANGLE: Q ), LineOf ( LeftFocus ( CONICSECTION: E ), LeftVertex ( CONICSECTION: G ) ) ), CURVE: B ) equals LINE: A",
    "id": 3155,
    "declarations": "Q: TRIANGLE; E: CONICSECTION; G: CONICSECTION; B: CURVE; A: LINE",
    "facts": "TangentOfPoint(Projection(Circumcenter(Q), LineOf(LeftFocus(E), LeftVertex(G))), B) = A"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: O ) equals AXIS: xAxis",
    "id": 3156,
    "declarations": "O: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(O) = xAxis"
},
{
    "assertion": "Radius ( CIRCLE: g ) equals Perimeter ( CONICSECTION: l )",
    "id": 3157,
    "declarations": "g: CIRCLE; l: CONICSECTION",
    "facts": "Radius(g) = Perimeter(l)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: l ) equals POINT: b",
    "id": 3158,
    "declarations": "l: CONICSECTION; b: POINT",
    "facts": "LeftFocus(l) = b"
},
{
    "assertion": "MidPoint ( LINESEGMENT: S ) equals POINT: i",
    "id": 3159,
    "declarations": "S: LINESEGMENT; i: POINT",
    "facts": "MidPoint(S) = i"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: y ) equals SymmetryAxis ( CONICSECTION: V )",
    "id": 3160,
    "declarations": "y: CONICSECTION; V: CONICSECTION",
    "facts": "SymmetryAxis(y) = SymmetryAxis(V)"
},
{
    "assertion": "And ( DotProduct ( VECTOR: y, VECTOR: o ) equals FocalLength ( CONICSECTION: T ), Expression ( CURVE: n ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y ) equals BOOL: False",
    "id": 3161,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: M, CIRCLE: U ) equals BOOL: False",
    "id": 3162,
    "declarations": "M: LINESEGMENT; U: CIRCLE; False: BOOL",
    "facts": "IsDiameter(M, U) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: z ) equals Orthocenter ( TRIANGLE: x )",
    "id": 3163,
    "declarations": "z: CONICSECTION; x: TRIANGLE",
    "facts": "LowerVertex(z) = Orthocenter(x)"
},
{
    "assertion": "Inclination ( LINE: D ) equals YCoordinate ( POINT: N )",
    "id": 3164,
    "declarations": "D: LINE; N: POINT",
    "facts": "Inclination(D) = YCoordinate(N)"
},
{
    "assertion": "InterceptChord ( LINE: w, CONICSECTION: y ) equals LINESEGMENT: b",
    "id": 3165,
    "declarations": "w: LINE; y: CONICSECTION; b: LINESEGMENT",
    "facts": "InterceptChord(w, y) = b"
},
{
    "assertion": "lg ( Length ( ImaginaryAxis ( ELLIPSE: q ) ) ) equals Inclination ( RightDirectrix ( CONICSECTION: c ) )",
    "id": 3166,
    "declarations": "q: ELLIPSE; c: CONICSECTION",
    "facts": "lg(Length(ImaginaryAxis(q))) = Inclination(RightDirectrix(c))"
},
{
    "assertion": "Area ( CONICSECTION: T ) equals FocalLength ( CONICSECTION: n )",
    "id": 3167,
    "declarations": "T: CONICSECTION; n: CONICSECTION",
    "facts": "Area(T) = FocalLength(n)"
},
{
    "assertion": "LocusEquation ( POINT: D ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 3168,
    "declarations": "D: POINT; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "LocusEquation(D) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "MinorAxis ( ELLIPSE: Y ) equals LINESEGMENT: l",
    "id": 3169,
    "declarations": "Y: ELLIPSE; l: LINESEGMENT",
    "facts": "MinorAxis(Y) = l"
},
{
    "assertion": "Orthocenter ( TRIANGLE: z ) equals Orthocenter ( TriangleOf ( POINT: J, POINT: c, POINT: K ) )",
    "id": 3170,
    "declarations": "z: TRIANGLE; J: POINT; c: POINT; K: POINT",
    "facts": "Orthocenter(z) = Orthocenter(TriangleOf(J, c, K))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: k, TRIANGLE: G ) equals BOOL: True",
    "id": 3171,
    "declarations": "k: CIRCLE; G: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(k, G) = True"
},
{
    "assertion": "LocusEquation ( POINT: j ) equals LocusEquation ( POINT: o )",
    "id": 3172,
    "declarations": "j: POINT; o: POINT",
    "facts": "LocusEquation(j) = LocusEquation(o)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: Z ) equals Quadrant ( UpperVertex ( CONICSECTION: A ) )",
    "id": 3173,
    "declarations": "Z: CONICSECTION; A: CONICSECTION",
    "facts": "Eccentricity(Z) = Quadrant(UpperVertex(A))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: o, TRIANGLE: c ) equals BOOL: True",
    "id": 3174,
    "declarations": "o: CIRCLE; c: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(o, c) = True"
},
{
    "assertion": "VectorOf ( POINT: F, LowerVertex ( CONICSECTION: Z ) ) equals VECTOR: X",
    "id": 3175,
    "declarations": "F: POINT; Z: CONICSECTION; X: VECTOR",
    "facts": "VectorOf(F, LowerVertex(Z)) = X"
},
{
    "assertion": "YCoordinate ( Incenter ( TRIANGLE: f ) ) equals NUMBER: -92",
    "id": 3176,
    "declarations": "f: TRIANGLE; -92: NUMBER",
    "facts": "YCoordinate(Incenter(f)) = -92"
},
{
    "assertion": "Length ( LINESEGMENT: H ) equals Length ( LINESEGMENT: j )",
    "id": 3177,
    "declarations": "H: LINESEGMENT; j: LINESEGMENT",
    "facts": "Length(H) = Length(j)"
},
{
    "assertion": "Projection ( POINT: z, LINE: p ) equals FootPoint ( PerpendicularBisector ( RealAxis ( ELLIPSE: N ) ), LineOf ( LeftVertex ( CONICSECTION: P ), LowerVertex ( CONICSECTION: r ) ) )",
    "id": 3178,
    "declarations": "z: POINT; p: LINE; N: ELLIPSE; P: CONICSECTION; r: CONICSECTION",
    "facts": "Projection(z, p) = FootPoint(PerpendicularBisector(RealAxis(N)), LineOf(LeftVertex(P), LowerVertex(r)))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: b ) equals POINT: C",
    "id": 3179,
    "declarations": "b: CONICSECTION; C: POINT",
    "facts": "UpperVertex(b) = C"
},
{
    "assertion": "PerpendicularBisector ( MinorAxis ( ELLIPSE: v ) ) equals LINE: n",
    "id": 3180,
    "declarations": "v: ELLIPSE; n: LINE",
    "facts": "PerpendicularBisector(MinorAxis(v)) = n"
},
{
    "assertion": "Expression ( CURVE: v ) equals Expression ( CURVE: a )",
    "id": 3181,
    "declarations": "v: CURVE; a: CURVE",
    "facts": "Expression(v) = Expression(a)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: D ) equals TangentOfPoint ( POINT: V, CURVE: r )",
    "id": 3182,
    "declarations": "D: CONICSECTION; V: POINT; r: CURVE",
    "facts": "LeftDirectrix(D) = TangentOfPoint(V, r)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: v, CIRCLE: T ) equals BOOL: True",
    "id": 3183,
    "declarations": "v: CIRCLE; T: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(v, T) = True"
},
{
    "assertion": "IsChordOf ( RealAxis ( ELLIPSE: c ), CONICSECTION: c ) equals BOOL: False",
    "id": 3184,
    "declarations": "c: ELLIPSE; c: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(RealAxis(c), c) = False"
},
{
    "assertion": "FootPoint ( OverlappingLine ( ImaginaryAxis ( ELLIPSE: k ) ), LINE: t ) equals Center ( CONICSECTION: o )",
    "id": 3185,
    "declarations": "k: ELLIPSE; t: LINE; o: CONICSECTION",
    "facts": "FootPoint(OverlappingLine(ImaginaryAxis(k)), t) = Center(o)"
},
{
    "assertion": "Focus ( CONICSECTION: w ) equals POINT: k",
    "id": 3186,
    "declarations": "w: CONICSECTION; k: POINT",
    "facts": "Focus(w) = k"
},
{
    "assertion": "IsIntersect ( CURVE: q, CURVE: Y ) equals BOOL: True",
    "id": 3187,
    "declarations": "q: CURVE; Y: CURVE; True: BOOL",
    "facts": "IsIntersect(q, Y) = True"
},
{
    "assertion": "FocalLength ( CONICSECTION: M ) equals NUMBER: -13",
    "id": 3188,
    "declarations": "M: CONICSECTION; -13: NUMBER",
    "facts": "FocalLength(M) = -13"
},
{
    "assertion": "And ( Projection ( FootPoint ( LINE: c, LINE: e ), LINE: a ) equals POINT: f, Quadrant ( FootPoint ( PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: r ) ), LINE: t ) ) equals NUMBER: 50 ) equals BOOL: True",
    "id": 3189,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Distance ( LowerFocus ( CONICSECTION: M ), Circumcenter ( TRIANGLE: i ) ) equals FocalLength ( CONICSECTION: N )",
    "id": 3190,
    "declarations": "M: CONICSECTION; i: TRIANGLE; N: CONICSECTION",
    "facts": "Distance(LowerFocus(M), Circumcenter(i)) = FocalLength(N)"
},
{
    "assertion": "InterceptChord ( LINE: M, CONICSECTION: Y ) equals LINESEGMENT: L",
    "id": 3191,
    "declarations": "M: LINE; Y: CONICSECTION; L: LINESEGMENT",
    "facts": "InterceptChord(M, Y) = L"
},
{
    "assertion": "LeftVertex ( CONICSECTION: d ) equals Incenter ( TRIANGLE: B )",
    "id": 3192,
    "declarations": "d: CONICSECTION; B: TRIANGLE",
    "facts": "LeftVertex(d) = Incenter(B)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: l ) equals LINE: z",
    "id": 3193,
    "declarations": "l: LINESEGMENT; z: LINE",
    "facts": "PerpendicularBisector(l) = z"
},
{
    "assertion": "LocusEquation ( POINT: M ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 3194,
    "declarations": "M: POINT; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "LocusEquation(M) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "CircumCircle ( TRIANGLE: q ) equals CIRCLE: U",
    "id": 3195,
    "declarations": "q: TRIANGLE; U: CIRCLE",
    "facts": "CircumCircle(q) = U"
},
{
    "assertion": "Center ( CONICSECTION: Y ) equals RightFocus ( CONICSECTION: z )",
    "id": 3196,
    "declarations": "Y: CONICSECTION; z: CONICSECTION",
    "facts": "Center(Y) = RightFocus(z)"
},
{
    "assertion": "IsDiameter ( RealAxis ( ELLIPSE: Y ), CIRCLE: a ) equals BOOL: True",
    "id": 3197,
    "declarations": "Y: ELLIPSE; a: CIRCLE; True: BOOL",
    "facts": "IsDiameter(RealAxis(Y), a) = True"
},
{
    "assertion": "Abs ( LINESEGMENT: M ) equals NUMBER: -35",
    "id": 3198,
    "declarations": "M: LINESEGMENT; -35: NUMBER",
    "facts": "Abs(M) = -35"
},
{
    "assertion": "Min ( NUMBER: -67 ) equals Radius ( CIRCLE: B )",
    "id": 3199,
    "declarations": "-67: NUMBER; B: CIRCLE",
    "facts": "Min(-67) = Radius(B)"
},
{
    "assertion": "IsDiameter ( ImaginaryAxis ( ELLIPSE: B ), CIRCLE: R ) equals BOOL: False",
    "id": 3200,
    "declarations": "B: ELLIPSE; R: CIRCLE; False: BOOL",
    "facts": "IsDiameter(ImaginaryAxis(B), R) = False"
},
{
    "assertion": "Area ( CONICSECTION: p ) equals NUMBER: -75",
    "id": 3201,
    "declarations": "p: CONICSECTION; -75: NUMBER",
    "facts": "Area(p) = -75"
},
{
    "assertion": "Distance ( Orthocenter ( TRIANGLE: r ), POINT: w ) equals HalfFocalLength ( CONICSECTION: Z )",
    "id": 3202,
    "declarations": "r: TRIANGLE; w: POINT; Z: CONICSECTION",
    "facts": "Distance(Orthocenter(r), w) = HalfFocalLength(Z)"
},
{
    "assertion": "LineOf ( MidPoint ( InterceptChord ( LINE: i, CONICSECTION: w ) ), LowerFocus ( CONICSECTION: m ) ) equals LINE: t",
    "id": 3203,
    "declarations": "i: LINE; w: CONICSECTION; m: CONICSECTION; t: LINE",
    "facts": "LineOf(MidPoint(InterceptChord(i, w)), LowerFocus(m)) = t"
},
{
    "assertion": "LeftVertex ( CONICSECTION: D ) equals Center ( CONICSECTION: e )",
    "id": 3204,
    "declarations": "D: CONICSECTION; e: CONICSECTION",
    "facts": "LeftVertex(D) = Center(e)"
},
{
    "assertion": "Abs ( LINESEGMENT: d ) equals Area ( CONICSECTION: X )",
    "id": 3205,
    "declarations": "d: LINESEGMENT; X: CONICSECTION",
    "facts": "Abs(d) = Area(X)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: I ) equals LINE: Q",
    "id": 3206,
    "declarations": "I: LINESEGMENT; Q: LINE",
    "facts": "OverlappingLine(I) = Q"
},
{
    "assertion": "RightPart ( HYPERBOLA: h ) equals CURVE: D",
    "id": 3207,
    "declarations": "h: HYPERBOLA; D: CURVE",
    "facts": "RightPart(h) = D"
},
{
    "assertion": "Max ( NUMBER: 78 ) equals XCoordinate ( POINT: M )",
    "id": 3208,
    "declarations": "78: NUMBER; M: POINT",
    "facts": "Max(78) = XCoordinate(M)"
},
{
    "assertion": "RightFocus ( CONICSECTION: p ) equals UpperVertex ( CONICSECTION: p )",
    "id": 3209,
    "declarations": "p: CONICSECTION; p: CONICSECTION",
    "facts": "RightFocus(p) = UpperVertex(p)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: f ) equals Circumcenter ( TRIANGLE: h )",
    "id": 3210,
    "declarations": "f: CONICSECTION; h: TRIANGLE",
    "facts": "LeftVertex(f) = Circumcenter(h)"
},
{
    "assertion": "FocalLength ( CONICSECTION: M ) equals NUMBER: -30",
    "id": 3211,
    "declarations": "M: CONICSECTION; -30: NUMBER",
    "facts": "FocalLength(M) = -30"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: w ) ) equals InterReciprocal ( NUMBER: -74 )",
    "id": 3212,
    "declarations": "w: CONICSECTION; -74: NUMBER",
    "facts": "Inclination(LeftDirectrix(w)) = InterReciprocal(-74)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: t ) equals Inclination ( LINE: s )",
    "id": 3213,
    "declarations": "t: CONICSECTION; s: LINE",
    "facts": "HalfFocalLength(t) = Inclination(s)"
},
{
    "assertion": "Distance ( POINT: d, POINT: z ) equals NUMBER: -95",
    "id": 3214,
    "declarations": "d: POINT; z: POINT; -95: NUMBER",
    "facts": "Distance(d, z) = -95"
},
{
    "assertion": "Negation ( ApplyUnit ( NUMBER: -96, DEGREESTR: degree ) ) equals BOOL: True",
    "id": 3215,
    "declarations": "-96: NUMBER; degree: DEGREESTR; True: BOOL",
    "facts": "Negation(ApplyUnit(-96, degree)) = True"
},
{
    "assertion": "CircumCircle ( TRIANGLE: w ) equals CIRCLE: h",
    "id": 3216,
    "declarations": "w: TRIANGLE; h: CIRCLE",
    "facts": "CircumCircle(w) = h"
},
{
    "assertion": "TriangleOf ( POINT: T, Projection ( Incenter ( TRIANGLE: Q ), LINE: H ), POINT: D ) equals TRIANGLE: h",
    "id": 3217,
    "declarations": "T: POINT; Q: TRIANGLE; H: LINE; D: POINT; h: TRIANGLE",
    "facts": "TriangleOf(T, Projection(Incenter(Q), H), D) = h"
},
{
    "assertion": "Negation ( Negation ( MidPoint ( RealAxis ( ELLIPSE: I ) ) equals POINT: g ) equals BOOL: True ) equals BOOL: False",
    "id": 3218,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Vertex ( CONICSECTION: m ) equals Circumcenter ( TRIANGLE: K )",
    "id": 3219,
    "declarations": "m: CONICSECTION; K: TRIANGLE",
    "facts": "Vertex(m) = Circumcenter(K)"
},
{
    "assertion": "IsPerpendicular ( LINE: q, LINE: j ) equals BOOL: True",
    "id": 3220,
    "declarations": "q: LINE; j: LINE; True: BOOL",
    "facts": "IsPerpendicular(q, j) = True"
},
{
    "assertion": "Vertex ( CONICSECTION: c ) equals POINT: F",
    "id": 3221,
    "declarations": "c: CONICSECTION; F: POINT",
    "facts": "Vertex(c) = F"
},
{
    "assertion": "Length ( InterceptChord ( RightDirectrix ( CONICSECTION: z ), CONICSECTION: A ) ) equals DotProduct ( VECTOR: i, VECTOR: e )",
    "id": 3222,
    "declarations": "z: CONICSECTION; A: CONICSECTION; i: VECTOR; e: VECTOR",
    "facts": "Length(InterceptChord(RightDirectrix(z), A)) = DotProduct(i, e)"
},
{
    "assertion": "Vertex ( CONICSECTION: s ) equals Orthocenter ( TRIANGLE: a )",
    "id": 3223,
    "declarations": "s: CONICSECTION; a: TRIANGLE",
    "facts": "Vertex(s) = Orthocenter(a)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: T, TRIANGLE: w ) equals BOOL: False",
    "id": 3224,
    "declarations": "T: CIRCLE; w: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(T, w) = False"
},
{
    "assertion": "Length ( LINESEGMENT: H ) equals NUMBER: 21",
    "id": 3226,
    "declarations": "H: LINESEGMENT; 21: NUMBER",
    "facts": "Length(H) = 21"
},
{
    "assertion": "Circumcenter ( TRIANGLE: H ) equals POINT: R",
    "id": 3227,
    "declarations": "H: TRIANGLE; R: POINT",
    "facts": "Circumcenter(H) = R"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: M ) equals NUMBER: 36",
    "id": 3228,
    "declarations": "M: CONICSECTION; 36: NUMBER",
    "facts": "HalfFocalLength(M) = 36"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: r ) equals LINE: S",
    "id": 3229,
    "declarations": "r: LINESEGMENT; S: LINE",
    "facts": "OverlappingLine(r) = S"
},
{
    "assertion": "Length ( LineSegmentOf ( POINT: O, POINT: Z ) ) equals NUMBER: -56",
    "id": 3230,
    "declarations": "O: POINT; Z: POINT; -56: NUMBER",
    "facts": "Length(LineSegmentOf(O, Z)) = -56"
},
{
    "assertion": "DotProduct ( VECTOR: R, VECTOR: K ) equals NumIntersection ( CURVE: p, CURVE: L )",
    "id": 3231,
    "declarations": "R: VECTOR; K: VECTOR; p: CURVE; L: CURVE",
    "facts": "DotProduct(R, K) = NumIntersection(p, L)"
},
{
    "assertion": "XCoordinate ( POINT: Q ) equals Inclination ( LINE: t )",
    "id": 3232,
    "declarations": "Q: POINT; t: LINE",
    "facts": "XCoordinate(Q) = Inclination(t)"
},
{
    "assertion": "LocusEquation ( MidPoint ( ImaginaryAxis ( ELLIPSE: P ) ) ) equals LocusEquation ( POINT: E )",
    "id": 3233,
    "declarations": "P: ELLIPSE; E: POINT",
    "facts": "LocusEquation(MidPoint(ImaginaryAxis(P))) = LocusEquation(E)"
},
{
    "assertion": "InterReciprocal ( XCoordinate ( LowerFocus ( CONICSECTION: o ) ) ) equals Eccentricity ( CONICSECTION: z )",
    "id": 3234,
    "declarations": "o: CONICSECTION; z: CONICSECTION",
    "facts": "InterReciprocal(XCoordinate(LowerFocus(o))) = Eccentricity(z)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: D ) equals POINT: p",
    "id": 3235,
    "declarations": "D: TRIANGLE; p: POINT",
    "facts": "Orthocenter(D) = p"
},
{
    "assertion": "YCoordinate ( Orthocenter ( TRIANGLE: q ) ) equals DotProduct ( VECTOR: K, VECTOR: w )",
    "id": 3236,
    "declarations": "q: TRIANGLE; K: VECTOR; w: VECTOR",
    "facts": "YCoordinate(Orthocenter(q)) = DotProduct(K, w)"
},
{
    "assertion": "AngleOf ( FootPoint ( LINE: s, LINE: H ), POINT: X, UpperFocus ( CONICSECTION: e ) ) equals ApplyUnit ( FocalLength ( CONICSECTION: y ), DEGREESTR: degree )",
    "id": 3237,
    "declarations": "s: LINE; H: LINE; X: POINT; e: CONICSECTION; y: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(FootPoint(s, H), X, UpperFocus(e)) = ApplyUnit(FocalLength(y), degree)"
},
{
    "assertion": "Intercept ( LINE: A, AXIS: xAxis ) equals Perimeter ( CONICSECTION: x )",
    "id": 3238,
    "declarations": "A: LINE; xAxis: AXIS; x: CONICSECTION",
    "facts": "Intercept(A, xAxis) = Perimeter(x)"
},
{
    "assertion": "IsIntersect ( Locus ( LowerVertex ( CONICSECTION: K ) ), CURVE: M ) equals BOOL: False",
    "id": 3239,
    "declarations": "K: CONICSECTION; M: CURVE; False: BOOL",
    "facts": "IsIntersect(Locus(LowerVertex(K)), M) = False"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: A ) equals LINESEGMENT: A",
    "id": 3240,
    "declarations": "A: ELLIPSE; A: LINESEGMENT",
    "facts": "ImaginaryAxis(A) = A"
},
{
    "assertion": "UpperVertex ( CONICSECTION: A ) equals POINT: Q",
    "id": 3241,
    "declarations": "A: CONICSECTION; Q: POINT",
    "facts": "UpperVertex(A) = Q"
},
{
    "assertion": "FootPoint ( LINE: y, LINE: H ) equals POINT: A",
    "id": 3242,
    "declarations": "y: LINE; H: LINE; A: POINT",
    "facts": "FootPoint(y, H) = A"
},
{
    "assertion": "MinorAxis ( ELLIPSE: O ) equals LINESEGMENT: I",
    "id": 3243,
    "declarations": "O: ELLIPSE; I: LINESEGMENT",
    "facts": "MinorAxis(O) = I"
},
{
    "assertion": "IsCircumCircle ( CircumCircle ( TRIANGLE: Q ), TRIANGLE: b ) equals BOOL: False",
    "id": 3244,
    "declarations": "Q: TRIANGLE; b: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(CircumCircle(Q), b) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: D ) equals POINT: o",
    "id": 3245,
    "declarations": "D: CONICSECTION; o: POINT",
    "facts": "LeftVertex(D) = o"
},
{
    "assertion": "Center ( CONICSECTION: u ) equals POINT: I",
    "id": 3246,
    "declarations": "u: CONICSECTION; I: POINT",
    "facts": "Center(u) = I"
},
{
    "assertion": "TangentPoint ( RightDirectrix ( CONICSECTION: X ), CIRCLE: n ) equals POINT: X",
    "id": 3247,
    "declarations": "X: CONICSECTION; n: CIRCLE; X: POINT",
    "facts": "TangentPoint(RightDirectrix(X), n) = X"
},
{
    "assertion": "Endpoint ( LINESEGMENT: S ) equals POINT: U",
    "id": 3248,
    "declarations": "S: LINESEGMENT; U: POINT",
    "facts": "Endpoint(S) = U"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: S, TRIANGLE: Q ) equals BOOL: False",
    "id": 3249,
    "declarations": "S: CIRCLE; Q: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(S, Q) = False"
},
{
    "assertion": "VectorOf ( LeftFocus ( CONICSECTION: C ), POINT: L ) equals VECTOR: V",
    "id": 3250,
    "declarations": "C: CONICSECTION; L: POINT; V: VECTOR",
    "facts": "VectorOf(LeftFocus(C), L) = V"
},
{
    "assertion": "LowerFocus ( CONICSECTION: P ) equals Center ( CONICSECTION: t )",
    "id": 3251,
    "declarations": "P: CONICSECTION; t: CONICSECTION",
    "facts": "LowerFocus(P) = Center(t)"
},
{
    "assertion": "Center ( CONICSECTION: o ) equals UpperVertex ( CONICSECTION: R )",
    "id": 3252,
    "declarations": "o: CONICSECTION; R: CONICSECTION",
    "facts": "Center(o) = UpperVertex(R)"
},
{
    "assertion": "Radius ( CIRCLE: U ) equals Min ( NUMBER: -84 )",
    "id": 3253,
    "declarations": "U: CIRCLE; -84: NUMBER",
    "facts": "Radius(U) = Min(-84)"
},
{
    "assertion": "IsParallel ( RightDirectrix ( CONICSECTION: W ), LINE: a ) equals BOOL: False",
    "id": 3254,
    "declarations": "W: CONICSECTION; a: LINE; False: BOOL",
    "facts": "IsParallel(RightDirectrix(W), a) = False"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: E ) ) equals YCoordinate ( LowerFocus ( CONICSECTION: d ) )",
    "id": 3255,
    "declarations": "E: TRIANGLE; d: CONICSECTION",
    "facts": "Diameter(CircumCircle(E)) = YCoordinate(LowerFocus(d))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: Q ) equals CIRCLE: q",
    "id": 3256,
    "declarations": "Q: TRIANGLE; q: CIRCLE",
    "facts": "CircumCircle(Q) = q"
},
{
    "assertion": "LineOf ( RightFocus ( CONICSECTION: P ), POINT: Z ) equals LINE: X",
    "id": 3257,
    "declarations": "P: CONICSECTION; Z: POINT; X: LINE",
    "facts": "LineOf(RightFocus(P), Z) = X"
},
{
    "assertion": "TangentOfPoint ( Incenter ( TRIANGLE: n ), CURVE: v ) equals LINE: r",
    "id": 3258,
    "declarations": "n: TRIANGLE; v: CURVE; r: LINE",
    "facts": "TangentOfPoint(Incenter(n), v) = r"
},
{
    "assertion": "UpperFocus ( CONICSECTION: Z ) equals POINT: O",
    "id": 3259,
    "declarations": "Z: CONICSECTION; O: POINT",
    "facts": "UpperFocus(Z) = O"
},
{
    "assertion": "Quadrant ( POINT: L ) equals Abs ( LINESEGMENT: Y )",
    "id": 3260,
    "declarations": "L: POINT; Y: LINESEGMENT",
    "facts": "Quadrant(L) = Abs(Y)"
},
{
    "assertion": "Perimeter ( CONICSECTION: J ) equals Slope ( LINE: U )",
    "id": 3261,
    "declarations": "J: CONICSECTION; U: LINE",
    "facts": "Perimeter(J) = Slope(U)"
},
{
    "assertion": "Negation ( Eccentricity ( CONICSECTION: m ) equals NUMBER: -77 ) equals BOOL: False",
    "id": 3262,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Eccentricity ( CONICSECTION: V ) equals HalfFocalLength ( CONICSECTION: F )",
    "id": 3263,
    "declarations": "V: CONICSECTION; F: CONICSECTION",
    "facts": "Eccentricity(V) = HalfFocalLength(F)"
},
{
    "assertion": "Center ( CONICSECTION: u ) equals POINT: k",
    "id": 3264,
    "declarations": "u: CONICSECTION; k: POINT",
    "facts": "Center(u) = k"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: j, CONICSECTION: C ) equals BOOL: True",
    "id": 3265,
    "declarations": "j: LINESEGMENT; C: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(j, C) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: p ) equals POINT: C",
    "id": 3266,
    "declarations": "p: TRIANGLE; C: POINT",
    "facts": "Orthocenter(p) = C"
},
{
    "assertion": "Length ( LINESEGMENT: C ) equals Area ( CONICSECTION: S )",
    "id": 3267,
    "declarations": "C: LINESEGMENT; S: CONICSECTION",
    "facts": "Length(C) = Area(S)"
},
{
    "assertion": "RightPart ( HYPERBOLA: p ) equals CURVE: h",
    "id": 3268,
    "declarations": "p: HYPERBOLA; h: CURVE",
    "facts": "RightPart(p) = h"
},
{
    "assertion": "InterReciprocal ( Diameter ( CIRCLE: w ) ) equals NUMBER: -19",
    "id": 3269,
    "declarations": "w: CIRCLE; -19: NUMBER",
    "facts": "InterReciprocal(Diameter(w)) = -19"
},
{
    "assertion": "Intercept ( PerpendicularBisector ( LINESEGMENT: F ), AXIS: xAxis ) equals Area ( CONICSECTION: R )",
    "id": 3270,
    "declarations": "F: LINESEGMENT; xAxis: AXIS; R: CONICSECTION",
    "facts": "Intercept(PerpendicularBisector(F), xAxis) = Area(R)"
},
{
    "assertion": "RealAxis ( ELLIPSE: v ) equals LINESEGMENT: w",
    "id": 3271,
    "declarations": "v: ELLIPSE; w: LINESEGMENT",
    "facts": "RealAxis(v) = w"
},
{
    "assertion": "InterceptChord ( LINE: x, CONICSECTION: m ) equals LINESEGMENT: k",
    "id": 3272,
    "declarations": "x: LINE; m: CONICSECTION; k: LINESEGMENT",
    "facts": "InterceptChord(x, m) = k"
},
{
    "assertion": "Center ( CONICSECTION: C ) equals Orthocenter ( TRIANGLE: u )",
    "id": 3273,
    "declarations": "C: CONICSECTION; u: TRIANGLE",
    "facts": "Center(C) = Orthocenter(u)"
},
{
    "assertion": "InterceptChord ( LINE: Z, CONICSECTION: N ) equals LINESEGMENT: Z",
    "id": 3274,
    "declarations": "Z: LINE; N: CONICSECTION; Z: LINESEGMENT",
    "facts": "InterceptChord(Z, N) = Z"
},
{
    "assertion": "RightFocus ( CONICSECTION: n ) equals RightFocus ( CONICSECTION: G )",
    "id": 3275,
    "declarations": "n: CONICSECTION; G: CONICSECTION",
    "facts": "RightFocus(n) = RightFocus(G)"
},
{
    "assertion": "LineOf ( POINT: D, POINT: u ) equals LINE: C",
    "id": 3276,
    "declarations": "D: POINT; u: POINT; C: LINE",
    "facts": "LineOf(D, u) = C"
},
{
    "assertion": "RightFocus ( CONICSECTION: M ) equals Incenter ( TRIANGLE: m )",
    "id": 3277,
    "declarations": "M: CONICSECTION; m: TRIANGLE",
    "facts": "RightFocus(M) = Incenter(m)"
},
{
    "assertion": "sqrt ( NUMBER: -72 ) equals Diameter ( CIRCLE: I )",
    "id": 3278,
    "declarations": "-72: NUMBER; I: CIRCLE",
    "facts": "sqrt(-72) = Diameter(I)"
},
{
    "assertion": "Vertex ( CONICSECTION: o ) equals UpperFocus ( CONICSECTION: c )",
    "id": 3279,
    "declarations": "o: CONICSECTION; c: CONICSECTION",
    "facts": "Vertex(o) = UpperFocus(c)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: b, CIRCLE: d ) equals BOOL: False",
    "id": 3280,
    "declarations": "b: CIRCLE; d: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(b, d) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: C ) equals POINT: n",
    "id": 3281,
    "declarations": "C: CONICSECTION; n: POINT",
    "facts": "RightVertex(C) = n"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: T ) ) equals Circumcenter ( TRIANGLE: X )",
    "id": 3282,
    "declarations": "T: ELLIPSE; X: TRIANGLE",
    "facts": "Endpoint(MajorAxis(T)) = Circumcenter(X)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: V ) equals RightFocus ( CONICSECTION: v )",
    "id": 3283,
    "declarations": "V: CONICSECTION; v: CONICSECTION",
    "facts": "LowerFocus(V) = RightFocus(v)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: P ) equals RightDirectrix ( CONICSECTION: Y )",
    "id": 3284,
    "declarations": "P: LINESEGMENT; Y: CONICSECTION",
    "facts": "OverlappingLine(P) = RightDirectrix(Y)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: n ) equals PerpendicularBisector ( MinorAxis ( ELLIPSE: N ) )",
    "id": 3285,
    "declarations": "n: LINESEGMENT; N: ELLIPSE",
    "facts": "PerpendicularBisector(n) = PerpendicularBisector(MinorAxis(N))"
},
{
    "assertion": "Projection ( POINT: E, LINE: O ) equals UpperVertex ( CONICSECTION: k )",
    "id": 3286,
    "declarations": "E: POINT; O: LINE; k: CONICSECTION",
    "facts": "Projection(E, O) = UpperVertex(k)"
},
{
    "assertion": "IsTangent ( LINE: V, CONICSECTION: W ) equals BOOL: True",
    "id": 3287,
    "declarations": "V: LINE; W: CONICSECTION; True: BOOL",
    "facts": "IsTangent(V, W) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: d ) equals RightFocus ( CONICSECTION: w )",
    "id": 3288,
    "declarations": "d: TRIANGLE; w: CONICSECTION",
    "facts": "Orthocenter(d) = RightFocus(w)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: N ) equals CURVE: r",
    "id": 3289,
    "declarations": "N: HYPERBOLA; r: CURVE",
    "facts": "LeftPart(N) = r"
},
{
    "assertion": "Intersection ( CURVE: v, CURVE: L ) equals UpperVertex ( CONICSECTION: m )",
    "id": 3290,
    "declarations": "v: CURVE; L: CURVE; m: CONICSECTION",
    "facts": "Intersection(v, L) = UpperVertex(m)"
},
{
    "assertion": "Center ( CONICSECTION: v ) equals Center ( CONICSECTION: h )",
    "id": 3291,
    "declarations": "v: CONICSECTION; h: CONICSECTION",
    "facts": "Center(v) = Center(h)"
},
{
    "assertion": "TriangleOf ( POINT: q, LowerFocus ( CONICSECTION: b ), POINT: K ) equals TRIANGLE: u",
    "id": 3292,
    "declarations": "q: POINT; b: CONICSECTION; K: POINT; u: TRIANGLE",
    "facts": "TriangleOf(q, LowerFocus(b), K) = u"
},
{
    "assertion": "Expression ( Locus ( POINT: L ) ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 3293,
    "declarations": "L: POINT; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(Locus(L)) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "IsIntersect ( CURVE: T, RightPart ( HYPERBOLA: c ) ) equals BOOL: False",
    "id": 3294,
    "declarations": "T: CURVE; c: HYPERBOLA; False: BOOL",
    "facts": "IsIntersect(T, RightPart(c)) = False"
},
{
    "assertion": "Length ( MinorAxis ( ELLIPSE: y ) ) equals NUMBER: 8",
    "id": 3295,
    "declarations": "y: ELLIPSE; 8: NUMBER",
    "facts": "Length(MinorAxis(y)) = 8"
},
{
    "assertion": "MajorAxis ( ELLIPSE: G ) equals LINESEGMENT: y",
    "id": 3296,
    "declarations": "G: ELLIPSE; y: LINESEGMENT",
    "facts": "MajorAxis(G) = y"
},
{
    "assertion": "TangentOfPoint ( Circumcenter ( TRIANGLE: X ), CURVE: h ) equals LINE: d",
    "id": 3297,
    "declarations": "X: TRIANGLE; h: CURVE; d: LINE",
    "facts": "TangentOfPoint(Circumcenter(X), h) = d"
},
{
    "assertion": "Incenter ( TRIANGLE: L ) equals POINT: s",
    "id": 3298,
    "declarations": "L: TRIANGLE; s: POINT",
    "facts": "Incenter(L) = s"
},
{
    "assertion": "LowerFocus ( CONICSECTION: b ) equals POINT: U",
    "id": 3299,
    "declarations": "b: CONICSECTION; U: POINT",
    "facts": "LowerFocus(b) = U"
},
{
    "assertion": "InterReciprocal ( Inclination ( LINE: n ) ) equals FocalLength ( CONICSECTION: M )",
    "id": 3300,
    "declarations": "n: LINE; M: CONICSECTION",
    "facts": "InterReciprocal(Inclination(n)) = FocalLength(M)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: s ) equals PerpendicularBisector ( LINESEGMENT: V )",
    "id": 3301,
    "declarations": "s: CONICSECTION; V: LINESEGMENT",
    "facts": "RightDirectrix(s) = PerpendicularBisector(V)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: h ) equals CURVE: D",
    "id": 3302,
    "declarations": "h: HYPERBOLA; D: CURVE",
    "facts": "LeftPart(h) = D"
},
{
    "assertion": "YCoordinate ( Orthocenter ( TRIANGLE: R ) ) equals Quadrant ( UpperFocus ( CONICSECTION: w ) )",
    "id": 3303,
    "declarations": "R: TRIANGLE; w: CONICSECTION",
    "facts": "YCoordinate(Orthocenter(R)) = Quadrant(UpperFocus(w))"
},
{
    "assertion": "Locus ( POINT: R ) equals CURVE: V",
    "id": 3304,
    "declarations": "R: POINT; V: CURVE",
    "facts": "Locus(R) = V"
},
{
    "assertion": "Coordinate ( LowerFocus ( CONICSECTION: e ) ) equals ( sqrt ( Quadrant ( Circumcenter ( TRIANGLE: C ) ) ), NUMBER: 4 )",
    "id": 3305,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Length ( InterceptChord ( PerpendicularBisector ( LINESEGMENT: q ), CONICSECTION: Q ) ) equals Abs ( LINESEGMENT: B )",
    "id": 3306,
    "declarations": "q: LINESEGMENT; Q: CONICSECTION; B: LINESEGMENT",
    "facts": "Length(InterceptChord(PerpendicularBisector(q), Q)) = Abs(B)"
},
{
    "assertion": "Locus ( Circumcenter ( TRIANGLE: Q ) ) equals CURVE: d",
    "id": 3307,
    "declarations": "Q: TRIANGLE; d: CURVE",
    "facts": "Locus(Circumcenter(Q)) = d"
},
{
    "assertion": "Between ( MidPoint ( LINESEGMENT: f ), POINT: F, POINT: c ) equals BOOL: False",
    "id": 3308,
    "declarations": "f: LINESEGMENT; F: POINT; c: POINT; False: BOOL",
    "facts": "Between(MidPoint(f), F, c) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: b ) equals DotProduct ( VECTOR: w, VECTOR: T )",
    "id": 3309,
    "declarations": "b: CONICSECTION; w: VECTOR; T: VECTOR",
    "facts": "Perimeter(b) = DotProduct(w, T)"
},
{
    "assertion": "Focus ( CONICSECTION: E ) equals RightFocus ( CONICSECTION: X )",
    "id": 3310,
    "declarations": "E: CONICSECTION; X: CONICSECTION",
    "facts": "Focus(E) = RightFocus(X)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: e ) equals POINT: v",
    "id": 3311,
    "declarations": "e: CONICSECTION; v: POINT",
    "facts": "LeftFocus(e) = v"
},
{
    "assertion": "RightFocus ( CONICSECTION: V ) equals UpperVertex ( CONICSECTION: z )",
    "id": 3312,
    "declarations": "V: CONICSECTION; z: CONICSECTION",
    "facts": "RightFocus(V) = UpperVertex(z)"
},
{
    "assertion": "And ( NumIntersection ( CURVE: W, RightPart ( HYPERBOLA: P ) ) equals NUMBER: -27, And ( TangentPoint ( LINE: R, CIRCLE: E ) equals UpperFocus ( CONICSECTION: k ), Asymptote ( HYPERBOLA: h ) equals LINE: T ) equals BOOL: False ) equals BOOL: True",
    "id": 3313,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: E ) equals LineOf ( POINT: U, POINT: w )",
    "id": 3314,
    "declarations": "E: LINESEGMENT; U: POINT; w: POINT",
    "facts": "OverlappingLine(E) = LineOf(U, w)"
},
{
    "assertion": "Distance ( Center ( CONICSECTION: n ), LowerVertex ( CONICSECTION: S ) ) equals Area ( CONICSECTION: d )",
    "id": 3315,
    "declarations": "n: CONICSECTION; S: CONICSECTION; d: CONICSECTION",
    "facts": "Distance(Center(n), LowerVertex(S)) = Area(d)"
},
{
    "assertion": "Center ( CONICSECTION: L ) equals Incenter ( TRIANGLE: u )",
    "id": 3316,
    "declarations": "L: CONICSECTION; u: TRIANGLE",
    "facts": "Center(L) = Incenter(u)"
},
{
    "assertion": "Center ( CONICSECTION: x ) equals RightVertex ( CONICSECTION: S )",
    "id": 3317,
    "declarations": "x: CONICSECTION; S: CONICSECTION",
    "facts": "Center(x) = RightVertex(S)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Q ) equals LowerFocus ( CONICSECTION: L )",
    "id": 3318,
    "declarations": "Q: CONICSECTION; L: CONICSECTION",
    "facts": "UpperVertex(Q) = LowerFocus(L)"
},
{
    "assertion": "LineOf ( Orthocenter ( TRIANGLE: s ), Center ( CONICSECTION: W ) ) equals LINE: c",
    "id": 3319,
    "declarations": "s: TRIANGLE; W: CONICSECTION; c: LINE",
    "facts": "LineOf(Orthocenter(s), Center(W)) = c"
},
{
    "assertion": "sqrt ( NUMBER: -42 ) equals DotProduct ( VECTOR: C, VECTOR: b )",
    "id": 3320,
    "declarations": "-42: NUMBER; C: VECTOR; b: VECTOR",
    "facts": "sqrt(-42) = DotProduct(C, b)"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: z ) ) equals CURVE: M",
    "id": 3321,
    "declarations": "z: CONICSECTION; M: CURVE",
    "facts": "Locus(LeftFocus(z)) = M"
},
{
    "assertion": "AngleOf ( POINT: q, POINT: b, LeftFocus ( CONICSECTION: n ) ) equals AngleOf ( LowerFocus ( CONICSECTION: w ), LowerVertex ( CONICSECTION: q ), UpperVertex ( CONICSECTION: I ) )",
    "id": 3322,
    "declarations": "q: POINT; b: POINT; n: CONICSECTION; w: CONICSECTION; q: CONICSECTION; I: CONICSECTION",
    "facts": "AngleOf(q, b, LeftFocus(n)) = AngleOf(LowerFocus(w), LowerVertex(q), UpperVertex(I))"
},
{
    "assertion": "VectorOf ( Center ( CONICSECTION: P ), POINT: z ) equals VECTOR: z",
    "id": 3323,
    "declarations": "P: CONICSECTION; z: POINT; z: VECTOR",
    "facts": "VectorOf(Center(P), z) = z"
},
{
    "assertion": "LowerVertex ( CONICSECTION: F ) equals POINT: M",
    "id": 3324,
    "declarations": "F: CONICSECTION; M: POINT",
    "facts": "LowerVertex(F) = M"
},
{
    "assertion": "Intercept ( OverlappingLine ( LINESEGMENT: B ), AXIS: yAxis ) equals NUMBER: 29",
    "id": 3325,
    "declarations": "B: LINESEGMENT; yAxis: AXIS; 29: NUMBER",
    "facts": "Intercept(OverlappingLine(B), yAxis) = 29"
},
{
    "assertion": "RightVertex ( CONICSECTION: u ) equals RightFocus ( CONICSECTION: I )",
    "id": 3326,
    "declarations": "u: CONICSECTION; I: CONICSECTION",
    "facts": "RightVertex(u) = RightFocus(I)"
},
{
    "assertion": "DotProduct ( VECTOR: V, VECTOR: s ) equals Radius ( CIRCLE: l )",
    "id": 3327,
    "declarations": "V: VECTOR; s: VECTOR; l: CIRCLE",
    "facts": "DotProduct(V, s) = Radius(l)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: M ) equals LowerFocus ( CONICSECTION: i )",
    "id": 3328,
    "declarations": "M: CONICSECTION; i: CONICSECTION",
    "facts": "UpperVertex(M) = LowerFocus(i)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: M ) equals UpperVertex ( CONICSECTION: s )",
    "id": 3329,
    "declarations": "M: CONICSECTION; s: CONICSECTION",
    "facts": "UpperFocus(M) = UpperVertex(s)"
},
{
    "assertion": "Vertex ( CONICSECTION: T ) equals POINT: s",
    "id": 3330,
    "declarations": "T: CONICSECTION; s: POINT",
    "facts": "Vertex(T) = s"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: r, TRIANGLE: k ) equals BOOL: False",
    "id": 3331,
    "declarations": "r: CIRCLE; k: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(r, k) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: G ) equals UpperVertex ( CONICSECTION: n )",
    "id": 3332,
    "declarations": "G: TRIANGLE; n: CONICSECTION",
    "facts": "Incenter(G) = UpperVertex(n)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: l ) equals RightFocus ( CONICSECTION: r )",
    "id": 3333,
    "declarations": "l: TRIANGLE; r: CONICSECTION",
    "facts": "Orthocenter(l) = RightFocus(r)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: W ) equals RightVertex ( CONICSECTION: L )",
    "id": 3334,
    "declarations": "W: TRIANGLE; L: CONICSECTION",
    "facts": "Orthocenter(W) = RightVertex(L)"
},
{
    "assertion": "Distance ( LowerVertex ( CONICSECTION: p ), LeftVertex ( CONICSECTION: O ) ) equals FocalLength ( CONICSECTION: C )",
    "id": 3335,
    "declarations": "p: CONICSECTION; O: CONICSECTION; C: CONICSECTION",
    "facts": "Distance(LowerVertex(p), LeftVertex(O)) = FocalLength(C)"
},
{
    "assertion": "YCoordinate ( POINT: z ) equals Perimeter ( CONICSECTION: x )",
    "id": 3336,
    "declarations": "z: POINT; x: CONICSECTION",
    "facts": "YCoordinate(z) = Perimeter(x)"
},
{
    "assertion": "TriangleOf ( LeftVertex ( CONICSECTION: O ), POINT: J, POINT: u ) equals TRIANGLE: v",
    "id": 3337,
    "declarations": "O: CONICSECTION; J: POINT; u: POINT; v: TRIANGLE",
    "facts": "TriangleOf(LeftVertex(O), J, u) = v"
},
{
    "assertion": "RightPart ( HYPERBOLA: h ) equals CURVE: z",
    "id": 3338,
    "declarations": "h: HYPERBOLA; z: CURVE",
    "facts": "RightPart(h) = z"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: I, TRIANGLE: W ) equals BOOL: True",
    "id": 3339,
    "declarations": "I: CIRCLE; W: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(I, W) = True"
},
{
    "assertion": "TangentPoint ( TangentOfPoint ( POINT: C, CURVE: t ), CIRCLE: m ) equals POINT: Y",
    "id": 3340,
    "declarations": "C: POINT; t: CURVE; m: CIRCLE; Y: POINT",
    "facts": "TangentPoint(TangentOfPoint(C, t), m) = Y"
},
{
    "assertion": "Min ( NUMBER: 38 ) equals Abs ( LINESEGMENT: T )",
    "id": 3341,
    "declarations": "38: NUMBER; T: LINESEGMENT",
    "facts": "Min(38) = Abs(T)"
},
{
    "assertion": "lg ( Quadrant ( POINT: w ) ) equals Quadrant ( POINT: U )",
    "id": 3342,
    "declarations": "w: POINT; U: POINT",
    "facts": "lg(Quadrant(w)) = Quadrant(U)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: A ) equals LeftDirectrix ( CONICSECTION: d )",
    "id": 3343,
    "declarations": "A: HYPERBOLA; d: CONICSECTION",
    "facts": "Asymptote(A) = LeftDirectrix(d)"
},
{
    "assertion": "FocalLength ( CONICSECTION: l ) equals Slope ( OverlappingLine ( MinorAxis ( ELLIPSE: W ) ) )",
    "id": 3344,
    "declarations": "l: CONICSECTION; W: ELLIPSE",
    "facts": "FocalLength(l) = Slope(OverlappingLine(MinorAxis(W)))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: L, TRIANGLE: K ) equals BOOL: True",
    "id": 3345,
    "declarations": "L: CIRCLE; K: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(L, K) = True"
},
{
    "assertion": "NumIntersection ( CURVE: x, CURVE: G ) equals NUMBER: -53",
    "id": 3346,
    "declarations": "x: CURVE; G: CURVE; -53: NUMBER",
    "facts": "NumIntersection(x, G) = -53"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: l ) equals LINESEGMENT: r",
    "id": 3347,
    "declarations": "l: ELLIPSE; r: LINESEGMENT",
    "facts": "ImaginaryAxis(l) = r"
},
{
    "assertion": "LowerVertex ( CONICSECTION: z ) equals RightVertex ( CONICSECTION: F )",
    "id": 3348,
    "declarations": "z: CONICSECTION; F: CONICSECTION",
    "facts": "LowerVertex(z) = RightVertex(F)"
},
{
    "assertion": "Radius ( CIRCLE: U ) equals Slope ( LINE: Y )",
    "id": 3349,
    "declarations": "U: CIRCLE; Y: LINE",
    "facts": "Radius(U) = Slope(Y)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: g, CONICSECTION: H ) equals BOOL: True",
    "id": 3350,
    "declarations": "g: LINESEGMENT; H: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(g, H) = True"
},
{
    "assertion": "Focus ( CONICSECTION: l ) equals UpperFocus ( CONICSECTION: Q )",
    "id": 3351,
    "declarations": "l: CONICSECTION; Q: CONICSECTION",
    "facts": "Focus(l) = UpperFocus(Q)"
},
{
    "assertion": "Directrix ( CONICSECTION: R ) equals LINE: y",
    "id": 3352,
    "declarations": "R: CONICSECTION; y: LINE",
    "facts": "Directrix(R) = y"
},
{
    "assertion": "IsInTangent ( CIRCLE: m, CIRCLE: V ) equals BOOL: False",
    "id": 3353,
    "declarations": "m: CIRCLE; V: CIRCLE; False: BOOL",
    "facts": "IsInTangent(m, V) = False"
},
{
    "assertion": "Center ( CONICSECTION: K ) equals POINT: Q",
    "id": 3354,
    "declarations": "K: CONICSECTION; Q: POINT",
    "facts": "Center(K) = Q"
},
{
    "assertion": "Radius ( CIRCLE: S ) equals NUMBER: 8",
    "id": 3355,
    "declarations": "S: CIRCLE; 8: NUMBER",
    "facts": "Radius(S) = 8"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: S ) equals NUMBER: -79",
    "id": 3356,
    "declarations": "S: CONICSECTION; -79: NUMBER",
    "facts": "HalfFocalLength(S) = -79"
},
{
    "assertion": "Projection ( UpperFocus ( CONICSECTION: X ), LINE: c ) equals POINT: E",
    "id": 3357,
    "declarations": "X: CONICSECTION; c: LINE; E: POINT",
    "facts": "Projection(UpperFocus(X), c) = E"
},
{
    "assertion": "Inclination ( LINE: E ) equals Min ( NUMBER: -3 )",
    "id": 3358,
    "declarations": "E: LINE; -3: NUMBER",
    "facts": "Inclination(E) = Min(-3)"
},
{
    "assertion": "lg ( Min ( InterReciprocal ( Abs ( LINESEGMENT: g ) ) ) ) equals Quadrant ( FootPoint ( PerpendicularBisector ( LINESEGMENT: F ), LINE: E ) )",
    "id": 3359,
    "declarations": "g: LINESEGMENT; F: LINESEGMENT; E: LINE",
    "facts": "lg(Min(InterReciprocal(Abs(g)))) = Quadrant(FootPoint(PerpendicularBisector(F), E))"
},
{
    "assertion": "TangentOnPoint ( LowerFocus ( CONICSECTION: g ), CURVE: j ) equals LINE: a",
    "id": 3360,
    "declarations": "g: CONICSECTION; j: CURVE; a: LINE",
    "facts": "TangentOnPoint(LowerFocus(g), j) = a"
},
{
    "assertion": "LineSegmentOf ( POINT: B, LeftFocus ( CONICSECTION: m ) ) equals LINESEGMENT: Q",
    "id": 3361,
    "declarations": "B: POINT; m: CONICSECTION; Q: LINESEGMENT",
    "facts": "LineSegmentOf(B, LeftFocus(m)) = Q"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: X, TRIANGLE: T ) equals BOOL: False",
    "id": 3362,
    "declarations": "X: CIRCLE; T: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(X, T) = False"
},
{
    "assertion": "Focus ( CONICSECTION: V ) equals RightFocus ( CONICSECTION: m )",
    "id": 3363,
    "declarations": "V: CONICSECTION; m: CONICSECTION",
    "facts": "Focus(V) = RightFocus(m)"
},
{
    "assertion": "InterReciprocal ( Intercept ( LeftDirectrix ( CONICSECTION: M ), AXIS: yAxis ) ) equals Perimeter ( CONICSECTION: t )",
    "id": 3364,
    "declarations": "M: CONICSECTION; yAxis: AXIS; t: CONICSECTION",
    "facts": "InterReciprocal(Intercept(LeftDirectrix(M), yAxis)) = Perimeter(t)"
},
{
    "assertion": "IsInTangent ( CIRCLE: n, CIRCLE: L ) equals BOOL: False",
    "id": 3365,
    "declarations": "n: CIRCLE; L: CIRCLE; False: BOOL",
    "facts": "IsInTangent(n, L) = False"
},
{
    "assertion": "NumIntersection ( CURVE: s, RightPart ( HYPERBOLA: h ) ) equals NUMBER: -4",
    "id": 3366,
    "declarations": "s: CURVE; h: HYPERBOLA; -4: NUMBER",
    "facts": "NumIntersection(s, RightPart(h)) = -4"
},
{
    "assertion": "MinorAxis ( ELLIPSE: i ) equals LINESEGMENT: E",
    "id": 3367,
    "declarations": "i: ELLIPSE; E: LINESEGMENT",
    "facts": "MinorAxis(i) = E"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: g, TRIANGLE: E ) equals BOOL: False",
    "id": 3368,
    "declarations": "g: CIRCLE; E: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(g, E) = False"
},
{
    "assertion": "Focus ( CONICSECTION: U ) equals LeftVertex ( CONICSECTION: g )",
    "id": 3369,
    "declarations": "U: CONICSECTION; g: CONICSECTION",
    "facts": "Focus(U) = LeftVertex(g)"
},
{
    "assertion": "Area ( CONICSECTION: s ) equals Radius ( CIRCLE: F )",
    "id": 3370,
    "declarations": "s: CONICSECTION; F: CIRCLE",
    "facts": "Area(s) = Radius(F)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: P ) equals CIRCLE: B",
    "id": 3371,
    "declarations": "P: TRIANGLE; B: CIRCLE",
    "facts": "CircumCircle(P) = B"
},
{
    "assertion": "Max ( NUMBER: -94 ) equals FocalLength ( CONICSECTION: C )",
    "id": 3372,
    "declarations": "-94: NUMBER; C: CONICSECTION",
    "facts": "Max(-94) = FocalLength(C)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: K ) equals MinorAxis ( ELLIPSE: Q )",
    "id": 3373,
    "declarations": "K: ELLIPSE; Q: ELLIPSE",
    "facts": "MinorAxis(K) = MinorAxis(Q)"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: U ), TRIANGLE: V ) equals BOOL: True",
    "id": 3374,
    "declarations": "U: TRIANGLE; V: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(U), V) = True"
},
{
    "assertion": "RightPart ( HYPERBOLA: w ) equals CURVE: A",
    "id": 3375,
    "declarations": "w: HYPERBOLA; A: CURVE",
    "facts": "RightPart(w) = A"
},
{
    "assertion": "Vertex ( CONICSECTION: D ) equals UpperVertex ( CONICSECTION: w )",
    "id": 3376,
    "declarations": "D: CONICSECTION; w: CONICSECTION",
    "facts": "Vertex(D) = UpperVertex(w)"
},
{
    "assertion": "RightVertex ( CONICSECTION: A ) equals POINT: J",
    "id": 3377,
    "declarations": "A: CONICSECTION; J: POINT",
    "facts": "RightVertex(A) = J"
},
{
    "assertion": "Focus ( CONICSECTION: v ) equals Circumcenter ( TRIANGLE: F )",
    "id": 3378,
    "declarations": "v: CONICSECTION; F: TRIANGLE",
    "facts": "Focus(v) = Circumcenter(F)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: C ) equals Intercept ( LINE: T, AXIS: yAxis )",
    "id": 3379,
    "declarations": "C: CONICSECTION; T: LINE; yAxis: AXIS",
    "facts": "Eccentricity(C) = Intercept(T, yAxis)"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( LINESEGMENT: n ) ) equals Inclination ( LINE: K )",
    "id": 3380,
    "declarations": "n: LINESEGMENT; K: LINE",
    "facts": "Inclination(PerpendicularBisector(n)) = Inclination(K)"
},
{
    "assertion": "Area ( CONICSECTION: a ) equals Radius ( CIRCLE: y )",
    "id": 3381,
    "declarations": "a: CONICSECTION; y: CIRCLE",
    "facts": "Area(a) = Radius(y)"
},
{
    "assertion": "Projection ( Incenter ( TRIANGLE: i ), LINE: G ) equals LeftFocus ( CONICSECTION: i )",
    "id": 3382,
    "declarations": "i: TRIANGLE; G: LINE; i: CONICSECTION",
    "facts": "Projection(Incenter(i), G) = LeftFocus(i)"
},
{
    "assertion": "VectorOf ( POINT: v, POINT: a ) equals VECTOR: k",
    "id": 3383,
    "declarations": "v: POINT; a: POINT; k: VECTOR",
    "facts": "VectorOf(v, a) = k"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: I ) equals LINESEGMENT: u",
    "id": 3384,
    "declarations": "I: ELLIPSE; u: LINESEGMENT",
    "facts": "ImaginaryAxis(I) = u"
},
{
    "assertion": "LocusEquation ( POINT: R ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 3385,
    "declarations": "R: POINT; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "LocusEquation(R) = x*space+*spacey*space=*space5"
},
{
    "assertion": "CircumCircle ( TRIANGLE: m ) equals CIRCLE: B",
    "id": 3386,
    "declarations": "m: TRIANGLE; B: CIRCLE",
    "facts": "CircumCircle(m) = B"
},
{
    "assertion": "Eccentricity ( CONICSECTION: V ) equals Intercept ( LINE: M, AXIS: yAxis )",
    "id": 3387,
    "declarations": "V: CONICSECTION; M: LINE; yAxis: AXIS",
    "facts": "Eccentricity(V) = Intercept(M, yAxis)"
},
{
    "assertion": "Center ( CONICSECTION: B ) equals POINT: b",
    "id": 3388,
    "declarations": "B: CONICSECTION; b: POINT",
    "facts": "Center(B) = b"
},
{
    "assertion": "LeftVertex ( CONICSECTION: N ) equals POINT: i",
    "id": 3389,
    "declarations": "N: CONICSECTION; i: POINT",
    "facts": "LeftVertex(N) = i"
},
{
    "assertion": "Circumcenter ( TRIANGLE: d ) equals FootPoint ( LINE: s, TangentOfPoint ( POINT: l, CURVE: q ) )",
    "id": 3390,
    "declarations": "d: TRIANGLE; s: LINE; l: POINT; q: CURVE",
    "facts": "Circumcenter(d) = FootPoint(s, TangentOfPoint(l, q))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: u ) equals NUMBER: 77",
    "id": 3391,
    "declarations": "u: CONICSECTION; 77: NUMBER",
    "facts": "Eccentricity(u) = 77"
},
{
    "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: V ) ) equals Perimeter ( CONICSECTION: B )",
    "id": 3392,
    "declarations": "V: CONICSECTION; B: CONICSECTION",
    "facts": "YCoordinate(LowerVertex(V)) = Perimeter(B)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: r ) equals LineOf ( POINT: L, LeftVertex ( CONICSECTION: O ) )",
    "id": 3393,
    "declarations": "r: HYPERBOLA; L: POINT; O: CONICSECTION",
    "facts": "Asymptote(r) = LineOf(L, LeftVertex(O))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: q ) equals FootPoint ( LINE: n, LineOf ( Center ( CONICSECTION: Q ), Center ( CONICSECTION: D ) ) )",
    "id": 3394,
    "declarations": "q: TRIANGLE; n: LINE; Q: CONICSECTION; D: CONICSECTION",
    "facts": "Circumcenter(q) = FootPoint(n, LineOf(Center(Q), Center(D)))"
},
{
    "assertion": "lg ( NUMBER: 6 ) equals NUMBER: 24",
    "id": 3395,
    "declarations": "6: NUMBER; 24: NUMBER",
    "facts": "lg(6) = 24"
},
{
    "assertion": "LineSegmentOf ( Projection ( LeftVertex ( CONICSECTION: e ), RightDirectrix ( CONICSECTION: d ) ), POINT: B ) equals LINESEGMENT: x",
    "id": 3396,
    "declarations": "e: CONICSECTION; d: CONICSECTION; B: POINT; x: LINESEGMENT",
    "facts": "LineSegmentOf(Projection(LeftVertex(e), RightDirectrix(d)), B) = x"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: r ) equals LINE: j",
    "id": 3397,
    "declarations": "r: CONICSECTION; j: LINE",
    "facts": "LeftDirectrix(r) = j"
},
{
    "assertion": "LocusEquation ( POINT: V ) equals LocusEquation ( POINT: b )",
    "id": 3398,
    "declarations": "V: POINT; b: POINT",
    "facts": "LocusEquation(V) = LocusEquation(b)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: v ) equals AXIS: yAxis",
    "id": 3399,
    "declarations": "v: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(v) = yAxis"
},
{
    "assertion": "RightFocus ( CONICSECTION: E ) equals MidPoint ( LINESEGMENT: K )",
    "id": 3400,
    "declarations": "E: CONICSECTION; K: LINESEGMENT",
    "facts": "RightFocus(E) = MidPoint(K)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: I ) equals RightDirectrix ( CONICSECTION: K )",
    "id": 3401,
    "declarations": "I: LINESEGMENT; K: CONICSECTION",
    "facts": "PerpendicularBisector(I) = RightDirectrix(K)"
},
{
    "assertion": "RightFocus ( CONICSECTION: Q ) equals LowerFocus ( CONICSECTION: Y )",
    "id": 3402,
    "declarations": "Q: CONICSECTION; Y: CONICSECTION",
    "facts": "RightFocus(Q) = LowerFocus(Y)"
},
{
    "assertion": "RightPart ( HYPERBOLA: R ) equals CURVE: G",
    "id": 3403,
    "declarations": "R: HYPERBOLA; G: CURVE",
    "facts": "RightPart(R) = G"
},
{
    "assertion": "Circumcenter ( TRIANGLE: y ) equals RightVertex ( CONICSECTION: j )",
    "id": 3404,
    "declarations": "y: TRIANGLE; j: CONICSECTION",
    "facts": "Circumcenter(y) = RightVertex(j)"
},
{
    "assertion": "Projection ( POINT: U, LINE: M ) equals POINT: I",
    "id": 3405,
    "declarations": "U: POINT; M: LINE; I: POINT",
    "facts": "Projection(U, M) = I"
},
{
    "assertion": "IsPerpendicular ( OverlappingLine ( ImaginaryAxis ( ELLIPSE: P ) ), LINE: k ) equals BOOL: False",
    "id": 3406,
    "declarations": "P: ELLIPSE; k: LINE; False: BOOL",
    "facts": "IsPerpendicular(OverlappingLine(ImaginaryAxis(P)), k) = False"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: z, CircumCircle ( TRIANGLE: G ) ) equals BOOL: False",
    "id": 3407,
    "declarations": "z: LINESEGMENT; G: TRIANGLE; False: BOOL",
    "facts": "IsDiameter(z, CircumCircle(G)) = False"
},
{
    "assertion": "Slope ( LINE: B ) equals Quadrant ( Center ( CONICSECTION: y ) )",
    "id": 3408,
    "declarations": "B: LINE; y: CONICSECTION",
    "facts": "Slope(B) = Quadrant(Center(y))"
},
{
    "assertion": "AngleOf ( Incenter ( TRIANGLE: T ), Orthocenter ( TRIANGLE: P ), POINT: f ) equals ApplyUnit ( XCoordinate ( Incenter ( TRIANGLE: M ) ), DEGREESTR: degree )",
    "id": 3409,
    "declarations": "T: TRIANGLE; P: TRIANGLE; f: POINT; M: TRIANGLE; degree: DEGREESTR",
    "facts": "AngleOf(Incenter(T), Orthocenter(P), f) = ApplyUnit(XCoordinate(Incenter(M)), degree)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: T ) equals LINESEGMENT: L",
    "id": 3410,
    "declarations": "T: ELLIPSE; L: LINESEGMENT",
    "facts": "MajorAxis(T) = L"
},
{
    "assertion": "Quadrant ( POINT: S ) equals NUMBER: -34",
    "id": 3411,
    "declarations": "S: POINT; -34: NUMBER",
    "facts": "Quadrant(S) = -34"
},
{
    "assertion": "FocalLength ( CONICSECTION: m ) equals Area ( CONICSECTION: x )",
    "id": 3412,
    "declarations": "m: CONICSECTION; x: CONICSECTION",
    "facts": "FocalLength(m) = Area(x)"
},
{
    "assertion": "Vertex ( CONICSECTION: d ) equals RightVertex ( CONICSECTION: J )",
    "id": 3413,
    "declarations": "d: CONICSECTION; J: CONICSECTION",
    "facts": "Vertex(d) = RightVertex(J)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: c ) equals LeftFocus ( CONICSECTION: J )",
    "id": 3414,
    "declarations": "c: LINESEGMENT; J: CONICSECTION",
    "facts": "MidPoint(c) = LeftFocus(J)"
},
{
    "assertion": "Between ( POINT: T, RightFocus ( CONICSECTION: A ), UpperVertex ( CONICSECTION: r ) ) equals BOOL: True",
    "id": 3415,
    "declarations": "T: POINT; A: CONICSECTION; r: CONICSECTION; True: BOOL",
    "facts": "Between(T, RightFocus(A), UpperVertex(r)) = True"
},
{
    "assertion": "MidPoint ( LINESEGMENT: S ) equals Incenter ( TRIANGLE: W )",
    "id": 3416,
    "declarations": "S: LINESEGMENT; W: TRIANGLE",
    "facts": "MidPoint(S) = Incenter(W)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: P ) equals LINE: F",
    "id": 3417,
    "declarations": "P: LINESEGMENT; F: LINE",
    "facts": "OverlappingLine(P) = F"
},
{
    "assertion": "MinorAxis ( ELLIPSE: H ) equals RealAxis ( ELLIPSE: o )",
    "id": 3418,
    "declarations": "H: ELLIPSE; o: ELLIPSE",
    "facts": "MinorAxis(H) = RealAxis(o)"
},
{
    "assertion": "RightVertex ( CONICSECTION: h ) equals RightFocus ( CONICSECTION: J )",
    "id": 3419,
    "declarations": "h: CONICSECTION; J: CONICSECTION",
    "facts": "RightVertex(h) = RightFocus(J)"
},
{
    "assertion": "RightFocus ( CONICSECTION: D ) equals UpperVertex ( CONICSECTION: r )",
    "id": 3420,
    "declarations": "D: CONICSECTION; r: CONICSECTION",
    "facts": "RightFocus(D) = UpperVertex(r)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: W ) equals LINESEGMENT: i",
    "id": 3421,
    "declarations": "W: ELLIPSE; i: LINESEGMENT",
    "facts": "ImaginaryAxis(W) = i"
},
{
    "assertion": "IsInTangent ( CIRCLE: S, CIRCLE: e ) equals BOOL: False",
    "id": 3422,
    "declarations": "S: CIRCLE; e: CIRCLE; False: BOOL",
    "facts": "IsInTangent(S, e) = False"
},
{
    "assertion": "NumIntersection ( CURVE: d, Locus ( POINT: t ) ) equals NUMBER: -59",
    "id": 3423,
    "declarations": "d: CURVE; t: POINT; -59: NUMBER",
    "facts": "NumIntersection(d, Locus(t)) = -59"
},
{
    "assertion": "InterceptChord ( LINE: Z, CONICSECTION: T ) equals LINESEGMENT: P",
    "id": 3424,
    "declarations": "Z: LINE; T: CONICSECTION; P: LINESEGMENT",
    "facts": "InterceptChord(Z, T) = P"
},
{
    "assertion": "MinorAxis ( ELLIPSE: o ) equals LINESEGMENT: b",
    "id": 3425,
    "declarations": "o: ELLIPSE; b: LINESEGMENT",
    "facts": "MinorAxis(o) = b"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: p ) equals AXIS: xAxis",
    "id": 3426,
    "declarations": "p: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(p) = xAxis"
},
{
    "assertion": "Center ( CONICSECTION: W ) equals LeftVertex ( CONICSECTION: V )",
    "id": 3427,
    "declarations": "W: CONICSECTION; V: CONICSECTION",
    "facts": "Center(W) = LeftVertex(V)"
},
{
    "assertion": "TangentOnPoint ( POINT: G, CURVE: W ) equals LINE: s",
    "id": 3428,
    "declarations": "G: POINT; W: CURVE; s: LINE",
    "facts": "TangentOnPoint(G, W) = s"
},
{
    "assertion": "Vertex ( CONICSECTION: s ) equals UpperVertex ( CONICSECTION: n )",
    "id": 3429,
    "declarations": "s: CONICSECTION; n: CONICSECTION",
    "facts": "Vertex(s) = UpperVertex(n)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: m ) equals LineSegmentOf ( RightFocus ( CONICSECTION: m ), UpperVertex ( CONICSECTION: F ) )",
    "id": 3430,
    "declarations": "m: ELLIPSE; m: CONICSECTION; F: CONICSECTION",
    "facts": "ImaginaryAxis(m) = LineSegmentOf(RightFocus(m), UpperVertex(F))"
},
{
    "assertion": "Distance ( POINT: R, POINT: V ) equals NUMBER: -66",
    "id": 3431,
    "declarations": "R: POINT; V: POINT; -66: NUMBER",
    "facts": "Distance(R, V) = -66"
},
{
    "assertion": "Intercept ( OverlappingLine ( ImaginaryAxis ( ELLIPSE: S ) ), AXIS: xAxis ) equals NUMBER: 98",
    "id": 3432,
    "declarations": "S: ELLIPSE; xAxis: AXIS; 98: NUMBER",
    "facts": "Intercept(OverlappingLine(ImaginaryAxis(S)), xAxis) = 98"
},
{
    "assertion": "UpperFocus ( CONICSECTION: X ) equals Center ( CONICSECTION: c )",
    "id": 3433,
    "declarations": "X: CONICSECTION; c: CONICSECTION",
    "facts": "UpperFocus(X) = Center(c)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: K, TRIANGLE: g ) equals BOOL: True",
    "id": 3434,
    "declarations": "K: CIRCLE; g: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(K, g) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: p ) equals Area ( CONICSECTION: H )",
    "id": 3435,
    "declarations": "p: CONICSECTION; H: CONICSECTION",
    "facts": "HalfFocalLength(p) = Area(H)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: d ) equals YCoordinate ( MidPoint ( LINESEGMENT: S ) )",
    "id": 3436,
    "declarations": "d: CONICSECTION; S: LINESEGMENT",
    "facts": "Eccentricity(d) = YCoordinate(MidPoint(S))"
},
{
    "assertion": "LocusEquation ( LeftFocus ( CONICSECTION: k ) ) equals EXPRESSION: x^2*space+*space(y*space-*space2)^2*space=*space4",
    "id": 3437,
    "declarations": "k: CONICSECTION; x^2*space+*space(y*space-*space2)^2*space=*space4: EXPRESSION",
    "facts": "LocusEquation(LeftFocus(k)) = x^2*space+*space(y*space-*space2)^2*space=*space4"
},
{
    "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: E ) ) equals XCoordinate ( RightFocus ( CONICSECTION: o ) )",
    "id": 3438,
    "declarations": "E: CONICSECTION; o: CONICSECTION",
    "facts": "YCoordinate(LowerVertex(E)) = XCoordinate(RightFocus(o))"
},
{
    "assertion": "Center ( CONICSECTION: m ) equals Orthocenter ( TRIANGLE: w )",
    "id": 3439,
    "declarations": "m: CONICSECTION; w: TRIANGLE",
    "facts": "Center(m) = Orthocenter(w)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: L ) equals RealAxis ( ELLIPSE: C )",
    "id": 3440,
    "declarations": "L: ELLIPSE; C: ELLIPSE",
    "facts": "MinorAxis(L) = RealAxis(C)"
},
{
    "assertion": "IsPerpendicular ( LINE: G, LINE: X ) equals BOOL: True",
    "id": 3441,
    "declarations": "G: LINE; X: LINE; True: BOOL",
    "facts": "IsPerpendicular(G, X) = True"
},
{
    "assertion": "Coordinate ( Projection ( RightFocus ( CONICSECTION: Q ), LINE: V ) ) equals ( lg ( Perimeter ( CONICSECTION: f ) ), YCoordinate ( LowerVertex ( CONICSECTION: k ) ) )",
    "id": 3442,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightVertex ( CONICSECTION: J ) equals POINT: C",
    "id": 3443,
    "declarations": "J: CONICSECTION; C: POINT",
    "facts": "RightVertex(J) = C"
},
{
    "assertion": "Directrix ( CONICSECTION: U ) equals LINE: V",
    "id": 3444,
    "declarations": "U: CONICSECTION; V: LINE",
    "facts": "Directrix(U) = V"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: j ) equals LINESEGMENT: i",
    "id": 3445,
    "declarations": "j: ELLIPSE; i: LINESEGMENT",
    "facts": "ImaginaryAxis(j) = i"
},
{
    "assertion": "IsPerpendicular ( OverlappingLine ( LINESEGMENT: q ), TangentOnPoint ( LeftVertex ( CONICSECTION: Q ), CURVE: t ) ) equals BOOL: False",
    "id": 3446,
    "declarations": "q: LINESEGMENT; Q: CONICSECTION; t: CURVE; False: BOOL",
    "facts": "IsPerpendicular(OverlappingLine(q), TangentOnPoint(LeftVertex(Q), t)) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: D ) equals POINT: h",
    "id": 3447,
    "declarations": "D: CONICSECTION; h: POINT",
    "facts": "Vertex(D) = h"
},
{
    "assertion": "Between ( LowerFocus ( CONICSECTION: C ), POINT: h, Center ( CONICSECTION: L ) ) equals BOOL: False",
    "id": 3448,
    "declarations": "C: CONICSECTION; h: POINT; L: CONICSECTION; False: BOOL",
    "facts": "Between(LowerFocus(C), h, Center(L)) = False"
},
{
    "assertion": "Between ( Incenter ( TRIANGLE: U ), LowerFocus ( CONICSECTION: v ), POINT: Z ) equals BOOL: True",
    "id": 3449,
    "declarations": "U: TRIANGLE; v: CONICSECTION; Z: POINT; True: BOOL",
    "facts": "Between(Incenter(U), LowerFocus(v), Z) = True"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: i, TRIANGLE: y ) equals BOOL: False",
    "id": 3450,
    "declarations": "i: CIRCLE; y: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(i, y) = False"
},
{
    "assertion": "LocusEquation ( RightVertex ( CONICSECTION: j ) ) equals EXPRESSION: y*space=*spacee^x",
    "id": 3451,
    "declarations": "j: CONICSECTION; y*space=*spacee^x: EXPRESSION",
    "facts": "LocusEquation(RightVertex(j)) = y*space=*spacee^x"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: e ) equals LINESEGMENT: X",
    "id": 3452,
    "declarations": "e: ELLIPSE; X: LINESEGMENT",
    "facts": "ImaginaryAxis(e) = X"
},
{
    "assertion": "Endpoint ( LINESEGMENT: M ) equals UpperVertex ( CONICSECTION: I )",
    "id": 3453,
    "declarations": "M: LINESEGMENT; I: CONICSECTION",
    "facts": "Endpoint(M) = UpperVertex(I)"
},
{
    "assertion": "RightPart ( HYPERBOLA: C ) equals CURVE: c",
    "id": 3454,
    "declarations": "C: HYPERBOLA; c: CURVE",
    "facts": "RightPart(C) = c"
},
{
    "assertion": "MidPoint ( LineSegmentOf ( Orthocenter ( TRIANGLE: K ), RightVertex ( CONICSECTION: g ) ) ) equals POINT: X",
    "id": 3455,
    "declarations": "K: TRIANGLE; g: CONICSECTION; X: POINT",
    "facts": "MidPoint(LineSegmentOf(Orthocenter(K), RightVertex(g))) = X"
},
{
    "assertion": "LineSegmentOf ( POINT: K, Center ( CONICSECTION: e ) ) equals LINESEGMENT: v",
    "id": 3456,
    "declarations": "K: POINT; e: CONICSECTION; v: LINESEGMENT",
    "facts": "LineSegmentOf(K, Center(e)) = v"
},
{
    "assertion": "RightFocus ( CONICSECTION: G ) equals UpperFocus ( CONICSECTION: m )",
    "id": 3457,
    "declarations": "G: CONICSECTION; m: CONICSECTION",
    "facts": "RightFocus(G) = UpperFocus(m)"
},
{
    "assertion": "Locus ( UpperFocus ( CONICSECTION: c ) ) equals CURVE: N",
    "id": 3458,
    "declarations": "c: CONICSECTION; N: CURVE",
    "facts": "Locus(UpperFocus(c)) = N"
},
{
    "assertion": "Projection ( Projection ( Center ( CONICSECTION: q ), LINE: r ), TangentOfPoint ( RightFocus ( CONICSECTION: d ), CURVE: I ) ) equals POINT: v",
    "id": 3459,
    "declarations": "q: CONICSECTION; r: LINE; d: CONICSECTION; I: CURVE; v: POINT",
    "facts": "Projection(Projection(Center(q), r), TangentOfPoint(RightFocus(d), I)) = v"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: x, TRIANGLE: s ) equals BOOL: False",
    "id": 3460,
    "declarations": "x: CIRCLE; s: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(x, s) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: w ) equals Abs ( LINESEGMENT: L )",
    "id": 3461,
    "declarations": "w: CONICSECTION; L: LINESEGMENT",
    "facts": "Perimeter(w) = Abs(L)"
},
{
    "assertion": "Quadrant ( POINT: p ) equals NUMBER: 55",
    "id": 3462,
    "declarations": "p: POINT; 55: NUMBER",
    "facts": "Quadrant(p) = 55"
},
{
    "assertion": "AngleOf ( LowerVertex ( CONICSECTION: b ), Center ( CONICSECTION: T ), Incenter ( TRIANGLE: K ) ) equals AngleOf ( POINT: p, POINT: n, POINT: M )",
    "id": 3463,
    "declarations": "b: CONICSECTION; T: CONICSECTION; K: TRIANGLE; p: POINT; n: POINT; M: POINT",
    "facts": "AngleOf(LowerVertex(b), Center(T), Incenter(K)) = AngleOf(p, n, M)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: R ) equals Radius ( CIRCLE: O )",
    "id": 3464,
    "declarations": "R: CONICSECTION; O: CIRCLE",
    "facts": "Eccentricity(R) = Radius(O)"
},
{
    "assertion": "TangentOnPoint ( Incenter ( TRIANGLE: g ), CURVE: A ) equals OverlappingLine ( LINESEGMENT: O )",
    "id": 3465,
    "declarations": "g: TRIANGLE; A: CURVE; O: LINESEGMENT",
    "facts": "TangentOnPoint(Incenter(g), A) = OverlappingLine(O)"
},
{
    "assertion": "RightPart ( HYPERBOLA: W ) equals CURVE: I",
    "id": 3466,
    "declarations": "W: HYPERBOLA; I: CURVE",
    "facts": "RightPart(W) = I"
},
{
    "assertion": "TriangleOf ( POINT: W, POINT: n, LowerVertex ( CONICSECTION: d ) ) equals TRIANGLE: x",
    "id": 3467,
    "declarations": "W: POINT; n: POINT; d: CONICSECTION; x: TRIANGLE",
    "facts": "TriangleOf(W, n, LowerVertex(d)) = x"
},
{
    "assertion": "UpperFocus ( CONICSECTION: F ) equals RightVertex ( CONICSECTION: i )",
    "id": 3468,
    "declarations": "F: CONICSECTION; i: CONICSECTION",
    "facts": "UpperFocus(F) = RightVertex(i)"
},
{
    "assertion": "Min ( Abs ( RealAxis ( ELLIPSE: y ) ) ) equals Abs ( LINESEGMENT: w )",
    "id": 3469,
    "declarations": "y: ELLIPSE; w: LINESEGMENT",
    "facts": "Min(Abs(RealAxis(y))) = Abs(w)"
},
{
    "assertion": "lg ( NUMBER: -61 ) equals NUMBER: 38",
    "id": 3470,
    "declarations": "-61: NUMBER; 38: NUMBER",
    "facts": "lg(-61) = 38"
},
{
    "assertion": "Area ( CONICSECTION: o ) equals NUMBER: 11",
    "id": 3471,
    "declarations": "o: CONICSECTION; 11: NUMBER",
    "facts": "Area(o) = 11"
},
{
    "assertion": "LeftVertex ( CONICSECTION: g ) equals POINT: c",
    "id": 3472,
    "declarations": "g: CONICSECTION; c: POINT",
    "facts": "LeftVertex(g) = c"
},
{
    "assertion": "InterceptChord ( LINE: j, CONICSECTION: u ) equals MinorAxis ( ELLIPSE: I )",
    "id": 3473,
    "declarations": "j: LINE; u: CONICSECTION; I: ELLIPSE",
    "facts": "InterceptChord(j, u) = MinorAxis(I)"
},
{
    "assertion": "FocalLength ( CONICSECTION: D ) equals YCoordinate ( LeftFocus ( CONICSECTION: C ) )",
    "id": 3474,
    "declarations": "D: CONICSECTION; C: CONICSECTION",
    "facts": "FocalLength(D) = YCoordinate(LeftFocus(C))"
},
{
    "assertion": "LocusEquation ( Orthocenter ( TRIANGLE: G ) ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 3475,
    "declarations": "G: TRIANGLE; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "LocusEquation(Orthocenter(G)) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "Distance ( POINT: B, Incenter ( TRIANGLE: u ) ) equals NUMBER: 24",
    "id": 3476,
    "declarations": "B: POINT; u: TRIANGLE; 24: NUMBER",
    "facts": "Distance(B, Incenter(u)) = 24"
},
{
    "assertion": "TangentPoint ( LINE: m, CIRCLE: M ) equals UpperFocus ( CONICSECTION: w )",
    "id": 3477,
    "declarations": "m: LINE; M: CIRCLE; w: CONICSECTION",
    "facts": "TangentPoint(m, M) = UpperFocus(w)"
},
{
    "assertion": "Diameter ( CIRCLE: F ) equals DotProduct ( VECTOR: Q, VECTOR: M )",
    "id": 3478,
    "declarations": "F: CIRCLE; Q: VECTOR; M: VECTOR",
    "facts": "Diameter(F) = DotProduct(Q, M)"
},
{
    "assertion": "Locus ( LowerFocus ( CONICSECTION: u ) ) equals CURVE: A",
    "id": 3479,
    "declarations": "u: CONICSECTION; A: CURVE",
    "facts": "Locus(LowerFocus(u)) = A"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: W ) equals LINESEGMENT: o",
    "id": 3480,
    "declarations": "W: ELLIPSE; o: LINESEGMENT",
    "facts": "ImaginaryAxis(W) = o"
},
{
    "assertion": "Asymptote ( HYPERBOLA: I ) equals LINE: w",
    "id": 3481,
    "declarations": "I: HYPERBOLA; w: LINE",
    "facts": "Asymptote(I) = w"
},
{
    "assertion": "Locus ( POINT: X ) equals CURVE: t",
    "id": 3482,
    "declarations": "X: POINT; t: CURVE",
    "facts": "Locus(X) = t"
},
{
    "assertion": "InterReciprocal ( NUMBER: -12 ) equals NUMBER: -95",
    "id": 3483,
    "declarations": "-12: NUMBER; -95: NUMBER",
    "facts": "InterReciprocal(-12) = -95"
},
{
    "assertion": "Abs ( MajorAxis ( ELLIPSE: V ) ) equals Area ( CONICSECTION: r )",
    "id": 3484,
    "declarations": "V: ELLIPSE; r: CONICSECTION",
    "facts": "Abs(MajorAxis(V)) = Area(r)"
},
{
    "assertion": "LocusEquation ( UpperFocus ( CONICSECTION: K ) ) equals EXPRESSION: y*space=*spacee^x",
    "id": 3485,
    "declarations": "K: CONICSECTION; y*space=*spacee^x: EXPRESSION",
    "facts": "LocusEquation(UpperFocus(K)) = y*space=*spacee^x"
},
{
    "assertion": "RealAxis ( ELLIPSE: c ) equals LINESEGMENT: B",
    "id": 3486,
    "declarations": "c: ELLIPSE; B: LINESEGMENT",
    "facts": "RealAxis(c) = B"
},
{
    "assertion": "Center ( CONICSECTION: Z ) equals LeftFocus ( CONICSECTION: L )",
    "id": 3487,
    "declarations": "Z: CONICSECTION; L: CONICSECTION",
    "facts": "Center(Z) = LeftFocus(L)"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: e ) ) equals Slope ( LINE: o )",
    "id": 3488,
    "declarations": "e: CONICSECTION; o: LINE",
    "facts": "XCoordinate(LeftFocus(e)) = Slope(o)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: o ) equals POINT: x",
    "id": 3489,
    "declarations": "o: CONICSECTION; x: POINT",
    "facts": "UpperFocus(o) = x"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: k, TRIANGLE: g ) equals BOOL: True",
    "id": 3490,
    "declarations": "k: CIRCLE; g: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(k, g) = True"
},
{
    "assertion": "InterReciprocal ( NUMBER: 43 ) equals Abs ( LINESEGMENT: i )",
    "id": 3491,
    "declarations": "43: NUMBER; i: LINESEGMENT",
    "facts": "InterReciprocal(43) = Abs(i)"
},
{
    "assertion": "Intercept ( LINE: E, AXIS: xAxis ) equals NUMBER: -5",
    "id": 3492,
    "declarations": "E: LINE; xAxis: AXIS; -5: NUMBER",
    "facts": "Intercept(E, xAxis) = -5"
},
{
    "assertion": "LowerFocus ( CONICSECTION: z ) equals POINT: A",
    "id": 3493,
    "declarations": "z: CONICSECTION; A: POINT",
    "facts": "LowerFocus(z) = A"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: s, CIRCLE: s ) equals BOOL: False",
    "id": 3494,
    "declarations": "s: LINESEGMENT; s: CIRCLE; False: BOOL",
    "facts": "IsDiameter(s, s) = False"
},
{
    "assertion": "ApplyUnit ( Intercept ( RightDirectrix ( CONICSECTION: z ), AXIS: xAxis ), DEGREESTR: degree )",
    "id": 3495,
    "declarations": "z: CONICSECTION; xAxis: AXIS; degree: DEGREESTR",
    "facts": "ApplyUnit(Intercept(RightDirectrix(z), xAxis), degree) = None"
},
{
    "assertion": "Perimeter ( CONICSECTION: X ) equals Perimeter ( CONICSECTION: D )",
    "id": 3496,
    "declarations": "X: CONICSECTION; D: CONICSECTION",
    "facts": "Perimeter(X) = Perimeter(D)"
},
{
    "assertion": "lg ( Distance ( POINT: Q, Orthocenter ( TRIANGLE: z ) ) ) equals NUMBER: -3",
    "id": 3497,
    "declarations": "Q: POINT; z: TRIANGLE; -3: NUMBER",
    "facts": "lg(Distance(Q, Orthocenter(z))) = -3"
},
{
    "assertion": "Area ( CONICSECTION: K ) equals Diameter ( CIRCLE: R )",
    "id": 3498,
    "declarations": "K: CONICSECTION; R: CIRCLE",
    "facts": "Area(K) = Diameter(R)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: g ) equals LINESEGMENT: G",
    "id": 3499,
    "declarations": "g: ELLIPSE; G: LINESEGMENT",
    "facts": "MinorAxis(g) = G"
},
{
    "assertion": "Center ( CONICSECTION: t ) equals UpperVertex ( CONICSECTION: q )",
    "id": 3500,
    "declarations": "t: CONICSECTION; q: CONICSECTION",
    "facts": "Center(t) = UpperVertex(q)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: t ) equals LINE: c",
    "id": 3501,
    "declarations": "t: CONICSECTION; c: LINE",
    "facts": "LeftDirectrix(t) = c"
},
{
    "assertion": "Diameter ( CIRCLE: I ) equals NUMBER: -48",
    "id": 3502,
    "declarations": "I: CIRCLE; -48: NUMBER",
    "facts": "Diameter(I) = -48"
},
{
    "assertion": "IsInTangent ( CIRCLE: c, CIRCLE: b ) equals BOOL: True",
    "id": 3503,
    "declarations": "c: CIRCLE; b: CIRCLE; True: BOOL",
    "facts": "IsInTangent(c, b) = True"
},
{
    "assertion": "InterReciprocal ( Slope ( RightDirectrix ( CONICSECTION: m ) ) ) equals sqrt ( YCoordinate ( RightVertex ( CONICSECTION: G ) ) )",
    "id": 3504,
    "declarations": "m: CONICSECTION; G: CONICSECTION",
    "facts": "InterReciprocal(Slope(RightDirectrix(m))) = sqrt(YCoordinate(RightVertex(G)))"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: P ) equals AXIS: yAxis",
    "id": 3505,
    "declarations": "P: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(P) = yAxis"
},
{
    "assertion": "Length ( MajorAxis ( ELLIPSE: A ) ) equals Min ( sqrt ( Quadrant ( POINT: g ) ) )",
    "id": 3506,
    "declarations": "A: ELLIPSE; g: POINT",
    "facts": "Length(MajorAxis(A)) = Min(sqrt(Quadrant(g)))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: A ) equals LINE: E",
    "id": 3507,
    "declarations": "A: CONICSECTION; E: LINE",
    "facts": "RightDirectrix(A) = E"
},
{
    "assertion": "Max ( NUMBER: -52 ) equals NUMBER: 88",
    "id": 3508,
    "declarations": "-52: NUMBER; 88: NUMBER",
    "facts": "Max(-52) = 88"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: b ) equals LINE: p",
    "id": 3509,
    "declarations": "b: LINESEGMENT; p: LINE",
    "facts": "OverlappingLine(b) = p"
},
{
    "assertion": "Distance ( MidPoint ( LINESEGMENT: I ), FootPoint ( LINE: n, LINE: m ) ) equals NUMBER: -32",
    "id": 3510,
    "declarations": "I: LINESEGMENT; n: LINE; m: LINE; -32: NUMBER",
    "facts": "Distance(MidPoint(I), FootPoint(n, m)) = -32"
},
{
    "assertion": "CircumCircle ( TRIANGLE: q ) equals CIRCLE: a",
    "id": 3511,
    "declarations": "q: TRIANGLE; a: CIRCLE",
    "facts": "CircumCircle(q) = a"
},
{
    "assertion": "TangentOnPoint ( MidPoint ( MinorAxis ( ELLIPSE: M ) ), CURVE: J ) equals LINE: Y",
    "id": 3512,
    "declarations": "M: ELLIPSE; J: CURVE; Y: LINE",
    "facts": "TangentOnPoint(MidPoint(MinorAxis(M)), J) = Y"
},
{
    "assertion": "XCoordinate ( Orthocenter ( TRIANGLE: O ) ) equals Perimeter ( CONICSECTION: H )",
    "id": 3513,
    "declarations": "O: TRIANGLE; H: CONICSECTION",
    "facts": "XCoordinate(Orthocenter(O)) = Perimeter(H)"
},
{
    "assertion": "RealAxis ( ELLIPSE: c ) equals LINESEGMENT: w",
    "id": 3514,
    "declarations": "c: ELLIPSE; w: LINESEGMENT",
    "facts": "RealAxis(c) = w"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: s, TRIANGLE: a ) equals BOOL: True",
    "id": 3515,
    "declarations": "s: CIRCLE; a: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(s, a) = True"
},
{
    "assertion": "Asymptote ( HYPERBOLA: g ) equals LINE: g",
    "id": 3516,
    "declarations": "g: HYPERBOLA; g: LINE",
    "facts": "Asymptote(g) = g"
},
{
    "assertion": "IsParallel ( LINE: L, LINE: V ) equals BOOL: False",
    "id": 3517,
    "declarations": "L: LINE; V: LINE; False: BOOL",
    "facts": "IsParallel(L, V) = False"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: i, CIRCLE: h ) equals BOOL: False",
    "id": 3518,
    "declarations": "i: LINESEGMENT; h: CIRCLE; False: BOOL",
    "facts": "IsDiameter(i, h) = False"
},
{
    "assertion": "Focus ( CONICSECTION: l ) equals POINT: Z",
    "id": 3519,
    "declarations": "l: CONICSECTION; Z: POINT",
    "facts": "Focus(l) = Z"
},
{
    "assertion": "Endpoint ( LineSegmentOf ( Orthocenter ( TRIANGLE: z ), Projection ( LowerVertex ( CONICSECTION: f ), LINE: D ) ) ) equals POINT: J",
    "id": 3520,
    "declarations": "z: TRIANGLE; f: CONICSECTION; D: LINE; J: POINT",
    "facts": "Endpoint(LineSegmentOf(Orthocenter(z), Projection(LowerVertex(f), D))) = J"
},
{
    "assertion": "Min ( NUMBER: -78 ) equals Radius ( CIRCLE: m )",
    "id": 3521,
    "declarations": "-78: NUMBER; m: CIRCLE",
    "facts": "Min(-78) = Radius(m)"
},
{
    "assertion": "LineOf ( MidPoint ( LINESEGMENT: T ), POINT: t ) equals LINE: M",
    "id": 3522,
    "declarations": "T: LINESEGMENT; t: POINT; M: LINE",
    "facts": "LineOf(MidPoint(T), t) = M"
},
{
    "assertion": "Diameter ( CIRCLE: w ) equals NumIntersection ( CURVE: O, CURVE: E )",
    "id": 3523,
    "declarations": "w: CIRCLE; O: CURVE; E: CURVE",
    "facts": "Diameter(w) = NumIntersection(O, E)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: X, CIRCLE: H ) equals BOOL: True",
    "id": 3524,
    "declarations": "X: CIRCLE; H: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(X, H) = True"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: M ) equals AXIS: yAxis",
    "id": 3525,
    "declarations": "M: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(M) = yAxis"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: c ) ) equals NUMBER: -24",
    "id": 3526,
    "declarations": "c: TRIANGLE; -24: NUMBER",
    "facts": "Radius(CircumCircle(c)) = -24"
},
{
    "assertion": "Orthocenter ( TRIANGLE: E ) equals UpperFocus ( CONICSECTION: U )",
    "id": 3527,
    "declarations": "E: TRIANGLE; U: CONICSECTION",
    "facts": "Orthocenter(E) = UpperFocus(U)"
},
{
    "assertion": "PointOnCurve ( UpperFocus ( CONICSECTION: v ), LeftPart ( HYPERBOLA: j ) ) equals BOOL: False",
    "id": 3528,
    "declarations": "v: CONICSECTION; j: HYPERBOLA; False: BOOL",
    "facts": "PointOnCurve(UpperFocus(v), LeftPart(j)) = False"
},
{
    "assertion": "LeftPart ( HYPERBOLA: H ) equals CURVE: P",
    "id": 3529,
    "declarations": "H: HYPERBOLA; P: CURVE",
    "facts": "LeftPart(H) = P"
},
{
    "assertion": "Circumcenter ( TRIANGLE: L ) equals Orthocenter ( TRIANGLE: Z )",
    "id": 3530,
    "declarations": "L: TRIANGLE; Z: TRIANGLE",
    "facts": "Circumcenter(L) = Orthocenter(Z)"
},
{
    "assertion": "RightFocus ( CONICSECTION: p ) equals POINT: F",
    "id": 3531,
    "declarations": "p: CONICSECTION; F: POINT",
    "facts": "RightFocus(p) = F"
},
{
    "assertion": "LineOf ( POINT: b, LeftFocus ( CONICSECTION: A ) ) equals LINE: M",
    "id": 3532,
    "declarations": "b: POINT; A: CONICSECTION; M: LINE",
    "facts": "LineOf(b, LeftFocus(A)) = M"
},
{
    "assertion": "Projection ( POINT: I, LINE: B ) equals LeftFocus ( CONICSECTION: N )",
    "id": 3533,
    "declarations": "I: POINT; B: LINE; N: CONICSECTION",
    "facts": "Projection(I, B) = LeftFocus(N)"
},
{
    "assertion": "Expression ( CURVE: V ) equals EXPRESSION: x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12",
    "id": 3534,
    "declarations": "V: CURVE; x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12: EXPRESSION",
    "facts": "Expression(V) = x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: l, TRIANGLE: D ) equals BOOL: False",
    "id": 3535,
    "declarations": "l: CIRCLE; D: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(l, D) = False"
},
{
    "assertion": "IsOutTangent ( CIRCLE: V, CIRCLE: L ) equals BOOL: True",
    "id": 3536,
    "declarations": "V: CIRCLE; L: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(V, L) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: j ) equals LINE: b",
    "id": 3537,
    "declarations": "j: CONICSECTION; b: LINE",
    "facts": "RightDirectrix(j) = b"
},
{
    "assertion": "Negation ( IsInTangent ( CIRCLE: G, CIRCLE: v ) equals BOOL: True ) equals BOOL: False",
    "id": 3538,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Center ( CONICSECTION: T ) equals FootPoint ( LINE: i, LINE: H )",
    "id": 3539,
    "declarations": "T: CONICSECTION; i: LINE; H: LINE",
    "facts": "Center(T) = FootPoint(i, H)"
},
{
    "assertion": "InterReciprocal ( NUMBER: -77 ) equals YCoordinate ( POINT: j )",
    "id": 3540,
    "declarations": "-77: NUMBER; j: POINT",
    "facts": "InterReciprocal(-77) = YCoordinate(j)"
},
{
    "assertion": "Directrix ( CONICSECTION: J ) equals LINE: z",
    "id": 3541,
    "declarations": "J: CONICSECTION; z: LINE",
    "facts": "Directrix(J) = z"
},
{
    "assertion": "Slope ( LINE: A ) equals NUMBER: 6",
    "id": 3542,
    "declarations": "A: LINE; 6: NUMBER",
    "facts": "Slope(A) = 6"
},
{
    "assertion": "VectorOf ( POINT: i, LowerFocus ( CONICSECTION: u ) ) equals VECTOR: l",
    "id": 3543,
    "declarations": "i: POINT; u: CONICSECTION; l: VECTOR",
    "facts": "VectorOf(i, LowerFocus(u)) = l"
},
{
    "assertion": "LineOf ( POINT: K, POINT: O ) equals OverlappingLine ( LINESEGMENT: f )",
    "id": 3544,
    "declarations": "K: POINT; O: POINT; f: LINESEGMENT",
    "facts": "LineOf(K, O) = OverlappingLine(f)"
},
{
    "assertion": "LocusEquation ( LeftVertex ( CONICSECTION: c ) ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 3545,
    "declarations": "c: CONICSECTION; y*space=*spacesin(x): EXPRESSION",
    "facts": "LocusEquation(LeftVertex(c)) = y*space=*spacesin(x)"
},
{
    "assertion": "LocusEquation ( UpperVertex ( CONICSECTION: a ) ) equals EXPRESSION: x^2*space+*spacey*space=*space4",
    "id": 3546,
    "declarations": "a: CONICSECTION; x^2*space+*spacey*space=*space4: EXPRESSION",
    "facts": "LocusEquation(UpperVertex(a)) = x^2*space+*spacey*space=*space4"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: j ) equals LINE: i",
    "id": 3547,
    "declarations": "j: CONICSECTION; i: LINE",
    "facts": "LeftDirectrix(j) = i"
},
{
    "assertion": "Vertex ( CONICSECTION: U ) equals MidPoint ( LINESEGMENT: s )",
    "id": 3548,
    "declarations": "U: CONICSECTION; s: LINESEGMENT",
    "facts": "Vertex(U) = MidPoint(s)"
},
{
    "assertion": "LineOf ( UpperFocus ( CONICSECTION: w ), UpperFocus ( CONICSECTION: O ) ) equals LINE: y",
    "id": 3549,
    "declarations": "w: CONICSECTION; O: CONICSECTION; y: LINE",
    "facts": "LineOf(UpperFocus(w), UpperFocus(O)) = y"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: K ) equals LINE: v",
    "id": 3550,
    "declarations": "K: LINESEGMENT; v: LINE",
    "facts": "OverlappingLine(K) = v"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: U, CONICSECTION: n ) equals BOOL: False",
    "id": 3551,
    "declarations": "U: LINESEGMENT; n: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(U, n) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: H ) equals POINT: T",
    "id": 3552,
    "declarations": "H: CONICSECTION; T: POINT",
    "facts": "LowerFocus(H) = T"
},
{
    "assertion": "Diameter ( CIRCLE: V ) equals Abs ( MinorAxis ( ELLIPSE: H ) )",
    "id": 3553,
    "declarations": "V: CIRCLE; H: ELLIPSE",
    "facts": "Diameter(V) = Abs(MinorAxis(H))"
},
{
    "assertion": "Vertex ( CONICSECTION: R ) equals Orthocenter ( TRIANGLE: i )",
    "id": 3554,
    "declarations": "R: CONICSECTION; i: TRIANGLE",
    "facts": "Vertex(R) = Orthocenter(i)"
},
{
    "assertion": "Focus ( CONICSECTION: H ) equals LowerVertex ( CONICSECTION: h )",
    "id": 3555,
    "declarations": "H: CONICSECTION; h: CONICSECTION",
    "facts": "Focus(H) = LowerVertex(h)"
},
{
    "assertion": "Coordinate ( POINT: v ) equals ( Abs ( LINESEGMENT: p ), Distance ( POINT: j, POINT: j ) )",
    "id": 3556,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Inclination ( LINE: S ) equals Perimeter ( CONICSECTION: H )",
    "id": 3557,
    "declarations": "S: LINE; H: CONICSECTION",
    "facts": "Inclination(S) = Perimeter(H)"
},
{
    "assertion": "InterceptChord ( LINE: x, CONICSECTION: V ) equals LINESEGMENT: q",
    "id": 3558,
    "declarations": "x: LINE; V: CONICSECTION; q: LINESEGMENT",
    "facts": "InterceptChord(x, V) = q"
},
{
    "assertion": "RightVertex ( CONICSECTION: y ) equals POINT: K",
    "id": 3559,
    "declarations": "y: CONICSECTION; K: POINT",
    "facts": "RightVertex(y) = K"
},
{
    "assertion": "Slope ( LINE: V ) equals NUMBER: 91",
    "id": 3560,
    "declarations": "V: LINE; 91: NUMBER",
    "facts": "Slope(V) = 91"
},
{
    "assertion": "Min ( NUMBER: 79 ) equals InterReciprocal ( NUMBER: -50 )",
    "id": 3561,
    "declarations": "79: NUMBER; -50: NUMBER",
    "facts": "Min(79) = InterReciprocal(-50)"
},
{
    "assertion": "NumIntersection ( CURVE: J, CURVE: V ) equals NumIntersection ( CURVE: s, CURVE: u )",
    "id": 3562,
    "declarations": "J: CURVE; V: CURVE; s: CURVE; u: CURVE",
    "facts": "NumIntersection(J, V) = NumIntersection(s, u)"
},
{
    "assertion": "NumIntersection ( CURVE: v, Locus ( POINT: f ) ) equals NUMBER: -13",
    "id": 3563,
    "declarations": "v: CURVE; f: POINT; -13: NUMBER",
    "facts": "NumIntersection(v, Locus(f)) = -13"
},
{
    "assertion": "RightPart ( HYPERBOLA: n ) equals LeftPart ( HYPERBOLA: X )",
    "id": 3564,
    "declarations": "n: HYPERBOLA; X: HYPERBOLA",
    "facts": "RightPart(n) = LeftPart(X)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: E ) equals CURVE: j",
    "id": 3565,
    "declarations": "E: HYPERBOLA; j: CURVE",
    "facts": "LeftPart(E) = j"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: l ), TRIANGLE: M ) equals BOOL: True",
    "id": 3566,
    "declarations": "l: TRIANGLE; M: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(l), M) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: B ) equals LINESEGMENT: D",
    "id": 3567,
    "declarations": "B: ELLIPSE; D: LINESEGMENT",
    "facts": "MinorAxis(B) = D"
},
{
    "assertion": "Endpoint ( LINESEGMENT: j ) equals LowerVertex ( CONICSECTION: O )",
    "id": 3568,
    "declarations": "j: LINESEGMENT; O: CONICSECTION",
    "facts": "Endpoint(j) = LowerVertex(O)"
},
{
    "assertion": "PerpendicularBisector ( MinorAxis ( ELLIPSE: o ) ) equals OverlappingLine ( LINESEGMENT: h )",
    "id": 3569,
    "declarations": "o: ELLIPSE; h: LINESEGMENT",
    "facts": "PerpendicularBisector(MinorAxis(o)) = OverlappingLine(h)"
},
{
    "assertion": "FootPoint ( LINE: G, RightDirectrix ( CONICSECTION: l ) ) equals LowerFocus ( CONICSECTION: O )",
    "id": 3570,
    "declarations": "G: LINE; l: CONICSECTION; O: CONICSECTION",
    "facts": "FootPoint(G, RightDirectrix(l)) = LowerFocus(O)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: A ) equals InterceptChord ( LINE: Y, CONICSECTION: U )",
    "id": 3571,
    "declarations": "A: ELLIPSE; Y: LINE; U: CONICSECTION",
    "facts": "ImaginaryAxis(A) = InterceptChord(Y, U)"
},
{
    "assertion": "Area ( CONICSECTION: j ) equals Abs ( LINESEGMENT: X )",
    "id": 3572,
    "declarations": "j: CONICSECTION; X: LINESEGMENT",
    "facts": "Area(j) = Abs(X)"
},
{
    "assertion": "Center ( CONICSECTION: x ) equals Orthocenter ( TRIANGLE: a )",
    "id": 3573,
    "declarations": "x: CONICSECTION; a: TRIANGLE",
    "facts": "Center(x) = Orthocenter(a)"
},
{
    "assertion": "NumIntersection ( CURVE: r, CURVE: y ) equals Slope ( LINE: e )",
    "id": 3574,
    "declarations": "r: CURVE; y: CURVE; e: LINE",
    "facts": "NumIntersection(r, y) = Slope(e)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: R ) equals MinorAxis ( ELLIPSE: V )",
    "id": 3575,
    "declarations": "R: ELLIPSE; V: ELLIPSE",
    "facts": "ImaginaryAxis(R) = MinorAxis(V)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: V ) equals CIRCLE: a",
    "id": 3576,
    "declarations": "V: TRIANGLE; a: CIRCLE",
    "facts": "CircumCircle(V) = a"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: E ) equals RealAxis ( ELLIPSE: d )",
    "id": 3577,
    "declarations": "E: ELLIPSE; d: ELLIPSE",
    "facts": "ImaginaryAxis(E) = RealAxis(d)"
},
{
    "assertion": "Area ( CONICSECTION: a ) equals NUMBER: -16",
    "id": 3578,
    "declarations": "a: CONICSECTION; -16: NUMBER",
    "facts": "Area(a) = -16"
},
{
    "assertion": "LineOf ( POINT: F, Center ( CONICSECTION: B ) ) equals LINE: K",
    "id": 3579,
    "declarations": "F: POINT; B: CONICSECTION; K: LINE",
    "facts": "LineOf(F, Center(B)) = K"
},
{
    "assertion": "Inclination ( LINE: C ) equals NUMBER: -99",
    "id": 3580,
    "declarations": "C: LINE; -99: NUMBER",
    "facts": "Inclination(C) = -99"
},
{
    "assertion": "LeftFocus ( CONICSECTION: A ) equals Orthocenter ( TRIANGLE: W )",
    "id": 3581,
    "declarations": "A: CONICSECTION; W: TRIANGLE",
    "facts": "LeftFocus(A) = Orthocenter(W)"
},
{
    "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: p ) ) equals sqrt ( NUMBER: -18 )",
    "id": 3582,
    "declarations": "p: CONICSECTION; -18: NUMBER",
    "facts": "XCoordinate(UpperVertex(p)) = sqrt(-18)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: d ) equals POINT: D",
    "id": 3583,
    "declarations": "d: CONICSECTION; D: POINT",
    "facts": "LeftVertex(d) = D"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: C ) equals LINE: J",
    "id": 3584,
    "declarations": "C: CONICSECTION; J: LINE",
    "facts": "LeftDirectrix(C) = J"
},
{
    "assertion": "InterReciprocal ( XCoordinate ( Incenter ( TRIANGLE: H ) ) ) equals Abs ( LineSegmentOf ( UpperVertex ( CONICSECTION: c ), MidPoint ( LINESEGMENT: y ) ) )",
    "id": 3585,
    "declarations": "H: TRIANGLE; c: CONICSECTION; y: LINESEGMENT",
    "facts": "InterReciprocal(XCoordinate(Incenter(H))) = Abs(LineSegmentOf(UpperVertex(c), MidPoint(y)))"
},
{
    "assertion": "IsParallel ( OverlappingLine ( RealAxis ( ELLIPSE: e ) ), LINE: e ) equals BOOL: True",
    "id": 3586,
    "declarations": "e: ELLIPSE; e: LINE; True: BOOL",
    "facts": "IsParallel(OverlappingLine(RealAxis(e)), e) = True"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: C ) equals LINESEGMENT: T",
    "id": 3587,
    "declarations": "C: ELLIPSE; T: LINESEGMENT",
    "facts": "ImaginaryAxis(C) = T"
},
{
    "assertion": "LeftVertex ( CONICSECTION: k ) equals UpperVertex ( CONICSECTION: I )",
    "id": 3588,
    "declarations": "k: CONICSECTION; I: CONICSECTION",
    "facts": "LeftVertex(k) = UpperVertex(I)"
},
{
    "assertion": "FootPoint ( RightDirectrix ( CONICSECTION: A ), LINE: v ) equals POINT: f",
    "id": 3589,
    "declarations": "A: CONICSECTION; v: LINE; f: POINT",
    "facts": "FootPoint(RightDirectrix(A), v) = f"
},
{
    "assertion": "Intercept ( LINE: C, AXIS: xAxis ) equals Distance ( Incenter ( TRIANGLE: Z ), LowerVertex ( CONICSECTION: n ) )",
    "id": 3590,
    "declarations": "C: LINE; xAxis: AXIS; Z: TRIANGLE; n: CONICSECTION",
    "facts": "Intercept(C, xAxis) = Distance(Incenter(Z), LowerVertex(n))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: f ) equals LINESEGMENT: P",
    "id": 3591,
    "declarations": "f: ELLIPSE; P: LINESEGMENT",
    "facts": "MajorAxis(f) = P"
},
{
    "assertion": "Slope ( LINE: p ) equals YCoordinate ( POINT: l )",
    "id": 3592,
    "declarations": "p: LINE; l: POINT",
    "facts": "Slope(p) = YCoordinate(l)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: J ) equals LeftFocus ( CONICSECTION: l )",
    "id": 3593,
    "declarations": "J: CONICSECTION; l: CONICSECTION",
    "facts": "UpperVertex(J) = LeftFocus(l)"
},
{
    "assertion": "PerpendicularBisector ( InterceptChord ( LINE: f, CONICSECTION: s ) ) equals LINE: K",
    "id": 3594,
    "declarations": "f: LINE; s: CONICSECTION; K: LINE",
    "facts": "PerpendicularBisector(InterceptChord(f, s)) = K"
},
{
    "assertion": "Eccentricity ( CONICSECTION: f ) equals Min ( NUMBER: -78 )",
    "id": 3595,
    "declarations": "f: CONICSECTION; -78: NUMBER",
    "facts": "Eccentricity(f) = Min(-78)"
},
{
    "assertion": "RightFocus ( CONICSECTION: i ) equals POINT: y",
    "id": 3596,
    "declarations": "i: CONICSECTION; y: POINT",
    "facts": "RightFocus(i) = y"
},
{
    "assertion": "Asymptote ( HYPERBOLA: o ) equals PerpendicularBisector ( RealAxis ( ELLIPSE: W ) )",
    "id": 3597,
    "declarations": "o: HYPERBOLA; W: ELLIPSE",
    "facts": "Asymptote(o) = PerpendicularBisector(RealAxis(W))"
},
{
    "assertion": "Between ( Circumcenter ( TRIANGLE: a ), POINT: d, POINT: v ) equals BOOL: False",
    "id": 3598,
    "declarations": "a: TRIANGLE; d: POINT; v: POINT; False: BOOL",
    "facts": "Between(Circumcenter(a), d, v) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: G ) equals POINT: K",
    "id": 3599,
    "declarations": "G: CONICSECTION; K: POINT",
    "facts": "LowerVertex(G) = K"
},
{
    "assertion": "AngleOf ( Incenter ( TRIANGLE: j ), POINT: l, UpperVertex ( CONICSECTION: T ) ) equals AngleOf ( POINT: t, UpperVertex ( CONICSECTION: B ), POINT: P )",
    "id": 3600,
    "declarations": "j: TRIANGLE; l: POINT; T: CONICSECTION; t: POINT; B: CONICSECTION; P: POINT",
    "facts": "AngleOf(Incenter(j), l, UpperVertex(T)) = AngleOf(t, UpperVertex(B), P)"
},
{
    "assertion": "Max ( Quadrant ( Orthocenter ( TRIANGLE: D ) ) ) equals Distance ( POINT: l, MidPoint ( LINESEGMENT: P ) )",
    "id": 3601,
    "declarations": "D: TRIANGLE; l: POINT; P: LINESEGMENT",
    "facts": "Max(Quadrant(Orthocenter(D))) = Distance(l, MidPoint(P))"
},
{
    "assertion": "IsTangent ( LeftDirectrix ( CONICSECTION: I ), CONICSECTION: Z ) equals BOOL: True",
    "id": 3602,
    "declarations": "I: CONICSECTION; Z: CONICSECTION; True: BOOL",
    "facts": "IsTangent(LeftDirectrix(I), Z) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: V ) equals POINT: i",
    "id": 3603,
    "declarations": "V: TRIANGLE; i: POINT",
    "facts": "Orthocenter(V) = i"
},
{
    "assertion": "DotProduct ( VECTOR: h, VECTOR: S ) equals Eccentricity ( CONICSECTION: U )",
    "id": 3604,
    "declarations": "h: VECTOR; S: VECTOR; U: CONICSECTION",
    "facts": "DotProduct(h, S) = Eccentricity(U)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: Y ) equals AXIS: xAxis",
    "id": 3605,
    "declarations": "Y: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(Y) = xAxis"
},
{
    "assertion": "Quadrant ( MidPoint ( LINESEGMENT: x ) ) equals NUMBER: -63",
    "id": 3606,
    "declarations": "x: LINESEGMENT; -63: NUMBER",
    "facts": "Quadrant(MidPoint(x)) = -63"
},
{
    "assertion": "Asymptote ( HYPERBOLA: d ) equals LINE: r",
    "id": 3607,
    "declarations": "d: HYPERBOLA; r: LINE",
    "facts": "Asymptote(d) = r"
},
{
    "assertion": "ApplyUnit ( Inclination ( RightDirectrix ( CONICSECTION: k ) ), DEGREESTR: degree )",
    "id": 3608,
    "declarations": "k: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Inclination(RightDirectrix(k)), degree) = None"
},
{
    "assertion": "Length ( LINESEGMENT: u ) equals NUMBER: -12",
    "id": 3609,
    "declarations": "u: LINESEGMENT; -12: NUMBER",
    "facts": "Length(u) = -12"
},
{
    "assertion": "IsInTangent ( CircumCircle ( TRIANGLE: Q ), CIRCLE: S ) equals BOOL: False",
    "id": 3610,
    "declarations": "Q: TRIANGLE; S: CIRCLE; False: BOOL",
    "facts": "IsInTangent(CircumCircle(Q), S) = False"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: L, TRIANGLE: I ) equals BOOL: False",
    "id": 3611,
    "declarations": "L: CIRCLE; I: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(L, I) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: Y ) equals POINT: v",
    "id": 3612,
    "declarations": "Y: TRIANGLE; v: POINT",
    "facts": "Incenter(Y) = v"
},
{
    "assertion": "Perimeter ( CONICSECTION: F ) equals Perimeter ( CONICSECTION: k )",
    "id": 3613,
    "declarations": "F: CONICSECTION; k: CONICSECTION",
    "facts": "Perimeter(F) = Perimeter(k)"
},
{
    "assertion": "Distance ( POINT: u, POINT: c ) equals NUMBER: 89",
    "id": 3614,
    "declarations": "u: POINT; c: POINT; 89: NUMBER",
    "facts": "Distance(u, c) = 89"
},
{
    "assertion": "lg ( NUMBER: 94 ) equals NUMBER: -23",
    "id": 3615,
    "declarations": "94: NUMBER; -23: NUMBER",
    "facts": "lg(94) = -23"
},
{
    "assertion": "TangentOfPoint ( Orthocenter ( TRIANGLE: C ), LeftPart ( HYPERBOLA: w ) ) equals LINE: g",
    "id": 3616,
    "declarations": "C: TRIANGLE; w: HYPERBOLA; g: LINE",
    "facts": "TangentOfPoint(Orthocenter(C), LeftPart(w)) = g"
},
{
    "assertion": "RightVertex ( CONICSECTION: w ) equals POINT: x",
    "id": 3617,
    "declarations": "w: CONICSECTION; x: POINT",
    "facts": "RightVertex(w) = x"
},
{
    "assertion": "TangentOfPoint ( LowerVertex ( CONICSECTION: O ), CURVE: w ) equals LINE: y",
    "id": 3618,
    "declarations": "O: CONICSECTION; w: CURVE; y: LINE",
    "facts": "TangentOfPoint(LowerVertex(O), w) = y"
},
{
    "assertion": "UpperFocus ( CONICSECTION: Y ) equals POINT: s",
    "id": 3619,
    "declarations": "Y: CONICSECTION; s: POINT",
    "facts": "UpperFocus(Y) = s"
},
{
    "assertion": "LeftFocus ( CONICSECTION: h ) equals POINT: u",
    "id": 3620,
    "declarations": "h: CONICSECTION; u: POINT",
    "facts": "LeftFocus(h) = u"
},
{
    "assertion": "Area ( CONICSECTION: m ) equals Area ( CONICSECTION: y )",
    "id": 3621,
    "declarations": "m: CONICSECTION; y: CONICSECTION",
    "facts": "Area(m) = Area(y)"
},
{
    "assertion": "Max ( YCoordinate ( Center ( CONICSECTION: w ) ) ) equals Quadrant ( POINT: F )",
    "id": 3622,
    "declarations": "w: CONICSECTION; F: POINT",
    "facts": "Max(YCoordinate(Center(w))) = Quadrant(F)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: r ) equals sqrt ( NumIntersection ( CURVE: x, LeftPart ( HYPERBOLA: c ) ) )",
    "id": 3623,
    "declarations": "r: CONICSECTION; x: CURVE; c: HYPERBOLA",
    "facts": "HalfFocalLength(r) = sqrt(NumIntersection(x, LeftPart(c)))"
},
{
    "assertion": "PointOnCurve ( POINT: g, CURVE: M ) equals BOOL: True",
    "id": 3624,
    "declarations": "g: POINT; M: CURVE; True: BOOL",
    "facts": "PointOnCurve(g, M) = True"
},
{
    "assertion": "LocusEquation ( POINT: Q ) equals EXPRESSION: y*space=*spacex^2*space-*space5*x*space+*space6",
    "id": 3625,
    "declarations": "Q: POINT; y*space=*spacex^2*space-*space5*x*space+*space6: EXPRESSION",
    "facts": "LocusEquation(Q) = y*space=*spacex^2*space-*space5*x*space+*space6"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: o ) ) equals POINT: J",
    "id": 3626,
    "declarations": "o: ELLIPSE; J: POINT",
    "facts": "Endpoint(MajorAxis(o)) = J"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: e, TRIANGLE: p ) equals BOOL: True",
    "id": 3627,
    "declarations": "e: CIRCLE; p: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(e, p) = True"
},
{
    "assertion": "sqrt ( Distance ( LowerFocus ( CONICSECTION: V ), FootPoint ( LINE: t, LINE: i ) ) ) equals InterReciprocal ( FocalLength ( CONICSECTION: g ) )",
    "id": 3628,
    "declarations": "V: CONICSECTION; t: LINE; i: LINE; g: CONICSECTION",
    "facts": "sqrt(Distance(LowerFocus(V), FootPoint(t, i))) = InterReciprocal(FocalLength(g))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: Z ) equals POINT: u",
    "id": 3629,
    "declarations": "Z: CONICSECTION; u: POINT",
    "facts": "LowerFocus(Z) = u"
},
{
    "assertion": "RightVertex ( CONICSECTION: f ) equals LowerVertex ( CONICSECTION: k )",
    "id": 3630,
    "declarations": "f: CONICSECTION; k: CONICSECTION",
    "facts": "RightVertex(f) = LowerVertex(k)"
},
{
    "assertion": "RightPart ( HYPERBOLA: Z ) equals CURVE: H",
    "id": 3631,
    "declarations": "Z: HYPERBOLA; H: CURVE",
    "facts": "RightPart(Z) = H"
},
{
    "assertion": "Coordinate ( POINT: q ) equals ( InterReciprocal ( sqrt ( Inclination ( LINE: m ) ) ), NUMBER: -26 )",
    "id": 3632,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "InterReciprocal ( NUMBER: -47 ) equals Radius ( CIRCLE: c )",
    "id": 3633,
    "declarations": "-47: NUMBER; c: CIRCLE",
    "facts": "InterReciprocal(-47) = Radius(c)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: d ) equals RealAxis ( ELLIPSE: i )",
    "id": 3634,
    "declarations": "d: ELLIPSE; i: ELLIPSE",
    "facts": "MajorAxis(d) = RealAxis(i)"
},
{
    "assertion": "Diameter ( CIRCLE: s ) equals NUMBER: 74",
    "id": 3635,
    "declarations": "s: CIRCLE; 74: NUMBER",
    "facts": "Diameter(s) = 74"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: n ) equals LINESEGMENT: c",
    "id": 3636,
    "declarations": "n: ELLIPSE; c: LINESEGMENT",
    "facts": "ImaginaryAxis(n) = c"
},
{
    "assertion": "RealAxis ( ELLIPSE: a ) equals LINESEGMENT: I",
    "id": 3637,
    "declarations": "a: ELLIPSE; I: LINESEGMENT",
    "facts": "RealAxis(a) = I"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: L ) equals lg ( InterReciprocal ( NUMBER: 95 ) )",
    "id": 3638,
    "declarations": "L: CONICSECTION; 95: NUMBER",
    "facts": "HalfFocalLength(L) = lg(InterReciprocal(95))"
},
{
    "assertion": "FocalLength ( CONICSECTION: m ) equals Eccentricity ( CONICSECTION: Z )",
    "id": 3639,
    "declarations": "m: CONICSECTION; Z: CONICSECTION",
    "facts": "FocalLength(m) = Eccentricity(Z)"
},
{
    "assertion": "LocusEquation ( Orthocenter ( TRIANGLE: f ) ) equals LocusEquation ( LeftFocus ( CONICSECTION: e ) )",
    "id": 3640,
    "declarations": "f: TRIANGLE; e: CONICSECTION",
    "facts": "LocusEquation(Orthocenter(f)) = LocusEquation(LeftFocus(e))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: R ) equals Incenter ( TRIANGLE: N )",
    "id": 3641,
    "declarations": "R: TRIANGLE; N: TRIANGLE",
    "facts": "Circumcenter(R) = Incenter(N)"
},
{
    "assertion": "Area ( CONICSECTION: S ) equals NUMBER: -73",
    "id": 3642,
    "declarations": "S: CONICSECTION; -73: NUMBER",
    "facts": "Area(S) = -73"
},
{
    "assertion": "IsParallel ( PerpendicularBisector ( RealAxis ( ELLIPSE: u ) ), LeftDirectrix ( CONICSECTION: x ) ) equals BOOL: True",
    "id": 3643,
    "declarations": "u: ELLIPSE; x: CONICSECTION; True: BOOL",
    "facts": "IsParallel(PerpendicularBisector(RealAxis(u)), LeftDirectrix(x)) = True"
},
{
    "assertion": "InterReciprocal ( NUMBER: 28 ) equals DotProduct ( VECTOR: i, VECTOR: M )",
    "id": 3644,
    "declarations": "28: NUMBER; i: VECTOR; M: VECTOR",
    "facts": "InterReciprocal(28) = DotProduct(i, M)"
},
{
    "assertion": "LocusEquation ( LowerFocus ( CONICSECTION: e ) ) equals EXPRESSION: x^2/4*space+*spacey^2/9*space=*space1",
    "id": 3645,
    "declarations": "e: CONICSECTION; x^2/4*space+*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "LocusEquation(LowerFocus(e)) = x^2/4*space+*spacey^2/9*space=*space1"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: K ) equals AXIS: xAxis",
    "id": 3646,
    "declarations": "K: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(K) = xAxis"
},
{
    "assertion": "Eccentricity ( CONICSECTION: i ) equals InterReciprocal ( lg ( NUMBER: 77 ) )",
    "id": 3647,
    "declarations": "i: CONICSECTION; 77: NUMBER",
    "facts": "Eccentricity(i) = InterReciprocal(lg(77))"
},
{
    "assertion": "Locus ( POINT: q ) equals CURVE: n",
    "id": 3648,
    "declarations": "q: POINT; n: CURVE",
    "facts": "Locus(q) = n"
},
{
    "assertion": "sqrt ( NUMBER: -12 ) equals Slope ( LINE: U )",
    "id": 3649,
    "declarations": "-12: NUMBER; U: LINE",
    "facts": "sqrt(-12) = Slope(U)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: u, CIRCLE: C ) equals BOOL: True",
    "id": 3650,
    "declarations": "u: LINESEGMENT; C: CIRCLE; True: BOOL",
    "facts": "IsDiameter(u, C) = True"
},
{
    "assertion": "XCoordinate ( UpperFocus ( CONICSECTION: B ) ) equals Area ( CONICSECTION: S )",
    "id": 3651,
    "declarations": "B: CONICSECTION; S: CONICSECTION",
    "facts": "XCoordinate(UpperFocus(B)) = Area(S)"
},
{
    "assertion": "IsInTangent ( CIRCLE: K, CIRCLE: K ) equals BOOL: False",
    "id": 3652,
    "declarations": "K: CIRCLE; K: CIRCLE; False: BOOL",
    "facts": "IsInTangent(K, K) = False"
},
{
    "assertion": "IsIntersect ( CURVE: g, CURVE: r ) equals BOOL: False",
    "id": 3653,
    "declarations": "g: CURVE; r: CURVE; False: BOOL",
    "facts": "IsIntersect(g, r) = False"
},
{
    "assertion": "Max ( XCoordinate ( POINT: n ) ) equals Quadrant ( POINT: m )",
    "id": 3654,
    "declarations": "n: POINT; m: POINT",
    "facts": "Max(XCoordinate(n)) = Quadrant(m)"
},
{
    "assertion": "Quadrant ( UpperFocus ( CONICSECTION: f ) ) equals NUMBER: -53",
    "id": 3655,
    "declarations": "f: CONICSECTION; -53: NUMBER",
    "facts": "Quadrant(UpperFocus(f)) = -53"
},
{
    "assertion": "RightVertex ( CONICSECTION: H ) equals Center ( CONICSECTION: L )",
    "id": 3656,
    "declarations": "H: CONICSECTION; L: CONICSECTION",
    "facts": "RightVertex(H) = Center(L)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: I ) equals POINT: Q",
    "id": 3657,
    "declarations": "I: CONICSECTION; Q: POINT",
    "facts": "LeftFocus(I) = Q"
},
{
    "assertion": "LineSegmentOf ( POINT: X, Circumcenter ( TRIANGLE: J ) ) equals LINESEGMENT: T",
    "id": 3658,
    "declarations": "X: POINT; J: TRIANGLE; T: LINESEGMENT",
    "facts": "LineSegmentOf(X, Circumcenter(J)) = T"
},
{
    "assertion": "IsTangent ( LINE: y, CONICSECTION: k ) equals BOOL: True",
    "id": 3659,
    "declarations": "y: LINE; k: CONICSECTION; True: BOOL",
    "facts": "IsTangent(y, k) = True"
},
{
    "assertion": "Coordinate ( FootPoint ( LINE: y, LINE: W ) ) equals ( NUMBER: -61, Diameter ( CircumCircle ( TRIANGLE: t ) ) )",
    "id": 3660,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftFocus ( CONICSECTION: I ) equals RightFocus ( CONICSECTION: O )",
    "id": 3661,
    "declarations": "I: CONICSECTION; O: CONICSECTION",
    "facts": "LeftFocus(I) = RightFocus(O)"
},
{
    "assertion": "Diameter ( CIRCLE: O ) equals NUMBER: 98",
    "id": 3662,
    "declarations": "O: CIRCLE; 98: NUMBER",
    "facts": "Diameter(O) = 98"
},
{
    "assertion": "IsOutTangent ( CIRCLE: Q, CIRCLE: z ) equals BOOL: False",
    "id": 3663,
    "declarations": "Q: CIRCLE; z: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(Q, z) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: i ) equals POINT: o",
    "id": 3664,
    "declarations": "i: CONICSECTION; o: POINT",
    "facts": "LowerFocus(i) = o"
},
{
    "assertion": "Coordinate ( LeftVertex ( CONICSECTION: V ) ) equals ( lg ( NUMBER: 67 ), NUMBER: 83 )",
    "id": 3665,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Center ( CONICSECTION: H ) equals Center ( CONICSECTION: k )",
    "id": 3666,
    "declarations": "H: CONICSECTION; k: CONICSECTION",
    "facts": "Center(H) = Center(k)"
},
{
    "assertion": "LineOf ( POINT: g, UpperFocus ( CONICSECTION: g ) ) equals LINE: u",
    "id": 3667,
    "declarations": "g: POINT; g: CONICSECTION; u: LINE",
    "facts": "LineOf(g, UpperFocus(g)) = u"
},
{
    "assertion": "TangentOnPoint ( POINT: V, CURVE: O ) equals LINE: e",
    "id": 3668,
    "declarations": "V: POINT; O: CURVE; e: LINE",
    "facts": "TangentOnPoint(V, O) = e"
},
{
    "assertion": "Slope ( LINE: V ) equals NUMBER: -57",
    "id": 3669,
    "declarations": "V: LINE; -57: NUMBER",
    "facts": "Slope(V) = -57"
},
{
    "assertion": "IsParallel ( LINE: Q, LINE: j ) equals BOOL: False",
    "id": 3670,
    "declarations": "Q: LINE; j: LINE; False: BOOL",
    "facts": "IsParallel(Q, j) = False"
},
{
    "assertion": "IsPerpendicular ( LINE: F, LINE: c ) equals BOOL: False",
    "id": 3671,
    "declarations": "F: LINE; c: LINE; False: BOOL",
    "facts": "IsPerpendicular(F, c) = False"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: i ) equals LINE: k",
    "id": 3672,
    "declarations": "i: CONICSECTION; k: LINE",
    "facts": "RightDirectrix(i) = k"
},
{
    "assertion": "Center ( CONICSECTION: r ) equals POINT: X",
    "id": 3673,
    "declarations": "r: CONICSECTION; X: POINT",
    "facts": "Center(r) = X"
},
{
    "assertion": "Abs ( LINESEGMENT: e ) equals NUMBER: 50",
    "id": 3674,
    "declarations": "e: LINESEGMENT; 50: NUMBER",
    "facts": "Abs(e) = 50"
},
{
    "assertion": "LocusEquation ( Incenter ( TRIANGLE: m ) ) equals Expression ( CURVE: H )",
    "id": 3675,
    "declarations": "m: TRIANGLE; H: CURVE",
    "facts": "LocusEquation(Incenter(m)) = Expression(H)"
},
{
    "assertion": "PointOnCurve ( POINT: d, CURVE: F ) equals BOOL: True",
    "id": 3676,
    "declarations": "d: POINT; F: CURVE; True: BOOL",
    "facts": "PointOnCurve(d, F) = True"
},
{
    "assertion": "IsTangent ( OverlappingLine ( LineSegmentOf ( POINT: D, POINT: c ) ), CONICSECTION: K ) equals BOOL: True",
    "id": 3677,
    "declarations": "D: POINT; c: POINT; K: CONICSECTION; True: BOOL",
    "facts": "IsTangent(OverlappingLine(LineSegmentOf(D, c)), K) = True"
},
{
    "assertion": "LeftPart ( HYPERBOLA: y ) equals CURVE: J",
    "id": 3678,
    "declarations": "y: HYPERBOLA; J: CURVE",
    "facts": "LeftPart(y) = J"
},
{
    "assertion": "UpperVertex ( CONICSECTION: e ) equals Projection ( POINT: c, RightDirectrix ( CONICSECTION: F ) )",
    "id": 3679,
    "declarations": "e: CONICSECTION; c: POINT; F: CONICSECTION",
    "facts": "UpperVertex(e) = Projection(c, RightDirectrix(F))"
},
{
    "assertion": "LocusEquation ( RightVertex ( CONICSECTION: d ) ) equals EXPRESSION: y*space=*spacetan(x)",
    "id": 3680,
    "declarations": "d: CONICSECTION; y*space=*spacetan(x): EXPRESSION",
    "facts": "LocusEquation(RightVertex(d)) = y*space=*spacetan(x)"
},
{
    "assertion": "RealAxis ( ELLIPSE: t ) equals LINESEGMENT: Z",
    "id": 3681,
    "declarations": "t: ELLIPSE; Z: LINESEGMENT",
    "facts": "RealAxis(t) = Z"
},
{
    "assertion": "Expression ( CURVE: w ) equals EXPRESSION: y*space=*spacex^2*space-*space4*x*space+*space4",
    "id": 3682,
    "declarations": "w: CURVE; y*space=*spacex^2*space-*space4*x*space+*space4: EXPRESSION",
    "facts": "Expression(w) = y*space=*spacex^2*space-*space4*x*space+*space4"
},
{
    "assertion": "sqrt ( Eccentricity ( CONICSECTION: d ) ) equals XCoordinate ( Circumcenter ( TRIANGLE: H ) )",
    "id": 3683,
    "declarations": "d: CONICSECTION; H: TRIANGLE",
    "facts": "sqrt(Eccentricity(d)) = XCoordinate(Circumcenter(H))"
},
{
    "assertion": "Center ( CONICSECTION: D ) equals RightFocus ( CONICSECTION: o )",
    "id": 3684,
    "declarations": "D: CONICSECTION; o: CONICSECTION",
    "facts": "Center(D) = RightFocus(o)"
},
{
    "assertion": "Max ( FocalLength ( CONICSECTION: P ) ) equals NUMBER: -83",
    "id": 3685,
    "declarations": "P: CONICSECTION; -83: NUMBER",
    "facts": "Max(FocalLength(P)) = -83"
},
{
    "assertion": "ApplyUnit ( Inclination ( LINE: v ), DEGREESTR: degree )",
    "id": 3686,
    "declarations": "v: LINE; degree: DEGREESTR",
    "facts": "ApplyUnit(Inclination(v), degree) = None"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: Q, CIRCLE: A ) equals BOOL: True",
    "id": 3687,
    "declarations": "Q: LINESEGMENT; A: CIRCLE; True: BOOL",
    "facts": "IsDiameter(Q, A) = True"
},
{
    "assertion": "CircumCircle ( TRIANGLE: O ) equals CIRCLE: W",
    "id": 3688,
    "declarations": "O: TRIANGLE; W: CIRCLE",
    "facts": "CircumCircle(O) = W"
},
{
    "assertion": "LeftFocus ( CONICSECTION: U ) equals Orthocenter ( TRIANGLE: e )",
    "id": 3689,
    "declarations": "U: CONICSECTION; e: TRIANGLE",
    "facts": "LeftFocus(U) = Orthocenter(e)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: o ) equals LeftDirectrix ( CONICSECTION: w )",
    "id": 3690,
    "declarations": "o: LINESEGMENT; w: CONICSECTION",
    "facts": "OverlappingLine(o) = LeftDirectrix(w)"
},
{
    "assertion": "Intersection ( Locus ( POINT: e ), Locus ( Orthocenter ( TRIANGLE: K ) ) ) equals POINT: w",
    "id": 3691,
    "declarations": "e: POINT; K: TRIANGLE; w: POINT",
    "facts": "Intersection(Locus(e), Locus(Orthocenter(K))) = w"
},
{
    "assertion": "LeftVertex ( CONICSECTION: A ) equals POINT: g",
    "id": 3692,
    "declarations": "A: CONICSECTION; g: POINT",
    "facts": "LeftVertex(A) = g"
},
{
    "assertion": "LeftFocus ( CONICSECTION: s ) equals MidPoint ( LINESEGMENT: S )",
    "id": 3693,
    "declarations": "s: CONICSECTION; S: LINESEGMENT",
    "facts": "LeftFocus(s) = MidPoint(S)"
},
{
    "assertion": "RightVertex ( CONICSECTION: x ) equals RightFocus ( CONICSECTION: P )",
    "id": 3694,
    "declarations": "x: CONICSECTION; P: CONICSECTION",
    "facts": "RightVertex(x) = RightFocus(P)"
},
{
    "assertion": "IsTangent ( PerpendicularBisector ( InterceptChord ( LINE: o, CONICSECTION: y ) ), CONICSECTION: M ) equals BOOL: False",
    "id": 3695,
    "declarations": "o: LINE; y: CONICSECTION; M: CONICSECTION; False: BOOL",
    "facts": "IsTangent(PerpendicularBisector(InterceptChord(o, y)), M) = False"
},
{
    "assertion": "LocusEquation ( POINT: M ) equals EXPRESSION: x*space+*spacey^2*space=*space5",
    "id": 3696,
    "declarations": "M: POINT; x*space+*spacey^2*space=*space5: EXPRESSION",
    "facts": "LocusEquation(M) = x*space+*spacey^2*space=*space5"
},
{
    "assertion": "IsTangent ( TangentOnPoint ( POINT: E, CURVE: q ), CONICSECTION: I ) equals BOOL: False",
    "id": 3697,
    "declarations": "E: POINT; q: CURVE; I: CONICSECTION; False: BOOL",
    "facts": "IsTangent(TangentOnPoint(E, q), I) = False"
},
{
    "assertion": "lg ( HalfFocalLength ( CONICSECTION: f ) ) equals Quadrant ( LowerVertex ( CONICSECTION: u ) )",
    "id": 3698,
    "declarations": "f: CONICSECTION; u: CONICSECTION",
    "facts": "lg(HalfFocalLength(f)) = Quadrant(LowerVertex(u))"
},
{
    "assertion": "LineOf ( POINT: J, RightVertex ( CONICSECTION: U ) ) equals TangentOfPoint ( POINT: p, CURVE: T )",
    "id": 3699,
    "declarations": "J: POINT; U: CONICSECTION; p: POINT; T: CURVE",
    "facts": "LineOf(J, RightVertex(U)) = TangentOfPoint(p, T)"
},
{
    "assertion": "Max ( Length ( LineSegmentOf ( RightVertex ( CONICSECTION: a ), POINT: P ) ) ) equals Abs ( RealAxis ( ELLIPSE: W ) )",
    "id": 3700,
    "declarations": "a: CONICSECTION; P: POINT; W: ELLIPSE",
    "facts": "Max(Length(LineSegmentOf(RightVertex(a), P))) = Abs(RealAxis(W))"
},
{
    "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: C ) ) equals Radius ( CIRCLE: L )",
    "id": 3701,
    "declarations": "C: CONICSECTION; L: CIRCLE",
    "facts": "YCoordinate(UpperVertex(C)) = Radius(L)"
},
{
    "assertion": "Negation ( And ( FocalLength ( CONICSECTION: u ) equals NUMBER: 23, RightDirectrix ( CONICSECTION: C ) equals LineOf ( MidPoint ( LINESEGMENT: H ), LowerVertex ( CONICSECTION: C ) ) ) equals BOOL: False ) equals BOOL: False",
    "id": 3702,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Locus ( RightVertex ( CONICSECTION: A ) ) equals CURVE: s",
    "id": 3703,
    "declarations": "A: CONICSECTION; s: CURVE",
    "facts": "Locus(RightVertex(A)) = s"
},
{
    "assertion": "sqrt ( Abs ( ImaginaryAxis ( ELLIPSE: j ) ) ) equals NUMBER: 42",
    "id": 3704,
    "declarations": "j: ELLIPSE; 42: NUMBER",
    "facts": "sqrt(Abs(ImaginaryAxis(j))) = 42"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: z ) equals LINE: s",
    "id": 3705,
    "declarations": "z: LINESEGMENT; s: LINE",
    "facts": "PerpendicularBisector(z) = s"
},
{
    "assertion": "Circumcenter ( TRIANGLE: E ) equals POINT: Q",
    "id": 3706,
    "declarations": "E: TRIANGLE; Q: POINT",
    "facts": "Circumcenter(E) = Q"
},
{
    "assertion": "IsIntersect ( CURVE: Y, CURVE: Q ) equals BOOL: False",
    "id": 3707,
    "declarations": "Y: CURVE; Q: CURVE; False: BOOL",
    "facts": "IsIntersect(Y, Q) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: V ) equals LINESEGMENT: a",
    "id": 3708,
    "declarations": "V: ELLIPSE; a: LINESEGMENT",
    "facts": "MinorAxis(V) = a"
},
{
    "assertion": "Diameter ( CIRCLE: C ) equals NUMBER: -25",
    "id": 3709,
    "declarations": "C: CIRCLE; -25: NUMBER",
    "facts": "Diameter(C) = -25"
},
{
    "assertion": "Abs ( ImaginaryAxis ( ELLIPSE: y ) ) equals Eccentricity ( CONICSECTION: m )",
    "id": 3710,
    "declarations": "y: ELLIPSE; m: CONICSECTION",
    "facts": "Abs(ImaginaryAxis(y)) = Eccentricity(m)"
},
{
    "assertion": "RealAxis ( ELLIPSE: y ) equals MajorAxis ( ELLIPSE: i )",
    "id": 3711,
    "declarations": "y: ELLIPSE; i: ELLIPSE",
    "facts": "RealAxis(y) = MajorAxis(i)"
},
{
    "assertion": "RealAxis ( ELLIPSE: l ) equals LINESEGMENT: A",
    "id": 3712,
    "declarations": "l: ELLIPSE; A: LINESEGMENT",
    "facts": "RealAxis(l) = A"
},
{
    "assertion": "Intersection ( Locus ( POINT: y ), CURVE: g ) equals LeftFocus ( CONICSECTION: i )",
    "id": 3713,
    "declarations": "y: POINT; g: CURVE; i: CONICSECTION",
    "facts": "Intersection(Locus(y), g) = LeftFocus(i)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: C ) equals LeftDirectrix ( CONICSECTION: h )",
    "id": 3714,
    "declarations": "C: CONICSECTION; h: CONICSECTION",
    "facts": "LeftDirectrix(C) = LeftDirectrix(h)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: m, CIRCLE: g ) equals BOOL: True",
    "id": 3715,
    "declarations": "m: LINESEGMENT; g: CIRCLE; True: BOOL",
    "facts": "IsDiameter(m, g) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: v ) equals Min ( NUMBER: 67 )",
    "id": 3716,
    "declarations": "v: CONICSECTION; 67: NUMBER",
    "facts": "HalfFocalLength(v) = Min(67)"
},
{
    "assertion": "IsPerpendicular ( LINE: b, LINE: I ) equals BOOL: True",
    "id": 3717,
    "declarations": "b: LINE; I: LINE; True: BOOL",
    "facts": "IsPerpendicular(b, I) = True"
},
{
    "assertion": "Length ( LINESEGMENT: Y ) equals NUMBER: -37",
    "id": 3718,
    "declarations": "Y: LINESEGMENT; -37: NUMBER",
    "facts": "Length(Y) = -37"
},
{
    "assertion": "LowerVertex ( CONICSECTION: y ) equals POINT: e",
    "id": 3719,
    "declarations": "y: CONICSECTION; e: POINT",
    "facts": "LowerVertex(y) = e"
},
{
    "assertion": "Distance ( POINT: T, Center ( CONICSECTION: t ) ) equals NUMBER: 37",
    "id": 3720,
    "declarations": "T: POINT; t: CONICSECTION; 37: NUMBER",
    "facts": "Distance(T, Center(t)) = 37"
},
{
    "assertion": "RealAxis ( ELLIPSE: H ) equals LINESEGMENT: M",
    "id": 3721,
    "declarations": "H: ELLIPSE; M: LINESEGMENT",
    "facts": "RealAxis(H) = M"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: Y, TRIANGLE: f ) equals BOOL: False",
    "id": 3722,
    "declarations": "Y: CIRCLE; f: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(Y, f) = False"
},
{
    "assertion": "Max ( HalfFocalLength ( CONICSECTION: S ) ) equals NUMBER: 56",
    "id": 3723,
    "declarations": "S: CONICSECTION; 56: NUMBER",
    "facts": "Max(HalfFocalLength(S)) = 56"
},
{
    "assertion": "Radius ( CIRCLE: S ) equals Inclination ( LINE: r )",
    "id": 3724,
    "declarations": "S: CIRCLE; r: LINE",
    "facts": "Radius(S) = Inclination(r)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: Z ) equals Projection ( POINT: b, LINE: F )",
    "id": 3725,
    "declarations": "Z: CONICSECTION; b: POINT; F: LINE",
    "facts": "UpperFocus(Z) = Projection(b, F)"
},
{
    "assertion": "LineSegmentOf ( POINT: S, FootPoint ( PerpendicularBisector ( LINESEGMENT: m ), LINE: p ) ) equals RealAxis ( ELLIPSE: t )",
    "id": 3726,
    "declarations": "S: POINT; m: LINESEGMENT; p: LINE; t: ELLIPSE",
    "facts": "LineSegmentOf(S, FootPoint(PerpendicularBisector(m), p)) = RealAxis(t)"
},
{
    "assertion": "Area ( CONICSECTION: N ) equals Slope ( LINE: S )",
    "id": 3727,
    "declarations": "N: CONICSECTION; S: LINE",
    "facts": "Area(N) = Slope(S)"
},
{
    "assertion": "PointOnCurve ( POINT: l, CURVE: Q ) equals BOOL: False",
    "id": 3728,
    "declarations": "l: POINT; Q: CURVE; False: BOOL",
    "facts": "PointOnCurve(l, Q) = False"
},
{
    "assertion": "RealAxis ( ELLIPSE: d ) equals LINESEGMENT: Y",
    "id": 3729,
    "declarations": "d: ELLIPSE; Y: LINESEGMENT",
    "facts": "RealAxis(d) = Y"
},
{
    "assertion": "TangentOfPoint ( POINT: D, CURVE: R ) equals LINE: o",
    "id": 3730,
    "declarations": "D: POINT; R: CURVE; o: LINE",
    "facts": "TangentOfPoint(D, R) = o"
},
{
    "assertion": "Asymptote ( HYPERBOLA: G ) equals LINE: t",
    "id": 3731,
    "declarations": "G: HYPERBOLA; t: LINE",
    "facts": "Asymptote(G) = t"
},
{
    "assertion": "Locus ( Circumcenter ( TRIANGLE: J ) ) equals CURVE: P",
    "id": 3732,
    "declarations": "J: TRIANGLE; P: CURVE",
    "facts": "Locus(Circumcenter(J)) = P"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: b ) equals LINE: S",
    "id": 3733,
    "declarations": "b: LINESEGMENT; S: LINE",
    "facts": "PerpendicularBisector(b) = S"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: k ) equals OverlappingLine ( LINESEGMENT: D )",
    "id": 3734,
    "declarations": "k: CONICSECTION; D: LINESEGMENT",
    "facts": "LeftDirectrix(k) = OverlappingLine(D)"
},
{
    "assertion": "PerpendicularBisector ( RealAxis ( ELLIPSE: Q ) ) equals LINE: B",
    "id": 3735,
    "declarations": "Q: ELLIPSE; B: LINE",
    "facts": "PerpendicularBisector(RealAxis(Q)) = B"
},
{
    "assertion": "LeftVertex ( CONICSECTION: H ) equals POINT: V",
    "id": 3736,
    "declarations": "H: CONICSECTION; V: POINT",
    "facts": "LeftVertex(H) = V"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Q ) equals FootPoint ( OverlappingLine ( LINESEGMENT: I ), TangentOfPoint ( POINT: G, CURVE: Y ) )",
    "id": 3737,
    "declarations": "Q: CONICSECTION; I: LINESEGMENT; G: POINT; Y: CURVE",
    "facts": "UpperVertex(Q) = FootPoint(OverlappingLine(I), TangentOfPoint(G, Y))"
},
{
    "assertion": "Projection ( Circumcenter ( TRIANGLE: c ), LINE: M ) equals Incenter ( TRIANGLE: z )",
    "id": 3738,
    "declarations": "c: TRIANGLE; M: LINE; z: TRIANGLE",
    "facts": "Projection(Circumcenter(c), M) = Incenter(z)"
},
{
    "assertion": "Coordinate ( POINT: F ) equals ( NUMBER: -31, Radius ( CIRCLE: U ) )",
    "id": 3739,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "YCoordinate ( UpperFocus ( CONICSECTION: n ) ) equals lg ( Inclination ( LeftDirectrix ( CONICSECTION: i ) ) )",
    "id": 3740,
    "declarations": "n: CONICSECTION; i: CONICSECTION",
    "facts": "YCoordinate(UpperFocus(n)) = lg(Inclination(LeftDirectrix(i)))"
},
{
    "assertion": "ApplyUnit ( XCoordinate ( UpperFocus ( CONICSECTION: b ) ), DEGREESTR: degree )",
    "id": 3741,
    "declarations": "b: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(XCoordinate(UpperFocus(b)), degree) = None"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: g ) equals LINESEGMENT: V",
    "id": 3742,
    "declarations": "g: ELLIPSE; V: LINESEGMENT",
    "facts": "ImaginaryAxis(g) = V"
},
{
    "assertion": "IsInTangent ( CIRCLE: S, CIRCLE: E ) equals BOOL: False",
    "id": 3743,
    "declarations": "S: CIRCLE; E: CIRCLE; False: BOOL",
    "facts": "IsInTangent(S, E) = False"
},
{
    "assertion": "Intercept ( LINE: o, AXIS: xAxis ) equals Eccentricity ( CONICSECTION: J )",
    "id": 3744,
    "declarations": "o: LINE; xAxis: AXIS; J: CONICSECTION",
    "facts": "Intercept(o, xAxis) = Eccentricity(J)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: e ) equals LINESEGMENT: P",
    "id": 3745,
    "declarations": "e: ELLIPSE; P: LINESEGMENT",
    "facts": "MajorAxis(e) = P"
},
{
    "assertion": "CircumCircle ( TRIANGLE: M ) equals CircumCircle ( TriangleOf ( RightFocus ( CONICSECTION: T ), LowerVertex ( CONICSECTION: E ), POINT: e ) )",
    "id": 3746,
    "declarations": "M: TRIANGLE; T: CONICSECTION; E: CONICSECTION; e: POINT",
    "facts": "CircumCircle(M) = CircumCircle(TriangleOf(RightFocus(T), LowerVertex(E), e))"
},
{
    "assertion": "IsPerpendicular ( LINE: l, LINE: a ) equals BOOL: True",
    "id": 3747,
    "declarations": "l: LINE; a: LINE; True: BOOL",
    "facts": "IsPerpendicular(l, a) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: b ) equals HalfFocalLength ( CONICSECTION: t )",
    "id": 3748,
    "declarations": "b: CONICSECTION; t: CONICSECTION",
    "facts": "HalfFocalLength(b) = HalfFocalLength(t)"
},
{
    "assertion": "Max ( XCoordinate ( LeftVertex ( CONICSECTION: H ) ) ) equals NUMBER: 78",
    "id": 3749,
    "declarations": "H: CONICSECTION; 78: NUMBER",
    "facts": "Max(XCoordinate(LeftVertex(H))) = 78"
},
{
    "assertion": "RightPart ( HYPERBOLA: G ) equals CURVE: A",
    "id": 3750,
    "declarations": "G: HYPERBOLA; A: CURVE",
    "facts": "RightPart(G) = A"
},
{
    "assertion": "XCoordinate ( POINT: O ) equals NUMBER: -85",
    "id": 3751,
    "declarations": "O: POINT; -85: NUMBER",
    "facts": "XCoordinate(O) = -85"
},
{
    "assertion": "Circumcenter ( TRIANGLE: c ) equals POINT: o",
    "id": 3752,
    "declarations": "c: TRIANGLE; o: POINT",
    "facts": "Circumcenter(c) = o"
},
{
    "assertion": "Vertex ( CONICSECTION: w ) equals Center ( CONICSECTION: s )",
    "id": 3753,
    "declarations": "w: CONICSECTION; s: CONICSECTION",
    "facts": "Vertex(w) = Center(s)"
},
{
    "assertion": "InterReciprocal ( Length ( LINESEGMENT: q ) ) equals NUMBER: -60",
    "id": 3754,
    "declarations": "q: LINESEGMENT; -60: NUMBER",
    "facts": "InterReciprocal(Length(q)) = -60"
},
{
    "assertion": "IsIntersect ( LeftPart ( HYPERBOLA: U ), CURVE: z ) equals BOOL: True",
    "id": 3755,
    "declarations": "U: HYPERBOLA; z: CURVE; True: BOOL",
    "facts": "IsIntersect(LeftPart(U), z) = True"
},
{
    "assertion": "ApplyUnit ( NUMBER: 85, DEGREESTR: degree )",
    "id": 3756,
    "declarations": "85: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(85, degree) = None"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: z ) equals LINE: B",
    "id": 3757,
    "declarations": "z: CONICSECTION; B: LINE",
    "facts": "LeftDirectrix(z) = B"
},
{
    "assertion": "XCoordinate ( Center ( CONICSECTION: q ) ) equals NUMBER: -7",
    "id": 3758,
    "declarations": "q: CONICSECTION; -7: NUMBER",
    "facts": "XCoordinate(Center(q)) = -7"
},
{
    "assertion": "RightVertex ( CONICSECTION: Q ) equals POINT: g",
    "id": 3759,
    "declarations": "Q: CONICSECTION; g: POINT",
    "facts": "RightVertex(Q) = g"
},
{
    "assertion": "sqrt ( NUMBER: 86 ) equals FocalLength ( CONICSECTION: e )",
    "id": 3760,
    "declarations": "86: NUMBER; e: CONICSECTION",
    "facts": "sqrt(86) = FocalLength(e)"
},
{
    "assertion": "TangentPoint ( LeftDirectrix ( CONICSECTION: a ), CircumCircle ( TRIANGLE: j ) ) equals LeftFocus ( CONICSECTION: a )",
    "id": 3761,
    "declarations": "a: CONICSECTION; j: TRIANGLE; a: CONICSECTION",
    "facts": "TangentPoint(LeftDirectrix(a), CircumCircle(j)) = LeftFocus(a)"
},
{
    "assertion": "Perimeter ( CONICSECTION: q ) equals NUMBER: 32",
    "id": 3762,
    "declarations": "q: CONICSECTION; 32: NUMBER",
    "facts": "Perimeter(q) = 32"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: u ) equals LINE: P",
    "id": 3763,
    "declarations": "u: CONICSECTION; P: LINE",
    "facts": "RightDirectrix(u) = P"
},
{
    "assertion": "LeftPart ( HYPERBOLA: R ) equals CURVE: O",
    "id": 3764,
    "declarations": "R: HYPERBOLA; O: CURVE",
    "facts": "LeftPart(R) = O"
},
{
    "assertion": "Endpoint ( LINESEGMENT: Y ) equals POINT: t",
    "id": 3765,
    "declarations": "Y: LINESEGMENT; t: POINT",
    "facts": "Endpoint(Y) = t"
},
{
    "assertion": "TangentPoint ( LINE: k, CIRCLE: i ) equals Center ( CONICSECTION: U )",
    "id": 3766,
    "declarations": "k: LINE; i: CIRCLE; U: CONICSECTION",
    "facts": "TangentPoint(k, i) = Center(U)"
},
{
    "assertion": "InterReciprocal ( NUMBER: 13 ) equals YCoordinate ( Orthocenter ( TRIANGLE: R ) )",
    "id": 3767,
    "declarations": "13: NUMBER; R: TRIANGLE",
    "facts": "InterReciprocal(13) = YCoordinate(Orthocenter(R))"
},
{
    "assertion": "IsPerpendicular ( OverlappingLine ( InterceptChord ( LINE: L, CONICSECTION: C ) ), LINE: v ) equals BOOL: True",
    "id": 3768,
    "declarations": "L: LINE; C: CONICSECTION; v: LINE; True: BOOL",
    "facts": "IsPerpendicular(OverlappingLine(InterceptChord(L, C)), v) = True"
},
{
    "assertion": "IsParallel ( LINE: P, RightDirectrix ( CONICSECTION: q ) ) equals BOOL: True",
    "id": 3769,
    "declarations": "P: LINE; q: CONICSECTION; True: BOOL",
    "facts": "IsParallel(P, RightDirectrix(q)) = True"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: k ) ) equals LINE: C",
    "id": 3770,
    "declarations": "k: ELLIPSE; C: LINE",
    "facts": "OverlappingLine(MajorAxis(k)) = C"
},
{
    "assertion": "Circumcenter ( TRIANGLE: E ) equals LowerVertex ( CONICSECTION: P )",
    "id": 3771,
    "declarations": "E: TRIANGLE; P: CONICSECTION",
    "facts": "Circumcenter(E) = LowerVertex(P)"
},
{
    "assertion": "Abs ( LINESEGMENT: b ) equals Slope ( LINE: W )",
    "id": 3772,
    "declarations": "b: LINESEGMENT; W: LINE",
    "facts": "Abs(b) = Slope(W)"
},
{
    "assertion": "Locus ( Orthocenter ( TRIANGLE: m ) ) equals CURVE: d",
    "id": 3773,
    "declarations": "m: TRIANGLE; d: CURVE",
    "facts": "Locus(Orthocenter(m)) = d"
},
{
    "assertion": "Diameter ( CIRCLE: v ) equals lg ( sqrt ( sqrt ( sqrt ( Intercept ( LINE: D, AXIS: yAxis ) ) ) ) )",
    "id": 3774,
    "declarations": "v: CIRCLE; D: LINE; yAxis: AXIS",
    "facts": "Diameter(v) = lg(sqrt(sqrt(sqrt(Intercept(D, yAxis)))))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: u ) equals CIRCLE: b",
    "id": 3775,
    "declarations": "u: TRIANGLE; b: CIRCLE",
    "facts": "CircumCircle(u) = b"
},
{
    "assertion": "XCoordinate ( LeftVertex ( CONICSECTION: g ) ) equals InterReciprocal ( NUMBER: 83 )",
    "id": 3776,
    "declarations": "g: CONICSECTION; 83: NUMBER",
    "facts": "XCoordinate(LeftVertex(g)) = InterReciprocal(83)"
},
{
    "assertion": "IsPerpendicular ( LINE: P, LINE: R ) equals BOOL: True",
    "id": 3777,
    "declarations": "P: LINE; R: LINE; True: BOOL",
    "facts": "IsPerpendicular(P, R) = True"
},
{
    "assertion": "Intercept ( TangentOfPoint ( POINT: C, CURVE: L ), AXIS: xAxis ) equals NUMBER: 18",
    "id": 3778,
    "declarations": "C: POINT; L: CURVE; xAxis: AXIS; 18: NUMBER",
    "facts": "Intercept(TangentOfPoint(C, L), xAxis) = 18"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: F ) equals LINE: l",
    "id": 3779,
    "declarations": "F: LINESEGMENT; l: LINE",
    "facts": "OverlappingLine(F) = l"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: s, CIRCLE: G ) equals BOOL: True",
    "id": 3780,
    "declarations": "s: LINESEGMENT; G: CIRCLE; True: BOOL",
    "facts": "IsDiameter(s, G) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: h ) equals LINE: W",
    "id": 3781,
    "declarations": "h: CONICSECTION; W: LINE",
    "facts": "RightDirectrix(h) = W"
},
{
    "assertion": "Coordinate ( Incenter ( TriangleOf ( Projection ( LeftVertex ( CONICSECTION: B ), RightDirectrix ( CONICSECTION: s ) ), POINT: h, LowerVertex ( CONICSECTION: P ) ) ) ) equals ( Min ( Perimeter ( CONICSECTION: Z ) ), XCoordinate ( POINT: i ) )",
    "id": 3782,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "AngleOf ( POINT: h, RightVertex ( CONICSECTION: E ), POINT: N ) equals AngleOf ( POINT: a, UpperVertex ( CONICSECTION: s ), LowerVertex ( CONICSECTION: O ) )",
    "id": 3783,
    "declarations": "h: POINT; E: CONICSECTION; N: POINT; a: POINT; s: CONICSECTION; O: CONICSECTION",
    "facts": "AngleOf(h, RightVertex(E), N) = AngleOf(a, UpperVertex(s), LowerVertex(O))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: c ) equals POINT: c",
    "id": 3784,
    "declarations": "c: TRIANGLE; c: POINT",
    "facts": "Orthocenter(c) = c"
},
{
    "assertion": "Perimeter ( CONICSECTION: Y ) equals NUMBER: -33",
    "id": 3785,
    "declarations": "Y: CONICSECTION; -33: NUMBER",
    "facts": "Perimeter(Y) = -33"
},
{
    "assertion": "Locus ( RightFocus ( CONICSECTION: q ) ) equals CURVE: d",
    "id": 3786,
    "declarations": "q: CONICSECTION; d: CURVE",
    "facts": "Locus(RightFocus(q)) = d"
},
{
    "assertion": "LowerFocus ( CONICSECTION: V ) equals POINT: C",
    "id": 3787,
    "declarations": "V: CONICSECTION; C: POINT",
    "facts": "LowerFocus(V) = C"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: v ) equals NUMBER: -93",
    "id": 3788,
    "declarations": "v: CONICSECTION; -93: NUMBER",
    "facts": "HalfFocalLength(v) = -93"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: B ) equals LINE: R",
    "id": 3789,
    "declarations": "B: LINESEGMENT; R: LINE",
    "facts": "PerpendicularBisector(B) = R"
},
{
    "assertion": "IsIntersect ( CURVE: S, CURVE: h ) equals BOOL: True",
    "id": 3790,
    "declarations": "S: CURVE; h: CURVE; True: BOOL",
    "facts": "IsIntersect(S, h) = True"
},
{
    "assertion": "UpperVertex ( CONICSECTION: I ) equals MidPoint ( LineSegmentOf ( POINT: K, POINT: Y ) )",
    "id": 3791,
    "declarations": "I: CONICSECTION; K: POINT; Y: POINT",
    "facts": "UpperVertex(I) = MidPoint(LineSegmentOf(K, Y))"
},
{
    "assertion": "InterReciprocal ( NUMBER: 45 ) equals Area ( CONICSECTION: B )",
    "id": 3792,
    "declarations": "45: NUMBER; B: CONICSECTION",
    "facts": "InterReciprocal(45) = Area(B)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: J, CircumCircle ( TRIANGLE: z ) ) equals BOOL: True",
    "id": 3793,
    "declarations": "J: LINESEGMENT; z: TRIANGLE; True: BOOL",
    "facts": "IsDiameter(J, CircumCircle(z)) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: S ) equals POINT: L",
    "id": 3794,
    "declarations": "S: TRIANGLE; L: POINT",
    "facts": "Orthocenter(S) = L"
},
{
    "assertion": "MidPoint ( LINESEGMENT: Z ) equals POINT: u",
    "id": 3795,
    "declarations": "Z: LINESEGMENT; u: POINT",
    "facts": "MidPoint(Z) = u"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: l ) equals AXIS: yAxis",
    "id": 3796,
    "declarations": "l: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(l) = yAxis"
},
{
    "assertion": "Max ( NUMBER: 40 ) equals Area ( CONICSECTION: G )",
    "id": 3797,
    "declarations": "40: NUMBER; G: CONICSECTION",
    "facts": "Max(40) = Area(G)"
},
{
    "assertion": "Vertex ( CONICSECTION: w ) equals POINT: m",
    "id": 3798,
    "declarations": "w: CONICSECTION; m: POINT",
    "facts": "Vertex(w) = m"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: k ) ) equals LINE: J",
    "id": 3799,
    "declarations": "k: ELLIPSE; J: LINE",
    "facts": "OverlappingLine(MajorAxis(k)) = J"
},
{
    "assertion": "RightFocus ( CONICSECTION: D ) equals LeftFocus ( CONICSECTION: l )",
    "id": 3800,
    "declarations": "D: CONICSECTION; l: CONICSECTION",
    "facts": "RightFocus(D) = LeftFocus(l)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: Z, TRIANGLE: L ) equals BOOL: False",
    "id": 3801,
    "declarations": "Z: CIRCLE; L: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(Z, L) = False"
},
{
    "assertion": "LineSegmentOf ( RightFocus ( CONICSECTION: v ), POINT: b ) equals MajorAxis ( ELLIPSE: p )",
    "id": 3802,
    "declarations": "v: CONICSECTION; b: POINT; p: ELLIPSE",
    "facts": "LineSegmentOf(RightFocus(v), b) = MajorAxis(p)"
},
{
    "assertion": "LocusEquation ( POINT: E ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 3803,
    "declarations": "E: POINT; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "LocusEquation(E) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "Center ( CONICSECTION: Q ) equals POINT: f",
    "id": 3804,
    "declarations": "Q: CONICSECTION; f: POINT",
    "facts": "Center(Q) = f"
},
{
    "assertion": "Circumcenter ( TRIANGLE: K ) equals FootPoint ( PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: R ) ), LineOf ( UpperVertex ( CONICSECTION: Z ), LeftVertex ( CONICSECTION: E ) ) )",
    "id": 3805,
    "declarations": "K: TRIANGLE; R: ELLIPSE; Z: CONICSECTION; E: CONICSECTION",
    "facts": "Circumcenter(K) = FootPoint(PerpendicularBisector(ImaginaryAxis(R)), LineOf(UpperVertex(Z), LeftVertex(E)))"
},
{
    "assertion": "Area ( CONICSECTION: g ) equals NumIntersection ( Locus ( Projection ( Circumcenter ( TRIANGLE: G ), LINE: A ) ), CURVE: G )",
    "id": 3806,
    "declarations": "g: CONICSECTION; G: TRIANGLE; A: LINE; G: CURVE",
    "facts": "Area(g) = NumIntersection(Locus(Projection(Circumcenter(G), A)), G)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: b ) equals LINE: a",
    "id": 3807,
    "declarations": "b: HYPERBOLA; a: LINE",
    "facts": "Asymptote(b) = a"
},
{
    "assertion": "IsInTangent ( CircumCircle ( TRIANGLE: P ), CircumCircle ( TRIANGLE: B ) ) equals BOOL: False",
    "id": 3808,
    "declarations": "P: TRIANGLE; B: TRIANGLE; False: BOOL",
    "facts": "IsInTangent(CircumCircle(P), CircumCircle(B)) = False"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: w ) equals LINE: Z",
    "id": 3809,
    "declarations": "w: CONICSECTION; Z: LINE",
    "facts": "RightDirectrix(w) = Z"
},
{
    "assertion": "VectorOf ( POINT: w, POINT: X ) equals VECTOR: p",
    "id": 3810,
    "declarations": "w: POINT; X: POINT; p: VECTOR",
    "facts": "VectorOf(w, X) = p"
},
{
    "assertion": "Diameter ( CIRCLE: U ) equals Inclination ( LineOf ( LeftFocus ( CONICSECTION: x ), POINT: D ) )",
    "id": 3811,
    "declarations": "U: CIRCLE; x: CONICSECTION; D: POINT",
    "facts": "Diameter(U) = Inclination(LineOf(LeftFocus(x), D))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: R ) equals RightVertex ( CONICSECTION: Q )",
    "id": 3812,
    "declarations": "R: CONICSECTION; Q: CONICSECTION",
    "facts": "UpperFocus(R) = RightVertex(Q)"
},
{
    "assertion": "Inclination ( LINE: G ) equals sqrt ( NUMBER: 29 )",
    "id": 3813,
    "declarations": "G: LINE; 29: NUMBER",
    "facts": "Inclination(G) = sqrt(29)"
},
{
    "assertion": "XCoordinate ( Orthocenter ( TRIANGLE: o ) ) equals NUMBER: 87",
    "id": 3814,
    "declarations": "o: TRIANGLE; 87: NUMBER",
    "facts": "XCoordinate(Orthocenter(o)) = 87"
},
{
    "assertion": "IsParallel ( TangentOnPoint ( POINT: K, CURVE: A ), LINE: N ) equals BOOL: True",
    "id": 3815,
    "declarations": "K: POINT; A: CURVE; N: LINE; True: BOOL",
    "facts": "IsParallel(TangentOnPoint(K, A), N) = True"
},
{
    "assertion": "Diameter ( CIRCLE: q ) equals Intercept ( LINE: g, AXIS: yAxis )",
    "id": 3816,
    "declarations": "q: CIRCLE; g: LINE; yAxis: AXIS",
    "facts": "Diameter(q) = Intercept(g, yAxis)"
},
{
    "assertion": "RealAxis ( ELLIPSE: T ) equals MajorAxis ( ELLIPSE: w )",
    "id": 3817,
    "declarations": "T: ELLIPSE; w: ELLIPSE",
    "facts": "RealAxis(T) = MajorAxis(w)"
},
{
    "assertion": "InterReciprocal ( NUMBER: 79 ) equals Diameter ( CIRCLE: N )",
    "id": 3818,
    "declarations": "79: NUMBER; N: CIRCLE",
    "facts": "InterReciprocal(79) = Diameter(N)"
},
{
    "assertion": "Distance ( POINT: i, LeftFocus ( CONICSECTION: Z ) ) equals Inclination ( LINE: S )",
    "id": 3819,
    "declarations": "i: POINT; Z: CONICSECTION; S: LINE",
    "facts": "Distance(i, LeftFocus(Z)) = Inclination(S)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: l ) equals LINE: X",
    "id": 3820,
    "declarations": "l: CONICSECTION; X: LINE",
    "facts": "RightDirectrix(l) = X"
},
{
    "assertion": "Slope ( TangentOnPoint ( POINT: u, CURVE: F ) ) equals Slope ( LINE: u )",
    "id": 3821,
    "declarations": "u: POINT; F: CURVE; u: LINE",
    "facts": "Slope(TangentOnPoint(u, F)) = Slope(u)"
},
{
    "assertion": "TangentOfPoint ( RightVertex ( CONICSECTION: D ), CURVE: n ) equals OverlappingLine ( LINESEGMENT: x )",
    "id": 3822,
    "declarations": "D: CONICSECTION; n: CURVE; x: LINESEGMENT",
    "facts": "TangentOfPoint(RightVertex(D), n) = OverlappingLine(x)"
},
{
    "assertion": "Locus ( POINT: d ) equals RightPart ( HYPERBOLA: p )",
    "id": 3823,
    "declarations": "d: POINT; p: HYPERBOLA",
    "facts": "Locus(d) = RightPart(p)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: O ) equals POINT: Z",
    "id": 3824,
    "declarations": "O: CONICSECTION; Z: POINT",
    "facts": "LowerVertex(O) = Z"
},
{
    "assertion": "Length ( LINESEGMENT: X ) equals XCoordinate ( POINT: k )",
    "id": 3825,
    "declarations": "X: LINESEGMENT; k: POINT",
    "facts": "Length(X) = XCoordinate(k)"
},
{
    "assertion": "Diameter ( CIRCLE: A ) equals Area ( CONICSECTION: H )",
    "id": 3826,
    "declarations": "A: CIRCLE; H: CONICSECTION",
    "facts": "Diameter(A) = Area(H)"
},
{
    "assertion": "FocalLength ( CONICSECTION: t ) equals Area ( CONICSECTION: n )",
    "id": 3827,
    "declarations": "t: CONICSECTION; n: CONICSECTION",
    "facts": "FocalLength(t) = Area(n)"
},
{
    "assertion": "XCoordinate ( POINT: v ) equals Area ( CONICSECTION: J )",
    "id": 3828,
    "declarations": "v: POINT; J: CONICSECTION",
    "facts": "XCoordinate(v) = Area(J)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: Q ) equals Center ( CONICSECTION: U )",
    "id": 3829,
    "declarations": "Q: LINESEGMENT; U: CONICSECTION",
    "facts": "Endpoint(Q) = Center(U)"
},
{
    "assertion": "Length ( LINESEGMENT: y ) equals Diameter ( CIRCLE: N )",
    "id": 3830,
    "declarations": "y: LINESEGMENT; N: CIRCLE",
    "facts": "Length(y) = Diameter(N)"
},
{
    "assertion": "RightPart ( HYPERBOLA: C ) equals CURVE: f",
    "id": 3831,
    "declarations": "C: HYPERBOLA; f: CURVE",
    "facts": "RightPart(C) = f"
},
{
    "assertion": "Length ( LINESEGMENT: i ) equals Abs ( MajorAxis ( ELLIPSE: b ) )",
    "id": 3832,
    "declarations": "i: LINESEGMENT; b: ELLIPSE",
    "facts": "Length(i) = Abs(MajorAxis(b))"
},
{
    "assertion": "RightVertex ( CONICSECTION: G ) equals Circumcenter ( TRIANGLE: R )",
    "id": 3833,
    "declarations": "G: CONICSECTION; R: TRIANGLE",
    "facts": "RightVertex(G) = Circumcenter(R)"
},
{
    "assertion": "RightPart ( HYPERBOLA: T ) equals CURVE: r",
    "id": 3834,
    "declarations": "T: HYPERBOLA; r: CURVE",
    "facts": "RightPart(T) = r"
},
{
    "assertion": "PointOnCurve ( RightFocus ( CONICSECTION: y ), RightPart ( HYPERBOLA: O ) ) equals BOOL: True",
    "id": 3835,
    "declarations": "y: CONICSECTION; O: HYPERBOLA; True: BOOL",
    "facts": "PointOnCurve(RightFocus(y), RightPart(O)) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: O ) equals LowerFocus ( CONICSECTION: t )",
    "id": 3836,
    "declarations": "O: TRIANGLE; t: CONICSECTION",
    "facts": "Circumcenter(O) = LowerFocus(t)"
},
{
    "assertion": "YCoordinate ( Circumcenter ( TRIANGLE: W ) ) equals NUMBER: 58",
    "id": 3837,
    "declarations": "W: TRIANGLE; 58: NUMBER",
    "facts": "YCoordinate(Circumcenter(W)) = 58"
},
{
    "assertion": "Between ( RightFocus ( CONICSECTION: E ), POINT: w, POINT: k ) equals BOOL: True",
    "id": 3838,
    "declarations": "E: CONICSECTION; w: POINT; k: POINT; True: BOOL",
    "facts": "Between(RightFocus(E), w, k) = True"
},
{
    "assertion": "Perimeter ( CONICSECTION: f ) equals Intercept ( RightDirectrix ( CONICSECTION: l ), AXIS: yAxis )",
    "id": 3839,
    "declarations": "f: CONICSECTION; l: CONICSECTION; yAxis: AXIS",
    "facts": "Perimeter(f) = Intercept(RightDirectrix(l), yAxis)"
},
{
    "assertion": "Max ( lg ( Length ( LINESEGMENT: S ) ) ) equals NUMBER: -30",
    "id": 3840,
    "declarations": "S: LINESEGMENT; -30: NUMBER",
    "facts": "Max(lg(Length(S))) = -30"
},
{
    "assertion": "Perimeter ( CONICSECTION: j ) equals NUMBER: -37",
    "id": 3841,
    "declarations": "j: CONICSECTION; -37: NUMBER",
    "facts": "Perimeter(j) = -37"
},
{
    "assertion": "Inclination ( LINE: m ) equals Radius ( CIRCLE: u )",
    "id": 3842,
    "declarations": "m: LINE; u: CIRCLE",
    "facts": "Inclination(m) = Radius(u)"
},
{
    "assertion": "RightPart ( HYPERBOLA: Y ) equals CURVE: z",
    "id": 3843,
    "declarations": "Y: HYPERBOLA; z: CURVE",
    "facts": "RightPart(Y) = z"
},
{
    "assertion": "Orthocenter ( TRIANGLE: g ) equals RightVertex ( CONICSECTION: m )",
    "id": 3844,
    "declarations": "g: TRIANGLE; m: CONICSECTION",
    "facts": "Orthocenter(g) = RightVertex(m)"
},
{
    "assertion": "Projection ( POINT: d, LINE: d ) equals POINT: R",
    "id": 3845,
    "declarations": "d: POINT; d: LINE; R: POINT",
    "facts": "Projection(d, d) = R"
},
{
    "assertion": "ApplyUnit ( Quadrant ( MidPoint ( LINESEGMENT: T ) ), DEGREESTR: degree )",
    "id": 3846,
    "declarations": "T: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(Quadrant(MidPoint(T)), degree) = None"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: t ) equals LINE: P",
    "id": 3847,
    "declarations": "t: LINESEGMENT; P: LINE",
    "facts": "PerpendicularBisector(t) = P"
},
{
    "assertion": "RealAxis ( ELLIPSE: N ) equals LINESEGMENT: e",
    "id": 3848,
    "declarations": "N: ELLIPSE; e: LINESEGMENT",
    "facts": "RealAxis(N) = e"
},
{
    "assertion": "Orthocenter ( TRIANGLE: x ) equals MidPoint ( InterceptChord ( LINE: O, CONICSECTION: U ) )",
    "id": 3849,
    "declarations": "x: TRIANGLE; O: LINE; U: CONICSECTION",
    "facts": "Orthocenter(x) = MidPoint(InterceptChord(O, U))"
},
{
    "assertion": "YCoordinate ( Center ( CONICSECTION: h ) ) equals NUMBER: 22",
    "id": 3850,
    "declarations": "h: CONICSECTION; 22: NUMBER",
    "facts": "YCoordinate(Center(h)) = 22"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: j ) equals Radius ( CIRCLE: T )",
    "id": 3851,
    "declarations": "j: CONICSECTION; T: CIRCLE",
    "facts": "HalfFocalLength(j) = Radius(T)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 73, DEGREESTR: degree )",
    "id": 3852,
    "declarations": "73: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(73, degree) = None"
},
{
    "assertion": "MinorAxis ( ELLIPSE: r ) equals MajorAxis ( ELLIPSE: H )",
    "id": 3853,
    "declarations": "r: ELLIPSE; H: ELLIPSE",
    "facts": "MinorAxis(r) = MajorAxis(H)"
},
{
    "assertion": "TangentOfPoint ( POINT: e, CURVE: k ) equals LINE: x",
    "id": 3854,
    "declarations": "e: POINT; k: CURVE; x: LINE",
    "facts": "TangentOfPoint(e, k) = x"
},
{
    "assertion": "IsParallel ( LINE: g, LINE: I ) equals BOOL: False",
    "id": 3855,
    "declarations": "g: LINE; I: LINE; False: BOOL",
    "facts": "IsParallel(g, I) = False"
},
{
    "assertion": "YCoordinate ( POINT: U ) equals Diameter ( CIRCLE: s )",
    "id": 3856,
    "declarations": "U: POINT; s: CIRCLE",
    "facts": "YCoordinate(U) = Diameter(s)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: P ) equals UpperVertex ( CONICSECTION: w )",
    "id": 3857,
    "declarations": "P: CONICSECTION; w: CONICSECTION",
    "facts": "UpperVertex(P) = UpperVertex(w)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -88, DEGREESTR: degree )",
    "id": 3858,
    "declarations": "-88: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-88, degree) = None"
},
{
    "assertion": "Expression ( CURVE: f ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6xy",
    "id": 3859,
    "declarations": "f: CURVE; x^3*space+*spacey^3*space=*space6xy: EXPRESSION",
    "facts": "Expression(f) = x^3*space+*spacey^3*space=*space6xy"
},
{
    "assertion": "LineOf ( LeftFocus ( CONICSECTION: n ), POINT: S ) equals LINE: e",
    "id": 3860,
    "declarations": "n: CONICSECTION; S: POINT; e: LINE",
    "facts": "LineOf(LeftFocus(n), S) = e"
},
{
    "assertion": "Radius ( CIRCLE: X ) equals Perimeter ( CONICSECTION: Y )",
    "id": 3861,
    "declarations": "X: CIRCLE; Y: CONICSECTION",
    "facts": "Radius(X) = Perimeter(Y)"
},
{
    "assertion": "Slope ( LINE: r ) equals XCoordinate ( POINT: H )",
    "id": 3862,
    "declarations": "r: LINE; H: POINT",
    "facts": "Slope(r) = XCoordinate(H)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: T ) equals RightDirectrix ( CONICSECTION: U )",
    "id": 3863,
    "declarations": "T: CONICSECTION; U: CONICSECTION",
    "facts": "RightDirectrix(T) = RightDirectrix(U)"
},
{
    "assertion": "Distance ( POINT: h, LeftVertex ( CONICSECTION: N ) ) equals NUMBER: -63",
    "id": 3864,
    "declarations": "h: POINT; N: CONICSECTION; -63: NUMBER",
    "facts": "Distance(h, LeftVertex(N)) = -63"
},
{
    "assertion": "Quadrant ( POINT: L ) equals NUMBER: -10",
    "id": 3865,
    "declarations": "L: POINT; -10: NUMBER",
    "facts": "Quadrant(L) = -10"
},
{
    "assertion": "Abs ( LineSegmentOf ( Circumcenter ( TriangleOf ( Circumcenter ( TRIANGLE: e ), LowerFocus ( CONICSECTION: b ), LeftVertex ( CONICSECTION: S ) ) ), POINT: k ) ) equals NUMBER: -98",
    "id": 3866,
    "declarations": "e: TRIANGLE; b: CONICSECTION; S: CONICSECTION; k: POINT; -98: NUMBER",
    "facts": "Abs(LineSegmentOf(Circumcenter(TriangleOf(Circumcenter(e), LowerFocus(b), LeftVertex(S))), k)) = -98"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: z, TriangleOf ( Orthocenter ( TRIANGLE: w ), RightFocus ( CONICSECTION: q ), Circumcenter ( TRIANGLE: B ) ) ) equals BOOL: False",
    "id": 3867,
    "declarations": "z: CIRCLE; w: TRIANGLE; q: CONICSECTION; B: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(z, TriangleOf(Orthocenter(w), RightFocus(q), Circumcenter(B))) = False"
},
{
    "assertion": "DotProduct ( VECTOR: q, VECTOR: w ) equals sqrt ( NUMBER: 100 )",
    "id": 3868,
    "declarations": "q: VECTOR; w: VECTOR; 100: NUMBER",
    "facts": "DotProduct(q, w) = sqrt(100)"
},
{
    "assertion": "sqrt ( Length ( LINESEGMENT: d ) ) equals NUMBER: 62",
    "id": 3869,
    "declarations": "d: LINESEGMENT; 62: NUMBER",
    "facts": "sqrt(Length(d)) = 62"
},
{
    "assertion": "LowerVertex ( CONICSECTION: Q ) equals RightFocus ( CONICSECTION: m )",
    "id": 3870,
    "declarations": "Q: CONICSECTION; m: CONICSECTION",
    "facts": "LowerVertex(Q) = RightFocus(m)"
},
{
    "assertion": "Distance ( POINT: u, UpperVertex ( CONICSECTION: a ) ) equals NUMBER: -33",
    "id": 3871,
    "declarations": "u: POINT; a: CONICSECTION; -33: NUMBER",
    "facts": "Distance(u, UpperVertex(a)) = -33"
},
{
    "assertion": "Area ( CONICSECTION: J ) equals NUMBER: -24",
    "id": 3872,
    "declarations": "J: CONICSECTION; -24: NUMBER",
    "facts": "Area(J) = -24"
},
{
    "assertion": "Orthocenter ( TRIANGLE: q ) equals LeftFocus ( CONICSECTION: n )",
    "id": 3873,
    "declarations": "q: TRIANGLE; n: CONICSECTION",
    "facts": "Orthocenter(q) = LeftFocus(n)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 48, DEGREESTR: degree )",
    "id": 3874,
    "declarations": "48: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(48, degree) = None"
},
{
    "assertion": "Incenter ( TRIANGLE: U ) equals POINT: a",
    "id": 3875,
    "declarations": "U: TRIANGLE; a: POINT",
    "facts": "Incenter(U) = a"
},
{
    "assertion": "Inclination ( RightDirectrix ( CONICSECTION: t ) ) equals Distance ( Projection ( Center ( CONICSECTION: m ), TangentOfPoint ( POINT: w, CURVE: m ) ), Incenter ( TRIANGLE: M ) )",
    "id": 3876,
    "declarations": "t: CONICSECTION; m: CONICSECTION; w: POINT; m: CURVE; M: TRIANGLE",
    "facts": "Inclination(RightDirectrix(t)) = Distance(Projection(Center(m), TangentOfPoint(w, m)), Incenter(M))"
},
{
    "assertion": "Abs ( LINESEGMENT: P ) equals Min ( HalfFocalLength ( CONICSECTION: G ) )",
    "id": 3877,
    "declarations": "P: LINESEGMENT; G: CONICSECTION",
    "facts": "Abs(P) = Min(HalfFocalLength(G))"
},
{
    "assertion": "RightPart ( HYPERBOLA: Q ) equals CURVE: Z",
    "id": 3878,
    "declarations": "Q: HYPERBOLA; Z: CURVE",
    "facts": "RightPart(Q) = Z"
},
{
    "assertion": "Radius ( CIRCLE: c ) equals sqrt ( sqrt ( Abs ( LineSegmentOf ( LeftVertex ( CONICSECTION: f ), LeftFocus ( CONICSECTION: p ) ) ) ) )",
    "id": 3879,
    "declarations": "c: CIRCLE; f: CONICSECTION; p: CONICSECTION",
    "facts": "Radius(c) = sqrt(sqrt(Abs(LineSegmentOf(LeftVertex(f), LeftFocus(p)))))"
},
{
    "assertion": "Inclination ( OverlappingLine ( LINESEGMENT: e ) ) equals YCoordinate ( LowerFocus ( CONICSECTION: n ) )",
    "id": 3880,
    "declarations": "e: LINESEGMENT; n: CONICSECTION",
    "facts": "Inclination(OverlappingLine(e)) = YCoordinate(LowerFocus(n))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: u ) equals LowerFocus ( CONICSECTION: N )",
    "id": 3881,
    "declarations": "u: CONICSECTION; N: CONICSECTION",
    "facts": "UpperVertex(u) = LowerFocus(N)"
},
{
    "assertion": "Intersection ( CURVE: G, LeftPart ( HYPERBOLA: m ) ) equals Center ( CONICSECTION: H )",
    "id": 3882,
    "declarations": "G: CURVE; m: HYPERBOLA; H: CONICSECTION",
    "facts": "Intersection(G, LeftPart(m)) = Center(H)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: u ) equals POINT: Z",
    "id": 3883,
    "declarations": "u: CONICSECTION; Z: POINT",
    "facts": "UpperFocus(u) = Z"
},
{
    "assertion": "InterReciprocal ( NUMBER: 37 ) equals Distance ( POINT: n, POINT: b )",
    "id": 3884,
    "declarations": "37: NUMBER; n: POINT; b: POINT",
    "facts": "InterReciprocal(37) = Distance(n, b)"
},
{
    "assertion": "Negation ( Slope ( LINE: x ) equals Length ( MinorAxis ( ELLIPSE: B ) ) ) equals BOOL: False",
    "id": 3885,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: X, TRIANGLE: z ) equals BOOL: True",
    "id": 3886,
    "declarations": "X: CIRCLE; z: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(X, z) = True"
},
{
    "assertion": "Max ( InterReciprocal ( Min ( Abs ( LINESEGMENT: m ) ) ) ) equals NUMBER: 48",
    "id": 3887,
    "declarations": "m: LINESEGMENT; 48: NUMBER",
    "facts": "Max(InterReciprocal(Min(Abs(m)))) = 48"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: p, TRIANGLE: F ) equals BOOL: True",
    "id": 3888,
    "declarations": "p: CIRCLE; F: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(p, F) = True"
},
{
    "assertion": "YCoordinate ( RightVertex ( CONICSECTION: L ) ) equals NUMBER: -74",
    "id": 3889,
    "declarations": "L: CONICSECTION; -74: NUMBER",
    "facts": "YCoordinate(RightVertex(L)) = -74"
},
{
    "assertion": "Min ( NUMBER: 29 ) equals Area ( CONICSECTION: l )",
    "id": 3890,
    "declarations": "29: NUMBER; l: CONICSECTION",
    "facts": "Min(29) = Area(l)"
},
{
    "assertion": "Locus ( Center ( CONICSECTION: Z ) ) equals CURVE: X",
    "id": 3891,
    "declarations": "Z: CONICSECTION; X: CURVE",
    "facts": "Locus(Center(Z)) = X"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: c ) equals LINE: k",
    "id": 3892,
    "declarations": "c: CONICSECTION; k: LINE",
    "facts": "RightDirectrix(c) = k"
},
{
    "assertion": "Intercept ( LineOf ( POINT: e, POINT: d ), AXIS: xAxis ) equals Area ( CONICSECTION: g )",
    "id": 3893,
    "declarations": "e: POINT; d: POINT; xAxis: AXIS; g: CONICSECTION",
    "facts": "Intercept(LineOf(e, d), xAxis) = Area(g)"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: T ) ) equals MidPoint ( InterceptChord ( LINE: W, CONICSECTION: s ) )",
    "id": 3894,
    "declarations": "T: ELLIPSE; W: LINE; s: CONICSECTION",
    "facts": "Endpoint(MajorAxis(T)) = MidPoint(InterceptChord(W, s))"
},
{
    "assertion": "MidPoint ( LINESEGMENT: Z ) equals Center ( CONICSECTION: O )",
    "id": 3895,
    "declarations": "Z: LINESEGMENT; O: CONICSECTION",
    "facts": "MidPoint(Z) = Center(O)"
},
{
    "assertion": "Coordinate ( POINT: L ) equals ( NUMBER: 25, Length ( LINESEGMENT: k ) )",
    "id": 3896,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftFocus ( CONICSECTION: p ) equals LowerFocus ( CONICSECTION: K )",
    "id": 3897,
    "declarations": "p: CONICSECTION; K: CONICSECTION",
    "facts": "LeftFocus(p) = LowerFocus(K)"
},
{
    "assertion": "Inclination ( LINE: y ) equals NUMBER: 46",
    "id": 3898,
    "declarations": "y: LINE; 46: NUMBER",
    "facts": "Inclination(y) = 46"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: f ) equals OverlappingLine ( MajorAxis ( ELLIPSE: L ) )",
    "id": 3899,
    "declarations": "f: LINESEGMENT; L: ELLIPSE",
    "facts": "PerpendicularBisector(f) = OverlappingLine(MajorAxis(L))"
},
{
    "assertion": "DotProduct ( VECTOR: s, VECTOR: n ) equals NUMBER: -8",
    "id": 3900,
    "declarations": "s: VECTOR; n: VECTOR; -8: NUMBER",
    "facts": "DotProduct(s, n) = -8"
},
{
    "assertion": "Center ( CONICSECTION: V ) equals Projection ( FootPoint ( PerpendicularBisector ( MajorAxis ( ELLIPSE: A ) ), LeftDirectrix ( CONICSECTION: Y ) ), LeftDirectrix ( CONICSECTION: D ) )",
    "id": 3901,
    "declarations": "V: CONICSECTION; A: ELLIPSE; Y: CONICSECTION; D: CONICSECTION",
    "facts": "Center(V) = Projection(FootPoint(PerpendicularBisector(MajorAxis(A)), LeftDirectrix(Y)), LeftDirectrix(D))"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: i ) equals OverlappingLine ( RealAxis ( ELLIPSE: N ) )",
    "id": 3902,
    "declarations": "i: CONICSECTION; N: ELLIPSE",
    "facts": "LeftDirectrix(i) = OverlappingLine(RealAxis(N))"
},
{
    "assertion": "Max ( Perimeter ( CONICSECTION: a ) ) equals Area ( CONICSECTION: S )",
    "id": 3903,
    "declarations": "a: CONICSECTION; S: CONICSECTION",
    "facts": "Max(Perimeter(a)) = Area(S)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: Y, TRIANGLE: u ) equals BOOL: False",
    "id": 3904,
    "declarations": "Y: CIRCLE; u: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(Y, u) = False"
},
{
    "assertion": "Radius ( CIRCLE: z ) equals Eccentricity ( CONICSECTION: w )",
    "id": 3905,
    "declarations": "z: CIRCLE; w: CONICSECTION",
    "facts": "Radius(z) = Eccentricity(w)"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: K ) ) equals Inclination ( OverlappingLine ( LINESEGMENT: D ) )",
    "id": 3906,
    "declarations": "K: ELLIPSE; D: LINESEGMENT",
    "facts": "Abs(RealAxis(K)) = Inclination(OverlappingLine(D))"
},
{
    "assertion": "IsDiameter ( ImaginaryAxis ( ELLIPSE: T ), CIRCLE: m ) equals BOOL: False",
    "id": 3907,
    "declarations": "T: ELLIPSE; m: CIRCLE; False: BOOL",
    "facts": "IsDiameter(ImaginaryAxis(T), m) = False"
},
{
    "assertion": "Quadrant ( LeftFocus ( CONICSECTION: x ) ) equals NUMBER: 73",
    "id": 3908,
    "declarations": "x: CONICSECTION; 73: NUMBER",
    "facts": "Quadrant(LeftFocus(x)) = 73"
},
{
    "assertion": "RightFocus ( CONICSECTION: Y ) equals Orthocenter ( TRIANGLE: y )",
    "id": 3909,
    "declarations": "Y: CONICSECTION; y: TRIANGLE",
    "facts": "RightFocus(Y) = Orthocenter(y)"
},
{
    "assertion": "Expression ( CURVE: E ) equals EXPRESSION: y*space=*spacex^3*space-*space4*x",
    "id": 3910,
    "declarations": "E: CURVE; y*space=*spacex^3*space-*space4*x: EXPRESSION",
    "facts": "Expression(E) = y*space=*spacex^3*space-*space4*x"
},
{
    "assertion": "IsCircumCircle ( CircumCircle ( TRIANGLE: E ), TRIANGLE: R ) equals BOOL: False",
    "id": 3911,
    "declarations": "E: TRIANGLE; R: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(CircumCircle(E), R) = False"
},
{
    "assertion": "Slope ( LINE: c ) equals NUMBER: 84",
    "id": 3912,
    "declarations": "c: LINE; 84: NUMBER",
    "facts": "Slope(c) = 84"
},
{
    "assertion": "Inclination ( LINE: C ) equals Slope ( LINE: t )",
    "id": 3913,
    "declarations": "C: LINE; t: LINE",
    "facts": "Inclination(C) = Slope(t)"
},
{
    "assertion": "Incenter ( TRIANGLE: k ) equals POINT: l",
    "id": 3914,
    "declarations": "k: TRIANGLE; l: POINT",
    "facts": "Incenter(k) = l"
},
{
    "assertion": "IsOutTangent ( CIRCLE: V, CIRCLE: D ) equals BOOL: False",
    "id": 3915,
    "declarations": "V: CIRCLE; D: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(V, D) = False"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: S ) equals LINE: I",
    "id": 3916,
    "declarations": "S: LINESEGMENT; I: LINE",
    "facts": "PerpendicularBisector(S) = I"
},
{
    "assertion": "IsParallel ( LINE: I, OverlappingLine ( ImaginaryAxis ( ELLIPSE: v ) ) ) equals BOOL: False",
    "id": 3917,
    "declarations": "I: LINE; v: ELLIPSE; False: BOOL",
    "facts": "IsParallel(I, OverlappingLine(ImaginaryAxis(v))) = False"
},
{
    "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: B ) ) equals Min ( XCoordinate ( RightVertex ( CONICSECTION: f ) ) )",
    "id": 3918,
    "declarations": "B: CONICSECTION; f: CONICSECTION",
    "facts": "XCoordinate(UpperVertex(B)) = Min(XCoordinate(RightVertex(f)))"
},
{
    "assertion": "Vertex ( CONICSECTION: S ) equals FootPoint ( LeftDirectrix ( CONICSECTION: F ), PerpendicularBisector ( LINESEGMENT: B ) )",
    "id": 3919,
    "declarations": "S: CONICSECTION; F: CONICSECTION; B: LINESEGMENT",
    "facts": "Vertex(S) = FootPoint(LeftDirectrix(F), PerpendicularBisector(B))"
},
{
    "assertion": "IsTangent ( LINE: Y, CONICSECTION: x ) equals BOOL: True",
    "id": 3920,
    "declarations": "Y: LINE; x: CONICSECTION; True: BOOL",
    "facts": "IsTangent(Y, x) = True"
},
{
    "assertion": "InterReciprocal ( Area ( CONICSECTION: x ) ) equals NUMBER: 6",
    "id": 3921,
    "declarations": "x: CONICSECTION; 6: NUMBER",
    "facts": "InterReciprocal(Area(x)) = 6"
},
{
    "assertion": "LeftFocus ( CONICSECTION: w ) equals RightFocus ( CONICSECTION: Y )",
    "id": 3922,
    "declarations": "w: CONICSECTION; Y: CONICSECTION",
    "facts": "LeftFocus(w) = RightFocus(Y)"
},
{
    "assertion": "Locus ( POINT: F ) equals CURVE: i",
    "id": 3923,
    "declarations": "F: POINT; i: CURVE",
    "facts": "Locus(F) = i"
},
{
    "assertion": "Inclination ( LINE: D ) equals FocalLength ( CONICSECTION: w )",
    "id": 3924,
    "declarations": "D: LINE; w: CONICSECTION",
    "facts": "Inclination(D) = FocalLength(w)"
},
{
    "assertion": "Negation ( TangentOfPoint ( LowerVertex ( CONICSECTION: N ), CURVE: x ) equals LINE: q ) equals BOOL: True",
    "id": 3925,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LocusEquation ( POINT: j ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 3926,
    "declarations": "j: POINT; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "LocusEquation(j) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "InterReciprocal ( NUMBER: 14 ) equals InterReciprocal ( NUMBER: -69 )",
    "id": 3927,
    "declarations": "14: NUMBER; -69: NUMBER",
    "facts": "InterReciprocal(14) = InterReciprocal(-69)"
},
{
    "assertion": "Slope ( LINE: Z ) equals lg ( NUMBER: -5 )",
    "id": 3928,
    "declarations": "Z: LINE; -5: NUMBER",
    "facts": "Slope(Z) = lg(-5)"
},
{
    "assertion": "TangentOnPoint ( Center ( CONICSECTION: c ), CURVE: P ) equals LINE: V",
    "id": 3929,
    "declarations": "c: CONICSECTION; P: CURVE; V: LINE",
    "facts": "TangentOnPoint(Center(c), P) = V"
},
{
    "assertion": "IsIntersect ( CURVE: V, CURVE: y ) equals BOOL: False",
    "id": 3930,
    "declarations": "V: CURVE; y: CURVE; False: BOOL",
    "facts": "IsIntersect(V, y) = False"
},
{
    "assertion": "TangentOnPoint ( LeftVertex ( CONICSECTION: K ), CURVE: h ) equals LINE: B",
    "id": 3931,
    "declarations": "K: CONICSECTION; h: CURVE; B: LINE",
    "facts": "TangentOnPoint(LeftVertex(K), h) = B"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: Q ) equals AXIS: yAxis",
    "id": 3932,
    "declarations": "Q: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(Q) = yAxis"
},
{
    "assertion": "Asymptote ( HYPERBOLA: j ) equals LINE: W",
    "id": 3933,
    "declarations": "j: HYPERBOLA; W: LINE",
    "facts": "Asymptote(j) = W"
},
{
    "assertion": "IsPerpendicular ( LINE: z, LINE: K ) equals BOOL: True",
    "id": 3934,
    "declarations": "z: LINE; K: LINE; True: BOOL",
    "facts": "IsPerpendicular(z, K) = True"
},
{
    "assertion": "LeftPart ( HYPERBOLA: J ) equals LeftPart ( HYPERBOLA: x )",
    "id": 3935,
    "declarations": "J: HYPERBOLA; x: HYPERBOLA",
    "facts": "LeftPart(J) = LeftPart(x)"
},
{
    "assertion": "InterReciprocal ( Intercept ( PerpendicularBisector ( LINESEGMENT: U ), AXIS: xAxis ) ) equals NUMBER: -32",
    "id": 3936,
    "declarations": "U: LINESEGMENT; xAxis: AXIS; -32: NUMBER",
    "facts": "InterReciprocal(Intercept(PerpendicularBisector(U), xAxis)) = -32"
},
{
    "assertion": "Endpoint ( LINESEGMENT: r ) equals POINT: x",
    "id": 3937,
    "declarations": "r: LINESEGMENT; x: POINT",
    "facts": "Endpoint(r) = x"
},
{
    "assertion": "XCoordinate ( Circumcenter ( TRIANGLE: j ) ) equals XCoordinate ( Orthocenter ( TRIANGLE: f ) )",
    "id": 3938,
    "declarations": "j: TRIANGLE; f: TRIANGLE",
    "facts": "XCoordinate(Circumcenter(j)) = XCoordinate(Orthocenter(f))"
},
{
    "assertion": "TangentPoint ( LINE: c, CIRCLE: u ) equals UpperFocus ( CONICSECTION: e )",
    "id": 3939,
    "declarations": "c: LINE; u: CIRCLE; e: CONICSECTION",
    "facts": "TangentPoint(c, u) = UpperFocus(e)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: E ) equals POINT: c",
    "id": 3940,
    "declarations": "E: CONICSECTION; c: POINT",
    "facts": "LeftFocus(E) = c"
},
{
    "assertion": "LowerFocus ( CONICSECTION: B ) equals POINT: l",
    "id": 3941,
    "declarations": "B: CONICSECTION; l: POINT",
    "facts": "LowerFocus(B) = l"
},
{
    "assertion": "LocusEquation ( UpperVertex ( CONICSECTION: Z ) ) equals LocusEquation ( RightVertex ( CONICSECTION: m ) )",
    "id": 3942,
    "declarations": "Z: CONICSECTION; m: CONICSECTION",
    "facts": "LocusEquation(UpperVertex(Z)) = LocusEquation(RightVertex(m))"
},
{
    "assertion": "Diameter ( CIRCLE: U ) equals NUMBER: 21",
    "id": 3943,
    "declarations": "U: CIRCLE; 21: NUMBER",
    "facts": "Diameter(U) = 21"
},
{
    "assertion": "Center ( CONICSECTION: z ) equals LowerVertex ( CONICSECTION: b )",
    "id": 3944,
    "declarations": "z: CONICSECTION; b: CONICSECTION",
    "facts": "Center(z) = LowerVertex(b)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: q ) equals Incenter ( TRIANGLE: o )",
    "id": 3945,
    "declarations": "q: CONICSECTION; o: TRIANGLE",
    "facts": "LowerFocus(q) = Incenter(o)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: k, CONICSECTION: E ) equals BOOL: True",
    "id": 3946,
    "declarations": "k: LINESEGMENT; E: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(k, E) = True"
},
{
    "assertion": "RightPart ( HYPERBOLA: f ) equals CURVE: s",
    "id": 3947,
    "declarations": "f: HYPERBOLA; s: CURVE",
    "facts": "RightPart(f) = s"
},
{
    "assertion": "TangentOfPoint ( RightFocus ( CONICSECTION: v ), CURVE: s ) equals LINE: I",
    "id": 3948,
    "declarations": "v: CONICSECTION; s: CURVE; I: LINE",
    "facts": "TangentOfPoint(RightFocus(v), s) = I"
},
{
    "assertion": "Focus ( CONICSECTION: t ) equals RightFocus ( CONICSECTION: W )",
    "id": 3949,
    "declarations": "t: CONICSECTION; W: CONICSECTION",
    "facts": "Focus(t) = RightFocus(W)"
},
{
    "assertion": "Coordinate ( RightFocus ( CONICSECTION: m ) ) equals ( sqrt ( Distance ( POINT: N, FootPoint ( LINE: p, LINE: Y ) ) ), NUMBER: 49 )",
    "id": 3950,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "UpperFocus ( CONICSECTION: Q ) equals POINT: J",
    "id": 3951,
    "declarations": "Q: CONICSECTION; J: POINT",
    "facts": "UpperFocus(Q) = J"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: L, CircumCircle ( TRIANGLE: h ) ) equals BOOL: True",
    "id": 3952,
    "declarations": "L: LINESEGMENT; h: TRIANGLE; True: BOOL",
    "facts": "IsDiameter(L, CircumCircle(h)) = True"
},
{
    "assertion": "FootPoint ( LINE: C, LINE: x ) equals LeftVertex ( CONICSECTION: A )",
    "id": 3953,
    "declarations": "C: LINE; x: LINE; A: CONICSECTION",
    "facts": "FootPoint(C, x) = LeftVertex(A)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: u, CIRCLE: E ) equals BOOL: False",
    "id": 3954,
    "declarations": "u: LINESEGMENT; E: CIRCLE; False: BOOL",
    "facts": "IsDiameter(u, E) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: O ) equals LINE: v",
    "id": 3955,
    "declarations": "O: CONICSECTION; v: LINE",
    "facts": "Directrix(O) = v"
},
{
    "assertion": "Endpoint ( LINESEGMENT: w ) equals POINT: d",
    "id": 3956,
    "declarations": "w: LINESEGMENT; d: POINT",
    "facts": "Endpoint(w) = d"
},
{
    "assertion": "YCoordinate ( POINT: W ) equals Slope ( LINE: I )",
    "id": 3957,
    "declarations": "W: POINT; I: LINE",
    "facts": "YCoordinate(W) = Slope(I)"
},
{
    "assertion": "Diameter ( CIRCLE: D ) equals NUMBER: -19",
    "id": 3958,
    "declarations": "D: CIRCLE; -19: NUMBER",
    "facts": "Diameter(D) = -19"
},
{
    "assertion": "Inclination ( LINE: h ) equals YCoordinate ( UpperVertex ( CONICSECTION: w ) )",
    "id": 3959,
    "declarations": "h: LINE; w: CONICSECTION",
    "facts": "Inclination(h) = YCoordinate(UpperVertex(w))"
},
{
    "assertion": "Radius ( CIRCLE: F ) equals NUMBER: -42",
    "id": 3960,
    "declarations": "F: CIRCLE; -42: NUMBER",
    "facts": "Radius(F) = -42"
},
{
    "assertion": "Negation ( Expression ( CURVE: z ) equals EXPRESSION: y*space=*spacee^x ) equals BOOL: False",
    "id": 3961,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MinorAxis ( ELLIPSE: f ) equals LINESEGMENT: K",
    "id": 3962,
    "declarations": "f: ELLIPSE; K: LINESEGMENT",
    "facts": "MinorAxis(f) = K"
},
{
    "assertion": "DotProduct ( VECTOR: G, VECTOR: h ) equals NUMBER: -91",
    "id": 3963,
    "declarations": "G: VECTOR; h: VECTOR; -91: NUMBER",
    "facts": "DotProduct(G, h) = -91"
},
{
    "assertion": "MajorAxis ( ELLIPSE: L ) equals LINESEGMENT: y",
    "id": 3964,
    "declarations": "L: ELLIPSE; y: LINESEGMENT",
    "facts": "MajorAxis(L) = y"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: A ), TRIANGLE: M ) equals BOOL: False",
    "id": 3965,
    "declarations": "A: TRIANGLE; M: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(A), M) = False"
},
{
    "assertion": "Locus ( POINT: D ) equals CURVE: w",
    "id": 3966,
    "declarations": "D: POINT; w: CURVE",
    "facts": "Locus(D) = w"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: x, TRIANGLE: B ) equals BOOL: True",
    "id": 3967,
    "declarations": "x: CIRCLE; B: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(x, B) = True"
},
{
    "assertion": "LocusEquation ( Circumcenter ( TriangleOf ( MidPoint ( MinorAxis ( ELLIPSE: y ) ), POINT: o, POINT: J ) ) ) equals EXPRESSION: x^2*space+*spacey^2*space=*space25",
    "id": 3968,
    "declarations": "y: ELLIPSE; o: POINT; J: POINT; x^2*space+*spacey^2*space=*space25: EXPRESSION",
    "facts": "LocusEquation(Circumcenter(TriangleOf(MidPoint(MinorAxis(y)), o, J))) = x^2*space+*spacey^2*space=*space25"
},
{
    "assertion": "InterReciprocal ( NUMBER: -34 ) equals HalfFocalLength ( CONICSECTION: Z )",
    "id": 3969,
    "declarations": "-34: NUMBER; Z: CONICSECTION",
    "facts": "InterReciprocal(-34) = HalfFocalLength(Z)"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: f ) ) equals Slope ( LeftDirectrix ( CONICSECTION: b ) )",
    "id": 3970,
    "declarations": "f: ELLIPSE; b: CONICSECTION",
    "facts": "Abs(MinorAxis(f)) = Slope(LeftDirectrix(b))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: c ) equals CURVE: n",
    "id": 3971,
    "declarations": "c: HYPERBOLA; n: CURVE",
    "facts": "LeftPart(c) = n"
},
{
    "assertion": "XCoordinate ( RightFocus ( CONICSECTION: I ) ) equals NUMBER: -63",
    "id": 3972,
    "declarations": "I: CONICSECTION; -63: NUMBER",
    "facts": "XCoordinate(RightFocus(I)) = -63"
},
{
    "assertion": "LocusEquation ( LowerFocus ( CONICSECTION: w ) ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 3973,
    "declarations": "w: CONICSECTION; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "LocusEquation(LowerFocus(w)) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "Incenter ( TRIANGLE: w ) equals Projection ( POINT: G, TangentOnPoint ( Incenter ( TRIANGLE: y ), CURVE: L ) )",
    "id": 3974,
    "declarations": "w: TRIANGLE; G: POINT; y: TRIANGLE; L: CURVE",
    "facts": "Incenter(w) = Projection(G, TangentOnPoint(Incenter(y), L))"
},
{
    "assertion": "Intercept ( TangentOnPoint ( Circumcenter ( TRIANGLE: T ), CURVE: u ), AXIS: xAxis ) equals sqrt ( NUMBER: 2 )",
    "id": 3975,
    "declarations": "T: TRIANGLE; u: CURVE; xAxis: AXIS; 2: NUMBER",
    "facts": "Intercept(TangentOnPoint(Circumcenter(T), u), xAxis) = sqrt(2)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: C ) equals POINT: l",
    "id": 3976,
    "declarations": "C: LINESEGMENT; l: POINT",
    "facts": "Endpoint(C) = l"
},
{
    "assertion": "TangentOfPoint ( MidPoint ( MinorAxis ( ELLIPSE: Y ) ), CURVE: g ) equals OverlappingLine ( RealAxis ( ELLIPSE: A ) )",
    "id": 3977,
    "declarations": "Y: ELLIPSE; g: CURVE; A: ELLIPSE",
    "facts": "TangentOfPoint(MidPoint(MinorAxis(Y)), g) = OverlappingLine(RealAxis(A))"
},
{
    "assertion": "InterReciprocal ( NUMBER: 66 ) equals NUMBER: 95",
    "id": 3978,
    "declarations": "66: NUMBER; 95: NUMBER",
    "facts": "InterReciprocal(66) = 95"
},
{
    "assertion": "Length ( ImaginaryAxis ( ELLIPSE: S ) ) equals Min ( XCoordinate ( POINT: h ) )",
    "id": 3979,
    "declarations": "S: ELLIPSE; h: POINT",
    "facts": "Length(ImaginaryAxis(S)) = Min(XCoordinate(h))"
},
{
    "assertion": "Quadrant ( RightFocus ( CONICSECTION: o ) ) equals Slope ( LINE: b )",
    "id": 3980,
    "declarations": "o: CONICSECTION; b: LINE",
    "facts": "Quadrant(RightFocus(o)) = Slope(b)"
},
{
    "assertion": "And ( LeftFocus ( CONICSECTION: p ) equals LowerVertex ( CONICSECTION: Y ), HalfFocalLength ( CONICSECTION: L ) equals Radius ( CIRCLE: G ) ) equals BOOL: False",
    "id": 3981,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: r ) equals LineSegmentOf ( LeftVertex ( CONICSECTION: Z ), POINT: S )",
    "id": 3982,
    "declarations": "r: ELLIPSE; Z: CONICSECTION; S: POINT",
    "facts": "ImaginaryAxis(r) = LineSegmentOf(LeftVertex(Z), S)"
},
{
    "assertion": "TriangleOf ( LeftVertex ( CONICSECTION: v ), POINT: I, POINT: n ) equals TRIANGLE: v",
    "id": 3983,
    "declarations": "v: CONICSECTION; I: POINT; n: POINT; v: TRIANGLE",
    "facts": "TriangleOf(LeftVertex(v), I, n) = v"
},
{
    "assertion": "Perimeter ( CONICSECTION: g ) equals NUMBER: 17",
    "id": 3984,
    "declarations": "g: CONICSECTION; 17: NUMBER",
    "facts": "Perimeter(g) = 17"
},
{
    "assertion": "LeftVertex ( CONICSECTION: H ) equals POINT: u",
    "id": 3985,
    "declarations": "H: CONICSECTION; u: POINT",
    "facts": "LeftVertex(H) = u"
},
{
    "assertion": "Circumcenter ( TRIANGLE: c ) equals Orthocenter ( TRIANGLE: R )",
    "id": 3986,
    "declarations": "c: TRIANGLE; R: TRIANGLE",
    "facts": "Circumcenter(c) = Orthocenter(R)"
},
{
    "assertion": "LocusEquation ( POINT: R ) equals EXPRESSION: x^2*space+*spacey^2*space=*space25",
    "id": 3987,
    "declarations": "R: POINT; x^2*space+*spacey^2*space=*space25: EXPRESSION",
    "facts": "LocusEquation(R) = x^2*space+*spacey^2*space=*space25"
},
{
    "assertion": "Intercept ( LINE: U, AXIS: yAxis ) equals NUMBER: -94",
    "id": 3988,
    "declarations": "U: LINE; yAxis: AXIS; -94: NUMBER",
    "facts": "Intercept(U, yAxis) = -94"
},
{
    "assertion": "LeftPart ( HYPERBOLA: m ) equals CURVE: C",
    "id": 3989,
    "declarations": "m: HYPERBOLA; C: CURVE",
    "facts": "LeftPart(m) = C"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: Y ) ) equals lg ( NumIntersection ( CURVE: o, LeftPart ( HYPERBOLA: h ) ) )",
    "id": 3990,
    "declarations": "Y: TRIANGLE; o: CURVE; h: HYPERBOLA",
    "facts": "Diameter(CircumCircle(Y)) = lg(NumIntersection(o, LeftPart(h)))"
},
{
    "assertion": "Coordinate ( Projection ( POINT: s, LINE: f ) ) equals ( sqrt ( HalfFocalLength ( CONICSECTION: R ) ), Inclination ( LINE: Q ) )",
    "id": 3991,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: q ) equals ImaginaryAxis ( ELLIPSE: X )",
    "id": 3992,
    "declarations": "q: ELLIPSE; X: ELLIPSE",
    "facts": "ImaginaryAxis(q) = ImaginaryAxis(X)"
},
{
    "assertion": "Max ( Eccentricity ( CONICSECTION: p ) ) equals NUMBER: 18",
    "id": 3993,
    "declarations": "p: CONICSECTION; 18: NUMBER",
    "facts": "Max(Eccentricity(p)) = 18"
},
{
    "assertion": "Radius ( CIRCLE: X ) equals Diameter ( CIRCLE: k )",
    "id": 3994,
    "declarations": "X: CIRCLE; k: CIRCLE",
    "facts": "Radius(X) = Diameter(k)"
},
{
    "assertion": "Max ( NUMBER: 81 ) equals NUMBER: 37",
    "id": 3995,
    "declarations": "81: NUMBER; 37: NUMBER",
    "facts": "Max(81) = 37"
},
{
    "assertion": "Area ( CONICSECTION: z ) equals NUMBER: -8",
    "id": 3996,
    "declarations": "z: CONICSECTION; -8: NUMBER",
    "facts": "Area(z) = -8"
},
{
    "assertion": "Center ( CONICSECTION: J ) equals Circumcenter ( TRIANGLE: l )",
    "id": 3997,
    "declarations": "J: CONICSECTION; l: TRIANGLE",
    "facts": "Center(J) = Circumcenter(l)"
},
{
    "assertion": "Vertex ( CONICSECTION: w ) equals LeftVertex ( CONICSECTION: m )",
    "id": 3998,
    "declarations": "w: CONICSECTION; m: CONICSECTION",
    "facts": "Vertex(w) = LeftVertex(m)"
},
{
    "assertion": "Max ( sqrt ( Diameter ( CIRCLE: N ) ) ) equals Slope ( LineOf ( POINT: k, POINT: c ) )",
    "id": 3999,
    "declarations": "N: CIRCLE; k: POINT; c: POINT",
    "facts": "Max(sqrt(Diameter(N))) = Slope(LineOf(k, c))"
},
{
    "assertion": "TangentOnPoint ( Incenter ( TRIANGLE: R ), CURVE: Y ) equals LeftDirectrix ( CONICSECTION: E )",
    "id": 4000,
    "declarations": "R: TRIANGLE; Y: CURVE; E: CONICSECTION",
    "facts": "TangentOnPoint(Incenter(R), Y) = LeftDirectrix(E)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: N ) equals LeftFocus ( CONICSECTION: q )",
    "id": 4001,
    "declarations": "N: CONICSECTION; q: CONICSECTION",
    "facts": "LeftFocus(N) = LeftFocus(q)"
},
{
    "assertion": "RightPart ( HYPERBOLA: B ) equals CURVE: b",
    "id": 4002,
    "declarations": "B: HYPERBOLA; b: CURVE",
    "facts": "RightPart(B) = b"
},
{
    "assertion": "Diameter ( CIRCLE: P ) equals NUMBER: -43",
    "id": 4003,
    "declarations": "P: CIRCLE; -43: NUMBER",
    "facts": "Diameter(P) = -43"
},
{
    "assertion": "UpperFocus ( CONICSECTION: J ) equals POINT: Y",
    "id": 4004,
    "declarations": "J: CONICSECTION; Y: POINT",
    "facts": "UpperFocus(J) = Y"
},
{
    "assertion": "LowerVertex ( CONICSECTION: j ) equals Center ( CONICSECTION: u )",
    "id": 4005,
    "declarations": "j: CONICSECTION; u: CONICSECTION",
    "facts": "LowerVertex(j) = Center(u)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: H ) equals LeftDirectrix ( CONICSECTION: p )",
    "id": 4006,
    "declarations": "H: HYPERBOLA; p: CONICSECTION",
    "facts": "Asymptote(H) = LeftDirectrix(p)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: I ) equals POINT: O",
    "id": 4007,
    "declarations": "I: LINESEGMENT; O: POINT",
    "facts": "MidPoint(I) = O"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: d ) equals OverlappingLine ( MinorAxis ( ELLIPSE: f ) )",
    "id": 4008,
    "declarations": "d: CONICSECTION; f: ELLIPSE",
    "facts": "LeftDirectrix(d) = OverlappingLine(MinorAxis(f))"
},
{
    "assertion": "And ( sqrt ( HalfFocalLength ( CONICSECTION: X ) ) equals Inclination ( TangentOnPoint ( POINT: b, CURVE: Z ) ), Inclination ( LINE: s ) equals sqrt ( InterReciprocal ( HalfFocalLength ( CONICSECTION: Z ) ) ) ) equals BOOL: False",
    "id": 4009,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Min ( Inclination ( LINE: P ) ) equals HalfFocalLength ( CONICSECTION: B )",
    "id": 4010,
    "declarations": "P: LINE; B: CONICSECTION",
    "facts": "Min(Inclination(P)) = HalfFocalLength(B)"
},
{
    "assertion": "Negation ( Inclination ( LineOf ( UpperFocus ( CONICSECTION: v ), Orthocenter ( TRIANGLE: w ) ) ) equals Area ( CONICSECTION: w ) ) equals BOOL: False",
    "id": 4011,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MidPoint ( LINESEGMENT: Z ) equals Projection ( POINT: t, LineOf ( POINT: G, POINT: j ) )",
    "id": 4012,
    "declarations": "Z: LINESEGMENT; t: POINT; G: POINT; j: POINT",
    "facts": "MidPoint(Z) = Projection(t, LineOf(G, j))"
},
{
    "assertion": "Expression ( CURVE: l ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 4013,
    "declarations": "l: CURVE; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(l) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "Slope ( LINE: W ) equals Radius ( CIRCLE: E )",
    "id": 4014,
    "declarations": "W: LINE; E: CIRCLE",
    "facts": "Slope(W) = Radius(E)"
},
{
    "assertion": "Directrix ( CONICSECTION: K ) equals LINE: J",
    "id": 4015,
    "declarations": "K: CONICSECTION; J: LINE",
    "facts": "Directrix(K) = J"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: U, CIRCLE: j ) equals BOOL: False",
    "id": 4016,
    "declarations": "U: LINESEGMENT; j: CIRCLE; False: BOOL",
    "facts": "IsDiameter(U, j) = False"
},
{
    "assertion": "Orthocenter ( TRIANGLE: p ) equals RightFocus ( CONICSECTION: Z )",
    "id": 4017,
    "declarations": "p: TRIANGLE; Z: CONICSECTION",
    "facts": "Orthocenter(p) = RightFocus(Z)"
},
{
    "assertion": "Incenter ( TRIANGLE: y ) equals POINT: a",
    "id": 4018,
    "declarations": "y: TRIANGLE; a: POINT",
    "facts": "Incenter(y) = a"
},
{
    "assertion": "CircumCircle ( TRIANGLE: k ) equals CIRCLE: N",
    "id": 4019,
    "declarations": "k: TRIANGLE; N: CIRCLE",
    "facts": "CircumCircle(k) = N"
},
{
    "assertion": "RealAxis ( ELLIPSE: P ) equals LINESEGMENT: H",
    "id": 4020,
    "declarations": "P: ELLIPSE; H: LINESEGMENT",
    "facts": "RealAxis(P) = H"
},
{
    "assertion": "TriangleOf ( Orthocenter ( TRIANGLE: R ), POINT: n, LowerFocus ( CONICSECTION: m ) ) equals TRIANGLE: o",
    "id": 4021,
    "declarations": "R: TRIANGLE; n: POINT; m: CONICSECTION; o: TRIANGLE",
    "facts": "TriangleOf(Orthocenter(R), n, LowerFocus(m)) = o"
},
{
    "assertion": "LeftVertex ( CONICSECTION: U ) equals POINT: O",
    "id": 4022,
    "declarations": "U: CONICSECTION; O: POINT",
    "facts": "LeftVertex(U) = O"
},
{
    "assertion": "Area ( CONICSECTION: L ) equals Length ( InterceptChord ( LINE: G, CONICSECTION: h ) )",
    "id": 4023,
    "declarations": "L: CONICSECTION; G: LINE; h: CONICSECTION",
    "facts": "Area(L) = Length(InterceptChord(G, h))"
},
{
    "assertion": "Negation ( XCoordinate ( POINT: X ) equals Area ( CONICSECTION: K ) ) equals BOOL: True",
    "id": 4024,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: K ) equals HalfFocalLength ( CONICSECTION: h )",
    "id": 4025,
    "declarations": "K: CONICSECTION; h: CONICSECTION",
    "facts": "HalfFocalLength(K) = HalfFocalLength(h)"
},
{
    "assertion": "YCoordinate ( POINT: O ) equals NUMBER: 43",
    "id": 4026,
    "declarations": "O: POINT; 43: NUMBER",
    "facts": "YCoordinate(O) = 43"
},
{
    "assertion": "LineSegmentOf ( POINT: M, POINT: D ) equals LINESEGMENT: t",
    "id": 4027,
    "declarations": "M: POINT; D: POINT; t: LINESEGMENT",
    "facts": "LineSegmentOf(M, D) = t"
},
{
    "assertion": "Asymptote ( HYPERBOLA: K ) equals RightDirectrix ( CONICSECTION: d )",
    "id": 4028,
    "declarations": "K: HYPERBOLA; d: CONICSECTION",
    "facts": "Asymptote(K) = RightDirectrix(d)"
},
{
    "assertion": "Negation ( LowerFocus ( CONICSECTION: w ) equals POINT: N ) equals BOOL: True",
    "id": 4029,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "XCoordinate ( POINT: E ) equals NUMBER: -22",
    "id": 4030,
    "declarations": "E: POINT; -22: NUMBER",
    "facts": "XCoordinate(E) = -22"
},
{
    "assertion": "Quadrant ( Incenter ( TRIANGLE: N ) ) equals lg ( NUMBER: 58 )",
    "id": 4031,
    "declarations": "N: TRIANGLE; 58: NUMBER",
    "facts": "Quadrant(Incenter(N)) = lg(58)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: L ) equals RightFocus ( CONICSECTION: F )",
    "id": 4032,
    "declarations": "L: LINESEGMENT; F: CONICSECTION",
    "facts": "Endpoint(L) = RightFocus(F)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: y ) equals RightVertex ( CONICSECTION: V )",
    "id": 4033,
    "declarations": "y: CONICSECTION; V: CONICSECTION",
    "facts": "LeftVertex(y) = RightVertex(V)"
},
{
    "assertion": "Vertex ( CONICSECTION: P ) equals POINT: c",
    "id": 4034,
    "declarations": "P: CONICSECTION; c: POINT",
    "facts": "Vertex(P) = c"
},
{
    "assertion": "Radius ( CIRCLE: A ) equals Slope ( LINE: X )",
    "id": 4035,
    "declarations": "A: CIRCLE; X: LINE",
    "facts": "Radius(A) = Slope(X)"
},
{
    "assertion": "Area ( CONICSECTION: H ) equals DotProduct ( VectorOf ( POINT: Y, POINT: M ), VECTOR: n )",
    "id": 4036,
    "declarations": "H: CONICSECTION; Y: POINT; M: POINT; n: VECTOR",
    "facts": "Area(H) = DotProduct(VectorOf(Y, M), n)"
},
{
    "assertion": "Directrix ( CONICSECTION: k ) equals PerpendicularBisector ( LINESEGMENT: l )",
    "id": 4037,
    "declarations": "k: CONICSECTION; l: LINESEGMENT",
    "facts": "Directrix(k) = PerpendicularBisector(l)"
},
{
    "assertion": "lg ( Quadrant ( POINT: L ) ) equals XCoordinate ( UpperFocus ( CONICSECTION: O ) )",
    "id": 4038,
    "declarations": "L: POINT; O: CONICSECTION",
    "facts": "lg(Quadrant(L)) = XCoordinate(UpperFocus(O))"
},
{
    "assertion": "VectorOf ( POINT: a, Circumcenter ( TRIANGLE: G ) ) equals VECTOR: l",
    "id": 4039,
    "declarations": "a: POINT; G: TRIANGLE; l: VECTOR",
    "facts": "VectorOf(a, Circumcenter(G)) = l"
},
{
    "assertion": "ApplyUnit ( Slope ( LINE: V ), DEGREESTR: degree )",
    "id": 4040,
    "declarations": "V: LINE; degree: DEGREESTR",
    "facts": "ApplyUnit(Slope(V), degree) = None"
},
{
    "assertion": "CircumCircle ( TRIANGLE: j ) equals CIRCLE: y",
    "id": 4041,
    "declarations": "j: TRIANGLE; y: CIRCLE",
    "facts": "CircumCircle(j) = y"
},
{
    "assertion": "MinorAxis ( ELLIPSE: w ) equals LINESEGMENT: g",
    "id": 4042,
    "declarations": "w: ELLIPSE; g: LINESEGMENT",
    "facts": "MinorAxis(w) = g"
},
{
    "assertion": "PointOnCurve ( POINT: r, CURVE: Z ) equals BOOL: False",
    "id": 4043,
    "declarations": "r: POINT; Z: CURVE; False: BOOL",
    "facts": "PointOnCurve(r, Z) = False"
},
{
    "assertion": "MajorAxis ( ELLIPSE: n ) equals LINESEGMENT: L",
    "id": 4044,
    "declarations": "n: ELLIPSE; L: LINESEGMENT",
    "facts": "MajorAxis(n) = L"
},
{
    "assertion": "Focus ( CONICSECTION: O ) equals POINT: Q",
    "id": 4045,
    "declarations": "O: CONICSECTION; Q: POINT",
    "facts": "Focus(O) = Q"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: X ) ) equals POINT: K",
    "id": 4046,
    "declarations": "X: ELLIPSE; K: POINT",
    "facts": "MidPoint(MajorAxis(X)) = K"
},
{
    "assertion": "IsOutTangent ( CIRCLE: H, CIRCLE: n ) equals BOOL: True",
    "id": 4047,
    "declarations": "H: CIRCLE; n: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(H, n) = True"
},
{
    "assertion": "Diameter ( CIRCLE: p ) equals NUMBER: -64",
    "id": 4048,
    "declarations": "p: CIRCLE; -64: NUMBER",
    "facts": "Diameter(p) = -64"
},
{
    "assertion": "And ( MidPoint ( LINESEGMENT: e ) equals Circumcenter ( TRIANGLE: S ), VectorOf ( POINT: T, Orthocenter ( TRIANGLE: Q ) ) equals VECTOR: P ) equals BOOL: True",
    "id": 4049,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: v, TRIANGLE: O ) equals BOOL: True",
    "id": 4050,
    "declarations": "v: CIRCLE; O: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(v, O) = True"
},
{
    "assertion": "Min ( NUMBER: -15 ) equals Perimeter ( CONICSECTION: f )",
    "id": 4051,
    "declarations": "-15: NUMBER; f: CONICSECTION",
    "facts": "Min(-15) = Perimeter(f)"
},
{
    "assertion": "RightPart ( HYPERBOLA: v ) equals CURVE: n",
    "id": 4052,
    "declarations": "v: HYPERBOLA; n: CURVE",
    "facts": "RightPart(v) = n"
},
{
    "assertion": "sqrt ( Radius ( CIRCLE: v ) ) equals Slope ( LINE: h )",
    "id": 4053,
    "declarations": "v: CIRCLE; h: LINE",
    "facts": "sqrt(Radius(v)) = Slope(h)"
},
{
    "assertion": "DotProduct ( VECTOR: p, VECTOR: D ) equals NUMBER: 82",
    "id": 4054,
    "declarations": "p: VECTOR; D: VECTOR; 82: NUMBER",
    "facts": "DotProduct(p, D) = 82"
},
{
    "assertion": "TangentPoint ( LINE: u, CIRCLE: v ) equals LeftFocus ( CONICSECTION: n )",
    "id": 4055,
    "declarations": "u: LINE; v: CIRCLE; n: CONICSECTION",
    "facts": "TangentPoint(u, v) = LeftFocus(n)"
},
{
    "assertion": "YCoordinate ( POINT: p ) equals NUMBER: -90",
    "id": 4056,
    "declarations": "p: POINT; -90: NUMBER",
    "facts": "YCoordinate(p) = -90"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: T, TRIANGLE: P ) equals BOOL: True",
    "id": 4057,
    "declarations": "T: CIRCLE; P: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(T, P) = True"
},
{
    "assertion": "Expression ( Locus ( POINT: H ) ) equals LocusEquation ( Incenter ( TRIANGLE: J ) )",
    "id": 4058,
    "declarations": "H: POINT; J: TRIANGLE",
    "facts": "Expression(Locus(H)) = LocusEquation(Incenter(J))"
},
{
    "assertion": "Intersection ( CURVE: i, CURVE: S ) equals POINT: G",
    "id": 4059,
    "declarations": "i: CURVE; S: CURVE; G: POINT",
    "facts": "Intersection(i, S) = G"
},
{
    "assertion": "Negation ( Negation ( XCoordinate ( MidPoint ( MajorAxis ( ELLIPSE: j ) ) ) equals NUMBER: -52 ) equals BOOL: False ) equals BOOL: True",
    "id": 4060,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Circumcenter ( TRIANGLE: k ) equals UpperFocus ( CONICSECTION: T )",
    "id": 4061,
    "declarations": "k: TRIANGLE; T: CONICSECTION",
    "facts": "Circumcenter(k) = UpperFocus(T)"
},
{
    "assertion": "Vertex ( CONICSECTION: b ) equals UpperVertex ( CONICSECTION: N )",
    "id": 4062,
    "declarations": "b: CONICSECTION; N: CONICSECTION",
    "facts": "Vertex(b) = UpperVertex(N)"
},
{
    "assertion": "RealAxis ( ELLIPSE: n ) equals RealAxis ( ELLIPSE: A )",
    "id": 4063,
    "declarations": "n: ELLIPSE; A: ELLIPSE",
    "facts": "RealAxis(n) = RealAxis(A)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: e ) equals Center ( CONICSECTION: s )",
    "id": 4064,
    "declarations": "e: CONICSECTION; s: CONICSECTION",
    "facts": "UpperVertex(e) = Center(s)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: H ) equals AXIS: yAxis",
    "id": 4065,
    "declarations": "H: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(H) = yAxis"
},
{
    "assertion": "Directrix ( CONICSECTION: n ) equals LINE: S",
    "id": 4066,
    "declarations": "n: CONICSECTION; S: LINE",
    "facts": "Directrix(n) = S"
},
{
    "assertion": "NumIntersection ( CURVE: d, CURVE: X ) equals Slope ( LINE: T )",
    "id": 4067,
    "declarations": "d: CURVE; X: CURVE; T: LINE",
    "facts": "NumIntersection(d, X) = Slope(T)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: T ) equals LeftDirectrix ( CONICSECTION: N )",
    "id": 4068,
    "declarations": "T: HYPERBOLA; N: CONICSECTION",
    "facts": "Asymptote(T) = LeftDirectrix(N)"
},
{
    "assertion": "Expression ( CURVE: o ) equals EXPRESSION: y*space=*space3*x*space+*space2",
    "id": 4069,
    "declarations": "o: CURVE; y*space=*space3*x*space+*space2: EXPRESSION",
    "facts": "Expression(o) = y*space=*space3*x*space+*space2"
},
{
    "assertion": "Asymptote ( HYPERBOLA: N ) equals LeftDirectrix ( CONICSECTION: X )",
    "id": 4070,
    "declarations": "N: HYPERBOLA; X: CONICSECTION",
    "facts": "Asymptote(N) = LeftDirectrix(X)"
},
{
    "assertion": "DotProduct ( VectorOf ( Circumcenter ( TRIANGLE: h ), POINT: S ), VECTOR: B ) equals sqrt ( DotProduct ( VECTOR: j, VECTOR: Z ) )",
    "id": 4071,
    "declarations": "h: TRIANGLE; S: POINT; B: VECTOR; j: VECTOR; Z: VECTOR",
    "facts": "DotProduct(VectorOf(Circumcenter(h), S), B) = sqrt(DotProduct(j, Z))"
},
{
    "assertion": "Diameter ( CIRCLE: F ) equals Min ( YCoordinate ( POINT: W ) )",
    "id": 4072,
    "declarations": "F: CIRCLE; W: POINT",
    "facts": "Diameter(F) = Min(YCoordinate(W))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: B ) equals POINT: M",
    "id": 4073,
    "declarations": "B: CONICSECTION; M: POINT",
    "facts": "LowerVertex(B) = M"
},
{
    "assertion": "Endpoint ( LINESEGMENT: s ) equals MidPoint ( RealAxis ( ELLIPSE: X ) )",
    "id": 4074,
    "declarations": "s: LINESEGMENT; X: ELLIPSE",
    "facts": "Endpoint(s) = MidPoint(RealAxis(X))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: j ) equals POINT: j",
    "id": 4075,
    "declarations": "j: CONICSECTION; j: POINT",
    "facts": "LeftVertex(j) = j"
},
{
    "assertion": "Endpoint ( LINESEGMENT: P ) equals Incenter ( TRIANGLE: S )",
    "id": 4076,
    "declarations": "P: LINESEGMENT; S: TRIANGLE",
    "facts": "Endpoint(P) = Incenter(S)"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: O ), TRIANGLE: Y ) equals BOOL: False",
    "id": 4077,
    "declarations": "O: TRIANGLE; Y: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(O), Y) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: z, TRIANGLE: z ) equals BOOL: True",
    "id": 4078,
    "declarations": "z: CIRCLE; z: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(z, z) = True"
},
{
    "assertion": "Eccentricity ( CONICSECTION: b ) equals Eccentricity ( CONICSECTION: N )",
    "id": 4079,
    "declarations": "b: CONICSECTION; N: CONICSECTION",
    "facts": "Eccentricity(b) = Eccentricity(N)"
},
{
    "assertion": "RightPart ( HYPERBOLA: m ) equals CURVE: h",
    "id": 4080,
    "declarations": "m: HYPERBOLA; h: CURVE",
    "facts": "RightPart(m) = h"
},
{
    "assertion": "Expression ( CURVE: F ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 4081,
    "declarations": "F: CURVE; y*space=*spacelog(x): EXPRESSION",
    "facts": "Expression(F) = y*space=*spacelog(x)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: c ) equals Circumcenter ( TRIANGLE: w )",
    "id": 4082,
    "declarations": "c: LINESEGMENT; w: TRIANGLE",
    "facts": "Endpoint(c) = Circumcenter(w)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: b ) equals LINESEGMENT: k",
    "id": 4083,
    "declarations": "b: ELLIPSE; k: LINESEGMENT",
    "facts": "ImaginaryAxis(b) = k"
},
{
    "assertion": "Coordinate ( LowerFocus ( CONICSECTION: Y ) ) equals ( Eccentricity ( CONICSECTION: S ), Intercept ( LINE: V, AXIS: yAxis ) )",
    "id": 4084,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MinorAxis ( ELLIPSE: Y ) equals LINESEGMENT: I",
    "id": 4085,
    "declarations": "Y: ELLIPSE; I: LINESEGMENT",
    "facts": "MinorAxis(Y) = I"
},
{
    "assertion": "Orthocenter ( TRIANGLE: D ) equals RightFocus ( CONICSECTION: h )",
    "id": 4086,
    "declarations": "D: TRIANGLE; h: CONICSECTION",
    "facts": "Orthocenter(D) = RightFocus(h)"
},
{
    "assertion": "LineSegmentOf ( RightFocus ( CONICSECTION: u ), Center ( CONICSECTION: s ) ) equals LINESEGMENT: L",
    "id": 4087,
    "declarations": "u: CONICSECTION; s: CONICSECTION; L: LINESEGMENT",
    "facts": "LineSegmentOf(RightFocus(u), Center(s)) = L"
},
{
    "assertion": "Between ( POINT: s, POINT: C, MidPoint ( LINESEGMENT: T ) ) equals BOOL: True",
    "id": 4088,
    "declarations": "s: POINT; C: POINT; T: LINESEGMENT; True: BOOL",
    "facts": "Between(s, C, MidPoint(T)) = True"
},
{
    "assertion": "Projection ( RightFocus ( CONICSECTION: v ), LINE: o ) equals UpperFocus ( CONICSECTION: R )",
    "id": 4089,
    "declarations": "v: CONICSECTION; o: LINE; R: CONICSECTION",
    "facts": "Projection(RightFocus(v), o) = UpperFocus(R)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: a ) equals CURVE: h",
    "id": 4090,
    "declarations": "a: HYPERBOLA; h: CURVE",
    "facts": "LeftPart(a) = h"
},
{
    "assertion": "AngleOf ( POINT: T, POINT: T, POINT: N ) equals AngleOf ( MidPoint ( LINESEGMENT: C ), Incenter ( TRIANGLE: Q ), LowerFocus ( CONICSECTION: a ) )",
    "id": 4091,
    "declarations": "T: POINT; T: POINT; N: POINT; C: LINESEGMENT; Q: TRIANGLE; a: CONICSECTION",
    "facts": "AngleOf(T, T, N) = AngleOf(MidPoint(C), Incenter(Q), LowerFocus(a))"
},
{
    "assertion": "sqrt ( Slope ( OverlappingLine ( LINESEGMENT: c ) ) ) equals NUMBER: 97",
    "id": 4092,
    "declarations": "c: LINESEGMENT; 97: NUMBER",
    "facts": "sqrt(Slope(OverlappingLine(c))) = 97"
},
{
    "assertion": "Eccentricity ( CONICSECTION: o ) equals sqrt ( lg ( NUMBER: 45 ) )",
    "id": 4093,
    "declarations": "o: CONICSECTION; 45: NUMBER",
    "facts": "Eccentricity(o) = sqrt(lg(45))"
},
{
    "assertion": "NumIntersection ( CURVE: y, Locus ( LowerVertex ( CONICSECTION: X ) ) ) equals NUMBER: -50",
    "id": 4094,
    "declarations": "y: CURVE; X: CONICSECTION; -50: NUMBER",
    "facts": "NumIntersection(y, Locus(LowerVertex(X))) = -50"
},
{
    "assertion": "PointOnCurve ( Incenter ( TRIANGLE: Y ), CURVE: V ) equals BOOL: False",
    "id": 4095,
    "declarations": "Y: TRIANGLE; V: CURVE; False: BOOL",
    "facts": "PointOnCurve(Incenter(Y), V) = False"
},
{
    "assertion": "lg ( Slope ( LeftDirectrix ( CONICSECTION: S ) ) ) equals NUMBER: 47",
    "id": 4096,
    "declarations": "S: CONICSECTION; 47: NUMBER",
    "facts": "lg(Slope(LeftDirectrix(S))) = 47"
},
{
    "assertion": "TangentOfPoint ( MidPoint ( LINESEGMENT: k ), LeftPart ( HYPERBOLA: I ) ) equals PerpendicularBisector ( LINESEGMENT: p )",
    "id": 4097,
    "declarations": "k: LINESEGMENT; I: HYPERBOLA; p: LINESEGMENT",
    "facts": "TangentOfPoint(MidPoint(k), LeftPart(I)) = PerpendicularBisector(p)"
},
{
    "assertion": "Vertex ( CONICSECTION: C ) equals FootPoint ( LINE: s, LINE: R )",
    "id": 4098,
    "declarations": "C: CONICSECTION; s: LINE; R: LINE",
    "facts": "Vertex(C) = FootPoint(s, R)"
},
{
    "assertion": "Focus ( CONICSECTION: l ) equals RightVertex ( CONICSECTION: d )",
    "id": 4099,
    "declarations": "l: CONICSECTION; d: CONICSECTION",
    "facts": "Focus(l) = RightVertex(d)"
},
{
    "assertion": "sqrt ( NUMBER: 89 ) equals FocalLength ( CONICSECTION: t )",
    "id": 4100,
    "declarations": "89: NUMBER; t: CONICSECTION",
    "facts": "sqrt(89) = FocalLength(t)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: w ) equals CIRCLE: r",
    "id": 4101,
    "declarations": "w: TRIANGLE; r: CIRCLE",
    "facts": "CircumCircle(w) = r"
},
{
    "assertion": "LeftVertex ( CONICSECTION: S ) equals Incenter ( TRIANGLE: f )",
    "id": 4102,
    "declarations": "S: CONICSECTION; f: TRIANGLE",
    "facts": "LeftVertex(S) = Incenter(f)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: d ) equals POINT: j",
    "id": 4103,
    "declarations": "d: LINESEGMENT; j: POINT",
    "facts": "MidPoint(d) = j"
},
{
    "assertion": "NumIntersection ( LeftPart ( HYPERBOLA: J ), CURVE: q ) equals Diameter ( CIRCLE: I )",
    "id": 4104,
    "declarations": "J: HYPERBOLA; q: CURVE; I: CIRCLE",
    "facts": "NumIntersection(LeftPart(J), q) = Diameter(I)"
},
{
    "assertion": "RealAxis ( ELLIPSE: P ) equals ImaginaryAxis ( ELLIPSE: X )",
    "id": 4105,
    "declarations": "P: ELLIPSE; X: ELLIPSE",
    "facts": "RealAxis(P) = ImaginaryAxis(X)"
},
{
    "assertion": "IsInTangent ( CIRCLE: l, CIRCLE: P ) equals BOOL: True",
    "id": 4106,
    "declarations": "l: CIRCLE; P: CIRCLE; True: BOOL",
    "facts": "IsInTangent(l, P) = True"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: S ) equals MinorAxis ( ELLIPSE: Q )",
    "id": 4107,
    "declarations": "S: ELLIPSE; Q: ELLIPSE",
    "facts": "ImaginaryAxis(S) = MinorAxis(Q)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: F ) equals LINE: D",
    "id": 4108,
    "declarations": "F: LINESEGMENT; D: LINE",
    "facts": "OverlappingLine(F) = D"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: Q ) equals LINE: g",
    "id": 4109,
    "declarations": "Q: LINESEGMENT; g: LINE",
    "facts": "OverlappingLine(Q) = g"
},
{
    "assertion": "Eccentricity ( CONICSECTION: J ) equals YCoordinate ( Circumcenter ( TRIANGLE: V ) )",
    "id": 4110,
    "declarations": "J: CONICSECTION; V: TRIANGLE",
    "facts": "Eccentricity(J) = YCoordinate(Circumcenter(V))"
},
{
    "assertion": "Locus ( POINT: r ) equals CURVE: e",
    "id": 4111,
    "declarations": "r: POINT; e: CURVE",
    "facts": "Locus(r) = e"
},
{
    "assertion": "Max ( sqrt ( NUMBER: -81 ) ) equals Length ( LINESEGMENT: e )",
    "id": 4112,
    "declarations": "-81: NUMBER; e: LINESEGMENT",
    "facts": "Max(sqrt(-81)) = Length(e)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: o ) equals LINE: x",
    "id": 4113,
    "declarations": "o: CONICSECTION; x: LINE",
    "facts": "RightDirectrix(o) = x"
},
{
    "assertion": "FocalLength ( CONICSECTION: d ) equals InterReciprocal ( NUMBER: -79 )",
    "id": 4114,
    "declarations": "d: CONICSECTION; -79: NUMBER",
    "facts": "FocalLength(d) = InterReciprocal(-79)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: x ) equals POINT: p",
    "id": 4115,
    "declarations": "x: CONICSECTION; p: POINT",
    "facts": "LowerFocus(x) = p"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: d ) equals Area ( CONICSECTION: M )",
    "id": 4116,
    "declarations": "d: CONICSECTION; M: CONICSECTION",
    "facts": "HalfFocalLength(d) = Area(M)"
},
{
    "assertion": "IsPerpendicular ( LINE: m, LINE: V ) equals BOOL: True",
    "id": 4117,
    "declarations": "m: LINE; V: LINE; True: BOOL",
    "facts": "IsPerpendicular(m, V) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: H ) equals HalfFocalLength ( CONICSECTION: i )",
    "id": 4118,
    "declarations": "H: CONICSECTION; i: CONICSECTION",
    "facts": "HalfFocalLength(H) = HalfFocalLength(i)"
},
{
    "assertion": "Length ( LINESEGMENT: H ) equals Distance ( POINT: x, POINT: H )",
    "id": 4119,
    "declarations": "H: LINESEGMENT; x: POINT; H: POINT",
    "facts": "Length(H) = Distance(x, H)"
},
{
    "assertion": "LocusEquation ( Projection ( POINT: q, RightDirectrix ( CONICSECTION: W ) ) ) equals EXPRESSION: x^2*space-*spacey^2*space=*space1",
    "id": 4120,
    "declarations": "q: POINT; W: CONICSECTION; x^2*space-*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(Projection(q, RightDirectrix(W))) = x^2*space-*spacey^2*space=*space1"
},
{
    "assertion": "Projection ( Circumcenter ( TRIANGLE: u ), LineOf ( LeftFocus ( CONICSECTION: b ), RightFocus ( CONICSECTION: D ) ) ) equals UpperFocus ( CONICSECTION: O )",
    "id": 4121,
    "declarations": "u: TRIANGLE; b: CONICSECTION; D: CONICSECTION; O: CONICSECTION",
    "facts": "Projection(Circumcenter(u), LineOf(LeftFocus(b), RightFocus(D))) = UpperFocus(O)"
},
{
    "assertion": "Abs ( LINESEGMENT: p ) equals FocalLength ( CONICSECTION: i )",
    "id": 4122,
    "declarations": "p: LINESEGMENT; i: CONICSECTION",
    "facts": "Abs(p) = FocalLength(i)"
},
{
    "assertion": "IsIntersect ( CURVE: W, CURVE: F ) equals BOOL: False",
    "id": 4123,
    "declarations": "W: CURVE; F: CURVE; False: BOOL",
    "facts": "IsIntersect(W, F) = False"
},
{
    "assertion": "Perimeter ( CONICSECTION: q ) equals NUMBER: 70",
    "id": 4124,
    "declarations": "q: CONICSECTION; 70: NUMBER",
    "facts": "Perimeter(q) = 70"
},
{
    "assertion": "InterceptChord ( LINE: P, CONICSECTION: p ) equals MinorAxis ( ELLIPSE: X )",
    "id": 4125,
    "declarations": "P: LINE; p: CONICSECTION; X: ELLIPSE",
    "facts": "InterceptChord(P, p) = MinorAxis(X)"
},
{
    "assertion": "RightFocus ( CONICSECTION: C ) equals POINT: o",
    "id": 4126,
    "declarations": "C: CONICSECTION; o: POINT",
    "facts": "RightFocus(C) = o"
},
{
    "assertion": "Center ( CONICSECTION: d ) equals MidPoint ( ImaginaryAxis ( ELLIPSE: Q ) )",
    "id": 4127,
    "declarations": "d: CONICSECTION; Q: ELLIPSE",
    "facts": "Center(d) = MidPoint(ImaginaryAxis(Q))"
},
{
    "assertion": "AngleOf ( POINT: Y, LeftVertex ( CONICSECTION: k ), POINT: B ) equals AngleOf ( Projection ( Projection ( POINT: k, LINE: V ), LINE: T ), LowerVertex ( CONICSECTION: C ), POINT: C )",
    "id": 4128,
    "declarations": "Y: POINT; k: CONICSECTION; B: POINT; k: POINT; V: LINE; T: LINE; C: CONICSECTION; C: POINT",
    "facts": "AngleOf(Y, LeftVertex(k), B) = AngleOf(Projection(Projection(k, V), T), LowerVertex(C), C)"
},
{
    "assertion": "LocusEquation ( LeftVertex ( CONICSECTION: E ) ) equals LocusEquation ( MidPoint ( LINESEGMENT: W ) )",
    "id": 4129,
    "declarations": "E: CONICSECTION; W: LINESEGMENT",
    "facts": "LocusEquation(LeftVertex(E)) = LocusEquation(MidPoint(W))"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: E ), TRIANGLE: F ) equals BOOL: False",
    "id": 4130,
    "declarations": "E: TRIANGLE; F: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(E), F) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: K ) equals LowerVertex ( CONICSECTION: F )",
    "id": 4131,
    "declarations": "K: CONICSECTION; F: CONICSECTION",
    "facts": "UpperFocus(K) = LowerVertex(F)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: T ) equals CURVE: U",
    "id": 4132,
    "declarations": "T: HYPERBOLA; U: CURVE",
    "facts": "LeftPart(T) = U"
},
{
    "assertion": "LowerVertex ( CONICSECTION: U ) equals POINT: c",
    "id": 4133,
    "declarations": "U: CONICSECTION; c: POINT",
    "facts": "LowerVertex(U) = c"
},
{
    "assertion": "Diameter ( CIRCLE: I ) equals YCoordinate ( Incenter ( TRIANGLE: u ) )",
    "id": 4134,
    "declarations": "I: CIRCLE; u: TRIANGLE",
    "facts": "Diameter(I) = YCoordinate(Incenter(u))"
},
{
    "assertion": "Negation ( IsOutTangent ( CIRCLE: y, CIRCLE: R ) equals BOOL: True ) equals BOOL: True",
    "id": 4135,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: J ) equals LINE: o",
    "id": 4136,
    "declarations": "J: CONICSECTION; o: LINE",
    "facts": "RightDirectrix(J) = o"
},
{
    "assertion": "LineOf ( Circumcenter ( TRIANGLE: o ), POINT: W ) equals OverlappingLine ( MajorAxis ( ELLIPSE: Q ) )",
    "id": 4137,
    "declarations": "o: TRIANGLE; W: POINT; Q: ELLIPSE",
    "facts": "LineOf(Circumcenter(o), W) = OverlappingLine(MajorAxis(Q))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: G ) equals LeftFocus ( CONICSECTION: z )",
    "id": 4138,
    "declarations": "G: CONICSECTION; z: CONICSECTION",
    "facts": "LeftVertex(G) = LeftFocus(z)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: q ) equals CIRCLE: H",
    "id": 4139,
    "declarations": "q: TRIANGLE; H: CIRCLE",
    "facts": "CircumCircle(q) = H"
},
{
    "assertion": "Asymptote ( HYPERBOLA: d ) equals LINE: F",
    "id": 4140,
    "declarations": "d: HYPERBOLA; F: LINE",
    "facts": "Asymptote(d) = F"
},
{
    "assertion": "MajorAxis ( ELLIPSE: E ) equals LINESEGMENT: N",
    "id": 4141,
    "declarations": "E: ELLIPSE; N: LINESEGMENT",
    "facts": "MajorAxis(E) = N"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: l ) equals LINE: B",
    "id": 4142,
    "declarations": "l: CONICSECTION; B: LINE",
    "facts": "LeftDirectrix(l) = B"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: s ) ) equals EXPRESSION: x^2/4*space+*spacey^2/9*space=*space1",
    "id": 4143,
    "declarations": "s: HYPERBOLA; x^2/4*space+*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "Expression(LeftPart(s)) = x^2/4*space+*spacey^2/9*space=*space1"
},
{
    "assertion": "RightFocus ( CONICSECTION: K ) equals UpperFocus ( CONICSECTION: e )",
    "id": 4144,
    "declarations": "K: CONICSECTION; e: CONICSECTION",
    "facts": "RightFocus(K) = UpperFocus(e)"
},
{
    "assertion": "RightFocus ( CONICSECTION: r ) equals LeftVertex ( CONICSECTION: f )",
    "id": 4145,
    "declarations": "r: CONICSECTION; f: CONICSECTION",
    "facts": "RightFocus(r) = LeftVertex(f)"
},
{
    "assertion": "InterceptChord ( LINE: A, CONICSECTION: i ) equals LINESEGMENT: B",
    "id": 4146,
    "declarations": "A: LINE; i: CONICSECTION; B: LINESEGMENT",
    "facts": "InterceptChord(A, i) = B"
},
{
    "assertion": "Orthocenter ( TRIANGLE: V ) equals MidPoint ( ImaginaryAxis ( ELLIPSE: Z ) )",
    "id": 4147,
    "declarations": "V: TRIANGLE; Z: ELLIPSE",
    "facts": "Orthocenter(V) = MidPoint(ImaginaryAxis(Z))"
},
{
    "assertion": "LocusEquation ( Circumcenter ( TRIANGLE: z ) ) equals EXPRESSION: y*space=*spacex^3*space-*space4*x",
    "id": 4148,
    "declarations": "z: TRIANGLE; y*space=*spacex^3*space-*space4*x: EXPRESSION",
    "facts": "LocusEquation(Circumcenter(z)) = y*space=*spacex^3*space-*space4*x"
},
{
    "assertion": "TangentPoint ( LINE: O, CIRCLE: q ) equals POINT: e",
    "id": 4149,
    "declarations": "O: LINE; q: CIRCLE; e: POINT",
    "facts": "TangentPoint(O, q) = e"
},
{
    "assertion": "PerpendicularBisector ( RealAxis ( ELLIPSE: B ) ) equals OverlappingLine ( MajorAxis ( ELLIPSE: G ) )",
    "id": 4150,
    "declarations": "B: ELLIPSE; G: ELLIPSE",
    "facts": "PerpendicularBisector(RealAxis(B)) = OverlappingLine(MajorAxis(G))"
},
{
    "assertion": "FocalLength ( CONICSECTION: h ) equals Area ( CONICSECTION: O )",
    "id": 4151,
    "declarations": "h: CONICSECTION; O: CONICSECTION",
    "facts": "FocalLength(h) = Area(O)"
},
{
    "assertion": "LineOf ( POINT: E, UpperVertex ( CONICSECTION: J ) ) equals LINE: v",
    "id": 4152,
    "declarations": "E: POINT; J: CONICSECTION; v: LINE",
    "facts": "LineOf(E, UpperVertex(J)) = v"
},
{
    "assertion": "lg ( NUMBER: 20 ) equals NUMBER: 25",
    "id": 4153,
    "declarations": "20: NUMBER; 25: NUMBER",
    "facts": "lg(20) = 25"
},
{
    "assertion": "Focus ( CONICSECTION: O ) equals POINT: C",
    "id": 4154,
    "declarations": "O: CONICSECTION; C: POINT",
    "facts": "Focus(O) = C"
},
{
    "assertion": "ApplyUnit ( NUMBER: 4, DEGREESTR: degree )",
    "id": 4155,
    "declarations": "4: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(4, degree) = None"
},
{
    "assertion": "Orthocenter ( TRIANGLE: I ) equals Center ( CONICSECTION: P )",
    "id": 4156,
    "declarations": "I: TRIANGLE; P: CONICSECTION",
    "facts": "Orthocenter(I) = Center(P)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: I ) equals LINE: p",
    "id": 4157,
    "declarations": "I: HYPERBOLA; p: LINE",
    "facts": "Asymptote(I) = p"
},
{
    "assertion": "LineOf ( POINT: q, Circumcenter ( TRIANGLE: f ) ) equals LINE: g",
    "id": 4158,
    "declarations": "q: POINT; f: TRIANGLE; g: LINE",
    "facts": "LineOf(q, Circumcenter(f)) = g"
},
{
    "assertion": "UpperVertex ( CONICSECTION: j ) equals MidPoint ( LINESEGMENT: X )",
    "id": 4159,
    "declarations": "j: CONICSECTION; X: LINESEGMENT",
    "facts": "UpperVertex(j) = MidPoint(X)"
},
{
    "assertion": "Length ( LINESEGMENT: z ) equals DotProduct ( VECTOR: L, VECTOR: t )",
    "id": 4160,
    "declarations": "z: LINESEGMENT; L: VECTOR; t: VECTOR",
    "facts": "Length(z) = DotProduct(L, t)"
},
{
    "assertion": "Length ( MajorAxis ( ELLIPSE: T ) ) equals NUMBER: 65",
    "id": 4161,
    "declarations": "T: ELLIPSE; 65: NUMBER",
    "facts": "Length(MajorAxis(T)) = 65"
},
{
    "assertion": "Focus ( CONICSECTION: R ) equals POINT: X",
    "id": 4162,
    "declarations": "R: CONICSECTION; X: POINT",
    "facts": "Focus(R) = X"
},
{
    "assertion": "FocalLength ( CONICSECTION: D ) equals NUMBER: -83",
    "id": 4163,
    "declarations": "D: CONICSECTION; -83: NUMBER",
    "facts": "FocalLength(D) = -83"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: k ) equals LINE: p",
    "id": 4164,
    "declarations": "k: CONICSECTION; p: LINE",
    "facts": "LeftDirectrix(k) = p"
},
{
    "assertion": "Diameter ( CIRCLE: Y ) equals Quadrant ( Circumcenter ( TRIANGLE: j ) )",
    "id": 4165,
    "declarations": "Y: CIRCLE; j: TRIANGLE",
    "facts": "Diameter(Y) = Quadrant(Circumcenter(j))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: Y ) equals LINE: h",
    "id": 4166,
    "declarations": "Y: HYPERBOLA; h: LINE",
    "facts": "Asymptote(Y) = h"
},
{
    "assertion": "InterceptChord ( LINE: F, CONICSECTION: r ) equals LINESEGMENT: O",
    "id": 4167,
    "declarations": "F: LINE; r: CONICSECTION; O: LINESEGMENT",
    "facts": "InterceptChord(F, r) = O"
},
{
    "assertion": "InterceptChord ( OverlappingLine ( LINESEGMENT: d ), CONICSECTION: V ) equals MinorAxis ( ELLIPSE: Z )",
    "id": 4168,
    "declarations": "d: LINESEGMENT; V: CONICSECTION; Z: ELLIPSE",
    "facts": "InterceptChord(OverlappingLine(d), V) = MinorAxis(Z)"
},
{
    "assertion": "YCoordinate ( LeftFocus ( CONICSECTION: g ) ) equals NUMBER: 82",
    "id": 4169,
    "declarations": "g: CONICSECTION; 82: NUMBER",
    "facts": "YCoordinate(LeftFocus(g)) = 82"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: h, TRIANGLE: H ) equals BOOL: False",
    "id": 4170,
    "declarations": "h: CIRCLE; H: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(h, H) = False"
},
{
    "assertion": "LocusEquation ( UpperVertex ( CONICSECTION: K ) ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 4171,
    "declarations": "K: CONICSECTION; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "LocusEquation(UpperVertex(K)) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "Center ( CONICSECTION: L ) equals POINT: Q",
    "id": 4172,
    "declarations": "L: CONICSECTION; Q: POINT",
    "facts": "Center(L) = Q"
},
{
    "assertion": "Quadrant ( POINT: q ) equals Quadrant ( UpperVertex ( CONICSECTION: D ) )",
    "id": 4173,
    "declarations": "q: POINT; D: CONICSECTION",
    "facts": "Quadrant(q) = Quadrant(UpperVertex(D))"
},
{
    "assertion": "IsIntersect ( CURVE: f, CURVE: z ) equals BOOL: False",
    "id": 4174,
    "declarations": "f: CURVE; z: CURVE; False: BOOL",
    "facts": "IsIntersect(f, z) = False"
},
{
    "assertion": "PointOnCurve ( POINT: G, CURVE: M ) equals BOOL: True",
    "id": 4175,
    "declarations": "G: POINT; M: CURVE; True: BOOL",
    "facts": "PointOnCurve(G, M) = True"
},
{
    "assertion": "UpperFocus ( CONICSECTION: u ) equals LowerFocus ( CONICSECTION: z )",
    "id": 4176,
    "declarations": "u: CONICSECTION; z: CONICSECTION",
    "facts": "UpperFocus(u) = LowerFocus(z)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: B ) equals CURVE: o",
    "id": 4177,
    "declarations": "B: HYPERBOLA; o: CURVE",
    "facts": "LeftPart(B) = o"
},
{
    "assertion": "FootPoint ( LINE: P, PerpendicularBisector ( LINESEGMENT: m ) ) equals POINT: f",
    "id": 4178,
    "declarations": "P: LINE; m: LINESEGMENT; f: POINT",
    "facts": "FootPoint(P, PerpendicularBisector(m)) = f"
},
{
    "assertion": "RightFocus ( CONICSECTION: G ) equals POINT: I",
    "id": 4179,
    "declarations": "G: CONICSECTION; I: POINT",
    "facts": "RightFocus(G) = I"
},
{
    "assertion": "LineSegmentOf ( UpperFocus ( CONICSECTION: J ), UpperVertex ( CONICSECTION: E ) ) equals ImaginaryAxis ( ELLIPSE: w )",
    "id": 4180,
    "declarations": "J: CONICSECTION; E: CONICSECTION; w: ELLIPSE",
    "facts": "LineSegmentOf(UpperFocus(J), UpperVertex(E)) = ImaginaryAxis(w)"
},
{
    "assertion": "Slope ( LINE: K ) equals Eccentricity ( CONICSECTION: g )",
    "id": 4181,
    "declarations": "K: LINE; g: CONICSECTION",
    "facts": "Slope(K) = Eccentricity(g)"
},
{
    "assertion": "IsDiameter ( InterceptChord ( LINE: O, CONICSECTION: P ), CIRCLE: y ) equals BOOL: False",
    "id": 4182,
    "declarations": "O: LINE; P: CONICSECTION; y: CIRCLE; False: BOOL",
    "facts": "IsDiameter(InterceptChord(O, P), y) = False"
},
{
    "assertion": "LeftFocus ( CONICSECTION: C ) equals POINT: n",
    "id": 4183,
    "declarations": "C: CONICSECTION; n: POINT",
    "facts": "LeftFocus(C) = n"
},
{
    "assertion": "Negation ( IsIntersect ( Locus ( LeftVertex ( CONICSECTION: t ) ), RightPart ( HYPERBOLA: M ) ) equals BOOL: False ) equals BOOL: True",
    "id": 4184,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "DotProduct ( VECTOR: f, VECTOR: x ) equals NUMBER: -5",
    "id": 4185,
    "declarations": "f: VECTOR; x: VECTOR; -5: NUMBER",
    "facts": "DotProduct(f, x) = -5"
},
{
    "assertion": "InterReciprocal ( NUMBER: 17 ) equals Diameter ( CircumCircle ( TRIANGLE: i ) )",
    "id": 4186,
    "declarations": "17: NUMBER; i: TRIANGLE",
    "facts": "InterReciprocal(17) = Diameter(CircumCircle(i))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: o ) equals RightVertex ( CONICSECTION: L )",
    "id": 4187,
    "declarations": "o: LINESEGMENT; L: CONICSECTION",
    "facts": "Endpoint(o) = RightVertex(L)"
},
{
    "assertion": "LocusEquation ( RightFocus ( CONICSECTION: j ) ) equals EXPRESSION: y*space=*spacee^x",
    "id": 4188,
    "declarations": "j: CONICSECTION; y*space=*spacee^x: EXPRESSION",
    "facts": "LocusEquation(RightFocus(j)) = y*space=*spacee^x"
},
{
    "assertion": "LowerVertex ( CONICSECTION: w ) equals UpperFocus ( CONICSECTION: F )",
    "id": 4189,
    "declarations": "w: CONICSECTION; F: CONICSECTION",
    "facts": "LowerVertex(w) = UpperFocus(F)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: z ) equals LineOf ( RightVertex ( CONICSECTION: a ), Center ( CONICSECTION: k ) )",
    "id": 4190,
    "declarations": "z: CONICSECTION; a: CONICSECTION; k: CONICSECTION",
    "facts": "LeftDirectrix(z) = LineOf(RightVertex(a), Center(k))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: P ) equals RightDirectrix ( CONICSECTION: j )",
    "id": 4191,
    "declarations": "P: HYPERBOLA; j: CONICSECTION",
    "facts": "Asymptote(P) = RightDirectrix(j)"
},
{
    "assertion": "XCoordinate ( POINT: I ) equals lg ( Quadrant ( POINT: H ) )",
    "id": 4192,
    "declarations": "I: POINT; H: POINT",
    "facts": "XCoordinate(I) = lg(Quadrant(H))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: O ) equals POINT: n",
    "id": 4193,
    "declarations": "O: CONICSECTION; n: POINT",
    "facts": "LowerVertex(O) = n"
},
{
    "assertion": "RightVertex ( CONICSECTION: Q ) equals Projection ( POINT: M, LINE: U )",
    "id": 4194,
    "declarations": "Q: CONICSECTION; M: POINT; U: LINE",
    "facts": "RightVertex(Q) = Projection(M, U)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: Z ) equals LINESEGMENT: Z",
    "id": 4195,
    "declarations": "Z: ELLIPSE; Z: LINESEGMENT",
    "facts": "MajorAxis(Z) = Z"
},
{
    "assertion": "RightFocus ( CONICSECTION: m ) equals LeftFocus ( CONICSECTION: m )",
    "id": 4196,
    "declarations": "m: CONICSECTION; m: CONICSECTION",
    "facts": "RightFocus(m) = LeftFocus(m)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: a ) equals LINE: B",
    "id": 4197,
    "declarations": "a: CONICSECTION; B: LINE",
    "facts": "RightDirectrix(a) = B"
},
{
    "assertion": "RightPart ( HYPERBOLA: g ) equals CURVE: k",
    "id": 4198,
    "declarations": "g: HYPERBOLA; k: CURVE",
    "facts": "RightPart(g) = k"
},
{
    "assertion": "Directrix ( CONICSECTION: F ) equals LINE: c",
    "id": 4199,
    "declarations": "F: CONICSECTION; c: LINE",
    "facts": "Directrix(F) = c"
},
{
    "assertion": "ApplyUnit ( FocalLength ( CONICSECTION: d ), DEGREESTR: degree )",
    "id": 4200,
    "declarations": "d: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(FocalLength(d), degree) = None"
},
{
    "assertion": "Negation ( IsChordOf ( LineSegmentOf ( POINT: M, Center ( CONICSECTION: r ) ), CONICSECTION: u ) equals BOOL: True ) equals BOOL: False",
    "id": 4201,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Length ( LINESEGMENT: h ) equals NUMBER: -13",
    "id": 4202,
    "declarations": "h: LINESEGMENT; -13: NUMBER",
    "facts": "Length(h) = -13"
},
{
    "assertion": "Radius ( CIRCLE: Z ) equals Area ( CONICSECTION: E )",
    "id": 4203,
    "declarations": "Z: CIRCLE; E: CONICSECTION",
    "facts": "Radius(Z) = Area(E)"
},
{
    "assertion": "TangentOnPoint ( Circumcenter ( TRIANGLE: W ), CURVE: C ) equals LINE: E",
    "id": 4204,
    "declarations": "W: TRIANGLE; C: CURVE; E: LINE",
    "facts": "TangentOnPoint(Circumcenter(W), C) = E"
},
{
    "assertion": "RightFocus ( CONICSECTION: D ) equals Incenter ( TRIANGLE: b )",
    "id": 4205,
    "declarations": "D: CONICSECTION; b: TRIANGLE",
    "facts": "RightFocus(D) = Incenter(b)"
},
{
    "assertion": "OverlappingLine ( RealAxis ( ELLIPSE: B ) ) equals RightDirectrix ( CONICSECTION: Z )",
    "id": 4206,
    "declarations": "B: ELLIPSE; Z: CONICSECTION",
    "facts": "OverlappingLine(RealAxis(B)) = RightDirectrix(Z)"
},
{
    "assertion": "Endpoint ( RealAxis ( ELLIPSE: m ) ) equals MidPoint ( LINESEGMENT: H )",
    "id": 4207,
    "declarations": "m: ELLIPSE; H: LINESEGMENT",
    "facts": "Endpoint(RealAxis(m)) = MidPoint(H)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: s ) equals LowerFocus ( CONICSECTION: R )",
    "id": 4208,
    "declarations": "s: CONICSECTION; R: CONICSECTION",
    "facts": "UpperVertex(s) = LowerFocus(R)"
},
{
    "assertion": "Directrix ( CONICSECTION: u ) equals LINE: O",
    "id": 4209,
    "declarations": "u: CONICSECTION; O: LINE",
    "facts": "Directrix(u) = O"
},
{
    "assertion": "XCoordinate ( Orthocenter ( TRIANGLE: W ) ) equals NUMBER: -2",
    "id": 4210,
    "declarations": "W: TRIANGLE; -2: NUMBER",
    "facts": "XCoordinate(Orthocenter(W)) = -2"
},
{
    "assertion": "sqrt ( lg ( XCoordinate ( POINT: A ) ) ) equals NUMBER: -39",
    "id": 4211,
    "declarations": "A: POINT; -39: NUMBER",
    "facts": "sqrt(lg(XCoordinate(A))) = -39"
},
{
    "assertion": "lg ( Inclination ( OverlappingLine ( LINESEGMENT: D ) ) ) equals Quadrant ( POINT: W )",
    "id": 4212,
    "declarations": "D: LINESEGMENT; W: POINT",
    "facts": "lg(Inclination(OverlappingLine(D))) = Quadrant(W)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: N, TRIANGLE: x ) equals BOOL: False",
    "id": 4213,
    "declarations": "N: CIRCLE; x: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(N, x) = False"
},
{
    "assertion": "TriangleOf ( Orthocenter ( TRIANGLE: x ), Circumcenter ( TRIANGLE: j ), POINT: f ) equals TRIANGLE: r",
    "id": 4214,
    "declarations": "x: TRIANGLE; j: TRIANGLE; f: POINT; r: TRIANGLE",
    "facts": "TriangleOf(Orthocenter(x), Circumcenter(j), f) = r"
},
{
    "assertion": "LeftFocus ( CONICSECTION: r ) equals RightFocus ( CONICSECTION: Q )",
    "id": 4215,
    "declarations": "r: CONICSECTION; Q: CONICSECTION",
    "facts": "LeftFocus(r) = RightFocus(Q)"
},
{
    "assertion": "Intercept ( LINE: y, AXIS: xAxis ) equals NUMBER: -1",
    "id": 4216,
    "declarations": "y: LINE; xAxis: AXIS; -1: NUMBER",
    "facts": "Intercept(y, xAxis) = -1"
},
{
    "assertion": "Area ( CONICSECTION: G ) equals HalfFocalLength ( CONICSECTION: y )",
    "id": 4217,
    "declarations": "G: CONICSECTION; y: CONICSECTION",
    "facts": "Area(G) = HalfFocalLength(y)"
},
{
    "assertion": "Intercept ( LINE: d, AXIS: xAxis ) equals InterReciprocal ( Inclination ( LINE: W ) )",
    "id": 4218,
    "declarations": "d: LINE; xAxis: AXIS; W: LINE",
    "facts": "Intercept(d, xAxis) = InterReciprocal(Inclination(W))"
},
{
    "assertion": "RealAxis ( ELLIPSE: J ) equals LINESEGMENT: R",
    "id": 4219,
    "declarations": "J: ELLIPSE; R: LINESEGMENT",
    "facts": "RealAxis(J) = R"
},
{
    "assertion": "CircumCircle ( TRIANGLE: G ) equals CIRCLE: e",
    "id": 4220,
    "declarations": "G: TRIANGLE; e: CIRCLE",
    "facts": "CircumCircle(G) = e"
},
{
    "assertion": "Intersection ( CURVE: h, CURVE: h ) equals LeftFocus ( CONICSECTION: p )",
    "id": 4221,
    "declarations": "h: CURVE; h: CURVE; p: CONICSECTION",
    "facts": "Intersection(h, h) = LeftFocus(p)"
},
{
    "assertion": "Diameter ( CIRCLE: E ) equals FocalLength ( CONICSECTION: O )",
    "id": 4222,
    "declarations": "E: CIRCLE; O: CONICSECTION",
    "facts": "Diameter(E) = FocalLength(O)"
},
{
    "assertion": "TangentPoint ( LeftDirectrix ( CONICSECTION: X ), CIRCLE: n ) equals POINT: z",
    "id": 4223,
    "declarations": "X: CONICSECTION; n: CIRCLE; z: POINT",
    "facts": "TangentPoint(LeftDirectrix(X), n) = z"
},
{
    "assertion": "Inclination ( LINE: A ) equals NUMBER: -48",
    "id": 4224,
    "declarations": "A: LINE; -48: NUMBER",
    "facts": "Inclination(A) = -48"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: a ) equals LINE: F",
    "id": 4225,
    "declarations": "a: CONICSECTION; F: LINE",
    "facts": "RightDirectrix(a) = F"
},
{
    "assertion": "UpperFocus ( CONICSECTION: y ) equals POINT: l",
    "id": 4226,
    "declarations": "y: CONICSECTION; l: POINT",
    "facts": "UpperFocus(y) = l"
},
{
    "assertion": "TangentOfPoint ( POINT: q, LeftPart ( HYPERBOLA: O ) ) equals LINE: p",
    "id": 4227,
    "declarations": "q: POINT; O: HYPERBOLA; p: LINE",
    "facts": "TangentOfPoint(q, LeftPart(O)) = p"
},
{
    "assertion": "ApplyUnit ( HalfFocalLength ( CONICSECTION: r ), DEGREESTR: degree )",
    "id": 4228,
    "declarations": "r: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(HalfFocalLength(r), degree) = None"
},
{
    "assertion": "InterceptChord ( LeftDirectrix ( CONICSECTION: s ), CONICSECTION: O ) equals LINESEGMENT: E",
    "id": 4229,
    "declarations": "s: CONICSECTION; O: CONICSECTION; E: LINESEGMENT",
    "facts": "InterceptChord(LeftDirectrix(s), O) = E"
},
{
    "assertion": "Coordinate ( POINT: j ) equals ( Length ( LINESEGMENT: h ), Min ( DotProduct ( VECTOR: Z, VECTOR: b ) ) )",
    "id": 4230,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "And ( IsDiameter ( LINESEGMENT: r, CircumCircle ( TRIANGLE: C ) ) equals BOOL: False, SymmetryAxis ( CONICSECTION: X ) equals AXIS: yAxis ) equals BOOL: False",
    "id": 4231,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: s, TRIANGLE: f ) equals BOOL: False",
    "id": 4232,
    "declarations": "s: CIRCLE; f: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(s, f) = False"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: L ) equals Length ( LINESEGMENT: P )",
    "id": 4233,
    "declarations": "L: CONICSECTION; P: LINESEGMENT",
    "facts": "HalfFocalLength(L) = Length(P)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: i ) equals POINT: T",
    "id": 4234,
    "declarations": "i: LINESEGMENT; T: POINT",
    "facts": "MidPoint(i) = T"
},
{
    "assertion": "Inclination ( LINE: u ) equals NUMBER: -17",
    "id": 4235,
    "declarations": "u: LINE; -17: NUMBER",
    "facts": "Inclination(u) = -17"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: J ) equals Perimeter ( CONICSECTION: v )",
    "id": 4236,
    "declarations": "J: CONICSECTION; v: CONICSECTION",
    "facts": "HalfFocalLength(J) = Perimeter(v)"
},
{
    "assertion": "Perimeter ( CONICSECTION: b ) equals HalfFocalLength ( CONICSECTION: z )",
    "id": 4237,
    "declarations": "b: CONICSECTION; z: CONICSECTION",
    "facts": "Perimeter(b) = HalfFocalLength(z)"
},
{
    "assertion": "RealAxis ( ELLIPSE: p ) equals LINESEGMENT: m",
    "id": 4238,
    "declarations": "p: ELLIPSE; m: LINESEGMENT",
    "facts": "RealAxis(p) = m"
},
{
    "assertion": "IsPerpendicular ( LINE: b, LINE: x ) equals BOOL: True",
    "id": 4239,
    "declarations": "b: LINE; x: LINE; True: BOOL",
    "facts": "IsPerpendicular(b, x) = True"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: J ) equals LINESEGMENT: l",
    "id": 4240,
    "declarations": "J: ELLIPSE; l: LINESEGMENT",
    "facts": "ImaginaryAxis(J) = l"
},
{
    "assertion": "Eccentricity ( CONICSECTION: D ) equals sqrt ( NUMBER: -2 )",
    "id": 4241,
    "declarations": "D: CONICSECTION; -2: NUMBER",
    "facts": "Eccentricity(D) = sqrt(-2)"
},
{
    "assertion": "Intersection ( CURVE: o, Locus ( POINT: U ) ) equals Center ( CONICSECTION: I )",
    "id": 4242,
    "declarations": "o: CURVE; U: POINT; I: CONICSECTION",
    "facts": "Intersection(o, Locus(U)) = Center(I)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: s ) equals Quadrant ( POINT: N )",
    "id": 4243,
    "declarations": "s: CONICSECTION; N: POINT",
    "facts": "HalfFocalLength(s) = Quadrant(N)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: y ) equals LowerFocus ( CONICSECTION: O )",
    "id": 4244,
    "declarations": "y: CONICSECTION; O: CONICSECTION",
    "facts": "LowerVertex(y) = LowerFocus(O)"
},
{
    "assertion": "Min ( Eccentricity ( CONICSECTION: q ) ) equals Abs ( LINESEGMENT: Z )",
    "id": 4245,
    "declarations": "q: CONICSECTION; Z: LINESEGMENT",
    "facts": "Min(Eccentricity(q)) = Abs(Z)"
},
{
    "assertion": "Incenter ( TRIANGLE: U ) equals POINT: B",
    "id": 4246,
    "declarations": "U: TRIANGLE; B: POINT",
    "facts": "Incenter(U) = B"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: Q, TRIANGLE: R ) equals BOOL: False",
    "id": 4247,
    "declarations": "Q: CIRCLE; R: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(Q, R) = False"
},
{
    "assertion": "Length ( LINESEGMENT: c ) equals XCoordinate ( POINT: y )",
    "id": 4248,
    "declarations": "c: LINESEGMENT; y: POINT",
    "facts": "Length(c) = XCoordinate(y)"
},
{
    "assertion": "Vertex ( CONICSECTION: G ) equals POINT: c",
    "id": 4249,
    "declarations": "G: CONICSECTION; c: POINT",
    "facts": "Vertex(G) = c"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: D ), TRIANGLE: P ) equals BOOL: True",
    "id": 4250,
    "declarations": "D: TRIANGLE; P: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(D), P) = True"
},
{
    "assertion": "IsOutTangent ( CIRCLE: P, CIRCLE: S ) equals BOOL: False",
    "id": 4251,
    "declarations": "P: CIRCLE; S: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(P, S) = False"
},
{
    "assertion": "sqrt ( Quadrant ( FootPoint ( LINE: d, LINE: g ) ) ) equals Inclination ( RightDirectrix ( CONICSECTION: B ) )",
    "id": 4252,
    "declarations": "d: LINE; g: LINE; B: CONICSECTION",
    "facts": "sqrt(Quadrant(FootPoint(d, g))) = Inclination(RightDirectrix(B))"
},
{
    "assertion": "IsChordOf ( MinorAxis ( ELLIPSE: q ), CONICSECTION: S ) equals BOOL: True",
    "id": 4253,
    "declarations": "q: ELLIPSE; S: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(MinorAxis(q), S) = True"
},
{
    "assertion": "Coordinate ( POINT: I ) equals ( Radius ( CIRCLE: M ), InterReciprocal ( sqrt ( NUMBER: 65 ) ) )",
    "id": 4254,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Perimeter ( CONICSECTION: W ) equals Quadrant ( LowerFocus ( CONICSECTION: j ) )",
    "id": 4255,
    "declarations": "W: CONICSECTION; j: CONICSECTION",
    "facts": "Perimeter(W) = Quadrant(LowerFocus(j))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: j ) equals CIRCLE: p",
    "id": 4256,
    "declarations": "j: TRIANGLE; p: CIRCLE",
    "facts": "CircumCircle(j) = p"
},
{
    "assertion": "Expression ( CURVE: O ) equals EXPRESSION: x^2*space+*space4*y^2*space=*space16",
    "id": 4257,
    "declarations": "O: CURVE; x^2*space+*space4*y^2*space=*space16: EXPRESSION",
    "facts": "Expression(O) = x^2*space+*space4*y^2*space=*space16"
},
{
    "assertion": "RightFocus ( CONICSECTION: b ) equals POINT: J",
    "id": 4258,
    "declarations": "b: CONICSECTION; J: POINT",
    "facts": "RightFocus(b) = J"
},
{
    "assertion": "Between ( MidPoint ( LINESEGMENT: y ), RightFocus ( CONICSECTION: B ), POINT: r ) equals BOOL: True",
    "id": 4259,
    "declarations": "y: LINESEGMENT; B: CONICSECTION; r: POINT; True: BOOL",
    "facts": "Between(MidPoint(y), RightFocus(B), r) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: f ) equals Quadrant ( RightFocus ( CONICSECTION: D ) )",
    "id": 4260,
    "declarations": "f: CONICSECTION; D: CONICSECTION",
    "facts": "HalfFocalLength(f) = Quadrant(RightFocus(D))"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: H ) equals LINE: m",
    "id": 4261,
    "declarations": "H: CONICSECTION; m: LINE",
    "facts": "LeftDirectrix(H) = m"
},
{
    "assertion": "ApplyUnit ( NUMBER: 96, DEGREESTR: degree )",
    "id": 4262,
    "declarations": "96: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(96, degree) = None"
},
{
    "assertion": "AngleOf ( POINT: p, LowerFocus ( CONICSECTION: W ), POINT: y ) equals AngleOf ( LeftVertex ( CONICSECTION: C ), Center ( CONICSECTION: Y ), LeftVertex ( CONICSECTION: C ) )",
    "id": 4263,
    "declarations": "p: POINT; W: CONICSECTION; y: POINT; C: CONICSECTION; Y: CONICSECTION; C: CONICSECTION",
    "facts": "AngleOf(p, LowerFocus(W), y) = AngleOf(LeftVertex(C), Center(Y), LeftVertex(C))"
},
{
    "assertion": "Negation ( Eccentricity ( CONICSECTION: D ) equals Diameter ( CIRCLE: P ) ) equals BOOL: True",
    "id": 4264,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Intercept ( LineOf ( POINT: P, POINT: S ), AXIS: xAxis ) equals NUMBER: -62",
    "id": 4265,
    "declarations": "P: POINT; S: POINT; xAxis: AXIS; -62: NUMBER",
    "facts": "Intercept(LineOf(P, S), xAxis) = -62"
},
{
    "assertion": "LeftVertex ( CONICSECTION: N ) equals LowerFocus ( CONICSECTION: D )",
    "id": 4266,
    "declarations": "N: CONICSECTION; D: CONICSECTION",
    "facts": "LeftVertex(N) = LowerFocus(D)"
},
{
    "assertion": "Abs ( LINESEGMENT: j ) equals NUMBER: -26",
    "id": 4267,
    "declarations": "j: LINESEGMENT; -26: NUMBER",
    "facts": "Abs(j) = -26"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Q ) equals POINT: O",
    "id": 4268,
    "declarations": "Q: CONICSECTION; O: POINT",
    "facts": "UpperVertex(Q) = O"
},
{
    "assertion": "Max ( lg ( Inclination ( LINE: W ) ) ) equals NUMBER: 81",
    "id": 4269,
    "declarations": "W: LINE; 81: NUMBER",
    "facts": "Max(lg(Inclination(W))) = 81"
},
{
    "assertion": "Vertex ( CONICSECTION: r ) equals LowerVertex ( CONICSECTION: k )",
    "id": 4270,
    "declarations": "r: CONICSECTION; k: CONICSECTION",
    "facts": "Vertex(r) = LowerVertex(k)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: j ) equals POINT: Y",
    "id": 4271,
    "declarations": "j: CONICSECTION; Y: POINT",
    "facts": "UpperFocus(j) = Y"
},
{
    "assertion": "UpperVertex ( CONICSECTION: h ) equals Incenter ( TRIANGLE: k )",
    "id": 4272,
    "declarations": "h: CONICSECTION; k: TRIANGLE",
    "facts": "UpperVertex(h) = Incenter(k)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: m, CONICSECTION: J ) equals BOOL: True",
    "id": 4273,
    "declarations": "m: LINESEGMENT; J: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(m, J) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: j ) equals LeftVertex ( CONICSECTION: d )",
    "id": 4274,
    "declarations": "j: TRIANGLE; d: CONICSECTION",
    "facts": "Incenter(j) = LeftVertex(d)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: r ) equals CURVE: Y",
    "id": 4275,
    "declarations": "r: HYPERBOLA; Y: CURVE",
    "facts": "LeftPart(r) = Y"
},
{
    "assertion": "Diameter ( CIRCLE: m ) equals Radius ( CIRCLE: u )",
    "id": 4276,
    "declarations": "m: CIRCLE; u: CIRCLE",
    "facts": "Diameter(m) = Radius(u)"
},
{
    "assertion": "Quadrant ( MidPoint ( LINESEGMENT: u ) ) equals NUMBER: -75",
    "id": 4277,
    "declarations": "u: LINESEGMENT; -75: NUMBER",
    "facts": "Quadrant(MidPoint(u)) = -75"
},
{
    "assertion": "InterceptChord ( LINE: g, CONICSECTION: E ) equals LINESEGMENT: N",
    "id": 4278,
    "declarations": "g: LINE; E: CONICSECTION; N: LINESEGMENT",
    "facts": "InterceptChord(g, E) = N"
},
{
    "assertion": "RightVertex ( CONICSECTION: n ) equals RightFocus ( CONICSECTION: Y )",
    "id": 4279,
    "declarations": "n: CONICSECTION; Y: CONICSECTION",
    "facts": "RightVertex(n) = RightFocus(Y)"
},
{
    "assertion": "FocalLength ( CONICSECTION: z ) equals NUMBER: -73",
    "id": 4280,
    "declarations": "z: CONICSECTION; -73: NUMBER",
    "facts": "FocalLength(z) = -73"
},
{
    "assertion": "AngleOf ( Orthocenter ( TRIANGLE: H ), POINT: X, UpperFocus ( CONICSECTION: l ) ) equals AngleOf ( POINT: c, POINT: j, POINT: g )",
    "id": 4281,
    "declarations": "H: TRIANGLE; X: POINT; l: CONICSECTION; c: POINT; j: POINT; g: POINT",
    "facts": "AngleOf(Orthocenter(H), X, UpperFocus(l)) = AngleOf(c, j, g)"
},
{
    "assertion": "LocusEquation ( LeftFocus ( CONICSECTION: P ) ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 4282,
    "declarations": "P: CONICSECTION; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "LocusEquation(LeftFocus(P)) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "RightFocus ( CONICSECTION: n ) equals RightFocus ( CONICSECTION: m )",
    "id": 4283,
    "declarations": "n: CONICSECTION; m: CONICSECTION",
    "facts": "RightFocus(n) = RightFocus(m)"
},
{
    "assertion": "IsTangent ( LINE: b, CONICSECTION: d ) equals BOOL: True",
    "id": 4284,
    "declarations": "b: LINE; d: CONICSECTION; True: BOOL",
    "facts": "IsTangent(b, d) = True"
},
{
    "assertion": "Intersection ( RightPart ( HYPERBOLA: p ), Locus ( POINT: m ) ) equals POINT: b",
    "id": 4285,
    "declarations": "p: HYPERBOLA; m: POINT; b: POINT",
    "facts": "Intersection(RightPart(p), Locus(m)) = b"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: i, TRIANGLE: u ) equals BOOL: True",
    "id": 4286,
    "declarations": "i: CIRCLE; u: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(i, u) = True"
},
{
    "assertion": "Locus ( POINT: Q ) equals Locus ( POINT: L )",
    "id": 4287,
    "declarations": "Q: POINT; L: POINT",
    "facts": "Locus(Q) = Locus(L)"
},
{
    "assertion": "Max ( NUMBER: 62 ) equals DotProduct ( VECTOR: s, VECTOR: t )",
    "id": 4288,
    "declarations": "62: NUMBER; s: VECTOR; t: VECTOR",
    "facts": "Max(62) = DotProduct(s, t)"
},
{
    "assertion": "Negation ( YCoordinate ( LeftFocus ( CONICSECTION: k ) ) equals Radius ( CIRCLE: f ) ) equals BOOL: False",
    "id": 4289,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Perimeter ( CONICSECTION: z ) equals NUMBER: -100",
    "id": 4290,
    "declarations": "z: CONICSECTION; -100: NUMBER",
    "facts": "Perimeter(z) = -100"
},
{
    "assertion": "Length ( ImaginaryAxis ( ELLIPSE: h ) ) equals FocalLength ( CONICSECTION: p )",
    "id": 4291,
    "declarations": "h: ELLIPSE; p: CONICSECTION",
    "facts": "Length(ImaginaryAxis(h)) = FocalLength(p)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Q ) equals LowerFocus ( CONICSECTION: e )",
    "id": 4292,
    "declarations": "Q: CONICSECTION; e: CONICSECTION",
    "facts": "UpperVertex(Q) = LowerFocus(e)"
},
{
    "assertion": "TangentPoint ( LINE: W, CircumCircle ( TRIANGLE: E ) ) equals POINT: g",
    "id": 4293,
    "declarations": "W: LINE; E: TRIANGLE; g: POINT",
    "facts": "TangentPoint(W, CircumCircle(E)) = g"
},
{
    "assertion": "Abs ( LINESEGMENT: N ) equals Area ( CONICSECTION: c )",
    "id": 4294,
    "declarations": "N: LINESEGMENT; c: CONICSECTION",
    "facts": "Abs(N) = Area(c)"
},
{
    "assertion": "PointOnCurve ( POINT: t, CURVE: q ) equals BOOL: True",
    "id": 4295,
    "declarations": "t: POINT; q: CURVE; True: BOOL",
    "facts": "PointOnCurve(t, q) = True"
},
{
    "assertion": "IsCircumCircle ( CircumCircle ( TRIANGLE: p ), TRIANGLE: u ) equals BOOL: True",
    "id": 4296,
    "declarations": "p: TRIANGLE; u: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(CircumCircle(p), u) = True"
},
{
    "assertion": "IsCircumCircle ( CircumCircle ( TRIANGLE: E ), TRIANGLE: Q ) equals BOOL: True",
    "id": 4297,
    "declarations": "E: TRIANGLE; Q: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(CircumCircle(E), Q) = True"
},
{
    "assertion": "MidPoint ( RealAxis ( ELLIPSE: Y ) ) equals POINT: a",
    "id": 4298,
    "declarations": "Y: ELLIPSE; a: POINT",
    "facts": "MidPoint(RealAxis(Y)) = a"
},
{
    "assertion": "PointOnCurve ( Projection ( UpperFocus ( CONICSECTION: u ), LINE: C ), CURVE: k ) equals BOOL: True",
    "id": 4299,
    "declarations": "u: CONICSECTION; C: LINE; k: CURVE; True: BOOL",
    "facts": "PointOnCurve(Projection(UpperFocus(u), C), k) = True"
},
{
    "assertion": "Locus ( POINT: E ) equals CURVE: N",
    "id": 4300,
    "declarations": "E: POINT; N: CURVE",
    "facts": "Locus(E) = N"
},
{
    "assertion": "LineOf ( POINT: d, POINT: j ) equals RightDirectrix ( CONICSECTION: n )",
    "id": 4301,
    "declarations": "d: POINT; j: POINT; n: CONICSECTION",
    "facts": "LineOf(d, j) = RightDirectrix(n)"
},
{
    "assertion": "Inclination ( TangentOnPoint ( POINT: k, Locus ( Orthocenter ( TRIANGLE: y ) ) ) ) equals NUMBER: 47",
    "id": 4302,
    "declarations": "k: POINT; y: TRIANGLE; 47: NUMBER",
    "facts": "Inclination(TangentOnPoint(k, Locus(Orthocenter(y)))) = 47"
},
{
    "assertion": "Coordinate ( POINT: j ) equals ( NumIntersection ( CURVE: I, LeftPart ( HYPERBOLA: b ) ), NUMBER: 94 )",
    "id": 4303,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "ApplyUnit ( Min ( NUMBER: 41 ), DEGREESTR: degree )",
    "id": 4304,
    "declarations": "41: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(Min(41), degree) = None"
},
{
    "assertion": "sqrt ( NUMBER: -55 ) equals sqrt ( NUMBER: -73 )",
    "id": 4305,
    "declarations": "-55: NUMBER; -73: NUMBER",
    "facts": "sqrt(-55) = sqrt(-73)"
},
{
    "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: v ) ) equals NUMBER: -10",
    "id": 4306,
    "declarations": "v: CONICSECTION; -10: NUMBER",
    "facts": "YCoordinate(UpperVertex(v)) = -10"
},
{
    "assertion": "XCoordinate ( POINT: G ) equals NUMBER: 36",
    "id": 4307,
    "declarations": "G: POINT; 36: NUMBER",
    "facts": "XCoordinate(G) = 36"
},
{
    "assertion": "LineSegmentOf ( POINT: j, POINT: f ) equals LINESEGMENT: x",
    "id": 4308,
    "declarations": "j: POINT; f: POINT; x: LINESEGMENT",
    "facts": "LineSegmentOf(j, f) = x"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: B ) equals PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: S ) )",
    "id": 4309,
    "declarations": "B: LINESEGMENT; S: ELLIPSE",
    "facts": "OverlappingLine(B) = PerpendicularBisector(ImaginaryAxis(S))"
},
{
    "assertion": "Vertex ( CONICSECTION: r ) equals RightFocus ( CONICSECTION: v )",
    "id": 4310,
    "declarations": "r: CONICSECTION; v: CONICSECTION",
    "facts": "Vertex(r) = RightFocus(v)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: T ) equals Orthocenter ( TRIANGLE: X )",
    "id": 4311,
    "declarations": "T: TRIANGLE; X: TRIANGLE",
    "facts": "Orthocenter(T) = Orthocenter(X)"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( MinorAxis ( ELLIPSE: i ) ) ) equals NUMBER: -63",
    "id": 4312,
    "declarations": "i: ELLIPSE; -63: NUMBER",
    "facts": "Inclination(PerpendicularBisector(MinorAxis(i))) = -63"
},
{
    "assertion": "Endpoint ( LINESEGMENT: e ) equals UpperVertex ( CONICSECTION: s )",
    "id": 4313,
    "declarations": "e: LINESEGMENT; s: CONICSECTION",
    "facts": "Endpoint(e) = UpperVertex(s)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: K ) equals CIRCLE: v",
    "id": 4314,
    "declarations": "K: TRIANGLE; v: CIRCLE",
    "facts": "CircumCircle(K) = v"
},
{
    "assertion": "Projection ( Incenter ( TRIANGLE: a ), LINE: D ) equals RightFocus ( CONICSECTION: N )",
    "id": 4315,
    "declarations": "a: TRIANGLE; D: LINE; N: CONICSECTION",
    "facts": "Projection(Incenter(a), D) = RightFocus(N)"
},
{
    "assertion": "NumIntersection ( CURVE: r, CURVE: E ) equals Eccentricity ( CONICSECTION: S )",
    "id": 4316,
    "declarations": "r: CURVE; E: CURVE; S: CONICSECTION",
    "facts": "NumIntersection(r, E) = Eccentricity(S)"
},
{
    "assertion": "Quadrant ( UpperVertex ( CONICSECTION: i ) ) equals NUMBER: -32",
    "id": 4317,
    "declarations": "i: CONICSECTION; -32: NUMBER",
    "facts": "Quadrant(UpperVertex(i)) = -32"
},
{
    "assertion": "LeftFocus ( CONICSECTION: v ) equals LowerFocus ( CONICSECTION: R )",
    "id": 4318,
    "declarations": "v: CONICSECTION; R: CONICSECTION",
    "facts": "LeftFocus(v) = LowerFocus(R)"
},
{
    "assertion": "RightVertex ( CONICSECTION: x ) equals POINT: n",
    "id": 4319,
    "declarations": "x: CONICSECTION; n: POINT",
    "facts": "RightVertex(x) = n"
},
{
    "assertion": "LeftPart ( HYPERBOLA: y ) equals LeftPart ( HYPERBOLA: a )",
    "id": 4320,
    "declarations": "y: HYPERBOLA; a: HYPERBOLA",
    "facts": "LeftPart(y) = LeftPart(a)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: H, CIRCLE: p ) equals BOOL: False",
    "id": 4321,
    "declarations": "H: LINESEGMENT; p: CIRCLE; False: BOOL",
    "facts": "IsDiameter(H, p) = False"
},
{
    "assertion": "RightPart ( HYPERBOLA: v ) equals CURVE: P",
    "id": 4322,
    "declarations": "v: HYPERBOLA; P: CURVE",
    "facts": "RightPart(v) = P"
},
{
    "assertion": "ApplyUnit ( NUMBER: -72, DEGREESTR: degree )",
    "id": 4323,
    "declarations": "-72: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-72, degree) = None"
},
{
    "assertion": "Quadrant ( POINT: l ) equals NUMBER: 76",
    "id": 4324,
    "declarations": "l: POINT; 76: NUMBER",
    "facts": "Quadrant(l) = 76"
},
{
    "assertion": "IsOutTangent ( CIRCLE: M, CircumCircle ( TRIANGLE: P ) ) equals BOOL: False",
    "id": 4325,
    "declarations": "M: CIRCLE; P: TRIANGLE; False: BOOL",
    "facts": "IsOutTangent(M, CircumCircle(P)) = False"
},
{
    "assertion": "MajorAxis ( ELLIPSE: M ) equals LINESEGMENT: X",
    "id": 4326,
    "declarations": "M: ELLIPSE; X: LINESEGMENT",
    "facts": "MajorAxis(M) = X"
},
{
    "assertion": "VectorOf ( UpperFocus ( CONICSECTION: E ), POINT: R ) equals VECTOR: f",
    "id": 4327,
    "declarations": "E: CONICSECTION; R: POINT; f: VECTOR",
    "facts": "VectorOf(UpperFocus(E), R) = f"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: u ) equals LINESEGMENT: A",
    "id": 4328,
    "declarations": "u: ELLIPSE; A: LINESEGMENT",
    "facts": "ImaginaryAxis(u) = A"
},
{
    "assertion": "IsInTangent ( CIRCLE: w, CIRCLE: i ) equals BOOL: True",
    "id": 4329,
    "declarations": "w: CIRCLE; i: CIRCLE; True: BOOL",
    "facts": "IsInTangent(w, i) = True"
},
{
    "assertion": "Intercept ( OverlappingLine ( LINESEGMENT: c ), AXIS: xAxis ) equals Length ( LINESEGMENT: G )",
    "id": 4330,
    "declarations": "c: LINESEGMENT; xAxis: AXIS; G: LINESEGMENT",
    "facts": "Intercept(OverlappingLine(c), xAxis) = Length(G)"
},
{
    "assertion": "Locus ( RightFocus ( CONICSECTION: E ) ) equals CURVE: S",
    "id": 4331,
    "declarations": "E: CONICSECTION; S: CURVE",
    "facts": "Locus(RightFocus(E)) = S"
},
{
    "assertion": "Distance ( LeftFocus ( CONICSECTION: r ), POINT: T ) equals DotProduct ( VECTOR: z, VECTOR: x )",
    "id": 4332,
    "declarations": "r: CONICSECTION; T: POINT; z: VECTOR; x: VECTOR",
    "facts": "Distance(LeftFocus(r), T) = DotProduct(z, x)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: d ) equals CIRCLE: U",
    "id": 4333,
    "declarations": "d: TRIANGLE; U: CIRCLE",
    "facts": "CircumCircle(d) = U"
},
{
    "assertion": "lg ( NUMBER: 90 ) equals HalfFocalLength ( CONICSECTION: l )",
    "id": 4334,
    "declarations": "90: NUMBER; l: CONICSECTION",
    "facts": "lg(90) = HalfFocalLength(l)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: e ) equals UpperVertex ( CONICSECTION: n )",
    "id": 4335,
    "declarations": "e: CONICSECTION; n: CONICSECTION",
    "facts": "LeftFocus(e) = UpperVertex(n)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: g ) equals FootPoint ( LINE: c, LINE: K )",
    "id": 4336,
    "declarations": "g: LINESEGMENT; c: LINE; K: LINE",
    "facts": "Endpoint(g) = FootPoint(c, K)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: g ) equals LINESEGMENT: B",
    "id": 4337,
    "declarations": "g: ELLIPSE; B: LINESEGMENT",
    "facts": "MajorAxis(g) = B"
},
{
    "assertion": "Length ( MinorAxis ( ELLIPSE: p ) ) equals NUMBER: 23",
    "id": 4338,
    "declarations": "p: ELLIPSE; 23: NUMBER",
    "facts": "Length(MinorAxis(p)) = 23"
},
{
    "assertion": "LineSegmentOf ( POINT: d, UpperVertex ( CONICSECTION: G ) ) equals LINESEGMENT: X",
    "id": 4339,
    "declarations": "d: POINT; G: CONICSECTION; X: LINESEGMENT",
    "facts": "LineSegmentOf(d, UpperVertex(G)) = X"
},
{
    "assertion": "VectorOf ( UpperVertex ( CONICSECTION: B ), Incenter ( TRIANGLE: P ) ) equals VECTOR: S",
    "id": 4340,
    "declarations": "B: CONICSECTION; P: TRIANGLE; S: VECTOR",
    "facts": "VectorOf(UpperVertex(B), Incenter(P)) = S"
},
{
    "assertion": "IsInTangent ( CircumCircle ( TRIANGLE: t ), CIRCLE: M ) equals BOOL: True",
    "id": 4341,
    "declarations": "t: TRIANGLE; M: CIRCLE; True: BOOL",
    "facts": "IsInTangent(CircumCircle(t), M) = True"
},
{
    "assertion": "Length ( LineSegmentOf ( LowerVertex ( CONICSECTION: L ), MidPoint ( LINESEGMENT: b ) ) ) equals NUMBER: -85",
    "id": 4342,
    "declarations": "L: CONICSECTION; b: LINESEGMENT; -85: NUMBER",
    "facts": "Length(LineSegmentOf(LowerVertex(L), MidPoint(b))) = -85"
},
{
    "assertion": "TangentPoint ( RightDirectrix ( CONICSECTION: x ), CIRCLE: z ) equals Center ( CONICSECTION: i )",
    "id": 4343,
    "declarations": "x: CONICSECTION; z: CIRCLE; i: CONICSECTION",
    "facts": "TangentPoint(RightDirectrix(x), z) = Center(i)"
},
{
    "assertion": "And ( Negation ( RightDirectrix ( CONICSECTION: x ) equals OverlappingLine ( LINESEGMENT: C ) ) equals BOOL: True, IsTangent ( PerpendicularBisector ( LINESEGMENT: d ), CONICSECTION: x ) equals BOOL: False ) equals BOOL: False",
    "id": 4344,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: f ) equals RightDirectrix ( CONICSECTION: l )",
    "id": 4345,
    "declarations": "f: CONICSECTION; l: CONICSECTION",
    "facts": "LeftDirectrix(f) = RightDirectrix(l)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: R ) equals LeftDirectrix ( CONICSECTION: L )",
    "id": 4346,
    "declarations": "R: CONICSECTION; L: CONICSECTION",
    "facts": "RightDirectrix(R) = LeftDirectrix(L)"
},
{
    "assertion": "IsInTangent ( CIRCLE: o, CIRCLE: f ) equals BOOL: False",
    "id": 4347,
    "declarations": "o: CIRCLE; f: CIRCLE; False: BOOL",
    "facts": "IsInTangent(o, f) = False"
},
{
    "assertion": "Length ( LINESEGMENT: D ) equals NUMBER: 29",
    "id": 4348,
    "declarations": "D: LINESEGMENT; 29: NUMBER",
    "facts": "Length(D) = 29"
},
{
    "assertion": "Length ( LINESEGMENT: q ) equals HalfFocalLength ( CONICSECTION: c )",
    "id": 4349,
    "declarations": "q: LINESEGMENT; c: CONICSECTION",
    "facts": "Length(q) = HalfFocalLength(c)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: k ) equals LowerVertex ( CONICSECTION: I )",
    "id": 4350,
    "declarations": "k: TRIANGLE; I: CONICSECTION",
    "facts": "Circumcenter(k) = LowerVertex(I)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: D ) equals LINE: T",
    "id": 4351,
    "declarations": "D: LINESEGMENT; T: LINE",
    "facts": "OverlappingLine(D) = T"
},
{
    "assertion": "Abs ( LINESEGMENT: y ) equals NUMBER: 0",
    "id": 4352,
    "declarations": "y: LINESEGMENT; 0: NUMBER",
    "facts": "Abs(y) = 0"
},
{
    "assertion": "Slope ( LINE: r ) equals FocalLength ( CONICSECTION: e )",
    "id": 4353,
    "declarations": "r: LINE; e: CONICSECTION",
    "facts": "Slope(r) = FocalLength(e)"
},
{
    "assertion": "TangentOnPoint ( POINT: A, CURVE: v ) equals LINE: Z",
    "id": 4354,
    "declarations": "A: POINT; v: CURVE; Z: LINE",
    "facts": "TangentOnPoint(A, v) = Z"
},
{
    "assertion": "RightFocus ( CONICSECTION: r ) equals RightFocus ( CONICSECTION: B )",
    "id": 4355,
    "declarations": "r: CONICSECTION; B: CONICSECTION",
    "facts": "RightFocus(r) = RightFocus(B)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: a ) equals LINE: L",
    "id": 4356,
    "declarations": "a: LINESEGMENT; L: LINE",
    "facts": "OverlappingLine(a) = L"
},
{
    "assertion": "RightPart ( HYPERBOLA: v ) equals LeftPart ( HYPERBOLA: x )",
    "id": 4357,
    "declarations": "v: HYPERBOLA; x: HYPERBOLA",
    "facts": "RightPart(v) = LeftPart(x)"
},
{
    "assertion": "RealAxis ( ELLIPSE: S ) equals MinorAxis ( ELLIPSE: x )",
    "id": 4358,
    "declarations": "S: ELLIPSE; x: ELLIPSE",
    "facts": "RealAxis(S) = MinorAxis(x)"
},
{
    "assertion": "Area ( CONICSECTION: G ) equals Perimeter ( CONICSECTION: e )",
    "id": 4359,
    "declarations": "G: CONICSECTION; e: CONICSECTION",
    "facts": "Area(G) = Perimeter(e)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: j ) equals POINT: V",
    "id": 4360,
    "declarations": "j: CONICSECTION; V: POINT",
    "facts": "LowerVertex(j) = V"
},
{
    "assertion": "Vertex ( CONICSECTION: M ) equals UpperVertex ( CONICSECTION: m )",
    "id": 4361,
    "declarations": "M: CONICSECTION; m: CONICSECTION",
    "facts": "Vertex(M) = UpperVertex(m)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: l ) equals POINT: a",
    "id": 4362,
    "declarations": "l: LINESEGMENT; a: POINT",
    "facts": "MidPoint(l) = a"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: Z ) equals LeftDirectrix ( CONICSECTION: o )",
    "id": 4363,
    "declarations": "Z: LINESEGMENT; o: CONICSECTION",
    "facts": "PerpendicularBisector(Z) = LeftDirectrix(o)"
},
{
    "assertion": "TangentPoint ( TangentOfPoint ( LowerFocus ( CONICSECTION: X ), RightPart ( HYPERBOLA: S ) ), CIRCLE: m ) equals POINT: x",
    "id": 4364,
    "declarations": "X: CONICSECTION; S: HYPERBOLA; m: CIRCLE; x: POINT",
    "facts": "TangentPoint(TangentOfPoint(LowerFocus(X), RightPart(S)), m) = x"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: j ) equals InterReciprocal ( NUMBER: 55 )",
    "id": 4365,
    "declarations": "j: CONICSECTION; 55: NUMBER",
    "facts": "HalfFocalLength(j) = InterReciprocal(55)"
},
{
    "assertion": "IsInTangent ( CIRCLE: q, CIRCLE: l ) equals BOOL: True",
    "id": 4366,
    "declarations": "q: CIRCLE; l: CIRCLE; True: BOOL",
    "facts": "IsInTangent(q, l) = True"
},
{
    "assertion": "Asymptote ( HYPERBOLA: c ) equals RightDirectrix ( CONICSECTION: C )",
    "id": 4367,
    "declarations": "c: HYPERBOLA; C: CONICSECTION",
    "facts": "Asymptote(c) = RightDirectrix(C)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: g, CIRCLE: l ) equals BOOL: True",
    "id": 4368,
    "declarations": "g: CIRCLE; l: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(g, l) = True"
},
{
    "assertion": "RealAxis ( ELLIPSE: r ) equals MajorAxis ( ELLIPSE: P )",
    "id": 4369,
    "declarations": "r: ELLIPSE; P: ELLIPSE",
    "facts": "RealAxis(r) = MajorAxis(P)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: G ) equals LINE: R",
    "id": 4370,
    "declarations": "G: CONICSECTION; R: LINE",
    "facts": "LeftDirectrix(G) = R"
},
{
    "assertion": "Perimeter ( CONICSECTION: f ) equals NUMBER: 6",
    "id": 4371,
    "declarations": "f: CONICSECTION; 6: NUMBER",
    "facts": "Perimeter(f) = 6"
},
{
    "assertion": "Inclination ( LINE: p ) equals Quadrant ( RightVertex ( CONICSECTION: E ) )",
    "id": 4372,
    "declarations": "p: LINE; E: CONICSECTION",
    "facts": "Inclination(p) = Quadrant(RightVertex(E))"
},
{
    "assertion": "RightFocus ( CONICSECTION: Z ) equals LowerVertex ( CONICSECTION: D )",
    "id": 4373,
    "declarations": "Z: CONICSECTION; D: CONICSECTION",
    "facts": "RightFocus(Z) = LowerVertex(D)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: x ) equals POINT: Q",
    "id": 4374,
    "declarations": "x: CONICSECTION; Q: POINT",
    "facts": "LeftVertex(x) = Q"
},
{
    "assertion": "CircumCircle ( TRIANGLE: x ) equals CIRCLE: d",
    "id": 4375,
    "declarations": "x: TRIANGLE; d: CIRCLE",
    "facts": "CircumCircle(x) = d"
},
{
    "assertion": "Projection ( MidPoint ( ImaginaryAxis ( ELLIPSE: y ) ), LINE: e ) equals POINT: L",
    "id": 4376,
    "declarations": "y: ELLIPSE; e: LINE; L: POINT",
    "facts": "Projection(MidPoint(ImaginaryAxis(y)), e) = L"
},
{
    "assertion": "MajorAxis ( ELLIPSE: c ) equals LINESEGMENT: W",
    "id": 4377,
    "declarations": "c: ELLIPSE; W: LINESEGMENT",
    "facts": "MajorAxis(c) = W"
},
{
    "assertion": "Endpoint ( LINESEGMENT: p ) equals RightFocus ( CONICSECTION: u )",
    "id": 4378,
    "declarations": "p: LINESEGMENT; u: CONICSECTION",
    "facts": "Endpoint(p) = RightFocus(u)"
},
{
    "assertion": "Locus ( Center ( CONICSECTION: k ) ) equals CURVE: N",
    "id": 4379,
    "declarations": "k: CONICSECTION; N: CURVE",
    "facts": "Locus(Center(k)) = N"
},
{
    "assertion": "IsPerpendicular ( LeftDirectrix ( CONICSECTION: p ), LINE: A ) equals BOOL: False",
    "id": 4380,
    "declarations": "p: CONICSECTION; A: LINE; False: BOOL",
    "facts": "IsPerpendicular(LeftDirectrix(p), A) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: E ) equals POINT: t",
    "id": 4381,
    "declarations": "E: TRIANGLE; t: POINT",
    "facts": "Incenter(E) = t"
},
{
    "assertion": "YCoordinate ( Incenter ( TRIANGLE: w ) ) equals YCoordinate ( LowerFocus ( CONICSECTION: y ) )",
    "id": 4382,
    "declarations": "w: TRIANGLE; y: CONICSECTION",
    "facts": "YCoordinate(Incenter(w)) = YCoordinate(LowerFocus(y))"
},
{
    "assertion": "AngleOf ( LeftVertex ( CONICSECTION: T ), Circumcenter ( TRIANGLE: o ), Circumcenter ( TRIANGLE: q ) ) equals ApplyUnit ( InterReciprocal ( InterReciprocal ( Radius ( CIRCLE: T ) ) ), DEGREESTR: degree )",
    "id": 4383,
    "declarations": "T: CONICSECTION; o: TRIANGLE; q: TRIANGLE; T: CIRCLE; degree: DEGREESTR",
    "facts": "AngleOf(LeftVertex(T), Circumcenter(o), Circumcenter(q)) = ApplyUnit(InterReciprocal(InterReciprocal(Radius(T))), degree)"
},
{
    "assertion": "TangentPoint ( TangentOfPoint ( POINT: B, CURVE: R ), CIRCLE: Z ) equals RightVertex ( CONICSECTION: s )",
    "id": 4384,
    "declarations": "B: POINT; R: CURVE; Z: CIRCLE; s: CONICSECTION",
    "facts": "TangentPoint(TangentOfPoint(B, R), Z) = RightVertex(s)"
},
{
    "assertion": "Expression ( CURVE: i ) equals EXPRESSION: x^2*space+*space2y^2*space=*space8",
    "id": 4385,
    "declarations": "i: CURVE; x^2*space+*space2y^2*space=*space8: EXPRESSION",
    "facts": "Expression(i) = x^2*space+*space2y^2*space=*space8"
},
{
    "assertion": "Expression ( CURVE: l ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 4386,
    "declarations": "l: CURVE; y*space=*spacesin(x): EXPRESSION",
    "facts": "Expression(l) = y*space=*spacesin(x)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: H ) equals CIRCLE: V",
    "id": 4387,
    "declarations": "H: TRIANGLE; V: CIRCLE",
    "facts": "CircumCircle(H) = V"
},
{
    "assertion": "RealAxis ( ELLIPSE: j ) equals ImaginaryAxis ( ELLIPSE: c )",
    "id": 4388,
    "declarations": "j: ELLIPSE; c: ELLIPSE",
    "facts": "RealAxis(j) = ImaginaryAxis(c)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: y ) equals LINESEGMENT: l",
    "id": 4389,
    "declarations": "y: ELLIPSE; l: LINESEGMENT",
    "facts": "MinorAxis(y) = l"
},
{
    "assertion": "LineSegmentOf ( POINT: k, UpperVertex ( CONICSECTION: y ) ) equals MajorAxis ( ELLIPSE: W )",
    "id": 4390,
    "declarations": "k: POINT; y: CONICSECTION; W: ELLIPSE",
    "facts": "LineSegmentOf(k, UpperVertex(y)) = MajorAxis(W)"
},
{
    "assertion": "TangentOfPoint ( UpperVertex ( CONICSECTION: V ), CURVE: m ) equals PerpendicularBisector ( RealAxis ( ELLIPSE: X ) )",
    "id": 4391,
    "declarations": "V: CONICSECTION; m: CURVE; X: ELLIPSE",
    "facts": "TangentOfPoint(UpperVertex(V), m) = PerpendicularBisector(RealAxis(X))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: G ) equals PerpendicularBisector ( InterceptChord ( LINE: j, CONICSECTION: V ) )",
    "id": 4392,
    "declarations": "G: HYPERBOLA; j: LINE; V: CONICSECTION",
    "facts": "Asymptote(G) = PerpendicularBisector(InterceptChord(j, V))"
},
{
    "assertion": "Perimeter ( CONICSECTION: L ) equals Length ( LINESEGMENT: Q )",
    "id": 4393,
    "declarations": "L: CONICSECTION; Q: LINESEGMENT",
    "facts": "Perimeter(L) = Length(Q)"
},
{
    "assertion": "InterReciprocal ( InterReciprocal ( NUMBER: -9 ) ) equals NUMBER: -4",
    "id": 4394,
    "declarations": "-9: NUMBER; -4: NUMBER",
    "facts": "InterReciprocal(InterReciprocal(-9)) = -4"
},
{
    "assertion": "Locus ( MidPoint ( RealAxis ( ELLIPSE: P ) ) ) equals CURVE: h",
    "id": 4395,
    "declarations": "P: ELLIPSE; h: CURVE",
    "facts": "Locus(MidPoint(RealAxis(P))) = h"
},
{
    "assertion": "And ( LeftDirectrix ( CONICSECTION: q ) equals LINE: l, Incenter ( TRIANGLE: L ) equals POINT: R ) equals BOOL: True",
    "id": 4396,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightPart ( HYPERBOLA: K ) equals CURVE: g",
    "id": 4397,
    "declarations": "K: HYPERBOLA; g: CURVE",
    "facts": "RightPart(K) = g"
},
{
    "assertion": "MidPoint ( RealAxis ( ELLIPSE: B ) ) equals Center ( CONICSECTION: P )",
    "id": 4398,
    "declarations": "B: ELLIPSE; P: CONICSECTION",
    "facts": "MidPoint(RealAxis(B)) = Center(P)"
},
{
    "assertion": "Directrix ( CONICSECTION: Q ) equals LeftDirectrix ( CONICSECTION: B )",
    "id": 4399,
    "declarations": "Q: CONICSECTION; B: CONICSECTION",
    "facts": "Directrix(Q) = LeftDirectrix(B)"
},
{
    "assertion": "TangentOnPoint ( POINT: M, CURVE: Z ) equals LINE: T",
    "id": 4400,
    "declarations": "M: POINT; Z: CURVE; T: LINE",
    "facts": "TangentOnPoint(M, Z) = T"
},
{
    "assertion": "LowerFocus ( CONICSECTION: C ) equals POINT: x",
    "id": 4401,
    "declarations": "C: CONICSECTION; x: POINT",
    "facts": "LowerFocus(C) = x"
},
{
    "assertion": "Distance ( RightFocus ( CONICSECTION: u ), LowerVertex ( CONICSECTION: p ) ) equals Area ( CONICSECTION: y )",
    "id": 4402,
    "declarations": "u: CONICSECTION; p: CONICSECTION; y: CONICSECTION",
    "facts": "Distance(RightFocus(u), LowerVertex(p)) = Area(y)"
},
{
    "assertion": "RightPart ( HYPERBOLA: X ) equals CURVE: Y",
    "id": 4403,
    "declarations": "X: HYPERBOLA; Y: CURVE",
    "facts": "RightPart(X) = Y"
},
{
    "assertion": "Circumcenter ( TRIANGLE: I ) equals FootPoint ( RightDirectrix ( CONICSECTION: U ), LINE: C )",
    "id": 4404,
    "declarations": "I: TRIANGLE; U: CONICSECTION; C: LINE",
    "facts": "Circumcenter(I) = FootPoint(RightDirectrix(U), C)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: m ) equals Circumcenter ( TRIANGLE: s )",
    "id": 4405,
    "declarations": "m: CONICSECTION; s: TRIANGLE",
    "facts": "UpperVertex(m) = Circumcenter(s)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: C ) equals sqrt ( lg ( YCoordinate ( LowerFocus ( CONICSECTION: S ) ) ) )",
    "id": 4406,
    "declarations": "C: CONICSECTION; S: CONICSECTION",
    "facts": "Eccentricity(C) = sqrt(lg(YCoordinate(LowerFocus(S))))"
},
{
    "assertion": "Perimeter ( CONICSECTION: j ) equals NUMBER: 11",
    "id": 4407,
    "declarations": "j: CONICSECTION; 11: NUMBER",
    "facts": "Perimeter(j) = 11"
},
{
    "assertion": "XCoordinate ( POINT: N ) equals NUMBER: -48",
    "id": 4408,
    "declarations": "N: POINT; -48: NUMBER",
    "facts": "XCoordinate(N) = -48"
},
{
    "assertion": "Directrix ( CONICSECTION: u ) equals PerpendicularBisector ( LINESEGMENT: y )",
    "id": 4409,
    "declarations": "u: CONICSECTION; y: LINESEGMENT",
    "facts": "Directrix(u) = PerpendicularBisector(y)"
},
{
    "assertion": "RightFocus ( CONICSECTION: E ) equals LeftVertex ( CONICSECTION: o )",
    "id": 4410,
    "declarations": "E: CONICSECTION; o: CONICSECTION",
    "facts": "RightFocus(E) = LeftVertex(o)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: P ) equals CURVE: v",
    "id": 4411,
    "declarations": "P: HYPERBOLA; v: CURVE",
    "facts": "LeftPart(P) = v"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: W, TRIANGLE: v ) equals BOOL: False",
    "id": 4412,
    "declarations": "W: CIRCLE; v: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(W, v) = False"
},
{
    "assertion": "LocusEquation ( RightFocus ( CONICSECTION: h ) ) equals EXPRESSION: x^2*space-*spacey^2*space=*space1",
    "id": 4413,
    "declarations": "h: CONICSECTION; x^2*space-*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(RightFocus(h)) = x^2*space-*spacey^2*space=*space1"
},
{
    "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: W ) ) equals NUMBER: -68",
    "id": 4414,
    "declarations": "W: CONICSECTION; -68: NUMBER",
    "facts": "YCoordinate(UpperVertex(W)) = -68"
},
{
    "assertion": "FootPoint ( LINE: I, LINE: r ) equals UpperFocus ( CONICSECTION: N )",
    "id": 4415,
    "declarations": "I: LINE; r: LINE; N: CONICSECTION",
    "facts": "FootPoint(I, r) = UpperFocus(N)"
},
{
    "assertion": "NumIntersection ( CURVE: p, RightPart ( HYPERBOLA: Q ) ) equals Diameter ( CIRCLE: K )",
    "id": 4416,
    "declarations": "p: CURVE; Q: HYPERBOLA; K: CIRCLE",
    "facts": "NumIntersection(p, RightPart(Q)) = Diameter(K)"
},
{
    "assertion": "Abs ( LineSegmentOf ( POINT: e, Incenter ( TRIANGLE: V ) ) ) equals FocalLength ( CONICSECTION: N )",
    "id": 4417,
    "declarations": "e: POINT; V: TRIANGLE; N: CONICSECTION",
    "facts": "Abs(LineSegmentOf(e, Incenter(V))) = FocalLength(N)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: b ) equals POINT: n",
    "id": 4418,
    "declarations": "b: CONICSECTION; n: POINT",
    "facts": "LeftFocus(b) = n"
},
{
    "assertion": "DotProduct ( VECTOR: F, VECTOR: k ) equals Length ( LINESEGMENT: j )",
    "id": 4419,
    "declarations": "F: VECTOR; k: VECTOR; j: LINESEGMENT",
    "facts": "DotProduct(F, k) = Length(j)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: U ) equals PerpendicularBisector ( LINESEGMENT: u )",
    "id": 4420,
    "declarations": "U: HYPERBOLA; u: LINESEGMENT",
    "facts": "Asymptote(U) = PerpendicularBisector(u)"
},
{
    "assertion": "LineSegmentOf ( RightFocus ( CONICSECTION: Q ), LeftFocus ( CONICSECTION: X ) ) equals LINESEGMENT: E",
    "id": 4421,
    "declarations": "Q: CONICSECTION; X: CONICSECTION; E: LINESEGMENT",
    "facts": "LineSegmentOf(RightFocus(Q), LeftFocus(X)) = E"
},
{
    "assertion": "YCoordinate ( POINT: W ) equals NUMBER: -65",
    "id": 4422,
    "declarations": "W: POINT; -65: NUMBER",
    "facts": "YCoordinate(W) = -65"
},
{
    "assertion": "RightFocus ( CONICSECTION: c ) equals POINT: h",
    "id": 4423,
    "declarations": "c: CONICSECTION; h: POINT",
    "facts": "RightFocus(c) = h"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: T ) equals LINE: t",
    "id": 4424,
    "declarations": "T: CONICSECTION; t: LINE",
    "facts": "LeftDirectrix(T) = t"
},
{
    "assertion": "Slope ( LINE: o ) equals HalfFocalLength ( CONICSECTION: O )",
    "id": 4425,
    "declarations": "o: LINE; O: CONICSECTION",
    "facts": "Slope(o) = HalfFocalLength(O)"
},
{
    "assertion": "Length ( LineSegmentOf ( POINT: r, LeftVertex ( CONICSECTION: I ) ) ) equals Eccentricity ( CONICSECTION: Y )",
    "id": 4426,
    "declarations": "r: POINT; I: CONICSECTION; Y: CONICSECTION",
    "facts": "Length(LineSegmentOf(r, LeftVertex(I))) = Eccentricity(Y)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: U ) equals Incenter ( TRIANGLE: u )",
    "id": 4427,
    "declarations": "U: CONICSECTION; u: TRIANGLE",
    "facts": "LeftFocus(U) = Incenter(u)"
},
{
    "assertion": "Distance ( RightFocus ( CONICSECTION: W ), UpperFocus ( CONICSECTION: a ) ) equals NUMBER: -86",
    "id": 4428,
    "declarations": "W: CONICSECTION; a: CONICSECTION; -86: NUMBER",
    "facts": "Distance(RightFocus(W), UpperFocus(a)) = -86"
},
{
    "assertion": "PointOnCurve ( POINT: p, CURVE: R ) equals BOOL: True",
    "id": 4429,
    "declarations": "p: POINT; R: CURVE; True: BOOL",
    "facts": "PointOnCurve(p, R) = True"
},
{
    "assertion": "Asymptote ( HYPERBOLA: a ) equals LINE: o",
    "id": 4430,
    "declarations": "a: HYPERBOLA; o: LINE",
    "facts": "Asymptote(a) = o"
},
{
    "assertion": "Radius ( CIRCLE: w ) equals Eccentricity ( CONICSECTION: M )",
    "id": 4431,
    "declarations": "w: CIRCLE; M: CONICSECTION",
    "facts": "Radius(w) = Eccentricity(M)"
},
{
    "assertion": "LineSegmentOf ( POINT: u, LowerVertex ( CONICSECTION: H ) ) equals LINESEGMENT: p",
    "id": 4432,
    "declarations": "u: POINT; H: CONICSECTION; p: LINESEGMENT",
    "facts": "LineSegmentOf(u, LowerVertex(H)) = p"
},
{
    "assertion": "ApplyUnit ( lg ( NUMBER: -87 ), DEGREESTR: degree )",
    "id": 4433,
    "declarations": "-87: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(lg(-87), degree) = None"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: w, TRIANGLE: G ) equals BOOL: True",
    "id": 4434,
    "declarations": "w: CIRCLE; G: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(w, G) = True"
},
{
    "assertion": "Focus ( CONICSECTION: T ) equals Incenter ( TRIANGLE: B )",
    "id": 4435,
    "declarations": "T: CONICSECTION; B: TRIANGLE",
    "facts": "Focus(T) = Incenter(B)"
},
{
    "assertion": "Locus ( POINT: G ) equals CURVE: s",
    "id": 4436,
    "declarations": "G: POINT; s: CURVE",
    "facts": "Locus(G) = s"
},
{
    "assertion": "IsTangent ( TangentOfPoint ( POINT: R, CURVE: w ), CONICSECTION: j ) equals BOOL: True",
    "id": 4437,
    "declarations": "R: POINT; w: CURVE; j: CONICSECTION; True: BOOL",
    "facts": "IsTangent(TangentOfPoint(R, w), j) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: D ) equals POINT: z",
    "id": 4438,
    "declarations": "D: CONICSECTION; z: POINT",
    "facts": "LeftFocus(D) = z"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: e, TRIANGLE: F ) equals BOOL: False",
    "id": 4439,
    "declarations": "e: CIRCLE; F: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(e, F) = False"
},
{
    "assertion": "Min ( sqrt ( XCoordinate ( POINT: S ) ) ) equals Length ( InterceptChord ( LINE: O, CONICSECTION: C ) )",
    "id": 4440,
    "declarations": "S: POINT; O: LINE; C: CONICSECTION",
    "facts": "Min(sqrt(XCoordinate(S))) = Length(InterceptChord(O, C))"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: s, CONICSECTION: p ) equals BOOL: True",
    "id": 4441,
    "declarations": "s: LINESEGMENT; p: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(s, p) = True"
},
{
    "assertion": "Min ( YCoordinate ( POINT: S ) ) equals HalfFocalLength ( CONICSECTION: J )",
    "id": 4442,
    "declarations": "S: POINT; J: CONICSECTION",
    "facts": "Min(YCoordinate(S)) = HalfFocalLength(J)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: u ) equals Incenter ( TRIANGLE: N )",
    "id": 4443,
    "declarations": "u: CONICSECTION; N: TRIANGLE",
    "facts": "UpperFocus(u) = Incenter(N)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: G ) equals POINT: w",
    "id": 4444,
    "declarations": "G: CONICSECTION; w: POINT",
    "facts": "UpperVertex(G) = w"
},
{
    "assertion": "DotProduct ( VECTOR: b, VECTOR: K ) equals NUMBER: 5",
    "id": 4445,
    "declarations": "b: VECTOR; K: VECTOR; 5: NUMBER",
    "facts": "DotProduct(b, K) = 5"
},
{
    "assertion": "LeftFocus ( CONICSECTION: U ) equals POINT: z",
    "id": 4446,
    "declarations": "U: CONICSECTION; z: POINT",
    "facts": "LeftFocus(U) = z"
},
{
    "assertion": "LeftVertex ( CONICSECTION: L ) equals FootPoint ( PerpendicularBisector ( LINESEGMENT: q ), LINE: G )",
    "id": 4447,
    "declarations": "L: CONICSECTION; q: LINESEGMENT; G: LINE",
    "facts": "LeftVertex(L) = FootPoint(PerpendicularBisector(q), G)"
},
{
    "assertion": "Min ( NUMBER: -85 ) equals Inclination ( LINE: t )",
    "id": 4448,
    "declarations": "-85: NUMBER; t: LINE",
    "facts": "Min(-85) = Inclination(t)"
},
{
    "assertion": "Inclination ( LINE: D ) equals NUMBER: -23",
    "id": 4449,
    "declarations": "D: LINE; -23: NUMBER",
    "facts": "Inclination(D) = -23"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: q ) equals LeftDirectrix ( CONICSECTION: X )",
    "id": 4450,
    "declarations": "q: CONICSECTION; X: CONICSECTION",
    "facts": "LeftDirectrix(q) = LeftDirectrix(X)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Q ) equals RightVertex ( CONICSECTION: W )",
    "id": 4451,
    "declarations": "Q: CONICSECTION; W: CONICSECTION",
    "facts": "UpperVertex(Q) = RightVertex(W)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: a ) equals LeftDirectrix ( CONICSECTION: i )",
    "id": 4452,
    "declarations": "a: LINESEGMENT; i: CONICSECTION",
    "facts": "PerpendicularBisector(a) = LeftDirectrix(i)"
},
{
    "assertion": "InterReciprocal ( YCoordinate ( RightFocus ( CONICSECTION: t ) ) ) equals Slope ( TangentOfPoint ( POINT: S, CURVE: Q ) )",
    "id": 4453,
    "declarations": "t: CONICSECTION; S: POINT; Q: CURVE",
    "facts": "InterReciprocal(YCoordinate(RightFocus(t))) = Slope(TangentOfPoint(S, Q))"
},
{
    "assertion": "MidPoint ( LINESEGMENT: v ) equals LowerFocus ( CONICSECTION: D )",
    "id": 4454,
    "declarations": "v: LINESEGMENT; D: CONICSECTION",
    "facts": "MidPoint(v) = LowerFocus(D)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: S ) equals LINE: z",
    "id": 4455,
    "declarations": "S: CONICSECTION; z: LINE",
    "facts": "LeftDirectrix(S) = z"
},
{
    "assertion": "RightFocus ( CONICSECTION: v ) equals MidPoint ( LINESEGMENT: G )",
    "id": 4456,
    "declarations": "v: CONICSECTION; G: LINESEGMENT",
    "facts": "RightFocus(v) = MidPoint(G)"
},
{
    "assertion": "Coordinate ( UpperVertex ( CONICSECTION: l ) ) equals ( NUMBER: -77, NUMBER: 51 )",
    "id": 4457,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LowerFocus ( CONICSECTION: o ) equals POINT: x",
    "id": 4458,
    "declarations": "o: CONICSECTION; x: POINT",
    "facts": "LowerFocus(o) = x"
},
{
    "assertion": "Center ( CONICSECTION: D ) equals LowerFocus ( CONICSECTION: i )",
    "id": 4459,
    "declarations": "D: CONICSECTION; i: CONICSECTION",
    "facts": "Center(D) = LowerFocus(i)"
},
{
    "assertion": "And ( LeftDirectrix ( CONICSECTION: e ) equals LINE: J, Coordinate ( LeftVertex ( CONICSECTION: R ) ) equals ( InterReciprocal ( Distance ( MidPoint ( LineSegmentOf ( POINT: u, POINT: o ) ), POINT: k ) ), NUMBER: -23 ) ) equals BOOL: True",
    "id": 4460,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LowerVertex ( CONICSECTION: j ) equals LeftVertex ( CONICSECTION: r )",
    "id": 4461,
    "declarations": "j: CONICSECTION; r: CONICSECTION",
    "facts": "LowerVertex(j) = LeftVertex(r)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: j ) equals Projection ( RightFocus ( CONICSECTION: e ), LINE: F )",
    "id": 4462,
    "declarations": "j: TRIANGLE; e: CONICSECTION; F: LINE",
    "facts": "Circumcenter(j) = Projection(RightFocus(e), F)"
},
{
    "assertion": "Slope ( OverlappingLine ( RealAxis ( ELLIPSE: K ) ) ) equals XCoordinate ( LowerVertex ( CONICSECTION: t ) )",
    "id": 4463,
    "declarations": "K: ELLIPSE; t: CONICSECTION",
    "facts": "Slope(OverlappingLine(RealAxis(K))) = XCoordinate(LowerVertex(t))"
},
{
    "assertion": "TangentOfPoint ( POINT: k, CURVE: D ) equals TangentOfPoint ( POINT: Q, CURVE: y )",
    "id": 4464,
    "declarations": "k: POINT; D: CURVE; Q: POINT; y: CURVE",
    "facts": "TangentOfPoint(k, D) = TangentOfPoint(Q, y)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: f ) equals MajorAxis ( ELLIPSE: F )",
    "id": 4465,
    "declarations": "f: ELLIPSE; F: ELLIPSE",
    "facts": "MinorAxis(f) = MajorAxis(F)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: N, CIRCLE: z ) equals BOOL: True",
    "id": 4466,
    "declarations": "N: CIRCLE; z: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(N, z) = True"
},
{
    "assertion": "IsPerpendicular ( LINE: J, LINE: Z ) equals BOOL: True",
    "id": 4467,
    "declarations": "J: LINE; Z: LINE; True: BOOL",
    "facts": "IsPerpendicular(J, Z) = True"
},
{
    "assertion": "IsOutTangent ( CIRCLE: O, CIRCLE: T ) equals BOOL: True",
    "id": 4468,
    "declarations": "O: CIRCLE; T: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(O, T) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: C ) equals LINESEGMENT: d",
    "id": 4469,
    "declarations": "C: ELLIPSE; d: LINESEGMENT",
    "facts": "MinorAxis(C) = d"
},
{
    "assertion": "Center ( CONICSECTION: y ) equals POINT: F",
    "id": 4470,
    "declarations": "y: CONICSECTION; F: POINT",
    "facts": "Center(y) = F"
},
{
    "assertion": "RightVertex ( CONICSECTION: Z ) equals POINT: Q",
    "id": 4471,
    "declarations": "Z: CONICSECTION; Q: POINT",
    "facts": "RightVertex(Z) = Q"
},
{
    "assertion": "lg ( Radius ( CIRCLE: z ) ) equals XCoordinate ( POINT: S )",
    "id": 4472,
    "declarations": "z: CIRCLE; S: POINT",
    "facts": "lg(Radius(z)) = XCoordinate(S)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: y ) equals LINE: h",
    "id": 4473,
    "declarations": "y: CONICSECTION; h: LINE",
    "facts": "LeftDirectrix(y) = h"
},
{
    "assertion": "YCoordinate ( POINT: w ) equals Intercept ( LINE: G, AXIS: yAxis )",
    "id": 4474,
    "declarations": "w: POINT; G: LINE; yAxis: AXIS",
    "facts": "YCoordinate(w) = Intercept(G, yAxis)"
},
{
    "assertion": "InterReciprocal ( XCoordinate ( MidPoint ( LINESEGMENT: V ) ) ) equals Perimeter ( CONICSECTION: Z )",
    "id": 4475,
    "declarations": "V: LINESEGMENT; Z: CONICSECTION",
    "facts": "InterReciprocal(XCoordinate(MidPoint(V))) = Perimeter(Z)"
},
{
    "assertion": "sqrt ( NUMBER: -31 ) equals NUMBER: -60",
    "id": 4476,
    "declarations": "-31: NUMBER; -60: NUMBER",
    "facts": "sqrt(-31) = -60"
},
{
    "assertion": "Area ( CONICSECTION: P ) equals NUMBER: 13",
    "id": 4477,
    "declarations": "P: CONICSECTION; 13: NUMBER",
    "facts": "Area(P) = 13"
},
{
    "assertion": "LowerFocus ( CONICSECTION: d ) equals Incenter ( TRIANGLE: E )",
    "id": 4478,
    "declarations": "d: CONICSECTION; E: TRIANGLE",
    "facts": "LowerFocus(d) = Incenter(E)"
},
{
    "assertion": "Incenter ( TRIANGLE: Q ) equals POINT: w",
    "id": 4479,
    "declarations": "Q: TRIANGLE; w: POINT",
    "facts": "Incenter(Q) = w"
},
{
    "assertion": "TangentPoint ( LINE: A, CIRCLE: w ) equals Projection ( LeftFocus ( CONICSECTION: u ), TangentOnPoint ( RightVertex ( CONICSECTION: h ), CURVE: y ) )",
    "id": 4480,
    "declarations": "A: LINE; w: CIRCLE; u: CONICSECTION; h: CONICSECTION; y: CURVE",
    "facts": "TangentPoint(A, w) = Projection(LeftFocus(u), TangentOnPoint(RightVertex(h), y))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: r ) equals LINE: C",
    "id": 4481,
    "declarations": "r: HYPERBOLA; C: LINE",
    "facts": "Asymptote(r) = C"
},
{
    "assertion": "IsDiameter ( MinorAxis ( ELLIPSE: O ), CIRCLE: m ) equals BOOL: False",
    "id": 4482,
    "declarations": "O: ELLIPSE; m: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MinorAxis(O), m) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: c ) equals RightFocus ( CONICSECTION: f )",
    "id": 4483,
    "declarations": "c: CONICSECTION; f: CONICSECTION",
    "facts": "UpperFocus(c) = RightFocus(f)"
},
{
    "assertion": "LineSegmentOf ( POINT: u, LowerFocus ( CONICSECTION: v ) ) equals InterceptChord ( LINE: P, CONICSECTION: J )",
    "id": 4484,
    "declarations": "u: POINT; v: CONICSECTION; P: LINE; J: CONICSECTION",
    "facts": "LineSegmentOf(u, LowerFocus(v)) = InterceptChord(P, J)"
},
{
    "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: y ) ) equals NUMBER: -19",
    "id": 4485,
    "declarations": "y: CONICSECTION; -19: NUMBER",
    "facts": "YCoordinate(LowerVertex(y)) = -19"
},
{
    "assertion": "Diameter ( CIRCLE: y ) equals FocalLength ( CONICSECTION: E )",
    "id": 4486,
    "declarations": "y: CIRCLE; E: CONICSECTION",
    "facts": "Diameter(y) = FocalLength(E)"
},
{
    "assertion": "RightPart ( HYPERBOLA: S ) equals CURVE: Y",
    "id": 4487,
    "declarations": "S: HYPERBOLA; Y: CURVE",
    "facts": "RightPart(S) = Y"
},
{
    "assertion": "LeftVertex ( CONICSECTION: q ) equals LowerVertex ( CONICSECTION: U )",
    "id": 4488,
    "declarations": "q: CONICSECTION; U: CONICSECTION",
    "facts": "LeftVertex(q) = LowerVertex(U)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: c ) equals Radius ( CIRCLE: N )",
    "id": 4489,
    "declarations": "c: CONICSECTION; N: CIRCLE",
    "facts": "HalfFocalLength(c) = Radius(N)"
},
{
    "assertion": "VectorOf ( LowerVertex ( CONICSECTION: Q ), UpperVertex ( CONICSECTION: b ) ) equals VECTOR: O",
    "id": 4490,
    "declarations": "Q: CONICSECTION; b: CONICSECTION; O: VECTOR",
    "facts": "VectorOf(LowerVertex(Q), UpperVertex(b)) = O"
},
{
    "assertion": "XCoordinate ( POINT: V ) equals Perimeter ( CONICSECTION: G )",
    "id": 4491,
    "declarations": "V: POINT; G: CONICSECTION",
    "facts": "XCoordinate(V) = Perimeter(G)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: S ) equals AXIS: yAxis",
    "id": 4492,
    "declarations": "S: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(S) = yAxis"
},
{
    "assertion": "Diameter ( CIRCLE: d ) equals NUMBER: -53",
    "id": 4493,
    "declarations": "d: CIRCLE; -53: NUMBER",
    "facts": "Diameter(d) = -53"
},
{
    "assertion": "Diameter ( CIRCLE: p ) equals NUMBER: -100",
    "id": 4494,
    "declarations": "p: CIRCLE; -100: NUMBER",
    "facts": "Diameter(p) = -100"
},
{
    "assertion": "lg ( Abs ( LineSegmentOf ( UpperVertex ( CONICSECTION: h ), POINT: u ) ) ) equals DotProduct ( VECTOR: j, VECTOR: h )",
    "id": 4495,
    "declarations": "h: CONICSECTION; u: POINT; j: VECTOR; h: VECTOR",
    "facts": "lg(Abs(LineSegmentOf(UpperVertex(h), u))) = DotProduct(j, h)"
},
{
    "assertion": "Negation ( Inclination ( RightDirectrix ( CONICSECTION: B ) ) equals Slope ( RightDirectrix ( CONICSECTION: W ) ) ) equals BOOL: True",
    "id": 4496,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "CircumCircle ( TRIANGLE: p ) equals CIRCLE: J",
    "id": 4497,
    "declarations": "p: TRIANGLE; J: CIRCLE",
    "facts": "CircumCircle(p) = J"
},
{
    "assertion": "NumIntersection ( CURVE: Q, CURVE: u ) equals Diameter ( CIRCLE: V )",
    "id": 4498,
    "declarations": "Q: CURVE; u: CURVE; V: CIRCLE",
    "facts": "NumIntersection(Q, u) = Diameter(V)"
},
{
    "assertion": "RightPart ( HYPERBOLA: A ) equals CURVE: N",
    "id": 4499,
    "declarations": "A: HYPERBOLA; N: CURVE",
    "facts": "RightPart(A) = N"
},
{
    "assertion": "Focus ( CONICSECTION: Q ) equals RightFocus ( CONICSECTION: e )",
    "id": 4500,
    "declarations": "Q: CONICSECTION; e: CONICSECTION",
    "facts": "Focus(Q) = RightFocus(e)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: g ) equals LINESEGMENT: E",
    "id": 4501,
    "declarations": "g: ELLIPSE; E: LINESEGMENT",
    "facts": "MajorAxis(g) = E"
},
{
    "assertion": "LineSegmentOf ( POINT: A, POINT: S ) equals LINESEGMENT: T",
    "id": 4502,
    "declarations": "A: POINT; S: POINT; T: LINESEGMENT",
    "facts": "LineSegmentOf(A, S) = T"
},
{
    "assertion": "TangentPoint ( LINE: Q, CIRCLE: E ) equals POINT: A",
    "id": 4503,
    "declarations": "Q: LINE; E: CIRCLE; A: POINT",
    "facts": "TangentPoint(Q, E) = A"
},
{
    "assertion": "LocusEquation ( MidPoint ( LINESEGMENT: i ) ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 4504,
    "declarations": "i: LINESEGMENT; y*space=*spacesin(x): EXPRESSION",
    "facts": "LocusEquation(MidPoint(i)) = y*space=*spacesin(x)"
},
{
    "assertion": "Between ( LeftFocus ( CONICSECTION: n ), POINT: j, Incenter ( TRIANGLE: u ) ) equals BOOL: True",
    "id": 4505,
    "declarations": "n: CONICSECTION; j: POINT; u: TRIANGLE; True: BOOL",
    "facts": "Between(LeftFocus(n), j, Incenter(u)) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: C ) equals MajorAxis ( ELLIPSE: C )",
    "id": 4506,
    "declarations": "C: ELLIPSE; C: ELLIPSE",
    "facts": "MinorAxis(C) = MajorAxis(C)"
},
{
    "assertion": "Directrix ( CONICSECTION: V ) equals TangentOnPoint ( POINT: p, Locus ( Incenter ( TRIANGLE: c ) ) )",
    "id": 4507,
    "declarations": "V: CONICSECTION; p: POINT; c: TRIANGLE",
    "facts": "Directrix(V) = TangentOnPoint(p, Locus(Incenter(c)))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: o ) equals Orthocenter ( TRIANGLE: I )",
    "id": 4508,
    "declarations": "o: CONICSECTION; I: TRIANGLE",
    "facts": "LowerVertex(o) = Orthocenter(I)"
},
{
    "assertion": "DotProduct ( VECTOR: E, VECTOR: w ) equals Slope ( LINE: h )",
    "id": 4509,
    "declarations": "E: VECTOR; w: VECTOR; h: LINE",
    "facts": "DotProduct(E, w) = Slope(h)"
},
{
    "assertion": "RightPart ( HYPERBOLA: y ) equals CURVE: E",
    "id": 4510,
    "declarations": "y: HYPERBOLA; E: CURVE",
    "facts": "RightPart(y) = E"
},
{
    "assertion": "Projection ( LowerFocus ( CONICSECTION: h ), LINE: s ) equals RightFocus ( CONICSECTION: d )",
    "id": 4511,
    "declarations": "h: CONICSECTION; s: LINE; d: CONICSECTION",
    "facts": "Projection(LowerFocus(h), s) = RightFocus(d)"
},
{
    "assertion": "FootPoint ( LINE: g, OverlappingLine ( LineSegmentOf ( POINT: t, POINT: C ) ) ) equals MidPoint ( LINESEGMENT: h )",
    "id": 4512,
    "declarations": "g: LINE; t: POINT; C: POINT; h: LINESEGMENT",
    "facts": "FootPoint(g, OverlappingLine(LineSegmentOf(t, C))) = MidPoint(h)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: q ) equals OverlappingLine ( LINESEGMENT: b )",
    "id": 4513,
    "declarations": "q: LINESEGMENT; b: LINESEGMENT",
    "facts": "OverlappingLine(q) = OverlappingLine(b)"
},
{
    "assertion": "Incenter ( TRIANGLE: E ) equals POINT: x",
    "id": 4514,
    "declarations": "E: TRIANGLE; x: POINT",
    "facts": "Incenter(E) = x"
},
{
    "assertion": "Area ( CONICSECTION: P ) equals Intercept ( LeftDirectrix ( CONICSECTION: c ), AXIS: yAxis )",
    "id": 4515,
    "declarations": "P: CONICSECTION; c: CONICSECTION; yAxis: AXIS",
    "facts": "Area(P) = Intercept(LeftDirectrix(c), yAxis)"
},
{
    "assertion": "sqrt ( NUMBER: -38 ) equals sqrt ( Distance ( LeftFocus ( CONICSECTION: Y ), LeftVertex ( CONICSECTION: w ) ) )",
    "id": 4516,
    "declarations": "-38: NUMBER; Y: CONICSECTION; w: CONICSECTION",
    "facts": "sqrt(-38) = sqrt(Distance(LeftFocus(Y), LeftVertex(w)))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: i ) equals POINT: w",
    "id": 4517,
    "declarations": "i: CONICSECTION; w: POINT",
    "facts": "LeftVertex(i) = w"
},
{
    "assertion": "Length ( LINESEGMENT: i ) equals NUMBER: -81",
    "id": 4518,
    "declarations": "i: LINESEGMENT; -81: NUMBER",
    "facts": "Length(i) = -81"
},
{
    "assertion": "FocalLength ( CONICSECTION: m ) equals Area ( CONICSECTION: U )",
    "id": 4519,
    "declarations": "m: CONICSECTION; U: CONICSECTION",
    "facts": "FocalLength(m) = Area(U)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: e ) equals LINESEGMENT: g",
    "id": 4520,
    "declarations": "e: ELLIPSE; g: LINESEGMENT",
    "facts": "MinorAxis(e) = g"
},
{
    "assertion": "RightVertex ( CONICSECTION: T ) equals RightVertex ( CONICSECTION: B )",
    "id": 4521,
    "declarations": "T: CONICSECTION; B: CONICSECTION",
    "facts": "RightVertex(T) = RightVertex(B)"
},
{
    "assertion": "PointOnCurve ( RightFocus ( CONICSECTION: S ), CURVE: Q ) equals BOOL: False",
    "id": 4522,
    "declarations": "S: CONICSECTION; Q: CURVE; False: BOOL",
    "facts": "PointOnCurve(RightFocus(S), Q) = False"
},
{
    "assertion": "Inclination ( LINE: D ) equals NUMBER: 48",
    "id": 4523,
    "declarations": "D: LINE; 48: NUMBER",
    "facts": "Inclination(D) = 48"
},
{
    "assertion": "LowerVertex ( CONICSECTION: v ) equals LeftFocus ( CONICSECTION: B )",
    "id": 4524,
    "declarations": "v: CONICSECTION; B: CONICSECTION",
    "facts": "LowerVertex(v) = LeftFocus(B)"
},
{
    "assertion": "RealAxis ( ELLIPSE: x ) equals InterceptChord ( RightDirectrix ( CONICSECTION: E ), CONICSECTION: c )",
    "id": 4525,
    "declarations": "x: ELLIPSE; E: CONICSECTION; c: CONICSECTION",
    "facts": "RealAxis(x) = InterceptChord(RightDirectrix(E), c)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: A ) equals LeftDirectrix ( CONICSECTION: B )",
    "id": 4526,
    "declarations": "A: LINESEGMENT; B: CONICSECTION",
    "facts": "OverlappingLine(A) = LeftDirectrix(B)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: m ) equals POINT: V",
    "id": 4527,
    "declarations": "m: TRIANGLE; V: POINT",
    "facts": "Orthocenter(m) = V"
},
{
    "assertion": "IsPerpendicular ( LINE: z, RightDirectrix ( CONICSECTION: R ) ) equals BOOL: True",
    "id": 4528,
    "declarations": "z: LINE; R: CONICSECTION; True: BOOL",
    "facts": "IsPerpendicular(z, RightDirectrix(R)) = True"
},
{
    "assertion": "Endpoint ( LINESEGMENT: v ) equals POINT: z",
    "id": 4529,
    "declarations": "v: LINESEGMENT; z: POINT",
    "facts": "Endpoint(v) = z"
},
{
    "assertion": "LeftPart ( HYPERBOLA: e ) equals CURVE: N",
    "id": 4530,
    "declarations": "e: HYPERBOLA; N: CURVE",
    "facts": "LeftPart(e) = N"
},
{
    "assertion": "Perimeter ( CONICSECTION: I ) equals NUMBER: 99",
    "id": 4531,
    "declarations": "I: CONICSECTION; 99: NUMBER",
    "facts": "Perimeter(I) = 99"
},
{
    "assertion": "IsParallel ( LINE: c, LINE: H ) equals BOOL: False",
    "id": 4532,
    "declarations": "c: LINE; H: LINE; False: BOOL",
    "facts": "IsParallel(c, H) = False"
},
{
    "assertion": "IsIntersect ( CURVE: r, CURVE: C ) equals BOOL: False",
    "id": 4533,
    "declarations": "r: CURVE; C: CURVE; False: BOOL",
    "facts": "IsIntersect(r, C) = False"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: N, CIRCLE: W ) equals BOOL: True",
    "id": 4534,
    "declarations": "N: LINESEGMENT; W: CIRCLE; True: BOOL",
    "facts": "IsDiameter(N, W) = True"
},
{
    "assertion": "Max ( InterReciprocal ( YCoordinate ( POINT: U ) ) ) equals Slope ( LINE: s )",
    "id": 4535,
    "declarations": "U: POINT; s: LINE",
    "facts": "Max(InterReciprocal(YCoordinate(U))) = Slope(s)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: q ) equals AXIS: xAxis",
    "id": 4536,
    "declarations": "q: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(q) = xAxis"
},
{
    "assertion": "Inclination ( LINE: n ) equals Quadrant ( RightFocus ( CONICSECTION: k ) )",
    "id": 4537,
    "declarations": "n: LINE; k: CONICSECTION",
    "facts": "Inclination(n) = Quadrant(RightFocus(k))"
},
{
    "assertion": "IsIntersect ( CURVE: Y, Locus ( POINT: S ) ) equals BOOL: True",
    "id": 4538,
    "declarations": "Y: CURVE; S: POINT; True: BOOL",
    "facts": "IsIntersect(Y, Locus(S)) = True"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: Z ) equals MinorAxis ( ELLIPSE: g )",
    "id": 4539,
    "declarations": "Z: ELLIPSE; g: ELLIPSE",
    "facts": "ImaginaryAxis(Z) = MinorAxis(g)"
},
{
    "assertion": "IsInTangent ( CIRCLE: h, CIRCLE: r ) equals BOOL: False",
    "id": 4540,
    "declarations": "h: CIRCLE; r: CIRCLE; False: BOOL",
    "facts": "IsInTangent(h, r) = False"
},
{
    "assertion": "Coordinate ( POINT: B ) equals ( Diameter ( CIRCLE: m ), XCoordinate ( POINT: O ) )",
    "id": 4541,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Coordinate ( UpperFocus ( CONICSECTION: U ) ) equals ( NUMBER: 49, Perimeter ( CONICSECTION: r ) )",
    "id": 4542,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: p, CIRCLE: t ) equals BOOL: True",
    "id": 4543,
    "declarations": "p: LINESEGMENT; t: CIRCLE; True: BOOL",
    "facts": "IsDiameter(p, t) = True"
},
{
    "assertion": "TangentPoint ( PerpendicularBisector ( RealAxis ( ELLIPSE: W ) ), CIRCLE: J ) equals POINT: a",
    "id": 4544,
    "declarations": "W: ELLIPSE; J: CIRCLE; a: POINT",
    "facts": "TangentPoint(PerpendicularBisector(RealAxis(W)), J) = a"
},
{
    "assertion": "VectorOf ( POINT: p, POINT: A ) equals VECTOR: M",
    "id": 4545,
    "declarations": "p: POINT; A: POINT; M: VECTOR",
    "facts": "VectorOf(p, A) = M"
},
{
    "assertion": "LineSegmentOf ( Incenter ( TRIANGLE: Q ), POINT: U ) equals LINESEGMENT: T",
    "id": 4546,
    "declarations": "Q: TRIANGLE; U: POINT; T: LINESEGMENT",
    "facts": "LineSegmentOf(Incenter(Q), U) = T"
},
{
    "assertion": "Center ( CONICSECTION: o ) equals POINT: p",
    "id": 4547,
    "declarations": "o: CONICSECTION; p: POINT",
    "facts": "Center(o) = p"
},
{
    "assertion": "LeftPart ( HYPERBOLA: e ) equals CURVE: j",
    "id": 4548,
    "declarations": "e: HYPERBOLA; j: CURVE",
    "facts": "LeftPart(e) = j"
},
{
    "assertion": "IsParallel ( LeftDirectrix ( CONICSECTION: T ), LINE: A ) equals BOOL: False",
    "id": 4549,
    "declarations": "T: CONICSECTION; A: LINE; False: BOOL",
    "facts": "IsParallel(LeftDirectrix(T), A) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: m ) equals UpperVertex ( CONICSECTION: a )",
    "id": 4550,
    "declarations": "m: CONICSECTION; a: CONICSECTION",
    "facts": "RightVertex(m) = UpperVertex(a)"
},
{
    "assertion": "Incenter ( TRIANGLE: u ) equals POINT: u",
    "id": 4551,
    "declarations": "u: TRIANGLE; u: POINT",
    "facts": "Incenter(u) = u"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: z, TRIANGLE: P ) equals BOOL: True",
    "id": 4552,
    "declarations": "z: CIRCLE; P: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(z, P) = True"
},
{
    "assertion": "IsPerpendicular ( LINE: l, OverlappingLine ( LINESEGMENT: E ) ) equals BOOL: False",
    "id": 4553,
    "declarations": "l: LINE; E: LINESEGMENT; False: BOOL",
    "facts": "IsPerpendicular(l, OverlappingLine(E)) = False"
},
{
    "assertion": "UpperVertex ( CONICSECTION: U ) equals LeftFocus ( CONICSECTION: P )",
    "id": 4554,
    "declarations": "U: CONICSECTION; P: CONICSECTION",
    "facts": "UpperVertex(U) = LeftFocus(P)"
},
{
    "assertion": "FocalLength ( CONICSECTION: J ) equals Min ( Quadrant ( Incenter ( TRIANGLE: s ) ) )",
    "id": 4555,
    "declarations": "J: CONICSECTION; s: TRIANGLE",
    "facts": "FocalLength(J) = Min(Quadrant(Incenter(s)))"
},
{
    "assertion": "Perimeter ( CONICSECTION: G ) equals NUMBER: 69",
    "id": 4556,
    "declarations": "G: CONICSECTION; 69: NUMBER",
    "facts": "Perimeter(G) = 69"
},
{
    "assertion": "Distance ( LeftFocus ( CONICSECTION: D ), POINT: t ) equals NUMBER: 95",
    "id": 4557,
    "declarations": "D: CONICSECTION; t: POINT; 95: NUMBER",
    "facts": "Distance(LeftFocus(D), t) = 95"
},
{
    "assertion": "VectorOf ( RightVertex ( CONICSECTION: g ), Incenter ( TRIANGLE: z ) ) equals VECTOR: z",
    "id": 4558,
    "declarations": "g: CONICSECTION; z: TRIANGLE; z: VECTOR",
    "facts": "VectorOf(RightVertex(g), Incenter(z)) = z"
},
{
    "assertion": "CircumCircle ( TRIANGLE: u ) equals CIRCLE: H",
    "id": 4559,
    "declarations": "u: TRIANGLE; H: CIRCLE",
    "facts": "CircumCircle(u) = H"
},
{
    "assertion": "Vertex ( CONICSECTION: k ) equals Center ( CONICSECTION: a )",
    "id": 4560,
    "declarations": "k: CONICSECTION; a: CONICSECTION",
    "facts": "Vertex(k) = Center(a)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: C ) equals POINT: X",
    "id": 4561,
    "declarations": "C: CONICSECTION; X: POINT",
    "facts": "LowerVertex(C) = X"
},
{
    "assertion": "Max ( NUMBER: 11 ) equals NUMBER: 71",
    "id": 4562,
    "declarations": "11: NUMBER; 71: NUMBER",
    "facts": "Max(11) = 71"
},
{
    "assertion": "Min ( Min ( lg ( Quadrant ( Incenter ( TRIANGLE: b ) ) ) ) ) equals XCoordinate ( POINT: r )",
    "id": 4563,
    "declarations": "b: TRIANGLE; r: POINT",
    "facts": "Min(Min(lg(Quadrant(Incenter(b))))) = XCoordinate(r)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: L ) equals UpperVertex ( CONICSECTION: G )",
    "id": 4564,
    "declarations": "L: TRIANGLE; G: CONICSECTION",
    "facts": "Orthocenter(L) = UpperVertex(G)"
},
{
    "assertion": "Radius ( CIRCLE: b ) equals NUMBER: 32",
    "id": 4565,
    "declarations": "b: CIRCLE; 32: NUMBER",
    "facts": "Radius(b) = 32"
},
{
    "assertion": "Between ( Center ( CONICSECTION: t ), UpperVertex ( CONICSECTION: l ), MidPoint ( LINESEGMENT: Q ) ) equals BOOL: True",
    "id": 4566,
    "declarations": "t: CONICSECTION; l: CONICSECTION; Q: LINESEGMENT; True: BOOL",
    "facts": "Between(Center(t), UpperVertex(l), MidPoint(Q)) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: I ) equals Intercept ( OverlappingLine ( LINESEGMENT: l ), AXIS: yAxis )",
    "id": 4567,
    "declarations": "I: CONICSECTION; l: LINESEGMENT; yAxis: AXIS",
    "facts": "HalfFocalLength(I) = Intercept(OverlappingLine(l), yAxis)"
},
{
    "assertion": "TriangleOf ( Center ( CONICSECTION: V ), UpperFocus ( CONICSECTION: Z ), LowerVertex ( CONICSECTION: w ) ) equals TRIANGLE: h",
    "id": 4568,
    "declarations": "V: CONICSECTION; Z: CONICSECTION; w: CONICSECTION; h: TRIANGLE",
    "facts": "TriangleOf(Center(V), UpperFocus(Z), LowerVertex(w)) = h"
},
{
    "assertion": "Orthocenter ( TRIANGLE: u ) equals Orthocenter ( TRIANGLE: v )",
    "id": 4569,
    "declarations": "u: TRIANGLE; v: TRIANGLE",
    "facts": "Orthocenter(u) = Orthocenter(v)"
},
{
    "assertion": "Between ( LowerVertex ( CONICSECTION: h ), Projection ( Incenter ( TRIANGLE: o ), LINE: C ), UpperFocus ( CONICSECTION: F ) ) equals BOOL: True",
    "id": 4570,
    "declarations": "h: CONICSECTION; o: TRIANGLE; C: LINE; F: CONICSECTION; True: BOOL",
    "facts": "Between(LowerVertex(h), Projection(Incenter(o), C), UpperFocus(F)) = True"
},
{
    "assertion": "LineOf ( POINT: u, Orthocenter ( TRIANGLE: f ) ) equals LINE: A",
    "id": 4571,
    "declarations": "u: POINT; f: TRIANGLE; A: LINE",
    "facts": "LineOf(u, Orthocenter(f)) = A"
},
{
    "assertion": "FocalLength ( CONICSECTION: n ) equals NUMBER: -85",
    "id": 4572,
    "declarations": "n: CONICSECTION; -85: NUMBER",
    "facts": "FocalLength(n) = -85"
},
{
    "assertion": "Perimeter ( CONICSECTION: i ) equals NUMBER: 66",
    "id": 4573,
    "declarations": "i: CONICSECTION; 66: NUMBER",
    "facts": "Perimeter(i) = 66"
},
{
    "assertion": "CircumCircle ( TRIANGLE: a ) equals CircumCircle ( TRIANGLE: I )",
    "id": 4574,
    "declarations": "a: TRIANGLE; I: TRIANGLE",
    "facts": "CircumCircle(a) = CircumCircle(I)"
},
{
    "assertion": "Slope ( PerpendicularBisector ( LINESEGMENT: J ) ) equals Inclination ( PerpendicularBisector ( LINESEGMENT: k ) )",
    "id": 4575,
    "declarations": "J: LINESEGMENT; k: LINESEGMENT",
    "facts": "Slope(PerpendicularBisector(J)) = Inclination(PerpendicularBisector(k))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: I ) equals POINT: u",
    "id": 4576,
    "declarations": "I: CONICSECTION; u: POINT",
    "facts": "LeftFocus(I) = u"
},
{
    "assertion": "RealAxis ( ELLIPSE: e ) equals MinorAxis ( ELLIPSE: w )",
    "id": 4577,
    "declarations": "e: ELLIPSE; w: ELLIPSE",
    "facts": "RealAxis(e) = MinorAxis(w)"
},
{
    "assertion": "And ( Intersection ( RightPart ( HYPERBOLA: d ), CURVE: F ) equals RightVertex ( CONICSECTION: t ), Locus ( RightVertex ( CONICSECTION: o ) ) equals RightPart ( HYPERBOLA: Y ) ) equals BOOL: True",
    "id": 4578,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: P, TRIANGLE: E ) equals BOOL: True",
    "id": 4579,
    "declarations": "P: CIRCLE; E: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(P, E) = True"
},
{
    "assertion": "Slope ( LINE: L ) equals Radius ( CIRCLE: Y )",
    "id": 4580,
    "declarations": "L: LINE; Y: CIRCLE",
    "facts": "Slope(L) = Radius(Y)"
},
{
    "assertion": "Expression ( CURVE: C ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 4581,
    "declarations": "C: CURVE; y*space=*spacelog(x): EXPRESSION",
    "facts": "Expression(C) = y*space=*spacelog(x)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: P ) equals POINT: L",
    "id": 4582,
    "declarations": "P: CONICSECTION; L: POINT",
    "facts": "LowerVertex(P) = L"
},
{
    "assertion": "LeftVertex ( CONICSECTION: Z ) equals POINT: W",
    "id": 4583,
    "declarations": "Z: CONICSECTION; W: POINT",
    "facts": "LeftVertex(Z) = W"
},
{
    "assertion": "IsDiameter ( MinorAxis ( ELLIPSE: J ), CIRCLE: w ) equals BOOL: False",
    "id": 4584,
    "declarations": "J: ELLIPSE; w: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MinorAxis(J), w) = False"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: B ) equals Radius ( CIRCLE: m )",
    "id": 4585,
    "declarations": "B: CONICSECTION; m: CIRCLE",
    "facts": "HalfFocalLength(B) = Radius(m)"
},
{
    "assertion": "Length ( MajorAxis ( ELLIPSE: Y ) ) equals NUMBER: 77",
    "id": 4586,
    "declarations": "Y: ELLIPSE; 77: NUMBER",
    "facts": "Length(MajorAxis(Y)) = 77"
},
{
    "assertion": "YCoordinate ( MidPoint ( LINESEGMENT: X ) ) equals Quadrant ( Orthocenter ( TRIANGLE: X ) )",
    "id": 4587,
    "declarations": "X: LINESEGMENT; X: TRIANGLE",
    "facts": "YCoordinate(MidPoint(X)) = Quadrant(Orthocenter(X))"
},
{
    "assertion": "PointOnCurve ( POINT: i, CURVE: G ) equals BOOL: True",
    "id": 4588,
    "declarations": "i: POINT; G: CURVE; True: BOOL",
    "facts": "PointOnCurve(i, G) = True"
},
{
    "assertion": "XCoordinate ( FootPoint ( PerpendicularBisector ( LINESEGMENT: K ), TangentOfPoint ( RightVertex ( CONICSECTION: Y ), CURVE: v ) ) ) equals lg ( Perimeter ( CONICSECTION: R ) )",
    "id": 4589,
    "declarations": "K: LINESEGMENT; Y: CONICSECTION; v: CURVE; R: CONICSECTION",
    "facts": "XCoordinate(FootPoint(PerpendicularBisector(K), TangentOfPoint(RightVertex(Y), v))) = lg(Perimeter(R))"
},
{
    "assertion": "Expression ( CURVE: O ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 4590,
    "declarations": "O: CURVE; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "Expression(O) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "Negation ( MajorAxis ( ELLIPSE: F ) equals LINESEGMENT: y ) equals BOOL: False",
    "id": 4591,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: f, TRIANGLE: d ) equals BOOL: False",
    "id": 4592,
    "declarations": "f: CIRCLE; d: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(f, d) = False"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: J ) equals OverlappingLine ( MinorAxis ( ELLIPSE: C ) )",
    "id": 4593,
    "declarations": "J: CONICSECTION; C: ELLIPSE",
    "facts": "RightDirectrix(J) = OverlappingLine(MinorAxis(C))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Z ) equals POINT: F",
    "id": 4594,
    "declarations": "Z: TRIANGLE; F: POINT",
    "facts": "Orthocenter(Z) = F"
},
{
    "assertion": "Focus ( CONICSECTION: W ) equals POINT: A",
    "id": 4595,
    "declarations": "W: CONICSECTION; A: POINT",
    "facts": "Focus(W) = A"
},
{
    "assertion": "Slope ( LeftDirectrix ( CONICSECTION: g ) ) equals lg ( Area ( CONICSECTION: q ) )",
    "id": 4596,
    "declarations": "g: CONICSECTION; q: CONICSECTION",
    "facts": "Slope(LeftDirectrix(g)) = lg(Area(q))"
},
{
    "assertion": "TangentOnPoint ( FootPoint ( LINE: p, LINE: Z ), RightPart ( HYPERBOLA: f ) ) equals LINE: m",
    "id": 4597,
    "declarations": "p: LINE; Z: LINE; f: HYPERBOLA; m: LINE",
    "facts": "TangentOnPoint(FootPoint(p, Z), RightPart(f)) = m"
},
{
    "assertion": "Directrix ( CONICSECTION: K ) equals LINE: j",
    "id": 4598,
    "declarations": "K: CONICSECTION; j: LINE",
    "facts": "Directrix(K) = j"
},
{
    "assertion": "Abs ( LINESEGMENT: j ) equals NUMBER: 70",
    "id": 4599,
    "declarations": "j: LINESEGMENT; 70: NUMBER",
    "facts": "Abs(j) = 70"
},
{
    "assertion": "TangentOfPoint ( RightFocus ( CONICSECTION: l ), CURVE: m ) equals PerpendicularBisector ( RealAxis ( ELLIPSE: y ) )",
    "id": 4600,
    "declarations": "l: CONICSECTION; m: CURVE; y: ELLIPSE",
    "facts": "TangentOfPoint(RightFocus(l), m) = PerpendicularBisector(RealAxis(y))"
},
{
    "assertion": "Intercept ( LINE: S, AXIS: xAxis ) equals NUMBER: -6",
    "id": 4601,
    "declarations": "S: LINE; xAxis: AXIS; -6: NUMBER",
    "facts": "Intercept(S, xAxis) = -6"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: E, CIRCLE: j ) equals BOOL: False",
    "id": 4602,
    "declarations": "E: LINESEGMENT; j: CIRCLE; False: BOOL",
    "facts": "IsDiameter(E, j) = False"
},
{
    "assertion": "RealAxis ( ELLIPSE: N ) equals InterceptChord ( RightDirectrix ( CONICSECTION: H ), CONICSECTION: I )",
    "id": 4603,
    "declarations": "N: ELLIPSE; H: CONICSECTION; I: CONICSECTION",
    "facts": "RealAxis(N) = InterceptChord(RightDirectrix(H), I)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: M ) equals POINT: H",
    "id": 4604,
    "declarations": "M: CONICSECTION; H: POINT",
    "facts": "LeftFocus(M) = H"
},
{
    "assertion": "RightVertex ( CONICSECTION: n ) equals POINT: B",
    "id": 4605,
    "declarations": "n: CONICSECTION; B: POINT",
    "facts": "RightVertex(n) = B"
},
{
    "assertion": "LocusEquation ( POINT: b ) equals EXPRESSION: x^2/4*space+*spacey^2/9*space=*space1",
    "id": 4606,
    "declarations": "b: POINT; x^2/4*space+*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "LocusEquation(b) = x^2/4*space+*spacey^2/9*space=*space1"
},
{
    "assertion": "IsParallel ( RightDirectrix ( CONICSECTION: U ), LINE: Q ) equals BOOL: True",
    "id": 4607,
    "declarations": "U: CONICSECTION; Q: LINE; True: BOOL",
    "facts": "IsParallel(RightDirectrix(U), Q) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: E ) equals LINESEGMENT: M",
    "id": 4608,
    "declarations": "E: ELLIPSE; M: LINESEGMENT",
    "facts": "MinorAxis(E) = M"
},
{
    "assertion": "PointOnCurve ( UpperVertex ( CONICSECTION: i ), CURVE: s ) equals BOOL: False",
    "id": 4609,
    "declarations": "i: CONICSECTION; s: CURVE; False: BOOL",
    "facts": "PointOnCurve(UpperVertex(i), s) = False"
},
{
    "assertion": "InterceptChord ( LINE: g, CONICSECTION: B ) equals LINESEGMENT: B",
    "id": 4610,
    "declarations": "g: LINE; B: CONICSECTION; B: LINESEGMENT",
    "facts": "InterceptChord(g, B) = B"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: a ) equals Quadrant ( POINT: p )",
    "id": 4611,
    "declarations": "a: CONICSECTION; p: POINT",
    "facts": "HalfFocalLength(a) = Quadrant(p)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: a ) equals UpperVertex ( CONICSECTION: s )",
    "id": 4612,
    "declarations": "a: CONICSECTION; s: CONICSECTION",
    "facts": "UpperFocus(a) = UpperVertex(s)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: C ) equals LINESEGMENT: N",
    "id": 4613,
    "declarations": "C: ELLIPSE; N: LINESEGMENT",
    "facts": "MajorAxis(C) = N"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: G, TRIANGLE: W ) equals BOOL: False",
    "id": 4614,
    "declarations": "G: CIRCLE; W: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(G, W) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: A ) equals Circumcenter ( TriangleOf ( POINT: S, POINT: n, Projection ( POINT: g, LINE: P ) ) )",
    "id": 4615,
    "declarations": "A: CONICSECTION; S: POINT; n: POINT; g: POINT; P: LINE",
    "facts": "Vertex(A) = Circumcenter(TriangleOf(S, n, Projection(g, P)))"
},
{
    "assertion": "TangentPoint ( LeftDirectrix ( CONICSECTION: j ), CIRCLE: y ) equals POINT: t",
    "id": 4616,
    "declarations": "j: CONICSECTION; y: CIRCLE; t: POINT",
    "facts": "TangentPoint(LeftDirectrix(j), y) = t"
},
{
    "assertion": "Locus ( RightVertex ( CONICSECTION: x ) ) equals CURVE: b",
    "id": 4617,
    "declarations": "x: CONICSECTION; b: CURVE",
    "facts": "Locus(RightVertex(x)) = b"
},
{
    "assertion": "LineOf ( LeftFocus ( CONICSECTION: e ), LowerFocus ( CONICSECTION: b ) ) equals TangentOfPoint ( POINT: T, RightPart ( HYPERBOLA: c ) )",
    "id": 4618,
    "declarations": "e: CONICSECTION; b: CONICSECTION; T: POINT; c: HYPERBOLA",
    "facts": "LineOf(LeftFocus(e), LowerFocus(b)) = TangentOfPoint(T, RightPart(c))"
},
{
    "assertion": "XCoordinate ( POINT: S ) equals NUMBER: -3",
    "id": 4619,
    "declarations": "S: POINT; -3: NUMBER",
    "facts": "XCoordinate(S) = -3"
},
{
    "assertion": "Vertex ( CONICSECTION: s ) equals RightFocus ( CONICSECTION: u )",
    "id": 4620,
    "declarations": "s: CONICSECTION; u: CONICSECTION",
    "facts": "Vertex(s) = RightFocus(u)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: q ) equals Eccentricity ( CONICSECTION: s )",
    "id": 4621,
    "declarations": "q: CONICSECTION; s: CONICSECTION",
    "facts": "Eccentricity(q) = Eccentricity(s)"
},
{
    "assertion": "IsIntersect ( LeftPart ( HYPERBOLA: d ), CURVE: y ) equals BOOL: True",
    "id": 4622,
    "declarations": "d: HYPERBOLA; y: CURVE; True: BOOL",
    "facts": "IsIntersect(LeftPart(d), y) = True"
},
{
    "assertion": "LowerVertex ( CONICSECTION: W ) equals LeftFocus ( CONICSECTION: r )",
    "id": 4623,
    "declarations": "W: CONICSECTION; r: CONICSECTION",
    "facts": "LowerVertex(W) = LeftFocus(r)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: A ) equals NumIntersection ( CURVE: u, CURVE: Z )",
    "id": 4624,
    "declarations": "A: CONICSECTION; u: CURVE; Z: CURVE",
    "facts": "HalfFocalLength(A) = NumIntersection(u, Z)"
},
{
    "assertion": "YCoordinate ( POINT: o ) equals Min ( DotProduct ( VECTOR: n, VECTOR: P ) )",
    "id": 4625,
    "declarations": "o: POINT; n: VECTOR; P: VECTOR",
    "facts": "YCoordinate(o) = Min(DotProduct(n, P))"
},
{
    "assertion": "RightFocus ( CONICSECTION: N ) equals POINT: N",
    "id": 4626,
    "declarations": "N: CONICSECTION; N: POINT",
    "facts": "RightFocus(N) = N"
},
{
    "assertion": "LineOf ( POINT: l, Orthocenter ( TRIANGLE: n ) ) equals LINE: v",
    "id": 4627,
    "declarations": "l: POINT; n: TRIANGLE; v: LINE",
    "facts": "LineOf(l, Orthocenter(n)) = v"
},
{
    "assertion": "UpperFocus ( CONICSECTION: c ) equals LowerVertex ( CONICSECTION: g )",
    "id": 4628,
    "declarations": "c: CONICSECTION; g: CONICSECTION",
    "facts": "UpperFocus(c) = LowerVertex(g)"
},
{
    "assertion": "InterReciprocal ( Inclination ( LINE: a ) ) equals NUMBER: -37",
    "id": 4629,
    "declarations": "a: LINE; -37: NUMBER",
    "facts": "InterReciprocal(Inclination(a)) = -37"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: P ) equals LINE: b",
    "id": 4630,
    "declarations": "P: CONICSECTION; b: LINE",
    "facts": "RightDirectrix(P) = b"
},
{
    "assertion": "IsOutTangent ( CIRCLE: a, CIRCLE: Z ) equals BOOL: True",
    "id": 4631,
    "declarations": "a: CIRCLE; Z: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(a, Z) = True"
},
{
    "assertion": "Max ( Eccentricity ( CONICSECTION: F ) ) equals lg ( NUMBER: 11 )",
    "id": 4632,
    "declarations": "F: CONICSECTION; 11: NUMBER",
    "facts": "Max(Eccentricity(F)) = lg(11)"
},
{
    "assertion": "DotProduct ( VECTOR: T, VECTOR: X ) equals Radius ( CIRCLE: E )",
    "id": 4633,
    "declarations": "T: VECTOR; X: VECTOR; E: CIRCLE",
    "facts": "DotProduct(T, X) = Radius(E)"
},
{
    "assertion": "TangentOnPoint ( POINT: T, CURVE: I ) equals LINE: Q",
    "id": 4634,
    "declarations": "T: POINT; I: CURVE; Q: LINE",
    "facts": "TangentOnPoint(T, I) = Q"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: R ) equals LINE: P",
    "id": 4635,
    "declarations": "R: CONICSECTION; P: LINE",
    "facts": "LeftDirectrix(R) = P"
},
{
    "assertion": "Orthocenter ( TRIANGLE: g ) equals POINT: b",
    "id": 4636,
    "declarations": "g: TRIANGLE; b: POINT",
    "facts": "Orthocenter(g) = b"
},
{
    "assertion": "VectorOf ( POINT: b, RightVertex ( CONICSECTION: j ) ) equals VECTOR: S",
    "id": 4637,
    "declarations": "b: POINT; j: CONICSECTION; S: VECTOR",
    "facts": "VectorOf(b, RightVertex(j)) = S"
},
{
    "assertion": "LineSegmentOf ( RightFocus ( CONICSECTION: w ), POINT: y ) equals MajorAxis ( ELLIPSE: s )",
    "id": 4638,
    "declarations": "w: CONICSECTION; y: POINT; s: ELLIPSE",
    "facts": "LineSegmentOf(RightFocus(w), y) = MajorAxis(s)"
},
{
    "assertion": "VectorOf ( LeftFocus ( CONICSECTION: a ), LeftVertex ( CONICSECTION: n ) ) equals VECTOR: l",
    "id": 4639,
    "declarations": "a: CONICSECTION; n: CONICSECTION; l: VECTOR",
    "facts": "VectorOf(LeftFocus(a), LeftVertex(n)) = l"
},
{
    "assertion": "FocalLength ( CONICSECTION: X ) equals FocalLength ( CONICSECTION: j )",
    "id": 4640,
    "declarations": "X: CONICSECTION; j: CONICSECTION",
    "facts": "FocalLength(X) = FocalLength(j)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: S ) equals LINE: d",
    "id": 4641,
    "declarations": "S: HYPERBOLA; d: LINE",
    "facts": "Asymptote(S) = d"
},
{
    "assertion": "Area ( CONICSECTION: y ) equals NumIntersection ( RightPart ( HYPERBOLA: K ), Locus ( POINT: K ) )",
    "id": 4642,
    "declarations": "y: CONICSECTION; K: HYPERBOLA; K: POINT",
    "facts": "Area(y) = NumIntersection(RightPart(K), Locus(K))"
},
{
    "assertion": "RightFocus ( CONICSECTION: q ) equals LeftFocus ( CONICSECTION: I )",
    "id": 4643,
    "declarations": "q: CONICSECTION; I: CONICSECTION",
    "facts": "RightFocus(q) = LeftFocus(I)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: R ) equals CIRCLE: c",
    "id": 4644,
    "declarations": "R: TRIANGLE; c: CIRCLE",
    "facts": "CircumCircle(R) = c"
},
{
    "assertion": "IsPerpendicular ( LINE: b, LINE: z ) equals BOOL: True",
    "id": 4645,
    "declarations": "b: LINE; z: LINE; True: BOOL",
    "facts": "IsPerpendicular(b, z) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: u ) equals Circumcenter ( TriangleOf ( LeftVertex ( CONICSECTION: k ), POINT: f, Center ( CONICSECTION: w ) ) )",
    "id": 4646,
    "declarations": "u: TRIANGLE; k: CONICSECTION; f: POINT; w: CONICSECTION",
    "facts": "Circumcenter(u) = Circumcenter(TriangleOf(LeftVertex(k), f, Center(w)))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: c ) equals POINT: G",
    "id": 4647,
    "declarations": "c: TRIANGLE; G: POINT",
    "facts": "Circumcenter(c) = G"
},
{
    "assertion": "NumIntersection ( CURVE: S, CURVE: J ) equals NUMBER: 40",
    "id": 4648,
    "declarations": "S: CURVE; J: CURVE; 40: NUMBER",
    "facts": "NumIntersection(S, J) = 40"
},
{
    "assertion": "UpperFocus ( CONICSECTION: b ) equals POINT: h",
    "id": 4649,
    "declarations": "b: CONICSECTION; h: POINT",
    "facts": "UpperFocus(b) = h"
},
{
    "assertion": "Intercept ( LINE: k, AXIS: yAxis ) equals Perimeter ( CONICSECTION: a )",
    "id": 4650,
    "declarations": "k: LINE; yAxis: AXIS; a: CONICSECTION",
    "facts": "Intercept(k, yAxis) = Perimeter(a)"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: W ) ) equals Perimeter ( CONICSECTION: C )",
    "id": 4651,
    "declarations": "W: CONICSECTION; C: CONICSECTION",
    "facts": "Inclination(LeftDirectrix(W)) = Perimeter(C)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: D ) equals MidPoint ( LINESEGMENT: K )",
    "id": 4652,
    "declarations": "D: CONICSECTION; K: LINESEGMENT",
    "facts": "LeftFocus(D) = MidPoint(K)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: W ) equals POINT: M",
    "id": 4653,
    "declarations": "W: TRIANGLE; M: POINT",
    "facts": "Circumcenter(W) = M"
},
{
    "assertion": "Between ( LeftFocus ( CONICSECTION: H ), LeftVertex ( CONICSECTION: V ), POINT: H ) equals BOOL: True",
    "id": 4654,
    "declarations": "H: CONICSECTION; V: CONICSECTION; H: POINT; True: BOOL",
    "facts": "Between(LeftFocus(H), LeftVertex(V), H) = True"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: R ) equals RightDirectrix ( CONICSECTION: c )",
    "id": 4655,
    "declarations": "R: LINESEGMENT; c: CONICSECTION",
    "facts": "OverlappingLine(R) = RightDirectrix(c)"
},
{
    "assertion": "RightFocus ( CONICSECTION: i ) equals LeftVertex ( CONICSECTION: z )",
    "id": 4656,
    "declarations": "i: CONICSECTION; z: CONICSECTION",
    "facts": "RightFocus(i) = LeftVertex(z)"
},
{
    "assertion": "PointOnCurve ( LeftVertex ( CONICSECTION: S ), CURVE: z ) equals BOOL: False",
    "id": 4657,
    "declarations": "S: CONICSECTION; z: CURVE; False: BOOL",
    "facts": "PointOnCurve(LeftVertex(S), z) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: x ) equals Circumcenter ( TRIANGLE: F )",
    "id": 4658,
    "declarations": "x: CONICSECTION; F: TRIANGLE",
    "facts": "RightFocus(x) = Circumcenter(F)"
},
{
    "assertion": "Distance ( MidPoint ( LINESEGMENT: o ), LeftFocus ( CONICSECTION: p ) ) equals NUMBER: -77",
    "id": 4659,
    "declarations": "o: LINESEGMENT; p: CONICSECTION; -77: NUMBER",
    "facts": "Distance(MidPoint(o), LeftFocus(p)) = -77"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: t ) equals LINESEGMENT: g",
    "id": 4660,
    "declarations": "t: ELLIPSE; g: LINESEGMENT",
    "facts": "ImaginaryAxis(t) = g"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: A, TRIANGLE: m ) equals BOOL: True",
    "id": 4661,
    "declarations": "A: CIRCLE; m: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(A, m) = True"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: g ) equals LINESEGMENT: m",
    "id": 4662,
    "declarations": "g: ELLIPSE; m: LINESEGMENT",
    "facts": "ImaginaryAxis(g) = m"
},
{
    "assertion": "Length ( RealAxis ( ELLIPSE: w ) ) equals HalfFocalLength ( CONICSECTION: G )",
    "id": 4663,
    "declarations": "w: ELLIPSE; G: CONICSECTION",
    "facts": "Length(RealAxis(w)) = HalfFocalLength(G)"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: S ) ) equals NUMBER: -46",
    "id": 4664,
    "declarations": "S: TRIANGLE; -46: NUMBER",
    "facts": "Radius(CircumCircle(S)) = -46"
},
{
    "assertion": "Eccentricity ( CONICSECTION: q ) equals Radius ( CIRCLE: K )",
    "id": 4665,
    "declarations": "q: CONICSECTION; K: CIRCLE",
    "facts": "Eccentricity(q) = Radius(K)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: G ) equals POINT: u",
    "id": 4666,
    "declarations": "G: CONICSECTION; u: POINT",
    "facts": "LowerFocus(G) = u"
},
{
    "assertion": "XCoordinate ( RightFocus ( CONICSECTION: w ) ) equals Eccentricity ( CONICSECTION: C )",
    "id": 4667,
    "declarations": "w: CONICSECTION; C: CONICSECTION",
    "facts": "XCoordinate(RightFocus(w)) = Eccentricity(C)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: B ) equals NUMBER: 94",
    "id": 4668,
    "declarations": "B: CONICSECTION; 94: NUMBER",
    "facts": "HalfFocalLength(B) = 94"
},
{
    "assertion": "Projection ( POINT: A, LINE: V ) equals UpperFocus ( CONICSECTION: T )",
    "id": 4669,
    "declarations": "A: POINT; V: LINE; T: CONICSECTION",
    "facts": "Projection(A, V) = UpperFocus(T)"
},
{
    "assertion": "Perimeter ( CONICSECTION: l ) equals NUMBER: 31",
    "id": 4670,
    "declarations": "l: CONICSECTION; 31: NUMBER",
    "facts": "Perimeter(l) = 31"
},
{
    "assertion": "Center ( CONICSECTION: R ) equals RightFocus ( CONICSECTION: s )",
    "id": 4671,
    "declarations": "R: CONICSECTION; s: CONICSECTION",
    "facts": "Center(R) = RightFocus(s)"
},
{
    "assertion": "IsInTangent ( CIRCLE: Z, CIRCLE: Y ) equals BOOL: True",
    "id": 4672,
    "declarations": "Z: CIRCLE; Y: CIRCLE; True: BOOL",
    "facts": "IsInTangent(Z, Y) = True"
},
{
    "assertion": "Endpoint ( LINESEGMENT: Y ) equals POINT: y",
    "id": 4673,
    "declarations": "Y: LINESEGMENT; y: POINT",
    "facts": "Endpoint(Y) = y"
},
{
    "assertion": "FootPoint ( RightDirectrix ( CONICSECTION: u ), LINE: U ) equals FootPoint ( OverlappingLine ( LINESEGMENT: T ), PerpendicularBisector ( LINESEGMENT: k ) )",
    "id": 4674,
    "declarations": "u: CONICSECTION; U: LINE; T: LINESEGMENT; k: LINESEGMENT",
    "facts": "FootPoint(RightDirectrix(u), U) = FootPoint(OverlappingLine(T), PerpendicularBisector(k))"
},
{
    "assertion": "Negation ( LocusEquation ( LowerVertex ( CONICSECTION: m ) ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9 ) equals BOOL: True",
    "id": 4675,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Incenter ( TRIANGLE: q ) equals LowerVertex ( CONICSECTION: U )",
    "id": 4676,
    "declarations": "q: TRIANGLE; U: CONICSECTION",
    "facts": "Incenter(q) = LowerVertex(U)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: M ) equals CURVE: C",
    "id": 4677,
    "declarations": "M: HYPERBOLA; C: CURVE",
    "facts": "LeftPart(M) = C"
},
{
    "assertion": "MidPoint ( ImaginaryAxis ( ELLIPSE: z ) ) equals Incenter ( TRIANGLE: q )",
    "id": 4678,
    "declarations": "z: ELLIPSE; q: TRIANGLE",
    "facts": "MidPoint(ImaginaryAxis(z)) = Incenter(q)"
},
{
    "assertion": "IsInTangent ( CIRCLE: U, CIRCLE: z ) equals BOOL: True",
    "id": 4679,
    "declarations": "U: CIRCLE; z: CIRCLE; True: BOOL",
    "facts": "IsInTangent(U, z) = True"
},
{
    "assertion": "Length ( LINESEGMENT: k ) equals NUMBER: 50",
    "id": 4680,
    "declarations": "k: LINESEGMENT; 50: NUMBER",
    "facts": "Length(k) = 50"
},
{
    "assertion": "LocusEquation ( POINT: I ) equals EXPRESSION: x^2*space-*spacey^2*space=*space1",
    "id": 4681,
    "declarations": "I: POINT; x^2*space-*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(I) = x^2*space-*spacey^2*space=*space1"
},
{
    "assertion": "Length ( LINESEGMENT: N ) equals Distance ( LowerVertex ( CONICSECTION: c ), POINT: A )",
    "id": 4682,
    "declarations": "N: LINESEGMENT; c: CONICSECTION; A: POINT",
    "facts": "Length(N) = Distance(LowerVertex(c), A)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: B ) equals LeftVertex ( CONICSECTION: Y )",
    "id": 4683,
    "declarations": "B: CONICSECTION; Y: CONICSECTION",
    "facts": "LowerVertex(B) = LeftVertex(Y)"
},
{
    "assertion": "XCoordinate ( UpperFocus ( CONICSECTION: V ) ) equals Abs ( LINESEGMENT: c )",
    "id": 4684,
    "declarations": "V: CONICSECTION; c: LINESEGMENT",
    "facts": "XCoordinate(UpperFocus(V)) = Abs(c)"
},
{
    "assertion": "lg ( Quadrant ( POINT: H ) ) equals NUMBER: 51",
    "id": 4685,
    "declarations": "H: POINT; 51: NUMBER",
    "facts": "lg(Quadrant(H)) = 51"
},
{
    "assertion": "UpperVertex ( CONICSECTION: f ) equals FootPoint ( LINE: E, LeftDirectrix ( CONICSECTION: O ) )",
    "id": 4686,
    "declarations": "f: CONICSECTION; E: LINE; O: CONICSECTION",
    "facts": "UpperVertex(f) = FootPoint(E, LeftDirectrix(O))"
},
{
    "assertion": "Max ( NUMBER: -44 ) equals XCoordinate ( POINT: j )",
    "id": 4687,
    "declarations": "-44: NUMBER; j: POINT",
    "facts": "Max(-44) = XCoordinate(j)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: A ) equals RightVertex ( CONICSECTION: A )",
    "id": 4688,
    "declarations": "A: CONICSECTION; A: CONICSECTION",
    "facts": "UpperFocus(A) = RightVertex(A)"
},
{
    "assertion": "IsIntersect ( CURVE: B, CURVE: x ) equals BOOL: False",
    "id": 4689,
    "declarations": "B: CURVE; x: CURVE; False: BOOL",
    "facts": "IsIntersect(B, x) = False"
},
{
    "assertion": "TangentOfPoint ( LeftFocus ( CONICSECTION: L ), CURVE: n ) equals LINE: z",
    "id": 4690,
    "declarations": "L: CONICSECTION; n: CURVE; z: LINE",
    "facts": "TangentOfPoint(LeftFocus(L), n) = z"
},
{
    "assertion": "Perimeter ( CONICSECTION: C ) equals NUMBER: -4",
    "id": 4691,
    "declarations": "C: CONICSECTION; -4: NUMBER",
    "facts": "Perimeter(C) = -4"
},
{
    "assertion": "Circumcenter ( TRIANGLE: N ) equals Circumcenter ( TRIANGLE: X )",
    "id": 4692,
    "declarations": "N: TRIANGLE; X: TRIANGLE",
    "facts": "Circumcenter(N) = Circumcenter(X)"
},
{
    "assertion": "IsParallel ( LINE: M, PerpendicularBisector ( RealAxis ( ELLIPSE: Q ) ) ) equals BOOL: True",
    "id": 4693,
    "declarations": "M: LINE; Q: ELLIPSE; True: BOOL",
    "facts": "IsParallel(M, PerpendicularBisector(RealAxis(Q))) = True"
},
{
    "assertion": "Area ( CONICSECTION: x ) equals Eccentricity ( CONICSECTION: F )",
    "id": 4694,
    "declarations": "x: CONICSECTION; F: CONICSECTION",
    "facts": "Area(x) = Eccentricity(F)"
},
{
    "assertion": "Directrix ( CONICSECTION: M ) equals LineOf ( UpperFocus ( CONICSECTION: S ), Projection ( Projection ( POINT: O, LINE: Q ), LINE: U ) )",
    "id": 4695,
    "declarations": "M: CONICSECTION; S: CONICSECTION; O: POINT; Q: LINE; U: LINE",
    "facts": "Directrix(M) = LineOf(UpperFocus(S), Projection(Projection(O, Q), U))"
},
{
    "assertion": "Max ( YCoordinate ( Projection ( POINT: h, TangentOnPoint ( RightFocus ( CONICSECTION: A ), CURVE: n ) ) ) ) equals NUMBER: 17",
    "id": 4696,
    "declarations": "h: POINT; A: CONICSECTION; n: CURVE; 17: NUMBER",
    "facts": "Max(YCoordinate(Projection(h, TangentOnPoint(RightFocus(A), n)))) = 17"
},
{
    "assertion": "LeftPart ( HYPERBOLA: K ) equals CURVE: q",
    "id": 4697,
    "declarations": "K: HYPERBOLA; q: CURVE",
    "facts": "LeftPart(K) = q"
},
{
    "assertion": "Negation ( Min ( Abs ( LINESEGMENT: g ) ) equals Perimeter ( CONICSECTION: L ) ) equals BOOL: True",
    "id": 4698,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsIntersect ( CURVE: M, CURVE: U ) equals BOOL: True",
    "id": 4699,
    "declarations": "M: CURVE; U: CURVE; True: BOOL",
    "facts": "IsIntersect(M, U) = True"
},
{
    "assertion": "FocalLength ( CONICSECTION: q ) equals HalfFocalLength ( CONICSECTION: V )",
    "id": 4700,
    "declarations": "q: CONICSECTION; V: CONICSECTION",
    "facts": "FocalLength(q) = HalfFocalLength(V)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: I ) equals MinorAxis ( ELLIPSE: L )",
    "id": 4701,
    "declarations": "I: ELLIPSE; L: ELLIPSE",
    "facts": "ImaginaryAxis(I) = MinorAxis(L)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: U ) equals POINT: F",
    "id": 4702,
    "declarations": "U: CONICSECTION; F: POINT",
    "facts": "LeftFocus(U) = F"
},
{
    "assertion": "Circumcenter ( TRIANGLE: t ) equals POINT: h",
    "id": 4703,
    "declarations": "t: TRIANGLE; h: POINT",
    "facts": "Circumcenter(t) = h"
},
{
    "assertion": "Asymptote ( HYPERBOLA: F ) equals LINE: g",
    "id": 4704,
    "declarations": "F: HYPERBOLA; g: LINE",
    "facts": "Asymptote(F) = g"
},
{
    "assertion": "Slope ( LeftDirectrix ( CONICSECTION: S ) ) equals Slope ( PerpendicularBisector ( LineSegmentOf ( POINT: x, Orthocenter ( TRIANGLE: i ) ) ) )",
    "id": 4705,
    "declarations": "S: CONICSECTION; x: POINT; i: TRIANGLE",
    "facts": "Slope(LeftDirectrix(S)) = Slope(PerpendicularBisector(LineSegmentOf(x, Orthocenter(i))))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: U ) equals POINT: C",
    "id": 4706,
    "declarations": "U: TRIANGLE; C: POINT",
    "facts": "Orthocenter(U) = C"
},
{
    "assertion": "Vertex ( CONICSECTION: O ) equals LeftFocus ( CONICSECTION: T )",
    "id": 4707,
    "declarations": "O: CONICSECTION; T: CONICSECTION",
    "facts": "Vertex(O) = LeftFocus(T)"
},
{
    "assertion": "TriangleOf ( Circumcenter ( TRIANGLE: N ), MidPoint ( MinorAxis ( ELLIPSE: i ) ), POINT: b ) equals TRIANGLE: g",
    "id": 4708,
    "declarations": "N: TRIANGLE; i: ELLIPSE; b: POINT; g: TRIANGLE",
    "facts": "TriangleOf(Circumcenter(N), MidPoint(MinorAxis(i)), b) = g"
},
{
    "assertion": "TangentOfPoint ( UpperVertex ( CONICSECTION: c ), CURVE: d ) equals RightDirectrix ( CONICSECTION: Q )",
    "id": 4709,
    "declarations": "c: CONICSECTION; d: CURVE; Q: CONICSECTION",
    "facts": "TangentOfPoint(UpperVertex(c), d) = RightDirectrix(Q)"
},
{
    "assertion": "Length ( LINESEGMENT: o ) equals NUMBER: -18",
    "id": 4710,
    "declarations": "o: LINESEGMENT; -18: NUMBER",
    "facts": "Length(o) = -18"
},
{
    "assertion": "Negation ( sqrt ( NUMBER: 10 ) equals Length ( LINESEGMENT: V ) ) equals BOOL: True",
    "id": 4711,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LineOf ( POINT: Q, POINT: q ) equals TangentOnPoint ( LeftVertex ( CONICSECTION: S ), CURVE: h )",
    "id": 4712,
    "declarations": "Q: POINT; q: POINT; S: CONICSECTION; h: CURVE",
    "facts": "LineOf(Q, q) = TangentOnPoint(LeftVertex(S), h)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: J, CircumCircle ( TRIANGLE: C ) ) equals BOOL: True",
    "id": 4713,
    "declarations": "J: CIRCLE; C: TRIANGLE; True: BOOL",
    "facts": "IsOutTangent(J, CircumCircle(C)) = True"
},
{
    "assertion": "lg ( sqrt ( NUMBER: 100 ) ) equals NUMBER: -12",
    "id": 4714,
    "declarations": "100: NUMBER; -12: NUMBER",
    "facts": "lg(sqrt(100)) = -12"
},
{
    "assertion": "InterReciprocal ( Quadrant ( UpperVertex ( CONICSECTION: R ) ) ) equals Abs ( LINESEGMENT: O )",
    "id": 4715,
    "declarations": "R: CONICSECTION; O: LINESEGMENT",
    "facts": "InterReciprocal(Quadrant(UpperVertex(R))) = Abs(O)"
},
{
    "assertion": "Radius ( CIRCLE: i ) equals Abs ( LINESEGMENT: y )",
    "id": 4716,
    "declarations": "i: CIRCLE; y: LINESEGMENT",
    "facts": "Radius(i) = Abs(y)"
},
{
    "assertion": "Endpoint ( InterceptChord ( LINE: N, CONICSECTION: X ) ) equals FootPoint ( LINE: z, LINE: G )",
    "id": 4717,
    "declarations": "N: LINE; X: CONICSECTION; z: LINE; G: LINE",
    "facts": "Endpoint(InterceptChord(N, X)) = FootPoint(z, G)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: a ) equals POINT: T",
    "id": 4718,
    "declarations": "a: LINESEGMENT; T: POINT",
    "facts": "Endpoint(a) = T"
},
{
    "assertion": "Directrix ( CONICSECTION: K ) equals OverlappingLine ( LINESEGMENT: x )",
    "id": 4719,
    "declarations": "K: CONICSECTION; x: LINESEGMENT",
    "facts": "Directrix(K) = OverlappingLine(x)"
},
{
    "assertion": "Focus ( CONICSECTION: K ) equals POINT: G",
    "id": 4720,
    "declarations": "K: CONICSECTION; G: POINT",
    "facts": "Focus(K) = G"
},
{
    "assertion": "IsInTangent ( CIRCLE: Q, CIRCLE: a ) equals BOOL: True",
    "id": 4721,
    "declarations": "Q: CIRCLE; a: CIRCLE; True: BOOL",
    "facts": "IsInTangent(Q, a) = True"
},
{
    "assertion": "InterReciprocal ( XCoordinate ( LeftVertex ( CONICSECTION: a ) ) ) equals YCoordinate ( UpperVertex ( CONICSECTION: W ) )",
    "id": 4722,
    "declarations": "a: CONICSECTION; W: CONICSECTION",
    "facts": "InterReciprocal(XCoordinate(LeftVertex(a))) = YCoordinate(UpperVertex(W))"
},
{
    "assertion": "Abs ( LINESEGMENT: P ) equals NUMBER: 8",
    "id": 4723,
    "declarations": "P: LINESEGMENT; 8: NUMBER",
    "facts": "Abs(P) = 8"
},
{
    "assertion": "InterReciprocal ( NUMBER: -84 ) equals HalfFocalLength ( CONICSECTION: i )",
    "id": 4724,
    "declarations": "-84: NUMBER; i: CONICSECTION",
    "facts": "InterReciprocal(-84) = HalfFocalLength(i)"
},
{
    "assertion": "Incenter ( TRIANGLE: r ) equals Circumcenter ( TRIANGLE: D )",
    "id": 4725,
    "declarations": "r: TRIANGLE; D: TRIANGLE",
    "facts": "Incenter(r) = Circumcenter(D)"
},
{
    "assertion": "LocusEquation ( FootPoint ( LINE: j, OverlappingLine ( LINESEGMENT: O ) ) ) equals LocusEquation ( RightFocus ( CONICSECTION: B ) )",
    "id": 4726,
    "declarations": "j: LINE; O: LINESEGMENT; B: CONICSECTION",
    "facts": "LocusEquation(FootPoint(j, OverlappingLine(O))) = LocusEquation(RightFocus(B))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: D ) equals RightFocus ( CONICSECTION: Y )",
    "id": 4727,
    "declarations": "D: CONICSECTION; Y: CONICSECTION",
    "facts": "UpperVertex(D) = RightFocus(Y)"
},
{
    "assertion": "RightPart ( HYPERBOLA: d ) equals CURVE: r",
    "id": 4728,
    "declarations": "d: HYPERBOLA; r: CURVE",
    "facts": "RightPart(d) = r"
},
{
    "assertion": "Max ( FocalLength ( CONICSECTION: A ) ) equals DotProduct ( VECTOR: W, VECTOR: t )",
    "id": 4729,
    "declarations": "A: CONICSECTION; W: VECTOR; t: VECTOR",
    "facts": "Max(FocalLength(A)) = DotProduct(W, t)"
},
{
    "assertion": "Focus ( CONICSECTION: L ) equals RightFocus ( CONICSECTION: S )",
    "id": 4730,
    "declarations": "L: CONICSECTION; S: CONICSECTION",
    "facts": "Focus(L) = RightFocus(S)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: l, CIRCLE: j ) equals BOOL: False",
    "id": 4731,
    "declarations": "l: LINESEGMENT; j: CIRCLE; False: BOOL",
    "facts": "IsDiameter(l, j) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: I ) equals POINT: n",
    "id": 4732,
    "declarations": "I: CONICSECTION; n: POINT",
    "facts": "RightVertex(I) = n"
},
{
    "assertion": "LowerFocus ( CONICSECTION: x ) equals POINT: O",
    "id": 4733,
    "declarations": "x: CONICSECTION; O: POINT",
    "facts": "LowerFocus(x) = O"
},
{
    "assertion": "UpperFocus ( CONICSECTION: E ) equals MidPoint ( ImaginaryAxis ( ELLIPSE: h ) )",
    "id": 4734,
    "declarations": "E: CONICSECTION; h: ELLIPSE",
    "facts": "UpperFocus(E) = MidPoint(ImaginaryAxis(h))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: L ) equals CURVE: Q",
    "id": 4735,
    "declarations": "L: HYPERBOLA; Q: CURVE",
    "facts": "LeftPart(L) = Q"
},
{
    "assertion": "Incenter ( TRIANGLE: i ) equals Center ( CONICSECTION: p )",
    "id": 4736,
    "declarations": "i: TRIANGLE; p: CONICSECTION",
    "facts": "Incenter(i) = Center(p)"
},
{
    "assertion": "Center ( CONICSECTION: N ) equals POINT: K",
    "id": 4737,
    "declarations": "N: CONICSECTION; K: POINT",
    "facts": "Center(N) = K"
},
{
    "assertion": "sqrt ( NUMBER: -2 ) equals XCoordinate ( Center ( CONICSECTION: N ) )",
    "id": 4738,
    "declarations": "-2: NUMBER; N: CONICSECTION",
    "facts": "sqrt(-2) = XCoordinate(Center(N))"
},
{
    "assertion": "LineSegmentOf ( Orthocenter ( TRIANGLE: m ), POINT: Q ) equals MinorAxis ( ELLIPSE: f )",
    "id": 4739,
    "declarations": "m: TRIANGLE; Q: POINT; f: ELLIPSE",
    "facts": "LineSegmentOf(Orthocenter(m), Q) = MinorAxis(f)"
},
{
    "assertion": "Quadrant ( POINT: V ) equals Min ( sqrt ( Diameter ( CIRCLE: B ) ) )",
    "id": 4740,
    "declarations": "V: POINT; B: CIRCLE",
    "facts": "Quadrant(V) = Min(sqrt(Diameter(B)))"
},
{
    "assertion": "Between ( POINT: i, POINT: W, POINT: s ) equals BOOL: True",
    "id": 4741,
    "declarations": "i: POINT; W: POINT; s: POINT; True: BOOL",
    "facts": "Between(i, W, s) = True"
},
{
    "assertion": "FootPoint ( LINE: u, LINE: C ) equals POINT: r",
    "id": 4742,
    "declarations": "u: LINE; C: LINE; r: POINT",
    "facts": "FootPoint(u, C) = r"
},
{
    "assertion": "MajorAxis ( ELLIPSE: u ) equals RealAxis ( ELLIPSE: Y )",
    "id": 4743,
    "declarations": "u: ELLIPSE; Y: ELLIPSE",
    "facts": "MajorAxis(u) = RealAxis(Y)"
},
{
    "assertion": "InterceptChord ( LINE: N, CONICSECTION: o ) equals LINESEGMENT: n",
    "id": 4744,
    "declarations": "N: LINE; o: CONICSECTION; n: LINESEGMENT",
    "facts": "InterceptChord(N, o) = n"
},
{
    "assertion": "Min ( HalfFocalLength ( CONICSECTION: x ) ) equals sqrt ( Min ( NUMBER: 13 ) )",
    "id": 4745,
    "declarations": "x: CONICSECTION; 13: NUMBER",
    "facts": "Min(HalfFocalLength(x)) = sqrt(Min(13))"
},
{
    "assertion": "Locus ( POINT: O ) equals CURVE: F",
    "id": 4746,
    "declarations": "O: POINT; F: CURVE",
    "facts": "Locus(O) = F"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: p ) equals LINE: A",
    "id": 4747,
    "declarations": "p: CONICSECTION; A: LINE",
    "facts": "LeftDirectrix(p) = A"
},
{
    "assertion": "Eccentricity ( CONICSECTION: e ) equals InterReciprocal ( FocalLength ( CONICSECTION: V ) )",
    "id": 4748,
    "declarations": "e: CONICSECTION; V: CONICSECTION",
    "facts": "Eccentricity(e) = InterReciprocal(FocalLength(V))"
},
{
    "assertion": "Expression ( CURVE: v ) equals EXPRESSION: y*space=*spacex^3*space-*space2*x*space+*space1",
    "id": 4749,
    "declarations": "v: CURVE; y*space=*spacex^3*space-*space2*x*space+*space1: EXPRESSION",
    "facts": "Expression(v) = y*space=*spacex^3*space-*space2*x*space+*space1"
},
{
    "assertion": "lg ( lg ( NUMBER: 60 ) ) equals XCoordinate ( POINT: k )",
    "id": 4750,
    "declarations": "60: NUMBER; k: POINT",
    "facts": "lg(lg(60)) = XCoordinate(k)"
},
{
    "assertion": "Intercept ( LineOf ( POINT: n, Circumcenter ( TRIANGLE: q ) ), SymmetryAxis ( CONICSECTION: O ) ) equals NUMBER: 87",
    "id": 4751,
    "declarations": "n: POINT; q: TRIANGLE; O: CONICSECTION; 87: NUMBER",
    "facts": "Intercept(LineOf(n, Circumcenter(q)), SymmetryAxis(O)) = 87"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: t ) ) equals NUMBER: -25",
    "id": 4752,
    "declarations": "t: CONICSECTION; -25: NUMBER",
    "facts": "Quadrant(LeftVertex(t)) = -25"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: V ) equals AXIS: xAxis",
    "id": 4753,
    "declarations": "V: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(V) = xAxis"
},
{
    "assertion": "NumIntersection ( Locus ( LeftVertex ( CONICSECTION: G ) ), CURVE: U ) equals XCoordinate ( Orthocenter ( TRIANGLE: q ) )",
    "id": 4754,
    "declarations": "G: CONICSECTION; U: CURVE; q: TRIANGLE",
    "facts": "NumIntersection(Locus(LeftVertex(G)), U) = XCoordinate(Orthocenter(q))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: Z ) equals RightVertex ( CONICSECTION: D )",
    "id": 4755,
    "declarations": "Z: CONICSECTION; D: CONICSECTION",
    "facts": "LeftVertex(Z) = RightVertex(D)"
},
{
    "assertion": "RealAxis ( ELLIPSE: g ) equals LINESEGMENT: i",
    "id": 4756,
    "declarations": "g: ELLIPSE; i: LINESEGMENT",
    "facts": "RealAxis(g) = i"
},
{
    "assertion": "Vertex ( CONICSECTION: W ) equals POINT: R",
    "id": 4757,
    "declarations": "W: CONICSECTION; R: POINT",
    "facts": "Vertex(W) = R"
},
{
    "assertion": "Eccentricity ( CONICSECTION: W ) equals Intercept ( LINE: p, AXIS: yAxis )",
    "id": 4758,
    "declarations": "W: CONICSECTION; p: LINE; yAxis: AXIS",
    "facts": "Eccentricity(W) = Intercept(p, yAxis)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: g ) equals AXIS: yAxis",
    "id": 4759,
    "declarations": "g: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(g) = yAxis"
},
{
    "assertion": "Slope ( LINE: T ) equals NUMBER: -60",
    "id": 4760,
    "declarations": "T: LINE; -60: NUMBER",
    "facts": "Slope(T) = -60"
},
{
    "assertion": "MidPoint ( LineSegmentOf ( RightVertex ( CONICSECTION: Q ), Circumcenter ( TRIANGLE: l ) ) ) equals MidPoint ( LINESEGMENT: v )",
    "id": 4761,
    "declarations": "Q: CONICSECTION; l: TRIANGLE; v: LINESEGMENT",
    "facts": "MidPoint(LineSegmentOf(RightVertex(Q), Circumcenter(l))) = MidPoint(v)"
},
{
    "assertion": "AngleOf ( MidPoint ( LINESEGMENT: b ), LeftVertex ( CONICSECTION: z ), LowerFocus ( CONICSECTION: h ) ) equals ApplyUnit ( Quadrant ( POINT: h ), DEGREESTR: degree )",
    "id": 4762,
    "declarations": "b: LINESEGMENT; z: CONICSECTION; h: CONICSECTION; h: POINT; degree: DEGREESTR",
    "facts": "AngleOf(MidPoint(b), LeftVertex(z), LowerFocus(h)) = ApplyUnit(Quadrant(h), degree)"
},
{
    "assertion": "InterceptChord ( OverlappingLine ( LINESEGMENT: j ), CONICSECTION: b ) equals LINESEGMENT: q",
    "id": 4763,
    "declarations": "j: LINESEGMENT; b: CONICSECTION; q: LINESEGMENT",
    "facts": "InterceptChord(OverlappingLine(j), b) = q"
},
{
    "assertion": "Circumcenter ( TRIANGLE: K ) equals UpperFocus ( CONICSECTION: c )",
    "id": 4764,
    "declarations": "K: TRIANGLE; c: CONICSECTION",
    "facts": "Circumcenter(K) = UpperFocus(c)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: W ) equals LINE: c",
    "id": 4765,
    "declarations": "W: HYPERBOLA; c: LINE",
    "facts": "Asymptote(W) = c"
},
{
    "assertion": "Circumcenter ( TRIANGLE: B ) equals POINT: F",
    "id": 4766,
    "declarations": "B: TRIANGLE; F: POINT",
    "facts": "Circumcenter(B) = F"
},
{
    "assertion": "Focus ( CONICSECTION: p ) equals POINT: U",
    "id": 4767,
    "declarations": "p: CONICSECTION; U: POINT",
    "facts": "Focus(p) = U"
},
{
    "assertion": "UpperFocus ( CONICSECTION: x ) equals UpperFocus ( CONICSECTION: N )",
    "id": 4768,
    "declarations": "x: CONICSECTION; N: CONICSECTION",
    "facts": "UpperFocus(x) = UpperFocus(N)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: u, CIRCLE: d ) equals BOOL: False",
    "id": 4769,
    "declarations": "u: CIRCLE; d: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(u, d) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: u ) equals MidPoint ( InterceptChord ( OverlappingLine ( MajorAxis ( ELLIPSE: t ) ), CONICSECTION: x ) )",
    "id": 4770,
    "declarations": "u: CONICSECTION; t: ELLIPSE; x: CONICSECTION",
    "facts": "UpperFocus(u) = MidPoint(InterceptChord(OverlappingLine(MajorAxis(t)), x))"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: E ) ) equals NUMBER: 65",
    "id": 4771,
    "declarations": "E: CONICSECTION; 65: NUMBER",
    "facts": "Quadrant(LeftVertex(E)) = 65"
},
{
    "assertion": "Circumcenter ( TRIANGLE: v ) equals LowerFocus ( CONICSECTION: r )",
    "id": 4772,
    "declarations": "v: TRIANGLE; r: CONICSECTION",
    "facts": "Circumcenter(v) = LowerFocus(r)"
},
{
    "assertion": "Negation ( RightDirectrix ( CONICSECTION: C ) equals LINE: b ) equals BOOL: True",
    "id": 4773,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightVertex ( CONICSECTION: l ) equals POINT: R",
    "id": 4774,
    "declarations": "l: CONICSECTION; R: POINT",
    "facts": "RightVertex(l) = R"
},
{
    "assertion": "Area ( CONICSECTION: O ) equals YCoordinate ( POINT: f )",
    "id": 4775,
    "declarations": "O: CONICSECTION; f: POINT",
    "facts": "Area(O) = YCoordinate(f)"
},
{
    "assertion": "ApplyUnit ( sqrt ( NUMBER: -44 ), DEGREESTR: degree )",
    "id": 4776,
    "declarations": "-44: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(sqrt(-44), degree) = None"
},
{
    "assertion": "PointOnCurve ( POINT: s, Locus ( FootPoint ( LeftDirectrix ( CONICSECTION: B ), LINE: r ) ) ) equals BOOL: True",
    "id": 4777,
    "declarations": "s: POINT; B: CONICSECTION; r: LINE; True: BOOL",
    "facts": "PointOnCurve(s, Locus(FootPoint(LeftDirectrix(B), r))) = True"
},
{
    "assertion": "Center ( CONICSECTION: A ) equals FootPoint ( LINE: p, RightDirectrix ( CONICSECTION: J ) )",
    "id": 4778,
    "declarations": "A: CONICSECTION; p: LINE; J: CONICSECTION",
    "facts": "Center(A) = FootPoint(p, RightDirectrix(J))"
},
{
    "assertion": "IsOutTangent ( CIRCLE: e, CIRCLE: x ) equals BOOL: True",
    "id": 4779,
    "declarations": "e: CIRCLE; x: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(e, x) = True"
},
{
    "assertion": "Quadrant ( POINT: V ) equals sqrt ( Abs ( LINESEGMENT: l ) )",
    "id": 4780,
    "declarations": "V: POINT; l: LINESEGMENT",
    "facts": "Quadrant(V) = sqrt(Abs(l))"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: R ) ) equals Perimeter ( CONICSECTION: Y )",
    "id": 4781,
    "declarations": "R: CONICSECTION; Y: CONICSECTION",
    "facts": "Quadrant(LeftVertex(R)) = Perimeter(Y)"
},
{
    "assertion": "IsParallel ( LineOf ( LowerFocus ( CONICSECTION: R ), POINT: c ), OverlappingLine ( LINESEGMENT: s ) ) equals BOOL: False",
    "id": 4782,
    "declarations": "R: CONICSECTION; c: POINT; s: LINESEGMENT; False: BOOL",
    "facts": "IsParallel(LineOf(LowerFocus(R), c), OverlappingLine(s)) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: i ) equals LineSegmentOf ( RightVertex ( CONICSECTION: t ), POINT: Z )",
    "id": 4783,
    "declarations": "i: ELLIPSE; t: CONICSECTION; Z: POINT",
    "facts": "MinorAxis(i) = LineSegmentOf(RightVertex(t), Z)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: C, CIRCLE: C ) equals BOOL: False",
    "id": 4784,
    "declarations": "C: LINESEGMENT; C: CIRCLE; False: BOOL",
    "facts": "IsDiameter(C, C) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: s ) equals RightVertex ( CONICSECTION: V )",
    "id": 4785,
    "declarations": "s: CONICSECTION; V: CONICSECTION",
    "facts": "RightVertex(s) = RightVertex(V)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: X ) equals LowerVertex ( CONICSECTION: h )",
    "id": 4786,
    "declarations": "X: CONICSECTION; h: CONICSECTION",
    "facts": "UpperFocus(X) = LowerVertex(h)"
},
{
    "assertion": "YCoordinate ( POINT: X ) equals Radius ( CIRCLE: r )",
    "id": 4787,
    "declarations": "X: POINT; r: CIRCLE",
    "facts": "YCoordinate(X) = Radius(r)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: d ) equals CIRCLE: z",
    "id": 4788,
    "declarations": "d: TRIANGLE; z: CIRCLE",
    "facts": "CircumCircle(d) = z"
},
{
    "assertion": "LowerVertex ( CONICSECTION: Q ) equals UpperVertex ( CONICSECTION: F )",
    "id": 4789,
    "declarations": "Q: CONICSECTION; F: CONICSECTION",
    "facts": "LowerVertex(Q) = UpperVertex(F)"
},
{
    "assertion": "XCoordinate ( POINT: Q ) equals NUMBER: -68",
    "id": 4790,
    "declarations": "Q: POINT; -68: NUMBER",
    "facts": "XCoordinate(Q) = -68"
},
{
    "assertion": "Expression ( CURVE: H ) equals LocusEquation ( LeftVertex ( CONICSECTION: L ) )",
    "id": 4791,
    "declarations": "H: CURVE; L: CONICSECTION",
    "facts": "Expression(H) = LocusEquation(LeftVertex(L))"
},
{
    "assertion": "Max ( NUMBER: 86 ) equals XCoordinate ( POINT: a )",
    "id": 4792,
    "declarations": "86: NUMBER; a: POINT",
    "facts": "Max(86) = XCoordinate(a)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: a ) equals LINE: j",
    "id": 4793,
    "declarations": "a: LINESEGMENT; j: LINE",
    "facts": "PerpendicularBisector(a) = j"
},
{
    "assertion": "LeftFocus ( CONICSECTION: O ) equals MidPoint ( LINESEGMENT: E )",
    "id": 4794,
    "declarations": "O: CONICSECTION; E: LINESEGMENT",
    "facts": "LeftFocus(O) = MidPoint(E)"
},
{
    "assertion": "Quadrant ( POINT: h ) equals DotProduct ( VECTOR: Q, VECTOR: S )",
    "id": 4795,
    "declarations": "h: POINT; Q: VECTOR; S: VECTOR",
    "facts": "Quadrant(h) = DotProduct(Q, S)"
},
{
    "assertion": "LineSegmentOf ( POINT: c, Orthocenter ( TriangleOf ( POINT: C, Projection ( RightFocus ( CONICSECTION: H ), LINE: m ), MidPoint ( MinorAxis ( ELLIPSE: y ) ) ) ) ) equals LINESEGMENT: p",
    "id": 4796,
    "declarations": "c: POINT; C: POINT; H: CONICSECTION; m: LINE; y: ELLIPSE; p: LINESEGMENT",
    "facts": "LineSegmentOf(c, Orthocenter(TriangleOf(C, Projection(RightFocus(H), m), MidPoint(MinorAxis(y))))) = p"
},
{
    "assertion": "ApplyUnit ( Abs ( LINESEGMENT: b ), DEGREESTR: degree )",
    "id": 4797,
    "declarations": "b: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(Abs(b), degree) = None"
},
{
    "assertion": "Eccentricity ( CONICSECTION: Z ) equals Eccentricity ( CONICSECTION: Y )",
    "id": 4798,
    "declarations": "Z: CONICSECTION; Y: CONICSECTION",
    "facts": "Eccentricity(Z) = Eccentricity(Y)"
},
{
    "assertion": "Incenter ( TRIANGLE: O ) equals MidPoint ( LINESEGMENT: q )",
    "id": 4799,
    "declarations": "O: TRIANGLE; q: LINESEGMENT",
    "facts": "Incenter(O) = MidPoint(q)"
},
{
    "assertion": "Directrix ( CONICSECTION: E ) equals LineOf ( MidPoint ( LINESEGMENT: V ), POINT: l )",
    "id": 4800,
    "declarations": "E: CONICSECTION; V: LINESEGMENT; l: POINT",
    "facts": "Directrix(E) = LineOf(MidPoint(V), l)"
},
{
    "assertion": "TangentPoint ( LINE: m, CIRCLE: u ) equals POINT: I",
    "id": 4801,
    "declarations": "m: LINE; u: CIRCLE; I: POINT",
    "facts": "TangentPoint(m, u) = I"
},
{
    "assertion": "Negation ( LineSegmentOf ( Center ( CONICSECTION: o ), MidPoint ( LINESEGMENT: p ) ) equals LINESEGMENT: u ) equals BOOL: True",
    "id": 4802,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Expression ( CURVE: H ) equals EXPRESSION: y*space=*spacetan(x)",
    "id": 4803,
    "declarations": "H: CURVE; y*space=*spacetan(x): EXPRESSION",
    "facts": "Expression(H) = y*space=*spacetan(x)"
},
{
    "assertion": "IsInTangent ( CIRCLE: e, CIRCLE: p ) equals BOOL: False",
    "id": 4804,
    "declarations": "e: CIRCLE; p: CIRCLE; False: BOOL",
    "facts": "IsInTangent(e, p) = False"
},
{
    "assertion": "Locus ( POINT: Y ) equals CURVE: A",
    "id": 4805,
    "declarations": "Y: POINT; A: CURVE",
    "facts": "Locus(Y) = A"
},
{
    "assertion": "ApplyUnit ( NUMBER: -95, DEGREESTR: degree )",
    "id": 4806,
    "declarations": "-95: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-95, degree) = None"
},
{
    "assertion": "Orthocenter ( TRIANGLE: r ) equals POINT: S",
    "id": 4807,
    "declarations": "r: TRIANGLE; S: POINT",
    "facts": "Orthocenter(r) = S"
},
{
    "assertion": "Between ( UpperFocus ( CONICSECTION: W ), Orthocenter ( TRIANGLE: N ), POINT: P ) equals BOOL: False",
    "id": 4808,
    "declarations": "W: CONICSECTION; N: TRIANGLE; P: POINT; False: BOOL",
    "facts": "Between(UpperFocus(W), Orthocenter(N), P) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: G ) equals LINE: h",
    "id": 4809,
    "declarations": "G: CONICSECTION; h: LINE",
    "facts": "Directrix(G) = h"
},
{
    "assertion": "Asymptote ( HYPERBOLA: u ) equals LINE: j",
    "id": 4810,
    "declarations": "u: HYPERBOLA; j: LINE",
    "facts": "Asymptote(u) = j"
},
{
    "assertion": "Length ( MajorAxis ( ELLIPSE: i ) ) equals Diameter ( CIRCLE: O )",
    "id": 4811,
    "declarations": "i: ELLIPSE; O: CIRCLE",
    "facts": "Length(MajorAxis(i)) = Diameter(O)"
},
{
    "assertion": "lg ( NUMBER: 93 ) equals NUMBER: 69",
    "id": 4812,
    "declarations": "93: NUMBER; 69: NUMBER",
    "facts": "lg(93) = 69"
},
{
    "assertion": "MidPoint ( LINESEGMENT: H ) equals MidPoint ( LINESEGMENT: s )",
    "id": 4813,
    "declarations": "H: LINESEGMENT; s: LINESEGMENT",
    "facts": "MidPoint(H) = MidPoint(s)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: b ) equals LineSegmentOf ( POINT: r, POINT: n )",
    "id": 4814,
    "declarations": "b: ELLIPSE; r: POINT; n: POINT",
    "facts": "MajorAxis(b) = LineSegmentOf(r, n)"
},
{
    "assertion": "Intercept ( LINE: O, AXIS: xAxis ) equals Quadrant ( RightFocus ( CONICSECTION: N ) )",
    "id": 4815,
    "declarations": "O: LINE; xAxis: AXIS; N: CONICSECTION",
    "facts": "Intercept(O, xAxis) = Quadrant(RightFocus(N))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: h ) equals CIRCLE: f",
    "id": 4816,
    "declarations": "h: TRIANGLE; f: CIRCLE",
    "facts": "CircumCircle(h) = f"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: D ) equals PerpendicularBisector ( RealAxis ( ELLIPSE: K ) )",
    "id": 4817,
    "declarations": "D: CONICSECTION; K: ELLIPSE",
    "facts": "LeftDirectrix(D) = PerpendicularBisector(RealAxis(K))"
},
{
    "assertion": "TangentOnPoint ( LeftVertex ( CONICSECTION: E ), CURVE: M ) equals PerpendicularBisector ( LINESEGMENT: Z )",
    "id": 4818,
    "declarations": "E: CONICSECTION; M: CURVE; Z: LINESEGMENT",
    "facts": "TangentOnPoint(LeftVertex(E), M) = PerpendicularBisector(Z)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: A ) equals OverlappingLine ( LINESEGMENT: y )",
    "id": 4819,
    "declarations": "A: CONICSECTION; y: LINESEGMENT",
    "facts": "LeftDirectrix(A) = OverlappingLine(y)"
},
{
    "assertion": "TriangleOf ( Center ( CONICSECTION: m ), POINT: j, UpperVertex ( CONICSECTION: i ) ) equals TRIANGLE: T",
    "id": 4820,
    "declarations": "m: CONICSECTION; j: POINT; i: CONICSECTION; T: TRIANGLE",
    "facts": "TriangleOf(Center(m), j, UpperVertex(i)) = T"
},
{
    "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: w ) ) equals NUMBER: -93",
    "id": 4821,
    "declarations": "w: CONICSECTION; -93: NUMBER",
    "facts": "XCoordinate(UpperVertex(w)) = -93"
},
{
    "assertion": "sqrt ( NUMBER: 55 ) equals Min ( Slope ( LINE: M ) )",
    "id": 4822,
    "declarations": "55: NUMBER; M: LINE",
    "facts": "sqrt(55) = Min(Slope(M))"
},
{
    "assertion": "IsOutTangent ( CIRCLE: c, CircumCircle ( TRIANGLE: Y ) ) equals BOOL: False",
    "id": 4823,
    "declarations": "c: CIRCLE; Y: TRIANGLE; False: BOOL",
    "facts": "IsOutTangent(c, CircumCircle(Y)) = False"
},
{
    "assertion": "Abs ( LINESEGMENT: c ) equals Abs ( LINESEGMENT: N )",
    "id": 4824,
    "declarations": "c: LINESEGMENT; N: LINESEGMENT",
    "facts": "Abs(c) = Abs(N)"
},
{
    "assertion": "LineSegmentOf ( LeftFocus ( CONICSECTION: w ), LowerVertex ( CONICSECTION: N ) ) equals ImaginaryAxis ( ELLIPSE: L )",
    "id": 4825,
    "declarations": "w: CONICSECTION; N: CONICSECTION; L: ELLIPSE",
    "facts": "LineSegmentOf(LeftFocus(w), LowerVertex(N)) = ImaginaryAxis(L)"
},
{
    "assertion": "Incenter ( TRIANGLE: N ) equals LowerVertex ( CONICSECTION: Z )",
    "id": 4826,
    "declarations": "N: TRIANGLE; Z: CONICSECTION",
    "facts": "Incenter(N) = LowerVertex(Z)"
},
{
    "assertion": "NumIntersection ( CURVE: y, CURVE: O ) equals lg ( YCoordinate ( RightVertex ( CONICSECTION: G ) ) )",
    "id": 4827,
    "declarations": "y: CURVE; O: CURVE; G: CONICSECTION",
    "facts": "NumIntersection(y, O) = lg(YCoordinate(RightVertex(G)))"
},
{
    "assertion": "Expression ( RightPart ( HYPERBOLA: u ) ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 4828,
    "declarations": "u: HYPERBOLA; y*space=*spacesin(x): EXPRESSION",
    "facts": "Expression(RightPart(u)) = y*space=*spacesin(x)"
},
{
    "assertion": "TangentPoint ( LINE: J, CIRCLE: D ) equals LeftVertex ( CONICSECTION: q )",
    "id": 4829,
    "declarations": "J: LINE; D: CIRCLE; q: CONICSECTION",
    "facts": "TangentPoint(J, D) = LeftVertex(q)"
},
{
    "assertion": "TangentPoint ( TangentOnPoint ( POINT: U, CURVE: z ), CIRCLE: J ) equals LowerVertex ( CONICSECTION: Q )",
    "id": 4830,
    "declarations": "U: POINT; z: CURVE; J: CIRCLE; Q: CONICSECTION",
    "facts": "TangentPoint(TangentOnPoint(U, z), J) = LowerVertex(Q)"
},
{
    "assertion": "RightPart ( HYPERBOLA: R ) equals CURVE: u",
    "id": 4831,
    "declarations": "R: HYPERBOLA; u: CURVE",
    "facts": "RightPart(R) = u"
},
{
    "assertion": "AngleOf ( POINT: s, LeftVertex ( CONICSECTION: t ), POINT: x ) equals ApplyUnit ( NUMBER: 5, DEGREESTR: degree )",
    "id": 4832,
    "declarations": "s: POINT; t: CONICSECTION; x: POINT; 5: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(s, LeftVertex(t), x) = ApplyUnit(5, degree)"
},
{
    "assertion": "Coordinate ( Projection ( MidPoint ( MajorAxis ( ELLIPSE: f ) ), LINE: N ) ) equals ( DotProduct ( VECTOR: M, VECTOR: a ), Min ( NUMBER: 87 ) )",
    "id": 4833,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "CircumCircle ( TRIANGLE: Q ) equals CIRCLE: P",
    "id": 4834,
    "declarations": "Q: TRIANGLE; P: CIRCLE",
    "facts": "CircumCircle(Q) = P"
},
{
    "assertion": "Coordinate ( POINT: M ) equals ( Diameter ( CIRCLE: g ), HalfFocalLength ( CONICSECTION: Q ) )",
    "id": 4835,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Slope ( LINE: X ) equals NUMBER: 100",
    "id": 4836,
    "declarations": "X: LINE; 100: NUMBER",
    "facts": "Slope(X) = 100"
},
{
    "assertion": "InterReciprocal ( Slope ( LINE: E ) ) equals NUMBER: -42",
    "id": 4837,
    "declarations": "E: LINE; -42: NUMBER",
    "facts": "InterReciprocal(Slope(E)) = -42"
},
{
    "assertion": "DotProduct ( VECTOR: o, VECTOR: t ) equals FocalLength ( CONICSECTION: f )",
    "id": 4838,
    "declarations": "o: VECTOR; t: VECTOR; f: CONICSECTION",
    "facts": "DotProduct(o, t) = FocalLength(f)"
},
{
    "assertion": "FocalLength ( CONICSECTION: o ) equals sqrt ( YCoordinate ( POINT: V ) )",
    "id": 4839,
    "declarations": "o: CONICSECTION; V: POINT",
    "facts": "FocalLength(o) = sqrt(YCoordinate(V))"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: G, CONICSECTION: K ) equals BOOL: False",
    "id": 4840,
    "declarations": "G: LINESEGMENT; K: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(G, K) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: L ) equals POINT: S",
    "id": 4841,
    "declarations": "L: TRIANGLE; S: POINT",
    "facts": "Incenter(L) = S"
},
{
    "assertion": "Between ( POINT: b, LeftFocus ( CONICSECTION: c ), MidPoint ( LINESEGMENT: a ) ) equals BOOL: True",
    "id": 4842,
    "declarations": "b: POINT; c: CONICSECTION; a: LINESEGMENT; True: BOOL",
    "facts": "Between(b, LeftFocus(c), MidPoint(a)) = True"
},
{
    "assertion": "Endpoint ( LINESEGMENT: F ) equals POINT: a",
    "id": 4843,
    "declarations": "F: LINESEGMENT; a: POINT",
    "facts": "Endpoint(F) = a"
},
{
    "assertion": "IsIntersect ( CURVE: e, CURVE: C ) equals BOOL: True",
    "id": 4844,
    "declarations": "e: CURVE; C: CURVE; True: BOOL",
    "facts": "IsIntersect(e, C) = True"
},
{
    "assertion": "Focus ( CONICSECTION: n ) equals POINT: B",
    "id": 4845,
    "declarations": "n: CONICSECTION; B: POINT",
    "facts": "Focus(n) = B"
},
{
    "assertion": "TriangleOf ( LowerFocus ( CONICSECTION: v ), RightFocus ( CONICSECTION: m ), POINT: l ) equals TRIANGLE: i",
    "id": 4846,
    "declarations": "v: CONICSECTION; m: CONICSECTION; l: POINT; i: TRIANGLE",
    "facts": "TriangleOf(LowerFocus(v), RightFocus(m), l) = i"
},
{
    "assertion": "RightVertex ( CONICSECTION: X ) equals Orthocenter ( TRIANGLE: O )",
    "id": 4847,
    "declarations": "X: CONICSECTION; O: TRIANGLE",
    "facts": "RightVertex(X) = Orthocenter(O)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: d ) equals LINESEGMENT: L",
    "id": 4848,
    "declarations": "d: ELLIPSE; L: LINESEGMENT",
    "facts": "MinorAxis(d) = L"
},
{
    "assertion": "IsPerpendicular ( LINE: I, LINE: o ) equals BOOL: True",
    "id": 4849,
    "declarations": "I: LINE; o: LINE; True: BOOL",
    "facts": "IsPerpendicular(I, o) = True"
},
{
    "assertion": "Between ( Center ( CONICSECTION: M ), LeftVertex ( CONICSECTION: a ), RightVertex ( CONICSECTION: b ) ) equals BOOL: False",
    "id": 4850,
    "declarations": "M: CONICSECTION; a: CONICSECTION; b: CONICSECTION; False: BOOL",
    "facts": "Between(Center(M), LeftVertex(a), RightVertex(b)) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: h ) equals Center ( CONICSECTION: x )",
    "id": 4851,
    "declarations": "h: CONICSECTION; x: CONICSECTION",
    "facts": "LeftVertex(h) = Center(x)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: u ) equals POINT: I",
    "id": 4852,
    "declarations": "u: LINESEGMENT; I: POINT",
    "facts": "Endpoint(u) = I"
},
{
    "assertion": "Min ( Inclination ( LINE: h ) ) equals Quadrant ( Circumcenter ( TRIANGLE: w ) )",
    "id": 4853,
    "declarations": "h: LINE; w: TRIANGLE",
    "facts": "Min(Inclination(h)) = Quadrant(Circumcenter(w))"
},
{
    "assertion": "RightPart ( HYPERBOLA: c ) equals CURVE: T",
    "id": 4854,
    "declarations": "c: HYPERBOLA; T: CURVE",
    "facts": "RightPart(c) = T"
},
{
    "assertion": "Slope ( LINE: D ) equals Min ( NumIntersection ( CURVE: S, CURVE: i ) )",
    "id": 4855,
    "declarations": "D: LINE; S: CURVE; i: CURVE",
    "facts": "Slope(D) = Min(NumIntersection(S, i))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: H ) equals LINESEGMENT: n",
    "id": 4856,
    "declarations": "H: ELLIPSE; n: LINESEGMENT",
    "facts": "MinorAxis(H) = n"
},
{
    "assertion": "Distance ( Circumcenter ( TRIANGLE: d ), LeftFocus ( CONICSECTION: w ) ) equals sqrt ( Distance ( POINT: l, LowerVertex ( CONICSECTION: J ) ) )",
    "id": 4857,
    "declarations": "d: TRIANGLE; w: CONICSECTION; l: POINT; J: CONICSECTION",
    "facts": "Distance(Circumcenter(d), LeftFocus(w)) = sqrt(Distance(l, LowerVertex(J)))"
},
{
    "assertion": "lg ( NUMBER: -6 ) equals Eccentricity ( CONICSECTION: C )",
    "id": 4858,
    "declarations": "-6: NUMBER; C: CONICSECTION",
    "facts": "lg(-6) = Eccentricity(C)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: i ) equals LINE: b",
    "id": 4859,
    "declarations": "i: CONICSECTION; b: LINE",
    "facts": "RightDirectrix(i) = b"
},
{
    "assertion": "VectorOf ( POINT: B, POINT: I ) equals VECTOR: Z",
    "id": 4860,
    "declarations": "B: POINT; I: POINT; Z: VECTOR",
    "facts": "VectorOf(B, I) = Z"
},
{
    "assertion": "UpperVertex ( CONICSECTION: d ) equals POINT: q",
    "id": 4861,
    "declarations": "d: CONICSECTION; q: POINT",
    "facts": "UpperVertex(d) = q"
},
{
    "assertion": "Locus ( POINT: N ) equals CURVE: z",
    "id": 4862,
    "declarations": "N: POINT; z: CURVE",
    "facts": "Locus(N) = z"
},
{
    "assertion": "UpperFocus ( CONICSECTION: H ) equals POINT: S",
    "id": 4863,
    "declarations": "H: CONICSECTION; S: POINT",
    "facts": "UpperFocus(H) = S"
},
{
    "assertion": "LowerFocus ( CONICSECTION: l ) equals POINT: p",
    "id": 4864,
    "declarations": "l: CONICSECTION; p: POINT",
    "facts": "LowerFocus(l) = p"
},
{
    "assertion": "IsParallel ( LINE: O, LINE: R ) equals BOOL: True",
    "id": 4865,
    "declarations": "O: LINE; R: LINE; True: BOOL",
    "facts": "IsParallel(O, R) = True"
},
{
    "assertion": "RealAxis ( ELLIPSE: i ) equals MinorAxis ( ELLIPSE: Q )",
    "id": 4866,
    "declarations": "i: ELLIPSE; Q: ELLIPSE",
    "facts": "RealAxis(i) = MinorAxis(Q)"
},
{
    "assertion": "Min ( NUMBER: 83 ) equals NUMBER: -21",
    "id": 4867,
    "declarations": "83: NUMBER; -21: NUMBER",
    "facts": "Min(83) = -21"
},
{
    "assertion": "PointOnCurve ( RightFocus ( CONICSECTION: b ), RightPart ( HYPERBOLA: y ) ) equals BOOL: True",
    "id": 4868,
    "declarations": "b: CONICSECTION; y: HYPERBOLA; True: BOOL",
    "facts": "PointOnCurve(RightFocus(b), RightPart(y)) = True"
},
{
    "assertion": "IsOutTangent ( CircumCircle ( TRIANGLE: B ), CIRCLE: s ) equals BOOL: False",
    "id": 4869,
    "declarations": "B: TRIANGLE; s: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(CircumCircle(B), s) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: A ) equals POINT: o",
    "id": 4870,
    "declarations": "A: CONICSECTION; o: POINT",
    "facts": "LowerFocus(A) = o"
},
{
    "assertion": "MidPoint ( LINESEGMENT: u ) equals POINT: F",
    "id": 4871,
    "declarations": "u: LINESEGMENT; F: POINT",
    "facts": "MidPoint(u) = F"
},
{
    "assertion": "Locus ( POINT: l ) equals CURVE: M",
    "id": 4872,
    "declarations": "l: POINT; M: CURVE",
    "facts": "Locus(l) = M"
},
{
    "assertion": "Circumcenter ( TRIANGLE: c ) equals POINT: D",
    "id": 4873,
    "declarations": "c: TRIANGLE; D: POINT",
    "facts": "Circumcenter(c) = D"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: g ) ) equals Abs ( LINESEGMENT: Z )",
    "id": 4874,
    "declarations": "g: TRIANGLE; Z: LINESEGMENT",
    "facts": "Diameter(CircumCircle(g)) = Abs(Z)"
},
{
    "assertion": "Quadrant ( POINT: v ) equals InterReciprocal ( Slope ( LINE: N ) )",
    "id": 4875,
    "declarations": "v: POINT; N: LINE",
    "facts": "Quadrant(v) = InterReciprocal(Slope(N))"
},
{
    "assertion": "lg ( Perimeter ( CONICSECTION: O ) ) equals sqrt ( NUMBER: -83 )",
    "id": 4876,
    "declarations": "O: CONICSECTION; -83: NUMBER",
    "facts": "lg(Perimeter(O)) = sqrt(-83)"
},
{
    "assertion": "Radius ( CIRCLE: B ) equals HalfFocalLength ( CONICSECTION: T )",
    "id": 4877,
    "declarations": "B: CIRCLE; T: CONICSECTION",
    "facts": "Radius(B) = HalfFocalLength(T)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: T, TRIANGLE: R ) equals BOOL: False",
    "id": 4878,
    "declarations": "T: CIRCLE; R: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(T, R) = False"
},
{
    "assertion": "Eccentricity ( CONICSECTION: s ) equals HalfFocalLength ( CONICSECTION: l )",
    "id": 4879,
    "declarations": "s: CONICSECTION; l: CONICSECTION",
    "facts": "Eccentricity(s) = HalfFocalLength(l)"
},
{
    "assertion": "Quadrant ( POINT: Z ) equals NUMBER: 91",
    "id": 4880,
    "declarations": "Z: POINT; 91: NUMBER",
    "facts": "Quadrant(Z) = 91"
},
{
    "assertion": "Directrix ( CONICSECTION: c ) equals OverlappingLine ( LineSegmentOf ( POINT: O, POINT: j ) )",
    "id": 4881,
    "declarations": "c: CONICSECTION; O: POINT; j: POINT",
    "facts": "Directrix(c) = OverlappingLine(LineSegmentOf(O, j))"
},
{
    "assertion": "Radius ( CIRCLE: C ) equals NUMBER: -3",
    "id": 4882,
    "declarations": "C: CIRCLE; -3: NUMBER",
    "facts": "Radius(C) = -3"
},
{
    "assertion": "Distance ( Incenter ( TRIANGLE: r ), LeftVertex ( CONICSECTION: f ) ) equals NUMBER: 43",
    "id": 4883,
    "declarations": "r: TRIANGLE; f: CONICSECTION; 43: NUMBER",
    "facts": "Distance(Incenter(r), LeftVertex(f)) = 43"
},
{
    "assertion": "TangentOnPoint ( LeftVertex ( CONICSECTION: g ), CURVE: A ) equals LINE: M",
    "id": 4884,
    "declarations": "g: CONICSECTION; A: CURVE; M: LINE",
    "facts": "TangentOnPoint(LeftVertex(g), A) = M"
},
{
    "assertion": "Locus ( POINT: H ) equals CURVE: X",
    "id": 4885,
    "declarations": "H: POINT; X: CURVE",
    "facts": "Locus(H) = X"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: I ) equals AXIS: yAxis",
    "id": 4886,
    "declarations": "I: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(I) = yAxis"
},
{
    "assertion": "Slope ( LINE: X ) equals YCoordinate ( Incenter ( TRIANGLE: Q ) )",
    "id": 4887,
    "declarations": "X: LINE; Q: TRIANGLE",
    "facts": "Slope(X) = YCoordinate(Incenter(Q))"
},
{
    "assertion": "Perimeter ( CONICSECTION: y ) equals Slope ( TangentOnPoint ( Circumcenter ( TRIANGLE: t ), CURVE: K ) )",
    "id": 4888,
    "declarations": "y: CONICSECTION; t: TRIANGLE; K: CURVE",
    "facts": "Perimeter(y) = Slope(TangentOnPoint(Circumcenter(t), K))"
},
{
    "assertion": "Area ( CONICSECTION: g ) equals FocalLength ( CONICSECTION: h )",
    "id": 4889,
    "declarations": "g: CONICSECTION; h: CONICSECTION",
    "facts": "Area(g) = FocalLength(h)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: h, CIRCLE: y ) equals BOOL: True",
    "id": 4890,
    "declarations": "h: LINESEGMENT; y: CIRCLE; True: BOOL",
    "facts": "IsDiameter(h, y) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: O ) equals LINESEGMENT: g",
    "id": 4891,
    "declarations": "O: ELLIPSE; g: LINESEGMENT",
    "facts": "MajorAxis(O) = g"
},
{
    "assertion": "FocalLength ( CONICSECTION: K ) equals FocalLength ( CONICSECTION: O )",
    "id": 4892,
    "declarations": "K: CONICSECTION; O: CONICSECTION",
    "facts": "FocalLength(K) = FocalLength(O)"
},
{
    "assertion": "RightPart ( HYPERBOLA: l ) equals CURVE: K",
    "id": 4893,
    "declarations": "l: HYPERBOLA; K: CURVE",
    "facts": "RightPart(l) = K"
},
{
    "assertion": "TangentOfPoint ( RightVertex ( CONICSECTION: G ), CURVE: M ) equals LINE: O",
    "id": 4894,
    "declarations": "G: CONICSECTION; M: CURVE; O: LINE",
    "facts": "TangentOfPoint(RightVertex(G), M) = O"
},
{
    "assertion": "RightPart ( HYPERBOLA: C ) equals CURVE: i",
    "id": 4895,
    "declarations": "C: HYPERBOLA; i: CURVE",
    "facts": "RightPart(C) = i"
},
{
    "assertion": "RightFocus ( CONICSECTION: d ) equals POINT: h",
    "id": 4896,
    "declarations": "d: CONICSECTION; h: POINT",
    "facts": "RightFocus(d) = h"
},
{
    "assertion": "Slope ( LINE: n ) equals Radius ( CIRCLE: i )",
    "id": 4897,
    "declarations": "n: LINE; i: CIRCLE",
    "facts": "Slope(n) = Radius(i)"
},
{
    "assertion": "Directrix ( CONICSECTION: R ) equals LINE: R",
    "id": 4898,
    "declarations": "R: CONICSECTION; R: LINE",
    "facts": "Directrix(R) = R"
},
{
    "assertion": "Center ( CONICSECTION: y ) equals POINT: Y",
    "id": 4899,
    "declarations": "y: CONICSECTION; Y: POINT",
    "facts": "Center(y) = Y"
},
{
    "assertion": "Incenter ( TRIANGLE: J ) equals UpperVertex ( CONICSECTION: d )",
    "id": 4900,
    "declarations": "J: TRIANGLE; d: CONICSECTION",
    "facts": "Incenter(J) = UpperVertex(d)"
},
{
    "assertion": "XCoordinate ( FootPoint ( LeftDirectrix ( CONICSECTION: O ), LINE: s ) ) equals NumIntersection ( Locus ( LeftFocus ( CONICSECTION: S ) ), RightPart ( HYPERBOLA: w ) )",
    "id": 4901,
    "declarations": "O: CONICSECTION; s: LINE; S: CONICSECTION; w: HYPERBOLA",
    "facts": "XCoordinate(FootPoint(LeftDirectrix(O), s)) = NumIntersection(Locus(LeftFocus(S)), RightPart(w))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: Q ) equals LINESEGMENT: r",
    "id": 4902,
    "declarations": "Q: ELLIPSE; r: LINESEGMENT",
    "facts": "MajorAxis(Q) = r"
},
{
    "assertion": "Locus ( MidPoint ( LINESEGMENT: y ) ) equals LeftPart ( HYPERBOLA: i )",
    "id": 4903,
    "declarations": "y: LINESEGMENT; i: HYPERBOLA",
    "facts": "Locus(MidPoint(y)) = LeftPart(i)"
},
{
    "assertion": "Locus ( POINT: K ) equals CURVE: X",
    "id": 4904,
    "declarations": "K: POINT; X: CURVE",
    "facts": "Locus(K) = X"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: z ) equals RightDirectrix ( CONICSECTION: p )",
    "id": 4905,
    "declarations": "z: LINESEGMENT; p: CONICSECTION",
    "facts": "PerpendicularBisector(z) = RightDirectrix(p)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: r ) equals LINE: g",
    "id": 4906,
    "declarations": "r: HYPERBOLA; g: LINE",
    "facts": "Asymptote(r) = g"
},
{
    "assertion": "InterReciprocal ( NUMBER: 97 ) equals YCoordinate ( LeftVertex ( CONICSECTION: n ) )",
    "id": 4907,
    "declarations": "97: NUMBER; n: CONICSECTION",
    "facts": "InterReciprocal(97) = YCoordinate(LeftVertex(n))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: b ) equals POINT: C",
    "id": 4908,
    "declarations": "b: TRIANGLE; C: POINT",
    "facts": "Circumcenter(b) = C"
},
{
    "assertion": "LeftFocus ( CONICSECTION: M ) equals POINT: z",
    "id": 4909,
    "declarations": "M: CONICSECTION; z: POINT",
    "facts": "LeftFocus(M) = z"
},
{
    "assertion": "LineSegmentOf ( POINT: N, LowerVertex ( CONICSECTION: e ) ) equals LINESEGMENT: t",
    "id": 4910,
    "declarations": "N: POINT; e: CONICSECTION; t: LINESEGMENT",
    "facts": "LineSegmentOf(N, LowerVertex(e)) = t"
},
{
    "assertion": "Area ( CONICSECTION: O ) equals Slope ( LINE: F )",
    "id": 4911,
    "declarations": "O: CONICSECTION; F: LINE",
    "facts": "Area(O) = Slope(F)"
},
{
    "assertion": "Focus ( CONICSECTION: x ) equals Circumcenter ( TRIANGLE: h )",
    "id": 4912,
    "declarations": "x: CONICSECTION; h: TRIANGLE",
    "facts": "Focus(x) = Circumcenter(h)"
},
{
    "assertion": "RealAxis ( ELLIPSE: z ) equals MinorAxis ( ELLIPSE: V )",
    "id": 4913,
    "declarations": "z: ELLIPSE; V: ELLIPSE",
    "facts": "RealAxis(z) = MinorAxis(V)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: f ) equals POINT: q",
    "id": 4914,
    "declarations": "f: TRIANGLE; q: POINT",
    "facts": "Orthocenter(f) = q"
},
{
    "assertion": "TangentOnPoint ( Orthocenter ( TRIANGLE: m ), Locus ( UpperFocus ( CONICSECTION: N ) ) ) equals LINE: J",
    "id": 4915,
    "declarations": "m: TRIANGLE; N: CONICSECTION; J: LINE",
    "facts": "TangentOnPoint(Orthocenter(m), Locus(UpperFocus(N))) = J"
},
{
    "assertion": "Perimeter ( CONICSECTION: O ) equals Intercept ( LINE: e, AXIS: xAxis )",
    "id": 4916,
    "declarations": "O: CONICSECTION; e: LINE; xAxis: AXIS",
    "facts": "Perimeter(O) = Intercept(e, xAxis)"
},
{
    "assertion": "InterceptChord ( LINE: E, CONICSECTION: s ) equals LINESEGMENT: m",
    "id": 4917,
    "declarations": "E: LINE; s: CONICSECTION; m: LINESEGMENT",
    "facts": "InterceptChord(E, s) = m"
},
{
    "assertion": "LocusEquation ( POINT: c ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6xy",
    "id": 4918,
    "declarations": "c: POINT; x^3*space+*spacey^3*space=*space6xy: EXPRESSION",
    "facts": "LocusEquation(c) = x^3*space+*spacey^3*space=*space6xy"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: V, TRIANGLE: k ) equals BOOL: False",
    "id": 4919,
    "declarations": "V: CIRCLE; k: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(V, k) = False"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: E ) equals LINE: M",
    "id": 4920,
    "declarations": "E: LINESEGMENT; M: LINE",
    "facts": "PerpendicularBisector(E) = M"
},
{
    "assertion": "sqrt ( lg ( NUMBER: 75 ) ) equals NUMBER: 58",
    "id": 4921,
    "declarations": "75: NUMBER; 58: NUMBER",
    "facts": "sqrt(lg(75)) = 58"
},
{
    "assertion": "Intersection ( Locus ( POINT: V ), CURVE: G ) equals UpperVertex ( CONICSECTION: e )",
    "id": 4922,
    "declarations": "V: POINT; G: CURVE; e: CONICSECTION",
    "facts": "Intersection(Locus(V), G) = UpperVertex(e)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: s ) equals POINT: F",
    "id": 4923,
    "declarations": "s: LINESEGMENT; F: POINT",
    "facts": "MidPoint(s) = F"
},
{
    "assertion": "Quadrant ( LowerFocus ( CONICSECTION: z ) ) equals NUMBER: -31",
    "id": 4924,
    "declarations": "z: CONICSECTION; -31: NUMBER",
    "facts": "Quadrant(LowerFocus(z)) = -31"
},
{
    "assertion": "lg ( Length ( MajorAxis ( ELLIPSE: M ) ) ) equals NUMBER: 47",
    "id": 4925,
    "declarations": "M: ELLIPSE; 47: NUMBER",
    "facts": "lg(Length(MajorAxis(M))) = 47"
},
{
    "assertion": "Center ( CONICSECTION: j ) equals POINT: s",
    "id": 4926,
    "declarations": "j: CONICSECTION; s: POINT",
    "facts": "Center(j) = s"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: m ) equals LINE: p",
    "id": 4927,
    "declarations": "m: LINESEGMENT; p: LINE",
    "facts": "OverlappingLine(m) = p"
},
{
    "assertion": "sqrt ( NUMBER: -13 ) equals InterReciprocal ( FocalLength ( CONICSECTION: A ) )",
    "id": 4928,
    "declarations": "-13: NUMBER; A: CONICSECTION",
    "facts": "sqrt(-13) = InterReciprocal(FocalLength(A))"
},
{
    "assertion": "VectorOf ( POINT: f, LowerFocus ( CONICSECTION: T ) ) equals VECTOR: Q",
    "id": 4929,
    "declarations": "f: POINT; T: CONICSECTION; Q: VECTOR",
    "facts": "VectorOf(f, LowerFocus(T)) = Q"
},
{
    "assertion": "Max ( NUMBER: -59 ) equals NUMBER: 62",
    "id": 4930,
    "declarations": "-59: NUMBER; 62: NUMBER",
    "facts": "Max(-59) = 62"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: E ) ) equals OverlappingLine ( LINESEGMENT: A )",
    "id": 4931,
    "declarations": "E: ELLIPSE; A: LINESEGMENT",
    "facts": "PerpendicularBisector(ImaginaryAxis(E)) = OverlappingLine(A)"
},
{
    "assertion": "TangentOnPoint ( POINT: R, CURVE: V ) equals LINE: U",
    "id": 4932,
    "declarations": "R: POINT; V: CURVE; U: LINE",
    "facts": "TangentOnPoint(R, V) = U"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: Q ) equals LeftDirectrix ( CONICSECTION: F )",
    "id": 4933,
    "declarations": "Q: LINESEGMENT; F: CONICSECTION",
    "facts": "PerpendicularBisector(Q) = LeftDirectrix(F)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: j ) equals Slope ( LINE: V )",
    "id": 4934,
    "declarations": "j: CONICSECTION; V: LINE",
    "facts": "HalfFocalLength(j) = Slope(V)"
},
{
    "assertion": "Locus ( Incenter ( TRIANGLE: W ) ) equals LeftPart ( HYPERBOLA: A )",
    "id": 4935,
    "declarations": "W: TRIANGLE; A: HYPERBOLA",
    "facts": "Locus(Incenter(W)) = LeftPart(A)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: X ) equals TangentOfPoint ( POINT: Q, CURVE: w )",
    "id": 4936,
    "declarations": "X: HYPERBOLA; Q: POINT; w: CURVE",
    "facts": "Asymptote(X) = TangentOfPoint(Q, w)"
},
{
    "assertion": "Perimeter ( CONICSECTION: i ) equals NUMBER: -75",
    "id": 4937,
    "declarations": "i: CONICSECTION; -75: NUMBER",
    "facts": "Perimeter(i) = -75"
},
{
    "assertion": "RightFocus ( CONICSECTION: J ) equals POINT: p",
    "id": 4938,
    "declarations": "J: CONICSECTION; p: POINT",
    "facts": "RightFocus(J) = p"
},
{
    "assertion": "Quadrant ( MidPoint ( LINESEGMENT: o ) ) equals Intercept ( PerpendicularBisector ( InterceptChord ( LINE: n, CONICSECTION: x ) ), AXIS: xAxis )",
    "id": 4939,
    "declarations": "o: LINESEGMENT; n: LINE; x: CONICSECTION; xAxis: AXIS",
    "facts": "Quadrant(MidPoint(o)) = Intercept(PerpendicularBisector(InterceptChord(n, x)), xAxis)"
},
{
    "assertion": "Incenter ( TRIANGLE: I ) equals MidPoint ( LINESEGMENT: U )",
    "id": 4940,
    "declarations": "I: TRIANGLE; U: LINESEGMENT",
    "facts": "Incenter(I) = MidPoint(U)"
},
{
    "assertion": "Intersection ( Locus ( LowerFocus ( CONICSECTION: z ) ), CURVE: k ) equals RightVertex ( CONICSECTION: h )",
    "id": 4941,
    "declarations": "z: CONICSECTION; k: CURVE; h: CONICSECTION",
    "facts": "Intersection(Locus(LowerFocus(z)), k) = RightVertex(h)"
},
{
    "assertion": "Abs ( LINESEGMENT: X ) equals NUMBER: 7",
    "id": 4942,
    "declarations": "X: LINESEGMENT; 7: NUMBER",
    "facts": "Abs(X) = 7"
},
{
    "assertion": "Area ( CONICSECTION: U ) equals Diameter ( CircumCircle ( TRIANGLE: i ) )",
    "id": 4943,
    "declarations": "U: CONICSECTION; i: TRIANGLE",
    "facts": "Area(U) = Diameter(CircumCircle(i))"
},
{
    "assertion": "LineOf ( POINT: S, POINT: o ) equals LINE: j",
    "id": 4944,
    "declarations": "S: POINT; o: POINT; j: LINE",
    "facts": "LineOf(S, o) = j"
},
{
    "assertion": "Coordinate ( POINT: S ) equals ( Length ( RealAxis ( ELLIPSE: L ) ), lg ( Perimeter ( CONICSECTION: b ) ) )",
    "id": 4945,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftPart ( HYPERBOLA: G ) equals CURVE: P",
    "id": 4946,
    "declarations": "G: HYPERBOLA; P: CURVE",
    "facts": "LeftPart(G) = P"
},
{
    "assertion": "Inclination ( OverlappingLine ( ImaginaryAxis ( ELLIPSE: N ) ) ) equals Eccentricity ( CONICSECTION: d )",
    "id": 4947,
    "declarations": "N: ELLIPSE; d: CONICSECTION",
    "facts": "Inclination(OverlappingLine(ImaginaryAxis(N))) = Eccentricity(d)"
},
{
    "assertion": "Abs ( LINESEGMENT: J ) equals NUMBER: -71",
    "id": 4948,
    "declarations": "J: LINESEGMENT; -71: NUMBER",
    "facts": "Abs(J) = -71"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: B ) equals AXIS: yAxis",
    "id": 4949,
    "declarations": "B: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(B) = yAxis"
},
{
    "assertion": "TriangleOf ( POINT: G, Orthocenter ( TRIANGLE: Q ), UpperFocus ( CONICSECTION: C ) ) equals TRIANGLE: X",
    "id": 4950,
    "declarations": "G: POINT; Q: TRIANGLE; C: CONICSECTION; X: TRIANGLE",
    "facts": "TriangleOf(G, Orthocenter(Q), UpperFocus(C)) = X"
},
{
    "assertion": "Intersection ( CURVE: m, CURVE: d ) equals Projection ( POINT: j, LINE: i )",
    "id": 4951,
    "declarations": "m: CURVE; d: CURVE; j: POINT; i: LINE",
    "facts": "Intersection(m, d) = Projection(j, i)"
},
{
    "assertion": "FocalLength ( CONICSECTION: n ) equals lg ( InterReciprocal ( Quadrant ( UpperFocus ( CONICSECTION: Z ) ) ) )",
    "id": 4952,
    "declarations": "n: CONICSECTION; Z: CONICSECTION",
    "facts": "FocalLength(n) = lg(InterReciprocal(Quadrant(UpperFocus(Z))))"
},
{
    "assertion": "LocusEquation ( POINT: E ) equals EXPRESSION: x^2*space+*spacey*space=*space4",
    "id": 4953,
    "declarations": "E: POINT; x^2*space+*spacey*space=*space4: EXPRESSION",
    "facts": "LocusEquation(E) = x^2*space+*spacey*space=*space4"
},
{
    "assertion": "PointOnCurve ( Orthocenter ( TRIANGLE: V ), CURVE: s ) equals BOOL: False",
    "id": 4954,
    "declarations": "V: TRIANGLE; s: CURVE; False: BOOL",
    "facts": "PointOnCurve(Orthocenter(V), s) = False"
},
{
    "assertion": "Length ( MajorAxis ( ELLIPSE: C ) ) equals NUMBER: -61",
    "id": 4955,
    "declarations": "C: ELLIPSE; -61: NUMBER",
    "facts": "Length(MajorAxis(C)) = -61"
},
{
    "assertion": "Circumcenter ( TRIANGLE: J ) equals POINT: l",
    "id": 4956,
    "declarations": "J: TRIANGLE; l: POINT",
    "facts": "Circumcenter(J) = l"
},
{
    "assertion": "Min ( Inclination ( LINE: J ) ) equals Radius ( CIRCLE: l )",
    "id": 4957,
    "declarations": "J: LINE; l: CIRCLE",
    "facts": "Min(Inclination(J)) = Radius(l)"
},
{
    "assertion": "Directrix ( CONICSECTION: Y ) equals LINE: b",
    "id": 4958,
    "declarations": "Y: CONICSECTION; b: LINE",
    "facts": "Directrix(Y) = b"
},
{
    "assertion": "RightPart ( HYPERBOLA: s ) equals CURVE: L",
    "id": 4959,
    "declarations": "s: HYPERBOLA; L: CURVE",
    "facts": "RightPart(s) = L"
},
{
    "assertion": "Area ( CONICSECTION: c ) equals NUMBER: -63",
    "id": 4960,
    "declarations": "c: CONICSECTION; -63: NUMBER",
    "facts": "Area(c) = -63"
},
{
    "assertion": "Max ( NUMBER: -97 ) equals NUMBER: -77",
    "id": 4961,
    "declarations": "-97: NUMBER; -77: NUMBER",
    "facts": "Max(-97) = -77"
},
{
    "assertion": "RightPart ( HYPERBOLA: T ) equals CURVE: L",
    "id": 4962,
    "declarations": "T: HYPERBOLA; L: CURVE",
    "facts": "RightPart(T) = L"
},
{
    "assertion": "Radius ( CIRCLE: l ) equals NUMBER: -32",
    "id": 4963,
    "declarations": "l: CIRCLE; -32: NUMBER",
    "facts": "Radius(l) = -32"
},
{
    "assertion": "MinorAxis ( ELLIPSE: Y ) equals LINESEGMENT: S",
    "id": 4964,
    "declarations": "Y: ELLIPSE; S: LINESEGMENT",
    "facts": "MinorAxis(Y) = S"
},
{
    "assertion": "LocusEquation ( POINT: D ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 4965,
    "declarations": "D: POINT; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(D) = y*space=*spacelog(x)"
},
{
    "assertion": "Locus ( Orthocenter ( TRIANGLE: m ) ) equals CURVE: O",
    "id": 4966,
    "declarations": "m: TRIANGLE; O: CURVE",
    "facts": "Locus(Orthocenter(m)) = O"
},
{
    "assertion": "Min ( YCoordinate ( POINT: d ) ) equals NUMBER: -32",
    "id": 4967,
    "declarations": "d: POINT; -32: NUMBER",
    "facts": "Min(YCoordinate(d)) = -32"
},
{
    "assertion": "Area ( CONICSECTION: a ) equals FocalLength ( CONICSECTION: p )",
    "id": 4968,
    "declarations": "a: CONICSECTION; p: CONICSECTION",
    "facts": "Area(a) = FocalLength(p)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: n ) equals POINT: M",
    "id": 4969,
    "declarations": "n: CONICSECTION; M: POINT",
    "facts": "UpperVertex(n) = M"
},
{
    "assertion": "Slope ( TangentOnPoint ( POINT: c, CURVE: t ) ) equals NUMBER: 16",
    "id": 4970,
    "declarations": "c: POINT; t: CURVE; 16: NUMBER",
    "facts": "Slope(TangentOnPoint(c, t)) = 16"
},
{
    "assertion": "Orthocenter ( TRIANGLE: i ) equals Incenter ( TRIANGLE: Y )",
    "id": 4971,
    "declarations": "i: TRIANGLE; Y: TRIANGLE",
    "facts": "Orthocenter(i) = Incenter(Y)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: Z ) equals CircumCircle ( TRIANGLE: V )",
    "id": 4972,
    "declarations": "Z: TRIANGLE; V: TRIANGLE",
    "facts": "CircumCircle(Z) = CircumCircle(V)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: s ) equals LINESEGMENT: T",
    "id": 4973,
    "declarations": "s: ELLIPSE; T: LINESEGMENT",
    "facts": "ImaginaryAxis(s) = T"
},
{
    "assertion": "Min ( HalfFocalLength ( CONICSECTION: r ) ) equals Area ( CONICSECTION: T )",
    "id": 4974,
    "declarations": "r: CONICSECTION; T: CONICSECTION",
    "facts": "Min(HalfFocalLength(r)) = Area(T)"
},
{
    "assertion": "InterceptChord ( LINE: Q, CONICSECTION: v ) equals LINESEGMENT: q",
    "id": 4975,
    "declarations": "Q: LINE; v: CONICSECTION; q: LINESEGMENT",
    "facts": "InterceptChord(Q, v) = q"
},
{
    "assertion": "FootPoint ( RightDirectrix ( CONICSECTION: T ), LINE: j ) equals UpperVertex ( CONICSECTION: u )",
    "id": 4976,
    "declarations": "T: CONICSECTION; j: LINE; u: CONICSECTION",
    "facts": "FootPoint(RightDirectrix(T), j) = UpperVertex(u)"
},
{
    "assertion": "Incenter ( TRIANGLE: A ) equals POINT: s",
    "id": 4977,
    "declarations": "A: TRIANGLE; s: POINT",
    "facts": "Incenter(A) = s"
},
{
    "assertion": "Slope ( LINE: z ) equals Abs ( LineSegmentOf ( POINT: C, FootPoint ( LINE: V, LINE: L ) ) )",
    "id": 4978,
    "declarations": "z: LINE; C: POINT; V: LINE; L: LINE",
    "facts": "Slope(z) = Abs(LineSegmentOf(C, FootPoint(V, L)))"
},
{
    "assertion": "Vertex ( CONICSECTION: J ) equals POINT: j",
    "id": 4979,
    "declarations": "J: CONICSECTION; j: POINT",
    "facts": "Vertex(J) = j"
},
{
    "assertion": "Perimeter ( CONICSECTION: H ) equals XCoordinate ( LowerVertex ( CONICSECTION: W ) )",
    "id": 4980,
    "declarations": "H: CONICSECTION; W: CONICSECTION",
    "facts": "Perimeter(H) = XCoordinate(LowerVertex(W))"
},
{
    "assertion": "Perimeter ( CONICSECTION: G ) equals NUMBER: -33",
    "id": 4981,
    "declarations": "G: CONICSECTION; -33: NUMBER",
    "facts": "Perimeter(G) = -33"
},
{
    "assertion": "Max ( XCoordinate ( POINT: s ) ) equals NUMBER: 54",
    "id": 4982,
    "declarations": "s: POINT; 54: NUMBER",
    "facts": "Max(XCoordinate(s)) = 54"
},
{
    "assertion": "Inclination ( LINE: b ) equals FocalLength ( CONICSECTION: d )",
    "id": 4983,
    "declarations": "b: LINE; d: CONICSECTION",
    "facts": "Inclination(b) = FocalLength(d)"
},
{
    "assertion": "lg ( Min ( Perimeter ( CONICSECTION: p ) ) ) equals FocalLength ( CONICSECTION: a )",
    "id": 4984,
    "declarations": "p: CONICSECTION; a: CONICSECTION",
    "facts": "lg(Min(Perimeter(p))) = FocalLength(a)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: Y ) equals LINE: S",
    "id": 4985,
    "declarations": "Y: HYPERBOLA; S: LINE",
    "facts": "Asymptote(Y) = S"
},
{
    "assertion": "RightPart ( HYPERBOLA: U ) equals CURVE: W",
    "id": 4986,
    "declarations": "U: HYPERBOLA; W: CURVE",
    "facts": "RightPart(U) = W"
},
{
    "assertion": "LowerFocus ( CONICSECTION: Y ) equals LowerVertex ( CONICSECTION: z )",
    "id": 4987,
    "declarations": "Y: CONICSECTION; z: CONICSECTION",
    "facts": "LowerFocus(Y) = LowerVertex(z)"
},
{
    "assertion": "Min ( HalfFocalLength ( CONICSECTION: r ) ) equals NUMBER: -22",
    "id": 4988,
    "declarations": "r: CONICSECTION; -22: NUMBER",
    "facts": "Min(HalfFocalLength(r)) = -22"
},
{
    "assertion": "InterceptChord ( LINE: T, CONICSECTION: p ) equals InterceptChord ( LINE: B, CONICSECTION: Q )",
    "id": 4989,
    "declarations": "T: LINE; p: CONICSECTION; B: LINE; Q: CONICSECTION",
    "facts": "InterceptChord(T, p) = InterceptChord(B, Q)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: v ) equals RightFocus ( CONICSECTION: t )",
    "id": 4990,
    "declarations": "v: CONICSECTION; t: CONICSECTION",
    "facts": "LowerVertex(v) = RightFocus(t)"
},
{
    "assertion": "RightFocus ( CONICSECTION: g ) equals POINT: E",
    "id": 4991,
    "declarations": "g: CONICSECTION; E: POINT",
    "facts": "RightFocus(g) = E"
},
{
    "assertion": "RightPart ( HYPERBOLA: g ) equals CURVE: X",
    "id": 4992,
    "declarations": "g: HYPERBOLA; X: CURVE",
    "facts": "RightPart(g) = X"
},
{
    "assertion": "IsPerpendicular ( LINE: f, LINE: h ) equals BOOL: False",
    "id": 4993,
    "declarations": "f: LINE; h: LINE; False: BOOL",
    "facts": "IsPerpendicular(f, h) = False"
},
{
    "assertion": "IsParallel ( RightDirectrix ( CONICSECTION: w ), LINE: B ) equals BOOL: True",
    "id": 4994,
    "declarations": "w: CONICSECTION; B: LINE; True: BOOL",
    "facts": "IsParallel(RightDirectrix(w), B) = True"
},
{
    "assertion": "RightFocus ( CONICSECTION: g ) equals Orthocenter ( TRIANGLE: r )",
    "id": 4995,
    "declarations": "g: CONICSECTION; r: TRIANGLE",
    "facts": "RightFocus(g) = Orthocenter(r)"
},
{
    "assertion": "Min ( NUMBER: -31 ) equals sqrt ( NUMBER: -64 )",
    "id": 4996,
    "declarations": "-31: NUMBER; -64: NUMBER",
    "facts": "Min(-31) = sqrt(-64)"
},
{
    "assertion": "RightPart ( HYPERBOLA: p ) equals LeftPart ( HYPERBOLA: X )",
    "id": 4997,
    "declarations": "p: HYPERBOLA; X: HYPERBOLA",
    "facts": "RightPart(p) = LeftPart(X)"
},
{
    "assertion": "ApplyUnit ( InterReciprocal ( NUMBER: 62 ), DEGREESTR: degree )",
    "id": 4998,
    "declarations": "62: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(InterReciprocal(62), degree) = None"
},
{
    "assertion": "Distance ( LowerVertex ( CONICSECTION: n ), POINT: x ) equals Diameter ( CIRCLE: O )",
    "id": 4999,
    "declarations": "n: CONICSECTION; x: POINT; O: CIRCLE",
    "facts": "Distance(LowerVertex(n), x) = Diameter(O)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: E ) equals PerpendicularBisector ( LINESEGMENT: L )",
    "id": 5000,
    "declarations": "E: HYPERBOLA; L: LINESEGMENT",
    "facts": "Asymptote(E) = PerpendicularBisector(L)"
},
{
        "assertion": "Coordinate ( POINT: A ) equals ( NUMBER: 10, NUMBER: 20 )",
        "id": 0,
        "declarations": "A: POINT",
        "facts": "Coordinate(A) = (10, 20)"
    },
    {
        "assertion": "Coordinate ( POINT: B ) equals ( NUMBER: -15, NUMBER: 30 )",
        "id": 1,
        "declarations": "B: POINT",
        "facts": "Coordinate(B) = (-15, 30)"
    },
    {
        "assertion": "Coordinate ( POINT: C ) equals ( NUMBER: 25, NUMBER: -40 )",
        "id": 2,
        "declarations": "C: POINT",
        "facts": "Coordinate(C) = (25, -40)"
    },
    {
        "assertion": "Coordinate ( POINT: D ) equals ( NUMBER: -5, NUMBER: -10 )",
        "id": 3,
        "declarations": "D: POINT",
        "facts": "Coordinate(D) = (-5, -10)"
    },
    {
        "assertion": "Coordinate ( POINT: E ) equals ( NUMBER: 50, NUMBER: 60 )",
        "id": 4,
        "declarations": "E: POINT",
        "facts": "Coordinate(E) = (50, 60)"
    },
    {
        "assertion": "Coordinate ( POINT: F ) equals ( NUMBER: -25, NUMBER: 35 )",
        "id": 5,
        "declarations": "F: POINT",
        "facts": "Coordinate(F) = (-25, 35)"
    },
    {
        "assertion": "Coordinate ( POINT: G ) equals ( NUMBER: 75, NUMBER: -85 )",
        "id": 6,
        "declarations": "G: POINT",
        "facts": "Coordinate(G) = (75, -85)"
    },
    {
        "assertion": "Coordinate ( POINT: H ) equals ( NUMBER: -95, NUMBER: -15 )",
        "id": 7,
        "declarations": "H: POINT",
        "facts": "Coordinate(H) = (-95, -15)"
    },
    {
        "assertion": "Coordinate ( POINT: I ) equals ( NUMBER: 100, NUMBER: 200 )",
        "id": 8,
        "declarations": "I: POINT",
        "facts": "Coordinate(I) = (100, 200)"
    },
    {
        "assertion": "Coordinate ( POINT: J ) equals ( NUMBER: -150, NUMBER: 300 )",
        "id": 9,
        "declarations": "J: POINT",
        "facts": "Coordinate(J) = (-150, 300)"
    },
    {
        "assertion": "Coordinate ( LowerVertex ( CONICSECTION: K ) ) equals ( NUMBER: 0, NUMBER: -50 )",
        "id": 10,
        "declarations": "K: CONICSECTION",
        "facts": "Coordinate(LowerVertex(K)) = (0, -50)"
    },
    {
        "assertion": "Coordinate ( UpperVertex ( CONICSECTION: L ) ) equals ( NUMBER: 0, NUMBER: 50 )",
        "id": 11,
        "declarations": "L: CONICSECTION",
        "facts": "Coordinate(UpperVertex(L)) = (0, 50)"
    },
    {
        "assertion": "Coordinate ( LeftVertex ( CONICSECTION: M ) ) equals ( NUMBER: -50, NUMBER: 0 )",
        "id": 12,
        "declarations": "M: CONICSECTION",
        "facts": "Coordinate(LeftVertex(M)) = (-50, 0)"
    },
    {
        "assertion": "Coordinate ( RightVertex ( CONICSECTION: N ) ) equals ( NUMBER: 50, NUMBER: 0 )",
        "id": 13,
        "declarations": "N: CONICSECTION",
        "facts": "Coordinate(RightVertex(N)) = (50, 0)"
    },
    {
        "assertion": "Coordinate ( LowerFocus ( CONICSECTION: O ) ) equals ( NUMBER: 0, NUMBER: -30 )",
        "id": 14,
        "declarations": "O: CONICSECTION",
        "facts": "Coordinate(LowerFocus(O)) = (0, -30)"
    },
    {
        "assertion": "Coordinate ( UpperFocus ( CONICSECTION: P ) ) equals ( NUMBER: 0, NUMBER: 30 )",
        "id": 15,
        "declarations": "P: CONICSECTION",
        "facts": "Coordinate(UpperFocus(P)) = (0, 30)"
    },
    {
        "assertion": "Coordinate ( LeftFocus ( CONICSECTION: Q ) ) equals ( NUMBER: -30, NUMBER: 0 )",
        "id": 16,
        "declarations": "Q: CONICSECTION",
        "facts": "Coordinate(LeftFocus(Q)) = (-30, 0)"
    },
    {
        "assertion": "Coordinate ( RightFocus ( CONICSECTION: R ) ) equals ( NUMBER: 30, NUMBER: 0 )",
        "id": 17,
        "declarations": "R: CONICSECTION",
        "facts": "Coordinate(RightFocus(R)) = (30, 0)"
    },
    {
        "assertion": "Coordinate ( Center ( CONICSECTION: S ) ) equals ( NUMBER: 0, NUMBER: 0 )",
        "id": 18,
        "declarations": "S: CONICSECTION",
        "facts": "Coordinate(Center(S)) = (0, 0)"
    },
    {
        "assertion": "Coordinate ( Circumcenter ( TRIANGLE: T ) ) equals ( NUMBER: 10, NUMBER: 20 )",
        "id": 19,
        "declarations": "T: TRIANGLE",
        "facts": "Coordinate(Circumcenter(T)) = (10, 20)"
    },
    {
        "assertion": "Coordinate ( Orthocenter ( TRIANGLE: U ) ) equals ( NUMBER: -15, NUMBER: 30 )",
        "id": 20,
        "declarations": "U: TRIANGLE",
        "facts": "Coordinate(Orthocenter(U)) = (-15, 30)"
    },
    {
        "assertion": "Coordinate ( Incenter ( TRIANGLE: V ) ) equals ( NUMBER: 25, NUMBER: -40 )",
        "id": 21,
        "declarations": "V: TRIANGLE",
        "facts": "Coordinate(Incenter(V)) = (25, -40)"
    },
    {
        "assertion": "Coordinate ( Centroid ( TRIANGLE: W ) ) equals ( NUMBER: -5, NUMBER: -10 )",
        "id": 22,
        "declarations": "W: TRIANGLE",
        "facts": "Coordinate(Centroid(W)) = (-5, -10)"
    },
    {
        "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: X ) ) equals NUMBER: 45",
        "id": 23,
        "declarations": "X: CONICSECTION",
        "facts": "YCoordinate(UpperVertex(X)) = 45"
    },
    {
        "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: Y ) ) equals NUMBER: -45",
        "id": 24,
        "declarations": "Y: CONICSECTION",
        "facts": "YCoordinate(LowerVertex(Y)) = -45"
    },
    {
        "assertion": "XCoordinate ( LeftVertex ( CONICSECTION: Z ) ) equals NUMBER: -60",
        "id": 25,
        "declarations": "Z: CONICSECTION",
        "facts": "XCoordinate(LeftVertex(Z)) = -60"
    },
    {
        "assertion": "XCoordinate ( RightVertex ( CONICSECTION: AA ) ) equals NUMBER: 60",
        "id": 26,
        "declarations": "AA: CONICSECTION",
        "facts": "XCoordinate(RightVertex(AA)) = 60"
    },
    {
        "assertion": "Coordinate ( POINT: AB ) equals ( NUMBER: 12, NUMBER: 34 )",
        "id": 27,
        "declarations": "AB: POINT",
        "facts": "Coordinate(AB) = (12, 34)"
    },
    {
        "assertion": "Coordinate ( POINT: AC ) equals ( NUMBER: -56, NUMBER: 78 )",
        "id": 28,
        "declarations": "AC: POINT",
        "facts": "Coordinate(AC) = (-56, 78)"
    },
    {
        "assertion": "Coordinate ( POINT: AD ) equals ( NUMBER: 90, NUMBER: -12 )",
        "id": 29,
        "declarations": "AD: POINT",
        "facts": "Coordinate(AD) = (90, -12)"
    },
    {
        "assertion": "Coordinate ( POINT: AE ) equals ( NUMBER: -34, NUMBER: -56 )",
        "id": 30,
        "declarations": "AE: POINT",
        "facts": "Coordinate(AE) = (-34, -56)"
    },
    {
        "assertion": "Coordinate ( POINT: AF ) equals ( NUMBER: 78, NUMBER: 90 )",
        "id": 31,
        "declarations": "AF: POINT",
        "facts": "Coordinate(AF) = (78, 90)"
    },
    {
        "assertion": "Coordinate ( POINT: AG ) equals ( NUMBER: -12, NUMBER: 34 )",
        "id": 32,
        "declarations": "AG: POINT",
        "facts": "Coordinate(AG) = (-12, 34)"
    },
    {
        "assertion": "Coordinate ( POINT: AH ) equals ( NUMBER: 56, NUMBER: -78 )",
        "id": 33,
        "declarations": "AH: POINT",
        "facts": "Coordinate(AH) = (56, -78)"
    },
    {
        "assertion": "Coordinate ( POINT: AI ) equals ( NUMBER: -90, NUMBER: -12 )",
        "id": 34,
        "declarations": "AI: POINT",
        "facts": "Coordinate(AI) = (-90, -12)"
    },
    {
        "assertion": "Coordinate ( POINT: AJ ) equals ( NUMBER: 34, NUMBER: 56 )",
        "id": 35,
        "declarations": "AJ: POINT",
        "facts": "Coordinate(AJ) = (34, 56)"
    },
    {
        "assertion": "Coordinate ( POINT: AK ) equals ( NUMBER: -78, NUMBER: 90 )",
        "id": 36,
        "declarations": "AK: POINT",
        "facts": "Coordinate(AK) = (-78, 90)"
    },
    {
        "assertion": "Coordinate ( LowerVertex ( CONICSECTION: AL ) ) equals ( NUMBER: 0, NUMBER: -55 )",
        "id": 37,
        "declarations": "AL: CONICSECTION",
        "facts": "Coordinate(LowerVertex(AL)) = (0, -55)"
    },
    {
        "assertion": "Coordinate ( UpperVertex ( CONICSECTION: AM ) ) equals ( NUMBER: 0, NUMBER: 55 )",
        "id": 38,
        "declarations": "AM: CONICSECTION",
        "facts": "Coordinate(UpperVertex(AM)) = (0, 55)"
    },
    {
        "assertion": "Coordinate ( LeftVertex ( CONICSECTION: AN ) ) equals ( NUMBER: -55, NUMBER: 0 )",
        "id": 39,
        "declarations": "AN: CONICSECTION",
        "facts": "Coordinate(LeftVertex(AN)) = (-55, 0)"
    },
    {
        "assertion": "Coordinate ( RightVertex ( CONICSECTION: AO ) ) equals ( NUMBER: 55, NUMBER: 0 )",
        "id": 40,
        "declarations": "AO: CONICSECTION",
        "facts": "Coordinate(RightVertex(AO)) = (55, 0)"
    },
    {
        "assertion": "Coordinate ( LowerFocus ( CONICSECTION: AP ) ) equals ( NUMBER: 0, NUMBER: -35 )",
        "id": 41,
        "declarations": "AP: CONICSECTION",
        "facts": "Coordinate(LowerFocus(AP)) = (0, -35)"
    },
    {
        "assertion": "Coordinate ( UpperFocus ( CONICSECTION: AQ ) ) equals ( NUMBER: 0, NUMBER: 35 )",
        "id": 42,
        "declarations": "AQ: CONICSECTION",
        "facts": "Coordinate(UpperFocus(AQ)) = (0, 35)"
    },
    {
        "assertion": "Coordinate ( LeftFocus ( CONICSECTION: AR ) ) equals ( NUMBER: -35, NUMBER: 0 )",
        "id": 43,
        "declarations": "AR: CONICSECTION",
        "facts": "Coordinate(LeftFocus(AR)) = (-35, 0)"
    },
    {
        "assertion": "Coordinate ( RightFocus ( CONICSECTION: AS ) ) equals ( NUMBER: 35, NUMBER: 0 )",
        "id": 44,
        "declarations": "AS: CONICSECTION",
        "facts": "Coordinate(RightFocus(AS)) = (35, 0)"
    },
    {
        "assertion": "Coordinate ( Center ( CONICSECTION: AT ) ) equals ( NUMBER: 0, NUMBER: 0 )",
        "id": 45,
        "declarations": "AT: CONICSECTION",
        "facts": "Coordinate(Center(AT)) = (0, 0)"
    },
    {
        "assertion": "Coordinate ( Circumcenter ( TRIANGLE: AU ) ) equals ( NUMBER: 15, NUMBER: 25 )",
        "id": 46,
        "declarations": "AU: TRIANGLE",
        "facts": "Coordinate(Circumcenter(AU)) = (15, 25)"
    },
    {
        "assertion": "Coordinate ( Orthocenter ( TRIANGLE: AV ) ) equals ( NUMBER: -20, NUMBER: 35 )",
        "id": 47,
        "declarations": "AV: TRIANGLE",
        "facts": "Coordinate(Orthocenter(AV)) = (-20, 35)"
    },
    {
        "assertion": "Coordinate ( Incenter ( TRIANGLE: AW ) ) equals ( NUMBER: 30, NUMBER: -45 )",
        "id": 48,
        "declarations": "AW: TRIANGLE",
        "facts": "Coordinate(Incenter(AW)) = (30, -45)"
    },
    {
        "assertion": "Coordinate ( Centroid ( TRIANGLE: AX ) ) equals ( NUMBER: -10, NUMBER: -15 )",
        "id": 49,
        "declarations": "AX: TRIANGLE",
        "facts": "Coordinate(Centroid(AX)) = (-10, -15)"
    },
    {
        "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: AY ) ) equals NUMBER: 50",
        "id": 50,
        "declarations": "AY: CONICSECTION",
        "facts": "YCoordinate(UpperVertex(AY)) = 50"
    },
    {
        "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: AZ ) ) equals NUMBER: -50",
        "id": 51,
        "declarations": "AZ: CONICSECTION",
        "facts": "YCoordinate(LowerVertex(AZ)) = -50"
    },
    {
        "assertion": "XCoordinate ( LeftVertex ( CONICSECTION: BA ) ) equals NUMBER: -65",
        "id": 52,
        "declarations": "BA: CONICSECTION",
        "facts": "XCoordinate(LeftVertex(BA)) = -65"
    },
    {
        "assertion": "XCoordinate ( RightVertex ( CONICSECTION: BB ) ) equals NUMBER: 65",
        "id": 53,
        "declarations": "BB: CONICSECTION",
        "facts": "XCoordinate(RightVertex(BB)) = 65"
    },
    {
        "assertion": "Coordinate ( POINT: BC ) equals ( NUMBER: 13, NUMBER: 24 )",
        "id": 54,
        "declarations": "BC: POINT",
        "facts": "Coordinate(BC) = (13, 24)"
    },
    {
        "assertion": "Coordinate ( POINT: BD ) equals ( NUMBER: -35, NUMBER: 46 )",
        "id": 55,
        "declarations": "BD: POINT",
        "facts": "Coordinate(BD) = (-35, 46)"
    },
    {
        "assertion": "Coordinate ( POINT: BE ) equals ( NUMBER: 57, NUMBER: -68 )",
        "id": 56,
        "declarations": "BE: POINT",
        "facts": "Coordinate(BE) = (57, -68)"
    },
    {
        "assertion": "Coordinate ( POINT: BF ) equals ( NUMBER: -79, NUMBER: -80 )",
        "id": 57,
        "declarations": "BF: POINT",
        "facts": "Coordinate(BF) = (-79, -80)"
    },
    {
        "assertion": "Coordinate ( POINT: BG ) equals ( NUMBER: 91, NUMBER: 12 )",
        "id": 58,
        "declarations": "BG: POINT",
        "facts": "Coordinate(BG) = (91, 12)"
    },
    {
        "assertion": "Coordinate ( POINT: A ) equals ( NUMBER: 12, NUMBER: -34 )",
        "id": 1,
        "declarations": "A: POINT",
        "facts": "Coordinate(A) = (12, -34)"
    },
    {
        "assertion": "Coordinate ( Center ( CIRCLE: C ) ) equals ( NUMBER: 56, NUMBER: 78 )",
        "id": 2,
        "declarations": "C: CIRCLE",
        "facts": "Coordinate(Center(C)) = (56, 78)"
    },
    {
        "assertion": "Coordinate ( LowerFocus ( CONICSECTION: D ) ) equals ( NUMBER: -90, NUMBER: 45 )",
        "id": 3,
        "declarations": "D: CONICSECTION",
        "facts": "Coordinate(LowerFocus(D)) = (-90, 45)"
    },
    {
        "assertion": "Coordinate ( POINT: E ) equals ( NUMBER: 0, NUMBER: 0 )",
        "id": 4,
        "declarations": "E: POINT",
        "facts": "Coordinate(E) = (0, 0)"
    },
    {
        "assertion": "Coordinate ( Centroid ( TRIANGLE: F ) ) equals ( NUMBER: 23, NUMBER: -67 )",
        "id": 5,
        "declarations": "F: TRIANGLE",
        "facts": "Coordinate(Centroid(F)) = (23, -67)"
    },
    {
        "assertion": "YCoordinate ( LeftVertex ( CONICSECTION: G ) ) equals NUMBER: 89",
        "id": 6,
        "declarations": "G: CONICSECTION",
        "facts": "YCoordinate(LeftVertex(G)) = 89"
    },
    {
        "assertion": "Coordinate ( POINT: K ) equals ( NUMBER: -123, NUMBER: 456 )",
        "id": 7,
        "declarations": "K: POINT",
        "facts": "Coordinate(K) = (-123, 456)"
    },
    {
        "assertion": "Coordinate ( RightVertex ( CONICSECTION: L ) ) equals ( NUMBER: 78, NUMBER: -9 )",
        "id": 8,
        "declarations": "L: CONICSECTION",
        "facts": "Coordinate(RightVertex(L)) = (78, -9)"
    },
    {
        "assertion": "Coordinate ( POINT: M ) equals ( NUMBER: 3.14, NUMBER: 2.71 )",
        "id": 9,
        "declarations": "M: POINT",
        "facts": "Coordinate(M) = (3.14, 2.71)"
    },
    {
        "assertion": "Coordinate ( Incenter ( TRIANGLE: P ) ) equals ( NUMBER: -45, NUMBER: -60 )",
        "id": 10,
        "declarations": "P: TRIANGLE",
        "facts": "Coordinate(Incenter(P)) = (-45, -60)"
    },
    {
        "assertion": "XCoordinate ( LowerVertex ( CONICSECTION: Q ) ) equals NUMBER: 100",
        "id": 11,
        "declarations": "Q: CONICSECTION",
        "facts": "XCoordinate(LowerVertex(Q)) = 100"
    },
    {
        "assertion": "Coordinate ( POINT: R ) equals ( NUMBER: -1, NUMBER: -1 )",
        "id": 12,
        "declarations": "R: POINT",
        "facts": "Coordinate(R) = (-1, -1)"
    },
    {
        "assertion": "Coordinate ( Circumcenter ( TRIANGLE: S ) ) equals ( NUMBER: 0, NUMBER: 99 )",
        "id": 13,
        "declarations": "S: TRIANGLE",
        "facts": "Coordinate(Circumcenter(S)) = (0, 99)"
    },
    {
        "assertion": "Coordinate ( UpperFocus ( CONICSECTION: V ) ) equals ( NUMBER: 33, NUMBER: 44 )",
        "id": 14,
        "declarations": "V: CONICSECTION",
        "facts": "Coordinate(UpperFocus(V)) = (33, 44)"
    },
    {
        "assertion": "Coordinate ( POINT: X ) equals ( NUMBER: 55, NUMBER: 66 )",
        "id": 15,
        "declarations": "X: POINT",
        "facts": "Coordinate(X) = (55, 66)"
    },
    {
        "assertion": "Coordinate ( Orthocenter ( TRIANGLE: Z ) ) equals ( NUMBER: -77, NUMBER: 88 )",
        "id": 16,
        "declarations": "Z: TRIANGLE",
        "facts": "Coordinate(Orthocenter(Z)) = (-77, 88)"
    },
    {
        "assertion": "YCoordinate ( RightFocus ( CONICSECTION: AA ) ) equals NUMBER: 12",
        "id": 17,
        "declarations": "AA: CONICSECTION",
        "facts": "YCoordinate(RightFocus(AA)) = 12"
    },
    {
        "assertion": "Coordinate ( POINT: AB ) equals ( NUMBER: 13, NUMBER: 14 )",
        "id": 18,
        "declarations": "AB: POINT",
        "facts": "Coordinate(AB) = (13, 14)"
    },
    {
        "assertion": "Coordinate ( LeftFocus ( CONICSECTION: AC ) ) equals ( NUMBER: -15, NUMBER: 16 )",
        "id": 19,
        "declarations": "AC: CONICSECTION",
        "facts": "Coordinate(LeftFocus(AC)) = (-15, 16)"
    },
    {
        "assertion": "Coordinate ( POINT: AD ) equals ( NUMBER: 17, NUMBER: -18 )",
        "id": 20,
        "declarations": "AD: POINT",
        "facts": "Coordinate(AD) = (17, -18)"
    },
    {
        "assertion": "Coordinate ( Center ( CIRCLE: AE ) ) equals ( NUMBER: 19, NUMBER: 20 )",
        "id": 21,
        "declarations": "AE: CIRCLE",
        "facts": "Coordinate(Center(AE)) = (19, 20)"
    },
    {
        "assertion": "Coordinate ( POINT: AF ) equals ( NUMBER: -21, NUMBER: 22 )",
        "id": 22,
        "declarations": "AF: POINT",
        "facts": "Coordinate(AF) = (-21, 22)"
    },
    {
        "assertion": "Coordinate ( LowerVertex ( CONICSECTION: AG ) ) equals ( NUMBER: 23, NUMBER: -24 )",
        "id": 23,
        "declarations": "AG: CONICSECTION",
        "facts": "Coordinate(LowerVertex(AG)) = (23, -24)"
    },
    {
        "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: AH ) ) equals NUMBER: 25",
        "id": 24,
        "declarations": "AH: CONICSECTION",
        "facts": "XCoordinate(UpperVertex(AH)) = 25"
    },
    {
        "assertion": "Coordinate ( POINT: AI ) equals ( NUMBER: -26, NUMBER: 27 )",
        "id": 25,
        "declarations": "AI: POINT",
        "facts": "Coordinate(AI) = (-26, 27)"
    },
    {
        "assertion": "Coordinate ( Centroid ( TRIANGLE: AJ ) ) equals ( NUMBER: 28, NUMBER: -29 )",
        "id": 26,
        "declarations": "AJ: TRIANGLE",
        "facts": "Coordinate(Centroid(AJ)) = (28, -29)"
    },
    {
        "assertion": "Coordinate ( POINT: AK ) equals ( NUMBER: 30, NUMBER: 31 )",
        "id": 27,
        "declarations": "AK: POINT",
        "facts": "Coordinate(AK) = (30, 31)"
    },
    {
        "assertion": "Coordinate ( RightVertex ( CONICSECTION: AL ) ) equals ( NUMBER: -32, NUMBER: 33 )",
        "id": 28,
        "declarations": "AL: CONICSECTION",
        "facts": "Coordinate(RightVertex(AL)) = (-32, 33)"
    },
    {
        "assertion": "YCoordinate ( LeftFocus ( CONICSECTION: AM ) ) equals NUMBER: 34",
        "id": 29,
        "declarations": "AM: CONICSECTION",
        "facts": "YCoordinate(LeftFocus(AM)) = 34"
    },
    {
        "assertion": "Coordinate ( POINT: AN ) equals ( NUMBER: 35, NUMBER: -36 )",
        "id": 30,
        "declarations": "AN: POINT",
        "facts": "Coordinate(AN) = (35, -36)"
    },
    {
        "assertion": "Coordinate ( Incenter ( TRIANGLE: AO ) ) equals ( NUMBER: 37, NUMBER: 38 )",
        "id": 31,
        "declarations": "AO: TRIANGLE",
        "facts": "Coordinate(Incenter(AO)) = (37, 38)"
    },
    {
        "assertion": "Coordinate ( POINT: AP ) equals ( NUMBER: -39, NUMBER: 40 )",
        "id": 32,
        "declarations": "AP: POINT",
        "facts": "Coordinate(AP) = (-39, 40)"
    },
    {
        "assertion": "Coordinate ( Circumcenter ( TRIANGLE: AQ ) ) equals ( NUMBER: 41, NUMBER: -42 )",
        "id": 33,
        "declarations": "AQ: TRIANGLE",
        "facts": "Coordinate(Circumcenter(AQ)) = (41, -42)"
    },
    {
        "assertion": "XCoordinate ( UpperFocus ( CONICSECTION: AR ) ) equals NUMBER: 43",
        "id": 34,
        "declarations": "AR: CONICSECTION",
        "facts": "XCoordinate(UpperFocus(AR)) = 43"
    },
    {
        "assertion": "Coordinate ( POINT: AS ) equals ( NUMBER: 44, NUMBER: 45 )",
        "id": 35,
        "declarations": "AS: POINT",
        "facts": "Coordinate(AS) = (44, 45)"
    },
    {
        "assertion": "Coordinate ( Orthocenter ( TRIANGLE: AT ) ) equals ( NUMBER: -46, NUMBER: 47 )",
        "id": 36,
        "declarations": "AT: TRIANGLE",
        "facts": "Coordinate(Orthocenter(AT)) = (-46, 47)"
    },
    {
        "assertion": "Coordinate ( POINT: AU ) equals ( NUMBER: 48, NUMBER: -49 )",
        "id": 37,
        "declarations": "AU: POINT",
        "facts": "Coordinate(AU) = (48, -49)"
    },
    {
        "assertion": "Coordinate ( RightFocus ( CONICSECTION: AV ) ) equals ( NUMBER: 50, NUMBER: 51 )",
        "id": 38,
        "declarations": "AV: CONICSECTION",
        "facts": "Coordinate(RightFocus(AV)) = (50, 51)"
    },
    {
        "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: AW ) ) equals NUMBER: -52",
        "id": 39,
        "declarations": "AW: CONICSECTION",
        "facts": "YCoordinate(LowerVertex(AW)) = -52"
    },
    {
        "assertion": "Coordinate ( POINT: AX ) equals ( NUMBER: 53, NUMBER: 54 )",
        "id": 40,
        "declarations": "AX: POINT",
        "facts": "Coordinate(AX) = (53, 54)"
    },
    {
        "assertion": "Coordinate ( LeftFocus ( CONICSECTION: AY ) ) equals ( NUMBER: -55, NUMBER: 56 )",
        "id": 41,
        "declarations": "AY: CONICSECTION",
        "facts": "Coordinate(LeftFocus(AY)) = (-55, 56)"
    },
    {
        "assertion": "Coordinate ( POINT: AZ ) equals ( NUMBER: 57, NUMBER: -58 )",
        "id": 42,
        "declarations": "AZ: POINT",
        "facts": "Coordinate(AZ) = (57, -58)"
    },
    {
        "assertion": "Coordinate ( Center ( CIRCLE: BA ) ) equals ( NUMBER: 59, NUMBER: 60 )",
        "id": 43,
        "declarations": "BA: CIRCLE",
        "facts": "Coordinate(Center(BA)) = (59, 60)"
    },
    {
        "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: BB ) ) equals NUMBER: -61",
        "id": 44,
        "declarations": "BB: CONICSECTION",
        "facts": "XCoordinate(UpperVertex(BB)) = -61"
    },
    {
        "assertion": "Coordinate ( POINT: BC ) equals ( NUMBER: 62, NUMBER: 63 )",
        "id": 45,
        "declarations": "BC: POINT",
        "facts": "Coordinate(BC) = (62, 63)"
    },
    {
        "assertion": "Coordinate ( Centroid ( TRIANGLE: BD ) ) equals ( NUMBER: -64, NUMBER: 65 )",
        "id": 46,
        "declarations": "BD: TRIANGLE",
        "facts": "Coordinate(Centroid(BD)) = (-64, 65)"
    },
    {
        "assertion": "Coordinate ( POINT: BE ) equals ( NUMBER: 66, NUMBER: -67 )",
        "id": 47,
        "declarations": "BE: POINT",
        "facts": "Coordinate(BE) = (66, -67)"
    },
    {
        "assertion": "Coordinate ( RightVertex ( CONICSECTION: BF ) ) equals ( NUMBER: 68, NUMBER: 69 )",
        "id": 48,
        "declarations": "BF: CONICSECTION",
        "facts": "Coordinate(RightVertex(BF)) = (68, 69)"
    },
    {
        "assertion": "YCoordinate ( LeftFocus ( CONICSECTION: BG ) ) equals NUMBER: -70",
        "id": 49,
        "declarations": "BG: CONICSECTION",
        "facts": "YCoordinate(LeftFocus(BG)) = -70"
    },
    {
        "assertion": "Coordinate ( POINT: BH ) equals ( NUMBER: 71, NUMBER: 72 )",
        "id": 50,
        "declarations": "BH: POINT",
        "facts": "Coordinate(BH) = (71, 72)"
    },
    {
        "assertion": "Coordinate ( Incenter ( TRIANGLE: BI ) ) equals ( NUMBER: -73, NUMBER: 74 )",
        "id": 51,
        "declarations": "BI: TRIANGLE",
        "facts": "Coordinate(Incenter(BI)) = (-73, 74)"
    },
    {
        "assertion": "Coordinate ( POINT: BJ ) equals ( NUMBER: 75, NUMBER: -76 )",
        "id": 52,
        "declarations": "BJ: POINT",
        "facts": "Coordinate(BJ) = (75, -76)"
    },
    {
        "assertion": "Coordinate ( Circumcenter ( TRIANGLE: BK ) ) equals ( NUMBER: 77, NUMBER: 78 )",
        "id": 53,
        "declarations": "BK: TRIANGLE",
        "facts": "Coordinate(Circumcenter(BK)) = (77, 78)"
    },
    {
        "assertion": "XCoordinate ( UpperFocus ( CONICSECTION: BL ) ) equals NUMBER: -79",
        "id": 54,
        "declarations": "BL: CONICSECTION",
        "facts": "XCoordinate(UpperFocus(BL)) = -79"
    },
    {
        "assertion": "Coordinate ( POINT: BM ) equals ( NUMBER: 80, NUMBER: 81 )",
        "id": 55,
        "declarations": "BM: POINT",
        "facts": "Coordinate(BM) = (80, 81)"
    },
    {
        "assertion": "Coordinate ( Orthocenter ( TRIANGLE: BN ) ) equals ( NUMBER: -82, NUMBER: 83 )",
        "id": 56,
        "declarations": "BN: TRIANGLE",
        "facts": "Coordinate(Orthocenter(BN)) = (-82, 83)"
    },
    {
        "assertion": "Coordinate ( POINT: BO ) equals ( NUMBER: 84, NUMBER: -85 )",
        "id": 57,
        "declarations": "BO: POINT",
        "facts": "Coordinate(BO) = (84, -85)"
    },
    {
        "assertion": "Coordinate ( RightFocus ( CONICSECTION: BP ) ) equals ( NUMBER: 86, NUMBER: 87 )",
        "id": 58,
        "declarations": "BP: CONICSECTION",
        "facts": "Coordinate(RightFocus(BP)) = (86, 87)"
    },
    {
        "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: BQ ) ) equals NUMBER: -88",
        "id": 59,
        "declarations": "BQ: CONICSECTION",
        "facts": "YCoordinate(LowerVertex(BQ)) = -88"
    }
]