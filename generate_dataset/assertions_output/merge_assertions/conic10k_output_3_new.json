[
{
    "assertion": "Negation ( And ( TriangleOf ( POINT: M, POINT: S, POINT: Y ) equals TRIANGLE: j, Vertex ( CONICSECTION: q ) equals POINT: z ) equals BOOL: False ) equals BOOL: False",
    "id": 3226,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "lg ( Inclination ( LineOf ( Center ( CONICSECTION: A ), LeftFocus ( CONICSECTION: g ) ) ) ) equals NUMBER: -81",
    "id": 3227,
    "declarations": "A: CONICSECTION; g: CONICSECTION; -81: NUMBER",
    "facts": "lg(Inclination(LineOf(Center(A), LeftFocus(g)))) = -81"
},
{
    "assertion": "Length ( LINESEGMENT: O ) equals NUMBER: 98",
    "id": 3228,
    "declarations": "O: LINESEGMENT; 98: NUMBER",
    "facts": "Length(O) = 98"
},
{
    "assertion": "Endpoint ( LINESEGMENT: c ) equals MidPoint ( MajorAxis ( ELLIPSE: d ) )",
    "id": 3229,
    "declarations": "c: LINESEGMENT; d: ELLIPSE",
    "facts": "Endpoint(c) = MidPoint(MajorAxis(d))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: C ) equals POINT: p",
    "id": 3230,
    "declarations": "C: CONICSECTION; p: POINT",
    "facts": "UpperFocus(C) = p"
},
{
    "assertion": "LeftFocus ( CONICSECTION: H ) equals UpperFocus ( CONICSECTION: J )",
    "id": 3231,
    "declarations": "H: CONICSECTION; J: CONICSECTION",
    "facts": "LeftFocus(H) = UpperFocus(J)"
},
{
    "assertion": "Max ( lg ( sqrt ( Diameter ( CIRCLE: a ) ) ) ) equals Min ( NUMBER: -83 )",
    "id": 3232,
    "declarations": "a: CIRCLE; -83: NUMBER",
    "facts": "Max(lg(sqrt(Diameter(a)))) = Min(-83)"
},
{
    "assertion": "IsTangent ( LINE: C, CONICSECTION: m ) equals BOOL: True",
    "id": 3233,
    "declarations": "C: LINE; m: CONICSECTION; True: BOOL",
    "facts": "IsTangent(C, m) = True"
},
{
    "assertion": "sqrt ( InterReciprocal ( InterReciprocal ( NUMBER: 66 ) ) ) equals HalfFocalLength ( CONICSECTION: D )",
    "id": 3234,
    "declarations": "66: NUMBER; D: CONICSECTION",
    "facts": "sqrt(InterReciprocal(InterReciprocal(66))) = HalfFocalLength(D)"
},
{
    "assertion": "Vertex ( CONICSECTION: A ) equals Orthocenter ( TRIANGLE: U )",
    "id": 3235,
    "declarations": "A: CONICSECTION; U: TRIANGLE",
    "facts": "Vertex(A) = Orthocenter(U)"
},
{
    "assertion": "Expression ( CURVE: E ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 3236,
    "declarations": "E: CURVE; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "Expression(E) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: v, TRIANGLE: M ) equals BOOL: True",
    "id": 3237,
    "declarations": "v: CIRCLE; M: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(v, M) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: v ) equals MajorAxis ( ELLIPSE: y )",
    "id": 3238,
    "declarations": "v: ELLIPSE; y: ELLIPSE",
    "facts": "MajorAxis(v) = MajorAxis(y)"
},
{
    "assertion": "Min ( sqrt ( YCoordinate ( FootPoint ( TangentOfPoint ( Circumcenter ( TRIANGLE: M ), CURVE: j ), LINE: l ) ) ) ) equals Perimeter ( CONICSECTION: o )",
    "id": 3239,
    "declarations": "M: TRIANGLE; j: CURVE; l: LINE; o: CONICSECTION",
    "facts": "Min(sqrt(YCoordinate(FootPoint(TangentOfPoint(Circumcenter(M), j), l)))) = Perimeter(o)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: n, TRIANGLE: J ) equals BOOL: False",
    "id": 3240,
    "declarations": "n: CIRCLE; J: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(n, J) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: Y ) equals LINE: r",
    "id": 3241,
    "declarations": "Y: CONICSECTION; r: LINE",
    "facts": "Directrix(Y) = r"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: A ) equals AXIS: xAxis",
    "id": 3242,
    "declarations": "A: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(A) = xAxis"
},
{
    "assertion": "OverlappingLine ( RealAxis ( ELLIPSE: V ) ) equals LINE: u",
    "id": 3243,
    "declarations": "V: ELLIPSE; u: LINE",
    "facts": "OverlappingLine(RealAxis(V)) = u"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: f ) ) equals Quadrant ( POINT: n )",
    "id": 3244,
    "declarations": "f: ELLIPSE; n: POINT",
    "facts": "Abs(MinorAxis(f)) = Quadrant(n)"
},
{
    "assertion": "RightVertex ( CONICSECTION: j ) equals POINT: o",
    "id": 3245,
    "declarations": "j: CONICSECTION; o: POINT",
    "facts": "RightVertex(j) = o"
},
{
    "assertion": "Directrix ( CONICSECTION: s ) equals TangentOnPoint ( UpperFocus ( CONICSECTION: h ), RightPart ( HYPERBOLA: s ) )",
    "id": 3246,
    "declarations": "s: CONICSECTION; h: CONICSECTION; s: HYPERBOLA",
    "facts": "Directrix(s) = TangentOnPoint(UpperFocus(h), RightPart(s))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: D, TRIANGLE: T ) equals BOOL: False",
    "id": 3247,
    "declarations": "D: CIRCLE; T: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(D, T) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: y ) equals RightFocus ( CONICSECTION: s )",
    "id": 3248,
    "declarations": "y: CONICSECTION; s: CONICSECTION",
    "facts": "LowerVertex(y) = RightFocus(s)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: n, TRIANGLE: I ) equals BOOL: False",
    "id": 3249,
    "declarations": "n: CIRCLE; I: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(n, I) = False"
},
{
    "assertion": "PointOnCurve ( LeftFocus ( CONICSECTION: T ), Locus ( POINT: r ) ) equals BOOL: True",
    "id": 3250,
    "declarations": "T: CONICSECTION; r: POINT; True: BOOL",
    "facts": "PointOnCurve(LeftFocus(T), Locus(r)) = True"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: R, CIRCLE: P ) equals BOOL: False",
    "id": 3251,
    "declarations": "R: LINESEGMENT; P: CIRCLE; False: BOOL",
    "facts": "IsDiameter(R, P) = False"
},
{
    "assertion": "MidPoint ( ImaginaryAxis ( ELLIPSE: y ) ) equals RightFocus ( CONICSECTION: E )",
    "id": 3252,
    "declarations": "y: ELLIPSE; E: CONICSECTION",
    "facts": "MidPoint(ImaginaryAxis(y)) = RightFocus(E)"
},
{
    "assertion": "Max ( NUMBER: 89 ) equals Slope ( LINE: M )",
    "id": 3253,
    "declarations": "89: NUMBER; M: LINE",
    "facts": "Max(89) = Slope(M)"
},
{
    "assertion": "TangentOfPoint ( POINT: J, CURVE: S ) equals LINE: q",
    "id": 3254,
    "declarations": "J: POINT; S: CURVE; q: LINE",
    "facts": "TangentOfPoint(J, S) = q"
},
{
    "assertion": "UpperFocus ( CONICSECTION: m ) equals LeftFocus ( CONICSECTION: f )",
    "id": 3255,
    "declarations": "m: CONICSECTION; f: CONICSECTION",
    "facts": "UpperFocus(m) = LeftFocus(f)"
},
{
    "assertion": "TangentPoint ( OverlappingLine ( LINESEGMENT: M ), CircumCircle ( TRIANGLE: U ) ) equals UpperFocus ( CONICSECTION: p )",
    "id": 3256,
    "declarations": "M: LINESEGMENT; U: TRIANGLE; p: CONICSECTION",
    "facts": "TangentPoint(OverlappingLine(M), CircumCircle(U)) = UpperFocus(p)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: B ) equals Center ( CONICSECTION: j )",
    "id": 3257,
    "declarations": "B: CONICSECTION; j: CONICSECTION",
    "facts": "LowerVertex(B) = Center(j)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: D ) equals Abs ( InterceptChord ( LINE: h, CONICSECTION: A ) )",
    "id": 3258,
    "declarations": "D: CONICSECTION; h: LINE; A: CONICSECTION",
    "facts": "HalfFocalLength(D) = Abs(InterceptChord(h, A))"
},
{
    "assertion": "Inclination ( LINE: g ) equals XCoordinate ( POINT: Z )",
    "id": 3259,
    "declarations": "g: LINE; Z: POINT",
    "facts": "Inclination(g) = XCoordinate(Z)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: d ) equals LINE: b",
    "id": 3260,
    "declarations": "d: CONICSECTION; b: LINE",
    "facts": "RightDirectrix(d) = b"
},
{
    "assertion": "IsTangent ( LINE: T, CONICSECTION: D ) equals BOOL: False",
    "id": 3261,
    "declarations": "T: LINE; D: CONICSECTION; False: BOOL",
    "facts": "IsTangent(T, D) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: a ) equals LINE: n",
    "id": 3262,
    "declarations": "a: CONICSECTION; n: LINE",
    "facts": "Directrix(a) = n"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: d ) ) equals NUMBER: -92",
    "id": 3263,
    "declarations": "d: CONICSECTION; -92: NUMBER",
    "facts": "XCoordinate(LeftFocus(d)) = -92"
},
{
    "assertion": "Length ( RealAxis ( ELLIPSE: M ) ) equals DotProduct ( VECTOR: n, VECTOR: l )",
    "id": 3264,
    "declarations": "M: ELLIPSE; n: VECTOR; l: VECTOR",
    "facts": "Length(RealAxis(M)) = DotProduct(n, l)"
},
{
    "assertion": "ApplyUnit ( Inclination ( LINE: b ), DEGREESTR: degree )",
    "id": 3265,
    "declarations": "b: LINE; degree: DEGREESTR",
    "facts": "ApplyUnit(Inclination(b), degree) = None"
},
{
    "assertion": "AngleOf ( POINT: e, POINT: l, POINT: k ) equals AngleOf ( Orthocenter ( TRIANGLE: M ), POINT: M, UpperFocus ( CONICSECTION: I ) )",
    "id": 3266,
    "declarations": "e: POINT; l: POINT; k: POINT; M: TRIANGLE; M: POINT; I: CONICSECTION",
    "facts": "AngleOf(e, l, k) = AngleOf(Orthocenter(M), M, UpperFocus(I))"
},
{
    "assertion": "Intercept ( LINE: x, AXIS: yAxis ) equals sqrt ( FocalLength ( CONICSECTION: p ) )",
    "id": 3267,
    "declarations": "x: LINE; yAxis: AXIS; p: CONICSECTION",
    "facts": "Intercept(x, yAxis) = sqrt(FocalLength(p))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: v ) equals POINT: V",
    "id": 3268,
    "declarations": "v: TRIANGLE; V: POINT",
    "facts": "Circumcenter(v) = V"
},
{
    "assertion": "LowerVertex ( CONICSECTION: A ) equals LeftFocus ( CONICSECTION: i )",
    "id": 3269,
    "declarations": "A: CONICSECTION; i: CONICSECTION",
    "facts": "LowerVertex(A) = LeftFocus(i)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: A ) equals Center ( CONICSECTION: g )",
    "id": 3270,
    "declarations": "A: CONICSECTION; g: CONICSECTION",
    "facts": "LeftVertex(A) = Center(g)"
},
{
    "assertion": "RightPart ( HYPERBOLA: v ) equals CURVE: Y",
    "id": 3271,
    "declarations": "v: HYPERBOLA; Y: CURVE",
    "facts": "RightPart(v) = Y"
},
{
    "assertion": "LocusEquation ( Orthocenter ( TRIANGLE: W ) ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6xy",
    "id": 3272,
    "declarations": "W: TRIANGLE; x^3*space+*spacey^3*space=*space6xy: EXPRESSION",
    "facts": "LocusEquation(Orthocenter(W)) = x^3*space+*spacey^3*space=*space6xy"
},
{
    "assertion": "Distance ( LeftFocus ( CONICSECTION: W ), Incenter ( TRIANGLE: V ) ) equals Area ( CONICSECTION: P )",
    "id": 3273,
    "declarations": "W: CONICSECTION; V: TRIANGLE; P: CONICSECTION",
    "facts": "Distance(LeftFocus(W), Incenter(V)) = Area(P)"
},
{
    "assertion": "lg ( Radius ( CircumCircle ( TRIANGLE: M ) ) ) equals Distance ( LeftFocus ( CONICSECTION: m ), POINT: G )",
    "id": 3274,
    "declarations": "M: TRIANGLE; m: CONICSECTION; G: POINT",
    "facts": "lg(Radius(CircumCircle(M))) = Distance(LeftFocus(m), G)"
},
{
    "assertion": "Vertex ( CONICSECTION: N ) equals POINT: a",
    "id": 3275,
    "declarations": "N: CONICSECTION; a: POINT",
    "facts": "Vertex(N) = a"
},
{
    "assertion": "LocusEquation ( POINT: W ) equals EXPRESSION: x^2*space+*spacey^2*space+*space6*x*space-*space4*y*space=*space12",
    "id": 3276,
    "declarations": "W: POINT; x^2*space+*spacey^2*space+*space6*x*space-*space4*y*space=*space12: EXPRESSION",
    "facts": "LocusEquation(W) = x^2*space+*spacey^2*space+*space6*x*space-*space4*y*space=*space12"
},
{
    "assertion": "Orthocenter ( TRIANGLE: F ) equals RightVertex ( CONICSECTION: f )",
    "id": 3277,
    "declarations": "F: TRIANGLE; f: CONICSECTION",
    "facts": "Orthocenter(F) = RightVertex(f)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: B ) equals LINESEGMENT: k",
    "id": 3278,
    "declarations": "B: ELLIPSE; k: LINESEGMENT",
    "facts": "MinorAxis(B) = k"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: r ) equals LeftDirectrix ( CONICSECTION: d )",
    "id": 3279,
    "declarations": "r: CONICSECTION; d: CONICSECTION",
    "facts": "LeftDirectrix(r) = LeftDirectrix(d)"
},
{
    "assertion": "Negation ( LeftPart ( HYPERBOLA: u ) equals RightPart ( HYPERBOLA: Q ) ) equals BOOL: False",
    "id": 3280,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Focus ( CONICSECTION: H ) equals POINT: X",
    "id": 3281,
    "declarations": "H: CONICSECTION; X: POINT",
    "facts": "Focus(H) = X"
},
{
    "assertion": "Area ( CONICSECTION: w ) equals NUMBER: 92",
    "id": 3282,
    "declarations": "w: CONICSECTION; 92: NUMBER",
    "facts": "Area(w) = 92"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: W ) equals AXIS: yAxis",
    "id": 3283,
    "declarations": "W: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(W) = yAxis"
},
{
    "assertion": "Diameter ( CIRCLE: n ) equals Eccentricity ( CONICSECTION: r )",
    "id": 3284,
    "declarations": "n: CIRCLE; r: CONICSECTION",
    "facts": "Diameter(n) = Eccentricity(r)"
},
{
    "assertion": "InterReciprocal ( Radius ( CIRCLE: A ) ) equals NUMBER: -11",
    "id": 3285,
    "declarations": "A: CIRCLE; -11: NUMBER",
    "facts": "InterReciprocal(Radius(A)) = -11"
},
{
    "assertion": "YCoordinate ( POINT: y ) equals Inclination ( LINE: L )",
    "id": 3286,
    "declarations": "y: POINT; L: LINE",
    "facts": "YCoordinate(y) = Inclination(L)"
},
{
    "assertion": "Incenter ( TRIANGLE: S ) equals POINT: e",
    "id": 3287,
    "declarations": "S: TRIANGLE; e: POINT",
    "facts": "Incenter(S) = e"
},
{
    "assertion": "Radius ( CIRCLE: Z ) equals YCoordinate ( Circumcenter ( TRIANGLE: M ) )",
    "id": 3288,
    "declarations": "Z: CIRCLE; M: TRIANGLE",
    "facts": "Radius(Z) = YCoordinate(Circumcenter(M))"
},
{
    "assertion": "DotProduct ( VECTOR: h, VECTOR: r ) equals Slope ( PerpendicularBisector ( LINESEGMENT: T ) )",
    "id": 3289,
    "declarations": "h: VECTOR; r: VECTOR; T: LINESEGMENT",
    "facts": "DotProduct(h, r) = Slope(PerpendicularBisector(T))"
},
{
    "assertion": "Area ( CONICSECTION: j ) equals Min ( NUMBER: 26 )",
    "id": 3290,
    "declarations": "j: CONICSECTION; 26: NUMBER",
    "facts": "Area(j) = Min(26)"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: O ) ) equals UpperFocus ( CONICSECTION: S )",
    "id": 3291,
    "declarations": "O: ELLIPSE; S: CONICSECTION",
    "facts": "MidPoint(MajorAxis(O)) = UpperFocus(S)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: o ) equals Radius ( CIRCLE: w )",
    "id": 3292,
    "declarations": "o: CONICSECTION; w: CIRCLE",
    "facts": "HalfFocalLength(o) = Radius(w)"
},
{
    "assertion": "Distance ( MidPoint ( LINESEGMENT: m ), MidPoint ( LINESEGMENT: k ) ) equals NUMBER: 63",
    "id": 3293,
    "declarations": "m: LINESEGMENT; k: LINESEGMENT; 63: NUMBER",
    "facts": "Distance(MidPoint(m), MidPoint(k)) = 63"
},
{
    "assertion": "Length ( LINESEGMENT: a ) equals Inclination ( OverlappingLine ( LINESEGMENT: q ) )",
    "id": 3294,
    "declarations": "a: LINESEGMENT; q: LINESEGMENT",
    "facts": "Length(a) = Inclination(OverlappingLine(q))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: p ) equals LINE: a",
    "id": 3295,
    "declarations": "p: CONICSECTION; a: LINE",
    "facts": "RightDirectrix(p) = a"
},
{
    "assertion": "Focus ( CONICSECTION: J ) equals POINT: i",
    "id": 3296,
    "declarations": "J: CONICSECTION; i: POINT",
    "facts": "Focus(J) = i"
},
{
    "assertion": "Length ( ImaginaryAxis ( ELLIPSE: q ) ) equals NUMBER: 85",
    "id": 3297,
    "declarations": "q: ELLIPSE; 85: NUMBER",
    "facts": "Length(ImaginaryAxis(q)) = 85"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: q ) ) equals LeftVertex ( CONICSECTION: U )",
    "id": 3298,
    "declarations": "q: ELLIPSE; U: CONICSECTION",
    "facts": "MidPoint(MajorAxis(q)) = LeftVertex(U)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: s ) equals RightPart ( HYPERBOLA: b )",
    "id": 3299,
    "declarations": "s: HYPERBOLA; b: HYPERBOLA",
    "facts": "LeftPart(s) = RightPart(b)"
},
{
    "assertion": "Length ( LINESEGMENT: U ) equals Diameter ( CIRCLE: S )",
    "id": 3300,
    "declarations": "U: LINESEGMENT; S: CIRCLE",
    "facts": "Length(U) = Diameter(S)"
},
{
    "assertion": "ApplyUnit ( Radius ( CIRCLE: e ), DEGREESTR: degree )",
    "id": 3301,
    "declarations": "e: CIRCLE; degree: DEGREESTR",
    "facts": "ApplyUnit(Radius(e), degree) = None"
},
{
    "assertion": "IsTangent ( OverlappingLine ( RealAxis ( ELLIPSE: y ) ), CONICSECTION: j ) equals BOOL: False",
    "id": 3302,
    "declarations": "y: ELLIPSE; j: CONICSECTION; False: BOOL",
    "facts": "IsTangent(OverlappingLine(RealAxis(y)), j) = False"
},
{
    "assertion": "IsIntersect ( CURVE: M, CURVE: l ) equals BOOL: True",
    "id": 3303,
    "declarations": "M: CURVE; l: CURVE; True: BOOL",
    "facts": "IsIntersect(M, l) = True"
},
{
    "assertion": "sqrt ( NUMBER: -29 ) equals Diameter ( CIRCLE: n )",
    "id": 3304,
    "declarations": "-29: NUMBER; n: CIRCLE",
    "facts": "sqrt(-29) = Diameter(n)"
},
{
    "assertion": "DotProduct ( VECTOR: E, VECTOR: z ) equals NUMBER: 66",
    "id": 3305,
    "declarations": "E: VECTOR; z: VECTOR; 66: NUMBER",
    "facts": "DotProduct(E, z) = 66"
},
{
    "assertion": "RightPart ( HYPERBOLA: I ) equals CURVE: f",
    "id": 3306,
    "declarations": "I: HYPERBOLA; f: CURVE",
    "facts": "RightPart(I) = f"
},
{
    "assertion": "UpperVertex ( CONICSECTION: W ) equals POINT: r",
    "id": 3307,
    "declarations": "W: CONICSECTION; r: POINT",
    "facts": "UpperVertex(W) = r"
},
{
    "assertion": "Distance ( Projection ( RightVertex ( CONICSECTION: T ), LINE: n ), POINT: M ) equals Abs ( LINESEGMENT: m )",
    "id": 3308,
    "declarations": "T: CONICSECTION; n: LINE; M: POINT; m: LINESEGMENT",
    "facts": "Distance(Projection(RightVertex(T), n), M) = Abs(m)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: E ) equals LINE: r",
    "id": 3309,
    "declarations": "E: LINESEGMENT; r: LINE",
    "facts": "OverlappingLine(E) = r"
},
{
    "assertion": "Min ( Perimeter ( CONICSECTION: R ) ) equals Inclination ( LINE: m )",
    "id": 3310,
    "declarations": "R: CONICSECTION; m: LINE",
    "facts": "Min(Perimeter(R)) = Inclination(m)"
},
{
    "assertion": "Radius ( CIRCLE: h ) equals Quadrant ( Center ( CONICSECTION: y ) )",
    "id": 3311,
    "declarations": "h: CIRCLE; y: CONICSECTION",
    "facts": "Radius(h) = Quadrant(Center(y))"
},
{
    "assertion": "Area ( CONICSECTION: m ) equals XCoordinate ( Center ( CONICSECTION: b ) )",
    "id": 3312,
    "declarations": "m: CONICSECTION; b: CONICSECTION",
    "facts": "Area(m) = XCoordinate(Center(b))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Z ) equals POINT: Z",
    "id": 3313,
    "declarations": "Z: CONICSECTION; Z: POINT",
    "facts": "LeftFocus(Z) = Z"
},
{
    "assertion": "Center ( CONICSECTION: I ) equals Orthocenter ( TRIANGLE: Z )",
    "id": 3314,
    "declarations": "I: CONICSECTION; Z: TRIANGLE",
    "facts": "Center(I) = Orthocenter(Z)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: L ) equals LINE: w",
    "id": 3315,
    "declarations": "L: HYPERBOLA; w: LINE",
    "facts": "Asymptote(L) = w"
},
{
    "assertion": "LineSegmentOf ( POINT: m, RightVertex ( CONICSECTION: b ) ) equals LINESEGMENT: w",
    "id": 3316,
    "declarations": "m: POINT; b: CONICSECTION; w: LINESEGMENT",
    "facts": "LineSegmentOf(m, RightVertex(b)) = w"
},
{
    "assertion": "Circumcenter ( TRIANGLE: Z ) equals POINT: H",
    "id": 3317,
    "declarations": "Z: TRIANGLE; H: POINT",
    "facts": "Circumcenter(Z) = H"
},
{
    "assertion": "FocalLength ( CONICSECTION: D ) equals Diameter ( CIRCLE: N )",
    "id": 3318,
    "declarations": "D: CONICSECTION; N: CIRCLE",
    "facts": "FocalLength(D) = Diameter(N)"
},
{
    "assertion": "Directrix ( CONICSECTION: J ) equals LINE: i",
    "id": 3319,
    "declarations": "J: CONICSECTION; i: LINE",
    "facts": "Directrix(J) = i"
},
{
    "assertion": "PointOnCurve ( POINT: w, CURVE: W ) equals BOOL: False",
    "id": 3320,
    "declarations": "w: POINT; W: CURVE; False: BOOL",
    "facts": "PointOnCurve(w, W) = False"
},
{
    "assertion": "Circumcenter ( TRIANGLE: z ) equals POINT: G",
    "id": 3321,
    "declarations": "z: TRIANGLE; G: POINT",
    "facts": "Circumcenter(z) = G"
},
{
    "assertion": "Circumcenter ( TRIANGLE: M ) equals Circumcenter ( TRIANGLE: k )",
    "id": 3322,
    "declarations": "M: TRIANGLE; k: TRIANGLE",
    "facts": "Circumcenter(M) = Circumcenter(k)"
},
{
    "assertion": "FootPoint ( LINE: p, OverlappingLine ( LINESEGMENT: c ) ) equals Orthocenter ( TRIANGLE: A )",
    "id": 3323,
    "declarations": "p: LINE; c: LINESEGMENT; A: TRIANGLE",
    "facts": "FootPoint(p, OverlappingLine(c)) = Orthocenter(A)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: f ) equals LowerVertex ( CONICSECTION: c )",
    "id": 3324,
    "declarations": "f: CONICSECTION; c: CONICSECTION",
    "facts": "LowerFocus(f) = LowerVertex(c)"
},
{
    "assertion": "Locus ( POINT: v ) equals CURVE: T",
    "id": 3325,
    "declarations": "v: POINT; T: CURVE",
    "facts": "Locus(v) = T"
},
{
    "assertion": "TangentPoint ( LINE: G, CIRCLE: O ) equals UpperFocus ( CONICSECTION: e )",
    "id": 3326,
    "declarations": "G: LINE; O: CIRCLE; e: CONICSECTION",
    "facts": "TangentPoint(G, O) = UpperFocus(e)"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: k ) ) equals Orthocenter ( TRIANGLE: E )",
    "id": 3327,
    "declarations": "k: ELLIPSE; E: TRIANGLE",
    "facts": "Endpoint(ImaginaryAxis(k)) = Orthocenter(E)"
},
{
    "assertion": "RightPart ( HYPERBOLA: z ) equals CURVE: I",
    "id": 3328,
    "declarations": "z: HYPERBOLA; I: CURVE",
    "facts": "RightPart(z) = I"
},
{
    "assertion": "RightPart ( HYPERBOLA: G ) equals CURVE: Y",
    "id": 3329,
    "declarations": "G: HYPERBOLA; Y: CURVE",
    "facts": "RightPart(G) = Y"
},
{
    "assertion": "Incenter ( TRIANGLE: t ) equals POINT: l",
    "id": 3330,
    "declarations": "t: TRIANGLE; l: POINT",
    "facts": "Incenter(t) = l"
},
{
    "assertion": "IsChordOf ( LineSegmentOf ( Orthocenter ( TriangleOf ( POINT: N, Circumcenter ( TRIANGLE: s ), Orthocenter ( TRIANGLE: R ) ) ), POINT: o ), CONICSECTION: K ) equals BOOL: True",
    "id": 3331,
    "declarations": "N: POINT; s: TRIANGLE; R: TRIANGLE; o: POINT; K: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(LineSegmentOf(Orthocenter(TriangleOf(N, Circumcenter(s), Orthocenter(R))), o), K) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: u ) equals LINE: o",
    "id": 3332,
    "declarations": "u: CONICSECTION; o: LINE",
    "facts": "RightDirectrix(u) = o"
},
{
    "assertion": "Inclination ( LINE: s ) equals Quadrant ( POINT: a )",
    "id": 3333,
    "declarations": "s: LINE; a: POINT",
    "facts": "Inclination(s) = Quadrant(a)"
},
{
    "assertion": "IsPerpendicular ( LINE: N, LINE: y ) equals BOOL: False",
    "id": 3334,
    "declarations": "N: LINE; y: LINE; False: BOOL",
    "facts": "IsPerpendicular(N, y) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: e ) equals MajorAxis ( ELLIPSE: M )",
    "id": 3335,
    "declarations": "e: ELLIPSE; M: ELLIPSE",
    "facts": "MinorAxis(e) = MajorAxis(M)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: k ) equals OverlappingLine ( LINESEGMENT: t )",
    "id": 3336,
    "declarations": "k: HYPERBOLA; t: LINESEGMENT",
    "facts": "Asymptote(k) = OverlappingLine(t)"
},
{
    "assertion": "LineOf ( POINT: M, POINT: x ) equals RightDirectrix ( CONICSECTION: Y )",
    "id": 3337,
    "declarations": "M: POINT; x: POINT; Y: CONICSECTION",
    "facts": "LineOf(M, x) = RightDirectrix(Y)"
},
{
    "assertion": "Focus ( CONICSECTION: r ) equals POINT: H",
    "id": 3338,
    "declarations": "r: CONICSECTION; H: POINT",
    "facts": "Focus(r) = H"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: n ) equals LINESEGMENT: x",
    "id": 3339,
    "declarations": "n: ELLIPSE; x: LINESEGMENT",
    "facts": "ImaginaryAxis(n) = x"
},
{
    "assertion": "Radius ( CIRCLE: U ) equals Area ( CONICSECTION: b )",
    "id": 3340,
    "declarations": "U: CIRCLE; b: CONICSECTION",
    "facts": "Radius(U) = Area(b)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: K, CIRCLE: T ) equals BOOL: False",
    "id": 3341,
    "declarations": "K: CIRCLE; T: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(K, T) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: A ) equals POINT: C",
    "id": 3342,
    "declarations": "A: CONICSECTION; C: POINT",
    "facts": "LowerFocus(A) = C"
},
{
    "assertion": "sqrt ( Area ( CONICSECTION: a ) ) equals Quadrant ( POINT: T )",
    "id": 3343,
    "declarations": "a: CONICSECTION; T: POINT",
    "facts": "sqrt(Area(a)) = Quadrant(T)"
},
{
    "assertion": "And ( Center ( CONICSECTION: C ) equals POINT: s, FootPoint ( OverlappingLine ( LINESEGMENT: g ), LineOf ( UpperFocus ( CONICSECTION: K ), MidPoint ( MinorAxis ( ELLIPSE: p ) ) ) ) equals POINT: I ) equals BOOL: True",
    "id": 3344,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: x ) equals LINE: t",
    "id": 3345,
    "declarations": "x: LINESEGMENT; t: LINE",
    "facts": "PerpendicularBisector(x) = t"
},
{
    "assertion": "LineOf ( POINT: C, LeftVertex ( CONICSECTION: T ) ) equals LINE: K",
    "id": 3346,
    "declarations": "C: POINT; T: CONICSECTION; K: LINE",
    "facts": "LineOf(C, LeftVertex(T)) = K"
},
{
    "assertion": "ApplyUnit ( Eccentricity ( CONICSECTION: X ), DEGREESTR: degree )",
    "id": 3347,
    "declarations": "X: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Eccentricity(X), degree) = None"
},
{
    "assertion": "CircumCircle ( TRIANGLE: l ) equals CIRCLE: m",
    "id": 3348,
    "declarations": "l: TRIANGLE; m: CIRCLE",
    "facts": "CircumCircle(l) = m"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: R ), TRIANGLE: c ) equals BOOL: False",
    "id": 3349,
    "declarations": "R: TRIANGLE; c: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(R), c) = False"
},
{
    "assertion": "LineSegmentOf ( UpperFocus ( CONICSECTION: o ), FootPoint ( LINE: l, LINE: o ) ) equals LINESEGMENT: q",
    "id": 3350,
    "declarations": "o: CONICSECTION; l: LINE; o: LINE; q: LINESEGMENT",
    "facts": "LineSegmentOf(UpperFocus(o), FootPoint(l, o)) = q"
},
{
    "assertion": "LocusEquation ( POINT: P ) equals Expression ( CURVE: s )",
    "id": 3351,
    "declarations": "P: POINT; s: CURVE",
    "facts": "LocusEquation(P) = Expression(s)"
},
{
    "assertion": "LocusEquation ( POINT: x ) equals EXPRESSION: x*y*space=*space1",
    "id": 3352,
    "declarations": "x: POINT; x*y*space=*space1: EXPRESSION",
    "facts": "LocusEquation(x) = x*y*space=*space1"
},
{
    "assertion": "Incenter ( TRIANGLE: V ) equals POINT: m",
    "id": 3353,
    "declarations": "V: TRIANGLE; m: POINT",
    "facts": "Incenter(V) = m"
},
{
    "assertion": "Locus ( POINT: A ) equals Locus ( POINT: V )",
    "id": 3354,
    "declarations": "A: POINT; V: POINT",
    "facts": "Locus(A) = Locus(V)"
},
{
    "assertion": "RightVertex ( CONICSECTION: l ) equals LeftVertex ( CONICSECTION: n )",
    "id": 3355,
    "declarations": "l: CONICSECTION; n: CONICSECTION",
    "facts": "RightVertex(l) = LeftVertex(n)"
},
{
    "assertion": "FocalLength ( CONICSECTION: U ) equals NUMBER: 1",
    "id": 3356,
    "declarations": "U: CONICSECTION; 1: NUMBER",
    "facts": "FocalLength(U) = 1"
},
{
    "assertion": "TriangleOf ( Center ( CONICSECTION: p ), POINT: k, POINT: T ) equals TRIANGLE: H",
    "id": 3357,
    "declarations": "p: CONICSECTION; k: POINT; T: POINT; H: TRIANGLE",
    "facts": "TriangleOf(Center(p), k, T) = H"
},
{
    "assertion": "LeftPart ( HYPERBOLA: g ) equals CURVE: M",
    "id": 3358,
    "declarations": "g: HYPERBOLA; M: CURVE",
    "facts": "LeftPart(g) = M"
},
{
    "assertion": "DotProduct ( VECTOR: t, VECTOR: l ) equals XCoordinate ( POINT: j )",
    "id": 3359,
    "declarations": "t: VECTOR; l: VECTOR; j: POINT",
    "facts": "DotProduct(t, l) = XCoordinate(j)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: r ) equals LowerVertex ( CONICSECTION: i )",
    "id": 3360,
    "declarations": "r: CONICSECTION; i: CONICSECTION",
    "facts": "LowerFocus(r) = LowerVertex(i)"
},
{
    "assertion": "Directrix ( CONICSECTION: K ) equals LINE: N",
    "id": 3361,
    "declarations": "K: CONICSECTION; N: LINE",
    "facts": "Directrix(K) = N"
},
{
    "assertion": "IsTangent ( RightDirectrix ( CONICSECTION: q ), CONICSECTION: t ) equals BOOL: True",
    "id": 3362,
    "declarations": "q: CONICSECTION; t: CONICSECTION; True: BOOL",
    "facts": "IsTangent(RightDirectrix(q), t) = True"
},
{
    "assertion": "InterReciprocal ( Radius ( CIRCLE: P ) ) equals Min ( NUMBER: 16 )",
    "id": 3363,
    "declarations": "P: CIRCLE; 16: NUMBER",
    "facts": "InterReciprocal(Radius(P)) = Min(16)"
},
{
    "assertion": "RightFocus ( CONICSECTION: A ) equals POINT: O",
    "id": 3364,
    "declarations": "A: CONICSECTION; O: POINT",
    "facts": "RightFocus(A) = O"
},
{
    "assertion": "Perimeter ( CONICSECTION: w ) equals Min ( Min ( DotProduct ( VECTOR: w, VECTOR: s ) ) )",
    "id": 3365,
    "declarations": "w: CONICSECTION; w: VECTOR; s: VECTOR",
    "facts": "Perimeter(w) = Min(Min(DotProduct(w, s)))"
},
{
    "assertion": "ApplyUnit ( NUMBER: -62, DEGREESTR: degree )",
    "id": 3366,
    "declarations": "-62: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-62, degree) = None"
},
{
    "assertion": "Inclination ( LINE: j ) equals Quadrant ( UpperFocus ( CONICSECTION: e ) )",
    "id": 3367,
    "declarations": "j: LINE; e: CONICSECTION",
    "facts": "Inclination(j) = Quadrant(UpperFocus(e))"
},
{
    "assertion": "Slope ( LINE: B ) equals Min ( Area ( CONICSECTION: P ) )",
    "id": 3368,
    "declarations": "B: LINE; P: CONICSECTION",
    "facts": "Slope(B) = Min(Area(P))"
},
{
    "assertion": "TangentOfPoint ( LeftVertex ( CONICSECTION: T ), CURVE: a ) equals LINE: Q",
    "id": 3369,
    "declarations": "T: CONICSECTION; a: CURVE; Q: LINE",
    "facts": "TangentOfPoint(LeftVertex(T), a) = Q"
},
{
    "assertion": "MajorAxis ( ELLIPSE: Y ) equals LINESEGMENT: R",
    "id": 3370,
    "declarations": "Y: ELLIPSE; R: LINESEGMENT",
    "facts": "MajorAxis(Y) = R"
},
{
    "assertion": "FocalLength ( CONICSECTION: d ) equals Diameter ( CIRCLE: X )",
    "id": 3371,
    "declarations": "d: CONICSECTION; X: CIRCLE",
    "facts": "FocalLength(d) = Diameter(X)"
},
{
    "assertion": "Slope ( LINE: H ) equals Radius ( CIRCLE: B )",
    "id": 3372,
    "declarations": "H: LINE; B: CIRCLE",
    "facts": "Slope(H) = Radius(B)"
},
{
    "assertion": "Intersection ( CURVE: C, CURVE: k ) equals Center ( CONICSECTION: p )",
    "id": 3373,
    "declarations": "C: CURVE; k: CURVE; p: CONICSECTION",
    "facts": "Intersection(C, k) = Center(p)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: Q ) equals LINESEGMENT: P",
    "id": 3374,
    "declarations": "Q: ELLIPSE; P: LINESEGMENT",
    "facts": "ImaginaryAxis(Q) = P"
},
{
    "assertion": "Circumcenter ( TRIANGLE: W ) equals POINT: a",
    "id": 3375,
    "declarations": "W: TRIANGLE; a: POINT",
    "facts": "Circumcenter(W) = a"
},
{
    "assertion": "Asymptote ( HYPERBOLA: K ) equals LINE: n",
    "id": 3376,
    "declarations": "K: HYPERBOLA; n: LINE",
    "facts": "Asymptote(K) = n"
},
{
    "assertion": "FootPoint ( LINE: k, LINE: r ) equals LowerFocus ( CONICSECTION: P )",
    "id": 3377,
    "declarations": "k: LINE; r: LINE; P: CONICSECTION",
    "facts": "FootPoint(k, r) = LowerFocus(P)"
},
{
    "assertion": "FocalLength ( CONICSECTION: D ) equals HalfFocalLength ( CONICSECTION: L )",
    "id": 3378,
    "declarations": "D: CONICSECTION; L: CONICSECTION",
    "facts": "FocalLength(D) = HalfFocalLength(L)"
},
{
    "assertion": "LineSegmentOf ( LowerVertex ( CONICSECTION: O ), POINT: J ) equals LINESEGMENT: s",
    "id": 3379,
    "declarations": "O: CONICSECTION; J: POINT; s: LINESEGMENT",
    "facts": "LineSegmentOf(LowerVertex(O), J) = s"
},
{
    "assertion": "Intercept ( PerpendicularBisector ( LINESEGMENT: x ), AXIS: yAxis ) equals XCoordinate ( POINT: d )",
    "id": 3380,
    "declarations": "x: LINESEGMENT; yAxis: AXIS; d: POINT",
    "facts": "Intercept(PerpendicularBisector(x), yAxis) = XCoordinate(d)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: Q, TRIANGLE: r ) equals BOOL: False",
    "id": 3381,
    "declarations": "Q: CIRCLE; r: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(Q, r) = False"
},
{
    "assertion": "Slope ( LINE: G ) equals DotProduct ( VECTOR: e, VECTOR: A )",
    "id": 3382,
    "declarations": "G: LINE; e: VECTOR; A: VECTOR",
    "facts": "Slope(G) = DotProduct(e, A)"
},
{
    "assertion": "Intercept ( LineOf ( POINT: Y, LeftVertex ( CONICSECTION: Z ) ), AXIS: xAxis ) equals Slope ( LINE: d )",
    "id": 3383,
    "declarations": "Y: POINT; Z: CONICSECTION; xAxis: AXIS; d: LINE",
    "facts": "Intercept(LineOf(Y, LeftVertex(Z)), xAxis) = Slope(d)"
},
{
    "assertion": "Directrix ( CONICSECTION: u ) equals LINE: A",
    "id": 3384,
    "declarations": "u: CONICSECTION; A: LINE",
    "facts": "Directrix(u) = A"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: Q ) equals Perimeter ( CONICSECTION: d )",
    "id": 3385,
    "declarations": "Q: CONICSECTION; d: CONICSECTION",
    "facts": "HalfFocalLength(Q) = Perimeter(d)"
},
{
    "assertion": "Quadrant ( POINT: d ) equals NUMBER: 80",
    "id": 3386,
    "declarations": "d: POINT; 80: NUMBER",
    "facts": "Quadrant(d) = 80"
},
{
    "assertion": "Quadrant ( POINT: T ) equals XCoordinate ( POINT: c )",
    "id": 3387,
    "declarations": "T: POINT; c: POINT",
    "facts": "Quadrant(T) = XCoordinate(c)"
},
{
    "assertion": "Abs ( LINESEGMENT: a ) equals NUMBER: 30",
    "id": 3388,
    "declarations": "a: LINESEGMENT; 30: NUMBER",
    "facts": "Abs(a) = 30"
},
{
    "assertion": "Min ( Diameter ( CIRCLE: O ) ) equals NUMBER: -12",
    "id": 3389,
    "declarations": "O: CIRCLE; -12: NUMBER",
    "facts": "Min(Diameter(O)) = -12"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: Q ) ) equals Quadrant ( LowerVertex ( CONICSECTION: m ) )",
    "id": 3390,
    "declarations": "Q: ELLIPSE; m: CONICSECTION",
    "facts": "Abs(RealAxis(Q)) = Quadrant(LowerVertex(m))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: F ) equals InterReciprocal ( Radius ( CIRCLE: F ) )",
    "id": 3391,
    "declarations": "F: CONICSECTION; F: CIRCLE",
    "facts": "HalfFocalLength(F) = InterReciprocal(Radius(F))"
},
{
    "assertion": "Locus ( POINT: b ) equals CURVE: w",
    "id": 3392,
    "declarations": "b: POINT; w: CURVE",
    "facts": "Locus(b) = w"
},
{
    "assertion": "LeftFocus ( CONICSECTION: W ) equals LowerVertex ( CONICSECTION: l )",
    "id": 3393,
    "declarations": "W: CONICSECTION; l: CONICSECTION",
    "facts": "LeftFocus(W) = LowerVertex(l)"
},
{
    "assertion": "And ( PointOnCurve ( POINT: p, CURVE: N ) equals BOOL: False, SymmetryAxis ( CONICSECTION: P ) equals AXIS: yAxis ) equals BOOL: True",
    "id": 3394,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LocusEquation ( Orthocenter ( TRIANGLE: g ) ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 3395,
    "declarations": "g: TRIANGLE; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "LocusEquation(Orthocenter(g)) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "RightVertex ( CONICSECTION: k ) equals LeftVertex ( CONICSECTION: q )",
    "id": 3396,
    "declarations": "k: CONICSECTION; q: CONICSECTION",
    "facts": "RightVertex(k) = LeftVertex(q)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: D ) equals Incenter ( TriangleOf ( LeftVertex ( CONICSECTION: m ), Projection ( LeftFocus ( CONICSECTION: o ), LINE: q ), LeftVertex ( CONICSECTION: S ) ) )",
    "id": 3397,
    "declarations": "D: CONICSECTION; m: CONICSECTION; o: CONICSECTION; q: LINE; S: CONICSECTION",
    "facts": "LeftFocus(D) = Incenter(TriangleOf(LeftVertex(m), Projection(LeftFocus(o), q), LeftVertex(S)))"
},
{
    "assertion": "Incenter ( TRIANGLE: l ) equals Center ( CONICSECTION: X )",
    "id": 3398,
    "declarations": "l: TRIANGLE; X: CONICSECTION",
    "facts": "Incenter(l) = Center(X)"
},
{
    "assertion": "RightVertex ( CONICSECTION: L ) equals LeftVertex ( CONICSECTION: g )",
    "id": 3399,
    "declarations": "L: CONICSECTION; g: CONICSECTION",
    "facts": "RightVertex(L) = LeftVertex(g)"
},
{
    "assertion": "TangentOnPoint ( POINT: n, Locus ( RightVertex ( CONICSECTION: l ) ) ) equals LINE: P",
    "id": 3400,
    "declarations": "n: POINT; l: CONICSECTION; P: LINE",
    "facts": "TangentOnPoint(n, Locus(RightVertex(l))) = P"
},
{
    "assertion": "And ( Center ( CONICSECTION: O ) equals LowerFocus ( CONICSECTION: N ), Intersection ( LeftPart ( HYPERBOLA: t ), Locus ( POINT: Q ) ) equals Circumcenter ( TRIANGLE: K ) ) equals BOOL: True",
    "id": 3401,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "CircumCircle ( TRIANGLE: l ) equals CIRCLE: S",
    "id": 3402,
    "declarations": "l: TRIANGLE; S: CIRCLE",
    "facts": "CircumCircle(l) = S"
},
{
    "assertion": "FootPoint ( OverlappingLine ( LINESEGMENT: l ), LINE: x ) equals Incenter ( TRIANGLE: g )",
    "id": 3403,
    "declarations": "l: LINESEGMENT; x: LINE; g: TRIANGLE",
    "facts": "FootPoint(OverlappingLine(l), x) = Incenter(g)"
},
{
    "assertion": "Center ( CONICSECTION: X ) equals Center ( CONICSECTION: d )",
    "id": 3404,
    "declarations": "X: CONICSECTION; d: CONICSECTION",
    "facts": "Center(X) = Center(d)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: C ) equals POINT: E",
    "id": 3405,
    "declarations": "C: CONICSECTION; E: POINT",
    "facts": "LowerVertex(C) = E"
},
{
    "assertion": "MajorAxis ( ELLIPSE: q ) equals LINESEGMENT: j",
    "id": 3406,
    "declarations": "q: ELLIPSE; j: LINESEGMENT",
    "facts": "MajorAxis(q) = j"
},
{
    "assertion": "LeftVertex ( CONICSECTION: L ) equals Projection ( LeftVertex ( CONICSECTION: s ), LINE: N )",
    "id": 3407,
    "declarations": "L: CONICSECTION; s: CONICSECTION; N: LINE",
    "facts": "LeftVertex(L) = Projection(LeftVertex(s), N)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: B ) equals AXIS: xAxis",
    "id": 3408,
    "declarations": "B: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(B) = xAxis"
},
{
    "assertion": "YCoordinate ( POINT: Y ) equals YCoordinate ( POINT: M )",
    "id": 3409,
    "declarations": "Y: POINT; M: POINT",
    "facts": "YCoordinate(Y) = YCoordinate(M)"
},
{
    "assertion": "RightVertex ( CONICSECTION: X ) equals FootPoint ( TangentOnPoint ( LowerFocus ( CONICSECTION: s ), CURVE: q ), LINE: u )",
    "id": 3410,
    "declarations": "X: CONICSECTION; s: CONICSECTION; q: CURVE; u: LINE",
    "facts": "RightVertex(X) = FootPoint(TangentOnPoint(LowerFocus(s), q), u)"
},
{
    "assertion": "Max ( NUMBER: 38 ) equals DotProduct ( VECTOR: V, VECTOR: z )",
    "id": 3411,
    "declarations": "38: NUMBER; V: VECTOR; z: VECTOR",
    "facts": "Max(38) = DotProduct(V, z)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: G, TRIANGLE: T ) equals BOOL: False",
    "id": 3412,
    "declarations": "G: CIRCLE; T: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(G, T) = False"
},
{
    "assertion": "Abs ( ImaginaryAxis ( ELLIPSE: P ) ) equals lg ( Perimeter ( CONICSECTION: Z ) )",
    "id": 3413,
    "declarations": "P: ELLIPSE; Z: CONICSECTION",
    "facts": "Abs(ImaginaryAxis(P)) = lg(Perimeter(Z))"
},
{
    "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: v ) ) equals Min ( Diameter ( CIRCLE: f ) )",
    "id": 3414,
    "declarations": "v: CONICSECTION; f: CIRCLE",
    "facts": "YCoordinate(UpperVertex(v)) = Min(Diameter(f))"
},
{
    "assertion": "RightVertex ( CONICSECTION: H ) equals POINT: H",
    "id": 3415,
    "declarations": "H: CONICSECTION; H: POINT",
    "facts": "RightVertex(H) = H"
},
{
    "assertion": "MidPoint ( InterceptChord ( RightDirectrix ( CONICSECTION: f ), CONICSECTION: o ) ) equals POINT: b",
    "id": 3416,
    "declarations": "f: CONICSECTION; o: CONICSECTION; b: POINT",
    "facts": "MidPoint(InterceptChord(RightDirectrix(f), o)) = b"
},
{
    "assertion": "IsInTangent ( CIRCLE: T, CIRCLE: b ) equals BOOL: False",
    "id": 3417,
    "declarations": "T: CIRCLE; b: CIRCLE; False: BOOL",
    "facts": "IsInTangent(T, b) = False"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: i ) equals LINE: b",
    "id": 3418,
    "declarations": "i: CONICSECTION; b: LINE",
    "facts": "RightDirectrix(i) = b"
},
{
    "assertion": "Vertex ( CONICSECTION: k ) equals POINT: m",
    "id": 3419,
    "declarations": "k: CONICSECTION; m: POINT",
    "facts": "Vertex(k) = m"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( LINESEGMENT: p ) ) equals Quadrant ( POINT: D )",
    "id": 3420,
    "declarations": "p: LINESEGMENT; D: POINT",
    "facts": "Inclination(PerpendicularBisector(p)) = Quadrant(D)"
},
{
    "assertion": "Intercept ( LINE: Z, SymmetryAxis ( CONICSECTION: v ) ) equals Length ( LINESEGMENT: U )",
    "id": 3421,
    "declarations": "Z: LINE; v: CONICSECTION; U: LINESEGMENT",
    "facts": "Intercept(Z, SymmetryAxis(v)) = Length(U)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -25, DEGREESTR: degree )",
    "id": 3422,
    "declarations": "-25: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-25, degree) = None"
},
{
    "assertion": "UpperFocus ( CONICSECTION: u ) equals RightFocus ( CONICSECTION: R )",
    "id": 3423,
    "declarations": "u: CONICSECTION; R: CONICSECTION",
    "facts": "UpperFocus(u) = RightFocus(R)"
},
{
    "assertion": "Coordinate ( RightFocus ( CONICSECTION: p ) ) equals ( Eccentricity ( CONICSECTION: n ), NUMBER: 40 )",
    "id": 3424,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "TangentPoint ( TangentOnPoint ( UpperVertex ( CONICSECTION: j ), CURVE: U ), CIRCLE: l ) equals Projection ( POINT: t, LINE: p )",
    "id": 3425,
    "declarations": "j: CONICSECTION; U: CURVE; l: CIRCLE; t: POINT; p: LINE",
    "facts": "TangentPoint(TangentOnPoint(UpperVertex(j), U), l) = Projection(t, p)"
},
{
    "assertion": "InterReciprocal ( Length ( LINESEGMENT: I ) ) equals Radius ( CIRCLE: i )",
    "id": 3426,
    "declarations": "I: LINESEGMENT; i: CIRCLE",
    "facts": "InterReciprocal(Length(I)) = Radius(i)"
},
{
    "assertion": "Distance ( LeftFocus ( CONICSECTION: M ), POINT: O ) equals XCoordinate ( LowerFocus ( CONICSECTION: W ) )",
    "id": 3427,
    "declarations": "M: CONICSECTION; O: POINT; W: CONICSECTION",
    "facts": "Distance(LeftFocus(M), O) = XCoordinate(LowerFocus(W))"
},
{
    "assertion": "LocusEquation ( POINT: S ) equals EXPRESSION: x^2*space+*space4*y^2*space=*space16",
    "id": 3428,
    "declarations": "S: POINT; x^2*space+*space4*y^2*space=*space16: EXPRESSION",
    "facts": "LocusEquation(S) = x^2*space+*space4*y^2*space=*space16"
},
{
    "assertion": "Between ( Orthocenter ( TRIANGLE: G ), RightVertex ( CONICSECTION: O ), POINT: U ) equals BOOL: True",
    "id": 3429,
    "declarations": "G: TRIANGLE; O: CONICSECTION; U: POINT; True: BOOL",
    "facts": "Between(Orthocenter(G), RightVertex(O), U) = True"
},
{
    "assertion": "LeftPart ( HYPERBOLA: C ) equals CURVE: Y",
    "id": 3430,
    "declarations": "C: HYPERBOLA; Y: CURVE",
    "facts": "LeftPart(C) = Y"
},
{
    "assertion": "Endpoint ( LINESEGMENT: v ) equals RightFocus ( CONICSECTION: F )",
    "id": 3431,
    "declarations": "v: LINESEGMENT; F: CONICSECTION",
    "facts": "Endpoint(v) = RightFocus(F)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: K, TRIANGLE: V ) equals BOOL: True",
    "id": 3432,
    "declarations": "K: CIRCLE; V: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(K, V) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: c ) equals POINT: c",
    "id": 3433,
    "declarations": "c: CONICSECTION; c: POINT",
    "facts": "LeftFocus(c) = c"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: J ) equals OverlappingLine ( LINESEGMENT: X )",
    "id": 3434,
    "declarations": "J: CONICSECTION; X: LINESEGMENT",
    "facts": "RightDirectrix(J) = OverlappingLine(X)"
},
{
    "assertion": "IsDiameter ( MajorAxis ( ELLIPSE: O ), CIRCLE: B ) equals BOOL: True",
    "id": 3435,
    "declarations": "O: ELLIPSE; B: CIRCLE; True: BOOL",
    "facts": "IsDiameter(MajorAxis(O), B) = True"
},
{
    "assertion": "AngleOf ( RightVertex ( CONICSECTION: b ), LowerVertex ( CONICSECTION: l ), POINT: B ) equals AngleOf ( RightFocus ( CONICSECTION: m ), POINT: H, Circumcenter ( TRIANGLE: a ) )",
    "id": 3436,
    "declarations": "b: CONICSECTION; l: CONICSECTION; B: POINT; m: CONICSECTION; H: POINT; a: TRIANGLE",
    "facts": "AngleOf(RightVertex(b), LowerVertex(l), B) = AngleOf(RightFocus(m), H, Circumcenter(a))"
},
{
    "assertion": "NumIntersection ( RightPart ( HYPERBOLA: W ), CURVE: Y ) equals NUMBER: 71",
    "id": 3437,
    "declarations": "W: HYPERBOLA; Y: CURVE; 71: NUMBER",
    "facts": "NumIntersection(RightPart(W), Y) = 71"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: J, CONICSECTION: A ) equals BOOL: False",
    "id": 3438,
    "declarations": "J: LINESEGMENT; A: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(J, A) = False"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: j ) equals Intercept ( LINE: o, AXIS: xAxis )",
    "id": 3439,
    "declarations": "j: CONICSECTION; o: LINE; xAxis: AXIS",
    "facts": "HalfFocalLength(j) = Intercept(o, xAxis)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: x ) equals TangentOnPoint ( UpperFocus ( CONICSECTION: B ), CURVE: J )",
    "id": 3440,
    "declarations": "x: HYPERBOLA; B: CONICSECTION; J: CURVE",
    "facts": "Asymptote(x) = TangentOnPoint(UpperFocus(B), J)"
},
{
    "assertion": "FootPoint ( LINE: o, RightDirectrix ( CONICSECTION: h ) ) equals LowerVertex ( CONICSECTION: H )",
    "id": 3441,
    "declarations": "o: LINE; h: CONICSECTION; H: CONICSECTION",
    "facts": "FootPoint(o, RightDirectrix(h)) = LowerVertex(H)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: e ) equals LINESEGMENT: O",
    "id": 3442,
    "declarations": "e: ELLIPSE; O: LINESEGMENT",
    "facts": "MajorAxis(e) = O"
},
{
    "assertion": "LineSegmentOf ( RightVertex ( CONICSECTION: Y ), LowerVertex ( CONICSECTION: W ) ) equals LINESEGMENT: C",
    "id": 3443,
    "declarations": "Y: CONICSECTION; W: CONICSECTION; C: LINESEGMENT",
    "facts": "LineSegmentOf(RightVertex(Y), LowerVertex(W)) = C"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: x, TRIANGLE: l ) equals BOOL: True",
    "id": 3444,
    "declarations": "x: CIRCLE; l: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(x, l) = True"
},
{
    "assertion": "Slope ( LINE: i ) equals NUMBER: 40",
    "id": 3445,
    "declarations": "i: LINE; 40: NUMBER",
    "facts": "Slope(i) = 40"
},
{
    "assertion": "And ( Directrix ( CONICSECTION: J ) equals LINE: i, Distance ( POINT: v, Circumcenter ( TRIANGLE: H ) ) equals NUMBER: -76 ) equals BOOL: True",
    "id": 3446,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: b, TRIANGLE: l ) equals BOOL: False",
    "id": 3447,
    "declarations": "b: CIRCLE; l: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(b, l) = False"
},
{
    "assertion": "FocalLength ( CONICSECTION: J ) equals NUMBER: 96",
    "id": 3448,
    "declarations": "J: CONICSECTION; 96: NUMBER",
    "facts": "FocalLength(J) = 96"
},
{
    "assertion": "IsParallel ( RightDirectrix ( CONICSECTION: b ), LINE: H ) equals BOOL: True",
    "id": 3449,
    "declarations": "b: CONICSECTION; H: LINE; True: BOOL",
    "facts": "IsParallel(RightDirectrix(b), H) = True"
},
{
    "assertion": "MidPoint ( LINESEGMENT: Y ) equals Circumcenter ( TRIANGLE: z )",
    "id": 3450,
    "declarations": "Y: LINESEGMENT; z: TRIANGLE",
    "facts": "MidPoint(Y) = Circumcenter(z)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: a ) equals POINT: v",
    "id": 3451,
    "declarations": "a: TRIANGLE; v: POINT",
    "facts": "Orthocenter(a) = v"
},
{
    "assertion": "MinorAxis ( ELLIPSE: A ) equals LINESEGMENT: f",
    "id": 3452,
    "declarations": "A: ELLIPSE; f: LINESEGMENT",
    "facts": "MinorAxis(A) = f"
},
{
    "assertion": "RightPart ( HYPERBOLA: b ) equals LeftPart ( HYPERBOLA: V )",
    "id": 3453,
    "declarations": "b: HYPERBOLA; V: HYPERBOLA",
    "facts": "RightPart(b) = LeftPart(V)"
},
{
    "assertion": "Slope ( LINE: m ) equals Quadrant ( POINT: q )",
    "id": 3454,
    "declarations": "m: LINE; q: POINT",
    "facts": "Slope(m) = Quadrant(q)"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: p ) ) equals LINE: l",
    "id": 3455,
    "declarations": "p: ELLIPSE; l: LINE",
    "facts": "OverlappingLine(MinorAxis(p)) = l"
},
{
    "assertion": "DotProduct ( VECTOR: R, VECTOR: T ) equals NUMBER: 18",
    "id": 3456,
    "declarations": "R: VECTOR; T: VECTOR; 18: NUMBER",
    "facts": "DotProduct(R, T) = 18"
},
{
    "assertion": "Projection ( Incenter ( TRIANGLE: o ), RightDirectrix ( CONICSECTION: U ) ) equals POINT: d",
    "id": 3457,
    "declarations": "o: TRIANGLE; U: CONICSECTION; d: POINT",
    "facts": "Projection(Incenter(o), RightDirectrix(U)) = d"
},
{
    "assertion": "Radius ( CIRCLE: N ) equals NUMBER: -100",
    "id": 3458,
    "declarations": "N: CIRCLE; -100: NUMBER",
    "facts": "Radius(N) = -100"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: a, CIRCLE: s ) equals BOOL: True",
    "id": 3459,
    "declarations": "a: LINESEGMENT; s: CIRCLE; True: BOOL",
    "facts": "IsDiameter(a, s) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: P ) equals Projection ( POINT: W, LINE: a )",
    "id": 3460,
    "declarations": "P: TRIANGLE; W: POINT; a: LINE",
    "facts": "Circumcenter(P) = Projection(W, a)"
},
{
    "assertion": "Quadrant ( POINT: q ) equals Quadrant ( MidPoint ( LINESEGMENT: u ) )",
    "id": 3461,
    "declarations": "q: POINT; u: LINESEGMENT",
    "facts": "Quadrant(q) = Quadrant(MidPoint(u))"
},
{
    "assertion": "Projection ( LowerFocus ( CONICSECTION: M ), LINE: v ) equals Incenter ( TRIANGLE: z )",
    "id": 3462,
    "declarations": "M: CONICSECTION; v: LINE; z: TRIANGLE",
    "facts": "Projection(LowerFocus(M), v) = Incenter(z)"
},
{
    "assertion": "FocalLength ( CONICSECTION: l ) equals Min ( InterReciprocal ( HalfFocalLength ( CONICSECTION: U ) ) )",
    "id": 3463,
    "declarations": "l: CONICSECTION; U: CONICSECTION",
    "facts": "FocalLength(l) = Min(InterReciprocal(HalfFocalLength(U)))"
},
{
    "assertion": "Max ( Perimeter ( CONICSECTION: Z ) ) equals Eccentricity ( CONICSECTION: k )",
    "id": 3464,
    "declarations": "Z: CONICSECTION; k: CONICSECTION",
    "facts": "Max(Perimeter(Z)) = Eccentricity(k)"
},
{
    "assertion": "Diameter ( CIRCLE: Y ) equals NUMBER: 63",
    "id": 3465,
    "declarations": "Y: CIRCLE; 63: NUMBER",
    "facts": "Diameter(Y) = 63"
},
{
    "assertion": "Expression ( CURVE: I ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 3466,
    "declarations": "I: CURVE; y*space=*spacesin(x): EXPRESSION",
    "facts": "Expression(I) = y*space=*spacesin(x)"
},
{
    "assertion": "XCoordinate ( POINT: g ) equals NUMBER: 92",
    "id": 3467,
    "declarations": "g: POINT; 92: NUMBER",
    "facts": "XCoordinate(g) = 92"
},
{
    "assertion": "Negation ( RightPart ( HYPERBOLA: E ) equals RightPart ( HYPERBOLA: k ) ) equals BOOL: True",
    "id": 3468,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftFocus ( CONICSECTION: D ) equals UpperVertex ( CONICSECTION: P )",
    "id": 3469,
    "declarations": "D: CONICSECTION; P: CONICSECTION",
    "facts": "LeftFocus(D) = UpperVertex(P)"
},
{
    "assertion": "lg ( FocalLength ( CONICSECTION: V ) ) equals lg ( Inclination ( LINE: I ) )",
    "id": 3470,
    "declarations": "V: CONICSECTION; I: LINE",
    "facts": "lg(FocalLength(V)) = lg(Inclination(I))"
},
{
    "assertion": "Length ( LINESEGMENT: m ) equals Quadrant ( POINT: J )",
    "id": 3471,
    "declarations": "m: LINESEGMENT; J: POINT",
    "facts": "Length(m) = Quadrant(J)"
},
{
    "assertion": "LineSegmentOf ( Incenter ( TRIANGLE: n ), Center ( CONICSECTION: s ) ) equals LINESEGMENT: g",
    "id": 3472,
    "declarations": "n: TRIANGLE; s: CONICSECTION; g: LINESEGMENT",
    "facts": "LineSegmentOf(Incenter(n), Center(s)) = g"
},
{
    "assertion": "Orthocenter ( TRIANGLE: K ) equals LeftVertex ( CONICSECTION: b )",
    "id": 3473,
    "declarations": "K: TRIANGLE; b: CONICSECTION",
    "facts": "Orthocenter(K) = LeftVertex(b)"
},
{
    "assertion": "FocalLength ( CONICSECTION: R ) equals Area ( CONICSECTION: m )",
    "id": 3474,
    "declarations": "R: CONICSECTION; m: CONICSECTION",
    "facts": "FocalLength(R) = Area(m)"
},
{
    "assertion": "lg ( HalfFocalLength ( CONICSECTION: j ) ) equals YCoordinate ( POINT: d )",
    "id": 3475,
    "declarations": "j: CONICSECTION; d: POINT",
    "facts": "lg(HalfFocalLength(j)) = YCoordinate(d)"
},
{
    "assertion": "Vertex ( CONICSECTION: e ) equals LowerVertex ( CONICSECTION: F )",
    "id": 3476,
    "declarations": "e: CONICSECTION; F: CONICSECTION",
    "facts": "Vertex(e) = LowerVertex(F)"
},
{
    "assertion": "Radius ( CIRCLE: Z ) equals NUMBER: 70",
    "id": 3477,
    "declarations": "Z: CIRCLE; 70: NUMBER",
    "facts": "Radius(Z) = 70"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: j, TRIANGLE: K ) equals BOOL: True",
    "id": 3478,
    "declarations": "j: CIRCLE; K: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(j, K) = True"
},
{
    "assertion": "Quadrant ( POINT: B ) equals Distance ( POINT: m, POINT: t )",
    "id": 3479,
    "declarations": "B: POINT; m: POINT; t: POINT",
    "facts": "Quadrant(B) = Distance(m, t)"
},
{
    "assertion": "TangentPoint ( LINE: g, CIRCLE: M ) equals LeftVertex ( CONICSECTION: l )",
    "id": 3480,
    "declarations": "g: LINE; M: CIRCLE; l: CONICSECTION",
    "facts": "TangentPoint(g, M) = LeftVertex(l)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: e ) equals LINE: Q",
    "id": 3481,
    "declarations": "e: LINESEGMENT; Q: LINE",
    "facts": "OverlappingLine(e) = Q"
},
{
    "assertion": "Projection ( UpperVertex ( CONICSECTION: U ), OverlappingLine ( LINESEGMENT: c ) ) equals POINT: i",
    "id": 3482,
    "declarations": "U: CONICSECTION; c: LINESEGMENT; i: POINT",
    "facts": "Projection(UpperVertex(U), OverlappingLine(c)) = i"
},
{
    "assertion": "Asymptote ( HYPERBOLA: M ) equals TangentOfPoint ( POINT: M, RightPart ( HYPERBOLA: R ) )",
    "id": 3483,
    "declarations": "M: HYPERBOLA; M: POINT; R: HYPERBOLA",
    "facts": "Asymptote(M) = TangentOfPoint(M, RightPart(R))"
},
{
    "assertion": "Focus ( CONICSECTION: z ) equals POINT: g",
    "id": 3484,
    "declarations": "z: CONICSECTION; g: POINT",
    "facts": "Focus(z) = g"
},
{
    "assertion": "sqrt ( Intercept ( LINE: a, AXIS: yAxis ) ) equals NUMBER: -69",
    "id": 3485,
    "declarations": "a: LINE; yAxis: AXIS; -69: NUMBER",
    "facts": "sqrt(Intercept(a, yAxis)) = -69"
},
{
    "assertion": "CircumCircle ( TRIANGLE: d ) equals CIRCLE: o",
    "id": 3486,
    "declarations": "d: TRIANGLE; o: CIRCLE",
    "facts": "CircumCircle(d) = o"
},
{
    "assertion": "Min ( NUMBER: -44 ) equals Min ( NUMBER: -32 )",
    "id": 3487,
    "declarations": "-44: NUMBER; -32: NUMBER",
    "facts": "Min(-44) = Min(-32)"
},
{
    "assertion": "YCoordinate ( POINT: X ) equals NUMBER: -1",
    "id": 3488,
    "declarations": "X: POINT; -1: NUMBER",
    "facts": "YCoordinate(X) = -1"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: H ) equals AXIS: xAxis",
    "id": 3489,
    "declarations": "H: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(H) = xAxis"
},
{
    "assertion": "Min ( NUMBER: -35 ) equals Perimeter ( CONICSECTION: d )",
    "id": 3490,
    "declarations": "-35: NUMBER; d: CONICSECTION",
    "facts": "Min(-35) = Perimeter(d)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: d ) equals Circumcenter ( TRIANGLE: o )",
    "id": 3491,
    "declarations": "d: TRIANGLE; o: TRIANGLE",
    "facts": "Orthocenter(d) = Circumcenter(o)"
},
{
    "assertion": "Orthocenter ( TriangleOf ( Center ( CONICSECTION: I ), FootPoint ( LINE: x, LINE: T ), POINT: I ) ) equals Incenter ( TRIANGLE: g )",
    "id": 3492,
    "declarations": "I: CONICSECTION; x: LINE; T: LINE; I: POINT; g: TRIANGLE",
    "facts": "Orthocenter(TriangleOf(Center(I), FootPoint(x, T), I)) = Incenter(g)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: x ) equals TangentOfPoint ( FootPoint ( RightDirectrix ( CONICSECTION: A ), LINE: x ), CURVE: d )",
    "id": 3493,
    "declarations": "x: LINESEGMENT; A: CONICSECTION; x: LINE; d: CURVE",
    "facts": "PerpendicularBisector(x) = TangentOfPoint(FootPoint(RightDirectrix(A), x), d)"
},
{
    "assertion": "RightFocus ( CONICSECTION: O ) equals Circumcenter ( TRIANGLE: U )",
    "id": 3494,
    "declarations": "O: CONICSECTION; U: TRIANGLE",
    "facts": "RightFocus(O) = Circumcenter(U)"
},
{
    "assertion": "Max ( YCoordinate ( Incenter ( TRIANGLE: O ) ) ) equals Slope ( LeftDirectrix ( CONICSECTION: Y ) )",
    "id": 3495,
    "declarations": "O: TRIANGLE; Y: CONICSECTION",
    "facts": "Max(YCoordinate(Incenter(O))) = Slope(LeftDirectrix(Y))"
},
{
    "assertion": "RightPart ( HYPERBOLA: h ) equals CURVE: P",
    "id": 3496,
    "declarations": "h: HYPERBOLA; P: CURVE",
    "facts": "RightPart(h) = P"
},
{
    "assertion": "Radius ( CIRCLE: W ) equals Radius ( CIRCLE: W )",
    "id": 3497,
    "declarations": "W: CIRCLE; W: CIRCLE",
    "facts": "Radius(W) = Radius(W)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: j ) equals Incenter ( TRIANGLE: d )",
    "id": 3498,
    "declarations": "j: CONICSECTION; d: TRIANGLE",
    "facts": "UpperFocus(j) = Incenter(d)"
},
{
    "assertion": "Incenter ( TRIANGLE: U ) equals POINT: D",
    "id": 3499,
    "declarations": "U: TRIANGLE; D: POINT",
    "facts": "Incenter(U) = D"
},
{
    "assertion": "UpperFocus ( CONICSECTION: c ) equals RightFocus ( CONICSECTION: G )",
    "id": 3500,
    "declarations": "c: CONICSECTION; G: CONICSECTION",
    "facts": "UpperFocus(c) = RightFocus(G)"
},
{
    "assertion": "RightVertex ( CONICSECTION: A ) equals Center ( CONICSECTION: K )",
    "id": 3501,
    "declarations": "A: CONICSECTION; K: CONICSECTION",
    "facts": "RightVertex(A) = Center(K)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: i ) equals RightVertex ( CONICSECTION: C )",
    "id": 3502,
    "declarations": "i: CONICSECTION; C: CONICSECTION",
    "facts": "UpperVertex(i) = RightVertex(C)"
},
{
    "assertion": "InterceptChord ( LINE: n, CONICSECTION: s ) equals LINESEGMENT: v",
    "id": 3503,
    "declarations": "n: LINE; s: CONICSECTION; v: LINESEGMENT",
    "facts": "InterceptChord(n, s) = v"
},
{
    "assertion": "Incenter ( TRIANGLE: f ) equals RightVertex ( CONICSECTION: b )",
    "id": 3504,
    "declarations": "f: TRIANGLE; b: CONICSECTION",
    "facts": "Incenter(f) = RightVertex(b)"
},
{
    "assertion": "AngleOf ( LowerFocus ( CONICSECTION: g ), Circumcenter ( TRIANGLE: P ), POINT: V ) equals ApplyUnit ( NUMBER: 51, DEGREESTR: degree )",
    "id": 3505,
    "declarations": "g: CONICSECTION; P: TRIANGLE; V: POINT; 51: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(LowerFocus(g), Circumcenter(P), V) = ApplyUnit(51, degree)"
},
{
    "assertion": "Vertex ( CONICSECTION: Q ) equals MidPoint ( LINESEGMENT: t )",
    "id": 3506,
    "declarations": "Q: CONICSECTION; t: LINESEGMENT",
    "facts": "Vertex(Q) = MidPoint(t)"
},
{
    "assertion": "RealAxis ( ELLIPSE: u ) equals LINESEGMENT: X",
    "id": 3507,
    "declarations": "u: ELLIPSE; X: LINESEGMENT",
    "facts": "RealAxis(u) = X"
},
{
    "assertion": "Intercept ( LINE: P, AXIS: yAxis ) equals Area ( CONICSECTION: p )",
    "id": 3508,
    "declarations": "P: LINE; yAxis: AXIS; p: CONICSECTION",
    "facts": "Intercept(P, yAxis) = Area(p)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: h ) equals LINE: s",
    "id": 3509,
    "declarations": "h: LINESEGMENT; s: LINE",
    "facts": "OverlappingLine(h) = s"
},
{
    "assertion": "Min ( Area ( CONICSECTION: Y ) ) equals Distance ( POINT: K, POINT: n )",
    "id": 3510,
    "declarations": "Y: CONICSECTION; K: POINT; n: POINT",
    "facts": "Min(Area(Y)) = Distance(K, n)"
},
{
    "assertion": "FocalLength ( CONICSECTION: n ) equals sqrt ( NUMBER: -68 )",
    "id": 3511,
    "declarations": "n: CONICSECTION; -68: NUMBER",
    "facts": "FocalLength(n) = sqrt(-68)"
},
{
    "assertion": "Negation ( Orthocenter ( TRIANGLE: t ) equals POINT: y ) equals BOOL: False",
    "id": 3512,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Slope ( LINE: x ) equals lg ( NUMBER: -72 )",
    "id": 3513,
    "declarations": "x: LINE; -72: NUMBER",
    "facts": "Slope(x) = lg(-72)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: g, CONICSECTION: G ) equals BOOL: True",
    "id": 3514,
    "declarations": "g: LINESEGMENT; G: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(g, G) = True"
},
{
    "assertion": "lg ( Perimeter ( CONICSECTION: V ) ) equals YCoordinate ( POINT: V )",
    "id": 3515,
    "declarations": "V: CONICSECTION; V: POINT",
    "facts": "lg(Perimeter(V)) = YCoordinate(V)"
},
{
    "assertion": "Max ( Intercept ( LINE: W, AXIS: xAxis ) ) equals Perimeter ( CONICSECTION: r )",
    "id": 3516,
    "declarations": "W: LINE; xAxis: AXIS; r: CONICSECTION",
    "facts": "Max(Intercept(W, xAxis)) = Perimeter(r)"
},
{
    "assertion": "VectorOf ( POINT: V, UpperVertex ( CONICSECTION: c ) ) equals VectorOf ( POINT: F, POINT: J )",
    "id": 3517,
    "declarations": "V: POINT; c: CONICSECTION; F: POINT; J: POINT",
    "facts": "VectorOf(V, UpperVertex(c)) = VectorOf(F, J)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: W ) equals Incenter ( TRIANGLE: Z )",
    "id": 3518,
    "declarations": "W: LINESEGMENT; Z: TRIANGLE",
    "facts": "MidPoint(W) = Incenter(Z)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: a ) equals PerpendicularBisector ( LINESEGMENT: O )",
    "id": 3519,
    "declarations": "a: CONICSECTION; O: LINESEGMENT",
    "facts": "RightDirectrix(a) = PerpendicularBisector(O)"
},
{
    "assertion": "Inclination ( TangentOnPoint ( POINT: k, CURVE: Q ) ) equals InterReciprocal ( Radius ( CIRCLE: C ) )",
    "id": 3520,
    "declarations": "k: POINT; Q: CURVE; C: CIRCLE",
    "facts": "Inclination(TangentOnPoint(k, Q)) = InterReciprocal(Radius(C))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: n ) equals POINT: C",
    "id": 3521,
    "declarations": "n: CONICSECTION; C: POINT",
    "facts": "LeftVertex(n) = C"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: n ) equals LINE: l",
    "id": 3522,
    "declarations": "n: CONICSECTION; l: LINE",
    "facts": "LeftDirectrix(n) = l"
},
{
    "assertion": "LeftFocus ( CONICSECTION: j ) equals Circumcenter ( TRIANGLE: X )",
    "id": 3523,
    "declarations": "j: CONICSECTION; X: TRIANGLE",
    "facts": "LeftFocus(j) = Circumcenter(X)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: r ) equals Length ( LINESEGMENT: C )",
    "id": 3524,
    "declarations": "r: CONICSECTION; C: LINESEGMENT",
    "facts": "Eccentricity(r) = Length(C)"
},
{
    "assertion": "Min ( Area ( CONICSECTION: a ) ) equals NUMBER: 2",
    "id": 3525,
    "declarations": "a: CONICSECTION; 2: NUMBER",
    "facts": "Min(Area(a)) = 2"
},
{
    "assertion": "VectorOf ( POINT: E, POINT: B ) equals VECTOR: Y",
    "id": 3526,
    "declarations": "E: POINT; B: POINT; Y: VECTOR",
    "facts": "VectorOf(E, B) = Y"
},
{
    "assertion": "TangentPoint ( LINE: x, CircumCircle ( TRIANGLE: I ) ) equals POINT: W",
    "id": 3527,
    "declarations": "x: LINE; I: TRIANGLE; W: POINT",
    "facts": "TangentPoint(x, CircumCircle(I)) = W"
},
{
    "assertion": "XCoordinate ( FootPoint ( LINE: n, TangentOfPoint ( Center ( CONICSECTION: W ), CURVE: g ) ) ) equals NumIntersection ( LeftPart ( HYPERBOLA: h ), LeftPart ( HYPERBOLA: e ) )",
    "id": 3528,
    "declarations": "n: LINE; W: CONICSECTION; g: CURVE; h: HYPERBOLA; e: HYPERBOLA",
    "facts": "XCoordinate(FootPoint(n, TangentOfPoint(Center(W), g))) = NumIntersection(LeftPart(h), LeftPart(e))"
},
{
    "assertion": "Locus ( RightVertex ( CONICSECTION: L ) ) equals Locus ( POINT: w )",
    "id": 3529,
    "declarations": "L: CONICSECTION; w: POINT",
    "facts": "Locus(RightVertex(L)) = Locus(w)"
},
{
    "assertion": "PerpendicularBisector ( RealAxis ( ELLIPSE: f ) ) equals PerpendicularBisector ( LINESEGMENT: r )",
    "id": 3530,
    "declarations": "f: ELLIPSE; r: LINESEGMENT",
    "facts": "PerpendicularBisector(RealAxis(f)) = PerpendicularBisector(r)"
},
{
    "assertion": "lg ( Diameter ( CIRCLE: c ) ) equals NUMBER: -79",
    "id": 3531,
    "declarations": "c: CIRCLE; -79: NUMBER",
    "facts": "lg(Diameter(c)) = -79"
},
{
    "assertion": "InterReciprocal ( FocalLength ( CONICSECTION: i ) ) equals NUMBER: 78",
    "id": 3532,
    "declarations": "i: CONICSECTION; 78: NUMBER",
    "facts": "InterReciprocal(FocalLength(i)) = 78"
},
{
    "assertion": "Radius ( CIRCLE: l ) equals NUMBER: 71",
    "id": 3533,
    "declarations": "l: CIRCLE; 71: NUMBER",
    "facts": "Radius(l) = 71"
},
{
    "assertion": "RightVertex ( CONICSECTION: r ) equals RightFocus ( CONICSECTION: g )",
    "id": 3534,
    "declarations": "r: CONICSECTION; g: CONICSECTION",
    "facts": "RightVertex(r) = RightFocus(g)"
},
{
    "assertion": "TangentPoint ( TangentOnPoint ( LeftFocus ( CONICSECTION: k ), CURVE: g ), CIRCLE: G ) equals POINT: h",
    "id": 3535,
    "declarations": "k: CONICSECTION; g: CURVE; G: CIRCLE; h: POINT",
    "facts": "TangentPoint(TangentOnPoint(LeftFocus(k), g), G) = h"
},
{
    "assertion": "TangentOnPoint ( POINT: T, Locus ( Circumcenter ( TRIANGLE: k ) ) ) equals LINE: h",
    "id": 3536,
    "declarations": "T: POINT; k: TRIANGLE; h: LINE",
    "facts": "TangentOnPoint(T, Locus(Circumcenter(k))) = h"
},
{
    "assertion": "Slope ( LINE: L ) equals Quadrant ( UpperFocus ( CONICSECTION: N ) )",
    "id": 3537,
    "declarations": "L: LINE; N: CONICSECTION",
    "facts": "Slope(L) = Quadrant(UpperFocus(N))"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: b, TRIANGLE: E ) equals BOOL: True",
    "id": 3538,
    "declarations": "b: CIRCLE; E: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(b, E) = True"
},
{
    "assertion": "Distance ( Center ( CONICSECTION: b ), LowerFocus ( CONICSECTION: I ) ) equals sqrt ( Perimeter ( CONICSECTION: q ) )",
    "id": 3539,
    "declarations": "b: CONICSECTION; I: CONICSECTION; q: CONICSECTION",
    "facts": "Distance(Center(b), LowerFocus(I)) = sqrt(Perimeter(q))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: d ) equals RightDirectrix ( CONICSECTION: g )",
    "id": 3540,
    "declarations": "d: CONICSECTION; g: CONICSECTION",
    "facts": "RightDirectrix(d) = RightDirectrix(g)"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: E ) ) equals LINE: F",
    "id": 3541,
    "declarations": "E: ELLIPSE; F: LINE",
    "facts": "PerpendicularBisector(ImaginaryAxis(E)) = F"
},
{
    "assertion": "Eccentricity ( CONICSECTION: u ) equals NUMBER: 78",
    "id": 3542,
    "declarations": "u: CONICSECTION; 78: NUMBER",
    "facts": "Eccentricity(u) = 78"
},
{
    "assertion": "MajorAxis ( ELLIPSE: S ) equals MinorAxis ( ELLIPSE: s )",
    "id": 3543,
    "declarations": "S: ELLIPSE; s: ELLIPSE",
    "facts": "MajorAxis(S) = MinorAxis(s)"
},
{
    "assertion": "LocusEquation ( POINT: c ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 3544,
    "declarations": "c: POINT; y*space=*spacesin(x): EXPRESSION",
    "facts": "LocusEquation(c) = y*space=*spacesin(x)"
},
{
    "assertion": "Incenter ( TRIANGLE: t ) equals Orthocenter ( TRIANGLE: I )",
    "id": 3545,
    "declarations": "t: TRIANGLE; I: TRIANGLE",
    "facts": "Incenter(t) = Orthocenter(I)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: n ) equals POINT: G",
    "id": 3546,
    "declarations": "n: CONICSECTION; G: POINT",
    "facts": "LeftVertex(n) = G"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: A ) equals AXIS: yAxis",
    "id": 3547,
    "declarations": "A: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(A) = yAxis"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: N ) ) equals NUMBER: -55",
    "id": 3548,
    "declarations": "N: ELLIPSE; -55: NUMBER",
    "facts": "Abs(MinorAxis(N)) = -55"
},
{
    "assertion": "Projection ( POINT: j, LINE: A ) equals UpperFocus ( CONICSECTION: P )",
    "id": 3549,
    "declarations": "j: POINT; A: LINE; P: CONICSECTION",
    "facts": "Projection(j, A) = UpperFocus(P)"
},
{
    "assertion": "Length ( ImaginaryAxis ( ELLIPSE: o ) ) equals NUMBER: -13",
    "id": 3550,
    "declarations": "o: ELLIPSE; -13: NUMBER",
    "facts": "Length(ImaginaryAxis(o)) = -13"
},
{
    "assertion": "Eccentricity ( CONICSECTION: r ) equals Abs ( LINESEGMENT: K )",
    "id": 3551,
    "declarations": "r: CONICSECTION; K: LINESEGMENT",
    "facts": "Eccentricity(r) = Abs(K)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: j ) equals Distance ( FootPoint ( PerpendicularBisector ( LINESEGMENT: c ), LeftDirectrix ( CONICSECTION: Z ) ), LowerFocus ( CONICSECTION: H ) )",
    "id": 3552,
    "declarations": "j: CONICSECTION; c: LINESEGMENT; Z: CONICSECTION; H: CONICSECTION",
    "facts": "HalfFocalLength(j) = Distance(FootPoint(PerpendicularBisector(c), LeftDirectrix(Z)), LowerFocus(H))"
},
{
    "assertion": "IsTangent ( LINE: k, CONICSECTION: I ) equals BOOL: False",
    "id": 3553,
    "declarations": "k: LINE; I: CONICSECTION; False: BOOL",
    "facts": "IsTangent(k, I) = False"
},
{
    "assertion": "Locus ( UpperFocus ( CONICSECTION: h ) ) equals CURVE: q",
    "id": 3554,
    "declarations": "h: CONICSECTION; q: CURVE",
    "facts": "Locus(UpperFocus(h)) = q"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: i ) equals AXIS: xAxis",
    "id": 3555,
    "declarations": "i: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(i) = xAxis"
},
{
    "assertion": "UpperVertex ( CONICSECTION: q ) equals UpperFocus ( CONICSECTION: l )",
    "id": 3556,
    "declarations": "q: CONICSECTION; l: CONICSECTION",
    "facts": "UpperVertex(q) = UpperFocus(l)"
},
{
    "assertion": "Radius ( CIRCLE: u ) equals NUMBER: -13",
    "id": 3557,
    "declarations": "u: CIRCLE; -13: NUMBER",
    "facts": "Radius(u) = -13"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: X ) equals LINE: d",
    "id": 3558,
    "declarations": "X: CONICSECTION; d: LINE",
    "facts": "RightDirectrix(X) = d"
},
{
    "assertion": "ApplyUnit ( NUMBER: -31, DEGREESTR: degree )",
    "id": 3559,
    "declarations": "-31: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-31, degree) = None"
},
{
    "assertion": "Area ( CONICSECTION: D ) equals sqrt ( Radius ( CIRCLE: G ) )",
    "id": 3560,
    "declarations": "D: CONICSECTION; G: CIRCLE",
    "facts": "Area(D) = sqrt(Radius(G))"
},
{
    "assertion": "Perimeter ( CONICSECTION: t ) equals InterReciprocal ( XCoordinate ( LeftVertex ( CONICSECTION: N ) ) )",
    "id": 3561,
    "declarations": "t: CONICSECTION; N: CONICSECTION",
    "facts": "Perimeter(t) = InterReciprocal(XCoordinate(LeftVertex(N)))"
},
{
    "assertion": "TangentOfPoint ( Orthocenter ( TRIANGLE: l ), CURVE: R ) equals PerpendicularBisector ( MinorAxis ( ELLIPSE: D ) )",
    "id": 3562,
    "declarations": "l: TRIANGLE; R: CURVE; D: ELLIPSE",
    "facts": "TangentOfPoint(Orthocenter(l), R) = PerpendicularBisector(MinorAxis(D))"
},
{
    "assertion": "Focus ( CONICSECTION: d ) equals LeftFocus ( CONICSECTION: q )",
    "id": 3563,
    "declarations": "d: CONICSECTION; q: CONICSECTION",
    "facts": "Focus(d) = LeftFocus(q)"
},
{
    "assertion": "Area ( CONICSECTION: c ) equals Perimeter ( CONICSECTION: W )",
    "id": 3564,
    "declarations": "c: CONICSECTION; W: CONICSECTION",
    "facts": "Area(c) = Perimeter(W)"
},
{
    "assertion": "TangentOnPoint ( POINT: i, CURVE: B ) equals LINE: w",
    "id": 3565,
    "declarations": "i: POINT; B: CURVE; w: LINE",
    "facts": "TangentOnPoint(i, B) = w"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: H ) equals OverlappingLine ( LINESEGMENT: s )",
    "id": 3566,
    "declarations": "H: CONICSECTION; s: LINESEGMENT",
    "facts": "LeftDirectrix(H) = OverlappingLine(s)"
},
{
    "assertion": "lg ( Radius ( CIRCLE: A ) ) equals NUMBER: -25",
    "id": 3567,
    "declarations": "A: CIRCLE; -25: NUMBER",
    "facts": "lg(Radius(A)) = -25"
},
{
    "assertion": "TangentOfPoint ( FootPoint ( LINE: C, LINE: q ), CURVE: I ) equals LINE: W",
    "id": 3568,
    "declarations": "C: LINE; q: LINE; I: CURVE; W: LINE",
    "facts": "TangentOfPoint(FootPoint(C, q), I) = W"
},
{
    "assertion": "Perimeter ( CONICSECTION: q ) equals Abs ( LINESEGMENT: m )",
    "id": 3569,
    "declarations": "q: CONICSECTION; m: LINESEGMENT",
    "facts": "Perimeter(q) = Abs(m)"
},
{
    "assertion": "Vertex ( CONICSECTION: Z ) equals POINT: o",
    "id": 3570,
    "declarations": "Z: CONICSECTION; o: POINT",
    "facts": "Vertex(Z) = o"
},
{
    "assertion": "sqrt ( Min ( FocalLength ( CONICSECTION: S ) ) ) equals NUMBER: 31",
    "id": 3571,
    "declarations": "S: CONICSECTION; 31: NUMBER",
    "facts": "sqrt(Min(FocalLength(S))) = 31"
},
{
    "assertion": "UpperVertex ( CONICSECTION: m ) equals LowerFocus ( CONICSECTION: f )",
    "id": 3572,
    "declarations": "m: CONICSECTION; f: CONICSECTION",
    "facts": "UpperVertex(m) = LowerFocus(f)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: r ) equals POINT: C",
    "id": 3573,
    "declarations": "r: CONICSECTION; C: POINT",
    "facts": "LeftVertex(r) = C"
},
{
    "assertion": "LeftVertex ( CONICSECTION: j ) equals POINT: e",
    "id": 3574,
    "declarations": "j: CONICSECTION; e: POINT",
    "facts": "LeftVertex(j) = e"
},
{
    "assertion": "Intersection ( CURVE: M, CURVE: O ) equals UpperFocus ( CONICSECTION: d )",
    "id": 3575,
    "declarations": "M: CURVE; O: CURVE; d: CONICSECTION",
    "facts": "Intersection(M, O) = UpperFocus(d)"
},
{
    "assertion": "Incenter ( TRIANGLE: k ) equals POINT: u",
    "id": 3576,
    "declarations": "k: TRIANGLE; u: POINT",
    "facts": "Incenter(k) = u"
},
{
    "assertion": "XCoordinate ( POINT: W ) equals NUMBER: -59",
    "id": 3577,
    "declarations": "W: POINT; -59: NUMBER",
    "facts": "XCoordinate(W) = -59"
},
{
    "assertion": "FocalLength ( CONICSECTION: H ) equals NUMBER: -49",
    "id": 3578,
    "declarations": "H: CONICSECTION; -49: NUMBER",
    "facts": "FocalLength(H) = -49"
},
{
    "assertion": "FocalLength ( CONICSECTION: Y ) equals Inclination ( LINE: o )",
    "id": 3579,
    "declarations": "Y: CONICSECTION; o: LINE",
    "facts": "FocalLength(Y) = Inclination(o)"
},
{
    "assertion": "Abs ( LINESEGMENT: Q ) equals NUMBER: 25",
    "id": 3580,
    "declarations": "Q: LINESEGMENT; 25: NUMBER",
    "facts": "Abs(Q) = 25"
},
{
    "assertion": "Eccentricity ( CONICSECTION: s ) equals Perimeter ( CONICSECTION: O )",
    "id": 3581,
    "declarations": "s: CONICSECTION; O: CONICSECTION",
    "facts": "Eccentricity(s) = Perimeter(O)"
},
{
    "assertion": "Between ( POINT: S, POINT: W, LeftVertex ( CONICSECTION: o ) ) equals BOOL: False",
    "id": 3582,
    "declarations": "S: POINT; W: POINT; o: CONICSECTION; False: BOOL",
    "facts": "Between(S, W, LeftVertex(o)) = False"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: v ) equals AXIS: xAxis",
    "id": 3583,
    "declarations": "v: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(v) = xAxis"
},
{
    "assertion": "InterReciprocal ( InterReciprocal ( Abs ( LINESEGMENT: z ) ) ) equals Length ( LINESEGMENT: Y )",
    "id": 3584,
    "declarations": "z: LINESEGMENT; Y: LINESEGMENT",
    "facts": "InterReciprocal(InterReciprocal(Abs(z))) = Length(Y)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: s ) equals LINE: O",
    "id": 3585,
    "declarations": "s: LINESEGMENT; O: LINE",
    "facts": "PerpendicularBisector(s) = O"
},
{
    "assertion": "Directrix ( CONICSECTION: J ) equals LINE: v",
    "id": 3586,
    "declarations": "J: CONICSECTION; v: LINE",
    "facts": "Directrix(J) = v"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: j, TRIANGLE: T ) equals BOOL: True",
    "id": 3587,
    "declarations": "j: CIRCLE; T: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(j, T) = True"
},
{
    "assertion": "FocalLength ( CONICSECTION: C ) equals Length ( LINESEGMENT: Q )",
    "id": 3588,
    "declarations": "C: CONICSECTION; Q: LINESEGMENT",
    "facts": "FocalLength(C) = Length(Q)"
},
{
    "assertion": "Negation ( Asymptote ( HYPERBOLA: i ) equals LeftDirectrix ( CONICSECTION: R ) ) equals BOOL: False",
    "id": 3589,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Intercept ( TangentOnPoint ( POINT: B, CURVE: p ), AXIS: yAxis ) equals InterReciprocal ( Min ( Radius ( CIRCLE: E ) ) )",
    "id": 3590,
    "declarations": "B: POINT; p: CURVE; yAxis: AXIS; E: CIRCLE",
    "facts": "Intercept(TangentOnPoint(B, p), yAxis) = InterReciprocal(Min(Radius(E)))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: d, TRIANGLE: u ) equals BOOL: False",
    "id": 3591,
    "declarations": "d: CIRCLE; u: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(d, u) = False"
},
{
    "assertion": "Eccentricity ( CONICSECTION: r ) equals Radius ( CIRCLE: e )",
    "id": 3592,
    "declarations": "r: CONICSECTION; e: CIRCLE",
    "facts": "Eccentricity(r) = Radius(e)"
},
{
    "assertion": "Locus ( Orthocenter ( TRIANGLE: q ) ) equals CURVE: G",
    "id": 3593,
    "declarations": "q: TRIANGLE; G: CURVE",
    "facts": "Locus(Orthocenter(q)) = G"
},
{
    "assertion": "Negation ( OverlappingLine ( LINESEGMENT: W ) equals LINE: W ) equals BOOL: True",
    "id": 3594,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Abs ( LINESEGMENT: w ) equals Radius ( CIRCLE: E )",
    "id": 3595,
    "declarations": "w: LINESEGMENT; E: CIRCLE",
    "facts": "Abs(w) = Radius(E)"
},
{
    "assertion": "Focus ( CONICSECTION: I ) equals POINT: P",
    "id": 3596,
    "declarations": "I: CONICSECTION; P: POINT",
    "facts": "Focus(I) = P"
},
{
    "assertion": "Directrix ( CONICSECTION: u ) equals TangentOnPoint ( LeftVertex ( CONICSECTION: p ), CURVE: A )",
    "id": 3597,
    "declarations": "u: CONICSECTION; p: CONICSECTION; A: CURVE",
    "facts": "Directrix(u) = TangentOnPoint(LeftVertex(p), A)"
},
{
    "assertion": "Max ( Eccentricity ( CONICSECTION: N ) ) equals Abs ( MajorAxis ( ELLIPSE: a ) )",
    "id": 3598,
    "declarations": "N: CONICSECTION; a: ELLIPSE",
    "facts": "Max(Eccentricity(N)) = Abs(MajorAxis(a))"
},
{
    "assertion": "YCoordinate ( LowerFocus ( CONICSECTION: q ) ) equals XCoordinate ( POINT: h )",
    "id": 3599,
    "declarations": "q: CONICSECTION; h: POINT",
    "facts": "YCoordinate(LowerFocus(q)) = XCoordinate(h)"
},
{
    "assertion": "RightFocus ( CONICSECTION: b ) equals UpperVertex ( CONICSECTION: C )",
    "id": 3600,
    "declarations": "b: CONICSECTION; C: CONICSECTION",
    "facts": "RightFocus(b) = UpperVertex(C)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: r ) equals Incenter ( TRIANGLE: q )",
    "id": 3601,
    "declarations": "r: TRIANGLE; q: TRIANGLE",
    "facts": "Orthocenter(r) = Incenter(q)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: J ) equals LINE: F",
    "id": 3602,
    "declarations": "J: HYPERBOLA; F: LINE",
    "facts": "Asymptote(J) = F"
},
{
    "assertion": "Endpoint ( LINESEGMENT: h ) equals MidPoint ( LINESEGMENT: b )",
    "id": 3603,
    "declarations": "h: LINESEGMENT; b: LINESEGMENT",
    "facts": "Endpoint(h) = MidPoint(b)"
},
{
    "assertion": "IsIntersect ( CURVE: t, CURVE: f ) equals BOOL: True",
    "id": 3604,
    "declarations": "t: CURVE; f: CURVE; True: BOOL",
    "facts": "IsIntersect(t, f) = True"
},
{
    "assertion": "Abs ( LINESEGMENT: h ) equals NUMBER: 11",
    "id": 3605,
    "declarations": "h: LINESEGMENT; 11: NUMBER",
    "facts": "Abs(h) = 11"
},
{
    "assertion": "Vertex ( CONICSECTION: Q ) equals MidPoint ( LINESEGMENT: J )",
    "id": 3606,
    "declarations": "Q: CONICSECTION; J: LINESEGMENT",
    "facts": "Vertex(Q) = MidPoint(J)"
},
{
    "assertion": "VectorOf ( RightVertex ( CONICSECTION: J ), POINT: c ) equals VECTOR: x",
    "id": 3607,
    "declarations": "J: CONICSECTION; c: POINT; x: VECTOR",
    "facts": "VectorOf(RightVertex(J), c) = x"
},
{
    "assertion": "IsInTangent ( CIRCLE: u, CIRCLE: c ) equals BOOL: True",
    "id": 3608,
    "declarations": "u: CIRCLE; c: CIRCLE; True: BOOL",
    "facts": "IsInTangent(u, c) = True"
},
{
    "assertion": "Projection ( POINT: Q, LINE: G ) equals POINT: P",
    "id": 3609,
    "declarations": "Q: POINT; G: LINE; P: POINT",
    "facts": "Projection(Q, G) = P"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: F ) equals LeftDirectrix ( CONICSECTION: G )",
    "id": 3610,
    "declarations": "F: CONICSECTION; G: CONICSECTION",
    "facts": "RightDirectrix(F) = LeftDirectrix(G)"
},
{
    "assertion": "Projection ( POINT: Y, LINE: B ) equals Incenter ( TRIANGLE: A )",
    "id": 3611,
    "declarations": "Y: POINT; B: LINE; A: TRIANGLE",
    "facts": "Projection(Y, B) = Incenter(A)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: i ) equals LINE: Q",
    "id": 3612,
    "declarations": "i: LINESEGMENT; Q: LINE",
    "facts": "PerpendicularBisector(i) = Q"
},
{
    "assertion": "And ( ImaginaryAxis ( ELLIPSE: J ) equals LINESEGMENT: a, LowerVertex ( CONICSECTION: K ) equals LeftFocus ( CONICSECTION: d ) ) equals BOOL: True",
    "id": 3613,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "TangentOfPoint ( POINT: v, CURVE: H ) equals LINE: I",
    "id": 3614,
    "declarations": "v: POINT; H: CURVE; I: LINE",
    "facts": "TangentOfPoint(v, H) = I"
},
{
    "assertion": "Length ( LINESEGMENT: E ) equals NUMBER: 14",
    "id": 3615,
    "declarations": "E: LINESEGMENT; 14: NUMBER",
    "facts": "Length(E) = 14"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: B ) equals LINESEGMENT: p",
    "id": 3616,
    "declarations": "B: ELLIPSE; p: LINESEGMENT",
    "facts": "ImaginaryAxis(B) = p"
},
{
    "assertion": "VectorOf ( Center ( CONICSECTION: g ), POINT: P ) equals VECTOR: W",
    "id": 3617,
    "declarations": "g: CONICSECTION; P: POINT; W: VECTOR",
    "facts": "VectorOf(Center(g), P) = W"
},
{
    "assertion": "LowerFocus ( CONICSECTION: J ) equals POINT: Q",
    "id": 3618,
    "declarations": "J: CONICSECTION; Q: POINT",
    "facts": "LowerFocus(J) = Q"
},
{
    "assertion": "FocalLength ( CONICSECTION: C ) equals NUMBER: -23",
    "id": 3619,
    "declarations": "C: CONICSECTION; -23: NUMBER",
    "facts": "FocalLength(C) = -23"
},
{
    "assertion": "YCoordinate ( POINT: q ) equals XCoordinate ( POINT: L )",
    "id": 3620,
    "declarations": "q: POINT; L: POINT",
    "facts": "YCoordinate(q) = XCoordinate(L)"
},
{
    "assertion": "Inclination ( LINE: x ) equals Quadrant ( UpperFocus ( CONICSECTION: Q ) )",
    "id": 3621,
    "declarations": "x: LINE; Q: CONICSECTION",
    "facts": "Inclination(x) = Quadrant(UpperFocus(Q))"
},
{
    "assertion": "Min ( NUMBER: -65 ) equals Min ( Min ( NUMBER: 10 ) )",
    "id": 3622,
    "declarations": "-65: NUMBER; 10: NUMBER",
    "facts": "Min(-65) = Min(Min(10))"
},
{
    "assertion": "AngleOf ( MidPoint ( RealAxis ( ELLIPSE: f ) ), UpperVertex ( CONICSECTION: S ), Orthocenter ( TRIANGLE: Z ) ) equals ApplyUnit ( Eccentricity ( CONICSECTION: T ), DEGREESTR: degree )",
    "id": 3623,
    "declarations": "f: ELLIPSE; S: CONICSECTION; Z: TRIANGLE; T: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(MidPoint(RealAxis(f)), UpperVertex(S), Orthocenter(Z)) = ApplyUnit(Eccentricity(T), degree)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: G ) equals PerpendicularBisector ( LINESEGMENT: y )",
    "id": 3624,
    "declarations": "G: HYPERBOLA; y: LINESEGMENT",
    "facts": "Asymptote(G) = PerpendicularBisector(y)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: g ) equals POINT: i",
    "id": 3625,
    "declarations": "g: TRIANGLE; i: POINT",
    "facts": "Orthocenter(g) = i"
},
{
    "assertion": "RightVertex ( CONICSECTION: J ) equals Circumcenter ( TRIANGLE: Z )",
    "id": 3626,
    "declarations": "J: CONICSECTION; Z: TRIANGLE",
    "facts": "RightVertex(J) = Circumcenter(Z)"
},
{
    "assertion": "Incenter ( TRIANGLE: k ) equals Incenter ( TRIANGLE: l )",
    "id": 3627,
    "declarations": "k: TRIANGLE; l: TRIANGLE",
    "facts": "Incenter(k) = Incenter(l)"
},
{
    "assertion": "Intercept ( LINE: q, AXIS: xAxis ) equals HalfFocalLength ( CONICSECTION: F )",
    "id": 3628,
    "declarations": "q: LINE; xAxis: AXIS; F: CONICSECTION",
    "facts": "Intercept(q, xAxis) = HalfFocalLength(F)"
},
{
    "assertion": "Diameter ( CIRCLE: K ) equals Eccentricity ( CONICSECTION: t )",
    "id": 3629,
    "declarations": "K: CIRCLE; t: CONICSECTION",
    "facts": "Diameter(K) = Eccentricity(t)"
},
{
    "assertion": "IsInTangent ( CIRCLE: v, CircumCircle ( TRIANGLE: c ) ) equals BOOL: True",
    "id": 3630,
    "declarations": "v: CIRCLE; c: TRIANGLE; True: BOOL",
    "facts": "IsInTangent(v, CircumCircle(c)) = True"
},
{
    "assertion": "Between ( UpperFocus ( CONICSECTION: c ), POINT: T, POINT: F ) equals BOOL: False",
    "id": 3631,
    "declarations": "c: CONICSECTION; T: POINT; F: POINT; False: BOOL",
    "facts": "Between(UpperFocus(c), T, F) = False"
},
{
    "assertion": "And ( Diameter ( CIRCLE: d ) equals Length ( LINESEGMENT: T ), FocalLength ( CONICSECTION: l ) equals NUMBER: 44 ) equals BOOL: False",
    "id": 3632,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "And ( Eccentricity ( CONICSECTION: w ) equals Eccentricity ( CONICSECTION: O ), Focus ( CONICSECTION: s ) equals POINT: Z ) equals BOOL: False",
    "id": 3633,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Vertex ( CONICSECTION: C ) equals UpperVertex ( CONICSECTION: q )",
    "id": 3634,
    "declarations": "C: CONICSECTION; q: CONICSECTION",
    "facts": "Vertex(C) = UpperVertex(q)"
},
{
    "assertion": "Negation ( Asymptote ( HYPERBOLA: s ) equals RightDirectrix ( CONICSECTION: b ) ) equals BOOL: False",
    "id": 3635,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Focus ( CONICSECTION: P ) equals FootPoint ( RightDirectrix ( CONICSECTION: Z ), TangentOfPoint ( LeftFocus ( CONICSECTION: r ), CURVE: d ) )",
    "id": 3636,
    "declarations": "P: CONICSECTION; Z: CONICSECTION; r: CONICSECTION; d: CURVE",
    "facts": "Focus(P) = FootPoint(RightDirectrix(Z), TangentOfPoint(LeftFocus(r), d))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: V ) equals RightVertex ( CONICSECTION: H )",
    "id": 3637,
    "declarations": "V: CONICSECTION; H: CONICSECTION",
    "facts": "UpperFocus(V) = RightVertex(H)"
},
{
    "assertion": "TangentPoint ( RightDirectrix ( CONICSECTION: C ), CIRCLE: w ) equals POINT: V",
    "id": 3638,
    "declarations": "C: CONICSECTION; w: CIRCLE; V: POINT",
    "facts": "TangentPoint(RightDirectrix(C), w) = V"
},
{
    "assertion": "Distance ( UpperVertex ( CONICSECTION: l ), Center ( CONICSECTION: F ) ) equals sqrt ( NUMBER: 74 )",
    "id": 3639,
    "declarations": "l: CONICSECTION; F: CONICSECTION; 74: NUMBER",
    "facts": "Distance(UpperVertex(l), Center(F)) = sqrt(74)"
},
{
    "assertion": "Vertex ( CONICSECTION: l ) equals UpperFocus ( CONICSECTION: Z )",
    "id": 3640,
    "declarations": "l: CONICSECTION; Z: CONICSECTION",
    "facts": "Vertex(l) = UpperFocus(Z)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: v ) equals Intercept ( LeftDirectrix ( CONICSECTION: R ), AXIS: yAxis )",
    "id": 3641,
    "declarations": "v: CONICSECTION; R: CONICSECTION; yAxis: AXIS",
    "facts": "Eccentricity(v) = Intercept(LeftDirectrix(R), yAxis)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: R ) equals POINT: h",
    "id": 3642,
    "declarations": "R: CONICSECTION; h: POINT",
    "facts": "LeftVertex(R) = h"
},
{
    "assertion": "Negation ( InterReciprocal ( NUMBER: -11 ) equals HalfFocalLength ( CONICSECTION: s ) ) equals BOOL: False",
    "id": 3643,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsPerpendicular ( LeftDirectrix ( CONICSECTION: x ), LINE: S ) equals BOOL: False",
    "id": 3644,
    "declarations": "x: CONICSECTION; S: LINE; False: BOOL",
    "facts": "IsPerpendicular(LeftDirectrix(x), S) = False"
},
{
    "assertion": "PointOnCurve ( POINT: u, CURVE: m ) equals BOOL: True",
    "id": 3645,
    "declarations": "u: POINT; m: CURVE; True: BOOL",
    "facts": "PointOnCurve(u, m) = True"
},
{
    "assertion": "Abs ( LINESEGMENT: d ) equals Inclination ( LINE: Z )",
    "id": 3646,
    "declarations": "d: LINESEGMENT; Z: LINE",
    "facts": "Abs(d) = Inclination(Z)"
},
{
    "assertion": "Quadrant ( POINT: A ) equals Abs ( LINESEGMENT: U )",
    "id": 3647,
    "declarations": "A: POINT; U: LINESEGMENT",
    "facts": "Quadrant(A) = Abs(U)"
},
{
    "assertion": "PointOnCurve ( POINT: O, Locus ( Orthocenter ( TRIANGLE: H ) ) ) equals BOOL: False",
    "id": 3648,
    "declarations": "O: POINT; H: TRIANGLE; False: BOOL",
    "facts": "PointOnCurve(O, Locus(Orthocenter(H))) = False"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: b ) equals AXIS: xAxis",
    "id": 3649,
    "declarations": "b: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(b) = xAxis"
},
{
    "assertion": "FocalLength ( CONICSECTION: Y ) equals InterReciprocal ( NUMBER: -34 )",
    "id": 3650,
    "declarations": "Y: CONICSECTION; -34: NUMBER",
    "facts": "FocalLength(Y) = InterReciprocal(-34)"
},
{
    "assertion": "IsPerpendicular ( LeftDirectrix ( CONICSECTION: Z ), LINE: S ) equals BOOL: True",
    "id": 3651,
    "declarations": "Z: CONICSECTION; S: LINE; True: BOOL",
    "facts": "IsPerpendicular(LeftDirectrix(Z), S) = True"
},
{
    "assertion": "CircumCircle ( TRIANGLE: o ) equals CIRCLE: D",
    "id": 3652,
    "declarations": "o: TRIANGLE; D: CIRCLE",
    "facts": "CircumCircle(o) = D"
},
{
    "assertion": "Orthocenter ( TRIANGLE: c ) equals POINT: U",
    "id": 3653,
    "declarations": "c: TRIANGLE; U: POINT",
    "facts": "Orthocenter(c) = U"
},
{
    "assertion": "Quadrant ( POINT: m ) equals Length ( LINESEGMENT: Y )",
    "id": 3654,
    "declarations": "m: POINT; Y: LINESEGMENT",
    "facts": "Quadrant(m) = Length(Y)"
},
{
    "assertion": "PerpendicularBisector ( MinorAxis ( ELLIPSE: A ) ) equals LINE: y",
    "id": 3655,
    "declarations": "A: ELLIPSE; y: LINE",
    "facts": "PerpendicularBisector(MinorAxis(A)) = y"
},
{
    "assertion": "Quadrant ( POINT: R ) equals Min ( NUMBER: -1 )",
    "id": 3656,
    "declarations": "R: POINT; -1: NUMBER",
    "facts": "Quadrant(R) = Min(-1)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: G ) equals CURVE: f",
    "id": 3657,
    "declarations": "G: HYPERBOLA; f: CURVE",
    "facts": "LeftPart(G) = f"
},
{
    "assertion": "Expression ( RightPart ( HYPERBOLA: y ) ) equals EXPRESSION: x^2*space-*spacey^2*space=*space1",
    "id": 3658,
    "declarations": "y: HYPERBOLA; x^2*space-*spacey^2*space=*space1: EXPRESSION",
    "facts": "Expression(RightPart(y)) = x^2*space-*spacey^2*space=*space1"
},
{
    "assertion": "Expression ( CURVE: i ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 3659,
    "declarations": "i: CURVE; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "Expression(i) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "Expression ( CURVE: a ) equals EXPRESSION: x*space+*spacey^2*space=*space9",
    "id": 3660,
    "declarations": "a: CURVE; x*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(a) = x*space+*spacey^2*space=*space9"
},
{
    "assertion": "ApplyUnit ( sqrt ( NUMBER: 85 ), DEGREESTR: degree )",
    "id": 3661,
    "declarations": "85: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(sqrt(85), degree) = None"
},
{
    "assertion": "Eccentricity ( CONICSECTION: w ) equals NUMBER: -99",
    "id": 3662,
    "declarations": "w: CONICSECTION; -99: NUMBER",
    "facts": "Eccentricity(w) = -99"
},
{
    "assertion": "YCoordinate ( Orthocenter ( TRIANGLE: W ) ) equals YCoordinate ( RightVertex ( CONICSECTION: q ) )",
    "id": 3663,
    "declarations": "W: TRIANGLE; q: CONICSECTION",
    "facts": "YCoordinate(Orthocenter(W)) = YCoordinate(RightVertex(q))"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: w ) equals LINE: Q",
    "id": 3664,
    "declarations": "w: LINESEGMENT; Q: LINE",
    "facts": "PerpendicularBisector(w) = Q"
},
{
    "assertion": "MajorAxis ( ELLIPSE: Y ) equals LINESEGMENT: S",
    "id": 3665,
    "declarations": "Y: ELLIPSE; S: LINESEGMENT",
    "facts": "MajorAxis(Y) = S"
},
{
    "assertion": "IsIntersect ( CURVE: A, LeftPart ( HYPERBOLA: h ) ) equals BOOL: True",
    "id": 3666,
    "declarations": "A: CURVE; h: HYPERBOLA; True: BOOL",
    "facts": "IsIntersect(A, LeftPart(h)) = True"
},
{
    "assertion": "Projection ( POINT: y, LINE: u ) equals RightVertex ( CONICSECTION: Q )",
    "id": 3667,
    "declarations": "y: POINT; u: LINE; Q: CONICSECTION",
    "facts": "Projection(y, u) = RightVertex(Q)"
},
{
    "assertion": "Vertex ( CONICSECTION: f ) equals RightFocus ( CONICSECTION: f )",
    "id": 3668,
    "declarations": "f: CONICSECTION; f: CONICSECTION",
    "facts": "Vertex(f) = RightFocus(f)"
},
{
    "assertion": "IsParallel ( LINE: Z, RightDirectrix ( CONICSECTION: w ) ) equals BOOL: False",
    "id": 3669,
    "declarations": "Z: LINE; w: CONICSECTION; False: BOOL",
    "facts": "IsParallel(Z, RightDirectrix(w)) = False"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: w, TRIANGLE: B ) equals BOOL: True",
    "id": 3670,
    "declarations": "w: CIRCLE; B: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(w, B) = True"
},
{
    "assertion": "TangentOfPoint ( RightFocus ( CONICSECTION: H ), CURVE: H ) equals LINE: A",
    "id": 3671,
    "declarations": "H: CONICSECTION; H: CURVE; A: LINE",
    "facts": "TangentOfPoint(RightFocus(H), H) = A"
},
{
    "assertion": "CircumCircle ( TRIANGLE: j ) equals CIRCLE: p",
    "id": 3672,
    "declarations": "j: TRIANGLE; p: CIRCLE",
    "facts": "CircumCircle(j) = p"
},
{
    "assertion": "InterReciprocal ( NUMBER: -41 ) equals Eccentricity ( CONICSECTION: C )",
    "id": 3673,
    "declarations": "-41: NUMBER; C: CONICSECTION",
    "facts": "InterReciprocal(-41) = Eccentricity(C)"
},
{
    "assertion": "TangentPoint ( LINE: V, CircumCircle ( TRIANGLE: f ) ) equals POINT: J",
    "id": 3674,
    "declarations": "V: LINE; f: TRIANGLE; J: POINT",
    "facts": "TangentPoint(V, CircumCircle(f)) = J"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: s ) ) equals POINT: F",
    "id": 3675,
    "declarations": "s: ELLIPSE; F: POINT",
    "facts": "Endpoint(MajorAxis(s)) = F"
},
{
    "assertion": "IsTangent ( TangentOfPoint ( Orthocenter ( TRIANGLE: p ), CURVE: X ), CONICSECTION: e ) equals BOOL: False",
    "id": 3676,
    "declarations": "p: TRIANGLE; X: CURVE; e: CONICSECTION; False: BOOL",
    "facts": "IsTangent(TangentOfPoint(Orthocenter(p), X), e) = False"
},
{
    "assertion": "Asymptote ( HYPERBOLA: V ) equals LINE: B",
    "id": 3677,
    "declarations": "V: HYPERBOLA; B: LINE",
    "facts": "Asymptote(V) = B"
},
{
    "assertion": "And ( lg ( HalfFocalLength ( CONICSECTION: O ) ) equals NUMBER: -33, IsTangent ( LINE: C, CONICSECTION: b ) equals BOOL: False ) equals BOOL: False",
    "id": 3678,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Focus ( CONICSECTION: A ) equals Orthocenter ( TRIANGLE: w )",
    "id": 3679,
    "declarations": "A: CONICSECTION; w: TRIANGLE",
    "facts": "Focus(A) = Orthocenter(w)"
},
{
    "assertion": "Negation ( Asymptote ( HYPERBOLA: d ) equals LINE: m ) equals BOOL: True",
    "id": 3680,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "VectorOf ( POINT: H, POINT: V ) equals VECTOR: p",
    "id": 3681,
    "declarations": "H: POINT; V: POINT; p: VECTOR",
    "facts": "VectorOf(H, V) = p"
},
{
    "assertion": "Focus ( CONICSECTION: x ) equals Orthocenter ( TRIANGLE: k )",
    "id": 3682,
    "declarations": "x: CONICSECTION; k: TRIANGLE",
    "facts": "Focus(x) = Orthocenter(k)"
},
{
    "assertion": "Min ( Inclination ( LINE: k ) ) equals NumIntersection ( CURVE: c, LeftPart ( HYPERBOLA: Z ) )",
    "id": 3683,
    "declarations": "k: LINE; c: CURVE; Z: HYPERBOLA",
    "facts": "Min(Inclination(k)) = NumIntersection(c, LeftPart(Z))"
},
{
    "assertion": "RightVertex ( CONICSECTION: D ) equals LeftVertex ( CONICSECTION: F )",
    "id": 3684,
    "declarations": "D: CONICSECTION; F: CONICSECTION",
    "facts": "RightVertex(D) = LeftVertex(F)"
},
{
    "assertion": "FocalLength ( CONICSECTION: G ) equals NUMBER: -14",
    "id": 3685,
    "declarations": "G: CONICSECTION; -14: NUMBER",
    "facts": "FocalLength(G) = -14"
},
{
    "assertion": "NumIntersection ( LeftPart ( HYPERBOLA: X ), CURVE: Q ) equals YCoordinate ( Circumcenter ( TRIANGLE: k ) )",
    "id": 3686,
    "declarations": "X: HYPERBOLA; Q: CURVE; k: TRIANGLE",
    "facts": "NumIntersection(LeftPart(X), Q) = YCoordinate(Circumcenter(k))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: w ) equals MinorAxis ( ELLIPSE: Z )",
    "id": 3687,
    "declarations": "w: ELLIPSE; Z: ELLIPSE",
    "facts": "MajorAxis(w) = MinorAxis(Z)"
},
{
    "assertion": "Radius ( CIRCLE: j ) equals NUMBER: -87",
    "id": 3688,
    "declarations": "j: CIRCLE; -87: NUMBER",
    "facts": "Radius(j) = -87"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: g ) equals Distance ( POINT: i, MidPoint ( LINESEGMENT: u ) )",
    "id": 3689,
    "declarations": "g: CONICSECTION; i: POINT; u: LINESEGMENT",
    "facts": "HalfFocalLength(g) = Distance(i, MidPoint(u))"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: M ) ) ) equals Diameter ( CIRCLE: N )",
    "id": 3690,
    "declarations": "M: ELLIPSE; N: CIRCLE",
    "facts": "Inclination(PerpendicularBisector(ImaginaryAxis(M))) = Diameter(N)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: o ) equals LINE: f",
    "id": 3691,
    "declarations": "o: CONICSECTION; f: LINE",
    "facts": "RightDirectrix(o) = f"
},
{
    "assertion": "PointOnCurve ( RightVertex ( CONICSECTION: Y ), CURVE: A ) equals BOOL: True",
    "id": 3692,
    "declarations": "Y: CONICSECTION; A: CURVE; True: BOOL",
    "facts": "PointOnCurve(RightVertex(Y), A) = True"
},
{
    "assertion": "LineOf ( POINT: l, POINT: d ) equals LINE: I",
    "id": 3693,
    "declarations": "l: POINT; d: POINT; I: LINE",
    "facts": "LineOf(l, d) = I"
},
{
    "assertion": "Focus ( CONICSECTION: s ) equals POINT: z",
    "id": 3694,
    "declarations": "s: CONICSECTION; z: POINT",
    "facts": "Focus(s) = z"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: T ) equals LeftDirectrix ( CONICSECTION: z )",
    "id": 3695,
    "declarations": "T: LINESEGMENT; z: CONICSECTION",
    "facts": "OverlappingLine(T) = LeftDirectrix(z)"
},
{
    "assertion": "Focus ( CONICSECTION: i ) equals POINT: g",
    "id": 3696,
    "declarations": "i: CONICSECTION; g: POINT",
    "facts": "Focus(i) = g"
},
{
    "assertion": "IsPerpendicular ( LINE: c, LINE: o ) equals BOOL: True",
    "id": 3697,
    "declarations": "c: LINE; o: LINE; True: BOOL",
    "facts": "IsPerpendicular(c, o) = True"
},
{
    "assertion": "Area ( CONICSECTION: a ) equals NUMBER: -39",
    "id": 3698,
    "declarations": "a: CONICSECTION; -39: NUMBER",
    "facts": "Area(a) = -39"
},
{
    "assertion": "Locus ( POINT: J ) equals LeftPart ( HYPERBOLA: D )",
    "id": 3699,
    "declarations": "J: POINT; D: HYPERBOLA",
    "facts": "Locus(J) = LeftPart(D)"
},
{
    "assertion": "Intersection ( RightPart ( HYPERBOLA: Y ), CURVE: l ) equals RightFocus ( CONICSECTION: t )",
    "id": 3700,
    "declarations": "Y: HYPERBOLA; l: CURVE; t: CONICSECTION",
    "facts": "Intersection(RightPart(Y), l) = RightFocus(t)"
},
{
    "assertion": "RightPart ( HYPERBOLA: A ) equals CURVE: M",
    "id": 3701,
    "declarations": "A: HYPERBOLA; M: CURVE",
    "facts": "RightPart(A) = M"
},
{
    "assertion": "Length ( LineSegmentOf ( POINT: n, POINT: a ) ) equals NUMBER: 47",
    "id": 3702,
    "declarations": "n: POINT; a: POINT; 47: NUMBER",
    "facts": "Length(LineSegmentOf(n, a)) = 47"
},
{
    "assertion": "Inclination ( LINE: z ) equals Radius ( CIRCLE: g )",
    "id": 3703,
    "declarations": "z: LINE; g: CIRCLE",
    "facts": "Inclination(z) = Radius(g)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: J ) equals LINESEGMENT: L",
    "id": 3704,
    "declarations": "J: ELLIPSE; L: LINESEGMENT",
    "facts": "MinorAxis(J) = L"
},
{
    "assertion": "LowerFocus ( CONICSECTION: N ) equals POINT: c",
    "id": 3705,
    "declarations": "N: CONICSECTION; c: POINT",
    "facts": "LowerFocus(N) = c"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: M ), TRIANGLE: R ) equals BOOL: False",
    "id": 3706,
    "declarations": "M: TRIANGLE; R: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(M), R) = False"
},
{
    "assertion": "IsTangent ( OverlappingLine ( LINESEGMENT: v ), CONICSECTION: B ) equals BOOL: True",
    "id": 3707,
    "declarations": "v: LINESEGMENT; B: CONICSECTION; True: BOOL",
    "facts": "IsTangent(OverlappingLine(v), B) = True"
},
{
    "assertion": "Distance ( Circumcenter ( TRIANGLE: N ), MidPoint ( LINESEGMENT: x ) ) equals Abs ( MinorAxis ( ELLIPSE: k ) )",
    "id": 3708,
    "declarations": "N: TRIANGLE; x: LINESEGMENT; k: ELLIPSE",
    "facts": "Distance(Circumcenter(N), MidPoint(x)) = Abs(MinorAxis(k))"
},
{
    "assertion": "DotProduct ( VECTOR: K, VECTOR: E ) equals NUMBER: -70",
    "id": 3709,
    "declarations": "K: VECTOR; E: VECTOR; -70: NUMBER",
    "facts": "DotProduct(K, E) = -70"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: T ) equals NUMBER: -69",
    "id": 3710,
    "declarations": "T: CONICSECTION; -69: NUMBER",
    "facts": "HalfFocalLength(T) = -69"
},
{
    "assertion": "IsChordOf ( RealAxis ( ELLIPSE: a ), CONICSECTION: F ) equals BOOL: False",
    "id": 3711,
    "declarations": "a: ELLIPSE; F: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(RealAxis(a), F) = False"
},
{
    "assertion": "InterceptChord ( LINE: L, CONICSECTION: R ) equals MinorAxis ( ELLIPSE: S )",
    "id": 3712,
    "declarations": "L: LINE; R: CONICSECTION; S: ELLIPSE",
    "facts": "InterceptChord(L, R) = MinorAxis(S)"
},
{
    "assertion": "Incenter ( TRIANGLE: o ) equals UpperVertex ( CONICSECTION: y )",
    "id": 3713,
    "declarations": "o: TRIANGLE; y: CONICSECTION",
    "facts": "Incenter(o) = UpperVertex(y)"
},
{
    "assertion": "InterReciprocal ( Area ( CONICSECTION: S ) ) equals InterReciprocal ( XCoordinate ( LowerVertex ( CONICSECTION: I ) ) )",
    "id": 3714,
    "declarations": "S: CONICSECTION; I: CONICSECTION",
    "facts": "InterReciprocal(Area(S)) = InterReciprocal(XCoordinate(LowerVertex(I)))"
},
{
    "assertion": "Diameter ( CIRCLE: r ) equals Area ( CONICSECTION: A )",
    "id": 3715,
    "declarations": "r: CIRCLE; A: CONICSECTION",
    "facts": "Diameter(r) = Area(A)"
},
{
    "assertion": "NumIntersection ( RightPart ( HYPERBOLA: e ), LeftPart ( HYPERBOLA: z ) ) equals Abs ( LINESEGMENT: A )",
    "id": 3716,
    "declarations": "e: HYPERBOLA; z: HYPERBOLA; A: LINESEGMENT",
    "facts": "NumIntersection(RightPart(e), LeftPart(z)) = Abs(A)"
},
{
    "assertion": "Perimeter ( CONICSECTION: A ) equals Quadrant ( POINT: P )",
    "id": 3717,
    "declarations": "A: CONICSECTION; P: POINT",
    "facts": "Perimeter(A) = Quadrant(P)"
},
{
    "assertion": "IsIntersect ( CURVE: L, Locus ( Center ( CONICSECTION: A ) ) ) equals BOOL: True",
    "id": 3718,
    "declarations": "L: CURVE; A: CONICSECTION; True: BOOL",
    "facts": "IsIntersect(L, Locus(Center(A))) = True"
},
{
    "assertion": "IsInTangent ( CIRCLE: d, CIRCLE: u ) equals BOOL: True",
    "id": 3719,
    "declarations": "d: CIRCLE; u: CIRCLE; True: BOOL",
    "facts": "IsInTangent(d, u) = True"
},
{
    "assertion": "Max ( NUMBER: -73 ) equals NUMBER: 88",
    "id": 3720,
    "declarations": "-73: NUMBER; 88: NUMBER",
    "facts": "Max(-73) = 88"
},
{
    "assertion": "Max ( NUMBER: -62 ) equals Abs ( LINESEGMENT: y )",
    "id": 3721,
    "declarations": "-62: NUMBER; y: LINESEGMENT",
    "facts": "Max(-62) = Abs(y)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: k ) equals LeftPart ( HYPERBOLA: T )",
    "id": 3722,
    "declarations": "k: HYPERBOLA; T: HYPERBOLA",
    "facts": "LeftPart(k) = LeftPart(T)"
},
{
    "assertion": "IsInTangent ( CIRCLE: I, CIRCLE: B ) equals BOOL: False",
    "id": 3723,
    "declarations": "I: CIRCLE; B: CIRCLE; False: BOOL",
    "facts": "IsInTangent(I, B) = False"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: v ) equals LINE: y",
    "id": 3724,
    "declarations": "v: LINESEGMENT; y: LINE",
    "facts": "OverlappingLine(v) = y"
},
{
    "assertion": "PointOnCurve ( POINT: g, CURVE: l ) equals BOOL: True",
    "id": 3725,
    "declarations": "g: POINT; l: CURVE; True: BOOL",
    "facts": "PointOnCurve(g, l) = True"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: j, CONICSECTION: u ) equals BOOL: False",
    "id": 3726,
    "declarations": "j: LINESEGMENT; u: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(j, u) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: p ) equals LeftFocus ( CONICSECTION: l )",
    "id": 3727,
    "declarations": "p: CONICSECTION; l: CONICSECTION",
    "facts": "RightVertex(p) = LeftFocus(l)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -16, DEGREESTR: degree )",
    "id": 3728,
    "declarations": "-16: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-16, degree) = None"
},
{
    "assertion": "LocusEquation ( POINT: Z ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 3729,
    "declarations": "Z: POINT; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(Z) = y*space=*spacelog(x)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: c ) equals SymmetryAxis ( CONICSECTION: V )",
    "id": 3730,
    "declarations": "c: CONICSECTION; V: CONICSECTION",
    "facts": "SymmetryAxis(c) = SymmetryAxis(V)"
},
{
    "assertion": "RightVertex ( CONICSECTION: T ) equals POINT: a",
    "id": 3731,
    "declarations": "T: CONICSECTION; a: POINT",
    "facts": "RightVertex(T) = a"
},
{
    "assertion": "Abs ( LINESEGMENT: I ) equals NUMBER: -27",
    "id": 3732,
    "declarations": "I: LINESEGMENT; -27: NUMBER",
    "facts": "Abs(I) = -27"
},
{
    "assertion": "Area ( CONICSECTION: J ) equals Abs ( MajorAxis ( ELLIPSE: s ) )",
    "id": 3733,
    "declarations": "J: CONICSECTION; s: ELLIPSE",
    "facts": "Area(J) = Abs(MajorAxis(s))"
},
{
    "assertion": "RealAxis ( ELLIPSE: y ) equals InterceptChord ( TangentOnPoint ( POINT: L, CURVE: i ), CONICSECTION: m )",
    "id": 3734,
    "declarations": "y: ELLIPSE; L: POINT; i: CURVE; m: CONICSECTION",
    "facts": "RealAxis(y) = InterceptChord(TangentOnPoint(L, i), m)"
},
{
    "assertion": "ApplyUnit ( lg ( NUMBER: -77 ), DEGREESTR: degree )",
    "id": 3735,
    "declarations": "-77: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(lg(-77), degree) = None"
},
{
    "assertion": "Area ( CONICSECTION: h ) equals NUMBER: 70",
    "id": 3736,
    "declarations": "h: CONICSECTION; 70: NUMBER",
    "facts": "Area(h) = 70"
},
{
    "assertion": "Min ( Min ( Length ( LINESEGMENT: n ) ) ) equals InterReciprocal ( HalfFocalLength ( CONICSECTION: k ) )",
    "id": 3737,
    "declarations": "n: LINESEGMENT; k: CONICSECTION",
    "facts": "Min(Min(Length(n))) = InterReciprocal(HalfFocalLength(k))"
},
{
    "assertion": "RightVertex ( CONICSECTION: N ) equals LowerFocus ( CONICSECTION: F )",
    "id": 3738,
    "declarations": "N: CONICSECTION; F: CONICSECTION",
    "facts": "RightVertex(N) = LowerFocus(F)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: R, TRIANGLE: f ) equals BOOL: True",
    "id": 3739,
    "declarations": "R: CIRCLE; f: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(R, f) = True"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: Y ) ) equals Inclination ( LINE: g )",
    "id": 3740,
    "declarations": "Y: TRIANGLE; g: LINE",
    "facts": "Radius(CircumCircle(Y)) = Inclination(g)"
},
{
    "assertion": "Distance ( MidPoint ( LineSegmentOf ( POINT: z, Circumcenter ( TRIANGLE: s ) ) ), POINT: e ) equals NUMBER: -100",
    "id": 3741,
    "declarations": "z: POINT; s: TRIANGLE; e: POINT; -100: NUMBER",
    "facts": "Distance(MidPoint(LineSegmentOf(z, Circumcenter(s))), e) = -100"
},
{
    "assertion": "LineSegmentOf ( POINT: q, Orthocenter ( TRIANGLE: H ) ) equals ImaginaryAxis ( ELLIPSE: a )",
    "id": 3742,
    "declarations": "q: POINT; H: TRIANGLE; a: ELLIPSE",
    "facts": "LineSegmentOf(q, Orthocenter(H)) = ImaginaryAxis(a)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: V ) equals NUMBER: -56",
    "id": 3743,
    "declarations": "V: CONICSECTION; -56: NUMBER",
    "facts": "HalfFocalLength(V) = -56"
},
{
    "assertion": "MajorAxis ( ELLIPSE: f ) equals LINESEGMENT: S",
    "id": 3744,
    "declarations": "f: ELLIPSE; S: LINESEGMENT",
    "facts": "MajorAxis(f) = S"
},
{
    "assertion": "Perimeter ( CONICSECTION: t ) equals NUMBER: 50",
    "id": 3745,
    "declarations": "t: CONICSECTION; 50: NUMBER",
    "facts": "Perimeter(t) = 50"
},
{
    "assertion": "UpperFocus ( CONICSECTION: V ) equals Projection ( POINT: f, LINE: E )",
    "id": 3746,
    "declarations": "V: CONICSECTION; f: POINT; E: LINE",
    "facts": "UpperFocus(V) = Projection(f, E)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: p, TRIANGLE: D ) equals BOOL: True",
    "id": 3747,
    "declarations": "p: CIRCLE; D: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(p, D) = True"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: t, TRIANGLE: y ) equals BOOL: False",
    "id": 3748,
    "declarations": "t: CIRCLE; y: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(t, y) = False"
},
{
    "assertion": "MidPoint ( MajorAxis ( ELLIPSE: J ) ) equals LeftFocus ( CONICSECTION: K )",
    "id": 3749,
    "declarations": "J: ELLIPSE; K: CONICSECTION",
    "facts": "MidPoint(MajorAxis(J)) = LeftFocus(K)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: L ) equals MinorAxis ( ELLIPSE: f )",
    "id": 3750,
    "declarations": "L: ELLIPSE; f: ELLIPSE",
    "facts": "MajorAxis(L) = MinorAxis(f)"
},
{
    "assertion": "Diameter ( CIRCLE: j ) equals Slope ( RightDirectrix ( CONICSECTION: J ) )",
    "id": 3751,
    "declarations": "j: CIRCLE; J: CONICSECTION",
    "facts": "Diameter(j) = Slope(RightDirectrix(J))"
},
{
    "assertion": "Abs ( LINESEGMENT: G ) equals NUMBER: 34",
    "id": 3752,
    "declarations": "G: LINESEGMENT; 34: NUMBER",
    "facts": "Abs(G) = 34"
},
{
    "assertion": "IsInTangent ( CIRCLE: H, CircumCircle ( TRIANGLE: n ) ) equals BOOL: False",
    "id": 3753,
    "declarations": "H: CIRCLE; n: TRIANGLE; False: BOOL",
    "facts": "IsInTangent(H, CircumCircle(n)) = False"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: i ) ) equals LeftPart ( HYPERBOLA: t )",
    "id": 3754,
    "declarations": "i: CONICSECTION; t: HYPERBOLA",
    "facts": "Locus(LeftFocus(i)) = LeftPart(t)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: j ) equals LINE: F",
    "id": 3755,
    "declarations": "j: LINESEGMENT; F: LINE",
    "facts": "OverlappingLine(j) = F"
},
{
    "assertion": "Focus ( CONICSECTION: G ) equals LowerFocus ( CONICSECTION: I )",
    "id": 3756,
    "declarations": "G: CONICSECTION; I: CONICSECTION",
    "facts": "Focus(G) = LowerFocus(I)"
},
{
    "assertion": "AngleOf ( POINT: q, POINT: i, RightFocus ( CONICSECTION: M ) ) equals ApplyUnit ( NumIntersection ( CURVE: X, CURVE: Q ), DEGREESTR: degree )",
    "id": 3757,
    "declarations": "q: POINT; i: POINT; M: CONICSECTION; X: CURVE; Q: CURVE; degree: DEGREESTR",
    "facts": "AngleOf(q, i, RightFocus(M)) = ApplyUnit(NumIntersection(X, Q), degree)"
},
{
    "assertion": "InterceptChord ( LineOf ( Orthocenter ( TRIANGLE: E ), Orthocenter ( TRIANGLE: H ) ), CONICSECTION: n ) equals RealAxis ( ELLIPSE: f )",
    "id": 3758,
    "declarations": "E: TRIANGLE; H: TRIANGLE; n: CONICSECTION; f: ELLIPSE",
    "facts": "InterceptChord(LineOf(Orthocenter(E), Orthocenter(H)), n) = RealAxis(f)"
},
{
    "assertion": "FocalLength ( CONICSECTION: y ) equals InterReciprocal ( Area ( CONICSECTION: B ) )",
    "id": 3759,
    "declarations": "y: CONICSECTION; B: CONICSECTION",
    "facts": "FocalLength(y) = InterReciprocal(Area(B))"
},
{
    "assertion": "XCoordinate ( POINT: L ) equals YCoordinate ( MidPoint ( MajorAxis ( ELLIPSE: k ) ) )",
    "id": 3760,
    "declarations": "L: POINT; k: ELLIPSE",
    "facts": "XCoordinate(L) = YCoordinate(MidPoint(MajorAxis(k)))"
},
{
    "assertion": "Focus ( CONICSECTION: w ) equals POINT: m",
    "id": 3761,
    "declarations": "w: CONICSECTION; m: POINT",
    "facts": "Focus(w) = m"
},
{
    "assertion": "Radius ( CIRCLE: F ) equals lg ( NUMBER: 58 )",
    "id": 3762,
    "declarations": "F: CIRCLE; 58: NUMBER",
    "facts": "Radius(F) = lg(58)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: p ) equals POINT: k",
    "id": 3763,
    "declarations": "p: TRIANGLE; k: POINT",
    "facts": "Orthocenter(p) = k"
},
{
    "assertion": "Projection ( UpperVertex ( CONICSECTION: M ), RightDirectrix ( CONICSECTION: b ) ) equals UpperFocus ( CONICSECTION: g )",
    "id": 3764,
    "declarations": "M: CONICSECTION; b: CONICSECTION; g: CONICSECTION",
    "facts": "Projection(UpperVertex(M), RightDirectrix(b)) = UpperFocus(g)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: m ) equals POINT: S",
    "id": 3765,
    "declarations": "m: TRIANGLE; S: POINT",
    "facts": "Circumcenter(m) = S"
},
{
    "assertion": "ApplyUnit ( Diameter ( CIRCLE: p ), DEGREESTR: degree )",
    "id": 3766,
    "declarations": "p: CIRCLE; degree: DEGREESTR",
    "facts": "ApplyUnit(Diameter(p), degree) = None"
},
{
    "assertion": "LeftPart ( HYPERBOLA: n ) equals CURVE: e",
    "id": 3767,
    "declarations": "n: HYPERBOLA; e: CURVE",
    "facts": "LeftPart(n) = e"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: M ) equals LineOf ( Projection ( Center ( CONICSECTION: z ), LINE: b ), LeftFocus ( CONICSECTION: F ) )",
    "id": 3768,
    "declarations": "M: LINESEGMENT; z: CONICSECTION; b: LINE; F: CONICSECTION",
    "facts": "OverlappingLine(M) = LineOf(Projection(Center(z), b), LeftFocus(F))"
},
{
    "assertion": "RightVertex ( CONICSECTION: g ) equals POINT: L",
    "id": 3769,
    "declarations": "g: CONICSECTION; L: POINT",
    "facts": "RightVertex(g) = L"
},
{
    "assertion": "UpperVertex ( CONICSECTION: H ) equals POINT: t",
    "id": 3770,
    "declarations": "H: CONICSECTION; t: POINT",
    "facts": "UpperVertex(H) = t"
},
{
    "assertion": "LowerVertex ( CONICSECTION: m ) equals POINT: F",
    "id": 3771,
    "declarations": "m: CONICSECTION; F: POINT",
    "facts": "LowerVertex(m) = F"
},
{
    "assertion": "LeftFocus ( CONICSECTION: K ) equals POINT: s",
    "id": 3772,
    "declarations": "K: CONICSECTION; s: POINT",
    "facts": "LeftFocus(K) = s"
},
{
    "assertion": "Min ( NUMBER: 8 ) equals Eccentricity ( CONICSECTION: G )",
    "id": 3773,
    "declarations": "8: NUMBER; G: CONICSECTION",
    "facts": "Min(8) = Eccentricity(G)"
},
{
    "assertion": "sqrt ( NUMBER: -14 ) equals sqrt ( Perimeter ( CONICSECTION: u ) )",
    "id": 3774,
    "declarations": "-14: NUMBER; u: CONICSECTION",
    "facts": "sqrt(-14) = sqrt(Perimeter(u))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: g ) equals HalfFocalLength ( CONICSECTION: v )",
    "id": 3775,
    "declarations": "g: CONICSECTION; v: CONICSECTION",
    "facts": "HalfFocalLength(g) = HalfFocalLength(v)"
},
{
    "assertion": "RightPart ( HYPERBOLA: W ) equals CURVE: B",
    "id": 3776,
    "declarations": "W: HYPERBOLA; B: CURVE",
    "facts": "RightPart(W) = B"
},
{
    "assertion": "CircumCircle ( TRIANGLE: K ) equals CIRCLE: z",
    "id": 3777,
    "declarations": "K: TRIANGLE; z: CIRCLE",
    "facts": "CircumCircle(K) = z"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: a ) equals LINESEGMENT: s",
    "id": 3778,
    "declarations": "a: ELLIPSE; s: LINESEGMENT",
    "facts": "ImaginaryAxis(a) = s"
},
{
    "assertion": "Intersection ( CURVE: m, CURVE: Q ) equals POINT: U",
    "id": 3779,
    "declarations": "m: CURVE; Q: CURVE; U: POINT",
    "facts": "Intersection(m, Q) = U"
},
{
    "assertion": "Min ( NUMBER: 8 ) equals YCoordinate ( POINT: x )",
    "id": 3780,
    "declarations": "8: NUMBER; x: POINT",
    "facts": "Min(8) = YCoordinate(x)"
},
{
    "assertion": "Vertex ( CONICSECTION: q ) equals UpperFocus ( CONICSECTION: d )",
    "id": 3781,
    "declarations": "q: CONICSECTION; d: CONICSECTION",
    "facts": "Vertex(q) = UpperFocus(d)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: G ) equals NUMBER: 20",
    "id": 3782,
    "declarations": "G: CONICSECTION; 20: NUMBER",
    "facts": "Eccentricity(G) = 20"
},
{
    "assertion": "MajorAxis ( ELLIPSE: q ) equals ImaginaryAxis ( ELLIPSE: z )",
    "id": 3783,
    "declarations": "q: ELLIPSE; z: ELLIPSE",
    "facts": "MajorAxis(q) = ImaginaryAxis(z)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: t ) equals CURVE: z",
    "id": 3784,
    "declarations": "t: HYPERBOLA; z: CURVE",
    "facts": "LeftPart(t) = z"
},
{
    "assertion": "IsIntersect ( RightPart ( HYPERBOLA: y ), CURVE: x ) equals BOOL: False",
    "id": 3785,
    "declarations": "y: HYPERBOLA; x: CURVE; False: BOOL",
    "facts": "IsIntersect(RightPart(y), x) = False"
},
{
    "assertion": "Intersection ( CURVE: M, RightPart ( HYPERBOLA: S ) ) equals POINT: i",
    "id": 3786,
    "declarations": "M: CURVE; S: HYPERBOLA; i: POINT",
    "facts": "Intersection(M, RightPart(S)) = i"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: T ) equals PerpendicularBisector ( LINESEGMENT: y )",
    "id": 3787,
    "declarations": "T: CONICSECTION; y: LINESEGMENT",
    "facts": "LeftDirectrix(T) = PerpendicularBisector(y)"
},
{
    "assertion": "Directrix ( CONICSECTION: p ) equals LINE: s",
    "id": 3788,
    "declarations": "p: CONICSECTION; s: LINE",
    "facts": "Directrix(p) = s"
},
{
    "assertion": "RealAxis ( ELLIPSE: G ) equals LINESEGMENT: K",
    "id": 3789,
    "declarations": "G: ELLIPSE; K: LINESEGMENT",
    "facts": "RealAxis(G) = K"
},
{
    "assertion": "Coordinate ( LeftFocus ( CONICSECTION: F ) ) equals ( NUMBER: 29, Abs ( MinorAxis ( ELLIPSE: u ) ) )",
    "id": 3790,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Y ) equals LowerVertex ( CONICSECTION: J )",
    "id": 3791,
    "declarations": "Y: CONICSECTION; J: CONICSECTION",
    "facts": "UpperVertex(Y) = LowerVertex(J)"
},
{
    "assertion": "And ( FootPoint ( LINE: C, LINE: d ) equals POINT: U, Directrix ( CONICSECTION: N ) equals OverlappingLine ( ImaginaryAxis ( ELLIPSE: q ) ) ) equals BOOL: False",
    "id": 3792,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Circumcenter ( TRIANGLE: x ) equals UpperFocus ( CONICSECTION: y )",
    "id": 3793,
    "declarations": "x: TRIANGLE; y: CONICSECTION",
    "facts": "Circumcenter(x) = UpperFocus(y)"
},
{
    "assertion": "Max ( Min ( Slope ( LINE: n ) ) ) equals XCoordinate ( POINT: U )",
    "id": 3794,
    "declarations": "n: LINE; U: POINT",
    "facts": "Max(Min(Slope(n))) = XCoordinate(U)"
},
{
    "assertion": "YCoordinate ( POINT: s ) equals Length ( LINESEGMENT: C )",
    "id": 3795,
    "declarations": "s: POINT; C: LINESEGMENT",
    "facts": "YCoordinate(s) = Length(C)"
},
{
    "assertion": "FocalLength ( CONICSECTION: A ) equals Min ( YCoordinate ( Orthocenter ( TRIANGLE: Z ) ) )",
    "id": 3796,
    "declarations": "A: CONICSECTION; Z: TRIANGLE",
    "facts": "FocalLength(A) = Min(YCoordinate(Orthocenter(Z)))"
},
{
    "assertion": "TangentPoint ( LINE: H, CIRCLE: g ) equals POINT: f",
    "id": 3797,
    "declarations": "H: LINE; g: CIRCLE; f: POINT",
    "facts": "TangentPoint(H, g) = f"
},
{
    "assertion": "TangentOnPoint ( Circumcenter ( TRIANGLE: p ), LeftPart ( HYPERBOLA: b ) ) equals LINE: U",
    "id": 3798,
    "declarations": "p: TRIANGLE; b: HYPERBOLA; U: LINE",
    "facts": "TangentOnPoint(Circumcenter(p), LeftPart(b)) = U"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: c ) equals LINE: q",
    "id": 3799,
    "declarations": "c: CONICSECTION; q: LINE",
    "facts": "RightDirectrix(c) = q"
},
{
    "assertion": "TangentOnPoint ( MidPoint ( LINESEGMENT: q ), CURVE: A ) equals PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: i ) )",
    "id": 3800,
    "declarations": "q: LINESEGMENT; A: CURVE; i: ELLIPSE",
    "facts": "TangentOnPoint(MidPoint(q), A) = PerpendicularBisector(ImaginaryAxis(i))"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: S ) equals PerpendicularBisector ( LINESEGMENT: P )",
    "id": 3801,
    "declarations": "S: LINESEGMENT; P: LINESEGMENT",
    "facts": "PerpendicularBisector(S) = PerpendicularBisector(P)"
},
{
    "assertion": "IsParallel ( LINE: f, LeftDirectrix ( CONICSECTION: M ) ) equals BOOL: True",
    "id": 3802,
    "declarations": "f: LINE; M: CONICSECTION; True: BOOL",
    "facts": "IsParallel(f, LeftDirectrix(M)) = True"
},
{
    "assertion": "Endpoint ( LINESEGMENT: f ) equals RightVertex ( CONICSECTION: u )",
    "id": 3803,
    "declarations": "f: LINESEGMENT; u: CONICSECTION",
    "facts": "Endpoint(f) = RightVertex(u)"
},
{
    "assertion": "NumIntersection ( CURVE: h, CURVE: e ) equals lg ( Length ( LINESEGMENT: z ) )",
    "id": 3804,
    "declarations": "h: CURVE; e: CURVE; z: LINESEGMENT",
    "facts": "NumIntersection(h, e) = lg(Length(z))"
},
{
    "assertion": "Incenter ( TriangleOf ( RightVertex ( CONICSECTION: y ), POINT: V, RightFocus ( CONICSECTION: X ) ) ) equals LowerFocus ( CONICSECTION: T )",
    "id": 3805,
    "declarations": "y: CONICSECTION; V: POINT; X: CONICSECTION; T: CONICSECTION",
    "facts": "Incenter(TriangleOf(RightVertex(y), V, RightFocus(X))) = LowerFocus(T)"
},
{
    "assertion": "Projection ( LeftVertex ( CONICSECTION: v ), LINE: h ) equals POINT: O",
    "id": 3806,
    "declarations": "v: CONICSECTION; h: LINE; O: POINT",
    "facts": "Projection(LeftVertex(v), h) = O"
},
{
    "assertion": "Negation ( Length ( InterceptChord ( LINE: a, CONICSECTION: b ) ) equals YCoordinate ( Incenter ( TRIANGLE: b ) ) ) equals BOOL: True",
    "id": 3807,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Orthocenter ( TRIANGLE: y ) equals POINT: y",
    "id": 3808,
    "declarations": "y: TRIANGLE; y: POINT",
    "facts": "Orthocenter(y) = y"
},
{
    "assertion": "InterReciprocal ( Min ( NUMBER: 69 ) ) equals NUMBER: 35",
    "id": 3809,
    "declarations": "69: NUMBER; 35: NUMBER",
    "facts": "InterReciprocal(Min(69)) = 35"
},
{
    "assertion": "Area ( CONICSECTION: E ) equals Distance ( POINT: E, UpperVertex ( CONICSECTION: T ) )",
    "id": 3810,
    "declarations": "E: CONICSECTION; E: POINT; T: CONICSECTION",
    "facts": "Area(E) = Distance(E, UpperVertex(T))"
},
{
    "assertion": "Directrix ( CONICSECTION: g ) equals OverlappingLine ( MajorAxis ( ELLIPSE: y ) )",
    "id": 3811,
    "declarations": "g: CONICSECTION; y: ELLIPSE",
    "facts": "Directrix(g) = OverlappingLine(MajorAxis(y))"
},
{
    "assertion": "TangentPoint ( LeftDirectrix ( CONICSECTION: X ), CIRCLE: N ) equals POINT: F",
    "id": 3812,
    "declarations": "X: CONICSECTION; N: CIRCLE; F: POINT",
    "facts": "TangentPoint(LeftDirectrix(X), N) = F"
},
{
    "assertion": "Min ( NUMBER: -62 ) equals NUMBER: 2",
    "id": 3813,
    "declarations": "-62: NUMBER; 2: NUMBER",
    "facts": "Min(-62) = 2"
},
{
    "assertion": "MinorAxis ( ELLIPSE: s ) equals LINESEGMENT: R",
    "id": 3814,
    "declarations": "s: ELLIPSE; R: LINESEGMENT",
    "facts": "MinorAxis(s) = R"
},
{
    "assertion": "And ( MajorAxis ( ELLIPSE: a ) equals LINESEGMENT: B, LowerFocus ( CONICSECTION: L ) equals POINT: W ) equals BOOL: True",
    "id": 3815,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Abs ( LINESEGMENT: d ) equals Quadrant ( Incenter ( TRIANGLE: N ) )",
    "id": 3816,
    "declarations": "d: LINESEGMENT; N: TRIANGLE",
    "facts": "Abs(d) = Quadrant(Incenter(N))"
},
{
    "assertion": "RealAxis ( ELLIPSE: r ) equals LINESEGMENT: v",
    "id": 3817,
    "declarations": "r: ELLIPSE; v: LINESEGMENT",
    "facts": "RealAxis(r) = v"
},
{
    "assertion": "Abs ( LINESEGMENT: n ) equals NUMBER: 86",
    "id": 3818,
    "declarations": "n: LINESEGMENT; 86: NUMBER",
    "facts": "Abs(n) = 86"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: i ) equals LINE: S",
    "id": 3819,
    "declarations": "i: LINESEGMENT; S: LINE",
    "facts": "OverlappingLine(i) = S"
},
{
    "assertion": "Negation ( lg ( Slope ( LeftDirectrix ( CONICSECTION: a ) ) ) equals XCoordinate ( POINT: T ) ) equals BOOL: True",
    "id": 3820,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "CircumCircle ( TRIANGLE: N ) equals CIRCLE: w",
    "id": 3821,
    "declarations": "N: TRIANGLE; w: CIRCLE",
    "facts": "CircumCircle(N) = w"
},
{
    "assertion": "Focus ( CONICSECTION: E ) equals Center ( CONICSECTION: Y )",
    "id": 3822,
    "declarations": "E: CONICSECTION; Y: CONICSECTION",
    "facts": "Focus(E) = Center(Y)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: E, TRIANGLE: I ) equals BOOL: False",
    "id": 3823,
    "declarations": "E: CIRCLE; I: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(E, I) = False"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: X, CONICSECTION: r ) equals BOOL: True",
    "id": 3824,
    "declarations": "X: LINESEGMENT; r: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(X, r) = True"
},
{
    "assertion": "Locus ( Center ( CONICSECTION: m ) ) equals CURVE: x",
    "id": 3825,
    "declarations": "m: CONICSECTION; x: CURVE",
    "facts": "Locus(Center(m)) = x"
},
{
    "assertion": "Focus ( CONICSECTION: c ) equals Circumcenter ( TRIANGLE: x )",
    "id": 3826,
    "declarations": "c: CONICSECTION; x: TRIANGLE",
    "facts": "Focus(c) = Circumcenter(x)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: M ) equals LINE: e",
    "id": 3827,
    "declarations": "M: LINESEGMENT; e: LINE",
    "facts": "PerpendicularBisector(M) = e"
},
{
    "assertion": "Length ( MinorAxis ( ELLIPSE: L ) ) equals NUMBER: 15",
    "id": 3828,
    "declarations": "L: ELLIPSE; 15: NUMBER",
    "facts": "Length(MinorAxis(L)) = 15"
},
{
    "assertion": "NumIntersection ( CURVE: i, CURVE: Q ) equals Length ( LINESEGMENT: q )",
    "id": 3829,
    "declarations": "i: CURVE; Q: CURVE; q: LINESEGMENT",
    "facts": "NumIntersection(i, Q) = Length(q)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: u ) equals CURVE: n",
    "id": 3830,
    "declarations": "u: HYPERBOLA; n: CURVE",
    "facts": "LeftPart(u) = n"
},
{
    "assertion": "Abs ( LINESEGMENT: h ) equals NUMBER: -98",
    "id": 3831,
    "declarations": "h: LINESEGMENT; -98: NUMBER",
    "facts": "Abs(h) = -98"
},
{
    "assertion": "RightVertex ( CONICSECTION: Z ) equals MidPoint ( RealAxis ( ELLIPSE: P ) )",
    "id": 3832,
    "declarations": "Z: CONICSECTION; P: ELLIPSE",
    "facts": "RightVertex(Z) = MidPoint(RealAxis(P))"
},
{
    "assertion": "Incenter ( TRIANGLE: M ) equals POINT: F",
    "id": 3833,
    "declarations": "M: TRIANGLE; F: POINT",
    "facts": "Incenter(M) = F"
},
{
    "assertion": "AngleOf ( Orthocenter ( TRIANGLE: N ), POINT: K, POINT: L ) equals ApplyUnit ( NUMBER: 33, DEGREESTR: degree )",
    "id": 3834,
    "declarations": "N: TRIANGLE; K: POINT; L: POINT; 33: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(Orthocenter(N), K, L) = ApplyUnit(33, degree)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: Y ) equals LINE: h",
    "id": 3835,
    "declarations": "Y: LINESEGMENT; h: LINE",
    "facts": "OverlappingLine(Y) = h"
},
{
    "assertion": "Min ( Quadrant ( POINT: z ) ) equals Diameter ( CIRCLE: d )",
    "id": 3836,
    "declarations": "z: POINT; d: CIRCLE",
    "facts": "Min(Quadrant(z)) = Diameter(d)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: U, TRIANGLE: A ) equals BOOL: False",
    "id": 3837,
    "declarations": "U: CIRCLE; A: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(U, A) = False"
},
{
    "assertion": "PointOnCurve ( LowerVertex ( CONICSECTION: R ), CURVE: B ) equals BOOL: True",
    "id": 3838,
    "declarations": "R: CONICSECTION; B: CURVE; True: BOOL",
    "facts": "PointOnCurve(LowerVertex(R), B) = True"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: H ), TRIANGLE: B ) equals BOOL: False",
    "id": 3839,
    "declarations": "H: TRIANGLE; B: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(H), B) = False"
},
{
    "assertion": "IsDiameter ( RealAxis ( ELLIPSE: l ), CIRCLE: i ) equals BOOL: False",
    "id": 3840,
    "declarations": "l: ELLIPSE; i: CIRCLE; False: BOOL",
    "facts": "IsDiameter(RealAxis(l), i) = False"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: F ) equals OverlappingLine ( MajorAxis ( ELLIPSE: x ) )",
    "id": 3841,
    "declarations": "F: LINESEGMENT; x: ELLIPSE",
    "facts": "PerpendicularBisector(F) = OverlappingLine(MajorAxis(x))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: V ) equals DotProduct ( VECTOR: V, VECTOR: x )",
    "id": 3842,
    "declarations": "V: CONICSECTION; V: VECTOR; x: VECTOR",
    "facts": "HalfFocalLength(V) = DotProduct(V, x)"
},
{
    "assertion": "Intersection ( Locus ( RightFocus ( CONICSECTION: t ) ), CURVE: d ) equals POINT: S",
    "id": 3843,
    "declarations": "t: CONICSECTION; d: CURVE; S: POINT",
    "facts": "Intersection(Locus(RightFocus(t)), d) = S"
},
{
    "assertion": "RightVertex ( CONICSECTION: m ) equals POINT: i",
    "id": 3844,
    "declarations": "m: CONICSECTION; i: POINT",
    "facts": "RightVertex(m) = i"
},
{
    "assertion": "LeftFocus ( CONICSECTION: p ) equals POINT: g",
    "id": 3845,
    "declarations": "p: CONICSECTION; g: POINT",
    "facts": "LeftFocus(p) = g"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: X, TRIANGLE: t ) equals BOOL: False",
    "id": 3846,
    "declarations": "X: CIRCLE; t: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(X, t) = False"
},
{
    "assertion": "CircumCircle ( TRIANGLE: u ) equals CIRCLE: K",
    "id": 3847,
    "declarations": "u: TRIANGLE; K: CIRCLE",
    "facts": "CircumCircle(u) = K"
},
{
    "assertion": "Locus ( POINT: n ) equals LeftPart ( HYPERBOLA: F )",
    "id": 3848,
    "declarations": "n: POINT; F: HYPERBOLA",
    "facts": "Locus(n) = LeftPart(F)"
},
{
    "assertion": "Vertex ( CONICSECTION: q ) equals UpperVertex ( CONICSECTION: N )",
    "id": 3849,
    "declarations": "q: CONICSECTION; N: CONICSECTION",
    "facts": "Vertex(q) = UpperVertex(N)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: I ) equals POINT: l",
    "id": 3850,
    "declarations": "I: TRIANGLE; l: POINT",
    "facts": "Circumcenter(I) = l"
},
{
    "assertion": "Focus ( CONICSECTION: a ) equals Orthocenter ( TRIANGLE: f )",
    "id": 3851,
    "declarations": "a: CONICSECTION; f: TRIANGLE",
    "facts": "Focus(a) = Orthocenter(f)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: A ) equals CIRCLE: m",
    "id": 3852,
    "declarations": "A: TRIANGLE; m: CIRCLE",
    "facts": "CircumCircle(A) = m"
},
{
    "assertion": "LineOf ( POINT: y, RightVertex ( CONICSECTION: H ) ) equals LINE: U",
    "id": 3853,
    "declarations": "y: POINT; H: CONICSECTION; U: LINE",
    "facts": "LineOf(y, RightVertex(H)) = U"
},
{
    "assertion": "LeftFocus ( CONICSECTION: b ) equals MidPoint ( InterceptChord ( LINE: d, CONICSECTION: b ) )",
    "id": 3854,
    "declarations": "b: CONICSECTION; d: LINE; b: CONICSECTION",
    "facts": "LeftFocus(b) = MidPoint(InterceptChord(d, b))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: D, TRIANGLE: h ) equals BOOL: True",
    "id": 3855,
    "declarations": "D: CIRCLE; h: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(D, h) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: X ) equals Circumcenter ( TRIANGLE: K )",
    "id": 3856,
    "declarations": "X: TRIANGLE; K: TRIANGLE",
    "facts": "Incenter(X) = Circumcenter(K)"
},
{
    "assertion": "PointOnCurve ( UpperVertex ( CONICSECTION: W ), CURVE: Q ) equals BOOL: True",
    "id": 3857,
    "declarations": "W: CONICSECTION; Q: CURVE; True: BOOL",
    "facts": "PointOnCurve(UpperVertex(W), Q) = True"
},
{
    "assertion": "LocusEquation ( LeftFocus ( CONICSECTION: U ) ) equals EXPRESSION: x^2/4*space-*spacey^2/9*space=*space1",
    "id": 3858,
    "declarations": "U: CONICSECTION; x^2/4*space-*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "LocusEquation(LeftFocus(U)) = x^2/4*space-*spacey^2/9*space=*space1"
},
{
    "assertion": "Expression ( CURVE: q ) equals EXPRESSION: x*space+*spacey^2*space=*space5",
    "id": 3859,
    "declarations": "q: CURVE; x*space+*spacey^2*space=*space5: EXPRESSION",
    "facts": "Expression(q) = x*space+*spacey^2*space=*space5"
},
{
    "assertion": "IsIntersect ( LeftPart ( HYPERBOLA: d ), CURVE: i ) equals BOOL: False",
    "id": 3860,
    "declarations": "d: HYPERBOLA; i: CURVE; False: BOOL",
    "facts": "IsIntersect(LeftPart(d), i) = False"
},
{
    "assertion": "LineOf ( POINT: L, RightFocus ( CONICSECTION: E ) ) equals LINE: M",
    "id": 3861,
    "declarations": "L: POINT; E: CONICSECTION; M: LINE",
    "facts": "LineOf(L, RightFocus(E)) = M"
},
{
    "assertion": "AngleOf ( POINT: l, FootPoint ( LINE: H, LINE: K ), LeftVertex ( CONICSECTION: v ) ) equals ApplyUnit ( NUMBER: -75, DEGREESTR: degree )",
    "id": 3862,
    "declarations": "l: POINT; H: LINE; K: LINE; v: CONICSECTION; -75: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(l, FootPoint(H, K), LeftVertex(v)) = ApplyUnit(-75, degree)"
},
{
    "assertion": "Projection ( POINT: Z, LINE: c ) equals POINT: h",
    "id": 3863,
    "declarations": "Z: POINT; c: LINE; h: POINT",
    "facts": "Projection(Z, c) = h"
},
{
    "assertion": "Intercept ( LINE: A, AXIS: xAxis ) equals sqrt ( NUMBER: -27 )",
    "id": 3864,
    "declarations": "A: LINE; xAxis: AXIS; -27: NUMBER",
    "facts": "Intercept(A, xAxis) = sqrt(-27)"
},
{
    "assertion": "LineOf ( POINT: N, POINT: T ) equals OverlappingLine ( LINESEGMENT: S )",
    "id": 3865,
    "declarations": "N: POINT; T: POINT; S: LINESEGMENT",
    "facts": "LineOf(N, T) = OverlappingLine(S)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: R ) equals PerpendicularBisector ( MajorAxis ( ELLIPSE: K ) )",
    "id": 3866,
    "declarations": "R: CONICSECTION; K: ELLIPSE",
    "facts": "RightDirectrix(R) = PerpendicularBisector(MajorAxis(K))"
},
{
    "assertion": "PerpendicularBisector ( LineSegmentOf ( POINT: t, POINT: V ) ) equals LINE: q",
    "id": 3867,
    "declarations": "t: POINT; V: POINT; q: LINE",
    "facts": "PerpendicularBisector(LineSegmentOf(t, V)) = q"
},
{
    "assertion": "RealAxis ( ELLIPSE: j ) equals LINESEGMENT: I",
    "id": 3868,
    "declarations": "j: ELLIPSE; I: LINESEGMENT",
    "facts": "RealAxis(j) = I"
},
{
    "assertion": "MidPoint ( LINESEGMENT: c ) equals POINT: h",
    "id": 3869,
    "declarations": "c: LINESEGMENT; h: POINT",
    "facts": "MidPoint(c) = h"
},
{
    "assertion": "Coordinate ( RightVertex ( CONICSECTION: q ) ) equals ( Radius ( CIRCLE: l ), NUMBER: 99 )",
    "id": 3870,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Circumcenter ( TRIANGLE: i ) equals Center ( CONICSECTION: D )",
    "id": 3871,
    "declarations": "i: TRIANGLE; D: CONICSECTION",
    "facts": "Circumcenter(i) = Center(D)"
},
{
    "assertion": "And ( ApplyUnit ( NUMBER: 14, DEGREESTR: degree ), FocalLength ( CONICSECTION: l ) equals FocalLength ( CONICSECTION: U ) ) equals BOOL: True",
    "id": 3872,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Quadrant ( POINT: l ) equals NUMBER: -27",
    "id": 3873,
    "declarations": "l: POINT; -27: NUMBER",
    "facts": "Quadrant(l) = -27"
},
{
    "assertion": "MinorAxis ( ELLIPSE: e ) equals ImaginaryAxis ( ELLIPSE: Z )",
    "id": 3874,
    "declarations": "e: ELLIPSE; Z: ELLIPSE",
    "facts": "MinorAxis(e) = ImaginaryAxis(Z)"
},
{
    "assertion": "Diameter ( CIRCLE: X ) equals Length ( LINESEGMENT: T )",
    "id": 3875,
    "declarations": "X: CIRCLE; T: LINESEGMENT",
    "facts": "Diameter(X) = Length(T)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: G ) equals POINT: g",
    "id": 3876,
    "declarations": "G: CONICSECTION; g: POINT",
    "facts": "LeftVertex(G) = g"
},
{
    "assertion": "Max ( NUMBER: -70 ) equals Eccentricity ( CONICSECTION: b )",
    "id": 3877,
    "declarations": "-70: NUMBER; b: CONICSECTION",
    "facts": "Max(-70) = Eccentricity(b)"
},
{
    "assertion": "Abs ( LINESEGMENT: P ) equals Area ( CONICSECTION: G )",
    "id": 3878,
    "declarations": "P: LINESEGMENT; G: CONICSECTION",
    "facts": "Abs(P) = Area(G)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: C ) equals POINT: j",
    "id": 3879,
    "declarations": "C: LINESEGMENT; j: POINT",
    "facts": "Endpoint(C) = j"
},
{
    "assertion": "OverlappingLine ( ImaginaryAxis ( ELLIPSE: d ) ) equals LINE: i",
    "id": 3880,
    "declarations": "d: ELLIPSE; i: LINE",
    "facts": "OverlappingLine(ImaginaryAxis(d)) = i"
},
{
    "assertion": "UpperVertex ( CONICSECTION: w ) equals POINT: k",
    "id": 3881,
    "declarations": "w: CONICSECTION; k: POINT",
    "facts": "UpperVertex(w) = k"
},
{
    "assertion": "Eccentricity ( CONICSECTION: W ) equals Intercept ( LINE: H, AXIS: yAxis )",
    "id": 3882,
    "declarations": "W: CONICSECTION; H: LINE; yAxis: AXIS",
    "facts": "Eccentricity(W) = Intercept(H, yAxis)"
},
{
    "assertion": "InterceptChord ( LeftDirectrix ( CONICSECTION: q ), CONICSECTION: K ) equals LINESEGMENT: X",
    "id": 3883,
    "declarations": "q: CONICSECTION; K: CONICSECTION; X: LINESEGMENT",
    "facts": "InterceptChord(LeftDirectrix(q), K) = X"
},
{
    "assertion": "RightVertex ( CONICSECTION: N ) equals Center ( CONICSECTION: w )",
    "id": 3884,
    "declarations": "N: CONICSECTION; w: CONICSECTION",
    "facts": "RightVertex(N) = Center(w)"
},
{
    "assertion": "IsTangent ( LINE: g, CONICSECTION: D ) equals BOOL: True",
    "id": 3885,
    "declarations": "g: LINE; D: CONICSECTION; True: BOOL",
    "facts": "IsTangent(g, D) = True"
},
{
    "assertion": "InterReciprocal ( sqrt ( NUMBER: -96 ) ) equals Length ( LINESEGMENT: S )",
    "id": 3886,
    "declarations": "-96: NUMBER; S: LINESEGMENT",
    "facts": "InterReciprocal(sqrt(-96)) = Length(S)"
},
{
    "assertion": "Coordinate ( POINT: L ) equals ( Quadrant ( LeftVertex ( CONICSECTION: B ) ), NUMBER: 91 )",
    "id": 3887,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightVertex ( CONICSECTION: P ) equals POINT: m",
    "id": 3888,
    "declarations": "P: CONICSECTION; m: POINT",
    "facts": "RightVertex(P) = m"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: I ) equals AXIS: xAxis",
    "id": 3889,
    "declarations": "I: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(I) = xAxis"
},
{
    "assertion": "UpperVertex ( CONICSECTION: k ) equals RightVertex ( CONICSECTION: l )",
    "id": 3890,
    "declarations": "k: CONICSECTION; l: CONICSECTION",
    "facts": "UpperVertex(k) = RightVertex(l)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: C ) equals Center ( CONICSECTION: T )",
    "id": 3891,
    "declarations": "C: CONICSECTION; T: CONICSECTION",
    "facts": "LeftVertex(C) = Center(T)"
},
{
    "assertion": "RightVertex ( CONICSECTION: a ) equals RightVertex ( CONICSECTION: B )",
    "id": 3892,
    "declarations": "a: CONICSECTION; B: CONICSECTION",
    "facts": "RightVertex(a) = RightVertex(B)"
},
{
    "assertion": "Max ( DotProduct ( VECTOR: W, VECTOR: A ) ) equals NumIntersection ( Locus ( Center ( CONICSECTION: g ) ), RightPart ( HYPERBOLA: s ) )",
    "id": 3893,
    "declarations": "W: VECTOR; A: VECTOR; g: CONICSECTION; s: HYPERBOLA",
    "facts": "Max(DotProduct(W, A)) = NumIntersection(Locus(Center(g)), RightPart(s))"
},
{
    "assertion": "Perimeter ( CONICSECTION: V ) equals InterReciprocal ( Slope ( LINE: o ) )",
    "id": 3894,
    "declarations": "V: CONICSECTION; o: LINE",
    "facts": "Perimeter(V) = InterReciprocal(Slope(o))"
},
{
    "assertion": "AngleOf ( POINT: R, UpperFocus ( CONICSECTION: Y ), POINT: n ) equals ApplyUnit ( NUMBER: -74, DEGREESTR: degree )",
    "id": 3895,
    "declarations": "R: POINT; Y: CONICSECTION; n: POINT; -74: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(R, UpperFocus(Y), n) = ApplyUnit(-74, degree)"
},
{
    "assertion": "And ( Distance ( LowerFocus ( CONICSECTION: M ), Center ( CONICSECTION: c ) ) equals NUMBER: -66, Eccentricity ( CONICSECTION: i ) equals NUMBER: -44 ) equals BOOL: False",
    "id": 3896,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Negation ( SymmetryAxis ( CONICSECTION: F ) equals AXIS: yAxis ) equals BOOL: False",
    "id": 3897,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Diameter ( CIRCLE: J ) equals NUMBER: 18",
    "id": 3898,
    "declarations": "J: CIRCLE; 18: NUMBER",
    "facts": "Diameter(J) = 18"
},
{
    "assertion": "Distance ( LeftVertex ( CONICSECTION: L ), POINT: j ) equals NUMBER: 79",
    "id": 3899,
    "declarations": "L: CONICSECTION; j: POINT; 79: NUMBER",
    "facts": "Distance(LeftVertex(L), j) = 79"
},
{
    "assertion": "Coordinate ( RightVertex ( CONICSECTION: j ) ) equals ( Eccentricity ( CONICSECTION: r ), HalfFocalLength ( CONICSECTION: w ) )",
    "id": 3900,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightVertex ( CONICSECTION: X ) equals POINT: Z",
    "id": 3901,
    "declarations": "X: CONICSECTION; Z: POINT",
    "facts": "RightVertex(X) = Z"
},
{
    "assertion": "CircumCircle ( TRIANGLE: I ) equals CIRCLE: V",
    "id": 3902,
    "declarations": "I: TRIANGLE; V: CIRCLE",
    "facts": "CircumCircle(I) = V"
},
{
    "assertion": "Intersection ( CURVE: Y, LeftPart ( HYPERBOLA: F ) ) equals POINT: g",
    "id": 3903,
    "declarations": "Y: CURVE; F: HYPERBOLA; g: POINT",
    "facts": "Intersection(Y, LeftPart(F)) = g"
},
{
    "assertion": "RightFocus ( CONICSECTION: f ) equals POINT: A",
    "id": 3904,
    "declarations": "f: CONICSECTION; A: POINT",
    "facts": "RightFocus(f) = A"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: r, TRIANGLE: h ) equals BOOL: False",
    "id": 3905,
    "declarations": "r: CIRCLE; h: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(r, h) = False"
},
{
    "assertion": "Abs ( LINESEGMENT: F ) equals DotProduct ( VECTOR: l, VECTOR: U )",
    "id": 3906,
    "declarations": "F: LINESEGMENT; l: VECTOR; U: VECTOR",
    "facts": "Abs(F) = DotProduct(l, U)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 76, DEGREESTR: degree )",
    "id": 3907,
    "declarations": "76: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(76, degree) = None"
},
{
    "assertion": "MajorAxis ( ELLIPSE: o ) equals LINESEGMENT: T",
    "id": 3908,
    "declarations": "o: ELLIPSE; T: LINESEGMENT",
    "facts": "MajorAxis(o) = T"
},
{
    "assertion": "Between ( POINT: a, Center ( CONICSECTION: u ), POINT: x ) equals BOOL: False",
    "id": 3909,
    "declarations": "a: POINT; u: CONICSECTION; x: POINT; False: BOOL",
    "facts": "Between(a, Center(u), x) = False"
},
{
    "assertion": "Focus ( CONICSECTION: R ) equals Circumcenter ( TRIANGLE: S )",
    "id": 3910,
    "declarations": "R: CONICSECTION; S: TRIANGLE",
    "facts": "Focus(R) = Circumcenter(S)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: L ) equals LINE: y",
    "id": 3911,
    "declarations": "L: HYPERBOLA; y: LINE",
    "facts": "Asymptote(L) = y"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: x ) equals LINE: S",
    "id": 3912,
    "declarations": "x: LINESEGMENT; S: LINE",
    "facts": "PerpendicularBisector(x) = S"
},
{
    "assertion": "LeftPart ( HYPERBOLA: q ) equals CURVE: f",
    "id": 3913,
    "declarations": "q: HYPERBOLA; f: CURVE",
    "facts": "LeftPart(q) = f"
},
{
    "assertion": "XCoordinate ( Circumcenter ( TRIANGLE: A ) ) equals Radius ( CIRCLE: Z )",
    "id": 3914,
    "declarations": "A: TRIANGLE; Z: CIRCLE",
    "facts": "XCoordinate(Circumcenter(A)) = Radius(Z)"
},
{
    "assertion": "RealAxis ( ELLIPSE: e ) equals MajorAxis ( ELLIPSE: J )",
    "id": 3915,
    "declarations": "e: ELLIPSE; J: ELLIPSE",
    "facts": "RealAxis(e) = MajorAxis(J)"
},
{
    "assertion": "TangentOnPoint ( POINT: S, LeftPart ( HYPERBOLA: X ) ) equals LINE: B",
    "id": 3916,
    "declarations": "S: POINT; X: HYPERBOLA; B: LINE",
    "facts": "TangentOnPoint(S, LeftPart(X)) = B"
},
{
    "assertion": "Distance ( UpperFocus ( CONICSECTION: p ), Projection ( POINT: p, LINE: t ) ) equals Eccentricity ( CONICSECTION: a )",
    "id": 3917,
    "declarations": "p: CONICSECTION; p: POINT; t: LINE; a: CONICSECTION",
    "facts": "Distance(UpperFocus(p), Projection(p, t)) = Eccentricity(a)"
},
{
    "assertion": "IsIntersect ( CURVE: e, CURVE: O ) equals BOOL: False",
    "id": 3918,
    "declarations": "e: CURVE; O: CURVE; False: BOOL",
    "facts": "IsIntersect(e, O) = False"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: R, TRIANGLE: q ) equals BOOL: True",
    "id": 3919,
    "declarations": "R: CIRCLE; q: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(R, q) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: G ) equals Center ( CONICSECTION: N )",
    "id": 3920,
    "declarations": "G: CONICSECTION; N: CONICSECTION",
    "facts": "LeftFocus(G) = Center(N)"
},
{
    "assertion": "VectorOf ( POINT: G, POINT: z ) equals VECTOR: e",
    "id": 3921,
    "declarations": "G: POINT; z: POINT; e: VECTOR",
    "facts": "VectorOf(G, z) = e"
},
{
    "assertion": "MidPoint ( RealAxis ( ELLIPSE: i ) ) equals RightFocus ( CONICSECTION: j )",
    "id": 3922,
    "declarations": "i: ELLIPSE; j: CONICSECTION",
    "facts": "MidPoint(RealAxis(i)) = RightFocus(j)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: l ) equals LineOf ( POINT: g, Circumcenter ( TRIANGLE: f ) )",
    "id": 3923,
    "declarations": "l: CONICSECTION; g: POINT; f: TRIANGLE",
    "facts": "RightDirectrix(l) = LineOf(g, Circumcenter(f))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: L ) equals Circumcenter ( TRIANGLE: k )",
    "id": 3924,
    "declarations": "L: CONICSECTION; k: TRIANGLE",
    "facts": "LowerFocus(L) = Circumcenter(k)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: G ) equals LINESEGMENT: k",
    "id": 3925,
    "declarations": "G: ELLIPSE; k: LINESEGMENT",
    "facts": "ImaginaryAxis(G) = k"
},
{
    "assertion": "Intersection ( LeftPart ( HYPERBOLA: Q ), CURVE: Z ) equals POINT: T",
    "id": 3926,
    "declarations": "Q: HYPERBOLA; Z: CURVE; T: POINT",
    "facts": "Intersection(LeftPart(Q), Z) = T"
},
{
    "assertion": "TangentOnPoint ( LowerFocus ( CONICSECTION: V ), CURVE: t ) equals LINE: G",
    "id": 3927,
    "declarations": "V: CONICSECTION; t: CURVE; G: LINE",
    "facts": "TangentOnPoint(LowerFocus(V), t) = G"
},
{
    "assertion": "MinorAxis ( ELLIPSE: v ) equals LINESEGMENT: l",
    "id": 3928,
    "declarations": "v: ELLIPSE; l: LINESEGMENT",
    "facts": "MinorAxis(v) = l"
},
{
    "assertion": "TangentOnPoint ( UpperFocus ( CONICSECTION: o ), LeftPart ( HYPERBOLA: Q ) ) equals LINE: S",
    "id": 3929,
    "declarations": "o: CONICSECTION; Q: HYPERBOLA; S: LINE",
    "facts": "TangentOnPoint(UpperFocus(o), LeftPart(Q)) = S"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: j ) equals LeftDirectrix ( CONICSECTION: m )",
    "id": 3930,
    "declarations": "j: LINESEGMENT; m: CONICSECTION",
    "facts": "OverlappingLine(j) = LeftDirectrix(m)"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: W ) ) equals NUMBER: -39",
    "id": 3931,
    "declarations": "W: CONICSECTION; -39: NUMBER",
    "facts": "Slope(RightDirectrix(W)) = -39"
},
{
    "assertion": "FocalLength ( CONICSECTION: B ) equals Quadrant ( POINT: O )",
    "id": 3932,
    "declarations": "B: CONICSECTION; O: POINT",
    "facts": "FocalLength(B) = Quadrant(O)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: H ) equals LowerFocus ( CONICSECTION: a )",
    "id": 3933,
    "declarations": "H: CONICSECTION; a: CONICSECTION",
    "facts": "LeftFocus(H) = LowerFocus(a)"
},
{
    "assertion": "RightFocus ( CONICSECTION: s ) equals Center ( CONICSECTION: Y )",
    "id": 3934,
    "declarations": "s: CONICSECTION; Y: CONICSECTION",
    "facts": "RightFocus(s) = Center(Y)"
},
{
    "assertion": "Expression ( CURVE: s ) equals EXPRESSION: x*space+*spacey^2*space=*space1",
    "id": 3935,
    "declarations": "s: CURVE; x*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "Expression(s) = x*space+*spacey^2*space=*space1"
},
{
    "assertion": "TangentOfPoint ( LowerVertex ( CONICSECTION: p ), CURVE: l ) equals LINE: l",
    "id": 3936,
    "declarations": "p: CONICSECTION; l: CURVE; l: LINE",
    "facts": "TangentOfPoint(LowerVertex(p), l) = l"
},
{
    "assertion": "Vertex ( CONICSECTION: V ) equals RightVertex ( CONICSECTION: o )",
    "id": 3937,
    "declarations": "V: CONICSECTION; o: CONICSECTION",
    "facts": "Vertex(V) = RightVertex(o)"
},
{
    "assertion": "FocalLength ( CONICSECTION: E ) equals sqrt ( Quadrant ( POINT: q ) )",
    "id": 3938,
    "declarations": "E: CONICSECTION; q: POINT",
    "facts": "FocalLength(E) = sqrt(Quadrant(q))"
},
{
    "assertion": "Slope ( LINE: s ) equals NUMBER: 7",
    "id": 3939,
    "declarations": "s: LINE; 7: NUMBER",
    "facts": "Slope(s) = 7"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: A ) equals LINE: X",
    "id": 3940,
    "declarations": "A: CONICSECTION; X: LINE",
    "facts": "LeftDirectrix(A) = X"
},
{
    "assertion": "Endpoint ( LINESEGMENT: Z ) equals RightFocus ( CONICSECTION: g )",
    "id": 3941,
    "declarations": "Z: LINESEGMENT; g: CONICSECTION",
    "facts": "Endpoint(Z) = RightFocus(g)"
},
{
    "assertion": "VectorOf ( POINT: i, MidPoint ( LINESEGMENT: F ) ) equals VECTOR: R",
    "id": 3942,
    "declarations": "i: POINT; F: LINESEGMENT; R: VECTOR",
    "facts": "VectorOf(i, MidPoint(F)) = R"
},
{
    "assertion": "LeftFocus ( CONICSECTION: D ) equals POINT: E",
    "id": 3943,
    "declarations": "D: CONICSECTION; E: POINT",
    "facts": "LeftFocus(D) = E"
},
{
    "assertion": "Between ( POINT: P, POINT: c, POINT: f ) equals BOOL: True",
    "id": 3944,
    "declarations": "P: POINT; c: POINT; f: POINT; True: BOOL",
    "facts": "Between(P, c, f) = True"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Q ) equals POINT: V",
    "id": 3945,
    "declarations": "Q: CONICSECTION; V: POINT",
    "facts": "UpperVertex(Q) = V"
},
{
    "assertion": "NumIntersection ( CURVE: C, RightPart ( HYPERBOLA: y ) ) equals Min ( NUMBER: -87 )",
    "id": 3946,
    "declarations": "C: CURVE; y: HYPERBOLA; -87: NUMBER",
    "facts": "NumIntersection(C, RightPart(y)) = Min(-87)"
},
{
    "assertion": "Slope ( LINE: g ) equals Diameter ( CIRCLE: w )",
    "id": 3947,
    "declarations": "g: LINE; w: CIRCLE",
    "facts": "Slope(g) = Diameter(w)"
},
{
    "assertion": "YCoordinate ( POINT: r ) equals Area ( CONICSECTION: C )",
    "id": 3948,
    "declarations": "r: POINT; C: CONICSECTION",
    "facts": "YCoordinate(r) = Area(C)"
},
{
    "assertion": "DotProduct ( VECTOR: L, VECTOR: X ) equals Inclination ( LINE: A )",
    "id": 3949,
    "declarations": "L: VECTOR; X: VECTOR; A: LINE",
    "facts": "DotProduct(L, X) = Inclination(A)"
},
{
    "assertion": "LineOf ( Circumcenter ( TRIANGLE: q ), POINT: Q ) equals LINE: b",
    "id": 3950,
    "declarations": "q: TRIANGLE; Q: POINT; b: LINE",
    "facts": "LineOf(Circumcenter(q), Q) = b"
},
{
    "assertion": "NumIntersection ( CURVE: R, CURVE: n ) equals Area ( CONICSECTION: H )",
    "id": 3951,
    "declarations": "R: CURVE; n: CURVE; H: CONICSECTION",
    "facts": "NumIntersection(R, n) = Area(H)"
},
{
    "assertion": "Max ( YCoordinate ( POINT: V ) ) equals NUMBER: 15",
    "id": 3952,
    "declarations": "V: POINT; 15: NUMBER",
    "facts": "Max(YCoordinate(V)) = 15"
},
{
    "assertion": "LowerFocus ( CONICSECTION: J ) equals Center ( CONICSECTION: q )",
    "id": 3953,
    "declarations": "J: CONICSECTION; q: CONICSECTION",
    "facts": "LowerFocus(J) = Center(q)"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: w ) ) equals LINE: R",
    "id": 3954,
    "declarations": "w: ELLIPSE; R: LINE",
    "facts": "PerpendicularBisector(ImaginaryAxis(w)) = R"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: r ) ) equals NUMBER: -84",
    "id": 3955,
    "declarations": "r: TRIANGLE; -84: NUMBER",
    "facts": "Diameter(CircumCircle(r)) = -84"
},
{
    "assertion": "TangentPoint ( LeftDirectrix ( CONICSECTION: G ), CIRCLE: h ) equals POINT: s",
    "id": 3956,
    "declarations": "G: CONICSECTION; h: CIRCLE; s: POINT",
    "facts": "TangentPoint(LeftDirectrix(G), h) = s"
},
{
    "assertion": "Intersection ( CURVE: K, CURVE: c ) equals UpperFocus ( CONICSECTION: u )",
    "id": 3957,
    "declarations": "K: CURVE; c: CURVE; u: CONICSECTION",
    "facts": "Intersection(K, c) = UpperFocus(u)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: A ) equals LINESEGMENT: v",
    "id": 3958,
    "declarations": "A: ELLIPSE; v: LINESEGMENT",
    "facts": "MinorAxis(A) = v"
},
{
    "assertion": "Radius ( CIRCLE: r ) equals NUMBER: 48",
    "id": 3959,
    "declarations": "r: CIRCLE; 48: NUMBER",
    "facts": "Radius(r) = 48"
},
{
    "assertion": "MajorAxis ( ELLIPSE: y ) equals LINESEGMENT: R",
    "id": 3960,
    "declarations": "y: ELLIPSE; R: LINESEGMENT",
    "facts": "MajorAxis(y) = R"
},
{
    "assertion": "UpperVertex ( CONICSECTION: X ) equals Orthocenter ( TRIANGLE: t )",
    "id": 3961,
    "declarations": "X: CONICSECTION; t: TRIANGLE",
    "facts": "UpperVertex(X) = Orthocenter(t)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: p ) equals CURVE: c",
    "id": 3962,
    "declarations": "p: HYPERBOLA; c: CURVE",
    "facts": "LeftPart(p) = c"
},
{
    "assertion": "Projection ( POINT: p, LineOf ( POINT: v, MidPoint ( LINESEGMENT: h ) ) ) equals LowerVertex ( CONICSECTION: H )",
    "id": 3963,
    "declarations": "p: POINT; v: POINT; h: LINESEGMENT; H: CONICSECTION",
    "facts": "Projection(p, LineOf(v, MidPoint(h))) = LowerVertex(H)"
},
{
    "assertion": "IsPerpendicular ( LINE: Y, PerpendicularBisector ( LINESEGMENT: m ) ) equals BOOL: True",
    "id": 3964,
    "declarations": "Y: LINE; m: LINESEGMENT; True: BOOL",
    "facts": "IsPerpendicular(Y, PerpendicularBisector(m)) = True"
},
{
    "assertion": "Radius ( CIRCLE: a ) equals Area ( CONICSECTION: h )",
    "id": 3965,
    "declarations": "a: CIRCLE; h: CONICSECTION",
    "facts": "Radius(a) = Area(h)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: V ) equals CIRCLE: y",
    "id": 3966,
    "declarations": "V: TRIANGLE; y: CIRCLE",
    "facts": "CircumCircle(V) = y"
},
{
    "assertion": "FootPoint ( LINE: P, LINE: i ) equals POINT: I",
    "id": 3967,
    "declarations": "P: LINE; i: LINE; I: POINT",
    "facts": "FootPoint(P, i) = I"
},
{
    "assertion": "FootPoint ( LINE: m, LINE: G ) equals LeftVertex ( CONICSECTION: F )",
    "id": 3968,
    "declarations": "m: LINE; G: LINE; F: CONICSECTION",
    "facts": "FootPoint(m, G) = LeftVertex(F)"
},
{
    "assertion": "Coordinate ( POINT: L ) equals ( sqrt ( NUMBER: -26 ), Quadrant ( POINT: o ) )",
    "id": 3969,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "TriangleOf ( Center ( CONICSECTION: e ), POINT: r, LeftVertex ( CONICSECTION: x ) ) equals TRIANGLE: B",
    "id": 3970,
    "declarations": "e: CONICSECTION; r: POINT; x: CONICSECTION; B: TRIANGLE",
    "facts": "TriangleOf(Center(e), r, LeftVertex(x)) = B"
},
{
    "assertion": "RightPart ( HYPERBOLA: J ) equals CURVE: I",
    "id": 3971,
    "declarations": "J: HYPERBOLA; I: CURVE",
    "facts": "RightPart(J) = I"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: G, TRIANGLE: L ) equals BOOL: False",
    "id": 3972,
    "declarations": "G: CIRCLE; L: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(G, L) = False"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Z ) equals POINT: X",
    "id": 3973,
    "declarations": "Z: CONICSECTION; X: POINT",
    "facts": "UpperVertex(Z) = X"
},
{
    "assertion": "Min ( NUMBER: -71 ) equals Slope ( TangentOnPoint ( RightVertex ( CONICSECTION: P ), CURVE: i ) )",
    "id": 3974,
    "declarations": "-71: NUMBER; P: CONICSECTION; i: CURVE",
    "facts": "Min(-71) = Slope(TangentOnPoint(RightVertex(P), i))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: e ) equals RightFocus ( CONICSECTION: g )",
    "id": 3975,
    "declarations": "e: TRIANGLE; g: CONICSECTION",
    "facts": "Orthocenter(e) = RightFocus(g)"
},
{
    "assertion": "Coordinate ( POINT: R ) equals ( Diameter ( CIRCLE: D ), NUMBER: -92 )",
    "id": 3976,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Intersection ( CURVE: D, CURVE: J ) equals LowerVertex ( CONICSECTION: n )",
    "id": 3977,
    "declarations": "D: CURVE; J: CURVE; n: CONICSECTION",
    "facts": "Intersection(D, J) = LowerVertex(n)"
},
{
    "assertion": "TangentOfPoint ( LeftFocus ( CONICSECTION: g ), CURVE: u ) equals RightDirectrix ( CONICSECTION: g )",
    "id": 3978,
    "declarations": "g: CONICSECTION; u: CURVE; g: CONICSECTION",
    "facts": "TangentOfPoint(LeftFocus(g), u) = RightDirectrix(g)"
},
{
    "assertion": "Intersection ( CURVE: y, CURVE: d ) equals POINT: w",
    "id": 3979,
    "declarations": "y: CURVE; d: CURVE; w: POINT",
    "facts": "Intersection(y, d) = w"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: a ) equals LINE: J",
    "id": 3980,
    "declarations": "a: LINESEGMENT; J: LINE",
    "facts": "OverlappingLine(a) = J"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: n ) equals LINE: E",
    "id": 3981,
    "declarations": "n: CONICSECTION; E: LINE",
    "facts": "RightDirectrix(n) = E"
},
{
    "assertion": "InterReciprocal ( NUMBER: 99 ) equals Intercept ( LINE: e, AXIS: xAxis )",
    "id": 3982,
    "declarations": "99: NUMBER; e: LINE; xAxis: AXIS",
    "facts": "InterReciprocal(99) = Intercept(e, xAxis)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: X, CIRCLE: G ) equals BOOL: True",
    "id": 3983,
    "declarations": "X: CIRCLE; G: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(X, G) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: m ) equals LINE: h",
    "id": 3984,
    "declarations": "m: CONICSECTION; h: LINE",
    "facts": "Directrix(m) = h"
},
{
    "assertion": "Endpoint ( LINESEGMENT: y ) equals POINT: y",
    "id": 3985,
    "declarations": "y: LINESEGMENT; y: POINT",
    "facts": "Endpoint(y) = y"
},
{
    "assertion": "Eccentricity ( CONICSECTION: G ) equals InterReciprocal ( Diameter ( CircumCircle ( TRIANGLE: E ) ) )",
    "id": 3986,
    "declarations": "G: CONICSECTION; E: TRIANGLE",
    "facts": "Eccentricity(G) = InterReciprocal(Diameter(CircumCircle(E)))"
},
{
    "assertion": "LowerVertex ( CONICSECTION: h ) equals LeftFocus ( CONICSECTION: E )",
    "id": 3987,
    "declarations": "h: CONICSECTION; E: CONICSECTION",
    "facts": "LowerVertex(h) = LeftFocus(E)"
},
{
    "assertion": "Quadrant ( LowerVertex ( CONICSECTION: D ) ) equals NUMBER: -44",
    "id": 3988,
    "declarations": "D: CONICSECTION; -44: NUMBER",
    "facts": "Quadrant(LowerVertex(D)) = -44"
},
{
    "assertion": "AngleOf ( Incenter ( TRIANGLE: Q ), POINT: H, RightFocus ( CONICSECTION: c ) ) equals AngleOf ( LeftFocus ( CONICSECTION: C ), POINT: e, MidPoint ( ImaginaryAxis ( ELLIPSE: R ) ) )",
    "id": 3989,
    "declarations": "Q: TRIANGLE; H: POINT; c: CONICSECTION; C: CONICSECTION; e: POINT; R: ELLIPSE",
    "facts": "AngleOf(Incenter(Q), H, RightFocus(c)) = AngleOf(LeftFocus(C), e, MidPoint(ImaginaryAxis(R)))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: F ) equals POINT: d",
    "id": 3990,
    "declarations": "F: CONICSECTION; d: POINT",
    "facts": "UpperVertex(F) = d"
},
{
    "assertion": "InterReciprocal ( NUMBER: 37 ) equals Intercept ( LINE: t, AXIS: yAxis )",
    "id": 3991,
    "declarations": "37: NUMBER; t: LINE; yAxis: AXIS",
    "facts": "InterReciprocal(37) = Intercept(t, yAxis)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: D ) equals NUMBER: -32",
    "id": 3992,
    "declarations": "D: CONICSECTION; -32: NUMBER",
    "facts": "HalfFocalLength(D) = -32"
},
{
    "assertion": "Length ( LINESEGMENT: f ) equals Radius ( CIRCLE: W )",
    "id": 3993,
    "declarations": "f: LINESEGMENT; W: CIRCLE",
    "facts": "Length(f) = Radius(W)"
},
{
    "assertion": "Min ( Min ( InterReciprocal ( NUMBER: 82 ) ) ) equals YCoordinate ( Center ( CONICSECTION: B ) )",
    "id": 3994,
    "declarations": "82: NUMBER; B: CONICSECTION",
    "facts": "Min(Min(InterReciprocal(82))) = YCoordinate(Center(B))"
},
{
    "assertion": "IsPerpendicular ( LINE: X, LINE: n ) equals BOOL: True",
    "id": 3995,
    "declarations": "X: LINE; n: LINE; True: BOOL",
    "facts": "IsPerpendicular(X, n) = True"
},
{
    "assertion": "XCoordinate ( UpperFocus ( CONICSECTION: j ) ) equals YCoordinate ( POINT: l )",
    "id": 3996,
    "declarations": "j: CONICSECTION; l: POINT",
    "facts": "XCoordinate(UpperFocus(j)) = YCoordinate(l)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: a ) equals HalfFocalLength ( CONICSECTION: M )",
    "id": 3997,
    "declarations": "a: CONICSECTION; M: CONICSECTION",
    "facts": "Eccentricity(a) = HalfFocalLength(M)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: g ) equals POINT: E",
    "id": 3998,
    "declarations": "g: CONICSECTION; E: POINT",
    "facts": "LowerVertex(g) = E"
},
{
    "assertion": "Vertex ( CONICSECTION: s ) equals Circumcenter ( TRIANGLE: W )",
    "id": 3999,
    "declarations": "s: CONICSECTION; W: TRIANGLE",
    "facts": "Vertex(s) = Circumcenter(W)"
},
{
    "assertion": "Perimeter ( CONICSECTION: T ) equals Eccentricity ( CONICSECTION: O )",
    "id": 4000,
    "declarations": "T: CONICSECTION; O: CONICSECTION",
    "facts": "Perimeter(T) = Eccentricity(O)"
},
{
    "assertion": "Diameter ( CIRCLE: A ) equals Quadrant ( Center ( CONICSECTION: X ) )",
    "id": 4001,
    "declarations": "A: CIRCLE; X: CONICSECTION",
    "facts": "Diameter(A) = Quadrant(Center(X))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: l ) equals InterceptChord ( TangentOnPoint ( RightFocus ( CONICSECTION: w ), CURVE: G ), CONICSECTION: c )",
    "id": 4002,
    "declarations": "l: ELLIPSE; w: CONICSECTION; G: CURVE; c: CONICSECTION",
    "facts": "MinorAxis(l) = InterceptChord(TangentOnPoint(RightFocus(w), G), c)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: g ) equals POINT: X",
    "id": 4003,
    "declarations": "g: LINESEGMENT; X: POINT",
    "facts": "MidPoint(g) = X"
},
{
    "assertion": "PointOnCurve ( LeftVertex ( CONICSECTION: W ), RightPart ( HYPERBOLA: E ) ) equals BOOL: True",
    "id": 4004,
    "declarations": "W: CONICSECTION; E: HYPERBOLA; True: BOOL",
    "facts": "PointOnCurve(LeftVertex(W), RightPart(E)) = True"
},
{
    "assertion": "Area ( CONICSECTION: V ) equals Slope ( LineOf ( POINT: p, RightFocus ( CONICSECTION: n ) ) )",
    "id": 4005,
    "declarations": "V: CONICSECTION; p: POINT; n: CONICSECTION",
    "facts": "Area(V) = Slope(LineOf(p, RightFocus(n)))"
},
{
    "assertion": "InterceptChord ( LeftDirectrix ( CONICSECTION: x ), CONICSECTION: O ) equals MajorAxis ( ELLIPSE: Z )",
    "id": 4006,
    "declarations": "x: CONICSECTION; O: CONICSECTION; Z: ELLIPSE",
    "facts": "InterceptChord(LeftDirectrix(x), O) = MajorAxis(Z)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: a, CIRCLE: A ) equals BOOL: True",
    "id": 4007,
    "declarations": "a: LINESEGMENT; A: CIRCLE; True: BOOL",
    "facts": "IsDiameter(a, A) = True"
},
{
    "assertion": "Length ( LINESEGMENT: E ) equals YCoordinate ( POINT: p )",
    "id": 4008,
    "declarations": "E: LINESEGMENT; p: POINT",
    "facts": "Length(E) = YCoordinate(p)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: t ) equals Quadrant ( RightVertex ( CONICSECTION: t ) )",
    "id": 4009,
    "declarations": "t: CONICSECTION; t: CONICSECTION",
    "facts": "HalfFocalLength(t) = Quadrant(RightVertex(t))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: d, TriangleOf ( UpperFocus ( CONICSECTION: k ), POINT: C, Orthocenter ( TRIANGLE: M ) ) ) equals BOOL: True",
    "id": 4010,
    "declarations": "d: CIRCLE; k: CONICSECTION; C: POINT; M: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(d, TriangleOf(UpperFocus(k), C, Orthocenter(M))) = True"
},
{
    "assertion": "TangentOnPoint ( UpperVertex ( CONICSECTION: v ), CURVE: a ) equals LINE: m",
    "id": 4011,
    "declarations": "v: CONICSECTION; a: CURVE; m: LINE",
    "facts": "TangentOnPoint(UpperVertex(v), a) = m"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: U ) equals LINE: z",
    "id": 4012,
    "declarations": "U: CONICSECTION; z: LINE",
    "facts": "LeftDirectrix(U) = z"
},
{
    "assertion": "IsInTangent ( CIRCLE: k, CIRCLE: O ) equals BOOL: True",
    "id": 4013,
    "declarations": "k: CIRCLE; O: CIRCLE; True: BOOL",
    "facts": "IsInTangent(k, O) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: G ) equals LINESEGMENT: m",
    "id": 4014,
    "declarations": "G: ELLIPSE; m: LINESEGMENT",
    "facts": "MajorAxis(G) = m"
},
{
    "assertion": "Quadrant ( RightVertex ( CONICSECTION: E ) ) equals NUMBER: -9",
    "id": 4015,
    "declarations": "E: CONICSECTION; -9: NUMBER",
    "facts": "Quadrant(RightVertex(E)) = -9"
},
{
    "assertion": "FootPoint ( LINE: y, LINE: N ) equals LeftVertex ( CONICSECTION: H )",
    "id": 4016,
    "declarations": "y: LINE; N: LINE; H: CONICSECTION",
    "facts": "FootPoint(y, N) = LeftVertex(H)"
},
{
    "assertion": "Center ( CONICSECTION: C ) equals LeftFocus ( CONICSECTION: c )",
    "id": 4017,
    "declarations": "C: CONICSECTION; c: CONICSECTION",
    "facts": "Center(C) = LeftFocus(c)"
},
{
    "assertion": "FocalLength ( CONICSECTION: Z ) equals lg ( HalfFocalLength ( CONICSECTION: n ) )",
    "id": 4018,
    "declarations": "Z: CONICSECTION; n: CONICSECTION",
    "facts": "FocalLength(Z) = lg(HalfFocalLength(n))"
},
{
    "assertion": "NumIntersection ( CURVE: e, CURVE: G ) equals NUMBER: 34",
    "id": 4019,
    "declarations": "e: CURVE; G: CURVE; 34: NUMBER",
    "facts": "NumIntersection(e, G) = 34"
},
{
    "assertion": "sqrt ( Intercept ( LINE: E, AXIS: yAxis ) ) equals sqrt ( HalfFocalLength ( CONICSECTION: v ) )",
    "id": 4020,
    "declarations": "E: LINE; yAxis: AXIS; v: CONICSECTION",
    "facts": "sqrt(Intercept(E, yAxis)) = sqrt(HalfFocalLength(v))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: C ) equals LeftPart ( HYPERBOLA: f )",
    "id": 4021,
    "declarations": "C: HYPERBOLA; f: HYPERBOLA",
    "facts": "LeftPart(C) = LeftPart(f)"
},
{
    "assertion": "FocalLength ( CONICSECTION: Q ) equals Area ( CONICSECTION: f )",
    "id": 4022,
    "declarations": "Q: CONICSECTION; f: CONICSECTION",
    "facts": "FocalLength(Q) = Area(f)"
},
{
    "assertion": "Perimeter ( CONICSECTION: f ) equals sqrt ( Eccentricity ( CONICSECTION: R ) )",
    "id": 4023,
    "declarations": "f: CONICSECTION; R: CONICSECTION",
    "facts": "Perimeter(f) = sqrt(Eccentricity(R))"
},
{
    "assertion": "Vertex ( CONICSECTION: k ) equals POINT: V",
    "id": 4024,
    "declarations": "k: CONICSECTION; V: POINT",
    "facts": "Vertex(k) = V"
},
{
    "assertion": "Circumcenter ( TRIANGLE: d ) equals MidPoint ( LINESEGMENT: l )",
    "id": 4025,
    "declarations": "d: TRIANGLE; l: LINESEGMENT",
    "facts": "Circumcenter(d) = MidPoint(l)"
},
{
    "assertion": "Max ( Slope ( LineOf ( POINT: t, POINT: n ) ) ) equals Slope ( OverlappingLine ( LINESEGMENT: P ) )",
    "id": 4026,
    "declarations": "t: POINT; n: POINT; P: LINESEGMENT",
    "facts": "Max(Slope(LineOf(t, n))) = Slope(OverlappingLine(P))"
},
{
    "assertion": "IsOutTangent ( CIRCLE: P, CIRCLE: H ) equals BOOL: False",
    "id": 4027,
    "declarations": "P: CIRCLE; H: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(P, H) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: O ) equals LINESEGMENT: D",
    "id": 4028,
    "declarations": "O: ELLIPSE; D: LINESEGMENT",
    "facts": "MinorAxis(O) = D"
},
{
    "assertion": "sqrt ( NUMBER: -27 ) equals HalfFocalLength ( CONICSECTION: V )",
    "id": 4029,
    "declarations": "-27: NUMBER; V: CONICSECTION",
    "facts": "sqrt(-27) = HalfFocalLength(V)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: I ) equals LeftVertex ( CONICSECTION: y )",
    "id": 4030,
    "declarations": "I: LINESEGMENT; y: CONICSECTION",
    "facts": "Endpoint(I) = LeftVertex(y)"
},
{
    "assertion": "YCoordinate ( POINT: g ) equals NUMBER: 27",
    "id": 4031,
    "declarations": "g: POINT; 27: NUMBER",
    "facts": "YCoordinate(g) = 27"
},
{
    "assertion": "RealAxis ( ELLIPSE: t ) equals LINESEGMENT: O",
    "id": 4032,
    "declarations": "t: ELLIPSE; O: LINESEGMENT",
    "facts": "RealAxis(t) = O"
},
{
    "assertion": "Quadrant ( UpperVertex ( CONICSECTION: B ) ) equals sqrt ( YCoordinate ( LeftVertex ( CONICSECTION: y ) ) )",
    "id": 4033,
    "declarations": "B: CONICSECTION; y: CONICSECTION",
    "facts": "Quadrant(UpperVertex(B)) = sqrt(YCoordinate(LeftVertex(y)))"
},
{
    "assertion": "LineSegmentOf ( UpperVertex ( CONICSECTION: W ), POINT: M ) equals LINESEGMENT: o",
    "id": 4034,
    "declarations": "W: CONICSECTION; M: POINT; o: LINESEGMENT",
    "facts": "LineSegmentOf(UpperVertex(W), M) = o"
},
{
    "assertion": "MinorAxis ( ELLIPSE: j ) equals MajorAxis ( ELLIPSE: Z )",
    "id": 4035,
    "declarations": "j: ELLIPSE; Z: ELLIPSE",
    "facts": "MinorAxis(j) = MajorAxis(Z)"
},
{
    "assertion": "Distance ( RightVertex ( CONICSECTION: F ), Center ( CONICSECTION: y ) ) equals NUMBER: -67",
    "id": 4036,
    "declarations": "F: CONICSECTION; y: CONICSECTION; -67: NUMBER",
    "facts": "Distance(RightVertex(F), Center(y)) = -67"
},
{
    "assertion": "Endpoint ( RealAxis ( ELLIPSE: c ) ) equals POINT: E",
    "id": 4037,
    "declarations": "c: ELLIPSE; E: POINT",
    "facts": "Endpoint(RealAxis(c)) = E"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: P ) equals LINE: r",
    "id": 4038,
    "declarations": "P: CONICSECTION; r: LINE",
    "facts": "LeftDirectrix(P) = r"
},
{
    "assertion": "Quadrant ( LeftFocus ( CONICSECTION: N ) ) equals Inclination ( LINE: a )",
    "id": 4039,
    "declarations": "N: CONICSECTION; a: LINE",
    "facts": "Quadrant(LeftFocus(N)) = Inclination(a)"
},
{
    "assertion": "Min ( NUMBER: 51 ) equals Length ( LINESEGMENT: d )",
    "id": 4040,
    "declarations": "51: NUMBER; d: LINESEGMENT",
    "facts": "Min(51) = Length(d)"
},
{
    "assertion": "sqrt ( Length ( LINESEGMENT: U ) ) equals Area ( CONICSECTION: e )",
    "id": 4041,
    "declarations": "U: LINESEGMENT; e: CONICSECTION",
    "facts": "sqrt(Length(U)) = Area(e)"
},
{
    "assertion": "Inclination ( LINE: Q ) equals Slope ( LINE: o )",
    "id": 4042,
    "declarations": "Q: LINE; o: LINE",
    "facts": "Inclination(Q) = Slope(o)"
},
{
    "assertion": "TangentOnPoint ( POINT: W, CURVE: z ) equals LINE: V",
    "id": 4043,
    "declarations": "W: POINT; z: CURVE; V: LINE",
    "facts": "TangentOnPoint(W, z) = V"
},
{
    "assertion": "CircumCircle ( TRIANGLE: V ) equals CIRCLE: u",
    "id": 4044,
    "declarations": "V: TRIANGLE; u: CIRCLE",
    "facts": "CircumCircle(V) = u"
},
{
    "assertion": "Eccentricity ( CONICSECTION: w ) equals Radius ( CIRCLE: m )",
    "id": 4045,
    "declarations": "w: CONICSECTION; m: CIRCLE",
    "facts": "Eccentricity(w) = Radius(m)"
},
{
    "assertion": "Center ( CONICSECTION: E ) equals POINT: O",
    "id": 4046,
    "declarations": "E: CONICSECTION; O: POINT",
    "facts": "Center(E) = O"
},
{
    "assertion": "Slope ( TangentOnPoint ( Center ( CONICSECTION: P ), CURVE: w ) ) equals Diameter ( CIRCLE: I )",
    "id": 4047,
    "declarations": "P: CONICSECTION; w: CURVE; I: CIRCLE",
    "facts": "Slope(TangentOnPoint(Center(P), w)) = Diameter(I)"
},
{
    "assertion": "Expression ( CURVE: N ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 4048,
    "declarations": "N: CURVE; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "Expression(N) = x*space+*spacey*space=*space5"
},
{
    "assertion": "IsInTangent ( CIRCLE: p, CIRCLE: r ) equals BOOL: False",
    "id": 4049,
    "declarations": "p: CIRCLE; r: CIRCLE; False: BOOL",
    "facts": "IsInTangent(p, r) = False"
},
{
    "assertion": "Distance ( LeftFocus ( CONICSECTION: U ), POINT: e ) equals NUMBER: -48",
    "id": 4050,
    "declarations": "U: CONICSECTION; e: POINT; -48: NUMBER",
    "facts": "Distance(LeftFocus(U), e) = -48"
},
{
    "assertion": "Center ( CONICSECTION: S ) equals POINT: q",
    "id": 4051,
    "declarations": "S: CONICSECTION; q: POINT",
    "facts": "Center(S) = q"
},
{
    "assertion": "Quadrant ( POINT: U ) equals NUMBER: -36",
    "id": 4052,
    "declarations": "U: POINT; -36: NUMBER",
    "facts": "Quadrant(U) = -36"
},
{
    "assertion": "TangentOfPoint ( POINT: j, CURVE: z ) equals LINE: V",
    "id": 4053,
    "declarations": "j: POINT; z: CURVE; V: LINE",
    "facts": "TangentOfPoint(j, z) = V"
},
{
    "assertion": "VectorOf ( POINT: i, Center ( CONICSECTION: h ) ) equals VECTOR: i",
    "id": 4054,
    "declarations": "i: POINT; h: CONICSECTION; i: VECTOR",
    "facts": "VectorOf(i, Center(h)) = i"
},
{
    "assertion": "Eccentricity ( CONICSECTION: y ) equals Quadrant ( Orthocenter ( TRIANGLE: x ) )",
    "id": 4055,
    "declarations": "y: CONICSECTION; x: TRIANGLE",
    "facts": "Eccentricity(y) = Quadrant(Orthocenter(x))"
},
{
    "assertion": "AngleOf ( Projection ( POINT: e, OverlappingLine ( LINESEGMENT: v ) ), POINT: P, POINT: x ) equals ApplyUnit ( Perimeter ( CONICSECTION: G ), DEGREESTR: degree )",
    "id": 4056,
    "declarations": "e: POINT; v: LINESEGMENT; P: POINT; x: POINT; G: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(Projection(e, OverlappingLine(v)), P, x) = ApplyUnit(Perimeter(G), degree)"
},
{
    "assertion": "RightVertex ( CONICSECTION: R ) equals POINT: L",
    "id": 4057,
    "declarations": "R: CONICSECTION; L: POINT",
    "facts": "RightVertex(R) = L"
},
{
    "assertion": "LineSegmentOf ( POINT: e, POINT: g ) equals MinorAxis ( ELLIPSE: N )",
    "id": 4058,
    "declarations": "e: POINT; g: POINT; N: ELLIPSE",
    "facts": "LineSegmentOf(e, g) = MinorAxis(N)"
},
{
    "assertion": "Min ( NUMBER: -34 ) equals Inclination ( LINE: R )",
    "id": 4059,
    "declarations": "-34: NUMBER; R: LINE",
    "facts": "Min(-34) = Inclination(R)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: R, TRIANGLE: u ) equals BOOL: True",
    "id": 4060,
    "declarations": "R: CIRCLE; u: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(R, u) = True"
},
{
    "assertion": "InterReciprocal ( sqrt ( Length ( LINESEGMENT: u ) ) ) equals YCoordinate ( RightFocus ( CONICSECTION: D ) )",
    "id": 4061,
    "declarations": "u: LINESEGMENT; D: CONICSECTION",
    "facts": "InterReciprocal(sqrt(Length(u))) = YCoordinate(RightFocus(D))"
},
{
    "assertion": "XCoordinate ( POINT: Y ) equals Min ( NUMBER: -50 )",
    "id": 4062,
    "declarations": "Y: POINT; -50: NUMBER",
    "facts": "XCoordinate(Y) = Min(-50)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: Y ) equals POINT: o",
    "id": 4063,
    "declarations": "Y: CONICSECTION; o: POINT",
    "facts": "UpperFocus(Y) = o"
},
{
    "assertion": "XCoordinate ( RightFocus ( CONICSECTION: x ) ) equals XCoordinate ( Incenter ( TRIANGLE: S ) )",
    "id": 4064,
    "declarations": "x: CONICSECTION; S: TRIANGLE",
    "facts": "XCoordinate(RightFocus(x)) = XCoordinate(Incenter(S))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: r ) equals RightFocus ( CONICSECTION: f )",
    "id": 4065,
    "declarations": "r: TRIANGLE; f: CONICSECTION",
    "facts": "Orthocenter(r) = RightFocus(f)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: f ) equals TangentOnPoint ( Circumcenter ( TRIANGLE: f ), LeftPart ( HYPERBOLA: Y ) )",
    "id": 4066,
    "declarations": "f: HYPERBOLA; f: TRIANGLE; Y: HYPERBOLA",
    "facts": "Asymptote(f) = TangentOnPoint(Circumcenter(f), LeftPart(Y))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: c ) equals LowerVertex ( CONICSECTION: f )",
    "id": 4067,
    "declarations": "c: CONICSECTION; f: CONICSECTION",
    "facts": "LeftFocus(c) = LowerVertex(f)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: o ) equals NUMBER: 22",
    "id": 4068,
    "declarations": "o: CONICSECTION; 22: NUMBER",
    "facts": "Eccentricity(o) = 22"
},
{
    "assertion": "Perimeter ( CONICSECTION: H ) equals lg ( Perimeter ( CONICSECTION: E ) )",
    "id": 4069,
    "declarations": "H: CONICSECTION; E: CONICSECTION",
    "facts": "Perimeter(H) = lg(Perimeter(E))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: G ) equals CURVE: e",
    "id": 4070,
    "declarations": "G: HYPERBOLA; e: CURVE",
    "facts": "LeftPart(G) = e"
},
{
    "assertion": "AngleOf ( RightVertex ( CONICSECTION: u ), POINT: T, LeftFocus ( CONICSECTION: j ) ) equals AngleOf ( Orthocenter ( TRIANGLE: T ), Center ( CONICSECTION: Y ), RightFocus ( CONICSECTION: f ) )",
    "id": 4071,
    "declarations": "u: CONICSECTION; T: POINT; j: CONICSECTION; T: TRIANGLE; Y: CONICSECTION; f: CONICSECTION",
    "facts": "AngleOf(RightVertex(u), T, LeftFocus(j)) = AngleOf(Orthocenter(T), Center(Y), RightFocus(f))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: C ) equals LINE: k",
    "id": 4072,
    "declarations": "C: HYPERBOLA; k: LINE",
    "facts": "Asymptote(C) = k"
},
{
    "assertion": "Length ( LINESEGMENT: j ) equals NUMBER: -89",
    "id": 4073,
    "declarations": "j: LINESEGMENT; -89: NUMBER",
    "facts": "Length(j) = -89"
},
{
    "assertion": "LowerFocus ( CONICSECTION: G ) equals LeftVertex ( CONICSECTION: n )",
    "id": 4074,
    "declarations": "G: CONICSECTION; n: CONICSECTION",
    "facts": "LowerFocus(G) = LeftVertex(n)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: e ) equals Orthocenter ( TRIANGLE: w )",
    "id": 4075,
    "declarations": "e: CONICSECTION; w: TRIANGLE",
    "facts": "UpperFocus(e) = Orthocenter(w)"
},
{
    "assertion": "And ( UpperFocus ( CONICSECTION: q ) equals POINT: z, Projection ( POINT: y, LINE: r ) equals MidPoint ( LINESEGMENT: I ) ) equals BOOL: True",
    "id": 4076,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsIntersect ( CURVE: k, CURVE: p ) equals BOOL: False",
    "id": 4077,
    "declarations": "k: CURVE; p: CURVE; False: BOOL",
    "facts": "IsIntersect(k, p) = False"
},
{
    "assertion": "sqrt ( NUMBER: -25 ) equals NUMBER: 11",
    "id": 4078,
    "declarations": "-25: NUMBER; 11: NUMBER",
    "facts": "sqrt(-25) = 11"
},
{
    "assertion": "LowerVertex ( CONICSECTION: X ) equals Circumcenter ( TRIANGLE: z )",
    "id": 4079,
    "declarations": "X: CONICSECTION; z: TRIANGLE",
    "facts": "LowerVertex(X) = Circumcenter(z)"
},
{
    "assertion": "Intercept ( PerpendicularBisector ( LINESEGMENT: I ), AXIS: yAxis ) equals Perimeter ( CONICSECTION: k )",
    "id": 4080,
    "declarations": "I: LINESEGMENT; yAxis: AXIS; k: CONICSECTION",
    "facts": "Intercept(PerpendicularBisector(I), yAxis) = Perimeter(k)"
},
{
    "assertion": "Diameter ( CIRCLE: Q ) equals NUMBER: -4",
    "id": 4081,
    "declarations": "Q: CIRCLE; -4: NUMBER",
    "facts": "Diameter(Q) = -4"
},
{
    "assertion": "Orthocenter ( TRIANGLE: t ) equals LowerVertex ( CONICSECTION: b )",
    "id": 4082,
    "declarations": "t: TRIANGLE; b: CONICSECTION",
    "facts": "Orthocenter(t) = LowerVertex(b)"
},
{
    "assertion": "LineSegmentOf ( POINT: x, POINT: S ) equals LINESEGMENT: l",
    "id": 4083,
    "declarations": "x: POINT; S: POINT; l: LINESEGMENT",
    "facts": "LineSegmentOf(x, S) = l"
},
{
    "assertion": "Asymptote ( HYPERBOLA: q ) equals LeftDirectrix ( CONICSECTION: K )",
    "id": 4084,
    "declarations": "q: HYPERBOLA; K: CONICSECTION",
    "facts": "Asymptote(q) = LeftDirectrix(K)"
},
{
    "assertion": "Focus ( CONICSECTION: y ) equals POINT: w",
    "id": 4085,
    "declarations": "y: CONICSECTION; w: POINT",
    "facts": "Focus(y) = w"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: d ) equals LINE: k",
    "id": 4086,
    "declarations": "d: CONICSECTION; k: LINE",
    "facts": "LeftDirectrix(d) = k"
},
{
    "assertion": "Directrix ( CONICSECTION: S ) equals PerpendicularBisector ( LINESEGMENT: E )",
    "id": 4087,
    "declarations": "S: CONICSECTION; E: LINESEGMENT",
    "facts": "Directrix(S) = PerpendicularBisector(E)"
},
{
    "assertion": "RightVertex ( CONICSECTION: C ) equals POINT: h",
    "id": 4088,
    "declarations": "C: CONICSECTION; h: POINT",
    "facts": "RightVertex(C) = h"
},
{
    "assertion": "MajorAxis ( ELLIPSE: O ) equals InterceptChord ( LINE: E, CONICSECTION: B )",
    "id": 4089,
    "declarations": "O: ELLIPSE; E: LINE; B: CONICSECTION",
    "facts": "MajorAxis(O) = InterceptChord(E, B)"
},
{
    "assertion": "RightFocus ( CONICSECTION: J ) equals UpperVertex ( CONICSECTION: M )",
    "id": 4090,
    "declarations": "J: CONICSECTION; M: CONICSECTION",
    "facts": "RightFocus(J) = UpperVertex(M)"
},
{
    "assertion": "Expression ( Locus ( LowerFocus ( CONICSECTION: G ) ) ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 4091,
    "declarations": "G: CONICSECTION; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "Expression(Locus(LowerFocus(G))) = x*space+*spacey*space=*space5"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: g ) equals LINE: U",
    "id": 4092,
    "declarations": "g: CONICSECTION; U: LINE",
    "facts": "RightDirectrix(g) = U"
},
{
    "assertion": "Vertex ( CONICSECTION: Z ) equals RightVertex ( CONICSECTION: G )",
    "id": 4093,
    "declarations": "Z: CONICSECTION; G: CONICSECTION",
    "facts": "Vertex(Z) = RightVertex(G)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: y ) equals LINE: z",
    "id": 4094,
    "declarations": "y: HYPERBOLA; z: LINE",
    "facts": "Asymptote(y) = z"
},
{
    "assertion": "TriangleOf ( POINT: i, POINT: u, FootPoint ( LineOf ( RightFocus ( CONICSECTION: K ), FootPoint ( LINE: I, LINE: S ) ), LINE: O ) ) equals TRIANGLE: c",
    "id": 4095,
    "declarations": "i: POINT; u: POINT; K: CONICSECTION; I: LINE; S: LINE; O: LINE; c: TRIANGLE",
    "facts": "TriangleOf(i, u, FootPoint(LineOf(RightFocus(K), FootPoint(I, S)), O)) = c"
},
{
    "assertion": "Focus ( CONICSECTION: n ) equals LeftFocus ( CONICSECTION: L )",
    "id": 4096,
    "declarations": "n: CONICSECTION; L: CONICSECTION",
    "facts": "Focus(n) = LeftFocus(L)"
},
{
    "assertion": "FocalLength ( CONICSECTION: H ) equals Area ( CONICSECTION: w )",
    "id": 4097,
    "declarations": "H: CONICSECTION; w: CONICSECTION",
    "facts": "FocalLength(H) = Area(w)"
},
{
    "assertion": "Projection ( FootPoint ( LINE: Y, LINE: B ), LINE: s ) equals Center ( CONICSECTION: H )",
    "id": 4098,
    "declarations": "Y: LINE; B: LINE; s: LINE; H: CONICSECTION",
    "facts": "Projection(FootPoint(Y, B), s) = Center(H)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: m ) equals InterceptChord ( LINE: L, CONICSECTION: v )",
    "id": 4099,
    "declarations": "m: ELLIPSE; L: LINE; v: CONICSECTION",
    "facts": "MinorAxis(m) = InterceptChord(L, v)"
},
{
    "assertion": "ApplyUnit ( XCoordinate ( Incenter ( TRIANGLE: Z ) ), DEGREESTR: degree )",
    "id": 4100,
    "declarations": "Z: TRIANGLE; degree: DEGREESTR",
    "facts": "ApplyUnit(XCoordinate(Incenter(Z)), degree) = None"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: q ) equals InterceptChord ( LINE: x, CONICSECTION: P )",
    "id": 4101,
    "declarations": "q: ELLIPSE; x: LINE; P: CONICSECTION",
    "facts": "ImaginaryAxis(q) = InterceptChord(x, P)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: H ) equals LINESEGMENT: q",
    "id": 4102,
    "declarations": "H: ELLIPSE; q: LINESEGMENT",
    "facts": "MinorAxis(H) = q"
},
{
    "assertion": "Quadrant ( UpperVertex ( CONICSECTION: L ) ) equals Abs ( LINESEGMENT: t )",
    "id": 4103,
    "declarations": "L: CONICSECTION; t: LINESEGMENT",
    "facts": "Quadrant(UpperVertex(L)) = Abs(t)"
},
{
    "assertion": "Focus ( CONICSECTION: D ) equals LeftVertex ( CONICSECTION: E )",
    "id": 4104,
    "declarations": "D: CONICSECTION; E: CONICSECTION",
    "facts": "Focus(D) = LeftVertex(E)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: F ) equals LINE: D",
    "id": 4105,
    "declarations": "F: CONICSECTION; D: LINE",
    "facts": "LeftDirectrix(F) = D"
},
{
    "assertion": "FocalLength ( CONICSECTION: o ) equals NUMBER: -72",
    "id": 4106,
    "declarations": "o: CONICSECTION; -72: NUMBER",
    "facts": "FocalLength(o) = -72"
},
{
    "assertion": "Vertex ( CONICSECTION: G ) equals Projection ( LowerVertex ( CONICSECTION: H ), LINE: f )",
    "id": 4107,
    "declarations": "G: CONICSECTION; H: CONICSECTION; f: LINE",
    "facts": "Vertex(G) = Projection(LowerVertex(H), f)"
},
{
    "assertion": "Focus ( CONICSECTION: f ) equals POINT: v",
    "id": 4108,
    "declarations": "f: CONICSECTION; v: POINT",
    "facts": "Focus(f) = v"
},
{
    "assertion": "TriangleOf ( POINT: P, LowerVertex ( CONICSECTION: q ), POINT: t ) equals TRIANGLE: r",
    "id": 4109,
    "declarations": "P: POINT; q: CONICSECTION; t: POINT; r: TRIANGLE",
    "facts": "TriangleOf(P, LowerVertex(q), t) = r"
},
{
    "assertion": "Center ( CONICSECTION: s ) equals POINT: l",
    "id": 4110,
    "declarations": "s: CONICSECTION; l: POINT",
    "facts": "Center(s) = l"
},
{
    "assertion": "IsTangent ( LINE: a, CONICSECTION: Z ) equals BOOL: False",
    "id": 4111,
    "declarations": "a: LINE; Z: CONICSECTION; False: BOOL",
    "facts": "IsTangent(a, Z) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: A ) equals LINESEGMENT: x",
    "id": 4112,
    "declarations": "A: ELLIPSE; x: LINESEGMENT",
    "facts": "MinorAxis(A) = x"
},
{
    "assertion": "RightPart ( HYPERBOLA: u ) equals CURVE: H",
    "id": 4113,
    "declarations": "u: HYPERBOLA; H: CURVE",
    "facts": "RightPart(u) = H"
},
{
    "assertion": "IsOutTangent ( CIRCLE: D, CIRCLE: Y ) equals BOOL: False",
    "id": 4114,
    "declarations": "D: CIRCLE; Y: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(D, Y) = False"
},
{
    "assertion": "LocusEquation ( Center ( CONICSECTION: w ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 4115,
    "declarations": "w: CONICSECTION; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(Center(w)) = y*space=*spacelog(x)"
},
{
    "assertion": "LocusEquation ( POINT: J ) equals EXPRESSION: x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12",
    "id": 4116,
    "declarations": "J: POINT; x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12: EXPRESSION",
    "facts": "LocusEquation(J) = x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12"
},
{
    "assertion": "Vertex ( CONICSECTION: L ) equals POINT: s",
    "id": 4117,
    "declarations": "L: CONICSECTION; s: POINT",
    "facts": "Vertex(L) = s"
},
{
    "assertion": "FocalLength ( CONICSECTION: x ) equals sqrt ( Slope ( PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: I ) ) ) )",
    "id": 4118,
    "declarations": "x: CONICSECTION; I: ELLIPSE",
    "facts": "FocalLength(x) = sqrt(Slope(PerpendicularBisector(ImaginaryAxis(I))))"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: a ) equals LeftDirectrix ( CONICSECTION: t )",
    "id": 4119,
    "declarations": "a: LINESEGMENT; t: CONICSECTION",
    "facts": "OverlappingLine(a) = LeftDirectrix(t)"
},
{
    "assertion": "Distance ( UpperVertex ( CONICSECTION: T ), POINT: L ) equals lg ( XCoordinate ( UpperVertex ( CONICSECTION: c ) ) )",
    "id": 4120,
    "declarations": "T: CONICSECTION; L: POINT; c: CONICSECTION",
    "facts": "Distance(UpperVertex(T), L) = lg(XCoordinate(UpperVertex(c)))"
},
{
    "assertion": "Min ( DotProduct ( VECTOR: W, VECTOR: s ) ) equals InterReciprocal ( Eccentricity ( CONICSECTION: Y ) )",
    "id": 4121,
    "declarations": "W: VECTOR; s: VECTOR; Y: CONICSECTION",
    "facts": "Min(DotProduct(W, s)) = InterReciprocal(Eccentricity(Y))"
},
{
    "assertion": "Negation ( Abs ( LINESEGMENT: T ) equals Length ( InterceptChord ( LINE: B, CONICSECTION: K ) ) ) equals BOOL: True",
    "id": 4122,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Perimeter ( CONICSECTION: z ) equals Abs ( LINESEGMENT: B )",
    "id": 4123,
    "declarations": "z: CONICSECTION; B: LINESEGMENT",
    "facts": "Perimeter(z) = Abs(B)"
},
{
    "assertion": "InterReciprocal ( Radius ( CIRCLE: D ) ) equals Distance ( LeftVertex ( CONICSECTION: T ), POINT: O )",
    "id": 4124,
    "declarations": "D: CIRCLE; T: CONICSECTION; O: POINT",
    "facts": "InterReciprocal(Radius(D)) = Distance(LeftVertex(T), O)"
},
{
    "assertion": "Incenter ( TRIANGLE: H ) equals POINT: F",
    "id": 4125,
    "declarations": "H: TRIANGLE; F: POINT",
    "facts": "Incenter(H) = F"
},
{
    "assertion": "Projection ( POINT: p, LINE: Y ) equals LeftVertex ( CONICSECTION: k )",
    "id": 4126,
    "declarations": "p: POINT; Y: LINE; k: CONICSECTION",
    "facts": "Projection(p, Y) = LeftVertex(k)"
},
{
    "assertion": "LineSegmentOf ( RightFocus ( CONICSECTION: e ), FootPoint ( LINE: G, LINE: l ) ) equals MinorAxis ( ELLIPSE: I )",
    "id": 4127,
    "declarations": "e: CONICSECTION; G: LINE; l: LINE; I: ELLIPSE",
    "facts": "LineSegmentOf(RightFocus(e), FootPoint(G, l)) = MinorAxis(I)"
},
{
    "assertion": "LocusEquation ( UpperVertex ( CONICSECTION: A ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 4128,
    "declarations": "A: CONICSECTION; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(UpperVertex(A)) = y*space=*spacelog(x)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: B, CONICSECTION: D ) equals BOOL: True",
    "id": 4129,
    "declarations": "B: LINESEGMENT; D: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(B, D) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: u ) equals MidPoint ( RealAxis ( ELLIPSE: Y ) )",
    "id": 4130,
    "declarations": "u: CONICSECTION; Y: ELLIPSE",
    "facts": "LeftVertex(u) = MidPoint(RealAxis(Y))"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: M ) equals LINE: M",
    "id": 4131,
    "declarations": "M: LINESEGMENT; M: LINE",
    "facts": "OverlappingLine(M) = M"
},
{
    "assertion": "InterceptChord ( LeftDirectrix ( CONICSECTION: x ), CONICSECTION: F ) equals LineSegmentOf ( POINT: u, UpperFocus ( CONICSECTION: A ) )",
    "id": 4132,
    "declarations": "x: CONICSECTION; F: CONICSECTION; u: POINT; A: CONICSECTION",
    "facts": "InterceptChord(LeftDirectrix(x), F) = LineSegmentOf(u, UpperFocus(A))"
},
{
    "assertion": "Vertex ( CONICSECTION: e ) equals POINT: f",
    "id": 4133,
    "declarations": "e: CONICSECTION; f: POINT",
    "facts": "Vertex(e) = f"
},
{
    "assertion": "Intersection ( CURVE: o, CURVE: D ) equals POINT: z",
    "id": 4134,
    "declarations": "o: CURVE; D: CURVE; z: POINT",
    "facts": "Intersection(o, D) = z"
},
{
    "assertion": "Eccentricity ( CONICSECTION: n ) equals Radius ( CIRCLE: n )",
    "id": 4135,
    "declarations": "n: CONICSECTION; n: CIRCLE",
    "facts": "Eccentricity(n) = Radius(n)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: t ) equals LINESEGMENT: D",
    "id": 4136,
    "declarations": "t: ELLIPSE; D: LINESEGMENT",
    "facts": "MajorAxis(t) = D"
},
{
    "assertion": "IsInTangent ( CIRCLE: p, CIRCLE: R ) equals BOOL: True",
    "id": 4137,
    "declarations": "p: CIRCLE; R: CIRCLE; True: BOOL",
    "facts": "IsInTangent(p, R) = True"
},
{
    "assertion": "lg ( Perimeter ( CONICSECTION: F ) ) equals Area ( CONICSECTION: u )",
    "id": 4138,
    "declarations": "F: CONICSECTION; u: CONICSECTION",
    "facts": "lg(Perimeter(F)) = Area(u)"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: f ) ) equals POINT: c",
    "id": 4139,
    "declarations": "f: ELLIPSE; c: POINT",
    "facts": "Endpoint(MajorAxis(f)) = c"
},
{
    "assertion": "Negation ( ImaginaryAxis ( ELLIPSE: r ) equals MajorAxis ( ELLIPSE: g ) ) equals BOOL: True",
    "id": 4140,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Endpoint ( RealAxis ( ELLIPSE: p ) ) equals LowerFocus ( CONICSECTION: m )",
    "id": 4141,
    "declarations": "p: ELLIPSE; m: CONICSECTION",
    "facts": "Endpoint(RealAxis(p)) = LowerFocus(m)"
},
{
    "assertion": "Area ( CONICSECTION: p ) equals NUMBER: -58",
    "id": 4142,
    "declarations": "p: CONICSECTION; -58: NUMBER",
    "facts": "Area(p) = -58"
},
{
    "assertion": "TangentOfPoint ( LeftVertex ( CONICSECTION: O ), CURVE: S ) equals LINE: R",
    "id": 4143,
    "declarations": "O: CONICSECTION; S: CURVE; R: LINE",
    "facts": "TangentOfPoint(LeftVertex(O), S) = R"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: i ) ) equals NUMBER: -71",
    "id": 4144,
    "declarations": "i: CONICSECTION; -71: NUMBER",
    "facts": "Inclination(LeftDirectrix(i)) = -71"
},
{
    "assertion": "TangentPoint ( TangentOnPoint ( LeftFocus ( CONICSECTION: A ), CURVE: M ), CIRCLE: D ) equals POINT: j",
    "id": 4145,
    "declarations": "A: CONICSECTION; M: CURVE; D: CIRCLE; j: POINT",
    "facts": "TangentPoint(TangentOnPoint(LeftFocus(A), M), D) = j"
},
{
    "assertion": "MinorAxis ( ELLIPSE: G ) equals LINESEGMENT: X",
    "id": 4146,
    "declarations": "G: ELLIPSE; X: LINESEGMENT",
    "facts": "MinorAxis(G) = X"
},
{
    "assertion": "TangentOfPoint ( POINT: a, RightPart ( HYPERBOLA: R ) ) equals OverlappingLine ( LINESEGMENT: i )",
    "id": 4147,
    "declarations": "a: POINT; R: HYPERBOLA; i: LINESEGMENT",
    "facts": "TangentOfPoint(a, RightPart(R)) = OverlappingLine(i)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: B ) equals FootPoint ( LINE: E, LINE: t )",
    "id": 4148,
    "declarations": "B: CONICSECTION; E: LINE; t: LINE",
    "facts": "UpperFocus(B) = FootPoint(E, t)"
},
{
    "assertion": "Max ( Perimeter ( CONICSECTION: z ) ) equals Quadrant ( LowerFocus ( CONICSECTION: g ) )",
    "id": 4149,
    "declarations": "z: CONICSECTION; g: CONICSECTION",
    "facts": "Max(Perimeter(z)) = Quadrant(LowerFocus(g))"
},
{
    "assertion": "Vertex ( CONICSECTION: C ) equals POINT: l",
    "id": 4150,
    "declarations": "C: CONICSECTION; l: POINT",
    "facts": "Vertex(C) = l"
},
{
    "assertion": "FocalLength ( CONICSECTION: c ) equals NUMBER: 37",
    "id": 4151,
    "declarations": "c: CONICSECTION; 37: NUMBER",
    "facts": "FocalLength(c) = 37"
},
{
    "assertion": "InterReciprocal ( DotProduct ( VECTOR: t, VECTOR: U ) ) equals Min ( DotProduct ( VECTOR: M, VECTOR: g ) )",
    "id": 4152,
    "declarations": "t: VECTOR; U: VECTOR; M: VECTOR; g: VECTOR",
    "facts": "InterReciprocal(DotProduct(t, U)) = Min(DotProduct(M, g))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: e ) equals MidPoint ( LINESEGMENT: c )",
    "id": 4153,
    "declarations": "e: CONICSECTION; c: LINESEGMENT",
    "facts": "LowerFocus(e) = MidPoint(c)"
},
{
    "assertion": "Locus ( Orthocenter ( TRIANGLE: U ) ) equals CURVE: F",
    "id": 4154,
    "declarations": "U: TRIANGLE; F: CURVE",
    "facts": "Locus(Orthocenter(U)) = F"
},
{
    "assertion": "MajorAxis ( ELLIPSE: n ) equals LINESEGMENT: u",
    "id": 4155,
    "declarations": "n: ELLIPSE; u: LINESEGMENT",
    "facts": "MajorAxis(n) = u"
},
{
    "assertion": "LeftPart ( HYPERBOLA: P ) equals CURVE: w",
    "id": 4156,
    "declarations": "P: HYPERBOLA; w: CURVE",
    "facts": "LeftPart(P) = w"
},
{
    "assertion": "Radius ( CIRCLE: c ) equals Eccentricity ( CONICSECTION: F )",
    "id": 4157,
    "declarations": "c: CIRCLE; F: CONICSECTION",
    "facts": "Radius(c) = Eccentricity(F)"
},
{
    "assertion": "IsParallel ( LINE: g, OverlappingLine ( ImaginaryAxis ( ELLIPSE: q ) ) ) equals BOOL: True",
    "id": 4158,
    "declarations": "g: LINE; q: ELLIPSE; True: BOOL",
    "facts": "IsParallel(g, OverlappingLine(ImaginaryAxis(q))) = True"
},
{
    "assertion": "Center ( CONICSECTION: h ) equals LeftFocus ( CONICSECTION: s )",
    "id": 4159,
    "declarations": "h: CONICSECTION; s: CONICSECTION",
    "facts": "Center(h) = LeftFocus(s)"
},
{
    "assertion": "RightFocus ( CONICSECTION: E ) equals POINT: K",
    "id": 4160,
    "declarations": "E: CONICSECTION; K: POINT",
    "facts": "RightFocus(E) = K"
},
{
    "assertion": "Coordinate ( LowerVertex ( CONICSECTION: U ) ) equals ( Distance ( POINT: o, MidPoint ( LINESEGMENT: q ) ), NUMBER: -67 )",
    "id": 4161,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LowerFocus ( CONICSECTION: D ) equals Circumcenter ( TRIANGLE: O )",
    "id": 4162,
    "declarations": "D: CONICSECTION; O: TRIANGLE",
    "facts": "LowerFocus(D) = Circumcenter(O)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: v ) equals LINESEGMENT: J",
    "id": 4163,
    "declarations": "v: ELLIPSE; J: LINESEGMENT",
    "facts": "MinorAxis(v) = J"
},
{
    "assertion": "Max ( InterReciprocal ( Min ( NUMBER: -18 ) ) ) equals NUMBER: 47",
    "id": 4164,
    "declarations": "-18: NUMBER; 47: NUMBER",
    "facts": "Max(InterReciprocal(Min(-18))) = 47"
},
{
    "assertion": "IsTangent ( RightDirectrix ( CONICSECTION: H ), CONICSECTION: V ) equals BOOL: True",
    "id": 4165,
    "declarations": "H: CONICSECTION; V: CONICSECTION; True: BOOL",
    "facts": "IsTangent(RightDirectrix(H), V) = True"
},
{
    "assertion": "lg ( FocalLength ( CONICSECTION: N ) ) equals Length ( LINESEGMENT: z )",
    "id": 4166,
    "declarations": "N: CONICSECTION; z: LINESEGMENT",
    "facts": "lg(FocalLength(N)) = Length(z)"
},
{
    "assertion": "InterReciprocal ( NumIntersection ( CURVE: y, CURVE: s ) ) equals YCoordinate ( POINT: e )",
    "id": 4167,
    "declarations": "y: CURVE; s: CURVE; e: POINT",
    "facts": "InterReciprocal(NumIntersection(y, s)) = YCoordinate(e)"
},
{
    "assertion": "InterReciprocal ( Area ( CONICSECTION: M ) ) equals Distance ( LowerVertex ( CONICSECTION: F ), Circumcenter ( TRIANGLE: e ) )",
    "id": 4168,
    "declarations": "M: CONICSECTION; F: CONICSECTION; e: TRIANGLE",
    "facts": "InterReciprocal(Area(M)) = Distance(LowerVertex(F), Circumcenter(e))"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: K ) ) equals Eccentricity ( CONICSECTION: B )",
    "id": 4169,
    "declarations": "K: CONICSECTION; B: CONICSECTION",
    "facts": "Quadrant(LeftVertex(K)) = Eccentricity(B)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: l ) equals LINE: B",
    "id": 4170,
    "declarations": "l: LINESEGMENT; B: LINE",
    "facts": "OverlappingLine(l) = B"
},
{
    "assertion": "Perimeter ( CONICSECTION: s ) equals Eccentricity ( CONICSECTION: c )",
    "id": 4171,
    "declarations": "s: CONICSECTION; c: CONICSECTION",
    "facts": "Perimeter(s) = Eccentricity(c)"
},
{
    "assertion": "FootPoint ( LINE: p, LINE: E ) equals LeftFocus ( CONICSECTION: E )",
    "id": 4172,
    "declarations": "p: LINE; E: LINE; E: CONICSECTION",
    "facts": "FootPoint(p, E) = LeftFocus(E)"
},
{
    "assertion": "Negation ( ApplyUnit ( Distance ( Circumcenter ( TRIANGLE: K ), POINT: J ), DEGREESTR: degree ) ) equals BOOL: False",
    "id": 4173,
    "declarations": "K: TRIANGLE; J: POINT; degree: DEGREESTR; False: BOOL",
    "facts": "Negation(ApplyUnit(Distance(Circumcenter(K), J), degree)) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: X ) equals PerpendicularBisector ( LINESEGMENT: s )",
    "id": 4174,
    "declarations": "X: CONICSECTION; s: LINESEGMENT",
    "facts": "Directrix(X) = PerpendicularBisector(s)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: p ) equals NUMBER: -61",
    "id": 4175,
    "declarations": "p: CONICSECTION; -61: NUMBER",
    "facts": "HalfFocalLength(p) = -61"
},
{
    "assertion": "Diameter ( CIRCLE: E ) equals FocalLength ( CONICSECTION: Q )",
    "id": 4176,
    "declarations": "E: CIRCLE; Q: CONICSECTION",
    "facts": "Diameter(E) = FocalLength(Q)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: S ) equals PerpendicularBisector ( RealAxis ( ELLIPSE: W ) )",
    "id": 4177,
    "declarations": "S: LINESEGMENT; W: ELLIPSE",
    "facts": "OverlappingLine(S) = PerpendicularBisector(RealAxis(W))"
},
{
    "assertion": "Focus ( CONICSECTION: M ) equals Center ( CONICSECTION: V )",
    "id": 4178,
    "declarations": "M: CONICSECTION; V: CONICSECTION",
    "facts": "Focus(M) = Center(V)"
},
{
    "assertion": "Focus ( CONICSECTION: q ) equals UpperFocus ( CONICSECTION: e )",
    "id": 4179,
    "declarations": "q: CONICSECTION; e: CONICSECTION",
    "facts": "Focus(q) = UpperFocus(e)"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: K ) ) equals HalfFocalLength ( CONICSECTION: t )",
    "id": 4180,
    "declarations": "K: TRIANGLE; t: CONICSECTION",
    "facts": "Diameter(CircumCircle(K)) = HalfFocalLength(t)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: s, CIRCLE: O ) equals BOOL: True",
    "id": 4181,
    "declarations": "s: CIRCLE; O: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(s, O) = True"
},
{
    "assertion": "Expression ( CURVE: q ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 4182,
    "declarations": "q: CURVE; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "Expression(q) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: q ) equals LINE: i",
    "id": 4183,
    "declarations": "q: LINESEGMENT; i: LINE",
    "facts": "PerpendicularBisector(q) = i"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: Q ) equals LINE: L",
    "id": 4184,
    "declarations": "Q: LINESEGMENT; L: LINE",
    "facts": "OverlappingLine(Q) = L"
},
{
    "assertion": "Intersection ( CURVE: f, CURVE: G ) equals LowerVertex ( CONICSECTION: n )",
    "id": 4185,
    "declarations": "f: CURVE; G: CURVE; n: CONICSECTION",
    "facts": "Intersection(f, G) = LowerVertex(n)"
},
{
    "assertion": "IsPerpendicular ( LINE: f, PerpendicularBisector ( LINESEGMENT: x ) ) equals BOOL: True",
    "id": 4186,
    "declarations": "f: LINE; x: LINESEGMENT; True: BOOL",
    "facts": "IsPerpendicular(f, PerpendicularBisector(x)) = True"
},
{
    "assertion": "RightPart ( HYPERBOLA: d ) equals CURVE: V",
    "id": 4187,
    "declarations": "d: HYPERBOLA; V: CURVE",
    "facts": "RightPart(d) = V"
},
{
    "assertion": "FocalLength ( CONICSECTION: i ) equals Inclination ( LINE: F )",
    "id": 4188,
    "declarations": "i: CONICSECTION; F: LINE",
    "facts": "FocalLength(i) = Inclination(F)"
},
{
    "assertion": "TangentOfPoint ( Center ( CONICSECTION: z ), CURVE: T ) equals LineOf ( RightFocus ( CONICSECTION: D ), LowerFocus ( CONICSECTION: J ) )",
    "id": 4189,
    "declarations": "z: CONICSECTION; T: CURVE; D: CONICSECTION; J: CONICSECTION",
    "facts": "TangentOfPoint(Center(z), T) = LineOf(RightFocus(D), LowerFocus(J))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: l ) equals Circumcenter ( TRIANGLE: z )",
    "id": 4190,
    "declarations": "l: TRIANGLE; z: TRIANGLE",
    "facts": "Orthocenter(l) = Circumcenter(z)"
},
{
    "assertion": "Locus ( Orthocenter ( TRIANGLE: a ) ) equals CURVE: C",
    "id": 4191,
    "declarations": "a: TRIANGLE; C: CURVE",
    "facts": "Locus(Orthocenter(a)) = C"
},
{
    "assertion": "RealAxis ( ELLIPSE: T ) equals RealAxis ( ELLIPSE: I )",
    "id": 4192,
    "declarations": "T: ELLIPSE; I: ELLIPSE",
    "facts": "RealAxis(T) = RealAxis(I)"
},
{
    "assertion": "Perimeter ( CONICSECTION: Z ) equals Length ( RealAxis ( ELLIPSE: t ) )",
    "id": 4193,
    "declarations": "Z: CONICSECTION; t: ELLIPSE",
    "facts": "Perimeter(Z) = Length(RealAxis(t))"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: g ) equals LINESEGMENT: k",
    "id": 4194,
    "declarations": "g: ELLIPSE; k: LINESEGMENT",
    "facts": "ImaginaryAxis(g) = k"
},
{
    "assertion": "lg ( Radius ( CIRCLE: v ) ) equals NUMBER: 23",
    "id": 4195,
    "declarations": "v: CIRCLE; 23: NUMBER",
    "facts": "lg(Radius(v)) = 23"
},
{
    "assertion": "And ( TangentOfPoint ( POINT: b, CURVE: t ) equals LINE: D, Intercept ( LINE: Y, AXIS: xAxis ) equals FocalLength ( CONICSECTION: e ) ) equals BOOL: False",
    "id": 4196,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Vertex ( CONICSECTION: T ) equals RightFocus ( CONICSECTION: S )",
    "id": 4197,
    "declarations": "T: CONICSECTION; S: CONICSECTION",
    "facts": "Vertex(T) = RightFocus(S)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: g ) equals LINE: j",
    "id": 4198,
    "declarations": "g: LINESEGMENT; j: LINE",
    "facts": "PerpendicularBisector(g) = j"
},
{
    "assertion": "RightFocus ( CONICSECTION: P ) equals Center ( CONICSECTION: L )",
    "id": 4199,
    "declarations": "P: CONICSECTION; L: CONICSECTION",
    "facts": "RightFocus(P) = Center(L)"
},
{
    "assertion": "RightVertex ( CONICSECTION: k ) equals LowerFocus ( CONICSECTION: V )",
    "id": 4200,
    "declarations": "k: CONICSECTION; V: CONICSECTION",
    "facts": "RightVertex(k) = LowerFocus(V)"
},
{
    "assertion": "XCoordinate ( FootPoint ( LINE: J, LINE: p ) ) equals Radius ( CIRCLE: t )",
    "id": 4201,
    "declarations": "J: LINE; p: LINE; t: CIRCLE",
    "facts": "XCoordinate(FootPoint(J, p)) = Radius(t)"
},
{
    "assertion": "PointOnCurve ( POINT: y, CURVE: T ) equals BOOL: True",
    "id": 4202,
    "declarations": "y: POINT; T: CURVE; True: BOOL",
    "facts": "PointOnCurve(y, T) = True"
},
{
    "assertion": "Inclination ( LINE: e ) equals Area ( CONICSECTION: x )",
    "id": 4203,
    "declarations": "e: LINE; x: CONICSECTION",
    "facts": "Inclination(e) = Area(x)"
},
{
    "assertion": "LineOf ( MidPoint ( RealAxis ( ELLIPSE: A ) ), POINT: D ) equals LINE: a",
    "id": 4204,
    "declarations": "A: ELLIPSE; D: POINT; a: LINE",
    "facts": "LineOf(MidPoint(RealAxis(A)), D) = a"
},
{
    "assertion": "TriangleOf ( POINT: y, LeftFocus ( CONICSECTION: q ), Incenter ( TRIANGLE: c ) ) equals TRIANGLE: r",
    "id": 4205,
    "declarations": "y: POINT; q: CONICSECTION; c: TRIANGLE; r: TRIANGLE",
    "facts": "TriangleOf(y, LeftFocus(q), Incenter(c)) = r"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: p ) ) equals LINE: K",
    "id": 4206,
    "declarations": "p: ELLIPSE; K: LINE",
    "facts": "PerpendicularBisector(ImaginaryAxis(p)) = K"
},
{
    "assertion": "LocusEquation ( LowerVertex ( CONICSECTION: K ) ) equals EXPRESSION: y*space=*spacex^3*space-*space2*x*space+*space1",
    "id": 4207,
    "declarations": "K: CONICSECTION; y*space=*spacex^3*space-*space2*x*space+*space1: EXPRESSION",
    "facts": "LocusEquation(LowerVertex(K)) = y*space=*spacex^3*space-*space2*x*space+*space1"
},
{
    "assertion": "Negation ( Slope ( LeftDirectrix ( CONICSECTION: H ) ) equals Radius ( CIRCLE: v ) ) equals BOOL: False",
    "id": 4208,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Circumcenter ( TRIANGLE: f ) equals Center ( CONICSECTION: x )",
    "id": 4209,
    "declarations": "f: TRIANGLE; x: CONICSECTION",
    "facts": "Circumcenter(f) = Center(x)"
},
{
    "assertion": "Locus ( Center ( CONICSECTION: c ) ) equals CURVE: G",
    "id": 4210,
    "declarations": "c: CONICSECTION; G: CURVE",
    "facts": "Locus(Center(c)) = G"
},
{
    "assertion": "LineSegmentOf ( LeftVertex ( CONICSECTION: i ), RightVertex ( CONICSECTION: O ) ) equals RealAxis ( ELLIPSE: p )",
    "id": 4211,
    "declarations": "i: CONICSECTION; O: CONICSECTION; p: ELLIPSE",
    "facts": "LineSegmentOf(LeftVertex(i), RightVertex(O)) = RealAxis(p)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: f ) equals LINESEGMENT: i",
    "id": 4212,
    "declarations": "f: ELLIPSE; i: LINESEGMENT",
    "facts": "MinorAxis(f) = i"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Y ) equals LeftDirectrix ( CONICSECTION: K )",
    "id": 4213,
    "declarations": "Y: CONICSECTION; K: CONICSECTION",
    "facts": "LeftDirectrix(Y) = LeftDirectrix(K)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: t ) equals POINT: O",
    "id": 4214,
    "declarations": "t: TRIANGLE; O: POINT",
    "facts": "Orthocenter(t) = O"
},
{
    "assertion": "RightPart ( HYPERBOLA: W ) equals CURVE: k",
    "id": 4215,
    "declarations": "W: HYPERBOLA; k: CURVE",
    "facts": "RightPart(W) = k"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: B ) equals LINE: X",
    "id": 4216,
    "declarations": "B: LINESEGMENT; X: LINE",
    "facts": "PerpendicularBisector(B) = X"
},
{
    "assertion": "MidPoint ( LINESEGMENT: e ) equals POINT: g",
    "id": 4217,
    "declarations": "e: LINESEGMENT; g: POINT",
    "facts": "MidPoint(e) = g"
},
{
    "assertion": "LeftVertex ( CONICSECTION: s ) equals Orthocenter ( TRIANGLE: G )",
    "id": 4218,
    "declarations": "s: CONICSECTION; G: TRIANGLE",
    "facts": "LeftVertex(s) = Orthocenter(G)"
},
{
    "assertion": "Focus ( CONICSECTION: U ) equals UpperFocus ( CONICSECTION: M )",
    "id": 4219,
    "declarations": "U: CONICSECTION; M: CONICSECTION",
    "facts": "Focus(U) = UpperFocus(M)"
},
{
    "assertion": "Intersection ( CURVE: k, RightPart ( HYPERBOLA: A ) ) equals LowerFocus ( CONICSECTION: J )",
    "id": 4220,
    "declarations": "k: CURVE; A: HYPERBOLA; J: CONICSECTION",
    "facts": "Intersection(k, RightPart(A)) = LowerFocus(J)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: M ) equals POINT: l",
    "id": 4221,
    "declarations": "M: LINESEGMENT; l: POINT",
    "facts": "Endpoint(M) = l"
},
{
    "assertion": "LeftFocus ( CONICSECTION: a ) equals LowerVertex ( CONICSECTION: i )",
    "id": 4222,
    "declarations": "a: CONICSECTION; i: CONICSECTION",
    "facts": "LeftFocus(a) = LowerVertex(i)"
},
{
    "assertion": "DotProduct ( VECTOR: P, VECTOR: s ) equals NUMBER: 36",
    "id": 4223,
    "declarations": "P: VECTOR; s: VECTOR; 36: NUMBER",
    "facts": "DotProduct(P, s) = 36"
},
{
    "assertion": "Projection ( LeftFocus ( CONICSECTION: i ), LINE: p ) equals Orthocenter ( TRIANGLE: n )",
    "id": 4224,
    "declarations": "i: CONICSECTION; p: LINE; n: TRIANGLE",
    "facts": "Projection(LeftFocus(i), p) = Orthocenter(n)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: r ) equals UpperVertex ( CONICSECTION: I )",
    "id": 4225,
    "declarations": "r: CONICSECTION; I: CONICSECTION",
    "facts": "LeftVertex(r) = UpperVertex(I)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: n ) equals Radius ( CIRCLE: F )",
    "id": 4226,
    "declarations": "n: CONICSECTION; F: CIRCLE",
    "facts": "HalfFocalLength(n) = Radius(F)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: A ) equals Orthocenter ( TRIANGLE: n )",
    "id": 4227,
    "declarations": "A: LINESEGMENT; n: TRIANGLE",
    "facts": "MidPoint(A) = Orthocenter(n)"
},
{
    "assertion": "YCoordinate ( POINT: f ) equals NUMBER: 37",
    "id": 4228,
    "declarations": "f: POINT; 37: NUMBER",
    "facts": "YCoordinate(f) = 37"
},
{
    "assertion": "Center ( CONICSECTION: n ) equals POINT: Y",
    "id": 4229,
    "declarations": "n: CONICSECTION; Y: POINT",
    "facts": "Center(n) = Y"
},
{
    "assertion": "IsOutTangent ( CIRCLE: t, CIRCLE: d ) equals BOOL: False",
    "id": 4230,
    "declarations": "t: CIRCLE; d: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(t, d) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: i ) equals LINESEGMENT: c",
    "id": 4231,
    "declarations": "i: ELLIPSE; c: LINESEGMENT",
    "facts": "MinorAxis(i) = c"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: j ) equals LINE: i",
    "id": 4232,
    "declarations": "j: CONICSECTION; i: LINE",
    "facts": "LeftDirectrix(j) = i"
},
{
    "assertion": "Quadrant ( LowerFocus ( CONICSECTION: f ) ) equals Slope ( RightDirectrix ( CONICSECTION: p ) )",
    "id": 4233,
    "declarations": "f: CONICSECTION; p: CONICSECTION",
    "facts": "Quadrant(LowerFocus(f)) = Slope(RightDirectrix(p))"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: i, TRIANGLE: B ) equals BOOL: False",
    "id": 4234,
    "declarations": "i: CIRCLE; B: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(i, B) = False"
},
{
    "assertion": "InterReciprocal ( sqrt ( NUMBER: 100 ) ) equals Inclination ( LeftDirectrix ( CONICSECTION: u ) )",
    "id": 4235,
    "declarations": "100: NUMBER; u: CONICSECTION",
    "facts": "InterReciprocal(sqrt(100)) = Inclination(LeftDirectrix(u))"
},
{
    "assertion": "LineSegmentOf ( Circumcenter ( TRIANGLE: o ), LeftVertex ( CONICSECTION: h ) ) equals LINESEGMENT: W",
    "id": 4236,
    "declarations": "o: TRIANGLE; h: CONICSECTION; W: LINESEGMENT",
    "facts": "LineSegmentOf(Circumcenter(o), LeftVertex(h)) = W"
},
{
    "assertion": "Vertex ( CONICSECTION: P ) equals Circumcenter ( TRIANGLE: Y )",
    "id": 4237,
    "declarations": "P: CONICSECTION; Y: TRIANGLE",
    "facts": "Vertex(P) = Circumcenter(Y)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: R ) equals LINE: Y",
    "id": 4238,
    "declarations": "R: HYPERBOLA; Y: LINE",
    "facts": "Asymptote(R) = Y"
},
{
    "assertion": "InterReciprocal ( NUMBER: 10 ) equals NUMBER: 89",
    "id": 4239,
    "declarations": "10: NUMBER; 89: NUMBER",
    "facts": "InterReciprocal(10) = 89"
},
{
    "assertion": "TangentOnPoint ( LowerFocus ( CONICSECTION: v ), RightPart ( HYPERBOLA: e ) ) equals RightDirectrix ( CONICSECTION: e )",
    "id": 4240,
    "declarations": "v: CONICSECTION; e: HYPERBOLA; e: CONICSECTION",
    "facts": "TangentOnPoint(LowerFocus(v), RightPart(e)) = RightDirectrix(e)"
},
{
    "assertion": "FocalLength ( CONICSECTION: c ) equals NUMBER: 58",
    "id": 4241,
    "declarations": "c: CONICSECTION; 58: NUMBER",
    "facts": "FocalLength(c) = 58"
},
{
    "assertion": "MidPoint ( InterceptChord ( OverlappingLine ( MajorAxis ( ELLIPSE: u ) ), CONICSECTION: V ) ) equals POINT: p",
    "id": 4242,
    "declarations": "u: ELLIPSE; V: CONICSECTION; p: POINT",
    "facts": "MidPoint(InterceptChord(OverlappingLine(MajorAxis(u)), V)) = p"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: J, TRIANGLE: O ) equals BOOL: False",
    "id": 4243,
    "declarations": "J: CIRCLE; O: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(J, O) = False"
},
{
    "assertion": "TriangleOf ( UpperFocus ( CONICSECTION: M ), FootPoint ( TangentOfPoint ( POINT: x, CURVE: i ), TangentOnPoint ( LowerFocus ( CONICSECTION: L ), CURVE: r ) ), Incenter ( TRIANGLE: K ) ) equals TRIANGLE: S",
    "id": 4244,
    "declarations": "M: CONICSECTION; x: POINT; i: CURVE; L: CONICSECTION; r: CURVE; K: TRIANGLE; S: TRIANGLE",
    "facts": "TriangleOf(UpperFocus(M), FootPoint(TangentOfPoint(x, i), TangentOnPoint(LowerFocus(L), r)), Incenter(K)) = S"
},
{
    "assertion": "MidPoint ( ImaginaryAxis ( ELLIPSE: q ) ) equals POINT: o",
    "id": 4245,
    "declarations": "q: ELLIPSE; o: POINT",
    "facts": "MidPoint(ImaginaryAxis(q)) = o"
},
{
    "assertion": "YCoordinate ( POINT: E ) equals NUMBER: -94",
    "id": 4246,
    "declarations": "E: POINT; -94: NUMBER",
    "facts": "YCoordinate(E) = -94"
},
{
    "assertion": "Inclination ( TangentOfPoint ( POINT: s, CURVE: d ) ) equals NUMBER: -47",
    "id": 4247,
    "declarations": "s: POINT; d: CURVE; -47: NUMBER",
    "facts": "Inclination(TangentOfPoint(s, d)) = -47"
},
{
    "assertion": "IsIntersect ( Locus ( UpperFocus ( CONICSECTION: V ) ), CURVE: d ) equals BOOL: True",
    "id": 4248,
    "declarations": "V: CONICSECTION; d: CURVE; True: BOOL",
    "facts": "IsIntersect(Locus(UpperFocus(V)), d) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: V ) equals LeftDirectrix ( CONICSECTION: E )",
    "id": 4249,
    "declarations": "V: CONICSECTION; E: CONICSECTION",
    "facts": "Directrix(V) = LeftDirectrix(E)"
},
{
    "assertion": "Abs ( LINESEGMENT: M ) equals NUMBER: 70",
    "id": 4250,
    "declarations": "M: LINESEGMENT; 70: NUMBER",
    "facts": "Abs(M) = 70"
},
{
    "assertion": "IsParallel ( LINE: D, OverlappingLine ( LINESEGMENT: V ) ) equals BOOL: True",
    "id": 4251,
    "declarations": "D: LINE; V: LINESEGMENT; True: BOOL",
    "facts": "IsParallel(D, OverlappingLine(V)) = True"
},
{
    "assertion": "ApplyUnit ( YCoordinate ( POINT: d ), DEGREESTR: degree )",
    "id": 4252,
    "declarations": "d: POINT; degree: DEGREESTR",
    "facts": "ApplyUnit(YCoordinate(d), degree) = None"
},
{
    "assertion": "RightVertex ( CONICSECTION: n ) equals RightVertex ( CONICSECTION: t )",
    "id": 4253,
    "declarations": "n: CONICSECTION; t: CONICSECTION",
    "facts": "RightVertex(n) = RightVertex(t)"
},
{
    "assertion": "Negation ( LowerFocus ( CONICSECTION: s ) equals UpperVertex ( CONICSECTION: b ) ) equals BOOL: False",
    "id": 4254,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "FocalLength ( CONICSECTION: c ) equals NUMBER: -4",
    "id": 4255,
    "declarations": "c: CONICSECTION; -4: NUMBER",
    "facts": "FocalLength(c) = -4"
},
{
    "assertion": "Circumcenter ( TRIANGLE: G ) equals Projection ( POINT: u, TangentOnPoint ( POINT: T, CURVE: t ) )",
    "id": 4256,
    "declarations": "G: TRIANGLE; u: POINT; T: POINT; t: CURVE",
    "facts": "Circumcenter(G) = Projection(u, TangentOnPoint(T, t))"
},
{
    "assertion": "RealAxis ( ELLIPSE: U ) equals MajorAxis ( ELLIPSE: g )",
    "id": 4257,
    "declarations": "U: ELLIPSE; g: ELLIPSE",
    "facts": "RealAxis(U) = MajorAxis(g)"
},
{
    "assertion": "IsChordOf ( RealAxis ( ELLIPSE: R ), CONICSECTION: c ) equals BOOL: True",
    "id": 4258,
    "declarations": "R: ELLIPSE; c: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(RealAxis(R), c) = True"
},
{
    "assertion": "Locus ( POINT: u ) equals CURVE: z",
    "id": 4259,
    "declarations": "u: POINT; z: CURVE",
    "facts": "Locus(u) = z"
},
{
    "assertion": "Between ( POINT: m, LowerFocus ( CONICSECTION: L ), LeftVertex ( CONICSECTION: U ) ) equals BOOL: False",
    "id": 4260,
    "declarations": "m: POINT; L: CONICSECTION; U: CONICSECTION; False: BOOL",
    "facts": "Between(m, LowerFocus(L), LeftVertex(U)) = False"
},
{
    "assertion": "Distance ( LeftVertex ( CONICSECTION: L ), LowerFocus ( CONICSECTION: w ) ) equals InterReciprocal ( Area ( CONICSECTION: H ) )",
    "id": 4261,
    "declarations": "L: CONICSECTION; w: CONICSECTION; H: CONICSECTION",
    "facts": "Distance(LeftVertex(L), LowerFocus(w)) = InterReciprocal(Area(H))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: s ) equals LINE: j",
    "id": 4262,
    "declarations": "s: HYPERBOLA; j: LINE",
    "facts": "Asymptote(s) = j"
},
{
    "assertion": "InterReciprocal ( Radius ( CIRCLE: t ) ) equals YCoordinate ( POINT: k )",
    "id": 4263,
    "declarations": "t: CIRCLE; k: POINT",
    "facts": "InterReciprocal(Radius(t)) = YCoordinate(k)"
},
{
    "assertion": "Projection ( RightVertex ( CONICSECTION: u ), LINE: e ) equals LowerVertex ( CONICSECTION: n )",
    "id": 4264,
    "declarations": "u: CONICSECTION; e: LINE; n: CONICSECTION",
    "facts": "Projection(RightVertex(u), e) = LowerVertex(n)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: Z ) equals Inclination ( LINE: w )",
    "id": 4265,
    "declarations": "Z: CONICSECTION; w: LINE",
    "facts": "HalfFocalLength(Z) = Inclination(w)"
},
{
    "assertion": "LocusEquation ( POINT: F ) equals EXPRESSION: x*space=*spacey^2*space-*space4*y*space+*space4",
    "id": 4266,
    "declarations": "F: POINT; x*space=*spacey^2*space-*space4*y*space+*space4: EXPRESSION",
    "facts": "LocusEquation(F) = x*space=*spacey^2*space-*space4*y*space+*space4"
},
{
    "assertion": "CircumCircle ( TRIANGLE: k ) equals CIRCLE: E",
    "id": 4267,
    "declarations": "k: TRIANGLE; E: CIRCLE",
    "facts": "CircumCircle(k) = E"
},
{
    "assertion": "Abs ( ImaginaryAxis ( ELLIPSE: D ) ) equals Slope ( LINE: o )",
    "id": 4268,
    "declarations": "D: ELLIPSE; o: LINE",
    "facts": "Abs(ImaginaryAxis(D)) = Slope(o)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: A, CIRCLE: d ) equals BOOL: True",
    "id": 4269,
    "declarations": "A: CIRCLE; d: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(A, d) = True"
},
{
    "assertion": "TangentOnPoint ( POINT: O, RightPart ( HYPERBOLA: q ) ) equals LINE: p",
    "id": 4270,
    "declarations": "O: POINT; q: HYPERBOLA; p: LINE",
    "facts": "TangentOnPoint(O, RightPart(q)) = p"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: l ) equals Abs ( LINESEGMENT: e )",
    "id": 4271,
    "declarations": "l: CONICSECTION; e: LINESEGMENT",
    "facts": "HalfFocalLength(l) = Abs(e)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: z ) equals RightDirectrix ( CONICSECTION: H )",
    "id": 4272,
    "declarations": "z: CONICSECTION; H: CONICSECTION",
    "facts": "LeftDirectrix(z) = RightDirectrix(H)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: A ) equals LINE: g",
    "id": 4273,
    "declarations": "A: HYPERBOLA; g: LINE",
    "facts": "Asymptote(A) = g"
},
{
    "assertion": "Slope ( LINE: U ) equals NUMBER: 16",
    "id": 4274,
    "declarations": "U: LINE; 16: NUMBER",
    "facts": "Slope(U) = 16"
},
{
    "assertion": "DotProduct ( VECTOR: j, VECTOR: i ) equals XCoordinate ( Center ( CONICSECTION: r ) )",
    "id": 4275,
    "declarations": "j: VECTOR; i: VECTOR; r: CONICSECTION",
    "facts": "DotProduct(j, i) = XCoordinate(Center(r))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: x ) equals Orthocenter ( TRIANGLE: x )",
    "id": 4276,
    "declarations": "x: LINESEGMENT; x: TRIANGLE",
    "facts": "Endpoint(x) = Orthocenter(x)"
},
{
    "assertion": "Negation ( Center ( CONICSECTION: T ) equals POINT: l ) equals BOOL: True",
    "id": 4277,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Circumcenter ( TRIANGLE: D ) equals POINT: d",
    "id": 4278,
    "declarations": "D: TRIANGLE; d: POINT",
    "facts": "Circumcenter(D) = d"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: Y, TRIANGLE: Y ) equals BOOL: True",
    "id": 4279,
    "declarations": "Y: CIRCLE; Y: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(Y, Y) = True"
},
{
    "assertion": "sqrt ( Inclination ( RightDirectrix ( CONICSECTION: T ) ) ) equals lg ( Slope ( LINE: v ) )",
    "id": 4280,
    "declarations": "T: CONICSECTION; v: LINE",
    "facts": "sqrt(Inclination(RightDirectrix(T))) = lg(Slope(v))"
},
{
    "assertion": "Locus ( Projection ( UpperVertex ( CONICSECTION: X ), LINE: Z ) ) equals CURVE: y",
    "id": 4281,
    "declarations": "X: CONICSECTION; Z: LINE; y: CURVE",
    "facts": "Locus(Projection(UpperVertex(X), Z)) = y"
},
{
    "assertion": "Slope ( LINE: Y ) equals Eccentricity ( CONICSECTION: w )",
    "id": 4282,
    "declarations": "Y: LINE; w: CONICSECTION",
    "facts": "Slope(Y) = Eccentricity(w)"
},
{
    "assertion": "XCoordinate ( Circumcenter ( TRIANGLE: X ) ) equals NumIntersection ( CURVE: H, CURVE: h )",
    "id": 4283,
    "declarations": "X: TRIANGLE; H: CURVE; h: CURVE",
    "facts": "XCoordinate(Circumcenter(X)) = NumIntersection(H, h)"
},
{
    "assertion": "Slope ( LINE: p ) equals NUMBER: 45",
    "id": 4284,
    "declarations": "p: LINE; 45: NUMBER",
    "facts": "Slope(p) = 45"
},
{
    "assertion": "LineOf ( RightFocus ( CONICSECTION: M ), Circumcenter ( TRIANGLE: B ) ) equals LINE: G",
    "id": 4285,
    "declarations": "M: CONICSECTION; B: TRIANGLE; G: LINE",
    "facts": "LineOf(RightFocus(M), Circumcenter(B)) = G"
},
{
    "assertion": "LocusEquation ( MidPoint ( ImaginaryAxis ( ELLIPSE: o ) ) ) equals EXPRESSION: y*space=*space2x*space+*space3",
    "id": 4286,
    "declarations": "o: ELLIPSE; y*space=*space2x*space+*space3: EXPRESSION",
    "facts": "LocusEquation(MidPoint(ImaginaryAxis(o))) = y*space=*space2x*space+*space3"
},
{
    "assertion": "UpperFocus ( CONICSECTION: v ) equals LowerVertex ( CONICSECTION: Y )",
    "id": 4287,
    "declarations": "v: CONICSECTION; Y: CONICSECTION",
    "facts": "UpperFocus(v) = LowerVertex(Y)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: V, TRIANGLE: p ) equals BOOL: False",
    "id": 4288,
    "declarations": "V: CIRCLE; p: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(V, p) = False"
},
{
    "assertion": "Projection ( POINT: o, LINE: L ) equals MidPoint ( LINESEGMENT: Y )",
    "id": 4289,
    "declarations": "o: POINT; L: LINE; Y: LINESEGMENT",
    "facts": "Projection(o, L) = MidPoint(Y)"
},
{
    "assertion": "Incenter ( TRIANGLE: H ) equals POINT: y",
    "id": 4290,
    "declarations": "H: TRIANGLE; y: POINT",
    "facts": "Incenter(H) = y"
},
{
    "assertion": "Area ( CONICSECTION: F ) equals NUMBER: -7",
    "id": 4291,
    "declarations": "F: CONICSECTION; -7: NUMBER",
    "facts": "Area(F) = -7"
},
{
    "assertion": "Max ( NUMBER: 77 ) equals lg ( Slope ( LINE: Y ) )",
    "id": 4292,
    "declarations": "77: NUMBER; Y: LINE",
    "facts": "Max(77) = lg(Slope(Y))"
},
{
    "assertion": "XCoordinate ( Circumcenter ( TRIANGLE: E ) ) equals NUMBER: 17",
    "id": 4293,
    "declarations": "E: TRIANGLE; 17: NUMBER",
    "facts": "XCoordinate(Circumcenter(E)) = 17"
},
{
    "assertion": "Directrix ( CONICSECTION: L ) equals RightDirectrix ( CONICSECTION: H )",
    "id": 4294,
    "declarations": "L: CONICSECTION; H: CONICSECTION",
    "facts": "Directrix(L) = RightDirectrix(H)"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: P ) ) equals LINE: i",
    "id": 4295,
    "declarations": "P: ELLIPSE; i: LINE",
    "facts": "OverlappingLine(MinorAxis(P)) = i"
},
{
    "assertion": "CircumCircle ( TRIANGLE: N ) equals CIRCLE: Q",
    "id": 4296,
    "declarations": "N: TRIANGLE; Q: CIRCLE",
    "facts": "CircumCircle(N) = Q"
},
{
    "assertion": "Expression ( CURVE: D ) equals LocusEquation ( POINT: k )",
    "id": 4297,
    "declarations": "D: CURVE; k: POINT",
    "facts": "Expression(D) = LocusEquation(k)"
},
{
    "assertion": "IsParallel ( RightDirectrix ( CONICSECTION: U ), LINE: e ) equals BOOL: True",
    "id": 4298,
    "declarations": "U: CONICSECTION; e: LINE; True: BOOL",
    "facts": "IsParallel(RightDirectrix(U), e) = True"
},
{
    "assertion": "Min ( Abs ( LINESEGMENT: P ) ) equals InterReciprocal ( Quadrant ( LeftVertex ( CONICSECTION: I ) ) )",
    "id": 4299,
    "declarations": "P: LINESEGMENT; I: CONICSECTION",
    "facts": "Min(Abs(P)) = InterReciprocal(Quadrant(LeftVertex(I)))"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: C ) equals AXIS: yAxis",
    "id": 4300,
    "declarations": "C: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(C) = yAxis"
},
{
    "assertion": "Focus ( CONICSECTION: r ) equals Incenter ( TRIANGLE: h )",
    "id": 4301,
    "declarations": "r: CONICSECTION; h: TRIANGLE",
    "facts": "Focus(r) = Incenter(h)"
},
{
    "assertion": "XCoordinate ( POINT: z ) equals NUMBER: -19",
    "id": 4302,
    "declarations": "z: POINT; -19: NUMBER",
    "facts": "XCoordinate(z) = -19"
},
{
    "assertion": "Diameter ( CIRCLE: T ) equals InterReciprocal ( HalfFocalLength ( CONICSECTION: B ) )",
    "id": 4303,
    "declarations": "T: CIRCLE; B: CONICSECTION",
    "facts": "Diameter(T) = InterReciprocal(HalfFocalLength(B))"
},
{
    "assertion": "IsCircumCircle ( CircumCircle ( TRIANGLE: t ), TRIANGLE: T ) equals BOOL: False",
    "id": 4304,
    "declarations": "t: TRIANGLE; T: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(CircumCircle(t), T) = False"
},
{
    "assertion": "Focus ( CONICSECTION: u ) equals LeftFocus ( CONICSECTION: n )",
    "id": 4305,
    "declarations": "u: CONICSECTION; n: CONICSECTION",
    "facts": "Focus(u) = LeftFocus(n)"
},
{
    "assertion": "Abs ( LINESEGMENT: r ) equals Quadrant ( POINT: n )",
    "id": 4306,
    "declarations": "r: LINESEGMENT; n: POINT",
    "facts": "Abs(r) = Quadrant(n)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: g ) equals OverlappingLine ( LINESEGMENT: E )",
    "id": 4307,
    "declarations": "g: CONICSECTION; E: LINESEGMENT",
    "facts": "RightDirectrix(g) = OverlappingLine(E)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: m ) equals UpperVertex ( CONICSECTION: l )",
    "id": 4308,
    "declarations": "m: LINESEGMENT; l: CONICSECTION",
    "facts": "Endpoint(m) = UpperVertex(l)"
},
{
    "assertion": "Min ( NUMBER: -37 ) equals Min ( HalfFocalLength ( CONICSECTION: w ) )",
    "id": 4309,
    "declarations": "-37: NUMBER; w: CONICSECTION",
    "facts": "Min(-37) = Min(HalfFocalLength(w))"
},
{
    "assertion": "Between ( POINT: L, POINT: G, Center ( CONICSECTION: w ) ) equals BOOL: False",
    "id": 4310,
    "declarations": "L: POINT; G: POINT; w: CONICSECTION; False: BOOL",
    "facts": "Between(L, G, Center(w)) = False"
},
{
    "assertion": "MidPoint ( InterceptChord ( LINE: V, CONICSECTION: E ) ) equals Orthocenter ( TRIANGLE: l )",
    "id": 4311,
    "declarations": "V: LINE; E: CONICSECTION; l: TRIANGLE",
    "facts": "MidPoint(InterceptChord(V, E)) = Orthocenter(l)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: J ) equals MidPoint ( LineSegmentOf ( UpperFocus ( CONICSECTION: z ), UpperFocus ( CONICSECTION: I ) ) )",
    "id": 4312,
    "declarations": "J: TRIANGLE; z: CONICSECTION; I: CONICSECTION",
    "facts": "Circumcenter(J) = MidPoint(LineSegmentOf(UpperFocus(z), UpperFocus(I)))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: A ) equals LeftFocus ( CONICSECTION: f )",
    "id": 4313,
    "declarations": "A: CONICSECTION; f: CONICSECTION",
    "facts": "LeftFocus(A) = LeftFocus(f)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: A ) equals POINT: Z",
    "id": 4314,
    "declarations": "A: CONICSECTION; Z: POINT",
    "facts": "UpperFocus(A) = Z"
},
{
    "assertion": "UpperFocus ( CONICSECTION: w ) equals POINT: W",
    "id": 4315,
    "declarations": "w: CONICSECTION; W: POINT",
    "facts": "UpperFocus(w) = W"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: N ) equals PerpendicularBisector ( LINESEGMENT: F )",
    "id": 4316,
    "declarations": "N: CONICSECTION; F: LINESEGMENT",
    "facts": "LeftDirectrix(N) = PerpendicularBisector(F)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: C ) equals LeftFocus ( CONICSECTION: h )",
    "id": 4317,
    "declarations": "C: CONICSECTION; h: CONICSECTION",
    "facts": "LeftVertex(C) = LeftFocus(h)"
},
{
    "assertion": "Length ( LINESEGMENT: Y ) equals XCoordinate ( LowerFocus ( CONICSECTION: Q ) )",
    "id": 4318,
    "declarations": "Y: LINESEGMENT; Q: CONICSECTION",
    "facts": "Length(Y) = XCoordinate(LowerFocus(Q))"
},
{
    "assertion": "TriangleOf ( UpperFocus ( CONICSECTION: N ), UpperVertex ( CONICSECTION: T ), UpperFocus ( CONICSECTION: s ) ) equals TRIANGLE: N",
    "id": 4319,
    "declarations": "N: CONICSECTION; T: CONICSECTION; s: CONICSECTION; N: TRIANGLE",
    "facts": "TriangleOf(UpperFocus(N), UpperVertex(T), UpperFocus(s)) = N"
},
{
    "assertion": "VectorOf ( LowerVertex ( CONICSECTION: U ), LeftVertex ( CONICSECTION: e ) ) equals VECTOR: a",
    "id": 4320,
    "declarations": "U: CONICSECTION; e: CONICSECTION; a: VECTOR",
    "facts": "VectorOf(LowerVertex(U), LeftVertex(e)) = a"
},
{
    "assertion": "And ( IsIntersect ( CURVE: C, CURVE: U ) equals BOOL: True, IsInscribedCircle ( CIRCLE: F, TriangleOf ( LeftVertex ( CONICSECTION: O ), POINT: p, POINT: Z ) ) equals BOOL: True ) equals BOOL: True",
    "id": 4321,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "sqrt ( Eccentricity ( CONICSECTION: U ) ) equals NUMBER: 61",
    "id": 4322,
    "declarations": "U: CONICSECTION; 61: NUMBER",
    "facts": "sqrt(Eccentricity(U)) = 61"
},
{
    "assertion": "DotProduct ( VECTOR: Q, VECTOR: f ) equals Min ( Min ( InterReciprocal ( Slope ( PerpendicularBisector ( MinorAxis ( ELLIPSE: E ) ) ) ) ) )",
    "id": 4323,
    "declarations": "Q: VECTOR; f: VECTOR; E: ELLIPSE",
    "facts": "DotProduct(Q, f) = Min(Min(InterReciprocal(Slope(PerpendicularBisector(MinorAxis(E))))))"
},
{
    "assertion": "Quadrant ( POINT: f ) equals NUMBER: -43",
    "id": 4324,
    "declarations": "f: POINT; -43: NUMBER",
    "facts": "Quadrant(f) = -43"
},
{
    "assertion": "Endpoint ( LINESEGMENT: c ) equals LeftFocus ( CONICSECTION: m )",
    "id": 4325,
    "declarations": "c: LINESEGMENT; m: CONICSECTION",
    "facts": "Endpoint(c) = LeftFocus(m)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: a ) equals LINESEGMENT: P",
    "id": 4326,
    "declarations": "a: ELLIPSE; P: LINESEGMENT",
    "facts": "MinorAxis(a) = P"
},
{
    "assertion": "Vertex ( CONICSECTION: r ) equals POINT: S",
    "id": 4327,
    "declarations": "r: CONICSECTION; S: POINT",
    "facts": "Vertex(r) = S"
},
{
    "assertion": "RightVertex ( CONICSECTION: s ) equals Center ( CONICSECTION: k )",
    "id": 4328,
    "declarations": "s: CONICSECTION; k: CONICSECTION",
    "facts": "RightVertex(s) = Center(k)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: N ) equals Slope ( LINE: f )",
    "id": 4329,
    "declarations": "N: CONICSECTION; f: LINE",
    "facts": "HalfFocalLength(N) = Slope(f)"
},
{
    "assertion": "NumIntersection ( CURVE: N, Locus ( MidPoint ( MinorAxis ( ELLIPSE: g ) ) ) ) equals Distance ( Incenter ( TRIANGLE: A ), POINT: X )",
    "id": 4330,
    "declarations": "N: CURVE; g: ELLIPSE; A: TRIANGLE; X: POINT",
    "facts": "NumIntersection(N, Locus(MidPoint(MinorAxis(g)))) = Distance(Incenter(A), X)"
},
{
    "assertion": "Coordinate ( FootPoint ( LINE: n, LINE: y ) ) equals ( NUMBER: -50, NUMBER: -63 )",
    "id": 4331,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Endpoint ( InterceptChord ( LeftDirectrix ( CONICSECTION: Z ), CONICSECTION: P ) ) equals Center ( CONICSECTION: f )",
    "id": 4332,
    "declarations": "Z: CONICSECTION; P: CONICSECTION; f: CONICSECTION",
    "facts": "Endpoint(InterceptChord(LeftDirectrix(Z), P)) = Center(f)"
},
{
    "assertion": "lg ( Inclination ( LINE: k ) ) equals Perimeter ( CONICSECTION: L )",
    "id": 4333,
    "declarations": "k: LINE; L: CONICSECTION",
    "facts": "lg(Inclination(k)) = Perimeter(L)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: A ) equals Projection ( LeftVertex ( CONICSECTION: L ), OverlappingLine ( LINESEGMENT: d ) )",
    "id": 4334,
    "declarations": "A: CONICSECTION; L: CONICSECTION; d: LINESEGMENT",
    "facts": "LowerFocus(A) = Projection(LeftVertex(L), OverlappingLine(d))"
},
{
    "assertion": "PerpendicularBisector ( MinorAxis ( ELLIPSE: r ) ) equals LINE: Z",
    "id": 4335,
    "declarations": "r: ELLIPSE; Z: LINE",
    "facts": "PerpendicularBisector(MinorAxis(r)) = Z"
},
{
    "assertion": "UpperVertex ( CONICSECTION: J ) equals LeftFocus ( CONICSECTION: c )",
    "id": 4336,
    "declarations": "J: CONICSECTION; c: CONICSECTION",
    "facts": "UpperVertex(J) = LeftFocus(c)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: j ) equals CIRCLE: y",
    "id": 4337,
    "declarations": "j: TRIANGLE; y: CIRCLE",
    "facts": "CircumCircle(j) = y"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: U ) ) equals Quadrant ( LeftVertex ( CONICSECTION: C ) )",
    "id": 4338,
    "declarations": "U: TRIANGLE; C: CONICSECTION",
    "facts": "Radius(CircumCircle(U)) = Quadrant(LeftVertex(C))"
},
{
    "assertion": "Min ( Min ( NUMBER: 20 ) ) equals Diameter ( CIRCLE: u )",
    "id": 4339,
    "declarations": "20: NUMBER; u: CIRCLE",
    "facts": "Min(Min(20)) = Diameter(u)"
},
{
    "assertion": "sqrt ( lg ( NUMBER: 0 ) ) equals XCoordinate ( Orthocenter ( TRIANGLE: I ) )",
    "id": 4340,
    "declarations": "0: NUMBER; I: TRIANGLE",
    "facts": "sqrt(lg(0)) = XCoordinate(Orthocenter(I))"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: f ) ) equals LineOf ( POINT: w, POINT: F )",
    "id": 4341,
    "declarations": "f: ELLIPSE; w: POINT; F: POINT",
    "facts": "PerpendicularBisector(ImaginaryAxis(f)) = LineOf(w, F)"
},
{
    "assertion": "Quadrant ( RightVertex ( CONICSECTION: p ) ) equals Slope ( LINE: a )",
    "id": 4342,
    "declarations": "p: CONICSECTION; a: LINE",
    "facts": "Quadrant(RightVertex(p)) = Slope(a)"
},
{
    "assertion": "RightVertex ( CONICSECTION: M ) equals RightFocus ( CONICSECTION: k )",
    "id": 4343,
    "declarations": "M: CONICSECTION; k: CONICSECTION",
    "facts": "RightVertex(M) = RightFocus(k)"
},
{
    "assertion": "ApplyUnit ( Radius ( CIRCLE: H ), DEGREESTR: degree )",
    "id": 4344,
    "declarations": "H: CIRCLE; degree: DEGREESTR",
    "facts": "ApplyUnit(Radius(H), degree) = None"
},
{
    "assertion": "Area ( CONICSECTION: O ) equals InterReciprocal ( XCoordinate ( POINT: S ) )",
    "id": 4345,
    "declarations": "O: CONICSECTION; S: POINT",
    "facts": "Area(O) = InterReciprocal(XCoordinate(S))"
},
{
    "assertion": "InterceptChord ( RightDirectrix ( CONICSECTION: k ), CONICSECTION: Z ) equals LINESEGMENT: q",
    "id": 4346,
    "declarations": "k: CONICSECTION; Z: CONICSECTION; q: LINESEGMENT",
    "facts": "InterceptChord(RightDirectrix(k), Z) = q"
},
{
    "assertion": "LineSegmentOf ( LowerFocus ( CONICSECTION: I ), POINT: X ) equals MinorAxis ( ELLIPSE: R )",
    "id": 4347,
    "declarations": "I: CONICSECTION; X: POINT; R: ELLIPSE",
    "facts": "LineSegmentOf(LowerFocus(I), X) = MinorAxis(R)"
},
{
    "assertion": "TangentPoint ( LINE: t, CIRCLE: T ) equals MidPoint ( LINESEGMENT: F )",
    "id": 4348,
    "declarations": "t: LINE; T: CIRCLE; F: LINESEGMENT",
    "facts": "TangentPoint(t, T) = MidPoint(F)"
},
{
    "assertion": "ApplyUnit ( InterReciprocal ( Length ( LINESEGMENT: A ) ), DEGREESTR: degree )",
    "id": 4349,
    "declarations": "A: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(InterReciprocal(Length(A)), degree) = None"
},
{
    "assertion": "Orthocenter ( TRIANGLE: o ) equals LeftVertex ( CONICSECTION: G )",
    "id": 4350,
    "declarations": "o: TRIANGLE; G: CONICSECTION",
    "facts": "Orthocenter(o) = LeftVertex(G)"
},
{
    "assertion": "RightVertex ( CONICSECTION: l ) equals POINT: Q",
    "id": 4351,
    "declarations": "l: CONICSECTION; Q: POINT",
    "facts": "RightVertex(l) = Q"
},
{
    "assertion": "DotProduct ( VECTOR: j, VECTOR: w ) equals FocalLength ( CONICSECTION: X )",
    "id": 4352,
    "declarations": "j: VECTOR; w: VECTOR; X: CONICSECTION",
    "facts": "DotProduct(j, w) = FocalLength(X)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: f ) equals UpperFocus ( CONICSECTION: y )",
    "id": 4353,
    "declarations": "f: LINESEGMENT; y: CONICSECTION",
    "facts": "Endpoint(f) = UpperFocus(y)"
},
{
    "assertion": "Locus ( RightVertex ( CONICSECTION: N ) ) equals CURVE: Q",
    "id": 4354,
    "declarations": "N: CONICSECTION; Q: CURVE",
    "facts": "Locus(RightVertex(N)) = Q"
},
{
    "assertion": "UpperFocus ( CONICSECTION: F ) equals POINT: n",
    "id": 4355,
    "declarations": "F: CONICSECTION; n: POINT",
    "facts": "UpperFocus(F) = n"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: u ) equals LINE: e",
    "id": 4356,
    "declarations": "u: CONICSECTION; e: LINE",
    "facts": "LeftDirectrix(u) = e"
},
{
    "assertion": "IsParallel ( TangentOfPoint ( POINT: W, RightPart ( HYPERBOLA: R ) ), LINE: e ) equals BOOL: False",
    "id": 4357,
    "declarations": "W: POINT; R: HYPERBOLA; e: LINE; False: BOOL",
    "facts": "IsParallel(TangentOfPoint(W, RightPart(R)), e) = False"
},
{
    "assertion": "Asymptote ( HYPERBOLA: W ) equals LINE: u",
    "id": 4358,
    "declarations": "W: HYPERBOLA; u: LINE",
    "facts": "Asymptote(W) = u"
},
{
    "assertion": "Locus ( POINT: q ) equals LeftPart ( HYPERBOLA: G )",
    "id": 4359,
    "declarations": "q: POINT; G: HYPERBOLA",
    "facts": "Locus(q) = LeftPart(G)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: e ) equals UpperVertex ( CONICSECTION: w )",
    "id": 4360,
    "declarations": "e: CONICSECTION; w: CONICSECTION",
    "facts": "UpperVertex(e) = UpperVertex(w)"
},
{
    "assertion": "sqrt ( XCoordinate ( Orthocenter ( TRIANGLE: P ) ) ) equals NUMBER: -8",
    "id": 4361,
    "declarations": "P: TRIANGLE; -8: NUMBER",
    "facts": "sqrt(XCoordinate(Orthocenter(P))) = -8"
},
{
    "assertion": "TangentOfPoint ( Projection ( Circumcenter ( TRIANGLE: l ), LINE: t ), CURVE: N ) equals LINE: b",
    "id": 4362,
    "declarations": "l: TRIANGLE; t: LINE; N: CURVE; b: LINE",
    "facts": "TangentOfPoint(Projection(Circumcenter(l), t), N) = b"
},
{
    "assertion": "lg ( Quadrant ( POINT: O ) ) equals HalfFocalLength ( CONICSECTION: j )",
    "id": 4363,
    "declarations": "O: POINT; j: CONICSECTION",
    "facts": "lg(Quadrant(O)) = HalfFocalLength(j)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: H ) equals LINESEGMENT: k",
    "id": 4364,
    "declarations": "H: ELLIPSE; k: LINESEGMENT",
    "facts": "MinorAxis(H) = k"
},
{
    "assertion": "Slope ( LINE: B ) equals Distance ( POINT: i, POINT: M )",
    "id": 4365,
    "declarations": "B: LINE; i: POINT; M: POINT",
    "facts": "Slope(B) = Distance(i, M)"
},
{
    "assertion": "Radius ( CIRCLE: e ) equals YCoordinate ( LeftVertex ( CONICSECTION: U ) )",
    "id": 4366,
    "declarations": "e: CIRCLE; U: CONICSECTION",
    "facts": "Radius(e) = YCoordinate(LeftVertex(U))"
},
{
    "assertion": "Diameter ( CIRCLE: Z ) equals Area ( CONICSECTION: d )",
    "id": 4367,
    "declarations": "Z: CIRCLE; d: CONICSECTION",
    "facts": "Diameter(Z) = Area(d)"
},
{
    "assertion": "Focus ( CONICSECTION: Y ) equals POINT: s",
    "id": 4368,
    "declarations": "Y: CONICSECTION; s: POINT",
    "facts": "Focus(Y) = s"
},
{
    "assertion": "LeftVertex ( CONICSECTION: f ) equals UpperVertex ( CONICSECTION: G )",
    "id": 4369,
    "declarations": "f: CONICSECTION; G: CONICSECTION",
    "facts": "LeftVertex(f) = UpperVertex(G)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: E ) equals RealAxis ( ELLIPSE: h )",
    "id": 4370,
    "declarations": "E: ELLIPSE; h: ELLIPSE",
    "facts": "MinorAxis(E) = RealAxis(h)"
},
{
    "assertion": "LocusEquation ( Circumcenter ( TriangleOf ( UpperVertex ( CONICSECTION: y ), Projection ( POINT: v, LINE: b ), Orthocenter ( TRIANGLE: Q ) ) ) ) equals EXPRESSION: x^2*space-*spacey^2*space=*space1",
    "id": 4371,
    "declarations": "y: CONICSECTION; v: POINT; b: LINE; Q: TRIANGLE; x^2*space-*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(Circumcenter(TriangleOf(UpperVertex(y), Projection(v, b), Orthocenter(Q)))) = x^2*space-*spacey^2*space=*space1"
},
{
    "assertion": "IsIntersect ( CURVE: u, CURVE: Y ) equals BOOL: True",
    "id": 4372,
    "declarations": "u: CURVE; Y: CURVE; True: BOOL",
    "facts": "IsIntersect(u, Y) = True"
},
{
    "assertion": "RightVertex ( CONICSECTION: t ) equals POINT: U",
    "id": 4373,
    "declarations": "t: CONICSECTION; U: POINT",
    "facts": "RightVertex(t) = U"
},
{
    "assertion": "TangentOfPoint ( UpperFocus ( CONICSECTION: u ), CURVE: B ) equals LINE: Q",
    "id": 4374,
    "declarations": "u: CONICSECTION; B: CURVE; Q: LINE",
    "facts": "TangentOfPoint(UpperFocus(u), B) = Q"
},
{
    "assertion": "LowerVertex ( CONICSECTION: L ) equals POINT: B",
    "id": 4375,
    "declarations": "L: CONICSECTION; B: POINT",
    "facts": "LowerVertex(L) = B"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: T, TRIANGLE: W ) equals BOOL: True",
    "id": 4376,
    "declarations": "T: CIRCLE; W: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(T, W) = True"
},
{
    "assertion": "Asymptote ( HYPERBOLA: g ) equals PerpendicularBisector ( LINESEGMENT: m )",
    "id": 4377,
    "declarations": "g: HYPERBOLA; m: LINESEGMENT",
    "facts": "Asymptote(g) = PerpendicularBisector(m)"
},
{
    "assertion": "Focus ( CONICSECTION: Q ) equals POINT: S",
    "id": 4378,
    "declarations": "Q: CONICSECTION; S: POINT",
    "facts": "Focus(Q) = S"
},
{
    "assertion": "LowerFocus ( CONICSECTION: O ) equals POINT: K",
    "id": 4379,
    "declarations": "O: CONICSECTION; K: POINT",
    "facts": "LowerFocus(O) = K"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: Q ) equals LINE: n",
    "id": 4380,
    "declarations": "Q: LINESEGMENT; n: LINE",
    "facts": "OverlappingLine(Q) = n"
},
{
    "assertion": "LeftVertex ( CONICSECTION: h ) equals RightVertex ( CONICSECTION: y )",
    "id": 4381,
    "declarations": "h: CONICSECTION; y: CONICSECTION",
    "facts": "LeftVertex(h) = RightVertex(y)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: m ) equals LineOf ( LeftVertex ( CONICSECTION: C ), POINT: a )",
    "id": 4382,
    "declarations": "m: CONICSECTION; C: CONICSECTION; a: POINT",
    "facts": "RightDirectrix(m) = LineOf(LeftVertex(C), a)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: e ) equals CURVE: C",
    "id": 4383,
    "declarations": "e: HYPERBOLA; C: CURVE",
    "facts": "LeftPart(e) = C"
},
{
    "assertion": "RightVertex ( CONICSECTION: e ) equals POINT: c",
    "id": 4384,
    "declarations": "e: CONICSECTION; c: POINT",
    "facts": "RightVertex(e) = c"
},
{
    "assertion": "YCoordinate ( LeftFocus ( CONICSECTION: O ) ) equals Eccentricity ( CONICSECTION: r )",
    "id": 4385,
    "declarations": "O: CONICSECTION; r: CONICSECTION",
    "facts": "YCoordinate(LeftFocus(O)) = Eccentricity(r)"
},
{
    "assertion": "Negation ( FocalLength ( CONICSECTION: J ) equals Intercept ( LINE: L, AXIS: yAxis ) ) equals BOOL: False",
    "id": 4386,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Orthocenter ( TRIANGLE: C ) equals UpperFocus ( CONICSECTION: s )",
    "id": 4387,
    "declarations": "C: TRIANGLE; s: CONICSECTION",
    "facts": "Orthocenter(C) = UpperFocus(s)"
},
{
    "assertion": "Projection ( LowerVertex ( CONICSECTION: W ), LeftDirectrix ( CONICSECTION: Y ) ) equals UpperFocus ( CONICSECTION: S )",
    "id": 4388,
    "declarations": "W: CONICSECTION; Y: CONICSECTION; S: CONICSECTION",
    "facts": "Projection(LowerVertex(W), LeftDirectrix(Y)) = UpperFocus(S)"
},
{
    "assertion": "TriangleOf ( MidPoint ( RealAxis ( ELLIPSE: j ) ), Projection ( Center ( CONICSECTION: G ), LINE: W ), POINT: x ) equals TRIANGLE: F",
    "id": 4389,
    "declarations": "j: ELLIPSE; G: CONICSECTION; W: LINE; x: POINT; F: TRIANGLE",
    "facts": "TriangleOf(MidPoint(RealAxis(j)), Projection(Center(G), W), x) = F"
},
{
    "assertion": "InterReciprocal ( Distance ( POINT: o, POINT: D ) ) equals Min ( sqrt ( NUMBER: -71 ) )",
    "id": 4390,
    "declarations": "o: POINT; D: POINT; -71: NUMBER",
    "facts": "InterReciprocal(Distance(o, D)) = Min(sqrt(-71))"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: k ) equals AXIS: xAxis",
    "id": 4391,
    "declarations": "k: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(k) = xAxis"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: U ) equals LINE: l",
    "id": 4392,
    "declarations": "U: CONICSECTION; l: LINE",
    "facts": "LeftDirectrix(U) = l"
},
{
    "assertion": "Slope ( LINE: B ) equals Area ( CONICSECTION: h )",
    "id": 4393,
    "declarations": "B: LINE; h: CONICSECTION",
    "facts": "Slope(B) = Area(h)"
},
{
    "assertion": "Incenter ( TRIANGLE: h ) equals MidPoint ( LINESEGMENT: K )",
    "id": 4394,
    "declarations": "h: TRIANGLE; K: LINESEGMENT",
    "facts": "Incenter(h) = MidPoint(K)"
},
{
    "assertion": "InterReciprocal ( NUMBER: -36 ) equals Distance ( Circumcenter ( TRIANGLE: I ), POINT: i )",
    "id": 4395,
    "declarations": "-36: NUMBER; I: TRIANGLE; i: POINT",
    "facts": "InterReciprocal(-36) = Distance(Circumcenter(I), i)"
},
{
    "assertion": "IsInTangent ( CIRCLE: Y, CIRCLE: x ) equals BOOL: True",
    "id": 4396,
    "declarations": "Y: CIRCLE; x: CIRCLE; True: BOOL",
    "facts": "IsInTangent(Y, x) = True"
},
{
    "assertion": "IsOutTangent ( CIRCLE: h, CIRCLE: J ) equals BOOL: True",
    "id": 4397,
    "declarations": "h: CIRCLE; J: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(h, J) = True"
},
{
    "assertion": "IsOutTangent ( CIRCLE: x, CIRCLE: y ) equals BOOL: False",
    "id": 4398,
    "declarations": "x: CIRCLE; y: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(x, y) = False"
},
{
    "assertion": "Coordinate ( POINT: i ) equals ( HalfFocalLength ( CONICSECTION: H ), Quadrant ( POINT: e ) )",
    "id": 4399,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsInTangent ( CIRCLE: G, CIRCLE: j ) equals BOOL: True",
    "id": 4400,
    "declarations": "G: CIRCLE; j: CIRCLE; True: BOOL",
    "facts": "IsInTangent(G, j) = True"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: K ) equals AXIS: xAxis",
    "id": 4401,
    "declarations": "K: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(K) = xAxis"
},
{
    "assertion": "LeftPart ( HYPERBOLA: y ) equals CURVE: h",
    "id": 4402,
    "declarations": "y: HYPERBOLA; h: CURVE",
    "facts": "LeftPart(y) = h"
},
{
    "assertion": "TriangleOf ( LowerVertex ( CONICSECTION: S ), POINT: h, Circumcenter ( TRIANGLE: w ) ) equals TRIANGLE: I",
    "id": 4403,
    "declarations": "S: CONICSECTION; h: POINT; w: TRIANGLE; I: TRIANGLE",
    "facts": "TriangleOf(LowerVertex(S), h, Circumcenter(w)) = I"
},
{
    "assertion": "DotProduct ( VECTOR: c, VECTOR: K ) equals NUMBER: 26",
    "id": 4404,
    "declarations": "c: VECTOR; K: VECTOR; 26: NUMBER",
    "facts": "DotProduct(c, K) = 26"
},
{
    "assertion": "YCoordinate ( Circumcenter ( TRIANGLE: k ) ) equals Radius ( CIRCLE: f )",
    "id": 4405,
    "declarations": "k: TRIANGLE; f: CIRCLE",
    "facts": "YCoordinate(Circumcenter(k)) = Radius(f)"
},
{
    "assertion": "Projection ( Circumcenter ( TRIANGLE: i ), TangentOnPoint ( Orthocenter ( TRIANGLE: d ), CURVE: O ) ) equals POINT: m",
    "id": 4406,
    "declarations": "i: TRIANGLE; d: TRIANGLE; O: CURVE; m: POINT",
    "facts": "Projection(Circumcenter(i), TangentOnPoint(Orthocenter(d), O)) = m"
},
{
    "assertion": "FocalLength ( CONICSECTION: j ) equals Length ( LINESEGMENT: m )",
    "id": 4407,
    "declarations": "j: CONICSECTION; m: LINESEGMENT",
    "facts": "FocalLength(j) = Length(m)"
},
{
    "assertion": "FootPoint ( LINE: N, LINE: F ) equals MidPoint ( LINESEGMENT: o )",
    "id": 4408,
    "declarations": "N: LINE; F: LINE; o: LINESEGMENT",
    "facts": "FootPoint(N, F) = MidPoint(o)"
},
{
    "assertion": "Vertex ( CONICSECTION: M ) equals UpperVertex ( CONICSECTION: y )",
    "id": 4409,
    "declarations": "M: CONICSECTION; y: CONICSECTION",
    "facts": "Vertex(M) = UpperVertex(y)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: i ) equals LINE: t",
    "id": 4410,
    "declarations": "i: HYPERBOLA; t: LINE",
    "facts": "Asymptote(i) = t"
},
{
    "assertion": "Focus ( CONICSECTION: k ) equals LeftVertex ( CONICSECTION: H )",
    "id": 4411,
    "declarations": "k: CONICSECTION; H: CONICSECTION",
    "facts": "Focus(k) = LeftVertex(H)"
},
{
    "assertion": "FocalLength ( CONICSECTION: Q ) equals NUMBER: -96",
    "id": 4412,
    "declarations": "Q: CONICSECTION; -96: NUMBER",
    "facts": "FocalLength(Q) = -96"
},
{
    "assertion": "Center ( CONICSECTION: G ) equals LowerFocus ( CONICSECTION: B )",
    "id": 4413,
    "declarations": "G: CONICSECTION; B: CONICSECTION",
    "facts": "Center(G) = LowerFocus(B)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: A ) equals LINESEGMENT: z",
    "id": 4414,
    "declarations": "A: ELLIPSE; z: LINESEGMENT",
    "facts": "ImaginaryAxis(A) = z"
},
{
    "assertion": "Area ( CONICSECTION: x ) equals sqrt ( Min ( NUMBER: 68 ) )",
    "id": 4415,
    "declarations": "x: CONICSECTION; 68: NUMBER",
    "facts": "Area(x) = sqrt(Min(68))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: Q ) equals CIRCLE: T",
    "id": 4416,
    "declarations": "Q: TRIANGLE; T: CIRCLE",
    "facts": "CircumCircle(Q) = T"
},
{
    "assertion": "UpperFocus ( CONICSECTION: t ) equals Incenter ( TRIANGLE: D )",
    "id": 4417,
    "declarations": "t: CONICSECTION; D: TRIANGLE",
    "facts": "UpperFocus(t) = Incenter(D)"
},
{
    "assertion": "Center ( CONICSECTION: S ) equals POINT: N",
    "id": 4418,
    "declarations": "S: CONICSECTION; N: POINT",
    "facts": "Center(S) = N"
},
{
    "assertion": "Asymptote ( HYPERBOLA: C ) equals OverlappingLine ( LINESEGMENT: Q )",
    "id": 4419,
    "declarations": "C: HYPERBOLA; Q: LINESEGMENT",
    "facts": "Asymptote(C) = OverlappingLine(Q)"
},
{
    "assertion": "Diameter ( CIRCLE: Z ) equals NUMBER: 13",
    "id": 4420,
    "declarations": "Z: CIRCLE; 13: NUMBER",
    "facts": "Diameter(Z) = 13"
},
{
    "assertion": "sqrt ( NUMBER: -86 ) equals NUMBER: -100",
    "id": 4421,
    "declarations": "-86: NUMBER; -100: NUMBER",
    "facts": "sqrt(-86) = -100"
},
{
    "assertion": "IsOutTangent ( CIRCLE: n, CIRCLE: w ) equals BOOL: False",
    "id": 4422,
    "declarations": "n: CIRCLE; w: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(n, w) = False"
},
{
    "assertion": "Between ( POINT: l, Circumcenter ( TRIANGLE: k ), Orthocenter ( TRIANGLE: Z ) ) equals BOOL: True",
    "id": 4423,
    "declarations": "l: POINT; k: TRIANGLE; Z: TRIANGLE; True: BOOL",
    "facts": "Between(l, Circumcenter(k), Orthocenter(Z)) = True"
},
{
    "assertion": "TriangleOf ( Center ( CONICSECTION: q ), LowerFocus ( CONICSECTION: x ), UpperVertex ( CONICSECTION: Z ) ) equals TRIANGLE: X",
    "id": 4424,
    "declarations": "q: CONICSECTION; x: CONICSECTION; Z: CONICSECTION; X: TRIANGLE",
    "facts": "TriangleOf(Center(q), LowerFocus(x), UpperVertex(Z)) = X"
},
{
    "assertion": "LeftFocus ( CONICSECTION: B ) equals UpperFocus ( CONICSECTION: v )",
    "id": 4425,
    "declarations": "B: CONICSECTION; v: CONICSECTION",
    "facts": "LeftFocus(B) = UpperFocus(v)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: d ) equals LINESEGMENT: r",
    "id": 4426,
    "declarations": "d: ELLIPSE; r: LINESEGMENT",
    "facts": "ImaginaryAxis(d) = r"
},
{
    "assertion": "Asymptote ( HYPERBOLA: y ) equals TangentOnPoint ( FootPoint ( LINE: Q, OverlappingLine ( LINESEGMENT: Q ) ), CURVE: A )",
    "id": 4427,
    "declarations": "y: HYPERBOLA; Q: LINE; Q: LINESEGMENT; A: CURVE",
    "facts": "Asymptote(y) = TangentOnPoint(FootPoint(Q, OverlappingLine(Q)), A)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: N ) equals POINT: q",
    "id": 4428,
    "declarations": "N: LINESEGMENT; q: POINT",
    "facts": "MidPoint(N) = q"
},
{
    "assertion": "Negation ( UpperFocus ( CONICSECTION: l ) equals LeftVertex ( CONICSECTION: n ) ) equals BOOL: False",
    "id": 4429,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Perimeter ( CONICSECTION: x ) equals Radius ( CircumCircle ( TRIANGLE: j ) )",
    "id": 4430,
    "declarations": "x: CONICSECTION; j: TRIANGLE",
    "facts": "Perimeter(x) = Radius(CircumCircle(j))"
},
{
    "assertion": "Area ( CONICSECTION: q ) equals Inclination ( TangentOnPoint ( FootPoint ( LeftDirectrix ( CONICSECTION: F ), LINE: Z ), CURVE: r ) )",
    "id": 4431,
    "declarations": "q: CONICSECTION; F: CONICSECTION; Z: LINE; r: CURVE",
    "facts": "Area(q) = Inclination(TangentOnPoint(FootPoint(LeftDirectrix(F), Z), r))"
},
{
    "assertion": "Coordinate ( LowerFocus ( CONICSECTION: p ) ) equals ( NUMBER: 38, Abs ( LINESEGMENT: e ) )",
    "id": 4432,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsTangent ( LeftDirectrix ( CONICSECTION: v ), CONICSECTION: M ) equals BOOL: False",
    "id": 4433,
    "declarations": "v: CONICSECTION; M: CONICSECTION; False: BOOL",
    "facts": "IsTangent(LeftDirectrix(v), M) = False"
},
{
    "assertion": "Center ( CONICSECTION: p ) equals RightFocus ( CONICSECTION: p )",
    "id": 4434,
    "declarations": "p: CONICSECTION; p: CONICSECTION",
    "facts": "Center(p) = RightFocus(p)"
},
{
    "assertion": "sqrt ( Quadrant ( LowerVertex ( CONICSECTION: f ) ) ) equals NUMBER: -79",
    "id": 4435,
    "declarations": "f: CONICSECTION; -79: NUMBER",
    "facts": "sqrt(Quadrant(LowerVertex(f))) = -79"
},
{
    "assertion": "MinorAxis ( ELLIPSE: B ) equals RealAxis ( ELLIPSE: s )",
    "id": 4436,
    "declarations": "B: ELLIPSE; s: ELLIPSE",
    "facts": "MinorAxis(B) = RealAxis(s)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: m ) equals LINESEGMENT: A",
    "id": 4437,
    "declarations": "m: ELLIPSE; A: LINESEGMENT",
    "facts": "MajorAxis(m) = A"
},
{
    "assertion": "LocusEquation ( LeftFocus ( CONICSECTION: m ) ) equals EXPRESSION: y*space=*spacex^3*space-*space4*x",
    "id": 4438,
    "declarations": "m: CONICSECTION; y*space=*spacex^3*space-*space4*x: EXPRESSION",
    "facts": "LocusEquation(LeftFocus(m)) = y*space=*spacex^3*space-*space4*x"
},
{
    "assertion": "Focus ( CONICSECTION: C ) equals POINT: K",
    "id": 4439,
    "declarations": "C: CONICSECTION; K: POINT",
    "facts": "Focus(C) = K"
},
{
    "assertion": "Orthocenter ( TRIANGLE: q ) equals Orthocenter ( TRIANGLE: c )",
    "id": 4440,
    "declarations": "q: TRIANGLE; c: TRIANGLE",
    "facts": "Orthocenter(q) = Orthocenter(c)"
},
{
    "assertion": "RealAxis ( ELLIPSE: S ) equals RealAxis ( ELLIPSE: q )",
    "id": 4441,
    "declarations": "S: ELLIPSE; q: ELLIPSE",
    "facts": "RealAxis(S) = RealAxis(q)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: a, TRIANGLE: J ) equals BOOL: True",
    "id": 4442,
    "declarations": "a: CIRCLE; J: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(a, J) = True"
},
{
    "assertion": "LineSegmentOf ( Circumcenter ( TRIANGLE: T ), RightVertex ( CONICSECTION: Z ) ) equals LINESEGMENT: F",
    "id": 4443,
    "declarations": "T: TRIANGLE; Z: CONICSECTION; F: LINESEGMENT",
    "facts": "LineSegmentOf(Circumcenter(T), RightVertex(Z)) = F"
},
{
    "assertion": "IsIntersect ( CURVE: R, CURVE: A ) equals BOOL: False",
    "id": 4444,
    "declarations": "R: CURVE; A: CURVE; False: BOOL",
    "facts": "IsIntersect(R, A) = False"
},
{
    "assertion": "LineSegmentOf ( POINT: t, POINT: R ) equals LINESEGMENT: Z",
    "id": 4445,
    "declarations": "t: POINT; R: POINT; Z: LINESEGMENT",
    "facts": "LineSegmentOf(t, R) = Z"
},
{
    "assertion": "FocalLength ( CONICSECTION: k ) equals NUMBER: 3",
    "id": 4446,
    "declarations": "k: CONICSECTION; 3: NUMBER",
    "facts": "FocalLength(k) = 3"
},
{
    "assertion": "Max ( NUMBER: 97 ) equals lg ( NUMBER: -62 )",
    "id": 4447,
    "declarations": "97: NUMBER; -62: NUMBER",
    "facts": "Max(97) = lg(-62)"
},
{
    "assertion": "lg ( NUMBER: 68 ) equals lg ( Diameter ( CIRCLE: D ) )",
    "id": 4448,
    "declarations": "68: NUMBER; D: CIRCLE",
    "facts": "lg(68) = lg(Diameter(D))"
},
{
    "assertion": "Length ( LINESEGMENT: l ) equals Area ( CONICSECTION: X )",
    "id": 4449,
    "declarations": "l: LINESEGMENT; X: CONICSECTION",
    "facts": "Length(l) = Area(X)"
},
{
    "assertion": "Max ( NUMBER: -38 ) equals NUMBER: 39",
    "id": 4450,
    "declarations": "-38: NUMBER; 39: NUMBER",
    "facts": "Max(-38) = 39"
},
{
    "assertion": "Distance ( LeftFocus ( CONICSECTION: e ), POINT: G ) equals Length ( LINESEGMENT: k )",
    "id": 4451,
    "declarations": "e: CONICSECTION; G: POINT; k: LINESEGMENT",
    "facts": "Distance(LeftFocus(e), G) = Length(k)"
},
{
    "assertion": "LocusEquation ( LowerVertex ( CONICSECTION: s ) ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 4452,
    "declarations": "s: CONICSECTION; y*space=*spacesin(x): EXPRESSION",
    "facts": "LocusEquation(LowerVertex(s)) = y*space=*spacesin(x)"
},
{
    "assertion": "Incenter ( TRIANGLE: o ) equals POINT: r",
    "id": 4453,
    "declarations": "o: TRIANGLE; r: POINT",
    "facts": "Incenter(o) = r"
},
{
    "assertion": "Negation ( Area ( CONICSECTION: n ) equals NUMBER: -56 ) equals BOOL: False",
    "id": 4454,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LocusEquation ( POINT: W ) equals EXPRESSION: x*y*space=*space1",
    "id": 4455,
    "declarations": "W: POINT; x*y*space=*space1: EXPRESSION",
    "facts": "LocusEquation(W) = x*y*space=*space1"
},
{
    "assertion": "Endpoint ( LineSegmentOf ( POINT: h, Incenter ( TRIANGLE: f ) ) ) equals UpperVertex ( CONICSECTION: E )",
    "id": 4456,
    "declarations": "h: POINT; f: TRIANGLE; E: CONICSECTION",
    "facts": "Endpoint(LineSegmentOf(h, Incenter(f))) = UpperVertex(E)"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: c ) ) equals UpperFocus ( CONICSECTION: N )",
    "id": 4457,
    "declarations": "c: ELLIPSE; N: CONICSECTION",
    "facts": "Endpoint(MajorAxis(c)) = UpperFocus(N)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: j ) equals POINT: h",
    "id": 4458,
    "declarations": "j: CONICSECTION; h: POINT",
    "facts": "LowerFocus(j) = h"
},
{
    "assertion": "Coordinate ( LeftFocus ( CONICSECTION: A ) ) equals ( sqrt ( NUMBER: -77 ), NUMBER: -65 )",
    "id": 4459,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MidPoint ( LINESEGMENT: Z ) equals RightFocus ( CONICSECTION: k )",
    "id": 4460,
    "declarations": "Z: LINESEGMENT; k: CONICSECTION",
    "facts": "MidPoint(Z) = RightFocus(k)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: O ) equals LINESEGMENT: N",
    "id": 4461,
    "declarations": "O: ELLIPSE; N: LINESEGMENT",
    "facts": "ImaginaryAxis(O) = N"
},
{
    "assertion": "Focus ( CONICSECTION: N ) equals Circumcenter ( TRIANGLE: B )",
    "id": 4462,
    "declarations": "N: CONICSECTION; B: TRIANGLE",
    "facts": "Focus(N) = Circumcenter(B)"
},
{
    "assertion": "InterReciprocal ( Area ( CONICSECTION: D ) ) equals lg ( NUMBER: 17 )",
    "id": 4463,
    "declarations": "D: CONICSECTION; 17: NUMBER",
    "facts": "InterReciprocal(Area(D)) = lg(17)"
},
{
    "assertion": "Locus ( POINT: r ) equals Locus ( POINT: a )",
    "id": 4464,
    "declarations": "r: POINT; a: POINT",
    "facts": "Locus(r) = Locus(a)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: C ) equals AXIS: xAxis",
    "id": 4465,
    "declarations": "C: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(C) = xAxis"
},
{
    "assertion": "NumIntersection ( CURVE: H, CURVE: o ) equals NUMBER: -5",
    "id": 4466,
    "declarations": "H: CURVE; o: CURVE; -5: NUMBER",
    "facts": "NumIntersection(H, o) = -5"
},
{
    "assertion": "Area ( CONICSECTION: y ) equals NUMBER: -57",
    "id": 4467,
    "declarations": "y: CONICSECTION; -57: NUMBER",
    "facts": "Area(y) = -57"
},
{
    "assertion": "Radius ( CIRCLE: X ) equals lg ( XCoordinate ( LowerVertex ( CONICSECTION: s ) ) )",
    "id": 4468,
    "declarations": "X: CIRCLE; s: CONICSECTION",
    "facts": "Radius(X) = lg(XCoordinate(LowerVertex(s)))"
},
{
    "assertion": "TangentOnPoint ( RightFocus ( CONICSECTION: k ), CURVE: a ) equals OverlappingLine ( MinorAxis ( ELLIPSE: M ) )",
    "id": 4469,
    "declarations": "k: CONICSECTION; a: CURVE; M: ELLIPSE",
    "facts": "TangentOnPoint(RightFocus(k), a) = OverlappingLine(MinorAxis(M))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: C ) equals MinorAxis ( ELLIPSE: H )",
    "id": 4470,
    "declarations": "C: ELLIPSE; H: ELLIPSE",
    "facts": "MajorAxis(C) = MinorAxis(H)"
},
{
    "assertion": "FootPoint ( LINE: F, OverlappingLine ( LINESEGMENT: q ) ) equals MidPoint ( LINESEGMENT: w )",
    "id": 4471,
    "declarations": "F: LINE; q: LINESEGMENT; w: LINESEGMENT",
    "facts": "FootPoint(F, OverlappingLine(q)) = MidPoint(w)"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: G ) ) equals CURVE: u",
    "id": 4472,
    "declarations": "G: CONICSECTION; u: CURVE",
    "facts": "Locus(LeftFocus(G)) = u"
},
{
    "assertion": "LeftVertex ( CONICSECTION: x ) equals Circumcenter ( TRIANGLE: n )",
    "id": 4473,
    "declarations": "x: CONICSECTION; n: TRIANGLE",
    "facts": "LeftVertex(x) = Circumcenter(n)"
},
{
    "assertion": "IsChordOf ( MinorAxis ( ELLIPSE: b ), CONICSECTION: d ) equals BOOL: True",
    "id": 4474,
    "declarations": "b: ELLIPSE; d: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(MinorAxis(b), d) = True"
},
{
    "assertion": "RightVertex ( CONICSECTION: l ) equals LeftVertex ( CONICSECTION: C )",
    "id": 4475,
    "declarations": "l: CONICSECTION; C: CONICSECTION",
    "facts": "RightVertex(l) = LeftVertex(C)"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: n ) ) equals Area ( CONICSECTION: G )",
    "id": 4476,
    "declarations": "n: ELLIPSE; G: CONICSECTION",
    "facts": "Abs(MinorAxis(n)) = Area(G)"
},
{
    "assertion": "LineOf ( POINT: y, RightFocus ( CONICSECTION: a ) ) equals LINE: G",
    "id": 4477,
    "declarations": "y: POINT; a: CONICSECTION; G: LINE",
    "facts": "LineOf(y, RightFocus(a)) = G"
},
{
    "assertion": "LocusEquation ( POINT: L ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 4478,
    "declarations": "L: POINT; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "LocusEquation(L) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "Circumcenter ( TRIANGLE: z ) equals POINT: W",
    "id": 4479,
    "declarations": "z: TRIANGLE; W: POINT",
    "facts": "Circumcenter(z) = W"
},
{
    "assertion": "Orthocenter ( TRIANGLE: V ) equals UpperFocus ( CONICSECTION: l )",
    "id": 4480,
    "declarations": "V: TRIANGLE; l: CONICSECTION",
    "facts": "Orthocenter(V) = UpperFocus(l)"
},
{
    "assertion": "LineOf ( LeftFocus ( CONICSECTION: c ), POINT: c ) equals LINE: k",
    "id": 4481,
    "declarations": "c: CONICSECTION; c: POINT; k: LINE",
    "facts": "LineOf(LeftFocus(c), c) = k"
},
{
    "assertion": "Endpoint ( LINESEGMENT: J ) equals POINT: p",
    "id": 4482,
    "declarations": "J: LINESEGMENT; p: POINT",
    "facts": "Endpoint(J) = p"
},
{
    "assertion": "Diameter ( CIRCLE: N ) equals lg ( NUMBER: 94 )",
    "id": 4483,
    "declarations": "N: CIRCLE; 94: NUMBER",
    "facts": "Diameter(N) = lg(94)"
},
{
    "assertion": "InterceptChord ( LINE: v, CONICSECTION: A ) equals LINESEGMENT: O",
    "id": 4484,
    "declarations": "v: LINE; A: CONICSECTION; O: LINESEGMENT",
    "facts": "InterceptChord(v, A) = O"
},
{
    "assertion": "Focus ( CONICSECTION: m ) equals UpperVertex ( CONICSECTION: A )",
    "id": 4485,
    "declarations": "m: CONICSECTION; A: CONICSECTION",
    "facts": "Focus(m) = UpperVertex(A)"
},
{
    "assertion": "LocusEquation ( POINT: H ) equals EXPRESSION: x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12",
    "id": 4486,
    "declarations": "H: POINT; x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12: EXPRESSION",
    "facts": "LocusEquation(H) = x^2*space+*spacey^2*space+*space4*x*space-*space6*y*space=*space12"
},
{
    "assertion": "Coordinate ( Circumcenter ( TRIANGLE: F ) ) equals ( NUMBER: -1, Abs ( LINESEGMENT: l ) )",
    "id": 4487,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: x ) equals SymmetryAxis ( CONICSECTION: y )",
    "id": 4488,
    "declarations": "x: CONICSECTION; y: CONICSECTION",
    "facts": "SymmetryAxis(x) = SymmetryAxis(y)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: O, CIRCLE: r ) equals BOOL: True",
    "id": 4489,
    "declarations": "O: CIRCLE; r: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(O, r) = True"
},
{
    "assertion": "Area ( CONICSECTION: J ) equals NUMBER: 21",
    "id": 4490,
    "declarations": "J: CONICSECTION; 21: NUMBER",
    "facts": "Area(J) = 21"
},
{
    "assertion": "XCoordinate ( RightFocus ( CONICSECTION: v ) ) equals NUMBER: -34",
    "id": 4491,
    "declarations": "v: CONICSECTION; -34: NUMBER",
    "facts": "XCoordinate(RightFocus(v)) = -34"
},
{
    "assertion": "Directrix ( CONICSECTION: m ) equals OverlappingLine ( LINESEGMENT: P )",
    "id": 4492,
    "declarations": "m: CONICSECTION; P: LINESEGMENT",
    "facts": "Directrix(m) = OverlappingLine(P)"
},
{
    "assertion": "Max ( InterReciprocal ( DotProduct ( VECTOR: o, VECTOR: o ) ) ) equals Perimeter ( CONICSECTION: x )",
    "id": 4493,
    "declarations": "o: VECTOR; o: VECTOR; x: CONICSECTION",
    "facts": "Max(InterReciprocal(DotProduct(o, o))) = Perimeter(x)"
},
{
    "assertion": "TangentOfPoint ( Projection ( FootPoint ( TangentOnPoint ( Center ( CONICSECTION: S ), CURVE: h ), LINE: w ), PerpendicularBisector ( LINESEGMENT: i ) ), RightPart ( HYPERBOLA: B ) ) equals LeftDirectrix ( CONICSECTION: r )",
    "id": 4494,
    "declarations": "S: CONICSECTION; h: CURVE; w: LINE; i: LINESEGMENT; B: HYPERBOLA; r: CONICSECTION",
    "facts": "TangentOfPoint(Projection(FootPoint(TangentOnPoint(Center(S), h), w), PerpendicularBisector(i)), RightPart(B)) = LeftDirectrix(r)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: f ) equals POINT: J",
    "id": 4495,
    "declarations": "f: CONICSECTION; J: POINT",
    "facts": "LowerFocus(f) = J"
},
{
    "assertion": "Negation ( IsIntersect ( CURVE: a, CURVE: j ) equals BOOL: False ) equals BOOL: False",
    "id": 4496,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "UpperVertex ( CONICSECTION: X ) equals Orthocenter ( TRIANGLE: v )",
    "id": 4497,
    "declarations": "X: CONICSECTION; v: TRIANGLE",
    "facts": "UpperVertex(X) = Orthocenter(v)"
},
{
    "assertion": "Directrix ( CONICSECTION: a ) equals LINE: c",
    "id": 4498,
    "declarations": "a: CONICSECTION; c: LINE",
    "facts": "Directrix(a) = c"
},
{
    "assertion": "Intersection ( CURVE: w, CURVE: l ) equals POINT: M",
    "id": 4499,
    "declarations": "w: CURVE; l: CURVE; M: POINT",
    "facts": "Intersection(w, l) = M"
},
{
    "assertion": "Diameter ( CIRCLE: F ) equals YCoordinate ( LowerFocus ( CONICSECTION: A ) )",
    "id": 4500,
    "declarations": "F: CIRCLE; A: CONICSECTION",
    "facts": "Diameter(F) = YCoordinate(LowerFocus(A))"
},
{
    "assertion": "Area ( CONICSECTION: y ) equals NUMBER: -27",
    "id": 4501,
    "declarations": "y: CONICSECTION; -27: NUMBER",
    "facts": "Area(y) = -27"
},
{
    "assertion": "LowerVertex ( CONICSECTION: i ) equals POINT: Z",
    "id": 4502,
    "declarations": "i: CONICSECTION; Z: POINT",
    "facts": "LowerVertex(i) = Z"
},
{
    "assertion": "IsIntersect ( Locus ( POINT: T ), CURVE: Z ) equals BOOL: False",
    "id": 4503,
    "declarations": "T: POINT; Z: CURVE; False: BOOL",
    "facts": "IsIntersect(Locus(T), Z) = False"
},
{
    "assertion": "LocusEquation ( POINT: F ) equals EXPRESSION: x^2*space-*spacey^2*space=*space1",
    "id": 4504,
    "declarations": "F: POINT; x^2*space-*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(F) = x^2*space-*spacey^2*space=*space1"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: K ) equals LINE: Y",
    "id": 4505,
    "declarations": "K: LINESEGMENT; Y: LINE",
    "facts": "PerpendicularBisector(K) = Y"
},
{
    "assertion": "Area ( CONICSECTION: k ) equals NUMBER: 92",
    "id": 4506,
    "declarations": "k: CONICSECTION; 92: NUMBER",
    "facts": "Area(k) = 92"
},
{
    "assertion": "InterceptChord ( PerpendicularBisector ( LINESEGMENT: K ), CONICSECTION: Z ) equals LINESEGMENT: J",
    "id": 4507,
    "declarations": "K: LINESEGMENT; Z: CONICSECTION; J: LINESEGMENT",
    "facts": "InterceptChord(PerpendicularBisector(K), Z) = J"
},
{
    "assertion": "LineOf ( POINT: Q, LeftVertex ( CONICSECTION: t ) ) equals LINE: F",
    "id": 4508,
    "declarations": "Q: POINT; t: CONICSECTION; F: LINE",
    "facts": "LineOf(Q, LeftVertex(t)) = F"
},
{
    "assertion": "LeftFocus ( CONICSECTION: F ) equals POINT: r",
    "id": 4509,
    "declarations": "F: CONICSECTION; r: POINT",
    "facts": "LeftFocus(F) = r"
},
{
    "assertion": "LowerVertex ( CONICSECTION: i ) equals Orthocenter ( TRIANGLE: C )",
    "id": 4510,
    "declarations": "i: CONICSECTION; C: TRIANGLE",
    "facts": "LowerVertex(i) = Orthocenter(C)"
},
{
    "assertion": "IsParallel ( LINE: m, LINE: X ) equals BOOL: True",
    "id": 4511,
    "declarations": "m: LINE; X: LINE; True: BOOL",
    "facts": "IsParallel(m, X) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: n ) equals POINT: h",
    "id": 4512,
    "declarations": "n: TRIANGLE; h: POINT",
    "facts": "Incenter(n) = h"
},
{
    "assertion": "MinorAxis ( ELLIPSE: g ) equals LINESEGMENT: D",
    "id": 4513,
    "declarations": "g: ELLIPSE; D: LINESEGMENT",
    "facts": "MinorAxis(g) = D"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: c ) ) equals CURVE: R",
    "id": 4514,
    "declarations": "c: CONICSECTION; R: CURVE",
    "facts": "Locus(LeftFocus(c)) = R"
},
{
    "assertion": "Incenter ( TRIANGLE: F ) equals LowerFocus ( CONICSECTION: s )",
    "id": 4515,
    "declarations": "F: TRIANGLE; s: CONICSECTION",
    "facts": "Incenter(F) = LowerFocus(s)"
},
{
    "assertion": "InterceptChord ( TangentOfPoint ( Center ( CONICSECTION: d ), Locus ( POINT: L ) ), CONICSECTION: a ) equals LINESEGMENT: S",
    "id": 4516,
    "declarations": "d: CONICSECTION; L: POINT; a: CONICSECTION; S: LINESEGMENT",
    "facts": "InterceptChord(TangentOfPoint(Center(d), Locus(L)), a) = S"
},
{
    "assertion": "Asymptote ( HYPERBOLA: Z ) equals LeftDirectrix ( CONICSECTION: M )",
    "id": 4517,
    "declarations": "Z: HYPERBOLA; M: CONICSECTION",
    "facts": "Asymptote(Z) = LeftDirectrix(M)"
},
{
    "assertion": "TriangleOf ( Circumcenter ( TRIANGLE: D ), POINT: M, POINT: H ) equals TRIANGLE: l",
    "id": 4518,
    "declarations": "D: TRIANGLE; M: POINT; H: POINT; l: TRIANGLE",
    "facts": "TriangleOf(Circumcenter(D), M, H) = l"
},
{
    "assertion": "IsChordOf ( RealAxis ( ELLIPSE: u ), CONICSECTION: O ) equals BOOL: True",
    "id": 4519,
    "declarations": "u: ELLIPSE; O: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(RealAxis(u), O) = True"
},
{
    "assertion": "IsInTangent ( CIRCLE: G, CIRCLE: l ) equals BOOL: False",
    "id": 4520,
    "declarations": "G: CIRCLE; l: CIRCLE; False: BOOL",
    "facts": "IsInTangent(G, l) = False"
},
{
    "assertion": "Projection ( LowerFocus ( CONICSECTION: h ), LINE: D ) equals POINT: C",
    "id": 4521,
    "declarations": "h: CONICSECTION; D: LINE; C: POINT",
    "facts": "Projection(LowerFocus(h), D) = C"
},
{
    "assertion": "IsPerpendicular ( LINE: O, LINE: Q ) equals BOOL: True",
    "id": 4522,
    "declarations": "O: LINE; Q: LINE; True: BOOL",
    "facts": "IsPerpendicular(O, Q) = True"
},
{
    "assertion": "Diameter ( CIRCLE: i ) equals NUMBER: -87",
    "id": 4523,
    "declarations": "i: CIRCLE; -87: NUMBER",
    "facts": "Diameter(i) = -87"
},
{
    "assertion": "LowerFocus ( CONICSECTION: I ) equals UpperVertex ( CONICSECTION: V )",
    "id": 4524,
    "declarations": "I: CONICSECTION; V: CONICSECTION",
    "facts": "LowerFocus(I) = UpperVertex(V)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: s ) equals PerpendicularBisector ( LINESEGMENT: C )",
    "id": 4525,
    "declarations": "s: CONICSECTION; C: LINESEGMENT",
    "facts": "LeftDirectrix(s) = PerpendicularBisector(C)"
},
{
    "assertion": "LocusEquation ( LowerVertex ( CONICSECTION: b ) ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 4526,
    "declarations": "b: CONICSECTION; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "LocusEquation(LowerVertex(b)) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: q ) equals Abs ( LINESEGMENT: U )",
    "id": 4527,
    "declarations": "q: CONICSECTION; U: LINESEGMENT",
    "facts": "HalfFocalLength(q) = Abs(U)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: p ) equals POINT: m",
    "id": 4528,
    "declarations": "p: CONICSECTION; m: POINT",
    "facts": "LeftVertex(p) = m"
},
{
    "assertion": "RightVertex ( CONICSECTION: Z ) equals UpperVertex ( CONICSECTION: G )",
    "id": 4529,
    "declarations": "Z: CONICSECTION; G: CONICSECTION",
    "facts": "RightVertex(Z) = UpperVertex(G)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: n ) equals AXIS: xAxis",
    "id": 4530,
    "declarations": "n: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(n) = xAxis"
},
{
    "assertion": "Between ( RightVertex ( CONICSECTION: m ), POINT: q, LeftVertex ( CONICSECTION: y ) ) equals BOOL: True",
    "id": 4531,
    "declarations": "m: CONICSECTION; q: POINT; y: CONICSECTION; True: BOOL",
    "facts": "Between(RightVertex(m), q, LeftVertex(y)) = True"
},
{
    "assertion": "IsIntersect ( CURVE: s, CURVE: n ) equals BOOL: False",
    "id": 4532,
    "declarations": "s: CURVE; n: CURVE; False: BOOL",
    "facts": "IsIntersect(s, n) = False"
},
{
    "assertion": "Negation ( Min ( NUMBER: -73 ) equals HalfFocalLength ( CONICSECTION: X ) ) equals BOOL: False",
    "id": 4533,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Inclination ( LINE: u ) equals NUMBER: 61",
    "id": 4534,
    "declarations": "u: LINE; 61: NUMBER",
    "facts": "Inclination(u) = 61"
},
{
    "assertion": "XCoordinate ( POINT: I ) equals NUMBER: 7",
    "id": 4535,
    "declarations": "I: POINT; 7: NUMBER",
    "facts": "XCoordinate(I) = 7"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: O ) equals LINE: C",
    "id": 4536,
    "declarations": "O: CONICSECTION; C: LINE",
    "facts": "RightDirectrix(O) = C"
},
{
    "assertion": "MajorAxis ( ELLIPSE: z ) equals LINESEGMENT: o",
    "id": 4537,
    "declarations": "z: ELLIPSE; o: LINESEGMENT",
    "facts": "MajorAxis(z) = o"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: y ) equals OverlappingLine ( MajorAxis ( ELLIPSE: q ) )",
    "id": 4538,
    "declarations": "y: CONICSECTION; q: ELLIPSE",
    "facts": "RightDirectrix(y) = OverlappingLine(MajorAxis(q))"
},
{
    "assertion": "MidPoint ( LINESEGMENT: d ) equals LeftVertex ( CONICSECTION: G )",
    "id": 4539,
    "declarations": "d: LINESEGMENT; G: CONICSECTION",
    "facts": "MidPoint(d) = LeftVertex(G)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: o ) equals CIRCLE: O",
    "id": 4540,
    "declarations": "o: TRIANGLE; O: CIRCLE",
    "facts": "CircumCircle(o) = O"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: J ) equals OverlappingLine ( LINESEGMENT: h )",
    "id": 4541,
    "declarations": "J: LINESEGMENT; h: LINESEGMENT",
    "facts": "PerpendicularBisector(J) = OverlappingLine(h)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: o, TriangleOf ( RightFocus ( CONICSECTION: K ), Projection ( UpperFocus ( CONICSECTION: J ), LINE: N ), UpperVertex ( CONICSECTION: A ) ) ) equals BOOL: False",
    "id": 4542,
    "declarations": "o: CIRCLE; K: CONICSECTION; J: CONICSECTION; N: LINE; A: CONICSECTION; False: BOOL",
    "facts": "IsInscribedCircle(o, TriangleOf(RightFocus(K), Projection(UpperFocus(J), N), UpperVertex(A))) = False"
},
{
    "assertion": "Area ( CONICSECTION: t ) equals Inclination ( LINE: c )",
    "id": 4543,
    "declarations": "t: CONICSECTION; c: LINE",
    "facts": "Area(t) = Inclination(c)"
},
{
    "assertion": "Min ( NUMBER: -63 ) equals Radius ( CIRCLE: Q )",
    "id": 4544,
    "declarations": "-63: NUMBER; Q: CIRCLE",
    "facts": "Min(-63) = Radius(Q)"
},
{
    "assertion": "RightFocus ( CONICSECTION: w ) equals POINT: G",
    "id": 4545,
    "declarations": "w: CONICSECTION; G: POINT",
    "facts": "RightFocus(w) = G"
},
{
    "assertion": "IsTangent ( OverlappingLine ( MinorAxis ( ELLIPSE: M ) ), CONICSECTION: Y ) equals BOOL: False",
    "id": 4546,
    "declarations": "M: ELLIPSE; Y: CONICSECTION; False: BOOL",
    "facts": "IsTangent(OverlappingLine(MinorAxis(M)), Y) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: Z ) equals MajorAxis ( ELLIPSE: c )",
    "id": 4547,
    "declarations": "Z: ELLIPSE; c: ELLIPSE",
    "facts": "MinorAxis(Z) = MajorAxis(c)"
},
{
    "assertion": "Intercept ( LeftDirectrix ( CONICSECTION: m ), AXIS: xAxis ) equals NUMBER: 12",
    "id": 4548,
    "declarations": "m: CONICSECTION; xAxis: AXIS; 12: NUMBER",
    "facts": "Intercept(LeftDirectrix(m), xAxis) = 12"
},
{
    "assertion": "TangentOnPoint ( POINT: M, CURVE: f ) equals LINE: P",
    "id": 4549,
    "declarations": "M: POINT; f: CURVE; P: LINE",
    "facts": "TangentOnPoint(M, f) = P"
},
{
    "assertion": "MajorAxis ( ELLIPSE: o ) equals LINESEGMENT: m",
    "id": 4550,
    "declarations": "o: ELLIPSE; m: LINESEGMENT",
    "facts": "MajorAxis(o) = m"
},
{
    "assertion": "Perimeter ( CONICSECTION: Y ) equals NUMBER: 27",
    "id": 4551,
    "declarations": "Y: CONICSECTION; 27: NUMBER",
    "facts": "Perimeter(Y) = 27"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: g ) ) equals Area ( CONICSECTION: H )",
    "id": 4552,
    "declarations": "g: CONICSECTION; H: CONICSECTION",
    "facts": "Quadrant(LeftVertex(g)) = Area(H)"
},
{
    "assertion": "RightVertex ( CONICSECTION: W ) equals Circumcenter ( TRIANGLE: C )",
    "id": 4553,
    "declarations": "W: CONICSECTION; C: TRIANGLE",
    "facts": "RightVertex(W) = Circumcenter(C)"
},
{
    "assertion": "Slope ( LINE: h ) equals NUMBER: -73",
    "id": 4554,
    "declarations": "h: LINE; -73: NUMBER",
    "facts": "Slope(h) = -73"
},
{
    "assertion": "LineOf ( Incenter ( TRIANGLE: F ), POINT: a ) equals LINE: o",
    "id": 4555,
    "declarations": "F: TRIANGLE; a: POINT; o: LINE",
    "facts": "LineOf(Incenter(F), a) = o"
},
{
    "assertion": "Expression ( CURVE: E ) equals EXPRESSION: y*space=*spacee^x",
    "id": 4556,
    "declarations": "E: CURVE; y*space=*spacee^x: EXPRESSION",
    "facts": "Expression(E) = y*space=*spacee^x"
},
{
    "assertion": "IsIntersect ( CURVE: z, CURVE: C ) equals BOOL: False",
    "id": 4557,
    "declarations": "z: CURVE; C: CURVE; False: BOOL",
    "facts": "IsIntersect(z, C) = False"
},
{
    "assertion": "YCoordinate ( Orthocenter ( TriangleOf ( POINT: H, LeftVertex ( CONICSECTION: d ), POINT: x ) ) ) equals InterReciprocal ( lg ( NUMBER: -11 ) )",
    "id": 4558,
    "declarations": "H: POINT; d: CONICSECTION; x: POINT; -11: NUMBER",
    "facts": "YCoordinate(Orthocenter(TriangleOf(H, LeftVertex(d), x))) = InterReciprocal(lg(-11))"
},
{
    "assertion": "sqrt ( Diameter ( CircumCircle ( TRIANGLE: P ) ) ) equals NUMBER: 36",
    "id": 4559,
    "declarations": "P: TRIANGLE; 36: NUMBER",
    "facts": "sqrt(Diameter(CircumCircle(P))) = 36"
},
{
    "assertion": "Focus ( CONICSECTION: M ) equals RightVertex ( CONICSECTION: b )",
    "id": 4560,
    "declarations": "M: CONICSECTION; b: CONICSECTION",
    "facts": "Focus(M) = RightVertex(b)"
},
{
    "assertion": "IsIntersect ( CURVE: d, CURVE: t ) equals BOOL: False",
    "id": 4561,
    "declarations": "d: CURVE; t: CURVE; False: BOOL",
    "facts": "IsIntersect(d, t) = False"
},
{
    "assertion": "FocalLength ( CONICSECTION: h ) equals Min ( Abs ( LINESEGMENT: A ) )",
    "id": 4562,
    "declarations": "h: CONICSECTION; A: LINESEGMENT",
    "facts": "FocalLength(h) = Min(Abs(A))"
},
{
    "assertion": "OverlappingLine ( LineSegmentOf ( RightVertex ( CONICSECTION: e ), UpperVertex ( CONICSECTION: r ) ) ) equals LINE: Z",
    "id": 4563,
    "declarations": "e: CONICSECTION; r: CONICSECTION; Z: LINE",
    "facts": "OverlappingLine(LineSegmentOf(RightVertex(e), UpperVertex(r))) = Z"
},
{
    "assertion": "Slope ( LINE: H ) equals NUMBER: 9",
    "id": 4564,
    "declarations": "H: LINE; 9: NUMBER",
    "facts": "Slope(H) = 9"
},
{
    "assertion": "Incenter ( TRIANGLE: M ) equals POINT: v",
    "id": 4565,
    "declarations": "M: TRIANGLE; v: POINT",
    "facts": "Incenter(M) = v"
},
{
    "assertion": "lg ( NUMBER: -50 ) equals HalfFocalLength ( CONICSECTION: t )",
    "id": 4566,
    "declarations": "-50: NUMBER; t: CONICSECTION",
    "facts": "lg(-50) = HalfFocalLength(t)"
},
{
    "assertion": "NumIntersection ( CURVE: m, CURVE: e ) equals NUMBER: 75",
    "id": 4567,
    "declarations": "m: CURVE; e: CURVE; 75: NUMBER",
    "facts": "NumIntersection(m, e) = 75"
},
{
    "assertion": "LineSegmentOf ( LeftFocus ( CONICSECTION: N ), LowerFocus ( CONICSECTION: I ) ) equals LINESEGMENT: k",
    "id": 4568,
    "declarations": "N: CONICSECTION; I: CONICSECTION; k: LINESEGMENT",
    "facts": "LineSegmentOf(LeftFocus(N), LowerFocus(I)) = k"
},
{
    "assertion": "IsOutTangent ( CIRCLE: x, CIRCLE: q ) equals BOOL: True",
    "id": 4569,
    "declarations": "x: CIRCLE; q: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(x, q) = True"
},
{
    "assertion": "MidPoint ( ImaginaryAxis ( ELLIPSE: Y ) ) equals Center ( CONICSECTION: D )",
    "id": 4570,
    "declarations": "Y: ELLIPSE; D: CONICSECTION",
    "facts": "MidPoint(ImaginaryAxis(Y)) = Center(D)"
},
{
    "assertion": "Coordinate ( POINT: d ) equals ( NUMBER: -38, DotProduct ( VECTOR: l, VECTOR: Z ) )",
    "id": 4571,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "AngleOf ( UpperFocus ( CONICSECTION: p ), LeftFocus ( CONICSECTION: q ), MidPoint ( LINESEGMENT: m ) ) equals ApplyUnit ( Slope ( TangentOfPoint ( LeftFocus ( CONICSECTION: r ), CURVE: X ) ), DEGREESTR: degree )",
    "id": 4572,
    "declarations": "p: CONICSECTION; q: CONICSECTION; m: LINESEGMENT; r: CONICSECTION; X: CURVE; degree: DEGREESTR",
    "facts": "AngleOf(UpperFocus(p), LeftFocus(q), MidPoint(m)) = ApplyUnit(Slope(TangentOfPoint(LeftFocus(r), X)), degree)"
},
{
    "assertion": "Abs ( LINESEGMENT: e ) equals XCoordinate ( LeftVertex ( CONICSECTION: n ) )",
    "id": 4573,
    "declarations": "e: LINESEGMENT; n: CONICSECTION",
    "facts": "Abs(e) = XCoordinate(LeftVertex(n))"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: p, CIRCLE: d ) equals BOOL: True",
    "id": 4574,
    "declarations": "p: LINESEGMENT; d: CIRCLE; True: BOOL",
    "facts": "IsDiameter(p, d) = True"
},
{
    "assertion": "ApplyUnit ( NUMBER: 98, DEGREESTR: degree )",
    "id": 4575,
    "declarations": "98: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(98, degree) = None"
},
{
    "assertion": "Center ( CONICSECTION: D ) equals POINT: c",
    "id": 4576,
    "declarations": "D: CONICSECTION; c: POINT",
    "facts": "Center(D) = c"
},
{
    "assertion": "RealAxis ( ELLIPSE: M ) equals LINESEGMENT: p",
    "id": 4577,
    "declarations": "M: ELLIPSE; p: LINESEGMENT",
    "facts": "RealAxis(M) = p"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: l, TRIANGLE: h ) equals BOOL: False",
    "id": 4578,
    "declarations": "l: CIRCLE; h: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(l, h) = False"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: P ) equals LeftDirectrix ( CONICSECTION: q )",
    "id": 4579,
    "declarations": "P: LINESEGMENT; q: CONICSECTION",
    "facts": "OverlappingLine(P) = LeftDirectrix(q)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: x ) equals LINE: v",
    "id": 4580,
    "declarations": "x: LINESEGMENT; v: LINE",
    "facts": "PerpendicularBisector(x) = v"
},
{
    "assertion": "Focus ( CONICSECTION: i ) equals Circumcenter ( TRIANGLE: R )",
    "id": 4581,
    "declarations": "i: CONICSECTION; R: TRIANGLE",
    "facts": "Focus(i) = Circumcenter(R)"
},
{
    "assertion": "Focus ( CONICSECTION: x ) equals POINT: A",
    "id": 4582,
    "declarations": "x: CONICSECTION; A: POINT",
    "facts": "Focus(x) = A"
},
{
    "assertion": "TangentOfPoint ( POINT: S, CURVE: p ) equals LINE: S",
    "id": 4583,
    "declarations": "S: POINT; p: CURVE; S: LINE",
    "facts": "TangentOfPoint(S, p) = S"
},
{
    "assertion": "IsIntersect ( CURVE: Q, RightPart ( HYPERBOLA: y ) ) equals BOOL: False",
    "id": 4584,
    "declarations": "Q: CURVE; y: HYPERBOLA; False: BOOL",
    "facts": "IsIntersect(Q, RightPart(y)) = False"
},
{
    "assertion": "FootPoint ( TangentOnPoint ( POINT: q, CURVE: l ), LeftDirectrix ( CONICSECTION: S ) ) equals RightFocus ( CONICSECTION: M )",
    "id": 4585,
    "declarations": "q: POINT; l: CURVE; S: CONICSECTION; M: CONICSECTION",
    "facts": "FootPoint(TangentOnPoint(q, l), LeftDirectrix(S)) = RightFocus(M)"
},
{
    "assertion": "YCoordinate ( LeftFocus ( CONICSECTION: c ) ) equals Abs ( ImaginaryAxis ( ELLIPSE: u ) )",
    "id": 4586,
    "declarations": "c: CONICSECTION; u: ELLIPSE",
    "facts": "YCoordinate(LeftFocus(c)) = Abs(ImaginaryAxis(u))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: L ) equals POINT: J",
    "id": 4587,
    "declarations": "L: CONICSECTION; J: POINT",
    "facts": "UpperVertex(L) = J"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: V ) ) equals Length ( LINESEGMENT: d )",
    "id": 4588,
    "declarations": "V: CONICSECTION; d: LINESEGMENT",
    "facts": "Inclination(LeftDirectrix(V)) = Length(d)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: o, TRIANGLE: V ) equals BOOL: False",
    "id": 4589,
    "declarations": "o: CIRCLE; V: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(o, V) = False"
},
{
    "assertion": "Quadrant ( Orthocenter ( TRIANGLE: s ) ) equals Abs ( RealAxis ( ELLIPSE: B ) )",
    "id": 4590,
    "declarations": "s: TRIANGLE; B: ELLIPSE",
    "facts": "Quadrant(Orthocenter(s)) = Abs(RealAxis(B))"
},
{
    "assertion": "IsIntersect ( Locus ( POINT: h ), CURVE: v ) equals BOOL: False",
    "id": 4591,
    "declarations": "h: POINT; v: CURVE; False: BOOL",
    "facts": "IsIntersect(Locus(h), v) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: h, TRIANGLE: m ) equals BOOL: False",
    "id": 4592,
    "declarations": "h: CIRCLE; m: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(h, m) = False"
},
{
    "assertion": "Area ( CONICSECTION: W ) equals Radius ( CIRCLE: p )",
    "id": 4593,
    "declarations": "W: CONICSECTION; p: CIRCLE",
    "facts": "Area(W) = Radius(p)"
},
{
    "assertion": "NumIntersection ( CURVE: o, CURVE: h ) equals NUMBER: 38",
    "id": 4594,
    "declarations": "o: CURVE; h: CURVE; 38: NUMBER",
    "facts": "NumIntersection(o, h) = 38"
},
{
    "assertion": "lg ( NumIntersection ( CURVE: w, CURVE: n ) ) equals Intercept ( LINE: Q, AXIS: xAxis )",
    "id": 4595,
    "declarations": "w: CURVE; n: CURVE; Q: LINE; xAxis: AXIS",
    "facts": "lg(NumIntersection(w, n)) = Intercept(Q, xAxis)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: L ) equals ImaginaryAxis ( ELLIPSE: q )",
    "id": 4596,
    "declarations": "L: ELLIPSE; q: ELLIPSE",
    "facts": "ImaginaryAxis(L) = ImaginaryAxis(q)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Z ) equals RightFocus ( CONICSECTION: a )",
    "id": 4597,
    "declarations": "Z: CONICSECTION; a: CONICSECTION",
    "facts": "UpperVertex(Z) = RightFocus(a)"
},
{
    "assertion": "Directrix ( CONICSECTION: K ) equals LINE: Y",
    "id": 4598,
    "declarations": "K: CONICSECTION; Y: LINE",
    "facts": "Directrix(K) = Y"
},
{
    "assertion": "Incenter ( TriangleOf ( RightFocus ( CONICSECTION: i ), Center ( CONICSECTION: a ), UpperVertex ( CONICSECTION: E ) ) ) equals LowerVertex ( CONICSECTION: x )",
    "id": 4599,
    "declarations": "i: CONICSECTION; a: CONICSECTION; E: CONICSECTION; x: CONICSECTION",
    "facts": "Incenter(TriangleOf(RightFocus(i), Center(a), UpperVertex(E))) = LowerVertex(x)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: K ) equals LINE: d",
    "id": 4600,
    "declarations": "K: LINESEGMENT; d: LINE",
    "facts": "OverlappingLine(K) = d"
},
{
    "assertion": "InterReciprocal ( YCoordinate ( Circumcenter ( TRIANGLE: X ) ) ) equals lg ( NUMBER: -5 )",
    "id": 4601,
    "declarations": "X: TRIANGLE; -5: NUMBER",
    "facts": "InterReciprocal(YCoordinate(Circumcenter(X))) = lg(-5)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: R ) equals POINT: h",
    "id": 4602,
    "declarations": "R: TRIANGLE; h: POINT",
    "facts": "Circumcenter(R) = h"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: Z ) equals LINE: X",
    "id": 4603,
    "declarations": "Z: LINESEGMENT; X: LINE",
    "facts": "PerpendicularBisector(Z) = X"
},
{
    "assertion": "UpperVertex ( CONICSECTION: t ) equals UpperVertex ( CONICSECTION: a )",
    "id": 4604,
    "declarations": "t: CONICSECTION; a: CONICSECTION",
    "facts": "UpperVertex(t) = UpperVertex(a)"
},
{
    "assertion": "RightVertex ( CONICSECTION: L ) equals FootPoint ( PerpendicularBisector ( RealAxis ( ELLIPSE: H ) ), LINE: q )",
    "id": 4605,
    "declarations": "L: CONICSECTION; H: ELLIPSE; q: LINE",
    "facts": "RightVertex(L) = FootPoint(PerpendicularBisector(RealAxis(H)), q)"
},
{
    "assertion": "Distance ( POINT: Y, LeftVertex ( CONICSECTION: X ) ) equals InterReciprocal ( NUMBER: 73 )",
    "id": 4606,
    "declarations": "Y: POINT; X: CONICSECTION; 73: NUMBER",
    "facts": "Distance(Y, LeftVertex(X)) = InterReciprocal(73)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: E ) equals POINT: i",
    "id": 4607,
    "declarations": "E: CONICSECTION; i: POINT",
    "facts": "LowerFocus(E) = i"
},
{
    "assertion": "Max ( Eccentricity ( CONICSECTION: d ) ) equals Radius ( CIRCLE: m )",
    "id": 4608,
    "declarations": "d: CONICSECTION; m: CIRCLE",
    "facts": "Max(Eccentricity(d)) = Radius(m)"
},
{
    "assertion": "Intersection ( CURVE: x, CURVE: x ) equals POINT: l",
    "id": 4609,
    "declarations": "x: CURVE; x: CURVE; l: POINT",
    "facts": "Intersection(x, x) = l"
},
{
    "assertion": "IsParallel ( LINE: K, LINE: B ) equals BOOL: True",
    "id": 4610,
    "declarations": "K: LINE; B: LINE; True: BOOL",
    "facts": "IsParallel(K, B) = True"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: c, TRIANGLE: X ) equals BOOL: True",
    "id": 4611,
    "declarations": "c: CIRCLE; X: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(c, X) = True"
},
{
    "assertion": "TangentOfPoint ( Incenter ( TRIANGLE: v ), RightPart ( HYPERBOLA: p ) ) equals LINE: y",
    "id": 4612,
    "declarations": "v: TRIANGLE; p: HYPERBOLA; y: LINE",
    "facts": "TangentOfPoint(Incenter(v), RightPart(p)) = y"
},
{
    "assertion": "IsPerpendicular ( TangentOnPoint ( RightFocus ( CONICSECTION: Z ), CURVE: w ), LINE: O ) equals BOOL: False",
    "id": 4613,
    "declarations": "Z: CONICSECTION; w: CURVE; O: LINE; False: BOOL",
    "facts": "IsPerpendicular(TangentOnPoint(RightFocus(Z), w), O) = False"
},
{
    "assertion": "lg ( Eccentricity ( CONICSECTION: p ) ) equals Abs ( LINESEGMENT: R )",
    "id": 4614,
    "declarations": "p: CONICSECTION; R: LINESEGMENT",
    "facts": "lg(Eccentricity(p)) = Abs(R)"
},
{
    "assertion": "VectorOf ( POINT: K, RightFocus ( CONICSECTION: C ) ) equals VECTOR: J",
    "id": 4615,
    "declarations": "K: POINT; C: CONICSECTION; J: VECTOR",
    "facts": "VectorOf(K, RightFocus(C)) = J"
},
{
    "assertion": "IsTangent ( TangentOfPoint ( Orthocenter ( TRIANGLE: Y ), CURVE: m ), CONICSECTION: P ) equals BOOL: False",
    "id": 4616,
    "declarations": "Y: TRIANGLE; m: CURVE; P: CONICSECTION; False: BOOL",
    "facts": "IsTangent(TangentOfPoint(Orthocenter(Y), m), P) = False"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: R ) equals NUMBER: -53",
    "id": 4617,
    "declarations": "R: CONICSECTION; -53: NUMBER",
    "facts": "HalfFocalLength(R) = -53"
},
{
    "assertion": "LeftFocus ( CONICSECTION: j ) equals POINT: h",
    "id": 4618,
    "declarations": "j: CONICSECTION; h: POINT",
    "facts": "LeftFocus(j) = h"
},
{
    "assertion": "MidPoint ( LINESEGMENT: K ) equals POINT: K",
    "id": 4619,
    "declarations": "K: LINESEGMENT; K: POINT",
    "facts": "MidPoint(K) = K"
},
{
    "assertion": "Expression ( CURVE: P ) equals EXPRESSION: y*space=*spacex^3*space-*space2*x*space+*space1",
    "id": 4620,
    "declarations": "P: CURVE; y*space=*spacex^3*space-*space2*x*space+*space1: EXPRESSION",
    "facts": "Expression(P) = y*space=*spacex^3*space-*space2*x*space+*space1"
},
{
    "assertion": "Orthocenter ( TRIANGLE: K ) equals POINT: b",
    "id": 4621,
    "declarations": "K: TRIANGLE; b: POINT",
    "facts": "Orthocenter(K) = b"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: P ) equals LINE: Z",
    "id": 4622,
    "declarations": "P: CONICSECTION; Z: LINE",
    "facts": "LeftDirectrix(P) = Z"
},
{
    "assertion": "RightPart ( HYPERBOLA: E ) equals CURVE: P",
    "id": 4623,
    "declarations": "E: HYPERBOLA; P: CURVE",
    "facts": "RightPart(E) = P"
},
{
    "assertion": "CircumCircle ( TRIANGLE: N ) equals CIRCLE: x",
    "id": 4624,
    "declarations": "N: TRIANGLE; x: CIRCLE",
    "facts": "CircumCircle(N) = x"
},
{
    "assertion": "LineOf ( POINT: R, POINT: m ) equals LINE: t",
    "id": 4625,
    "declarations": "R: POINT; m: POINT; t: LINE",
    "facts": "LineOf(R, m) = t"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: L ) equals LINE: p",
    "id": 4626,
    "declarations": "L: CONICSECTION; p: LINE",
    "facts": "LeftDirectrix(L) = p"
},
{
    "assertion": "AngleOf ( POINT: y, POINT: z, RightFocus ( CONICSECTION: C ) ) equals ApplyUnit ( sqrt ( InterReciprocal ( Eccentricity ( CONICSECTION: h ) ) ), DEGREESTR: degree )",
    "id": 4627,
    "declarations": "y: POINT; z: POINT; C: CONICSECTION; h: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(y, z, RightFocus(C)) = ApplyUnit(sqrt(InterReciprocal(Eccentricity(h))), degree)"
},
{
    "assertion": "LineOf ( UpperFocus ( CONICSECTION: X ), POINT: S ) equals LineOf ( Incenter ( TRIANGLE: m ), RightFocus ( CONICSECTION: k ) )",
    "id": 4628,
    "declarations": "X: CONICSECTION; S: POINT; m: TRIANGLE; k: CONICSECTION",
    "facts": "LineOf(UpperFocus(X), S) = LineOf(Incenter(m), RightFocus(k))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: N ) equals Area ( CONICSECTION: C )",
    "id": 4629,
    "declarations": "N: CONICSECTION; C: CONICSECTION",
    "facts": "HalfFocalLength(N) = Area(C)"
},
{
    "assertion": "Area ( CONICSECTION: q ) equals YCoordinate ( RightFocus ( CONICSECTION: R ) )",
    "id": 4630,
    "declarations": "q: CONICSECTION; R: CONICSECTION",
    "facts": "Area(q) = YCoordinate(RightFocus(R))"
},
{
    "assertion": "RightVertex ( CONICSECTION: B ) equals POINT: L",
    "id": 4631,
    "declarations": "B: CONICSECTION; L: POINT",
    "facts": "RightVertex(B) = L"
},
{
    "assertion": "Diameter ( CIRCLE: I ) equals Min ( NUMBER: 45 )",
    "id": 4632,
    "declarations": "I: CIRCLE; 45: NUMBER",
    "facts": "Diameter(I) = Min(45)"
},
{
    "assertion": "MidPoint ( MinorAxis ( ELLIPSE: d ) ) equals RightFocus ( CONICSECTION: C )",
    "id": 4633,
    "declarations": "d: ELLIPSE; C: CONICSECTION",
    "facts": "MidPoint(MinorAxis(d)) = RightFocus(C)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: h ) equals LowerVertex ( CONICSECTION: Q )",
    "id": 4634,
    "declarations": "h: CONICSECTION; Q: CONICSECTION",
    "facts": "LowerVertex(h) = LowerVertex(Q)"
},
{
    "assertion": "XCoordinate ( POINT: R ) equals Abs ( MinorAxis ( ELLIPSE: s ) )",
    "id": 4635,
    "declarations": "R: POINT; s: ELLIPSE",
    "facts": "XCoordinate(R) = Abs(MinorAxis(s))"
},
{
    "assertion": "TangentPoint ( LINE: B, CIRCLE: n ) equals POINT: u",
    "id": 4636,
    "declarations": "B: LINE; n: CIRCLE; u: POINT",
    "facts": "TangentPoint(B, n) = u"
},
{
    "assertion": "IsTangent ( LINE: J, CONICSECTION: M ) equals BOOL: True",
    "id": 4637,
    "declarations": "J: LINE; M: CONICSECTION; True: BOOL",
    "facts": "IsTangent(J, M) = True"
},
{
    "assertion": "YCoordinate ( Projection ( Orthocenter ( TRIANGLE: N ), LINE: F ) ) equals Abs ( MajorAxis ( ELLIPSE: K ) )",
    "id": 4638,
    "declarations": "N: TRIANGLE; F: LINE; K: ELLIPSE",
    "facts": "YCoordinate(Projection(Orthocenter(N), F)) = Abs(MajorAxis(K))"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: F ) ) equals Projection ( LeftFocus ( CONICSECTION: n ), LINE: E )",
    "id": 4639,
    "declarations": "F: ELLIPSE; n: CONICSECTION; E: LINE",
    "facts": "Endpoint(ImaginaryAxis(F)) = Projection(LeftFocus(n), E)"
},
{
    "assertion": "Slope ( TangentOfPoint ( POINT: S, CURVE: B ) ) equals NUMBER: -41",
    "id": 4640,
    "declarations": "S: POINT; B: CURVE; -41: NUMBER",
    "facts": "Slope(TangentOfPoint(S, B)) = -41"
},
{
    "assertion": "LowerFocus ( CONICSECTION: u ) equals POINT: x",
    "id": 4641,
    "declarations": "u: CONICSECTION; x: POINT",
    "facts": "LowerFocus(u) = x"
},
{
    "assertion": "MinorAxis ( ELLIPSE: g ) equals LINESEGMENT: w",
    "id": 4642,
    "declarations": "g: ELLIPSE; w: LINESEGMENT",
    "facts": "MinorAxis(g) = w"
},
{
    "assertion": "CircumCircle ( TRIANGLE: O ) equals CircumCircle ( TRIANGLE: W )",
    "id": 4643,
    "declarations": "O: TRIANGLE; W: TRIANGLE",
    "facts": "CircumCircle(O) = CircumCircle(W)"
},
{
    "assertion": "Incenter ( TRIANGLE: C ) equals POINT: Z",
    "id": 4644,
    "declarations": "C: TRIANGLE; Z: POINT",
    "facts": "Incenter(C) = Z"
},
{
    "assertion": "FootPoint ( LINE: f, LeftDirectrix ( CONICSECTION: v ) ) equals LeftVertex ( CONICSECTION: n )",
    "id": 4645,
    "declarations": "f: LINE; v: CONICSECTION; n: CONICSECTION",
    "facts": "FootPoint(f, LeftDirectrix(v)) = LeftVertex(n)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: X ) equals LINESEGMENT: P",
    "id": 4646,
    "declarations": "X: ELLIPSE; P: LINESEGMENT",
    "facts": "ImaginaryAxis(X) = P"
},
{
    "assertion": "Perimeter ( CONICSECTION: L ) equals YCoordinate ( RightFocus ( CONICSECTION: l ) )",
    "id": 4647,
    "declarations": "L: CONICSECTION; l: CONICSECTION",
    "facts": "Perimeter(L) = YCoordinate(RightFocus(l))"
},
{
    "assertion": "IsChordOf ( ImaginaryAxis ( ELLIPSE: f ), CONICSECTION: F ) equals BOOL: False",
    "id": 4648,
    "declarations": "f: ELLIPSE; F: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(ImaginaryAxis(f), F) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: m ) equals LeftFocus ( CONICSECTION: l )",
    "id": 4649,
    "declarations": "m: CONICSECTION; l: CONICSECTION",
    "facts": "LeftVertex(m) = LeftFocus(l)"
},
{
    "assertion": "Area ( CONICSECTION: I ) equals NUMBER: -35",
    "id": 4650,
    "declarations": "I: CONICSECTION; -35: NUMBER",
    "facts": "Area(I) = -35"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: U ) equals LINESEGMENT: m",
    "id": 4651,
    "declarations": "U: ELLIPSE; m: LINESEGMENT",
    "facts": "ImaginaryAxis(U) = m"
},
{
    "assertion": "UpperVertex ( CONICSECTION: W ) equals POINT: T",
    "id": 4652,
    "declarations": "W: CONICSECTION; T: POINT",
    "facts": "UpperVertex(W) = T"
},
{
    "assertion": "MidPoint ( InterceptChord ( LINE: r, CONICSECTION: f ) ) equals Center ( CONICSECTION: p )",
    "id": 4653,
    "declarations": "r: LINE; f: CONICSECTION; p: CONICSECTION",
    "facts": "MidPoint(InterceptChord(r, f)) = Center(p)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: G ) equals FocalLength ( CONICSECTION: f )",
    "id": 4654,
    "declarations": "G: CONICSECTION; f: CONICSECTION",
    "facts": "HalfFocalLength(G) = FocalLength(f)"
},
{
    "assertion": "Radius ( CIRCLE: S ) equals NUMBER: -12",
    "id": 4655,
    "declarations": "S: CIRCLE; -12: NUMBER",
    "facts": "Radius(S) = -12"
},
{
    "assertion": "Length ( LINESEGMENT: q ) equals NUMBER: 97",
    "id": 4656,
    "declarations": "q: LINESEGMENT; 97: NUMBER",
    "facts": "Length(q) = 97"
},
{
    "assertion": "Diameter ( CIRCLE: V ) equals Min ( Inclination ( LINE: V ) )",
    "id": 4657,
    "declarations": "V: CIRCLE; V: LINE",
    "facts": "Diameter(V) = Min(Inclination(V))"
},
{
    "assertion": "TangentOfPoint ( FootPoint ( LINE: w, LINE: B ), LeftPart ( HYPERBOLA: u ) ) equals LINE: v",
    "id": 4658,
    "declarations": "w: LINE; B: LINE; u: HYPERBOLA; v: LINE",
    "facts": "TangentOfPoint(FootPoint(w, B), LeftPart(u)) = v"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: A, TRIANGLE: r ) equals BOOL: True",
    "id": 4659,
    "declarations": "A: CIRCLE; r: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(A, r) = True"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: A ) equals LINE: e",
    "id": 4660,
    "declarations": "A: CONICSECTION; e: LINE",
    "facts": "LeftDirectrix(A) = e"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: D ) equals Perimeter ( CONICSECTION: l )",
    "id": 4661,
    "declarations": "D: CONICSECTION; l: CONICSECTION",
    "facts": "HalfFocalLength(D) = Perimeter(l)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: d ) equals LeftVertex ( CONICSECTION: j )",
    "id": 4662,
    "declarations": "d: TRIANGLE; j: CONICSECTION",
    "facts": "Circumcenter(d) = LeftVertex(j)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: P ) equals Area ( CONICSECTION: R )",
    "id": 4663,
    "declarations": "P: CONICSECTION; R: CONICSECTION",
    "facts": "Eccentricity(P) = Area(R)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: S ) equals CIRCLE: T",
    "id": 4664,
    "declarations": "S: TRIANGLE; T: CIRCLE",
    "facts": "CircumCircle(S) = T"
},
{
    "assertion": "Directrix ( CONICSECTION: v ) equals LINE: p",
    "id": 4665,
    "declarations": "v: CONICSECTION; p: LINE",
    "facts": "Directrix(v) = p"
},
{
    "assertion": "LowerVertex ( CONICSECTION: F ) equals POINT: d",
    "id": 4666,
    "declarations": "F: CONICSECTION; d: POINT",
    "facts": "LowerVertex(F) = d"
},
{
    "assertion": "LeftPart ( HYPERBOLA: S ) equals Locus ( Center ( CONICSECTION: q ) )",
    "id": 4667,
    "declarations": "S: HYPERBOLA; q: CONICSECTION",
    "facts": "LeftPart(S) = Locus(Center(q))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: N ) equals ImaginaryAxis ( ELLIPSE: I )",
    "id": 4668,
    "declarations": "N: ELLIPSE; I: ELLIPSE",
    "facts": "MajorAxis(N) = ImaginaryAxis(I)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: R ) equals OverlappingLine ( LINESEGMENT: m )",
    "id": 4669,
    "declarations": "R: CONICSECTION; m: LINESEGMENT",
    "facts": "RightDirectrix(R) = OverlappingLine(m)"
},
{
    "assertion": "RightFocus ( CONICSECTION: k ) equals MidPoint ( LINESEGMENT: C )",
    "id": 4670,
    "declarations": "k: CONICSECTION; C: LINESEGMENT",
    "facts": "RightFocus(k) = MidPoint(C)"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: I ) ) equals NUMBER: 97",
    "id": 4671,
    "declarations": "I: TRIANGLE; 97: NUMBER",
    "facts": "Radius(CircumCircle(I)) = 97"
},
{
    "assertion": "LowerFocus ( CONICSECTION: x ) equals POINT: a",
    "id": 4672,
    "declarations": "x: CONICSECTION; a: POINT",
    "facts": "LowerFocus(x) = a"
},
{
    "assertion": "RightPart ( HYPERBOLA: j ) equals CURVE: S",
    "id": 4673,
    "declarations": "j: HYPERBOLA; S: CURVE",
    "facts": "RightPart(j) = S"
},
{
    "assertion": "Radius ( CIRCLE: N ) equals Intercept ( LINE: Q, AXIS: xAxis )",
    "id": 4674,
    "declarations": "N: CIRCLE; Q: LINE; xAxis: AXIS",
    "facts": "Radius(N) = Intercept(Q, xAxis)"
},
{
    "assertion": "Diameter ( CIRCLE: k ) equals Diameter ( CIRCLE: x )",
    "id": 4675,
    "declarations": "k: CIRCLE; x: CIRCLE",
    "facts": "Diameter(k) = Diameter(x)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: f ) equals RealAxis ( ELLIPSE: b )",
    "id": 4676,
    "declarations": "f: ELLIPSE; b: ELLIPSE",
    "facts": "ImaginaryAxis(f) = RealAxis(b)"
},
{
    "assertion": "Vertex ( CONICSECTION: J ) equals Center ( CONICSECTION: K )",
    "id": 4677,
    "declarations": "J: CONICSECTION; K: CONICSECTION",
    "facts": "Vertex(J) = Center(K)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: r ) equals Incenter ( TRIANGLE: E )",
    "id": 4678,
    "declarations": "r: LINESEGMENT; E: TRIANGLE",
    "facts": "Endpoint(r) = Incenter(E)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: k ) equals Inclination ( TangentOfPoint ( Projection ( POINT: g, LINE: I ), CURVE: x ) )",
    "id": 4679,
    "declarations": "k: CONICSECTION; g: POINT; I: LINE; x: CURVE",
    "facts": "Eccentricity(k) = Inclination(TangentOfPoint(Projection(g, I), x))"
},
{
    "assertion": "PointOnCurve ( Incenter ( TRIANGLE: j ), LeftPart ( HYPERBOLA: F ) ) equals BOOL: False",
    "id": 4680,
    "declarations": "j: TRIANGLE; F: HYPERBOLA; False: BOOL",
    "facts": "PointOnCurve(Incenter(j), LeftPart(F)) = False"
},
{
    "assertion": "Min ( Inclination ( LineOf ( LowerVertex ( CONICSECTION: z ), Incenter ( TRIANGLE: m ) ) ) ) equals NUMBER: 3",
    "id": 4681,
    "declarations": "z: CONICSECTION; m: TRIANGLE; 3: NUMBER",
    "facts": "Min(Inclination(LineOf(LowerVertex(z), Incenter(m)))) = 3"
},
{
    "assertion": "Coordinate ( Orthocenter ( TRIANGLE: n ) ) equals ( Slope ( LINE: P ), NUMBER: -45 )",
    "id": 4682,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LowerFocus ( CONICSECTION: U ) equals LeftFocus ( CONICSECTION: E )",
    "id": 4683,
    "declarations": "U: CONICSECTION; E: CONICSECTION",
    "facts": "LowerFocus(U) = LeftFocus(E)"
},
{
    "assertion": "Abs ( LineSegmentOf ( LowerVertex ( CONICSECTION: V ), LowerVertex ( CONICSECTION: F ) ) ) equals Quadrant ( POINT: F )",
    "id": 4684,
    "declarations": "V: CONICSECTION; F: CONICSECTION; F: POINT",
    "facts": "Abs(LineSegmentOf(LowerVertex(V), LowerVertex(F))) = Quadrant(F)"
},
{
    "assertion": "IsIntersect ( CURVE: h, CURVE: t ) equals BOOL: False",
    "id": 4685,
    "declarations": "h: CURVE; t: CURVE; False: BOOL",
    "facts": "IsIntersect(h, t) = False"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Y ) equals LeftFocus ( CONICSECTION: j )",
    "id": 4686,
    "declarations": "Y: TRIANGLE; j: CONICSECTION",
    "facts": "Orthocenter(Y) = LeftFocus(j)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: O ) equals UpperVertex ( CONICSECTION: c )",
    "id": 4687,
    "declarations": "O: TRIANGLE; c: CONICSECTION",
    "facts": "Orthocenter(O) = UpperVertex(c)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: E, CIRCLE: u ) equals BOOL: False",
    "id": 4688,
    "declarations": "E: LINESEGMENT; u: CIRCLE; False: BOOL",
    "facts": "IsDiameter(E, u) = False"
},
{
    "assertion": "AngleOf ( Orthocenter ( TRIANGLE: p ), POINT: C, POINT: K ) equals AngleOf ( POINT: e, FootPoint ( LINE: S, LINE: x ), POINT: n )",
    "id": 4689,
    "declarations": "p: TRIANGLE; C: POINT; K: POINT; e: POINT; S: LINE; x: LINE; n: POINT",
    "facts": "AngleOf(Orthocenter(p), C, K) = AngleOf(e, FootPoint(S, x), n)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: Y ) equals POINT: Z",
    "id": 4690,
    "declarations": "Y: CONICSECTION; Z: POINT",
    "facts": "LeftVertex(Y) = Z"
},
{
    "assertion": "DotProduct ( VECTOR: X, VECTOR: G ) equals NUMBER: 57",
    "id": 4691,
    "declarations": "X: VECTOR; G: VECTOR; 57: NUMBER",
    "facts": "DotProduct(X, G) = 57"
},
{
    "assertion": "Asymptote ( HYPERBOLA: x ) equals LINE: a",
    "id": 4692,
    "declarations": "x: HYPERBOLA; a: LINE",
    "facts": "Asymptote(x) = a"
},
{
    "assertion": "IsTangent ( LINE: c, CONICSECTION: R ) equals BOOL: True",
    "id": 4693,
    "declarations": "c: LINE; R: CONICSECTION; True: BOOL",
    "facts": "IsTangent(c, R) = True"
},
{
    "assertion": "InterceptChord ( LINE: N, CONICSECTION: w ) equals LINESEGMENT: Y",
    "id": 4694,
    "declarations": "N: LINE; w: CONICSECTION; Y: LINESEGMENT",
    "facts": "InterceptChord(N, w) = Y"
},
{
    "assertion": "RightPart ( HYPERBOLA: L ) equals CURVE: U",
    "id": 4695,
    "declarations": "L: HYPERBOLA; U: CURVE",
    "facts": "RightPart(L) = U"
},
{
    "assertion": "Orthocenter ( TRIANGLE: M ) equals POINT: r",
    "id": 4696,
    "declarations": "M: TRIANGLE; r: POINT",
    "facts": "Orthocenter(M) = r"
},
{
    "assertion": "MidPoint ( LINESEGMENT: P ) equals POINT: e",
    "id": 4697,
    "declarations": "P: LINESEGMENT; e: POINT",
    "facts": "MidPoint(P) = e"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: i, TRIANGLE: O ) equals BOOL: False",
    "id": 4698,
    "declarations": "i: CIRCLE; O: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(i, O) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: U ) equals POINT: D",
    "id": 4699,
    "declarations": "U: CONICSECTION; D: POINT",
    "facts": "LowerFocus(U) = D"
},
{
    "assertion": "LowerFocus ( CONICSECTION: X ) equals Center ( CONICSECTION: R )",
    "id": 4700,
    "declarations": "X: CONICSECTION; R: CONICSECTION",
    "facts": "LowerFocus(X) = Center(R)"
},
{
    "assertion": "Intersection ( CURVE: n, LeftPart ( HYPERBOLA: K ) ) equals POINT: o",
    "id": 4701,
    "declarations": "n: CURVE; K: HYPERBOLA; o: POINT",
    "facts": "Intersection(n, LeftPart(K)) = o"
},
{
    "assertion": "Min ( Length ( MinorAxis ( ELLIPSE: M ) ) ) equals lg ( Perimeter ( CONICSECTION: K ) )",
    "id": 4702,
    "declarations": "M: ELLIPSE; K: CONICSECTION",
    "facts": "Min(Length(MinorAxis(M))) = lg(Perimeter(K))"
},
{
    "assertion": "IsPerpendicular ( LINE: U, LeftDirectrix ( CONICSECTION: x ) ) equals BOOL: True",
    "id": 4703,
    "declarations": "U: LINE; x: CONICSECTION; True: BOOL",
    "facts": "IsPerpendicular(U, LeftDirectrix(x)) = True"
},
{
    "assertion": "Expression ( CURVE: M ) equals LocusEquation ( LeftVertex ( CONICSECTION: i ) )",
    "id": 4704,
    "declarations": "M: CURVE; i: CONICSECTION",
    "facts": "Expression(M) = LocusEquation(LeftVertex(i))"
},
{
    "assertion": "IsParallel ( LINE: K, LINE: R ) equals BOOL: False",
    "id": 4705,
    "declarations": "K: LINE; R: LINE; False: BOOL",
    "facts": "IsParallel(K, R) = False"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: N ) equals LINE: E",
    "id": 4706,
    "declarations": "N: CONICSECTION; E: LINE",
    "facts": "LeftDirectrix(N) = E"
},
{
    "assertion": "LowerFocus ( CONICSECTION: D ) equals UpperFocus ( CONICSECTION: K )",
    "id": 4707,
    "declarations": "D: CONICSECTION; K: CONICSECTION",
    "facts": "LowerFocus(D) = UpperFocus(K)"
},
{
    "assertion": "RightPart ( HYPERBOLA: V ) equals CURVE: c",
    "id": 4708,
    "declarations": "V: HYPERBOLA; c: CURVE",
    "facts": "RightPart(V) = c"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: J ) equals AXIS: xAxis",
    "id": 4709,
    "declarations": "J: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(J) = xAxis"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: K ) equals Intercept ( OverlappingLine ( LINESEGMENT: c ), AXIS: yAxis )",
    "id": 4710,
    "declarations": "K: CONICSECTION; c: LINESEGMENT; yAxis: AXIS",
    "facts": "HalfFocalLength(K) = Intercept(OverlappingLine(c), yAxis)"
},
{
    "assertion": "Negation ( LowerVertex ( CONICSECTION: U ) equals POINT: U ) equals BOOL: True",
    "id": 4711,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Length ( MinorAxis ( ELLIPSE: r ) ) equals Inclination ( OverlappingLine ( LINESEGMENT: o ) )",
    "id": 4712,
    "declarations": "r: ELLIPSE; o: LINESEGMENT",
    "facts": "Length(MinorAxis(r)) = Inclination(OverlappingLine(o))"
},
{
    "assertion": "IsOutTangent ( CIRCLE: j, CIRCLE: C ) equals BOOL: True",
    "id": 4713,
    "declarations": "j: CIRCLE; C: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(j, C) = True"
},
{
    "assertion": "Directrix ( CONICSECTION: Q ) equals TangentOfPoint ( RightFocus ( CONICSECTION: F ), LeftPart ( HYPERBOLA: o ) )",
    "id": 4714,
    "declarations": "Q: CONICSECTION; F: CONICSECTION; o: HYPERBOLA",
    "facts": "Directrix(Q) = TangentOfPoint(RightFocus(F), LeftPart(o))"
},
{
    "assertion": "Expression ( CURVE: I ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 4715,
    "declarations": "I: CURVE; y*space=*spacelog(x): EXPRESSION",
    "facts": "Expression(I) = y*space=*spacelog(x)"
},
{
    "assertion": "Intercept ( LINE: E, AXIS: yAxis ) equals Diameter ( CIRCLE: y )",
    "id": 4716,
    "declarations": "E: LINE; yAxis: AXIS; y: CIRCLE",
    "facts": "Intercept(E, yAxis) = Diameter(y)"
},
{
    "assertion": "NumIntersection ( LeftPart ( HYPERBOLA: C ), CURVE: O ) equals NUMBER: -51",
    "id": 4717,
    "declarations": "C: HYPERBOLA; O: CURVE; -51: NUMBER",
    "facts": "NumIntersection(LeftPart(C), O) = -51"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: k ) equals LINE: F",
    "id": 4718,
    "declarations": "k: LINESEGMENT; F: LINE",
    "facts": "PerpendicularBisector(k) = F"
},
{
    "assertion": "Slope ( LINE: E ) equals sqrt ( FocalLength ( CONICSECTION: M ) )",
    "id": 4719,
    "declarations": "E: LINE; M: CONICSECTION",
    "facts": "Slope(E) = sqrt(FocalLength(M))"
},
{
    "assertion": "Endpoint ( MinorAxis ( ELLIPSE: u ) ) equals POINT: R",
    "id": 4720,
    "declarations": "u: ELLIPSE; R: POINT",
    "facts": "Endpoint(MinorAxis(u)) = R"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: X, TRIANGLE: i ) equals BOOL: True",
    "id": 4721,
    "declarations": "X: CIRCLE; i: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(X, i) = True"
},
{
    "assertion": "Between ( Center ( CONICSECTION: T ), LowerFocus ( CONICSECTION: f ), POINT: C ) equals BOOL: False",
    "id": 4722,
    "declarations": "T: CONICSECTION; f: CONICSECTION; C: POINT; False: BOOL",
    "facts": "Between(Center(T), LowerFocus(f), C) = False"
},
{
    "assertion": "sqrt ( NUMBER: -11 ) equals XCoordinate ( POINT: D )",
    "id": 4723,
    "declarations": "-11: NUMBER; D: POINT",
    "facts": "sqrt(-11) = XCoordinate(D)"
},
{
    "assertion": "Directrix ( CONICSECTION: Z ) equals TangentOnPoint ( Incenter ( TRIANGLE: F ), CURVE: c )",
    "id": 4724,
    "declarations": "Z: CONICSECTION; F: TRIANGLE; c: CURVE",
    "facts": "Directrix(Z) = TangentOnPoint(Incenter(F), c)"
},
{
    "assertion": "Min ( NUMBER: -86 ) equals NUMBER: -33",
    "id": 4725,
    "declarations": "-86: NUMBER; -33: NUMBER",
    "facts": "Min(-86) = -33"
},
{
    "assertion": "TangentPoint ( LINE: A, CircumCircle ( TRIANGLE: f ) ) equals POINT: v",
    "id": 4726,
    "declarations": "A: LINE; f: TRIANGLE; v: POINT",
    "facts": "TangentPoint(A, CircumCircle(f)) = v"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: d ) equals TangentOnPoint ( UpperVertex ( CONICSECTION: Y ), CURVE: x )",
    "id": 4727,
    "declarations": "d: CONICSECTION; Y: CONICSECTION; x: CURVE",
    "facts": "LeftDirectrix(d) = TangentOnPoint(UpperVertex(Y), x)"
},
{
    "assertion": "Focus ( CONICSECTION: z ) equals POINT: H",
    "id": 4728,
    "declarations": "z: CONICSECTION; H: POINT",
    "facts": "Focus(z) = H"
},
{
    "assertion": "ApplyUnit ( lg ( Abs ( LINESEGMENT: F ) ), DEGREESTR: degree )",
    "id": 4729,
    "declarations": "F: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(lg(Abs(F)), degree) = None"
},
{
    "assertion": "Eccentricity ( CONICSECTION: F ) equals Distance ( POINT: n, POINT: V )",
    "id": 4730,
    "declarations": "F: CONICSECTION; n: POINT; V: POINT",
    "facts": "Eccentricity(F) = Distance(n, V)"
},
{
    "assertion": "Abs ( LINESEGMENT: i ) equals NUMBER: 55",
    "id": 4731,
    "declarations": "i: LINESEGMENT; 55: NUMBER",
    "facts": "Abs(i) = 55"
},
{
    "assertion": "Max ( HalfFocalLength ( CONICSECTION: v ) ) equals Area ( CONICSECTION: v )",
    "id": 4732,
    "declarations": "v: CONICSECTION; v: CONICSECTION",
    "facts": "Max(HalfFocalLength(v)) = Area(v)"
},
{
    "assertion": "IsInTangent ( CIRCLE: i, CIRCLE: G ) equals BOOL: False",
    "id": 4733,
    "declarations": "i: CIRCLE; G: CIRCLE; False: BOOL",
    "facts": "IsInTangent(i, G) = False"
},
{
    "assertion": "LeftFocus ( CONICSECTION: R ) equals LeftFocus ( CONICSECTION: K )",
    "id": 4734,
    "declarations": "R: CONICSECTION; K: CONICSECTION",
    "facts": "LeftFocus(R) = LeftFocus(K)"
},
{
    "assertion": "Directrix ( CONICSECTION: Y ) equals RightDirectrix ( CONICSECTION: O )",
    "id": 4735,
    "declarations": "Y: CONICSECTION; O: CONICSECTION",
    "facts": "Directrix(Y) = RightDirectrix(O)"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: N ) ) equals Perimeter ( CONICSECTION: J )",
    "id": 4736,
    "declarations": "N: CONICSECTION; J: CONICSECTION",
    "facts": "Inclination(LeftDirectrix(N)) = Perimeter(J)"
},
{
    "assertion": "Radius ( CIRCLE: Q ) equals NUMBER: 49",
    "id": 4737,
    "declarations": "Q: CIRCLE; 49: NUMBER",
    "facts": "Radius(Q) = 49"
},
{
    "assertion": "RightPart ( HYPERBOLA: v ) equals Locus ( UpperVertex ( CONICSECTION: R ) )",
    "id": 4738,
    "declarations": "v: HYPERBOLA; R: CONICSECTION",
    "facts": "RightPart(v) = Locus(UpperVertex(R))"
},
{
    "assertion": "Min ( Length ( LINESEGMENT: s ) ) equals HalfFocalLength ( CONICSECTION: D )",
    "id": 4739,
    "declarations": "s: LINESEGMENT; D: CONICSECTION",
    "facts": "Min(Length(s)) = HalfFocalLength(D)"
},
{
    "assertion": "Center ( CONICSECTION: A ) equals POINT: v",
    "id": 4740,
    "declarations": "A: CONICSECTION; v: POINT",
    "facts": "Center(A) = v"
},
{
    "assertion": "Locus ( Projection ( Orthocenter ( TRIANGLE: Z ), LINE: y ) ) equals CURVE: P",
    "id": 4741,
    "declarations": "Z: TRIANGLE; y: LINE; P: CURVE",
    "facts": "Locus(Projection(Orthocenter(Z), y)) = P"
},
{
    "assertion": "PointOnCurve ( POINT: W, CURVE: F ) equals BOOL: True",
    "id": 4742,
    "declarations": "W: POINT; F: CURVE; True: BOOL",
    "facts": "PointOnCurve(W, F) = True"
},
{
    "assertion": "Between ( POINT: s, LeftVertex ( CONICSECTION: D ), UpperVertex ( CONICSECTION: D ) ) equals BOOL: True",
    "id": 4743,
    "declarations": "s: POINT; D: CONICSECTION; D: CONICSECTION; True: BOOL",
    "facts": "Between(s, LeftVertex(D), UpperVertex(D)) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: E ) equals POINT: S",
    "id": 4744,
    "declarations": "E: CONICSECTION; S: POINT",
    "facts": "LeftVertex(E) = S"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: w ) equals LINE: B",
    "id": 4745,
    "declarations": "w: CONICSECTION; B: LINE",
    "facts": "LeftDirectrix(w) = B"
},
{
    "assertion": "Directrix ( CONICSECTION: I ) equals LeftDirectrix ( CONICSECTION: D )",
    "id": 4746,
    "declarations": "I: CONICSECTION; D: CONICSECTION",
    "facts": "Directrix(I) = LeftDirectrix(D)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: L ) equals LINE: a",
    "id": 4747,
    "declarations": "L: CONICSECTION; a: LINE",
    "facts": "RightDirectrix(L) = a"
},
{
    "assertion": "Expression ( CURVE: r ) equals EXPRESSION: x^2*space+*spacey^2*space=*space25",
    "id": 4748,
    "declarations": "r: CURVE; x^2*space+*spacey^2*space=*space25: EXPRESSION",
    "facts": "Expression(r) = x^2*space+*spacey^2*space=*space25"
},
{
    "assertion": "RightFocus ( CONICSECTION: M ) equals RightVertex ( CONICSECTION: u )",
    "id": 4749,
    "declarations": "M: CONICSECTION; u: CONICSECTION",
    "facts": "RightFocus(M) = RightVertex(u)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: l ) equals LineOf ( POINT: Q, LeftVertex ( CONICSECTION: v ) )",
    "id": 4750,
    "declarations": "l: LINESEGMENT; Q: POINT; v: CONICSECTION",
    "facts": "OverlappingLine(l) = LineOf(Q, LeftVertex(v))"
},
{
    "assertion": "Negation ( Length ( LINESEGMENT: L ) equals Radius ( CIRCLE: G ) ) equals BOOL: False",
    "id": 4751,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LowerFocus ( CONICSECTION: W ) equals Orthocenter ( TRIANGLE: H )",
    "id": 4752,
    "declarations": "W: CONICSECTION; H: TRIANGLE",
    "facts": "LowerFocus(W) = Orthocenter(H)"
},
{
    "assertion": "Slope ( LINE: F ) equals NUMBER: 23",
    "id": 4753,
    "declarations": "F: LINE; 23: NUMBER",
    "facts": "Slope(F) = 23"
},
{
    "assertion": "Length ( LINESEGMENT: C ) equals Intercept ( LINE: A, AXIS: xAxis )",
    "id": 4754,
    "declarations": "C: LINESEGMENT; A: LINE; xAxis: AXIS",
    "facts": "Length(C) = Intercept(A, xAxis)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: i ) equals CURVE: I",
    "id": 4755,
    "declarations": "i: HYPERBOLA; I: CURVE",
    "facts": "LeftPart(i) = I"
},
{
    "assertion": "Min ( Perimeter ( CONICSECTION: B ) ) equals Quadrant ( LowerVertex ( CONICSECTION: s ) )",
    "id": 4756,
    "declarations": "B: CONICSECTION; s: CONICSECTION",
    "facts": "Min(Perimeter(B)) = Quadrant(LowerVertex(s))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: r ) equals LINE: A",
    "id": 4757,
    "declarations": "r: CONICSECTION; A: LINE",
    "facts": "RightDirectrix(r) = A"
},
{
    "assertion": "InterReciprocal ( Length ( LINESEGMENT: j ) ) equals NUMBER: 69",
    "id": 4758,
    "declarations": "j: LINESEGMENT; 69: NUMBER",
    "facts": "InterReciprocal(Length(j)) = 69"
},
{
    "assertion": "LowerFocus ( CONICSECTION: U ) equals POINT: N",
    "id": 4759,
    "declarations": "U: CONICSECTION; N: POINT",
    "facts": "LowerFocus(U) = N"
},
{
    "assertion": "Quadrant ( POINT: M ) equals NUMBER: -63",
    "id": 4760,
    "declarations": "M: POINT; -63: NUMBER",
    "facts": "Quadrant(M) = -63"
},
{
    "assertion": "UpperFocus ( CONICSECTION: S ) equals LowerFocus ( CONICSECTION: u )",
    "id": 4761,
    "declarations": "S: CONICSECTION; u: CONICSECTION",
    "facts": "UpperFocus(S) = LowerFocus(u)"
},
{
    "assertion": "LocusEquation ( Incenter ( TRIANGLE: i ) ) equals EXPRESSION: x^2/4*space+*spacey^2/16*space=*space1",
    "id": 4762,
    "declarations": "i: TRIANGLE; x^2/4*space+*spacey^2/16*space=*space1: EXPRESSION",
    "facts": "LocusEquation(Incenter(i)) = x^2/4*space+*spacey^2/16*space=*space1"
},
{
    "assertion": "FocalLength ( CONICSECTION: r ) equals sqrt ( Abs ( LINESEGMENT: p ) )",
    "id": 4763,
    "declarations": "r: CONICSECTION; p: LINESEGMENT",
    "facts": "FocalLength(r) = sqrt(Abs(p))"
},
{
    "assertion": "Focus ( CONICSECTION: e ) equals RightFocus ( CONICSECTION: d )",
    "id": 4764,
    "declarations": "e: CONICSECTION; d: CONICSECTION",
    "facts": "Focus(e) = RightFocus(d)"
},
{
    "assertion": "AngleOf ( UpperVertex ( CONICSECTION: D ), LowerFocus ( CONICSECTION: r ), LeftVertex ( CONICSECTION: y ) ) equals AngleOf ( Projection ( POINT: O, PerpendicularBisector ( LINESEGMENT: B ) ), LeftVertex ( CONICSECTION: D ), Orthocenter ( TRIANGLE: z ) )",
    "id": 4765,
    "declarations": "D: CONICSECTION; r: CONICSECTION; y: CONICSECTION; O: POINT; B: LINESEGMENT; D: CONICSECTION; z: TRIANGLE",
    "facts": "AngleOf(UpperVertex(D), LowerFocus(r), LeftVertex(y)) = AngleOf(Projection(O, PerpendicularBisector(B)), LeftVertex(D), Orthocenter(z))"
},
{
    "assertion": "Coordinate ( POINT: U ) equals ( sqrt ( Inclination ( LINE: Y ) ), NUMBER: 72 )",
    "id": 4766,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "TangentPoint ( LINE: c, CIRCLE: N ) equals POINT: H",
    "id": 4767,
    "declarations": "c: LINE; N: CIRCLE; H: POINT",
    "facts": "TangentPoint(c, N) = H"
},
{
    "assertion": "Locus ( LowerVertex ( CONICSECTION: j ) ) equals CURVE: Y",
    "id": 4768,
    "declarations": "j: CONICSECTION; Y: CURVE",
    "facts": "Locus(LowerVertex(j)) = Y"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: u ) ) equals LINE: B",
    "id": 4769,
    "declarations": "u: ELLIPSE; B: LINE",
    "facts": "OverlappingLine(MajorAxis(u)) = B"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: y, TRIANGLE: E ) equals BOOL: True",
    "id": 4770,
    "declarations": "y: CIRCLE; E: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(y, E) = True"
},
{
    "assertion": "RightVertex ( CONICSECTION: H ) equals LeftVertex ( CONICSECTION: o )",
    "id": 4771,
    "declarations": "H: CONICSECTION; o: CONICSECTION",
    "facts": "RightVertex(H) = LeftVertex(o)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: m ) equals POINT: Y",
    "id": 4772,
    "declarations": "m: CONICSECTION; Y: POINT",
    "facts": "LowerVertex(m) = Y"
},
{
    "assertion": "Expression ( RightPart ( HYPERBOLA: g ) ) equals LocusEquation ( POINT: K )",
    "id": 4773,
    "declarations": "g: HYPERBOLA; K: POINT",
    "facts": "Expression(RightPart(g)) = LocusEquation(K)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: L ) equals Circumcenter ( TRIANGLE: R )",
    "id": 4774,
    "declarations": "L: CONICSECTION; R: TRIANGLE",
    "facts": "UpperFocus(L) = Circumcenter(R)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: M ) equals LeftVertex ( CONICSECTION: i )",
    "id": 4775,
    "declarations": "M: CONICSECTION; i: CONICSECTION",
    "facts": "LowerFocus(M) = LeftVertex(i)"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: a, CIRCLE: t ) equals BOOL: True",
    "id": 4776,
    "declarations": "a: LINESEGMENT; t: CIRCLE; True: BOOL",
    "facts": "IsDiameter(a, t) = True"
},
{
    "assertion": "Expression ( CURVE: o ) equals EXPRESSION: x^2*space+*spacexy*space+*spacey^2*space=*space1",
    "id": 4777,
    "declarations": "o: CURVE; x^2*space+*spacexy*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "Expression(o) = x^2*space+*spacexy*space+*spacey^2*space=*space1"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: k, TRIANGLE: g ) equals BOOL: True",
    "id": 4778,
    "declarations": "k: CIRCLE; g: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(k, g) = True"
},
{
    "assertion": "TriangleOf ( RightFocus ( CONICSECTION: h ), POINT: V, Incenter ( TRIANGLE: p ) ) equals TRIANGLE: J",
    "id": 4779,
    "declarations": "h: CONICSECTION; V: POINT; p: TRIANGLE; J: TRIANGLE",
    "facts": "TriangleOf(RightFocus(h), V, Incenter(p)) = J"
},
{
    "assertion": "LineOf ( POINT: n, POINT: y ) equals TangentOnPoint ( Projection ( Center ( CONICSECTION: C ), LINE: i ), CURVE: W )",
    "id": 4780,
    "declarations": "n: POINT; y: POINT; C: CONICSECTION; i: LINE; W: CURVE",
    "facts": "LineOf(n, y) = TangentOnPoint(Projection(Center(C), i), W)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: k, TRIANGLE: F ) equals BOOL: False",
    "id": 4781,
    "declarations": "k: CIRCLE; F: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(k, F) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: P ) equals LINE: M",
    "id": 4782,
    "declarations": "P: CONICSECTION; M: LINE",
    "facts": "Directrix(P) = M"
},
{
    "assertion": "FocalLength ( CONICSECTION: k ) equals Area ( CONICSECTION: t )",
    "id": 4783,
    "declarations": "k: CONICSECTION; t: CONICSECTION",
    "facts": "FocalLength(k) = Area(t)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: q ) equals LINESEGMENT: c",
    "id": 4784,
    "declarations": "q: ELLIPSE; c: LINESEGMENT",
    "facts": "ImaginaryAxis(q) = c"
},
{
    "assertion": "RightVertex ( CONICSECTION: e ) equals Incenter ( TRIANGLE: t )",
    "id": 4785,
    "declarations": "e: CONICSECTION; t: TRIANGLE",
    "facts": "RightVertex(e) = Incenter(t)"
},
{
    "assertion": "IsIntersect ( CURVE: j, CURVE: Z ) equals BOOL: True",
    "id": 4786,
    "declarations": "j: CURVE; Z: CURVE; True: BOOL",
    "facts": "IsIntersect(j, Z) = True"
},
{
    "assertion": "Distance ( POINT: L, Orthocenter ( TRIANGLE: c ) ) equals Length ( RealAxis ( ELLIPSE: J ) )",
    "id": 4787,
    "declarations": "L: POINT; c: TRIANGLE; J: ELLIPSE",
    "facts": "Distance(L, Orthocenter(c)) = Length(RealAxis(J))"
},
{
    "assertion": "InterReciprocal ( Inclination ( TangentOnPoint ( POINT: y, RightPart ( HYPERBOLA: M ) ) ) ) equals InterReciprocal ( NUMBER: 91 )",
    "id": 4788,
    "declarations": "y: POINT; M: HYPERBOLA; 91: NUMBER",
    "facts": "InterReciprocal(Inclination(TangentOnPoint(y, RightPart(M)))) = InterReciprocal(91)"
},
{
    "assertion": "Area ( CONICSECTION: S ) equals lg ( Diameter ( CIRCLE: P ) )",
    "id": 4789,
    "declarations": "S: CONICSECTION; P: CIRCLE",
    "facts": "Area(S) = lg(Diameter(P))"
},
{
    "assertion": "InterceptChord ( LINE: s, CONICSECTION: q ) equals LineSegmentOf ( POINT: m, POINT: u )",
    "id": 4790,
    "declarations": "s: LINE; q: CONICSECTION; m: POINT; u: POINT",
    "facts": "InterceptChord(s, q) = LineSegmentOf(m, u)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: s, CIRCLE: b ) equals BOOL: True",
    "id": 4791,
    "declarations": "s: CIRCLE; b: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(s, b) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: t ) equals POINT: Y",
    "id": 4792,
    "declarations": "t: CONICSECTION; Y: POINT",
    "facts": "LeftVertex(t) = Y"
},
{
    "assertion": "IsPerpendicular ( LINE: z, LINE: h ) equals BOOL: False",
    "id": 4793,
    "declarations": "z: LINE; h: LINE; False: BOOL",
    "facts": "IsPerpendicular(z, h) = False"
},
{
    "assertion": "ApplyUnit ( NUMBER: 92, DEGREESTR: degree )",
    "id": 4794,
    "declarations": "92: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(92, degree) = None"
},
{
    "assertion": "IsChordOf ( MinorAxis ( ELLIPSE: J ), CONICSECTION: m ) equals BOOL: False",
    "id": 4795,
    "declarations": "J: ELLIPSE; m: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(MinorAxis(J), m) = False"
},
{
    "assertion": "UpperVertex ( CONICSECTION: X ) equals POINT: M",
    "id": 4796,
    "declarations": "X: CONICSECTION; M: POINT",
    "facts": "UpperVertex(X) = M"
},
{
    "assertion": "LocusEquation ( LeftFocus ( CONICSECTION: P ) ) equals EXPRESSION: x*space+*spacey^2*space=*space1",
    "id": 4797,
    "declarations": "P: CONICSECTION; x*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(LeftFocus(P)) = x*space+*spacey^2*space=*space1"
},
{
    "assertion": "IsPerpendicular ( LINE: n, LineOf ( LowerVertex ( CONICSECTION: c ), POINT: M ) ) equals BOOL: True",
    "id": 4798,
    "declarations": "n: LINE; c: CONICSECTION; M: POINT; True: BOOL",
    "facts": "IsPerpendicular(n, LineOf(LowerVertex(c), M)) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: c ) equals LINESEGMENT: G",
    "id": 4799,
    "declarations": "c: ELLIPSE; G: LINESEGMENT",
    "facts": "MinorAxis(c) = G"
},
{
    "assertion": "TriangleOf ( Center ( CONICSECTION: X ), POINT: E, RightFocus ( CONICSECTION: a ) ) equals TRIANGLE: R",
    "id": 4800,
    "declarations": "X: CONICSECTION; E: POINT; a: CONICSECTION; R: TRIANGLE",
    "facts": "TriangleOf(Center(X), E, RightFocus(a)) = R"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: b ) equals LineSegmentOf ( POINT: N, UpperVertex ( CONICSECTION: P ) )",
    "id": 4801,
    "declarations": "b: ELLIPSE; N: POINT; P: CONICSECTION",
    "facts": "ImaginaryAxis(b) = LineSegmentOf(N, UpperVertex(P))"
},
{
    "assertion": "Intersection ( CURVE: D, CURVE: i ) equals POINT: a",
    "id": 4802,
    "declarations": "D: CURVE; i: CURVE; a: POINT",
    "facts": "Intersection(D, i) = a"
},
{
    "assertion": "LineSegmentOf ( LeftFocus ( CONICSECTION: f ), Circumcenter ( TRIANGLE: L ) ) equals LINESEGMENT: s",
    "id": 4803,
    "declarations": "f: CONICSECTION; L: TRIANGLE; s: LINESEGMENT",
    "facts": "LineSegmentOf(LeftFocus(f), Circumcenter(L)) = s"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: C, TRIANGLE: O ) equals BOOL: True",
    "id": 4804,
    "declarations": "C: CIRCLE; O: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(C, O) = True"
},
{
    "assertion": "Eccentricity ( CONICSECTION: C ) equals Quadrant ( POINT: X )",
    "id": 4805,
    "declarations": "C: CONICSECTION; X: POINT",
    "facts": "Eccentricity(C) = Quadrant(X)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: U ) equals LowerFocus ( CONICSECTION: q )",
    "id": 4806,
    "declarations": "U: LINESEGMENT; q: CONICSECTION",
    "facts": "MidPoint(U) = LowerFocus(q)"
},
{
    "assertion": "Locus ( POINT: I ) equals CURVE: R",
    "id": 4807,
    "declarations": "I: POINT; R: CURVE",
    "facts": "Locus(I) = R"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: f ) equals AXIS: yAxis",
    "id": 4808,
    "declarations": "f: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(f) = yAxis"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: x, CIRCLE: k ) equals BOOL: False",
    "id": 4809,
    "declarations": "x: LINESEGMENT; k: CIRCLE; False: BOOL",
    "facts": "IsDiameter(x, k) = False"
},
{
    "assertion": "RightPart ( HYPERBOLA: W ) equals Locus ( POINT: N )",
    "id": 4810,
    "declarations": "W: HYPERBOLA; N: POINT",
    "facts": "RightPart(W) = Locus(N)"
},
{
    "assertion": "Directrix ( CONICSECTION: u ) equals LINE: Z",
    "id": 4811,
    "declarations": "u: CONICSECTION; Z: LINE",
    "facts": "Directrix(u) = Z"
},
{
    "assertion": "Endpoint ( LINESEGMENT: L ) equals LowerVertex ( CONICSECTION: x )",
    "id": 4812,
    "declarations": "L: LINESEGMENT; x: CONICSECTION",
    "facts": "Endpoint(L) = LowerVertex(x)"
},
{
    "assertion": "Quadrant ( POINT: f ) equals Abs ( LINESEGMENT: O )",
    "id": 4813,
    "declarations": "f: POINT; O: LINESEGMENT",
    "facts": "Quadrant(f) = Abs(O)"
},
{
    "assertion": "IsInTangent ( CIRCLE: i, CIRCLE: q ) equals BOOL: False",
    "id": 4814,
    "declarations": "i: CIRCLE; q: CIRCLE; False: BOOL",
    "facts": "IsInTangent(i, q) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: F ) equals LeftVertex ( CONICSECTION: i )",
    "id": 4815,
    "declarations": "F: CONICSECTION; i: CONICSECTION",
    "facts": "LowerFocus(F) = LeftVertex(i)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: u ) equals POINT: R",
    "id": 4816,
    "declarations": "u: TRIANGLE; R: POINT",
    "facts": "Circumcenter(u) = R"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: j ) equals LINE: X",
    "id": 4817,
    "declarations": "j: LINESEGMENT; X: LINE",
    "facts": "PerpendicularBisector(j) = X"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: R ) equals AXIS: yAxis",
    "id": 4818,
    "declarations": "R: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(R) = yAxis"
},
{
    "assertion": "LowerFocus ( CONICSECTION: E ) equals Orthocenter ( TRIANGLE: N )",
    "id": 4819,
    "declarations": "E: CONICSECTION; N: TRIANGLE",
    "facts": "LowerFocus(E) = Orthocenter(N)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: i ) equals POINT: C",
    "id": 4820,
    "declarations": "i: TRIANGLE; C: POINT",
    "facts": "Circumcenter(i) = C"
},
{
    "assertion": "MinorAxis ( ELLIPSE: V ) equals LINESEGMENT: h",
    "id": 4821,
    "declarations": "V: ELLIPSE; h: LINESEGMENT",
    "facts": "MinorAxis(V) = h"
},
{
    "assertion": "RightVertex ( CONICSECTION: e ) equals MidPoint ( LINESEGMENT: R )",
    "id": 4822,
    "declarations": "e: CONICSECTION; R: LINESEGMENT",
    "facts": "RightVertex(e) = MidPoint(R)"
},
{
    "assertion": "Center ( CONICSECTION: i ) equals UpperFocus ( CONICSECTION: i )",
    "id": 4823,
    "declarations": "i: CONICSECTION; i: CONICSECTION",
    "facts": "Center(i) = UpperFocus(i)"
},
{
    "assertion": "IsIntersect ( CURVE: p, CURVE: w ) equals BOOL: False",
    "id": 4824,
    "declarations": "p: CURVE; w: CURVE; False: BOOL",
    "facts": "IsIntersect(p, w) = False"
},
{
    "assertion": "ApplyUnit ( NUMBER: -90, DEGREESTR: degree )",
    "id": 4825,
    "declarations": "-90: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-90, degree) = None"
},
{
    "assertion": "TriangleOf ( FootPoint ( LINE: c, LINE: Z ), POINT: E, POINT: q ) equals TRIANGLE: Q",
    "id": 4826,
    "declarations": "c: LINE; Z: LINE; E: POINT; q: POINT; Q: TRIANGLE",
    "facts": "TriangleOf(FootPoint(c, Z), E, q) = Q"
},
{
    "assertion": "sqrt ( FocalLength ( CONICSECTION: J ) ) equals Eccentricity ( CONICSECTION: j )",
    "id": 4827,
    "declarations": "J: CONICSECTION; j: CONICSECTION",
    "facts": "sqrt(FocalLength(J)) = Eccentricity(j)"
},
{
    "assertion": "NumIntersection ( CURVE: x, RightPart ( HYPERBOLA: q ) ) equals Inclination ( LINE: h )",
    "id": 4828,
    "declarations": "x: CURVE; q: HYPERBOLA; h: LINE",
    "facts": "NumIntersection(x, RightPart(q)) = Inclination(h)"
},
{
    "assertion": "Center ( CONICSECTION: r ) equals Projection ( POINT: A, TangentOnPoint ( POINT: I, LeftPart ( HYPERBOLA: d ) ) )",
    "id": 4829,
    "declarations": "r: CONICSECTION; A: POINT; I: POINT; d: HYPERBOLA",
    "facts": "Center(r) = Projection(A, TangentOnPoint(I, LeftPart(d)))"
},
{
    "assertion": "Vertex ( CONICSECTION: R ) equals FootPoint ( TangentOnPoint ( POINT: Q, CURVE: V ), LINE: R )",
    "id": 4830,
    "declarations": "R: CONICSECTION; Q: POINT; V: CURVE; R: LINE",
    "facts": "Vertex(R) = FootPoint(TangentOnPoint(Q, V), R)"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: t ) ) equals LocusEquation ( POINT: G )",
    "id": 4831,
    "declarations": "t: HYPERBOLA; G: POINT",
    "facts": "Expression(LeftPart(t)) = LocusEquation(G)"
},
{
    "assertion": "Focus ( CONICSECTION: m ) equals POINT: K",
    "id": 4832,
    "declarations": "m: CONICSECTION; K: POINT",
    "facts": "Focus(m) = K"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: g ) ) equals POINT: q",
    "id": 4833,
    "declarations": "g: ELLIPSE; q: POINT",
    "facts": "Endpoint(ImaginaryAxis(g)) = q"
},
{
    "assertion": "RightVertex ( CONICSECTION: n ) equals LeftVertex ( CONICSECTION: u )",
    "id": 4834,
    "declarations": "n: CONICSECTION; u: CONICSECTION",
    "facts": "RightVertex(n) = LeftVertex(u)"
},
{
    "assertion": "Incenter ( TriangleOf ( FootPoint ( LINE: I, LINE: g ), UpperFocus ( CONICSECTION: q ), Circumcenter ( TRIANGLE: D ) ) ) equals POINT: l",
    "id": 4835,
    "declarations": "I: LINE; g: LINE; q: CONICSECTION; D: TRIANGLE; l: POINT",
    "facts": "Incenter(TriangleOf(FootPoint(I, g), UpperFocus(q), Circumcenter(D))) = l"
},
{
    "assertion": "AngleOf ( Orthocenter ( TRIANGLE: G ), Incenter ( TRIANGLE: F ), MidPoint ( LINESEGMENT: m ) ) equals ApplyUnit ( NUMBER: -11, DEGREESTR: degree )",
    "id": 4836,
    "declarations": "G: TRIANGLE; F: TRIANGLE; m: LINESEGMENT; -11: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(Orthocenter(G), Incenter(F), MidPoint(m)) = ApplyUnit(-11, degree)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: p ) equals LINE: A",
    "id": 4837,
    "declarations": "p: CONICSECTION; A: LINE",
    "facts": "RightDirectrix(p) = A"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: J ) equals RightDirectrix ( CONICSECTION: R )",
    "id": 4838,
    "declarations": "J: LINESEGMENT; R: CONICSECTION",
    "facts": "PerpendicularBisector(J) = RightDirectrix(R)"
},
{
    "assertion": "TangentOnPoint ( POINT: H, CURVE: R ) equals LINE: H",
    "id": 4839,
    "declarations": "H: POINT; R: CURVE; H: LINE",
    "facts": "TangentOnPoint(H, R) = H"
},
{
    "assertion": "Circumcenter ( TRIANGLE: i ) equals RightFocus ( CONICSECTION: e )",
    "id": 4840,
    "declarations": "i: TRIANGLE; e: CONICSECTION",
    "facts": "Circumcenter(i) = RightFocus(e)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: U ) equals POINT: X",
    "id": 4841,
    "declarations": "U: CONICSECTION; X: POINT",
    "facts": "UpperFocus(U) = X"
},
{
    "assertion": "MajorAxis ( ELLIPSE: P ) equals LINESEGMENT: c",
    "id": 4842,
    "declarations": "P: ELLIPSE; c: LINESEGMENT",
    "facts": "MajorAxis(P) = c"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: V ) ) equals Eccentricity ( CONICSECTION: R )",
    "id": 4843,
    "declarations": "V: CONICSECTION; R: CONICSECTION",
    "facts": "XCoordinate(LeftFocus(V)) = Eccentricity(R)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: T, TRIANGLE: o ) equals BOOL: False",
    "id": 4844,
    "declarations": "T: CIRCLE; o: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(T, o) = False"
},
{
    "assertion": "Circumcenter ( TRIANGLE: N ) equals POINT: C",
    "id": 4845,
    "declarations": "N: TRIANGLE; C: POINT",
    "facts": "Circumcenter(N) = C"
},
{
    "assertion": "Max ( NUMBER: 100 ) equals YCoordinate ( POINT: r )",
    "id": 4846,
    "declarations": "100: NUMBER; r: POINT",
    "facts": "Max(100) = YCoordinate(r)"
},
{
    "assertion": "Diameter ( CIRCLE: i ) equals Intercept ( LINE: r, AXIS: yAxis )",
    "id": 4847,
    "declarations": "i: CIRCLE; r: LINE; yAxis: AXIS",
    "facts": "Diameter(i) = Intercept(r, yAxis)"
},
{
    "assertion": "RealAxis ( ELLIPSE: k ) equals RealAxis ( ELLIPSE: o )",
    "id": 4848,
    "declarations": "k: ELLIPSE; o: ELLIPSE",
    "facts": "RealAxis(k) = RealAxis(o)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: L ) equals LINESEGMENT: P",
    "id": 4849,
    "declarations": "L: ELLIPSE; P: LINESEGMENT",
    "facts": "ImaginaryAxis(L) = P"
},
{
    "assertion": "Directrix ( CONICSECTION: U ) equals LINE: P",
    "id": 4850,
    "declarations": "U: CONICSECTION; P: LINE",
    "facts": "Directrix(U) = P"
},
{
    "assertion": "LeftPart ( HYPERBOLA: D ) equals CURVE: A",
    "id": 4851,
    "declarations": "D: HYPERBOLA; A: CURVE",
    "facts": "LeftPart(D) = A"
},
{
    "assertion": "MajorAxis ( ELLIPSE: H ) equals LINESEGMENT: X",
    "id": 4852,
    "declarations": "H: ELLIPSE; X: LINESEGMENT",
    "facts": "MajorAxis(H) = X"
},
{
    "assertion": "Asymptote ( HYPERBOLA: l ) equals LINE: T",
    "id": 4853,
    "declarations": "l: HYPERBOLA; T: LINE",
    "facts": "Asymptote(l) = T"
},
{
    "assertion": "Area ( CONICSECTION: c ) equals Quadrant ( UpperFocus ( CONICSECTION: v ) )",
    "id": 4854,
    "declarations": "c: CONICSECTION; v: CONICSECTION",
    "facts": "Area(c) = Quadrant(UpperFocus(v))"
},
{
    "assertion": "And ( ImaginaryAxis ( ELLIPSE: N ) equals LINESEGMENT: m, MinorAxis ( ELLIPSE: k ) equals RealAxis ( ELLIPSE: h ) ) equals BOOL: True",
    "id": 4855,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "FocalLength ( CONICSECTION: p ) equals Quadrant ( POINT: v )",
    "id": 4856,
    "declarations": "p: CONICSECTION; v: POINT",
    "facts": "FocalLength(p) = Quadrant(v)"
},
{
    "assertion": "InterceptChord ( LINE: h, CONICSECTION: P ) equals MinorAxis ( ELLIPSE: G )",
    "id": 4857,
    "declarations": "h: LINE; P: CONICSECTION; G: ELLIPSE",
    "facts": "InterceptChord(h, P) = MinorAxis(G)"
},
{
    "assertion": "Length ( LINESEGMENT: f ) equals Perimeter ( CONICSECTION: n )",
    "id": 4858,
    "declarations": "f: LINESEGMENT; n: CONICSECTION",
    "facts": "Length(f) = Perimeter(n)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: y ) equals RightFocus ( CONICSECTION: C )",
    "id": 4859,
    "declarations": "y: LINESEGMENT; C: CONICSECTION",
    "facts": "Endpoint(y) = RightFocus(C)"
},
{
    "assertion": "Perimeter ( CONICSECTION: u ) equals NumIntersection ( RightPart ( HYPERBOLA: x ), Locus ( POINT: k ) )",
    "id": 4860,
    "declarations": "u: CONICSECTION; x: HYPERBOLA; k: POINT",
    "facts": "Perimeter(u) = NumIntersection(RightPart(x), Locus(k))"
},
{
    "assertion": "FootPoint ( LINE: B, RightDirectrix ( CONICSECTION: t ) ) equals Orthocenter ( TRIANGLE: e )",
    "id": 4861,
    "declarations": "B: LINE; t: CONICSECTION; e: TRIANGLE",
    "facts": "FootPoint(B, RightDirectrix(t)) = Orthocenter(e)"
},
{
    "assertion": "Intersection ( RightPart ( HYPERBOLA: I ), LeftPart ( HYPERBOLA: i ) ) equals RightFocus ( CONICSECTION: o )",
    "id": 4862,
    "declarations": "I: HYPERBOLA; i: HYPERBOLA; o: CONICSECTION",
    "facts": "Intersection(RightPart(I), LeftPart(i)) = RightFocus(o)"
},
{
    "assertion": "Radius ( CIRCLE: Y ) equals Min ( HalfFocalLength ( CONICSECTION: Q ) )",
    "id": 4863,
    "declarations": "Y: CIRCLE; Q: CONICSECTION",
    "facts": "Radius(Y) = Min(HalfFocalLength(Q))"
},
{
    "assertion": "FocalLength ( CONICSECTION: L ) equals NUMBER: -58",
    "id": 4864,
    "declarations": "L: CONICSECTION; -58: NUMBER",
    "facts": "FocalLength(L) = -58"
},
{
    "assertion": "TriangleOf ( MidPoint ( LINESEGMENT: Z ), UpperVertex ( CONICSECTION: f ), POINT: X ) equals TRIANGLE: a",
    "id": 4865,
    "declarations": "Z: LINESEGMENT; f: CONICSECTION; X: POINT; a: TRIANGLE",
    "facts": "TriangleOf(MidPoint(Z), UpperVertex(f), X) = a"
},
{
    "assertion": "LowerFocus ( CONICSECTION: f ) equals POINT: u",
    "id": 4866,
    "declarations": "f: CONICSECTION; u: POINT",
    "facts": "LowerFocus(f) = u"
},
{
    "assertion": "Orthocenter ( TRIANGLE: o ) equals Projection ( UpperFocus ( CONICSECTION: s ), LINE: e )",
    "id": 4867,
    "declarations": "o: TRIANGLE; s: CONICSECTION; e: LINE",
    "facts": "Orthocenter(o) = Projection(UpperFocus(s), e)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: s, TRIANGLE: D ) equals BOOL: True",
    "id": 4868,
    "declarations": "s: CIRCLE; D: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(s, D) = True"
},
{
    "assertion": "Abs ( MajorAxis ( ELLIPSE: u ) ) equals Slope ( LINE: S )",
    "id": 4869,
    "declarations": "u: ELLIPSE; S: LINE",
    "facts": "Abs(MajorAxis(u)) = Slope(S)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: Y ) equals Length ( LINESEGMENT: L )",
    "id": 4870,
    "declarations": "Y: CONICSECTION; L: LINESEGMENT",
    "facts": "Eccentricity(Y) = Length(L)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: N ) equals CIRCLE: W",
    "id": 4871,
    "declarations": "N: TRIANGLE; W: CIRCLE",
    "facts": "CircumCircle(N) = W"
},
{
    "assertion": "ApplyUnit ( YCoordinate ( Circumcenter ( TRIANGLE: A ) ), DEGREESTR: degree )",
    "id": 4872,
    "declarations": "A: TRIANGLE; degree: DEGREESTR",
    "facts": "ApplyUnit(YCoordinate(Circumcenter(A)), degree) = None"
},
{
    "assertion": "LowerVertex ( CONICSECTION: I ) equals LeftFocus ( CONICSECTION: f )",
    "id": 4873,
    "declarations": "I: CONICSECTION; f: CONICSECTION",
    "facts": "LowerVertex(I) = LeftFocus(f)"
},
{
    "assertion": "And ( IsTangent ( LeftDirectrix ( CONICSECTION: u ), CONICSECTION: k ) equals BOOL: True, MajorAxis ( ELLIPSE: v ) equals LINESEGMENT: i ) equals BOOL: True",
    "id": 4874,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "lg ( lg ( NUMBER: 58 ) ) equals Diameter ( CIRCLE: J )",
    "id": 4875,
    "declarations": "58: NUMBER; J: CIRCLE",
    "facts": "lg(lg(58)) = Diameter(J)"
},
{
    "assertion": "IsPerpendicular ( LINE: g, LINE: C ) equals BOOL: True",
    "id": 4876,
    "declarations": "g: LINE; C: LINE; True: BOOL",
    "facts": "IsPerpendicular(g, C) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: p ) equals POINT: M",
    "id": 4877,
    "declarations": "p: TRIANGLE; M: POINT",
    "facts": "Incenter(p) = M"
},
{
    "assertion": "Center ( CONICSECTION: D ) equals RightVertex ( CONICSECTION: b )",
    "id": 4878,
    "declarations": "D: CONICSECTION; b: CONICSECTION",
    "facts": "Center(D) = RightVertex(b)"
},
{
    "assertion": "Negation ( UpperVertex ( CONICSECTION: i ) equals MidPoint ( RealAxis ( ELLIPSE: D ) ) ) equals BOOL: True",
    "id": 4879,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "NumIntersection ( LeftPart ( HYPERBOLA: S ), CURVE: t ) equals sqrt ( NUMBER: -89 )",
    "id": 4880,
    "declarations": "S: HYPERBOLA; t: CURVE; -89: NUMBER",
    "facts": "NumIntersection(LeftPart(S), t) = sqrt(-89)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: p ) equals POINT: v",
    "id": 4881,
    "declarations": "p: CONICSECTION; v: POINT",
    "facts": "LowerVertex(p) = v"
},
{
    "assertion": "LocusEquation ( LowerVertex ( CONICSECTION: K ) ) equals EXPRESSION: x^2*space+*spacey^2*space=*space9",
    "id": 4882,
    "declarations": "K: CONICSECTION; x^2*space+*spacey^2*space=*space9: EXPRESSION",
    "facts": "LocusEquation(LowerVertex(K)) = x^2*space+*spacey^2*space=*space9"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: q ) equals LINE: O",
    "id": 4883,
    "declarations": "q: CONICSECTION; O: LINE",
    "facts": "RightDirectrix(q) = O"
},
{
    "assertion": "Max ( Area ( CONICSECTION: I ) ) equals sqrt ( Inclination ( LINE: g ) )",
    "id": 4884,
    "declarations": "I: CONICSECTION; g: LINE",
    "facts": "Max(Area(I)) = sqrt(Inclination(g))"
},
{
    "assertion": "Diameter ( CIRCLE: t ) equals Diameter ( CIRCLE: m )",
    "id": 4885,
    "declarations": "t: CIRCLE; m: CIRCLE",
    "facts": "Diameter(t) = Diameter(m)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: N ) equals LINE: h",
    "id": 4886,
    "declarations": "N: LINESEGMENT; h: LINE",
    "facts": "PerpendicularBisector(N) = h"
},
{
    "assertion": "IsIntersect ( CURVE: K, CURVE: t ) equals BOOL: True",
    "id": 4887,
    "declarations": "K: CURVE; t: CURVE; True: BOOL",
    "facts": "IsIntersect(K, t) = True"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: U, CircumCircle ( TRIANGLE: T ) ) equals BOOL: True",
    "id": 4888,
    "declarations": "U: LINESEGMENT; T: TRIANGLE; True: BOOL",
    "facts": "IsDiameter(U, CircumCircle(T)) = True"
},
{
    "assertion": "TriangleOf ( POINT: p, POINT: l, Incenter ( TRIANGLE: r ) ) equals TRIANGLE: w",
    "id": 4889,
    "declarations": "p: POINT; l: POINT; r: TRIANGLE; w: TRIANGLE",
    "facts": "TriangleOf(p, l, Incenter(r)) = w"
},
{
    "assertion": "TangentOfPoint ( Incenter ( TRIANGLE: G ), CURVE: T ) equals LINE: n",
    "id": 4890,
    "declarations": "G: TRIANGLE; T: CURVE; n: LINE",
    "facts": "TangentOfPoint(Incenter(G), T) = n"
},
{
    "assertion": "PointOnCurve ( MidPoint ( LINESEGMENT: E ), CURVE: E ) equals BOOL: True",
    "id": 4891,
    "declarations": "E: LINESEGMENT; E: CURVE; True: BOOL",
    "facts": "PointOnCurve(MidPoint(E), E) = True"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: e, CONICSECTION: g ) equals BOOL: True",
    "id": 4892,
    "declarations": "e: LINESEGMENT; g: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(e, g) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: I ) equals LINE: m",
    "id": 4893,
    "declarations": "I: CONICSECTION; m: LINE",
    "facts": "RightDirectrix(I) = m"
},
{
    "assertion": "LeftVertex ( CONICSECTION: y ) equals MidPoint ( LINESEGMENT: a )",
    "id": 4894,
    "declarations": "y: CONICSECTION; a: LINESEGMENT",
    "facts": "LeftVertex(y) = MidPoint(a)"
},
{
    "assertion": "Expression ( CURVE: W ) equals EXPRESSION: x^2*space+*space4y^2*space=*space16",
    "id": 4895,
    "declarations": "W: CURVE; x^2*space+*space4y^2*space=*space16: EXPRESSION",
    "facts": "Expression(W) = x^2*space+*space4y^2*space=*space16"
},
{
    "assertion": "Slope ( LINE: d ) equals YCoordinate ( POINT: U )",
    "id": 4896,
    "declarations": "d: LINE; U: POINT",
    "facts": "Slope(d) = YCoordinate(U)"
},
{
    "assertion": "RightVertex ( CONICSECTION: l ) equals POINT: f",
    "id": 4897,
    "declarations": "l: CONICSECTION; f: POINT",
    "facts": "RightVertex(l) = f"
},
{
    "assertion": "Orthocenter ( TRIANGLE: f ) equals LeftVertex ( CONICSECTION: m )",
    "id": 4898,
    "declarations": "f: TRIANGLE; m: CONICSECTION",
    "facts": "Orthocenter(f) = LeftVertex(m)"
},
{
    "assertion": "RightFocus ( CONICSECTION: o ) equals MidPoint ( LINESEGMENT: n )",
    "id": 4899,
    "declarations": "o: CONICSECTION; n: LINESEGMENT",
    "facts": "RightFocus(o) = MidPoint(n)"
},
{
    "assertion": "Focus ( CONICSECTION: p ) equals RightVertex ( CONICSECTION: k )",
    "id": 4900,
    "declarations": "p: CONICSECTION; k: CONICSECTION",
    "facts": "Focus(p) = RightVertex(k)"
},
{
    "assertion": "Intersection ( CURVE: d, RightPart ( HYPERBOLA: u ) ) equals Orthocenter ( TRIANGLE: z )",
    "id": 4901,
    "declarations": "d: CURVE; u: HYPERBOLA; z: TRIANGLE",
    "facts": "Intersection(d, RightPart(u)) = Orthocenter(z)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: c ) equals POINT: V",
    "id": 4902,
    "declarations": "c: LINESEGMENT; V: POINT",
    "facts": "MidPoint(c) = V"
},
{
    "assertion": "Inclination ( LINE: z ) equals lg ( sqrt ( NUMBER: 21 ) )",
    "id": 4903,
    "declarations": "z: LINE; 21: NUMBER",
    "facts": "Inclination(z) = lg(sqrt(21))"
},
{
    "assertion": "Coordinate ( RightVertex ( CONICSECTION: O ) ) equals ( Length ( MajorAxis ( ELLIPSE: L ) ), Abs ( RealAxis ( ELLIPSE: B ) ) )",
    "id": 4904,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "XCoordinate ( POINT: d ) equals Slope ( RightDirectrix ( CONICSECTION: U ) )",
    "id": 4905,
    "declarations": "d: POINT; U: CONICSECTION",
    "facts": "XCoordinate(d) = Slope(RightDirectrix(U))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: y ) equals Intercept ( LINE: q, AXIS: yAxis )",
    "id": 4906,
    "declarations": "y: CONICSECTION; q: LINE; yAxis: AXIS",
    "facts": "HalfFocalLength(y) = Intercept(q, yAxis)"
},
{
    "assertion": "Radius ( CIRCLE: m ) equals NUMBER: 85",
    "id": 4907,
    "declarations": "m: CIRCLE; 85: NUMBER",
    "facts": "Radius(m) = 85"
},
{
    "assertion": "Slope ( OverlappingLine ( LINESEGMENT: R ) ) equals Length ( LINESEGMENT: K )",
    "id": 4908,
    "declarations": "R: LINESEGMENT; K: LINESEGMENT",
    "facts": "Slope(OverlappingLine(R)) = Length(K)"
},
{
    "assertion": "Max ( HalfFocalLength ( CONICSECTION: w ) ) equals Length ( LINESEGMENT: h )",
    "id": 4909,
    "declarations": "w: CONICSECTION; h: LINESEGMENT",
    "facts": "Max(HalfFocalLength(w)) = Length(h)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: x ) equals AXIS: yAxis",
    "id": 4910,
    "declarations": "x: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(x) = yAxis"
},
{
    "assertion": "LeftPart ( HYPERBOLA: i ) equals CURVE: T",
    "id": 4911,
    "declarations": "i: HYPERBOLA; T: CURVE",
    "facts": "LeftPart(i) = T"
},
{
    "assertion": "Inclination ( LINE: i ) equals DotProduct ( VECTOR: v, VECTOR: e )",
    "id": 4912,
    "declarations": "i: LINE; v: VECTOR; e: VECTOR",
    "facts": "Inclination(i) = DotProduct(v, e)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: P ) equals CIRCLE: o",
    "id": 4913,
    "declarations": "P: TRIANGLE; o: CIRCLE",
    "facts": "CircumCircle(P) = o"
},
{
    "assertion": "FootPoint ( LINE: o, LINE: Z ) equals POINT: W",
    "id": 4914,
    "declarations": "o: LINE; Z: LINE; W: POINT",
    "facts": "FootPoint(o, Z) = W"
},
{
    "assertion": "RealAxis ( ELLIPSE: b ) equals LINESEGMENT: U",
    "id": 4915,
    "declarations": "b: ELLIPSE; U: LINESEGMENT",
    "facts": "RealAxis(b) = U"
},
{
    "assertion": "Negation ( PointOnCurve ( LeftVertex ( CONICSECTION: b ), CURVE: S ) equals BOOL: True ) equals BOOL: False",
    "id": 4916,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Circumcenter ( TRIANGLE: E ) equals UpperVertex ( CONICSECTION: n )",
    "id": 4917,
    "declarations": "E: TRIANGLE; n: CONICSECTION",
    "facts": "Circumcenter(E) = UpperVertex(n)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: y ) equals RightFocus ( CONICSECTION: s )",
    "id": 4918,
    "declarations": "y: TRIANGLE; s: CONICSECTION",
    "facts": "Circumcenter(y) = RightFocus(s)"
},
{
    "assertion": "Coordinate ( POINT: x ) equals ( DotProduct ( VectorOf ( POINT: a, MidPoint ( LINESEGMENT: j ) ), VECTOR: c ), sqrt ( NUMBER: 2 ) )",
    "id": 4919,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MinorAxis ( ELLIPSE: r ) equals LINESEGMENT: i",
    "id": 4920,
    "declarations": "r: ELLIPSE; i: LINESEGMENT",
    "facts": "MinorAxis(r) = i"
},
{
    "assertion": "Center ( CONICSECTION: n ) equals LowerVertex ( CONICSECTION: g )",
    "id": 4921,
    "declarations": "n: CONICSECTION; g: CONICSECTION",
    "facts": "Center(n) = LowerVertex(g)"
},
{
    "assertion": "VectorOf ( MidPoint ( RealAxis ( ELLIPSE: j ) ), POINT: M ) equals VECTOR: l",
    "id": 4922,
    "declarations": "j: ELLIPSE; M: POINT; l: VECTOR",
    "facts": "VectorOf(MidPoint(RealAxis(j)), M) = l"
},
{
    "assertion": "lg ( NUMBER: 19 ) equals NUMBER: 75",
    "id": 4923,
    "declarations": "19: NUMBER; 75: NUMBER",
    "facts": "lg(19) = 75"
},
{
    "assertion": "Vertex ( CONICSECTION: T ) equals POINT: R",
    "id": 4924,
    "declarations": "T: CONICSECTION; R: POINT",
    "facts": "Vertex(T) = R"
},
{
    "assertion": "YCoordinate ( POINT: N ) equals Min ( NUMBER: -3 )",
    "id": 4925,
    "declarations": "N: POINT; -3: NUMBER",
    "facts": "YCoordinate(N) = Min(-3)"
},
{
    "assertion": "Center ( CONICSECTION: r ) equals Center ( CONICSECTION: J )",
    "id": 4926,
    "declarations": "r: CONICSECTION; J: CONICSECTION",
    "facts": "Center(r) = Center(J)"
},
{
    "assertion": "Directrix ( CONICSECTION: n ) equals LINE: e",
    "id": 4927,
    "declarations": "n: CONICSECTION; e: LINE",
    "facts": "Directrix(n) = e"
},
{
    "assertion": "Directrix ( CONICSECTION: p ) equals LINE: Y",
    "id": 4928,
    "declarations": "p: CONICSECTION; Y: LINE",
    "facts": "Directrix(p) = Y"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: J, TRIANGLE: J ) equals BOOL: True",
    "id": 4929,
    "declarations": "J: CIRCLE; J: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(J, J) = True"
},
{
    "assertion": "sqrt ( Distance ( POINT: h, POINT: t ) ) equals Diameter ( CircumCircle ( TRIANGLE: I ) )",
    "id": 4930,
    "declarations": "h: POINT; t: POINT; I: TRIANGLE",
    "facts": "sqrt(Distance(h, t)) = Diameter(CircumCircle(I))"
},
{
    "assertion": "FocalLength ( CONICSECTION: I ) equals NUMBER: -59",
    "id": 4931,
    "declarations": "I: CONICSECTION; -59: NUMBER",
    "facts": "FocalLength(I) = -59"
},
{
    "assertion": "InterceptChord ( RightDirectrix ( CONICSECTION: f ), CONICSECTION: A ) equals LINESEGMENT: a",
    "id": 4932,
    "declarations": "f: CONICSECTION; A: CONICSECTION; a: LINESEGMENT",
    "facts": "InterceptChord(RightDirectrix(f), A) = a"
},
{
    "assertion": "LeftVertex ( CONICSECTION: y ) equals POINT: j",
    "id": 4933,
    "declarations": "y: CONICSECTION; j: POINT",
    "facts": "LeftVertex(y) = j"
},
{
    "assertion": "LineSegmentOf ( POINT: Y, POINT: F ) equals LINESEGMENT: I",
    "id": 4934,
    "declarations": "Y: POINT; F: POINT; I: LINESEGMENT",
    "facts": "LineSegmentOf(Y, F) = I"
},
{
    "assertion": "Center ( CONICSECTION: I ) equals UpperFocus ( CONICSECTION: A )",
    "id": 4935,
    "declarations": "I: CONICSECTION; A: CONICSECTION",
    "facts": "Center(I) = UpperFocus(A)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: w ) equals RightDirectrix ( CONICSECTION: w )",
    "id": 4936,
    "declarations": "w: CONICSECTION; w: CONICSECTION",
    "facts": "RightDirectrix(w) = RightDirectrix(w)"
},
{
    "assertion": "InterReciprocal ( Slope ( LINE: Q ) ) equals HalfFocalLength ( CONICSECTION: x )",
    "id": 4937,
    "declarations": "Q: LINE; x: CONICSECTION",
    "facts": "InterReciprocal(Slope(Q)) = HalfFocalLength(x)"
},
{
    "assertion": "Intersection ( CURVE: n, CURVE: t ) equals POINT: V",
    "id": 4938,
    "declarations": "n: CURVE; t: CURVE; V: POINT",
    "facts": "Intersection(n, t) = V"
},
{
    "assertion": "Intercept ( LINE: v, AXIS: xAxis ) equals Inclination ( LINE: y )",
    "id": 4939,
    "declarations": "v: LINE; xAxis: AXIS; y: LINE",
    "facts": "Intercept(v, xAxis) = Inclination(y)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: G, TRIANGLE: E ) equals BOOL: True",
    "id": 4940,
    "declarations": "G: CIRCLE; E: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(G, E) = True"
},
{
    "assertion": "LowerVertex ( CONICSECTION: F ) equals UpperVertex ( CONICSECTION: Q )",
    "id": 4941,
    "declarations": "F: CONICSECTION; Q: CONICSECTION",
    "facts": "LowerVertex(F) = UpperVertex(Q)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: X, TRIANGLE: h ) equals BOOL: True",
    "id": 4942,
    "declarations": "X: CIRCLE; h: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(X, h) = True"
},
{
    "assertion": "Abs ( LINESEGMENT: h ) equals lg ( lg ( Abs ( LINESEGMENT: T ) ) )",
    "id": 4943,
    "declarations": "h: LINESEGMENT; T: LINESEGMENT",
    "facts": "Abs(h) = lg(lg(Abs(T)))"
},
{
    "assertion": "TriangleOf ( POINT: D, POINT: l, RightFocus ( CONICSECTION: s ) ) equals TRIANGLE: n",
    "id": 4944,
    "declarations": "D: POINT; l: POINT; s: CONICSECTION; n: TRIANGLE",
    "facts": "TriangleOf(D, l, RightFocus(s)) = n"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: y, TRIANGLE: p ) equals BOOL: True",
    "id": 4945,
    "declarations": "y: CIRCLE; p: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(y, p) = True"
},
{
    "assertion": "Intercept ( LINE: f, AXIS: yAxis ) equals Abs ( LINESEGMENT: D )",
    "id": 4946,
    "declarations": "f: LINE; yAxis: AXIS; D: LINESEGMENT",
    "facts": "Intercept(f, yAxis) = Abs(D)"
},
{
    "assertion": "RealAxis ( ELLIPSE: A ) equals LineSegmentOf ( MidPoint ( LINESEGMENT: W ), POINT: r )",
    "id": 4947,
    "declarations": "A: ELLIPSE; W: LINESEGMENT; r: POINT",
    "facts": "RealAxis(A) = LineSegmentOf(MidPoint(W), r)"
},
{
    "assertion": "sqrt ( NUMBER: 48 ) equals Abs ( LINESEGMENT: L )",
    "id": 4948,
    "declarations": "48: NUMBER; L: LINESEGMENT",
    "facts": "sqrt(48) = Abs(L)"
},
{
    "assertion": "InterReciprocal ( Perimeter ( CONICSECTION: l ) ) equals Min ( NUMBER: -53 )",
    "id": 4949,
    "declarations": "l: CONICSECTION; -53: NUMBER",
    "facts": "InterReciprocal(Perimeter(l)) = Min(-53)"
},
{
    "assertion": "InterReciprocal ( Diameter ( CIRCLE: i ) ) equals NUMBER: -21",
    "id": 4950,
    "declarations": "i: CIRCLE; -21: NUMBER",
    "facts": "InterReciprocal(Diameter(i)) = -21"
},
{
    "assertion": "RightFocus ( CONICSECTION: c ) equals POINT: F",
    "id": 4951,
    "declarations": "c: CONICSECTION; F: POINT",
    "facts": "RightFocus(c) = F"
},
{
    "assertion": "LeftFocus ( CONICSECTION: K ) equals POINT: L",
    "id": 4952,
    "declarations": "K: CONICSECTION; L: POINT",
    "facts": "LeftFocus(K) = L"
},
{
    "assertion": "Max ( Perimeter ( CONICSECTION: s ) ) equals sqrt ( NUMBER: -78 )",
    "id": 4953,
    "declarations": "s: CONICSECTION; -78: NUMBER",
    "facts": "Max(Perimeter(s)) = sqrt(-78)"
},
{
    "assertion": "VectorOf ( Center ( CONICSECTION: F ), POINT: y ) equals VECTOR: c",
    "id": 4954,
    "declarations": "F: CONICSECTION; y: POINT; c: VECTOR",
    "facts": "VectorOf(Center(F), y) = c"
},
{
    "assertion": "Incenter ( TRIANGLE: F ) equals POINT: A",
    "id": 4955,
    "declarations": "F: TRIANGLE; A: POINT",
    "facts": "Incenter(F) = A"
},
{
    "assertion": "Expression ( CURVE: U ) equals EXPRESSION: x^2*space+*spacey^2*space=*space25",
    "id": 4956,
    "declarations": "U: CURVE; x^2*space+*spacey^2*space=*space25: EXPRESSION",
    "facts": "Expression(U) = x^2*space+*spacey^2*space=*space25"
},
{
    "assertion": "DotProduct ( VECTOR: n, VECTOR: L ) equals FocalLength ( CONICSECTION: Q )",
    "id": 4957,
    "declarations": "n: VECTOR; L: VECTOR; Q: CONICSECTION",
    "facts": "DotProduct(n, L) = FocalLength(Q)"
},
{
    "assertion": "Directrix ( CONICSECTION: J ) equals LINE: q",
    "id": 4958,
    "declarations": "J: CONICSECTION; q: LINE",
    "facts": "Directrix(J) = q"
},
{
    "assertion": "Asymptote ( HYPERBOLA: a ) equals LINE: T",
    "id": 4959,
    "declarations": "a: HYPERBOLA; T: LINE",
    "facts": "Asymptote(a) = T"
},
{
    "assertion": "TangentPoint ( RightDirectrix ( CONICSECTION: g ), CIRCLE: O ) equals POINT: l",
    "id": 4960,
    "declarations": "g: CONICSECTION; O: CIRCLE; l: POINT",
    "facts": "TangentPoint(RightDirectrix(g), O) = l"
},
{
    "assertion": "Expression ( CURVE: K ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 4961,
    "declarations": "K: CURVE; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "Expression(K) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "RightPart ( HYPERBOLA: o ) equals CURVE: v",
    "id": 4962,
    "declarations": "o: HYPERBOLA; v: CURVE",
    "facts": "RightPart(o) = v"
},
{
    "assertion": "Circumcenter ( TRIANGLE: I ) equals POINT: r",
    "id": 4963,
    "declarations": "I: TRIANGLE; r: POINT",
    "facts": "Circumcenter(I) = r"
},
{
    "assertion": "Coordinate ( UpperFocus ( CONICSECTION: v ) ) equals ( NUMBER: -89, Abs ( LINESEGMENT: G ) )",
    "id": 4964,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: z ) ) equals Min ( NUMBER: 87 )",
    "id": 4965,
    "declarations": "z: TRIANGLE; 87: NUMBER",
    "facts": "Diameter(CircumCircle(z)) = Min(87)"
},
{
    "assertion": "Perimeter ( CONICSECTION: m ) equals HalfFocalLength ( CONICSECTION: u )",
    "id": 4966,
    "declarations": "m: CONICSECTION; u: CONICSECTION",
    "facts": "Perimeter(m) = HalfFocalLength(u)"
},
{
    "assertion": "RealAxis ( ELLIPSE: c ) equals LINESEGMENT: C",
    "id": 4967,
    "declarations": "c: ELLIPSE; C: LINESEGMENT",
    "facts": "RealAxis(c) = C"
},
{
    "assertion": "LeftPart ( HYPERBOLA: c ) equals CURVE: T",
    "id": 4968,
    "declarations": "c: HYPERBOLA; T: CURVE",
    "facts": "LeftPart(c) = T"
},
{
    "assertion": "LeftVertex ( CONICSECTION: z ) equals LowerVertex ( CONICSECTION: O )",
    "id": 4969,
    "declarations": "z: CONICSECTION; O: CONICSECTION",
    "facts": "LeftVertex(z) = LowerVertex(O)"
},
{
    "assertion": "IsIntersect ( CURVE: X, CURVE: C ) equals BOOL: False",
    "id": 4970,
    "declarations": "X: CURVE; C: CURVE; False: BOOL",
    "facts": "IsIntersect(X, C) = False"
},
{
    "assertion": "sqrt ( Abs ( LINESEGMENT: m ) ) equals NUMBER: -5",
    "id": 4971,
    "declarations": "m: LINESEGMENT; -5: NUMBER",
    "facts": "sqrt(Abs(m)) = -5"
},
{
    "assertion": "Asymptote ( HYPERBOLA: x ) equals LINE: l",
    "id": 4972,
    "declarations": "x: HYPERBOLA; l: LINE",
    "facts": "Asymptote(x) = l"
},
{
    "assertion": "FootPoint ( LINE: Q, PerpendicularBisector ( MinorAxis ( ELLIPSE: P ) ) ) equals POINT: z",
    "id": 4973,
    "declarations": "Q: LINE; P: ELLIPSE; z: POINT",
    "facts": "FootPoint(Q, PerpendicularBisector(MinorAxis(P))) = z"
},
{
    "assertion": "IsParallel ( LINE: y, LINE: G ) equals BOOL: False",
    "id": 4974,
    "declarations": "y: LINE; G: LINE; False: BOOL",
    "facts": "IsParallel(y, G) = False"
},
{
    "assertion": "RightPart ( HYPERBOLA: E ) equals CURVE: X",
    "id": 4975,
    "declarations": "E: HYPERBOLA; X: CURVE",
    "facts": "RightPart(E) = X"
},
{
    "assertion": "Intercept ( LINE: w, AXIS: yAxis ) equals Diameter ( CIRCLE: K )",
    "id": 4976,
    "declarations": "w: LINE; yAxis: AXIS; K: CIRCLE",
    "facts": "Intercept(w, yAxis) = Diameter(K)"
},
{
    "assertion": "Incenter ( TRIANGLE: Y ) equals Circumcenter ( TRIANGLE: k )",
    "id": 4977,
    "declarations": "Y: TRIANGLE; k: TRIANGLE",
    "facts": "Incenter(Y) = Circumcenter(k)"
},
{
    "assertion": "InterReciprocal ( Min ( Inclination ( LineOf ( POINT: d, POINT: K ) ) ) ) equals Quadrant ( LowerFocus ( CONICSECTION: b ) )",
    "id": 4978,
    "declarations": "d: POINT; K: POINT; b: CONICSECTION",
    "facts": "InterReciprocal(Min(Inclination(LineOf(d, K)))) = Quadrant(LowerFocus(b))"
},
{
    "assertion": "Area ( CONICSECTION: x ) equals Diameter ( CIRCLE: z )",
    "id": 4979,
    "declarations": "x: CONICSECTION; z: CIRCLE",
    "facts": "Area(x) = Diameter(z)"
},
{
    "assertion": "Diameter ( CIRCLE: A ) equals NUMBER: 86",
    "id": 4980,
    "declarations": "A: CIRCLE; 86: NUMBER",
    "facts": "Diameter(A) = 86"
},
{
    "assertion": "UpperVertex ( CONICSECTION: O ) equals Circumcenter ( TRIANGLE: r )",
    "id": 4981,
    "declarations": "O: CONICSECTION; r: TRIANGLE",
    "facts": "UpperVertex(O) = Circumcenter(r)"
},
{
    "assertion": "And ( IsChordOf ( ImaginaryAxis ( ELLIPSE: p ), CONICSECTION: t ) equals BOOL: True, IsInscribedCircle ( CIRCLE: n, TRIANGLE: w ) equals BOOL: True ) equals BOOL: False",
    "id": 4982,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Expression ( CURVE: P ) equals EXPRESSION: y*space=*spacee^x",
    "id": 4983,
    "declarations": "P: CURVE; y*space=*spacee^x: EXPRESSION",
    "facts": "Expression(P) = y*space=*spacee^x"
},
{
    "assertion": "TangentOfPoint ( POINT: x, RightPart ( HYPERBOLA: C ) ) equals LINE: N",
    "id": 4984,
    "declarations": "x: POINT; C: HYPERBOLA; N: LINE",
    "facts": "TangentOfPoint(x, RightPart(C)) = N"
},
{
    "assertion": "IsParallel ( OverlappingLine ( LINESEGMENT: Y ), LINE: U ) equals BOOL: True",
    "id": 4985,
    "declarations": "Y: LINESEGMENT; U: LINE; True: BOOL",
    "facts": "IsParallel(OverlappingLine(Y), U) = True"
},
{
    "assertion": "CircumCircle ( TRIANGLE: U ) equals CIRCLE: p",
    "id": 4986,
    "declarations": "U: TRIANGLE; p: CIRCLE",
    "facts": "CircumCircle(U) = p"
},
{
    "assertion": "CircumCircle ( TRIANGLE: n ) equals CIRCLE: d",
    "id": 4987,
    "declarations": "n: TRIANGLE; d: CIRCLE",
    "facts": "CircumCircle(n) = d"
},
{
    "assertion": "Endpoint ( ImaginaryAxis ( ELLIPSE: f ) ) equals POINT: E",
    "id": 4988,
    "declarations": "f: ELLIPSE; E: POINT",
    "facts": "Endpoint(ImaginaryAxis(f)) = E"
},
{
    "assertion": "Eccentricity ( CONICSECTION: g ) equals sqrt ( NUMBER: 45 )",
    "id": 4989,
    "declarations": "g: CONICSECTION; 45: NUMBER",
    "facts": "Eccentricity(g) = sqrt(45)"
},
{
    "assertion": "RightVertex ( CONICSECTION: e ) equals Orthocenter ( TRIANGLE: j )",
    "id": 4990,
    "declarations": "e: CONICSECTION; j: TRIANGLE",
    "facts": "RightVertex(e) = Orthocenter(j)"
},
{
    "assertion": "Vertex ( CONICSECTION: F ) equals POINT: u",
    "id": 4991,
    "declarations": "F: CONICSECTION; u: POINT",
    "facts": "Vertex(F) = u"
},
{
    "assertion": "Slope ( TangentOnPoint ( POINT: u, CURVE: G ) ) equals InterReciprocal ( NUMBER: -37 )",
    "id": 4992,
    "declarations": "u: POINT; G: CURVE; -37: NUMBER",
    "facts": "Slope(TangentOnPoint(u, G)) = InterReciprocal(-37)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: Z ) equals POINT: v",
    "id": 4993,
    "declarations": "Z: CONICSECTION; v: POINT",
    "facts": "LeftVertex(Z) = v"
},
{
    "assertion": "UpperFocus ( CONICSECTION: V ) equals RightFocus ( CONICSECTION: G )",
    "id": 4994,
    "declarations": "V: CONICSECTION; G: CONICSECTION",
    "facts": "UpperFocus(V) = RightFocus(G)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: j ) equals POINT: q",
    "id": 4995,
    "declarations": "j: TRIANGLE; q: POINT",
    "facts": "Circumcenter(j) = q"
},
{
    "assertion": "Min ( NUMBER: 22 ) equals Inclination ( LineOf ( POINT: G, POINT: t ) )",
    "id": 4996,
    "declarations": "22: NUMBER; G: POINT; t: POINT",
    "facts": "Min(22) = Inclination(LineOf(G, t))"
},
{
    "assertion": "LowerFocus ( CONICSECTION: S ) equals Center ( CONICSECTION: D )",
    "id": 4997,
    "declarations": "S: CONICSECTION; D: CONICSECTION",
    "facts": "LowerFocus(S) = Center(D)"
},
{
    "assertion": "Center ( CONICSECTION: h ) equals Incenter ( TRIANGLE: B )",
    "id": 4998,
    "declarations": "h: CONICSECTION; B: TRIANGLE",
    "facts": "Center(h) = Incenter(B)"
},
{
    "assertion": "XCoordinate ( Circumcenter ( TRIANGLE: G ) ) equals NUMBER: 54",
    "id": 4999,
    "declarations": "G: TRIANGLE; 54: NUMBER",
    "facts": "XCoordinate(Circumcenter(G)) = 54"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: V ) equals Intercept ( TangentOfPoint ( Center ( CONICSECTION: I ), CURVE: f ), AXIS: yAxis )",
    "id": 5000,
    "declarations": "V: CONICSECTION; I: CONICSECTION; f: CURVE; yAxis: AXIS",
    "facts": "HalfFocalLength(V) = Intercept(TangentOfPoint(Center(I), f), yAxis)"
},
{
        "assertion": "Coordinate ( POINT: A ) equals ( NUMBER: 10, NUMBER: 20 )",
        "id": 1,
        "declarations": "A: POINT",
        "facts": "Coordinate(A) = (10, 20)"
    },
    {
        "assertion": "Coordinate ( LowerVertex ( CONICSECTION: B ) ) equals ( NUMBER: -5, NUMBER: -30 )",
        "id": 2,
        "declarations": "B: CONICSECTION",
        "facts": "Coordinate(LowerVertex(B)) = (-5, -30)"
    },
    {
        "assertion": "Coordinate ( POINT: C ) equals ( NUMBER: 15, NUMBER: -25 )",
        "id": 3,
        "declarations": "C: POINT",
        "facts": "Coordinate(C) = (15, -25)"
    },
    {
        "assertion": "Coordinate ( UpperVertex ( CONICSECTION: D ) ) equals ( NUMBER: 7, NUMBER: 12 )",
        "id": 4,
        "declarations": "D: CONICSECTION",
        "facts": "Coordinate(UpperVertex(D)) = (7, 12)"
    },
    {
        "assertion": "Coordinate ( POINT: E ) equals ( NUMBER: -50, NUMBER: 60 )",
        "id": 5,
        "declarations": "E: POINT",
        "facts": "Coordinate(E) = (-50, 60)"
    },
    {
        "assertion": "Coordinate ( UpperFocus ( CONICSECTION: F ) ) equals ( NUMBER: 3, NUMBER: 9 )",
        "id": 6,
        "declarations": "F: CONICSECTION",
        "facts": "Coordinate(UpperFocus(F)) = (3, 9)"
    },
    {
        "assertion": "Coordinate ( Circumcenter ( TRIANGLE: G ) ) equals ( Radius ( CIRCLE: H ), NUMBER: -15 )",
        "id": 7,
        "declarations": "G: TRIANGLE; H: CIRCLE",
        "facts": "Coordinate(Circumcenter(G)) = (Radius(H), -15)"
    },
    {
        "assertion": "Coordinate ( POINT: I ) equals ( NUMBER: -80, NUMBER: -50 )",
        "id": 8,
        "declarations": "I: POINT",
        "facts": "Coordinate(I) = (-80, -50)"
    },
    {
        "assertion": "Coordinate ( POINT: J ) equals ( NUMBER: 70, NUMBER: -90 )",
        "id": 9,
        "declarations": "J: POINT",
        "facts": "Coordinate(J) = (70, -90)"
    },
    {
        "assertion": "Coordinate ( Orthocenter ( TRIANGLE: K ) ) equals ( NUMBER: 30, NUMBER: -80 )",
        "id": 10,
        "declarations": "K: TRIANGLE",
        "facts": "Coordinate(Orthocenter(K)) = (30, -80)"
    },
    {
        "assertion": "Coordinate ( RightFocus ( CONICSECTION: L ) ) equals ( NUMBER: 90, NUMBER: 45 )",
        "id": 11,
        "declarations": "L: CONICSECTION",
        "facts": "Coordinate(RightFocus(L)) = (90, 45)"
    },
    {
        "assertion": "Coordinate ( LeftFocus ( CONICSECTION: M ) ) equals ( NUMBER: -40, NUMBER: 5 )",
        "id": 12,
        "declarations": "M: CONICSECTION",
        "facts": "Coordinate(LeftFocus(M)) = (-40, 5)"
    },
    {
        "assertion": "Coordinate ( POINT: N ) equals ( NUMBER: -95, NUMBER: -85 )",
        "id": 13,
        "declarations": "N: POINT",
        "facts": "Coordinate(N) = (-95, -85)"
    },
    {
        "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: O ) ) equals NUMBER: 50",
        "id": 14,
        "declarations": "O: CONICSECTION",
        "facts": "YCoordinate(UpperVertex(O)) = 50"
    },
    {
        "assertion": "Coordinate ( POINT: P ) equals ( NUMBER: 25, NUMBER: -35 )",
        "id": 15,
        "declarations": "P: POINT",
        "facts": "Coordinate(P) = (25, -35)"
    },
    {
        "assertion": "Coordinate ( LowerVertex ( CONICSECTION: Q ) ) equals ( NUMBER: -10, NUMBER: -40 )",
        "id": 16,
        "declarations": "Q: CONICSECTION",
        "facts": "Coordinate(LowerVertex(Q)) = (-10, -40)"
    },
    {
        "assertion": "Coordinate ( POINT: R ) equals ( NUMBER: 20, NUMBER: -30 )",
        "id": 17,
        "declarations": "R: POINT",
        "facts": "Coordinate(R) = (20, -30)"
    },
    {
        "assertion": "Coordinate ( UpperVertex ( CONICSECTION: S ) ) equals ( NUMBER: 8, NUMBER: 15 )",
        "id": 18,
        "declarations": "S: CONICSECTION",
        "facts": "Coordinate(UpperVertex(S)) = (8, 15)"
    },
    {
        "assertion": "Coordinate ( POINT: T ) equals ( NUMBER: -55, NUMBER: 65 )",
        "id": 19,
        "declarations": "T: POINT",
        "facts": "Coordinate(T) = (-55, 65)"
    },
    {
        "assertion": "Coordinate ( UpperFocus ( CONICSECTION: U ) ) equals ( NUMBER: 4, NUMBER: 10 )",
        "id": 20,
        "declarations": "U: CONICSECTION",
        "facts": "Coordinate(UpperFocus(U)) = (4, 10)"
    },
    {
        "assertion": "Coordinate ( Circumcenter ( TRIANGLE: V ) ) equals ( Radius ( CIRCLE: W ), NUMBER: -20 )",
        "id": 21,
        "declarations": "V: TRIANGLE; W: CIRCLE",
        "facts": "Coordinate(Circumcenter(V)) = (Radius(W), -20)"
    },
    {
        "assertion": "Coordinate ( POINT: X ) equals ( NUMBER: -75, NUMBER: -55 )",
        "id": 22,
        "declarations": "X: POINT",
        "facts": "Coordinate(X) = (-75, -55)"
    },
    {
        "assertion": "Coordinate ( POINT: Y ) equals ( NUMBER: 65, NUMBER: -95 )",
        "id": 23,
        "declarations": "Y: POINT",
        "facts": "Coordinate(Y) = (65, -95)"
    },
    {
        "assertion": "Coordinate ( Orthocenter ( TRIANGLE: Z ) ) equals ( NUMBER: 35, NUMBER: -85 )",
        "id": 24,
        "declarations": "Z: TRIANGLE",
        "facts": "Coordinate(Orthocenter(Z)) = (35, -85)"
    },
    {
        "assertion": "Coordinate ( RightFocus ( CONICSECTION: AA ) ) equals ( NUMBER: 95, NUMBER: 50 )",
        "id": 25,
        "declarations": "AA: CONICSECTION",
        "facts": "Coordinate(RightFocus(AA)) = (95, 50)"
    },
    {
        "assertion": "Coordinate ( LeftFocus ( CONICSECTION: AB ) ) equals ( NUMBER: -45, NUMBER: 10 )",
        "id": 26,
        "declarations": "AB: CONICSECTION",
        "facts": "Coordinate(LeftFocus(AB)) = (-45, 10)"
    },
    {
        "assertion": "Coordinate ( POINT: AC ) equals ( NUMBER: -100, NUMBER: -90 )",
        "id": 27,
        "declarations": "AC: POINT",
        "facts": "Coordinate(AC) = (-100, -90)"
    },
    {
        "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: AD ) ) equals NUMBER: 55",
        "id": 28,
        "declarations": "AD: CONICSECTION",
        "facts": "YCoordinate(UpperVertex(AD)) = 55"
    },
    {
        "assertion": "Coordinate ( POINT: AE ) equals ( NUMBER: 30, NUMBER: -40 )",
        "id": 29,
        "declarations": "AE: POINT",
        "facts": "Coordinate(AE) = (30, -40)"
    },
    {
        "assertion": "Coordinate ( LowerVertex ( CONICSECTION: AF ) ) equals ( NUMBER: -15, NUMBER: -50 )",
        "id": 30,
        "declarations": "AF: CONICSECTION",
        "facts": "Coordinate(LowerVertex(AF)) = (-15, -50)"
    },
    {
        "assertion": "Coordinate ( POINT: AG ) equals ( NUMBER: 25, NUMBER: -35 )",
        "id": 31,
        "declarations": "AG: POINT",
        "facts": "Coordinate(AG) = (25, -35)"
    },
    {
        "assertion": "Coordinate ( UpperVertex ( CONICSECTION: AH ) ) equals ( NUMBER: 9, NUMBER: 18 )",
        "id": 32,
        "declarations": "AH: CONICSECTION",
        "facts": "Coordinate(UpperVertex(AH)) = (9, 18)"
    },
    {
        "assertion": "Coordinate ( POINT: AI ) equals ( NUMBER: -60, NUMBER: 70 )",
        "id": 33,
        "declarations": "AI: POINT",
        "facts": "Coordinate(AI) = (-60, 70)"
    },
    {
        "assertion": "Coordinate ( UpperFocus ( CONICSECTION: AJ ) ) equals ( NUMBER: 6, NUMBER: 12 )",
        "id": 34,
        "declarations": "AJ: CONICSECTION",
        "facts": "Coordinate(UpperFocus(AJ)) = (6, 12)"
    },
    {
        "assertion": "Coordinate ( Circumcenter ( TRIANGLE: AK ) ) equals ( Radius ( CIRCLE: AL ), NUMBER: -25 )",
        "id": 35,
        "declarations": "AK: TRIANGLE; AL: CIRCLE",
        "facts": "Coordinate(Circumcenter(AK)) = (Radius(AL), -25)"
    },
    {
        "assertion": "Coordinate ( POINT: AM ) equals ( NUMBER: -85, NUMBER: -60 )",
        "id": 36,
        "declarations": "AM: POINT",
        "facts": "Coordinate(AM) = (-85, -60)"
    },
    {
        "assertion": "Coordinate ( POINT: AN ) equals ( NUMBER: 75, NUMBER: -100 )",
        "id": 37,
        "declarations": "AN: POINT",
        "facts": "Coordinate(AN) = (75, -100)"
    },
    {
        "assertion": "Coordinate ( Orthocenter ( TRIANGLE: AO ) ) equals ( NUMBER: 40, NUMBER: -90 )",
        "id": 38,
        "declarations": "AO: TRIANGLE",
        "facts": "Coordinate(Orthocenter(AO)) = (40, -90)"
    },
    {
        "assertion": "Coordinate ( RightFocus ( CONICSECTION: AP ) ) equals ( NUMBER: 100, NUMBER: 55 )",
        "id": 39,
        "declarations": "AP: CONICSECTION",
        "facts": "Coordinate(RightFocus(AP)) = (100, 55)"
    },
    {
        "assertion": "Coordinate ( LeftFocus ( CONICSECTION: AQ ) ) equals ( NUMBER: -50, NUMBER: 15 )",
        "id": 40,
        "declarations": "AQ: CONICSECTION",
        "facts": "Coordinate(LeftFocus(AQ)) = (-50, 15)"
    },
    {
        "assertion": "Coordinate ( POINT: AR ) equals ( NUMBER: -105, NUMBER: -95 )",
        "id": 41,
        "declarations": "AR: POINT",
        "facts": "Coordinate(AR) = (-105, -95)"
    },
    {
        "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: AS ) ) equals NUMBER: 60",
        "id": 42,
        "declarations": "AS: CONICSECTION",
        "facts": "YCoordinate(UpperVertex(AS)) = 60"
    },
    {
        "assertion": "Coordinate ( POINT: AT ) equals ( NUMBER: 35, NUMBER: -45 )",
        "id": 43,
        "declarations": "AT: POINT",
        "facts": "Coordinate(AT) = (35, -45)"
    },
    {
        "assertion": "Coordinate ( LowerVertex ( CONICSECTION: AU ) ) equals ( NUMBER: -20, NUMBER: -60 )",
        "id": 44,
        "declarations": "AU: CONICSECTION",
        "facts": "Coordinate(LowerVertex(AU)) = (-20, -60)"
    },
    {
        "assertion": "Coordinate ( POINT: AV ) equals ( NUMBER: 30, NUMBER: -40 )",
        "id": 45,
        "declarations": "AV: POINT",
        "facts": "Coordinate(AV) = (30, -40)"
    },
    {
        "assertion": "Coordinate ( UpperVertex ( CONICSECTION: AW ) ) equals ( NUMBER: 10, NUMBER: 20 )",
        "id": 46,
        "declarations": "AW: CONICSECTION",
        "facts": "Coordinate(UpperVertex(AW)) = (10, 20)"
    },
    {
        "assertion": "Coordinate ( POINT: AX ) equals ( NUMBER: -65, NUMBER: 75 )",
        "id": 47,
        "declarations": "AX: POINT",
        "facts": "Coordinate(AX) = (-65, 75)"
    },
    {
        "assertion": "Coordinate ( UpperFocus ( CONICSECTION: AY ) ) equals ( NUMBER: 7, NUMBER: 14 )",
        "id": 48,
        "declarations": "AY: CONICSECTION",
        "facts": "Coordinate(UpperFocus(AY)) = (7, 14)"
    },
    {
        "assertion": "Coordinate ( Circumcenter ( TRIANGLE: AZ ) ) equals ( Radius ( CIRCLE: BA ), NUMBER: -30 )",
        "id": 49,
        "declarations": "AZ: TRIANGLE; BA: CIRCLE",
        "facts": "Coordinate(Circumcenter(AZ)) = (Radius(BA), -30)"
    },
    {
        "assertion": "Coordinate ( POINT: BB ) equals ( NUMBER: -90, NUMBER: -65 )",
        "id": 50,
        "declarations": "BB: POINT",
        "facts": "Coordinate(BB) = (-90, -65)"
    },
    {
        "assertion": "Coordinate ( POINT: BC ) equals ( NUMBER: 80, NUMBER: -105 )",
        "id": 51,
        "declarations": "BC: POINT",
        "facts": "Coordinate(BC) = (80, -105)"
    },
    {
        "assertion": "Coordinate ( Orthocenter ( TRIANGLE: BD ) ) equals ( NUMBER: 45, NUMBER: -95 )",
        "id": 52,
        "declarations": "BD: TRIANGLE",
        "facts": "Coordinate(Orthocenter(BD)) = (45, -95)"
    },
    {
        "assertion": "Coordinate ( RightFocus ( CONICSECTION: BE ) ) equals ( NUMBER: 105, NUMBER: 60 )",
        "id": 53,
        "declarations": "BE: CONICSECTION",
        "facts": "Coordinate(RightFocus(BE)) = (105, 60)"
    },
    {
        "assertion": "Coordinate ( LeftFocus ( CONICSECTION: BF ) ) equals ( NUMBER: -55, NUMBER: 20 )",
        "id": 54,
        "declarations": "BF: CONICSECTION",
        "facts": "Coordinate(LeftFocus(BF)) = (-55, 20)"
    },
    {
        "assertion": "Coordinate ( POINT: BG ) equals ( NUMBER: -110, NUMBER: -100 )",
        "id": 55,
        "declarations": "BG: POINT",
        "facts": "Coordinate(BG) = (-110, -100)"
    },
    {
        "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: BH ) ) equals NUMBER: 65",
        "id": 56,
        "declarations": "BH: CONICSECTION",
        "facts": "YCoordinate(UpperVertex(BH)) = 65"
    },
    {
        "assertion": "Coordinate ( POINT: BI ) equals ( NUMBER: 40, NUMBER: -50 )",
        "id": 57,
        "declarations": "BI: POINT",
        "facts": "Coordinate(BI) = (40, -50)"
    },
    {
        "assertion": "Coordinate ( LowerVertex ( CONICSECTION: BJ ) ) equals ( NUMBER: -25, NUMBER: -70 )",
        "id": 58,
        "declarations": "BJ: CONICSECTION",
        "facts": "Coordinate(LowerVertex(BJ)) = (-25, -70)"
    }
]