[
{
    "assertion": "Distance ( Orthocenter ( TRIANGLE: x ), Projection ( POINT: o, LINE: u ) ) equals YCoordinate ( LeftFocus ( CONICSECTION: x ) )",
    "id": 3226,
    "declarations": "x: TRIANGLE; o: POINT; u: LINE; x: CONICSECTION",
    "facts": "Distance(Orthocenter(x), Projection(o, u)) = YCoordinate(LeftFocus(x))"
},
{
    "assertion": "InterReciprocal ( NUMBER: 42 ) equals NUMBER: 100",
    "id": 3227,
    "declarations": "42: NUMBER; 100: NUMBER",
    "facts": "InterReciprocal(42) = 100"
},
{
    "assertion": "Projection ( POINT: u, LINE: C ) equals Center ( CONICSECTION: Q )",
    "id": 3228,
    "declarations": "u: POINT; C: LINE; Q: CONICSECTION",
    "facts": "Projection(u, C) = Center(Q)"
},
{
    "assertion": "Abs ( ImaginaryAxis ( ELLIPSE: i ) ) equals NUMBER: -4",
    "id": 3229,
    "declarations": "i: ELLIPSE; -4: NUMBER",
    "facts": "Abs(ImaginaryAxis(i)) = -4"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: j ) equals LINE: z",
    "id": 3230,
    "declarations": "j: CONICSECTION; z: LINE",
    "facts": "LeftDirectrix(j) = z"
},
{
    "assertion": "Slope ( LINE: l ) equals XCoordinate ( POINT: e )",
    "id": 3231,
    "declarations": "l: LINE; e: POINT",
    "facts": "Slope(l) = XCoordinate(e)"
},
{
    "assertion": "PointOnCurve ( LowerFocus ( CONICSECTION: I ), CURVE: K ) equals BOOL: True",
    "id": 3232,
    "declarations": "I: CONICSECTION; K: CURVE; True: BOOL",
    "facts": "PointOnCurve(LowerFocus(I), K) = True"
},
{
    "assertion": "PointOnCurve ( RightVertex ( CONICSECTION: x ), CURVE: z ) equals BOOL: False",
    "id": 3233,
    "declarations": "x: CONICSECTION; z: CURVE; False: BOOL",
    "facts": "PointOnCurve(RightVertex(x), z) = False"
},
{
    "assertion": "YCoordinate ( Center ( CONICSECTION: c ) ) equals Perimeter ( CONICSECTION: W )",
    "id": 3234,
    "declarations": "c: CONICSECTION; W: CONICSECTION",
    "facts": "YCoordinate(Center(c)) = Perimeter(W)"
},
{
    "assertion": "IsIntersect ( RightPart ( HYPERBOLA: P ), CURVE: Y ) equals BOOL: True",
    "id": 3235,
    "declarations": "P: HYPERBOLA; Y: CURVE; True: BOOL",
    "facts": "IsIntersect(RightPart(P), Y) = True"
},
{
    "assertion": "Length ( RealAxis ( ELLIPSE: U ) ) equals NUMBER: 51",
    "id": 3236,
    "declarations": "U: ELLIPSE; 51: NUMBER",
    "facts": "Length(RealAxis(U)) = 51"
},
{
    "assertion": "Negation ( RightVertex ( CONICSECTION: e ) equals MidPoint ( MajorAxis ( ELLIPSE: T ) ) ) equals BOOL: True",
    "id": 3237,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftFocus ( CONICSECTION: y ) equals LeftFocus ( CONICSECTION: S )",
    "id": 3238,
    "declarations": "y: CONICSECTION; S: CONICSECTION",
    "facts": "LeftFocus(y) = LeftFocus(S)"
},
{
    "assertion": "Expression ( CURVE: y ) equals Expression ( CURVE: N )",
    "id": 3239,
    "declarations": "y: CURVE; N: CURVE",
    "facts": "Expression(y) = Expression(N)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: l ) equals POINT: q",
    "id": 3240,
    "declarations": "l: CONICSECTION; q: POINT",
    "facts": "LeftFocus(l) = q"
},
{
    "assertion": "RightPart ( HYPERBOLA: j ) equals RightPart ( HYPERBOLA: D )",
    "id": 3241,
    "declarations": "j: HYPERBOLA; D: HYPERBOLA",
    "facts": "RightPart(j) = RightPart(D)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: s ) equals Min ( NUMBER: -42 )",
    "id": 3242,
    "declarations": "s: CONICSECTION; -42: NUMBER",
    "facts": "HalfFocalLength(s) = Min(-42)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: W ) equals POINT: B",
    "id": 3243,
    "declarations": "W: CONICSECTION; B: POINT",
    "facts": "LeftVertex(W) = B"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: J ) equals LINESEGMENT: k",
    "id": 3244,
    "declarations": "J: ELLIPSE; k: LINESEGMENT",
    "facts": "ImaginaryAxis(J) = k"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: k ) ) equals Quadrant ( LowerFocus ( CONICSECTION: g ) )",
    "id": 3245,
    "declarations": "k: TRIANGLE; g: CONICSECTION",
    "facts": "Diameter(CircumCircle(k)) = Quadrant(LowerFocus(g))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: O ) equals YCoordinate ( Orthocenter ( TRIANGLE: W ) )",
    "id": 3246,
    "declarations": "O: CONICSECTION; W: TRIANGLE",
    "facts": "HalfFocalLength(O) = YCoordinate(Orthocenter(W))"
},
{
    "assertion": "InterceptChord ( LeftDirectrix ( CONICSECTION: o ), CONICSECTION: f ) equals LINESEGMENT: i",
    "id": 3247,
    "declarations": "o: CONICSECTION; f: CONICSECTION; i: LINESEGMENT",
    "facts": "InterceptChord(LeftDirectrix(o), f) = i"
},
{
    "assertion": "RightFocus ( CONICSECTION: P ) equals POINT: F",
    "id": 3248,
    "declarations": "P: CONICSECTION; F: POINT",
    "facts": "RightFocus(P) = F"
},
{
    "assertion": "IsIntersect ( CURVE: X, CURVE: c ) equals BOOL: False",
    "id": 3249,
    "declarations": "X: CURVE; c: CURVE; False: BOOL",
    "facts": "IsIntersect(X, c) = False"
},
{
    "assertion": "IsInTangent ( CIRCLE: z, CIRCLE: s ) equals BOOL: True",
    "id": 3250,
    "declarations": "z: CIRCLE; s: CIRCLE; True: BOOL",
    "facts": "IsInTangent(z, s) = True"
},
{
    "assertion": "IsIntersect ( Locus ( Circumcenter ( TRIANGLE: E ) ), CURVE: H ) equals BOOL: True",
    "id": 3251,
    "declarations": "E: TRIANGLE; H: CURVE; True: BOOL",
    "facts": "IsIntersect(Locus(Circumcenter(E)), H) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: X ) equals InterceptChord ( OverlappingLine ( LINESEGMENT: M ), CONICSECTION: U )",
    "id": 3252,
    "declarations": "X: ELLIPSE; M: LINESEGMENT; U: CONICSECTION",
    "facts": "MajorAxis(X) = InterceptChord(OverlappingLine(M), U)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: m ) equals POINT: P",
    "id": 3253,
    "declarations": "m: LINESEGMENT; P: POINT",
    "facts": "Endpoint(m) = P"
},
{
    "assertion": "Abs ( LINESEGMENT: x ) equals NUMBER: 69",
    "id": 3254,
    "declarations": "x: LINESEGMENT; 69: NUMBER",
    "facts": "Abs(x) = 69"
},
{
    "assertion": "Expression ( CURVE: f ) equals EXPRESSION: x^3*space+*spacey^3*space=*space1",
    "id": 3255,
    "declarations": "f: CURVE; x^3*space+*spacey^3*space=*space1: EXPRESSION",
    "facts": "Expression(f) = x^3*space+*spacey^3*space=*space1"
},
{
    "assertion": "Center ( CONICSECTION: d ) equals UpperVertex ( CONICSECTION: e )",
    "id": 3256,
    "declarations": "d: CONICSECTION; e: CONICSECTION",
    "facts": "Center(d) = UpperVertex(e)"
},
{
    "assertion": "RightFocus ( CONICSECTION: P ) equals UpperVertex ( CONICSECTION: i )",
    "id": 3257,
    "declarations": "P: CONICSECTION; i: CONICSECTION",
    "facts": "RightFocus(P) = UpperVertex(i)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -23, DEGREESTR: degree )",
    "id": 3258,
    "declarations": "-23: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-23, degree) = None"
},
{
    "assertion": "LineOf ( LeftFocus ( CONICSECTION: h ), MidPoint ( LINESEGMENT: W ) ) equals LineOf ( POINT: v, Center ( CONICSECTION: V ) )",
    "id": 3259,
    "declarations": "h: CONICSECTION; W: LINESEGMENT; v: POINT; V: CONICSECTION",
    "facts": "LineOf(LeftFocus(h), MidPoint(W)) = LineOf(v, Center(V))"
},
{
    "assertion": "XCoordinate ( POINT: Q ) equals HalfFocalLength ( CONICSECTION: J )",
    "id": 3260,
    "declarations": "Q: POINT; J: CONICSECTION",
    "facts": "XCoordinate(Q) = HalfFocalLength(J)"
},
{
    "assertion": "Intersection ( LeftPart ( HYPERBOLA: H ), CURVE: Z ) equals LeftVertex ( CONICSECTION: l )",
    "id": 3261,
    "declarations": "H: HYPERBOLA; Z: CURVE; l: CONICSECTION",
    "facts": "Intersection(LeftPart(H), Z) = LeftVertex(l)"
},
{
    "assertion": "InterReciprocal ( YCoordinate ( POINT: g ) ) equals Inclination ( LINE: u )",
    "id": 3262,
    "declarations": "g: POINT; u: LINE",
    "facts": "InterReciprocal(YCoordinate(g)) = Inclination(u)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: g ) equals UpperVertex ( CONICSECTION: p )",
    "id": 3263,
    "declarations": "g: CONICSECTION; p: CONICSECTION",
    "facts": "LowerVertex(g) = UpperVertex(p)"
},
{
    "assertion": "VectorOf ( Orthocenter ( TRIANGLE: k ), RightVertex ( CONICSECTION: q ) ) equals VectorOf ( RightFocus ( CONICSECTION: J ), RightVertex ( CONICSECTION: c ) )",
    "id": 3264,
    "declarations": "k: TRIANGLE; q: CONICSECTION; J: CONICSECTION; c: CONICSECTION",
    "facts": "VectorOf(Orthocenter(k), RightVertex(q)) = VectorOf(RightFocus(J), RightVertex(c))"
},
{
    "assertion": "Center ( CONICSECTION: Z ) equals Projection ( POINT: j, TangentOnPoint ( POINT: k, CURVE: C ) )",
    "id": 3265,
    "declarations": "Z: CONICSECTION; j: POINT; k: POINT; C: CURVE",
    "facts": "Center(Z) = Projection(j, TangentOnPoint(k, C))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: P ) equals CIRCLE: K",
    "id": 3266,
    "declarations": "P: TRIANGLE; K: CIRCLE",
    "facts": "CircumCircle(P) = K"
},
{
    "assertion": "Circumcenter ( TRIANGLE: r ) equals UpperFocus ( CONICSECTION: l )",
    "id": 3267,
    "declarations": "r: TRIANGLE; l: CONICSECTION",
    "facts": "Circumcenter(r) = UpperFocus(l)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: e ) equals LINESEGMENT: j",
    "id": 3268,
    "declarations": "e: ELLIPSE; j: LINESEGMENT",
    "facts": "ImaginaryAxis(e) = j"
},
{
    "assertion": "Locus ( LeftVertex ( CONICSECTION: f ) ) equals LeftPart ( HYPERBOLA: T )",
    "id": 3269,
    "declarations": "f: CONICSECTION; T: HYPERBOLA",
    "facts": "Locus(LeftVertex(f)) = LeftPart(T)"
},
{
    "assertion": "Slope ( LINE: m ) equals NumIntersection ( CURVE: E, CURVE: t )",
    "id": 3270,
    "declarations": "m: LINE; E: CURVE; t: CURVE",
    "facts": "Slope(m) = NumIntersection(E, t)"
},
{
    "assertion": "IsParallel ( LINE: W, OverlappingLine ( LINESEGMENT: O ) ) equals BOOL: True",
    "id": 3271,
    "declarations": "W: LINE; O: LINESEGMENT; True: BOOL",
    "facts": "IsParallel(W, OverlappingLine(O)) = True"
},
{
    "assertion": "lg ( NUMBER: -87 ) equals NUMBER: 53",
    "id": 3272,
    "declarations": "-87: NUMBER; 53: NUMBER",
    "facts": "lg(-87) = 53"
},
{
    "assertion": "LowerVertex ( CONICSECTION: s ) equals UpperVertex ( CONICSECTION: U )",
    "id": 3273,
    "declarations": "s: CONICSECTION; U: CONICSECTION",
    "facts": "LowerVertex(s) = UpperVertex(U)"
},
{
    "assertion": "IsChordOf ( ImaginaryAxis ( ELLIPSE: r ), CONICSECTION: J ) equals BOOL: False",
    "id": 3274,
    "declarations": "r: ELLIPSE; J: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(ImaginaryAxis(r), J) = False"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: e ) equals RealAxis ( ELLIPSE: n )",
    "id": 3275,
    "declarations": "e: ELLIPSE; n: ELLIPSE",
    "facts": "ImaginaryAxis(e) = RealAxis(n)"
},
{
    "assertion": "Locus ( POINT: f ) equals CURVE: S",
    "id": 3276,
    "declarations": "f: POINT; S: CURVE",
    "facts": "Locus(f) = S"
},
{
    "assertion": "LeftVertex ( CONICSECTION: r ) equals Circumcenter ( TRIANGLE: V )",
    "id": 3277,
    "declarations": "r: CONICSECTION; V: TRIANGLE",
    "facts": "LeftVertex(r) = Circumcenter(V)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: U, TRIANGLE: H ) equals BOOL: False",
    "id": 3278,
    "declarations": "U: CIRCLE; H: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(U, H) = False"
},
{
    "assertion": "Circumcenter ( TRIANGLE: l ) equals LowerFocus ( CONICSECTION: h )",
    "id": 3279,
    "declarations": "l: TRIANGLE; h: CONICSECTION",
    "facts": "Circumcenter(l) = LowerFocus(h)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: I ) equals POINT: v",
    "id": 3280,
    "declarations": "I: TRIANGLE; v: POINT",
    "facts": "Orthocenter(I) = v"
},
{
    "assertion": "IsDiameter ( RealAxis ( ELLIPSE: Y ), CIRCLE: a ) equals BOOL: True",
    "id": 3281,
    "declarations": "Y: ELLIPSE; a: CIRCLE; True: BOOL",
    "facts": "IsDiameter(RealAxis(Y), a) = True"
},
{
    "assertion": "IsIntersect ( CURVE: L, CURVE: w ) equals BOOL: False",
    "id": 3282,
    "declarations": "L: CURVE; w: CURVE; False: BOOL",
    "facts": "IsIntersect(L, w) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: B ) equals Incenter ( TRIANGLE: Z )",
    "id": 3283,
    "declarations": "B: CONICSECTION; Z: TRIANGLE",
    "facts": "RightFocus(B) = Incenter(Z)"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: i ) ) equals LINE: U",
    "id": 3284,
    "declarations": "i: ELLIPSE; U: LINE",
    "facts": "PerpendicularBisector(ImaginaryAxis(i)) = U"
},
{
    "assertion": "IsOutTangent ( CIRCLE: j, CIRCLE: O ) equals BOOL: True",
    "id": 3285,
    "declarations": "j: CIRCLE; O: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(j, O) = True"
},
{
    "assertion": "LeftPart ( HYPERBOLA: s ) equals CURVE: Q",
    "id": 3286,
    "declarations": "s: HYPERBOLA; Q: CURVE",
    "facts": "LeftPart(s) = Q"
},
{
    "assertion": "TangentOfPoint ( UpperFocus ( CONICSECTION: B ), CURVE: F ) equals LINE: l",
    "id": 3287,
    "declarations": "B: CONICSECTION; F: CURVE; l: LINE",
    "facts": "TangentOfPoint(UpperFocus(B), F) = l"
},
{
    "assertion": "Expression ( CURVE: j ) equals EXPRESSION: x^2/4*space+*spacey^2/16*space=*space1",
    "id": 3288,
    "declarations": "j: CURVE; x^2/4*space+*spacey^2/16*space=*space1: EXPRESSION",
    "facts": "Expression(j) = x^2/4*space+*spacey^2/16*space=*space1"
},
{
    "assertion": "RightFocus ( CONICSECTION: V ) equals POINT: B",
    "id": 3289,
    "declarations": "V: CONICSECTION; B: POINT",
    "facts": "RightFocus(V) = B"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: H, TRIANGLE: h ) equals BOOL: False",
    "id": 3290,
    "declarations": "H: CIRCLE; h: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(H, h) = False"
},
{
    "assertion": "Diameter ( CIRCLE: M ) equals Diameter ( CircumCircle ( TriangleOf ( LowerVertex ( CONICSECTION: v ), POINT: t, LowerVertex ( CONICSECTION: S ) ) ) )",
    "id": 3291,
    "declarations": "M: CIRCLE; v: CONICSECTION; t: POINT; S: CONICSECTION",
    "facts": "Diameter(M) = Diameter(CircumCircle(TriangleOf(LowerVertex(v), t, LowerVertex(S))))"
},
{
    "assertion": "Between ( POINT: w, UpperFocus ( CONICSECTION: C ), POINT: u ) equals BOOL: True",
    "id": 3292,
    "declarations": "w: POINT; C: CONICSECTION; u: POINT; True: BOOL",
    "facts": "Between(w, UpperFocus(C), u) = True"
},
{
    "assertion": "IsChordOf ( InterceptChord ( PerpendicularBisector ( LineSegmentOf ( Orthocenter ( TRIANGLE: O ), POINT: s ) ), CONICSECTION: p ), CONICSECTION: Y ) equals BOOL: False",
    "id": 3293,
    "declarations": "O: TRIANGLE; s: POINT; p: CONICSECTION; Y: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(InterceptChord(PerpendicularBisector(LineSegmentOf(Orthocenter(O), s)), p), Y) = False"
},
{
    "assertion": "ApplyUnit ( NUMBER: -90, DEGREESTR: degree )",
    "id": 3294,
    "declarations": "-90: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-90, degree) = None"
},
{
    "assertion": "Focus ( CONICSECTION: d ) equals LeftVertex ( CONICSECTION: k )",
    "id": 3295,
    "declarations": "d: CONICSECTION; k: CONICSECTION",
    "facts": "Focus(d) = LeftVertex(k)"
},
{
    "assertion": "IsChordOf ( InterceptChord ( LINE: a, CONICSECTION: s ), CONICSECTION: e ) equals BOOL: True",
    "id": 3296,
    "declarations": "a: LINE; s: CONICSECTION; e: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(InterceptChord(a, s), e) = True"
},
{
    "assertion": "lg ( HalfFocalLength ( CONICSECTION: V ) ) equals sqrt ( Length ( ImaginaryAxis ( ELLIPSE: a ) ) )",
    "id": 3297,
    "declarations": "V: CONICSECTION; a: ELLIPSE",
    "facts": "lg(HalfFocalLength(V)) = sqrt(Length(ImaginaryAxis(a)))"
},
{
    "assertion": "RightPart ( HYPERBOLA: P ) equals Locus ( POINT: E )",
    "id": 3298,
    "declarations": "P: HYPERBOLA; E: POINT",
    "facts": "RightPart(P) = Locus(E)"
},
{
    "assertion": "IsIntersect ( CURVE: L, RightPart ( HYPERBOLA: W ) ) equals BOOL: True",
    "id": 3299,
    "declarations": "L: CURVE; W: HYPERBOLA; True: BOOL",
    "facts": "IsIntersect(L, RightPart(W)) = True"
},
{
    "assertion": "Center ( CONICSECTION: a ) equals RightVertex ( CONICSECTION: V )",
    "id": 3300,
    "declarations": "a: CONICSECTION; V: CONICSECTION",
    "facts": "Center(a) = RightVertex(V)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Q ) equals POINT: g",
    "id": 3301,
    "declarations": "Q: CONICSECTION; g: POINT",
    "facts": "UpperVertex(Q) = g"
},
{
    "assertion": "RightPart ( HYPERBOLA: g ) equals Locus ( POINT: M )",
    "id": 3302,
    "declarations": "g: HYPERBOLA; M: POINT",
    "facts": "RightPart(g) = Locus(M)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: i ) equals Center ( CONICSECTION: o )",
    "id": 3303,
    "declarations": "i: TRIANGLE; o: CONICSECTION",
    "facts": "Orthocenter(i) = Center(o)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: B ) equals CIRCLE: N",
    "id": 3304,
    "declarations": "B: TRIANGLE; N: CIRCLE",
    "facts": "CircumCircle(B) = N"
},
{
    "assertion": "Expression ( CURVE: N ) equals EXPRESSION: x*space+*spacey^2*space=*space1",
    "id": 3305,
    "declarations": "N: CURVE; x*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "Expression(N) = x*space+*spacey^2*space=*space1"
},
{
    "assertion": "InterReciprocal ( NUMBER: -100 ) equals NUMBER: -97",
    "id": 3306,
    "declarations": "-100: NUMBER; -97: NUMBER",
    "facts": "InterReciprocal(-100) = -97"
},
{
    "assertion": "InterReciprocal ( Min ( Diameter ( CIRCLE: y ) ) ) equals lg ( NUMBER: 85 )",
    "id": 3307,
    "declarations": "y: CIRCLE; 85: NUMBER",
    "facts": "InterReciprocal(Min(Diameter(y))) = lg(85)"
},
{
    "assertion": "Directrix ( CONICSECTION: q ) equals LINE: R",
    "id": 3308,
    "declarations": "q: CONICSECTION; R: LINE",
    "facts": "Directrix(q) = R"
},
{
    "assertion": "FootPoint ( TangentOfPoint ( POINT: p, CURVE: M ), TangentOnPoint ( LeftVertex ( CONICSECTION: y ), CURVE: U ) ) equals POINT: l",
    "id": 3309,
    "declarations": "p: POINT; M: CURVE; y: CONICSECTION; U: CURVE; l: POINT",
    "facts": "FootPoint(TangentOfPoint(p, M), TangentOnPoint(LeftVertex(y), U)) = l"
},
{
    "assertion": "Focus ( CONICSECTION: a ) equals Incenter ( TRIANGLE: A )",
    "id": 3310,
    "declarations": "a: CONICSECTION; A: TRIANGLE",
    "facts": "Focus(a) = Incenter(A)"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: K ) ) equals CURVE: n",
    "id": 3311,
    "declarations": "K: CONICSECTION; n: CURVE",
    "facts": "Locus(LeftFocus(K)) = n"
},
{
    "assertion": "Quadrant ( POINT: m ) equals DotProduct ( VECTOR: V, VECTOR: u )",
    "id": 3312,
    "declarations": "m: POINT; V: VECTOR; u: VECTOR",
    "facts": "Quadrant(m) = DotProduct(V, u)"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: L ) ) equals lg ( Eccentricity ( CONICSECTION: x ) )",
    "id": 3313,
    "declarations": "L: CONICSECTION; x: CONICSECTION",
    "facts": "Inclination(LeftDirectrix(L)) = lg(Eccentricity(x))"
},
{
    "assertion": "CircumCircle ( TRIANGLE: o ) equals CIRCLE: h",
    "id": 3314,
    "declarations": "o: TRIANGLE; h: CIRCLE",
    "facts": "CircumCircle(o) = h"
},
{
    "assertion": "IsIntersect ( CURVE: J, Locus ( POINT: i ) ) equals BOOL: True",
    "id": 3315,
    "declarations": "J: CURVE; i: POINT; True: BOOL",
    "facts": "IsIntersect(J, Locus(i)) = True"
},
{
    "assertion": "sqrt ( Radius ( CIRCLE: b ) ) equals NUMBER: -42",
    "id": 3316,
    "declarations": "b: CIRCLE; -42: NUMBER",
    "facts": "sqrt(Radius(b)) = -42"
},
{
    "assertion": "And ( Center ( CONICSECTION: p ) equals MidPoint ( LINESEGMENT: f ), XCoordinate ( LeftFocus ( CONICSECTION: r ) ) equals Eccentricity ( CONICSECTION: F ) ) equals BOOL: True",
    "id": 3317,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "CircumCircle ( TRIANGLE: y ) equals CIRCLE: R",
    "id": 3318,
    "declarations": "y: TRIANGLE; R: CIRCLE",
    "facts": "CircumCircle(y) = R"
},
{
    "assertion": "Area ( CONICSECTION: n ) equals YCoordinate ( POINT: D )",
    "id": 3319,
    "declarations": "n: CONICSECTION; D: POINT",
    "facts": "Area(n) = YCoordinate(D)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: R ) equals POINT: D",
    "id": 3320,
    "declarations": "R: CONICSECTION; D: POINT",
    "facts": "LeftVertex(R) = D"
},
{
    "assertion": "And ( LowerFocus ( CONICSECTION: U ) equals UpperFocus ( CONICSECTION: w ), RealAxis ( ELLIPSE: n ) equals ImaginaryAxis ( ELLIPSE: u ) ) equals BOOL: True",
    "id": 3321,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightVertex ( CONICSECTION: C ) equals Center ( CONICSECTION: f )",
    "id": 3322,
    "declarations": "C: CONICSECTION; f: CONICSECTION",
    "facts": "RightVertex(C) = Center(f)"
},
{
    "assertion": "FocalLength ( CONICSECTION: t ) equals YCoordinate ( LowerVertex ( CONICSECTION: W ) )",
    "id": 3323,
    "declarations": "t: CONICSECTION; W: CONICSECTION",
    "facts": "FocalLength(t) = YCoordinate(LowerVertex(W))"
},
{
    "assertion": "Perimeter ( CONICSECTION: h ) equals Abs ( LINESEGMENT: X )",
    "id": 3324,
    "declarations": "h: CONICSECTION; X: LINESEGMENT",
    "facts": "Perimeter(h) = Abs(X)"
},
{
    "assertion": "Center ( CONICSECTION: a ) equals Projection ( POINT: l, LINE: F )",
    "id": 3325,
    "declarations": "a: CONICSECTION; l: POINT; F: LINE",
    "facts": "Center(a) = Projection(l, F)"
},
{
    "assertion": "Directrix ( CONICSECTION: c ) equals PerpendicularBisector ( LINESEGMENT: N )",
    "id": 3326,
    "declarations": "c: CONICSECTION; N: LINESEGMENT",
    "facts": "Directrix(c) = PerpendicularBisector(N)"
},
{
    "assertion": "ApplyUnit ( sqrt ( YCoordinate ( RightVertex ( CONICSECTION: B ) ) ), DEGREESTR: degree )",
    "id": 3327,
    "declarations": "B: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(sqrt(YCoordinate(RightVertex(B))), degree) = None"
},
{
    "assertion": "IsTangent ( PerpendicularBisector ( MajorAxis ( ELLIPSE: z ) ), CONICSECTION: J ) equals BOOL: False",
    "id": 3328,
    "declarations": "z: ELLIPSE; J: CONICSECTION; False: BOOL",
    "facts": "IsTangent(PerpendicularBisector(MajorAxis(z)), J) = False"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: H ) equals LINESEGMENT: r",
    "id": 3329,
    "declarations": "H: ELLIPSE; r: LINESEGMENT",
    "facts": "ImaginaryAxis(H) = r"
},
{
    "assertion": "NumIntersection ( CURVE: e, CURVE: s ) equals NUMBER: -13",
    "id": 3330,
    "declarations": "e: CURVE; s: CURVE; -13: NUMBER",
    "facts": "NumIntersection(e, s) = -13"
},
{
    "assertion": "VectorOf ( POINT: z, POINT: A ) equals VECTOR: B",
    "id": 3331,
    "declarations": "z: POINT; A: POINT; B: VECTOR",
    "facts": "VectorOf(z, A) = B"
},
{
    "assertion": "sqrt ( NUMBER: -4 ) equals Diameter ( CircumCircle ( TRIANGLE: J ) )",
    "id": 3332,
    "declarations": "-4: NUMBER; J: TRIANGLE",
    "facts": "sqrt(-4) = Diameter(CircumCircle(J))"
},
{
    "assertion": "RightVertex ( CONICSECTION: n ) equals UpperVertex ( CONICSECTION: s )",
    "id": 3333,
    "declarations": "n: CONICSECTION; s: CONICSECTION",
    "facts": "RightVertex(n) = UpperVertex(s)"
},
{
    "assertion": "TangentPoint ( LINE: Y, CIRCLE: r ) equals POINT: Q",
    "id": 3334,
    "declarations": "Y: LINE; r: CIRCLE; Q: POINT",
    "facts": "TangentPoint(Y, r) = Q"
},
{
    "assertion": "Perimeter ( CONICSECTION: i ) equals NUMBER: -17",
    "id": 3335,
    "declarations": "i: CONICSECTION; -17: NUMBER",
    "facts": "Perimeter(i) = -17"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: e, TRIANGLE: e ) equals BOOL: False",
    "id": 3336,
    "declarations": "e: CIRCLE; e: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(e, e) = False"
},
{
    "assertion": "Focus ( CONICSECTION: i ) equals POINT: E",
    "id": 3337,
    "declarations": "i: CONICSECTION; E: POINT",
    "facts": "Focus(i) = E"
},
{
    "assertion": "Focus ( CONICSECTION: u ) equals UpperVertex ( CONICSECTION: r )",
    "id": 3338,
    "declarations": "u: CONICSECTION; r: CONICSECTION",
    "facts": "Focus(u) = UpperVertex(r)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: y ) equals POINT: z",
    "id": 3339,
    "declarations": "y: CONICSECTION; z: POINT",
    "facts": "LowerFocus(y) = z"
},
{
    "assertion": "CircumCircle ( TRIANGLE: h ) equals CIRCLE: q",
    "id": 3340,
    "declarations": "h: TRIANGLE; q: CIRCLE",
    "facts": "CircumCircle(h) = q"
},
{
    "assertion": "Eccentricity ( CONICSECTION: U ) equals sqrt ( Length ( LINESEGMENT: Q ) )",
    "id": 3341,
    "declarations": "U: CONICSECTION; Q: LINESEGMENT",
    "facts": "Eccentricity(U) = sqrt(Length(Q))"
},
{
    "assertion": "Endpoint ( LINESEGMENT: J ) equals POINT: Q",
    "id": 3342,
    "declarations": "J: LINESEGMENT; Q: POINT",
    "facts": "Endpoint(J) = Q"
},
{
    "assertion": "Asymptote ( HYPERBOLA: b ) equals LINE: F",
    "id": 3343,
    "declarations": "b: HYPERBOLA; F: LINE",
    "facts": "Asymptote(b) = F"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: s ) equals AXIS: yAxis",
    "id": 3344,
    "declarations": "s: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(s) = yAxis"
},
{
    "assertion": "CircumCircle ( TRIANGLE: j ) equals CIRCLE: t",
    "id": 3345,
    "declarations": "j: TRIANGLE; t: CIRCLE",
    "facts": "CircumCircle(j) = t"
},
{
    "assertion": "RightFocus ( CONICSECTION: T ) equals Projection ( POINT: C, PerpendicularBisector ( LINESEGMENT: N ) )",
    "id": 3346,
    "declarations": "T: CONICSECTION; C: POINT; N: LINESEGMENT",
    "facts": "RightFocus(T) = Projection(C, PerpendicularBisector(N))"
},
{
    "assertion": "YCoordinate ( POINT: Q ) equals InterReciprocal ( Min ( NUMBER: 50 ) )",
    "id": 3347,
    "declarations": "Q: POINT; 50: NUMBER",
    "facts": "YCoordinate(Q) = InterReciprocal(Min(50))"
},
{
    "assertion": "Slope ( LINE: w ) equals InterReciprocal ( Abs ( LINESEGMENT: T ) )",
    "id": 3348,
    "declarations": "w: LINE; T: LINESEGMENT",
    "facts": "Slope(w) = InterReciprocal(Abs(T))"
},
{
    "assertion": "NumIntersection ( CURVE: Y, CURVE: V ) equals sqrt ( Area ( CONICSECTION: N ) )",
    "id": 3349,
    "declarations": "Y: CURVE; V: CURVE; N: CONICSECTION",
    "facts": "NumIntersection(Y, V) = sqrt(Area(N))"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: U ) equals LINE: J",
    "id": 3350,
    "declarations": "U: LINESEGMENT; J: LINE",
    "facts": "OverlappingLine(U) = J"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: F ) equals HalfFocalLength ( CONICSECTION: u )",
    "id": 3351,
    "declarations": "F: CONICSECTION; u: CONICSECTION",
    "facts": "HalfFocalLength(F) = HalfFocalLength(u)"
},
{
    "assertion": "LineSegmentOf ( POINT: c, Incenter ( TRIANGLE: q ) ) equals LINESEGMENT: S",
    "id": 3352,
    "declarations": "c: POINT; q: TRIANGLE; S: LINESEGMENT",
    "facts": "LineSegmentOf(c, Incenter(q)) = S"
},
{
    "assertion": "LocusEquation ( Circumcenter ( TRIANGLE: O ) ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6xy",
    "id": 3353,
    "declarations": "O: TRIANGLE; x^3*space+*spacey^3*space=*space6xy: EXPRESSION",
    "facts": "LocusEquation(Circumcenter(O)) = x^3*space+*spacey^3*space=*space6xy"
},
{
    "assertion": "DotProduct ( VECTOR: F, VECTOR: C ) equals Slope ( PerpendicularBisector ( LINESEGMENT: r ) )",
    "id": 3354,
    "declarations": "F: VECTOR; C: VECTOR; r: LINESEGMENT",
    "facts": "DotProduct(F, C) = Slope(PerpendicularBisector(r))"
},
{
    "assertion": "Directrix ( CONICSECTION: C ) equals LINE: r",
    "id": 3355,
    "declarations": "C: CONICSECTION; r: LINE",
    "facts": "Directrix(C) = r"
},
{
    "assertion": "TriangleOf ( Projection ( POINT: w, PerpendicularBisector ( MinorAxis ( ELLIPSE: T ) ) ), POINT: X, POINT: a ) equals TRIANGLE: c",
    "id": 3356,
    "declarations": "w: POINT; T: ELLIPSE; X: POINT; a: POINT; c: TRIANGLE",
    "facts": "TriangleOf(Projection(w, PerpendicularBisector(MinorAxis(T))), X, a) = c"
},
{
    "assertion": "Quadrant ( POINT: l ) equals NUMBER: 39",
    "id": 3357,
    "declarations": "l: POINT; 39: NUMBER",
    "facts": "Quadrant(l) = 39"
},
{
    "assertion": "NumIntersection ( CURVE: H, RightPart ( HYPERBOLA: L ) ) equals NUMBER: -59",
    "id": 3358,
    "declarations": "H: CURVE; L: HYPERBOLA; -59: NUMBER",
    "facts": "NumIntersection(H, RightPart(L)) = -59"
},
{
    "assertion": "PointOnCurve ( POINT: Y, LeftPart ( HYPERBOLA: K ) ) equals BOOL: False",
    "id": 3359,
    "declarations": "Y: POINT; K: HYPERBOLA; False: BOOL",
    "facts": "PointOnCurve(Y, LeftPart(K)) = False"
},
{
    "assertion": "Endpoint ( MinorAxis ( ELLIPSE: b ) ) equals LowerFocus ( CONICSECTION: B )",
    "id": 3360,
    "declarations": "b: ELLIPSE; B: CONICSECTION",
    "facts": "Endpoint(MinorAxis(b)) = LowerFocus(B)"
},
{
    "assertion": "InterReciprocal ( NUMBER: 30 ) equals XCoordinate ( POINT: V )",
    "id": 3361,
    "declarations": "30: NUMBER; V: POINT",
    "facts": "InterReciprocal(30) = XCoordinate(V)"
},
{
    "assertion": "RightVertex ( CONICSECTION: W ) equals POINT: s",
    "id": 3362,
    "declarations": "W: CONICSECTION; s: POINT",
    "facts": "RightVertex(W) = s"
},
{
    "assertion": "IsPerpendicular ( LINE: i, LINE: G ) equals BOOL: False",
    "id": 3363,
    "declarations": "i: LINE; G: LINE; False: BOOL",
    "facts": "IsPerpendicular(i, G) = False"
},
{
    "assertion": "LineSegmentOf ( POINT: A, POINT: r ) equals LINESEGMENT: Q",
    "id": 3364,
    "declarations": "A: POINT; r: POINT; Q: LINESEGMENT",
    "facts": "LineSegmentOf(A, r) = Q"
},
{
    "assertion": "Length ( LINESEGMENT: a ) equals XCoordinate ( POINT: i )",
    "id": 3365,
    "declarations": "a: LINESEGMENT; i: POINT",
    "facts": "Length(a) = XCoordinate(i)"
},
{
    "assertion": "Expression ( CURVE: G ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 3366,
    "declarations": "G: CURVE; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "Expression(G) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "Intercept ( LINE: k, AXIS: yAxis ) equals Inclination ( LINE: o )",
    "id": 3367,
    "declarations": "k: LINE; yAxis: AXIS; o: LINE",
    "facts": "Intercept(k, yAxis) = Inclination(o)"
},
{
    "assertion": "RightPart ( HYPERBOLA: c ) equals CURVE: Y",
    "id": 3368,
    "declarations": "c: HYPERBOLA; Y: CURVE",
    "facts": "RightPart(c) = Y"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: V ) equals AXIS: xAxis",
    "id": 3369,
    "declarations": "V: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(V) = xAxis"
},
{
    "assertion": "And ( LocusEquation ( Incenter ( TRIANGLE: O ) ) equals EXPRESSION: y*space=*spacex^3*space-*space4*x, Orthocenter ( TRIANGLE: q ) equals POINT: p ) equals BOOL: True",
    "id": 3370,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Orthocenter ( TRIANGLE: z ) equals LowerVertex ( CONICSECTION: M )",
    "id": 3371,
    "declarations": "z: TRIANGLE; M: CONICSECTION",
    "facts": "Orthocenter(z) = LowerVertex(M)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: b ) equals LINESEGMENT: r",
    "id": 3372,
    "declarations": "b: ELLIPSE; r: LINESEGMENT",
    "facts": "MinorAxis(b) = r"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: x, TRIANGLE: Q ) equals BOOL: True",
    "id": 3373,
    "declarations": "x: CIRCLE; Q: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(x, Q) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: b ) equals LINE: Z",
    "id": 3374,
    "declarations": "b: CONICSECTION; Z: LINE",
    "facts": "RightDirectrix(b) = Z"
},
{
    "assertion": "Center ( CONICSECTION: D ) equals POINT: L",
    "id": 3375,
    "declarations": "D: CONICSECTION; L: POINT",
    "facts": "Center(D) = L"
},
{
    "assertion": "RightFocus ( CONICSECTION: o ) equals Incenter ( TRIANGLE: c )",
    "id": 3376,
    "declarations": "o: CONICSECTION; c: TRIANGLE",
    "facts": "RightFocus(o) = Incenter(c)"
},
{
    "assertion": "Projection ( LowerFocus ( CONICSECTION: P ), LINE: n ) equals UpperFocus ( CONICSECTION: s )",
    "id": 3377,
    "declarations": "P: CONICSECTION; n: LINE; s: CONICSECTION",
    "facts": "Projection(LowerFocus(P), n) = UpperFocus(s)"
},
{
    "assertion": "YCoordinate ( Circumcenter ( TRIANGLE: l ) ) equals Abs ( LINESEGMENT: D )",
    "id": 3378,
    "declarations": "l: TRIANGLE; D: LINESEGMENT",
    "facts": "YCoordinate(Circumcenter(l)) = Abs(D)"
},
{
    "assertion": "Perimeter ( CONICSECTION: g ) equals Quadrant ( MidPoint ( LINESEGMENT: m ) )",
    "id": 3379,
    "declarations": "g: CONICSECTION; m: LINESEGMENT",
    "facts": "Perimeter(g) = Quadrant(MidPoint(m))"
},
{
    "assertion": "Distance ( LowerVertex ( CONICSECTION: B ), LowerVertex ( CONICSECTION: Q ) ) equals Distance ( Circumcenter ( TRIANGLE: k ), POINT: t )",
    "id": 3380,
    "declarations": "B: CONICSECTION; Q: CONICSECTION; k: TRIANGLE; t: POINT",
    "facts": "Distance(LowerVertex(B), LowerVertex(Q)) = Distance(Circumcenter(k), t)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: z ) equals LINE: r",
    "id": 3381,
    "declarations": "z: LINESEGMENT; r: LINE",
    "facts": "PerpendicularBisector(z) = r"
},
{
    "assertion": "Perimeter ( CONICSECTION: s ) equals InterReciprocal ( NUMBER: -38 )",
    "id": 3382,
    "declarations": "s: CONICSECTION; -38: NUMBER",
    "facts": "Perimeter(s) = InterReciprocal(-38)"
},
{
    "assertion": "TangentOnPoint ( RightVertex ( CONICSECTION: z ), CURVE: N ) equals LeftDirectrix ( CONICSECTION: T )",
    "id": 3383,
    "declarations": "z: CONICSECTION; N: CURVE; T: CONICSECTION",
    "facts": "TangentOnPoint(RightVertex(z), N) = LeftDirectrix(T)"
},
{
    "assertion": "InterceptChord ( LINE: D, CONICSECTION: c ) equals LINESEGMENT: M",
    "id": 3384,
    "declarations": "D: LINE; c: CONICSECTION; M: LINESEGMENT",
    "facts": "InterceptChord(D, c) = M"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: O, TRIANGLE: V ) equals BOOL: True",
    "id": 3385,
    "declarations": "O: CIRCLE; V: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(O, V) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: b ) equals LINESEGMENT: W",
    "id": 3386,
    "declarations": "b: ELLIPSE; W: LINESEGMENT",
    "facts": "MajorAxis(b) = W"
},
{
    "assertion": "Projection ( POINT: I, LINE: c ) equals Center ( CONICSECTION: v )",
    "id": 3387,
    "declarations": "I: POINT; c: LINE; v: CONICSECTION",
    "facts": "Projection(I, c) = Center(v)"
},
{
    "assertion": "Slope ( LINE: C ) equals Intercept ( LINE: K, AXIS: yAxis )",
    "id": 3388,
    "declarations": "C: LINE; K: LINE; yAxis: AXIS",
    "facts": "Slope(C) = Intercept(K, yAxis)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: f ) equals NUMBER: -94",
    "id": 3389,
    "declarations": "f: CONICSECTION; -94: NUMBER",
    "facts": "Eccentricity(f) = -94"
},
{
    "assertion": "XCoordinate ( RightFocus ( CONICSECTION: l ) ) equals Abs ( RealAxis ( ELLIPSE: U ) )",
    "id": 3390,
    "declarations": "l: CONICSECTION; U: ELLIPSE",
    "facts": "XCoordinate(RightFocus(l)) = Abs(RealAxis(U))"
},
{
    "assertion": "sqrt ( NUMBER: 17 ) equals NUMBER: -97",
    "id": 3391,
    "declarations": "17: NUMBER; -97: NUMBER",
    "facts": "sqrt(17) = -97"
},
{
    "assertion": "LineOf ( Circumcenter ( TRIANGLE: Q ), UpperVertex ( CONICSECTION: k ) ) equals RightDirectrix ( CONICSECTION: k )",
    "id": 3392,
    "declarations": "Q: TRIANGLE; k: CONICSECTION; k: CONICSECTION",
    "facts": "LineOf(Circumcenter(Q), UpperVertex(k)) = RightDirectrix(k)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: S ) equals LowerVertex ( CONICSECTION: j )",
    "id": 3393,
    "declarations": "S: CONICSECTION; j: CONICSECTION",
    "facts": "UpperFocus(S) = LowerVertex(j)"
},
{
    "assertion": "And ( IsOutTangent ( CIRCLE: K, CIRCLE: C ) equals BOOL: False, Incenter ( TRIANGLE: L ) equals POINT: M ) equals BOOL: True",
    "id": 3394,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Directrix ( CONICSECTION: T ) equals LINE: s",
    "id": 3395,
    "declarations": "T: CONICSECTION; s: LINE",
    "facts": "Directrix(T) = s"
},
{
    "assertion": "NumIntersection ( CURVE: H, Locus ( RightVertex ( CONICSECTION: N ) ) ) equals NUMBER: -13",
    "id": 3396,
    "declarations": "H: CURVE; N: CONICSECTION; -13: NUMBER",
    "facts": "NumIntersection(H, Locus(RightVertex(N))) = -13"
},
{
    "assertion": "LeftFocus ( CONICSECTION: f ) equals MidPoint ( LINESEGMENT: n )",
    "id": 3397,
    "declarations": "f: CONICSECTION; n: LINESEGMENT",
    "facts": "LeftFocus(f) = MidPoint(n)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: A ) equals LINE: Z",
    "id": 3398,
    "declarations": "A: CONICSECTION; Z: LINE",
    "facts": "RightDirectrix(A) = Z"
},
{
    "assertion": "Locus ( UpperVertex ( CONICSECTION: r ) ) equals CURVE: o",
    "id": 3399,
    "declarations": "r: CONICSECTION; o: CURVE",
    "facts": "Locus(UpperVertex(r)) = o"
},
{
    "assertion": "sqrt ( NUMBER: 77 ) equals Inclination ( LINE: z )",
    "id": 3400,
    "declarations": "77: NUMBER; z: LINE",
    "facts": "sqrt(77) = Inclination(z)"
},
{
    "assertion": "IsInTangent ( CIRCLE: h, CIRCLE: K ) equals BOOL: True",
    "id": 3401,
    "declarations": "h: CIRCLE; K: CIRCLE; True: BOOL",
    "facts": "IsInTangent(h, K) = True"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: A ) equals OverlappingLine ( LINESEGMENT: V )",
    "id": 3402,
    "declarations": "A: CONICSECTION; V: LINESEGMENT",
    "facts": "LeftDirectrix(A) = OverlappingLine(V)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: i ) equals LINESEGMENT: Y",
    "id": 3403,
    "declarations": "i: ELLIPSE; Y: LINESEGMENT",
    "facts": "MinorAxis(i) = Y"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: y, TRIANGLE: u ) equals BOOL: False",
    "id": 3404,
    "declarations": "y: CIRCLE; u: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(y, u) = False"
},
{
    "assertion": "lg ( Inclination ( LINE: M ) ) equals NUMBER: 88",
    "id": 3405,
    "declarations": "M: LINE; 88: NUMBER",
    "facts": "lg(Inclination(M)) = 88"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: u ) equals LINE: r",
    "id": 3406,
    "declarations": "u: CONICSECTION; r: LINE",
    "facts": "LeftDirectrix(u) = r"
},
{
    "assertion": "Focus ( CONICSECTION: C ) equals UpperFocus ( CONICSECTION: w )",
    "id": 3407,
    "declarations": "C: CONICSECTION; w: CONICSECTION",
    "facts": "Focus(C) = UpperFocus(w)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: V ) equals LINESEGMENT: E",
    "id": 3408,
    "declarations": "V: ELLIPSE; E: LINESEGMENT",
    "facts": "MinorAxis(V) = E"
},
{
    "assertion": "LineSegmentOf ( Orthocenter ( TRIANGLE: y ), Orthocenter ( TRIANGLE: t ) ) equals MajorAxis ( ELLIPSE: H )",
    "id": 3409,
    "declarations": "y: TRIANGLE; t: TRIANGLE; H: ELLIPSE",
    "facts": "LineSegmentOf(Orthocenter(y), Orthocenter(t)) = MajorAxis(H)"
},
{
    "assertion": "Center ( CONICSECTION: B ) equals UpperFocus ( CONICSECTION: A )",
    "id": 3410,
    "declarations": "B: CONICSECTION; A: CONICSECTION",
    "facts": "Center(B) = UpperFocus(A)"
},
{
    "assertion": "Max ( NUMBER: -37 ) equals Intercept ( LINE: s, AXIS: xAxis )",
    "id": 3411,
    "declarations": "-37: NUMBER; s: LINE; xAxis: AXIS",
    "facts": "Max(-37) = Intercept(s, xAxis)"
},
{
    "assertion": "YCoordinate ( Projection ( POINT: k, LINE: o ) ) equals NUMBER: 86",
    "id": 3412,
    "declarations": "k: POINT; o: LINE; 86: NUMBER",
    "facts": "YCoordinate(Projection(k, o)) = 86"
},
{
    "assertion": "RightPart ( HYPERBOLA: Q ) equals Locus ( POINT: T )",
    "id": 3413,
    "declarations": "Q: HYPERBOLA; T: POINT",
    "facts": "RightPart(Q) = Locus(T)"
},
{
    "assertion": "lg ( NUMBER: 1 ) equals InterReciprocal ( NUMBER: -34 )",
    "id": 3414,
    "declarations": "1: NUMBER; -34: NUMBER",
    "facts": "lg(1) = InterReciprocal(-34)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: L ) equals POINT: o",
    "id": 3415,
    "declarations": "L: TRIANGLE; o: POINT",
    "facts": "Orthocenter(L) = o"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: m ) equals TangentOfPoint ( POINT: V, RightPart ( HYPERBOLA: u ) )",
    "id": 3416,
    "declarations": "m: CONICSECTION; V: POINT; u: HYPERBOLA",
    "facts": "RightDirectrix(m) = TangentOfPoint(V, RightPart(u))"
},
{
    "assertion": "Between ( MidPoint ( RealAxis ( ELLIPSE: o ) ), Orthocenter ( TRIANGLE: U ), POINT: X ) equals BOOL: False",
    "id": 3417,
    "declarations": "o: ELLIPSE; U: TRIANGLE; X: POINT; False: BOOL",
    "facts": "Between(MidPoint(RealAxis(o)), Orthocenter(U), X) = False"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: s ) ) equals Length ( LINESEGMENT: x )",
    "id": 3418,
    "declarations": "s: CONICSECTION; x: LINESEGMENT",
    "facts": "Slope(RightDirectrix(s)) = Length(x)"
},
{
    "assertion": "Focus ( CONICSECTION: g ) equals LowerFocus ( CONICSECTION: K )",
    "id": 3419,
    "declarations": "g: CONICSECTION; K: CONICSECTION",
    "facts": "Focus(g) = LowerFocus(K)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: N ) equals LINESEGMENT: U",
    "id": 3420,
    "declarations": "N: ELLIPSE; U: LINESEGMENT",
    "facts": "ImaginaryAxis(N) = U"
},
{
    "assertion": "Quadrant ( POINT: v ) equals Min ( Quadrant ( Center ( CONICSECTION: c ) ) )",
    "id": 3421,
    "declarations": "v: POINT; c: CONICSECTION",
    "facts": "Quadrant(v) = Min(Quadrant(Center(c)))"
},
{
    "assertion": "DotProduct ( VECTOR: X, VectorOf ( RightVertex ( CONICSECTION: x ), POINT: k ) ) equals sqrt ( Diameter ( CIRCLE: d ) )",
    "id": 3422,
    "declarations": "X: VECTOR; x: CONICSECTION; k: POINT; d: CIRCLE",
    "facts": "DotProduct(X, VectorOf(RightVertex(x), k)) = sqrt(Diameter(d))"
},
{
    "assertion": "lg ( sqrt ( Quadrant ( RightFocus ( CONICSECTION: a ) ) ) ) equals Eccentricity ( CONICSECTION: t )",
    "id": 3423,
    "declarations": "a: CONICSECTION; t: CONICSECTION",
    "facts": "lg(sqrt(Quadrant(RightFocus(a)))) = Eccentricity(t)"
},
{
    "assertion": "Center ( CONICSECTION: Y ) equals MidPoint ( LINESEGMENT: G )",
    "id": 3424,
    "declarations": "Y: CONICSECTION; G: LINESEGMENT",
    "facts": "Center(Y) = MidPoint(G)"
},
{
    "assertion": "Locus ( RightVertex ( CONICSECTION: l ) ) equals Locus ( Circumcenter ( TRIANGLE: Q ) )",
    "id": 3425,
    "declarations": "l: CONICSECTION; Q: TRIANGLE",
    "facts": "Locus(RightVertex(l)) = Locus(Circumcenter(Q))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: B, TRIANGLE: a ) equals BOOL: False",
    "id": 3426,
    "declarations": "B: CIRCLE; a: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(B, a) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: t ) equals Center ( CONICSECTION: s )",
    "id": 3427,
    "declarations": "t: CONICSECTION; s: CONICSECTION",
    "facts": "Vertex(t) = Center(s)"
},
{
    "assertion": "Max ( NUMBER: 38 ) equals NUMBER: 97",
    "id": 3428,
    "declarations": "38: NUMBER; 97: NUMBER",
    "facts": "Max(38) = 97"
},
{
    "assertion": "Max ( NUMBER: 26 ) equals Radius ( CIRCLE: I )",
    "id": 3429,
    "declarations": "26: NUMBER; I: CIRCLE",
    "facts": "Max(26) = Radius(I)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: E ) equals POINT: N",
    "id": 3430,
    "declarations": "E: TRIANGLE; N: POINT",
    "facts": "Circumcenter(E) = N"
},
{
    "assertion": "MidPoint ( LINESEGMENT: f ) equals UpperVertex ( CONICSECTION: V )",
    "id": 3431,
    "declarations": "f: LINESEGMENT; V: CONICSECTION",
    "facts": "MidPoint(f) = UpperVertex(V)"
},
{
    "assertion": "LocusEquation ( POINT: y ) equals EXPRESSION: x^2*space+*spacey*space=*space4",
    "id": 3432,
    "declarations": "y: POINT; x^2*space+*spacey*space=*space4: EXPRESSION",
    "facts": "LocusEquation(y) = x^2*space+*spacey*space=*space4"
},
{
    "assertion": "LowerVertex ( CONICSECTION: o ) equals Center ( CONICSECTION: E )",
    "id": 3433,
    "declarations": "o: CONICSECTION; E: CONICSECTION",
    "facts": "LowerVertex(o) = Center(E)"
},
{
    "assertion": "TangentPoint ( OverlappingLine ( ImaginaryAxis ( ELLIPSE: m ) ), CircumCircle ( TRIANGLE: Z ) ) equals Incenter ( TRIANGLE: q )",
    "id": 3434,
    "declarations": "m: ELLIPSE; Z: TRIANGLE; q: TRIANGLE",
    "facts": "TangentPoint(OverlappingLine(ImaginaryAxis(m)), CircumCircle(Z)) = Incenter(q)"
},
{
    "assertion": "Intersection ( CURVE: W, CURVE: u ) equals POINT: z",
    "id": 3435,
    "declarations": "W: CURVE; u: CURVE; z: POINT",
    "facts": "Intersection(W, u) = z"
},
{
    "assertion": "NumIntersection ( CURVE: W, CURVE: A ) equals Area ( CONICSECTION: i )",
    "id": 3436,
    "declarations": "W: CURVE; A: CURVE; i: CONICSECTION",
    "facts": "NumIntersection(W, A) = Area(i)"
},
{
    "assertion": "MidPoint ( LineSegmentOf ( Circumcenter ( TRIANGLE: n ), POINT: v ) ) equals POINT: S",
    "id": 3437,
    "declarations": "n: TRIANGLE; v: POINT; S: POINT",
    "facts": "MidPoint(LineSegmentOf(Circumcenter(n), v)) = S"
},
{
    "assertion": "Min ( FocalLength ( CONICSECTION: I ) ) equals Abs ( LINESEGMENT: X )",
    "id": 3438,
    "declarations": "I: CONICSECTION; X: LINESEGMENT",
    "facts": "Min(FocalLength(I)) = Abs(X)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: t ) equals POINT: u",
    "id": 3439,
    "declarations": "t: CONICSECTION; u: POINT",
    "facts": "LowerFocus(t) = u"
},
{
    "assertion": "Asymptote ( HYPERBOLA: r ) equals LINE: F",
    "id": 3440,
    "declarations": "r: HYPERBOLA; F: LINE",
    "facts": "Asymptote(r) = F"
},
{
    "assertion": "Expression ( CURVE: d ) equals Expression ( CURVE: G )",
    "id": 3441,
    "declarations": "d: CURVE; G: CURVE",
    "facts": "Expression(d) = Expression(G)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: n ) equals Circumcenter ( TRIANGLE: d )",
    "id": 3442,
    "declarations": "n: CONICSECTION; d: TRIANGLE",
    "facts": "LeftFocus(n) = Circumcenter(d)"
},
{
    "assertion": "TangentOfPoint ( LowerVertex ( CONICSECTION: I ), CURVE: b ) equals PerpendicularBisector ( LINESEGMENT: K )",
    "id": 3443,
    "declarations": "I: CONICSECTION; b: CURVE; K: LINESEGMENT",
    "facts": "TangentOfPoint(LowerVertex(I), b) = PerpendicularBisector(K)"
},
{
    "assertion": "Inclination ( LINE: L ) equals Diameter ( CIRCLE: M )",
    "id": 3444,
    "declarations": "L: LINE; M: CIRCLE",
    "facts": "Inclination(L) = Diameter(M)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: K ) equals POINT: m",
    "id": 3445,
    "declarations": "K: CONICSECTION; m: POINT",
    "facts": "LowerFocus(K) = m"
},
{
    "assertion": "XCoordinate ( POINT: H ) equals Inclination ( OverlappingLine ( LINESEGMENT: O ) )",
    "id": 3446,
    "declarations": "H: POINT; O: LINESEGMENT",
    "facts": "XCoordinate(H) = Inclination(OverlappingLine(O))"
},
{
    "assertion": "Min ( Slope ( LINE: L ) ) equals Intercept ( LINE: p, AXIS: xAxis )",
    "id": 3447,
    "declarations": "L: LINE; p: LINE; xAxis: AXIS",
    "facts": "Min(Slope(L)) = Intercept(p, xAxis)"
},
{
    "assertion": "Incenter ( TRIANGLE: j ) equals RightFocus ( CONICSECTION: a )",
    "id": 3448,
    "declarations": "j: TRIANGLE; a: CONICSECTION",
    "facts": "Incenter(j) = RightFocus(a)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: X ) equals Center ( CONICSECTION: X )",
    "id": 3449,
    "declarations": "X: TRIANGLE; X: CONICSECTION",
    "facts": "Circumcenter(X) = Center(X)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: e ) equals LeftVertex ( CONICSECTION: r )",
    "id": 3450,
    "declarations": "e: LINESEGMENT; r: CONICSECTION",
    "facts": "Endpoint(e) = LeftVertex(r)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: k ) equals Projection ( MidPoint ( InterceptChord ( LINE: I, CONICSECTION: R ) ), LINE: F )",
    "id": 3451,
    "declarations": "k: CONICSECTION; I: LINE; R: CONICSECTION; F: LINE",
    "facts": "LeftFocus(k) = Projection(MidPoint(InterceptChord(I, R)), F)"
},
{
    "assertion": "Max ( Distance ( RightVertex ( CONICSECTION: H ), POINT: e ) ) equals Area ( CONICSECTION: a )",
    "id": 3452,
    "declarations": "H: CONICSECTION; e: POINT; a: CONICSECTION",
    "facts": "Max(Distance(RightVertex(H), e)) = Area(a)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: m ) equals PerpendicularBisector ( RealAxis ( ELLIPSE: Z ) )",
    "id": 3453,
    "declarations": "m: CONICSECTION; Z: ELLIPSE",
    "facts": "LeftDirectrix(m) = PerpendicularBisector(RealAxis(Z))"
},
{
    "assertion": "Inclination ( LINE: q ) equals Length ( LINESEGMENT: K )",
    "id": 3454,
    "declarations": "q: LINE; K: LINESEGMENT",
    "facts": "Inclination(q) = Length(K)"
},
{
    "assertion": "Length ( LINESEGMENT: W ) equals DotProduct ( VectorOf ( MidPoint ( LINESEGMENT: k ), LeftVertex ( CONICSECTION: F ) ), VECTOR: i )",
    "id": 3455,
    "declarations": "W: LINESEGMENT; k: LINESEGMENT; F: CONICSECTION; i: VECTOR",
    "facts": "Length(W) = DotProduct(VectorOf(MidPoint(k), LeftVertex(F)), i)"
},
{
    "assertion": "Distance ( UpperVertex ( CONICSECTION: N ), MidPoint ( LINESEGMENT: j ) ) equals NUMBER: -6",
    "id": 3456,
    "declarations": "N: CONICSECTION; j: LINESEGMENT; -6: NUMBER",
    "facts": "Distance(UpperVertex(N), MidPoint(j)) = -6"
},
{
    "assertion": "RightPart ( HYPERBOLA: D ) equals CURVE: g",
    "id": 3457,
    "declarations": "D: HYPERBOLA; g: CURVE",
    "facts": "RightPart(D) = g"
},
{
    "assertion": "LocusEquation ( POINT: j ) equals EXPRESSION: y*space=*spacetan(x)",
    "id": 3458,
    "declarations": "j: POINT; y*space=*spacetan(x): EXPRESSION",
    "facts": "LocusEquation(j) = y*space=*spacetan(x)"
},
{
    "assertion": "RealAxis ( ELLIPSE: g ) equals LINESEGMENT: F",
    "id": 3459,
    "declarations": "g: ELLIPSE; F: LINESEGMENT",
    "facts": "RealAxis(g) = F"
},
{
    "assertion": "FocalLength ( CONICSECTION: p ) equals Diameter ( CIRCLE: x )",
    "id": 3460,
    "declarations": "p: CONICSECTION; x: CIRCLE",
    "facts": "FocalLength(p) = Diameter(x)"
},
{
    "assertion": "TangentOfPoint ( POINT: H, CURVE: i ) equals LINE: g",
    "id": 3461,
    "declarations": "H: POINT; i: CURVE; g: LINE",
    "facts": "TangentOfPoint(H, i) = g"
},
{
    "assertion": "Min ( NUMBER: 33 ) equals Diameter ( CIRCLE: Y )",
    "id": 3462,
    "declarations": "33: NUMBER; Y: CIRCLE",
    "facts": "Min(33) = Diameter(Y)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: Z ) equals OverlappingLine ( LINESEGMENT: j )",
    "id": 3463,
    "declarations": "Z: LINESEGMENT; j: LINESEGMENT",
    "facts": "PerpendicularBisector(Z) = OverlappingLine(j)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: d, TRIANGLE: x ) equals BOOL: False",
    "id": 3464,
    "declarations": "d: CIRCLE; x: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(d, x) = False"
},
{
    "assertion": "PointOnCurve ( RightVertex ( CONICSECTION: F ), CURVE: F ) equals BOOL: False",
    "id": 3465,
    "declarations": "F: CONICSECTION; F: CURVE; False: BOOL",
    "facts": "PointOnCurve(RightVertex(F), F) = False"
},
{
    "assertion": "UpperVertex ( CONICSECTION: N ) equals POINT: M",
    "id": 3466,
    "declarations": "N: CONICSECTION; M: POINT",
    "facts": "UpperVertex(N) = M"
},
{
    "assertion": "sqrt ( InterReciprocal ( YCoordinate ( POINT: W ) ) ) equals NUMBER: -14",
    "id": 3467,
    "declarations": "W: POINT; -14: NUMBER",
    "facts": "sqrt(InterReciprocal(YCoordinate(W))) = -14"
},
{
    "assertion": "Directrix ( CONICSECTION: n ) equals LineOf ( LowerFocus ( CONICSECTION: B ), Incenter ( TRIANGLE: y ) )",
    "id": 3468,
    "declarations": "n: CONICSECTION; B: CONICSECTION; y: TRIANGLE",
    "facts": "Directrix(n) = LineOf(LowerFocus(B), Incenter(y))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: p ) equals NUMBER: -87",
    "id": 3469,
    "declarations": "p: CONICSECTION; -87: NUMBER",
    "facts": "Eccentricity(p) = -87"
},
{
    "assertion": "MajorAxis ( ELLIPSE: E ) equals MinorAxis ( ELLIPSE: Q )",
    "id": 3470,
    "declarations": "E: ELLIPSE; Q: ELLIPSE",
    "facts": "MajorAxis(E) = MinorAxis(Q)"
},
{
    "assertion": "Negation ( SymmetryAxis ( CONICSECTION: O ) equals AXIS: yAxis ) equals BOOL: False",
    "id": 3471,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "TangentPoint ( LINE: J, CIRCLE: B ) equals UpperVertex ( CONICSECTION: W )",
    "id": 3472,
    "declarations": "J: LINE; B: CIRCLE; W: CONICSECTION",
    "facts": "TangentPoint(J, B) = UpperVertex(W)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: p ) equals RightVertex ( CONICSECTION: q )",
    "id": 3473,
    "declarations": "p: TRIANGLE; q: CONICSECTION",
    "facts": "Circumcenter(p) = RightVertex(q)"
},
{
    "assertion": "InterReciprocal ( lg ( NUMBER: -6 ) ) equals NUMBER: 27",
    "id": 3474,
    "declarations": "-6: NUMBER; 27: NUMBER",
    "facts": "InterReciprocal(lg(-6)) = 27"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: G ) equals LINE: J",
    "id": 3475,
    "declarations": "G: CONICSECTION; J: LINE",
    "facts": "RightDirectrix(G) = J"
},
{
    "assertion": "TangentOnPoint ( Center ( CONICSECTION: q ), CURVE: O ) equals RightDirectrix ( CONICSECTION: L )",
    "id": 3476,
    "declarations": "q: CONICSECTION; O: CURVE; L: CONICSECTION",
    "facts": "TangentOnPoint(Center(q), O) = RightDirectrix(L)"
},
{
    "assertion": "Max ( FocalLength ( CONICSECTION: G ) ) equals NUMBER: -91",
    "id": 3477,
    "declarations": "G: CONICSECTION; -91: NUMBER",
    "facts": "Max(FocalLength(G)) = -91"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: K, TRIANGLE: B ) equals BOOL: False",
    "id": 3478,
    "declarations": "K: CIRCLE; B: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(K, B) = False"
},
{
    "assertion": "PointOnCurve ( POINT: d, CURVE: k ) equals BOOL: False",
    "id": 3479,
    "declarations": "d: POINT; k: CURVE; False: BOOL",
    "facts": "PointOnCurve(d, k) = False"
},
{
    "assertion": "IsTangent ( LINE: H, CONICSECTION: T ) equals BOOL: True",
    "id": 3480,
    "declarations": "H: LINE; T: CONICSECTION; True: BOOL",
    "facts": "IsTangent(H, T) = True"
},
{
    "assertion": "UpperFocus ( CONICSECTION: c ) equals LeftFocus ( CONICSECTION: C )",
    "id": 3481,
    "declarations": "c: CONICSECTION; C: CONICSECTION",
    "facts": "UpperFocus(c) = LeftFocus(C)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: m, TRIANGLE: A ) equals BOOL: True",
    "id": 3482,
    "declarations": "m: CIRCLE; A: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(m, A) = True"
},
{
    "assertion": "Negation ( RightFocus ( CONICSECTION: d ) equals UpperVertex ( CONICSECTION: k ) ) equals BOOL: False",
    "id": 3483,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "And ( PerpendicularBisector ( LINESEGMENT: l ) equals LINE: C, Focus ( CONICSECTION: m ) equals POINT: L ) equals BOOL: True",
    "id": 3484,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Intersection ( Locus ( Orthocenter ( TriangleOf ( MidPoint ( LINESEGMENT: N ), POINT: D, UpperVertex ( CONICSECTION: d ) ) ) ), LeftPart ( HYPERBOLA: n ) ) equals POINT: d",
    "id": 3485,
    "declarations": "N: LINESEGMENT; D: POINT; d: CONICSECTION; n: HYPERBOLA; d: POINT",
    "facts": "Intersection(Locus(Orthocenter(TriangleOf(MidPoint(N), D, UpperVertex(d)))), LeftPart(n)) = d"
},
{
    "assertion": "Max ( NUMBER: 97 ) equals Abs ( RealAxis ( ELLIPSE: u ) )",
    "id": 3486,
    "declarations": "97: NUMBER; u: ELLIPSE",
    "facts": "Max(97) = Abs(RealAxis(u))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: M ) equals Center ( CONICSECTION: G )",
    "id": 3487,
    "declarations": "M: CONICSECTION; G: CONICSECTION",
    "facts": "UpperFocus(M) = Center(G)"
},
{
    "assertion": "Endpoint ( MinorAxis ( ELLIPSE: f ) ) equals LeftVertex ( CONICSECTION: a )",
    "id": 3488,
    "declarations": "f: ELLIPSE; a: CONICSECTION",
    "facts": "Endpoint(MinorAxis(f)) = LeftVertex(a)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: v ) equals POINT: L",
    "id": 3489,
    "declarations": "v: CONICSECTION; L: POINT",
    "facts": "LeftFocus(v) = L"
},
{
    "assertion": "FocalLength ( CONICSECTION: Y ) equals FocalLength ( CONICSECTION: B )",
    "id": 3490,
    "declarations": "Y: CONICSECTION; B: CONICSECTION",
    "facts": "FocalLength(Y) = FocalLength(B)"
},
{
    "assertion": "Slope ( LeftDirectrix ( CONICSECTION: U ) ) equals NUMBER: -94",
    "id": 3491,
    "declarations": "U: CONICSECTION; -94: NUMBER",
    "facts": "Slope(LeftDirectrix(U)) = -94"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: y ) equals LINESEGMENT: k",
    "id": 3492,
    "declarations": "y: ELLIPSE; k: LINESEGMENT",
    "facts": "ImaginaryAxis(y) = k"
},
{
    "assertion": "LowerVertex ( CONICSECTION: g ) equals LowerVertex ( CONICSECTION: X )",
    "id": 3493,
    "declarations": "g: CONICSECTION; X: CONICSECTION",
    "facts": "LowerVertex(g) = LowerVertex(X)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: t ) equals LINESEGMENT: W",
    "id": 3494,
    "declarations": "t: ELLIPSE; W: LINESEGMENT",
    "facts": "MajorAxis(t) = W"
},
{
    "assertion": "Slope ( TangentOnPoint ( POINT: K, CURVE: f ) ) equals NUMBER: 50",
    "id": 3495,
    "declarations": "K: POINT; f: CURVE; 50: NUMBER",
    "facts": "Slope(TangentOnPoint(K, f)) = 50"
},
{
    "assertion": "RealAxis ( ELLIPSE: U ) equals LINESEGMENT: N",
    "id": 3496,
    "declarations": "U: ELLIPSE; N: LINESEGMENT",
    "facts": "RealAxis(U) = N"
},
{
    "assertion": "Radius ( CIRCLE: Z ) equals NUMBER: 20",
    "id": 3497,
    "declarations": "Z: CIRCLE; 20: NUMBER",
    "facts": "Radius(Z) = 20"
},
{
    "assertion": "PerpendicularBisector ( MajorAxis ( ELLIPSE: v ) ) equals LINE: w",
    "id": 3498,
    "declarations": "v: ELLIPSE; w: LINE",
    "facts": "PerpendicularBisector(MajorAxis(v)) = w"
},
{
    "assertion": "FocalLength ( CONICSECTION: B ) equals FocalLength ( CONICSECTION: d )",
    "id": 3499,
    "declarations": "B: CONICSECTION; d: CONICSECTION",
    "facts": "FocalLength(B) = FocalLength(d)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: u ) equals POINT: J",
    "id": 3500,
    "declarations": "u: TRIANGLE; J: POINT",
    "facts": "Circumcenter(u) = J"
},
{
    "assertion": "Incenter ( TRIANGLE: A ) equals RightFocus ( CONICSECTION: n )",
    "id": 3501,
    "declarations": "A: TRIANGLE; n: CONICSECTION",
    "facts": "Incenter(A) = RightFocus(n)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: X ) equals LINESEGMENT: w",
    "id": 3502,
    "declarations": "X: ELLIPSE; w: LINESEGMENT",
    "facts": "MajorAxis(X) = w"
},
{
    "assertion": "LeftVertex ( CONICSECTION: V ) equals Center ( CONICSECTION: r )",
    "id": 3503,
    "declarations": "V: CONICSECTION; r: CONICSECTION",
    "facts": "LeftVertex(V) = Center(r)"
},
{
    "assertion": "IsPerpendicular ( OverlappingLine ( LINESEGMENT: i ), RightDirectrix ( CONICSECTION: x ) ) equals BOOL: False",
    "id": 3504,
    "declarations": "i: LINESEGMENT; x: CONICSECTION; False: BOOL",
    "facts": "IsPerpendicular(OverlappingLine(i), RightDirectrix(x)) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: l ) equals POINT: b",
    "id": 3505,
    "declarations": "l: CONICSECTION; b: POINT",
    "facts": "RightFocus(l) = b"
},
{
    "assertion": "FocalLength ( CONICSECTION: k ) equals Inclination ( LeftDirectrix ( CONICSECTION: X ) )",
    "id": 3506,
    "declarations": "k: CONICSECTION; X: CONICSECTION",
    "facts": "FocalLength(k) = Inclination(LeftDirectrix(X))"
},
{
    "assertion": "NumIntersection ( CURVE: u, CURVE: L ) equals NUMBER: -76",
    "id": 3507,
    "declarations": "u: CURVE; L: CURVE; -76: NUMBER",
    "facts": "NumIntersection(u, L) = -76"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: R ) equals PerpendicularBisector ( LINESEGMENT: P )",
    "id": 3508,
    "declarations": "R: CONICSECTION; P: LINESEGMENT",
    "facts": "RightDirectrix(R) = PerpendicularBisector(P)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: C ) equals YCoordinate ( RightVertex ( CONICSECTION: Y ) )",
    "id": 3509,
    "declarations": "C: CONICSECTION; Y: CONICSECTION",
    "facts": "Eccentricity(C) = YCoordinate(RightVertex(Y))"
},
{
    "assertion": "DotProduct ( VECTOR: Q, VECTOR: D ) equals NUMBER: -25",
    "id": 3510,
    "declarations": "Q: VECTOR; D: VECTOR; -25: NUMBER",
    "facts": "DotProduct(Q, D) = -25"
},
{
    "assertion": "IsIntersect ( CURVE: U, CURVE: G ) equals BOOL: False",
    "id": 3511,
    "declarations": "U: CURVE; G: CURVE; False: BOOL",
    "facts": "IsIntersect(U, G) = False"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: t ) ) equals YCoordinate ( POINT: s )",
    "id": 3512,
    "declarations": "t: CONICSECTION; s: POINT",
    "facts": "Slope(RightDirectrix(t)) = YCoordinate(s)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: h ) equals LINE: E",
    "id": 3513,
    "declarations": "h: CONICSECTION; E: LINE",
    "facts": "RightDirectrix(h) = E"
},
{
    "assertion": "PerpendicularBisector ( MajorAxis ( ELLIPSE: W ) ) equals LINE: U",
    "id": 3514,
    "declarations": "W: ELLIPSE; U: LINE",
    "facts": "PerpendicularBisector(MajorAxis(W)) = U"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: w, TRIANGLE: O ) equals BOOL: True",
    "id": 3515,
    "declarations": "w: CIRCLE; O: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(w, O) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: f ) equals MinorAxis ( ELLIPSE: n )",
    "id": 3516,
    "declarations": "f: ELLIPSE; n: ELLIPSE",
    "facts": "MinorAxis(f) = MinorAxis(n)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: b ) equals LINE: P",
    "id": 3517,
    "declarations": "b: LINESEGMENT; P: LINE",
    "facts": "OverlappingLine(b) = P"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: z ) ) equals LINE: Y",
    "id": 3518,
    "declarations": "z: ELLIPSE; Y: LINE",
    "facts": "PerpendicularBisector(ImaginaryAxis(z)) = Y"
},
{
    "assertion": "MajorAxis ( ELLIPSE: M ) equals LINESEGMENT: a",
    "id": 3519,
    "declarations": "M: ELLIPSE; a: LINESEGMENT",
    "facts": "MajorAxis(M) = a"
},
{
    "assertion": "RightPart ( HYPERBOLA: A ) equals CURVE: V",
    "id": 3520,
    "declarations": "A: HYPERBOLA; V: CURVE",
    "facts": "RightPart(A) = V"
},
{
    "assertion": "IsIntersect ( Locus ( LeftVertex ( CONICSECTION: M ) ), CURVE: E ) equals BOOL: True",
    "id": 3521,
    "declarations": "M: CONICSECTION; E: CURVE; True: BOOL",
    "facts": "IsIntersect(Locus(LeftVertex(M)), E) = True"
},
{
    "assertion": "LeftFocus ( CONICSECTION: o ) equals RightVertex ( CONICSECTION: h )",
    "id": 3522,
    "declarations": "o: CONICSECTION; h: CONICSECTION",
    "facts": "LeftFocus(o) = RightVertex(h)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: r ) equals UpperVertex ( CONICSECTION: l )",
    "id": 3523,
    "declarations": "r: TRIANGLE; l: CONICSECTION",
    "facts": "Circumcenter(r) = UpperVertex(l)"
},
{
    "assertion": "Focus ( CONICSECTION: a ) equals POINT: R",
    "id": 3524,
    "declarations": "a: CONICSECTION; R: POINT",
    "facts": "Focus(a) = R"
},
{
    "assertion": "FootPoint ( OverlappingLine ( LINESEGMENT: U ), LINE: m ) equals Incenter ( TRIANGLE: P )",
    "id": 3525,
    "declarations": "U: LINESEGMENT; m: LINE; P: TRIANGLE",
    "facts": "FootPoint(OverlappingLine(U), m) = Incenter(P)"
},
{
    "assertion": "Perimeter ( CONICSECTION: Y ) equals Slope ( LINE: k )",
    "id": 3526,
    "declarations": "Y: CONICSECTION; k: LINE",
    "facts": "Perimeter(Y) = Slope(k)"
},
{
    "assertion": "Negation ( MidPoint ( ImaginaryAxis ( ELLIPSE: e ) ) equals POINT: y ) equals BOOL: True",
    "id": 3527,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Abs ( MinorAxis ( ELLIPSE: K ) ) equals Area ( CONICSECTION: Y )",
    "id": 3528,
    "declarations": "K: ELLIPSE; Y: CONICSECTION",
    "facts": "Abs(MinorAxis(K)) = Area(Y)"
},
{
    "assertion": "Coordinate ( Circumcenter ( TRIANGLE: E ) ) equals ( Perimeter ( CONICSECTION: Z ), Quadrant ( POINT: y ) )",
    "id": 3529,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Circumcenter ( TRIANGLE: l ) equals RightFocus ( CONICSECTION: W )",
    "id": 3530,
    "declarations": "l: TRIANGLE; W: CONICSECTION",
    "facts": "Circumcenter(l) = RightFocus(W)"
},
{
    "assertion": "TangentPoint ( LINE: j, CIRCLE: v ) equals POINT: p",
    "id": 3531,
    "declarations": "j: LINE; v: CIRCLE; p: POINT",
    "facts": "TangentPoint(j, v) = p"
},
{
    "assertion": "LineSegmentOf ( POINT: j, POINT: N ) equals ImaginaryAxis ( ELLIPSE: N )",
    "id": 3532,
    "declarations": "j: POINT; N: POINT; N: ELLIPSE",
    "facts": "LineSegmentOf(j, N) = ImaginaryAxis(N)"
},
{
    "assertion": "Max ( NUMBER: 81 ) equals NUMBER: 40",
    "id": 3533,
    "declarations": "81: NUMBER; 40: NUMBER",
    "facts": "Max(81) = 40"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: h ) equals LeftDirectrix ( CONICSECTION: B )",
    "id": 3534,
    "declarations": "h: LINESEGMENT; B: CONICSECTION",
    "facts": "OverlappingLine(h) = LeftDirectrix(B)"
},
{
    "assertion": "RightPart ( HYPERBOLA: y ) equals CURVE: U",
    "id": 3535,
    "declarations": "y: HYPERBOLA; U: CURVE",
    "facts": "RightPart(y) = U"
},
{
    "assertion": "InterReciprocal ( NUMBER: 4 ) equals Area ( CONICSECTION: s )",
    "id": 3536,
    "declarations": "4: NUMBER; s: CONICSECTION",
    "facts": "InterReciprocal(4) = Area(s)"
},
{
    "assertion": "Coordinate ( UpperFocus ( CONICSECTION: j ) ) equals ( XCoordinate ( MidPoint ( LINESEGMENT: L ) ), HalfFocalLength ( CONICSECTION: q ) )",
    "id": 3537,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Endpoint ( LINESEGMENT: l ) equals UpperFocus ( CONICSECTION: p )",
    "id": 3538,
    "declarations": "l: LINESEGMENT; p: CONICSECTION",
    "facts": "Endpoint(l) = UpperFocus(p)"
},
{
    "assertion": "Incenter ( TRIANGLE: j ) equals UpperVertex ( CONICSECTION: N )",
    "id": 3539,
    "declarations": "j: TRIANGLE; N: CONICSECTION",
    "facts": "Incenter(j) = UpperVertex(N)"
},
{
    "assertion": "XCoordinate ( LowerVertex ( CONICSECTION: F ) ) equals Eccentricity ( CONICSECTION: r )",
    "id": 3540,
    "declarations": "F: CONICSECTION; r: CONICSECTION",
    "facts": "XCoordinate(LowerVertex(F)) = Eccentricity(r)"
},
{
    "assertion": "LocusEquation ( POINT: A ) equals EXPRESSION: x*y*space=*space1",
    "id": 3541,
    "declarations": "A: POINT; x*y*space=*space1: EXPRESSION",
    "facts": "LocusEquation(A) = x*y*space=*space1"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: i, TRIANGLE: o ) equals BOOL: True",
    "id": 3542,
    "declarations": "i: CIRCLE; o: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(i, o) = True"
},
{
    "assertion": "Min ( Diameter ( CIRCLE: V ) ) equals lg ( NUMBER: 16 )",
    "id": 3543,
    "declarations": "V: CIRCLE; 16: NUMBER",
    "facts": "Min(Diameter(V)) = lg(16)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: O ) equals MinorAxis ( ELLIPSE: O )",
    "id": 3544,
    "declarations": "O: ELLIPSE; O: ELLIPSE",
    "facts": "MinorAxis(O) = MinorAxis(O)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: k ) equals CIRCLE: j",
    "id": 3545,
    "declarations": "k: TRIANGLE; j: CIRCLE",
    "facts": "CircumCircle(k) = j"
},
{
    "assertion": "MajorAxis ( ELLIPSE: c ) equals LINESEGMENT: Z",
    "id": 3546,
    "declarations": "c: ELLIPSE; Z: LINESEGMENT",
    "facts": "MajorAxis(c) = Z"
},
{
    "assertion": "YCoordinate ( UpperVertex ( CONICSECTION: f ) ) equals NUMBER: -73",
    "id": 3547,
    "declarations": "f: CONICSECTION; -73: NUMBER",
    "facts": "YCoordinate(UpperVertex(f)) = -73"
},
{
    "assertion": "Eccentricity ( CONICSECTION: W ) equals FocalLength ( CONICSECTION: b )",
    "id": 3548,
    "declarations": "W: CONICSECTION; b: CONICSECTION",
    "facts": "Eccentricity(W) = FocalLength(b)"
},
{
    "assertion": "XCoordinate ( POINT: V ) equals InterReciprocal ( Area ( CONICSECTION: O ) )",
    "id": 3549,
    "declarations": "V: POINT; O: CONICSECTION",
    "facts": "XCoordinate(V) = InterReciprocal(Area(O))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: G ) equals Center ( CONICSECTION: M )",
    "id": 3550,
    "declarations": "G: CONICSECTION; M: CONICSECTION",
    "facts": "LeftVertex(G) = Center(M)"
},
{
    "assertion": "InterceptChord ( OverlappingLine ( LINESEGMENT: k ), CONICSECTION: N ) equals ImaginaryAxis ( ELLIPSE: v )",
    "id": 3551,
    "declarations": "k: LINESEGMENT; N: CONICSECTION; v: ELLIPSE",
    "facts": "InterceptChord(OverlappingLine(k), N) = ImaginaryAxis(v)"
},
{
    "assertion": "RightVertex ( CONICSECTION: Y ) equals Center ( CONICSECTION: K )",
    "id": 3552,
    "declarations": "Y: CONICSECTION; K: CONICSECTION",
    "facts": "RightVertex(Y) = Center(K)"
},
{
    "assertion": "ApplyUnit ( Abs ( LINESEGMENT: U ), DEGREESTR: degree )",
    "id": 3553,
    "declarations": "U: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(Abs(U), degree) = None"
},
{
    "assertion": "Slope ( LINE: W ) equals Area ( CONICSECTION: C )",
    "id": 3554,
    "declarations": "W: LINE; C: CONICSECTION",
    "facts": "Slope(W) = Area(C)"
},
{
    "assertion": "RightVertex ( CONICSECTION: S ) equals UpperFocus ( CONICSECTION: m )",
    "id": 3555,
    "declarations": "S: CONICSECTION; m: CONICSECTION",
    "facts": "RightVertex(S) = UpperFocus(m)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: v ) equals RightFocus ( CONICSECTION: S )",
    "id": 3556,
    "declarations": "v: LINESEGMENT; S: CONICSECTION",
    "facts": "Endpoint(v) = RightFocus(S)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Y ) equals LINE: a",
    "id": 3557,
    "declarations": "Y: CONICSECTION; a: LINE",
    "facts": "LeftDirectrix(Y) = a"
},
{
    "assertion": "NumIntersection ( CURVE: H, CURVE: o ) equals DotProduct ( VECTOR: J, VECTOR: T )",
    "id": 3558,
    "declarations": "H: CURVE; o: CURVE; J: VECTOR; T: VECTOR",
    "facts": "NumIntersection(H, o) = DotProduct(J, T)"
},
{
    "assertion": "Perimeter ( CONICSECTION: W ) equals NUMBER: -60",
    "id": 3559,
    "declarations": "W: CONICSECTION; -60: NUMBER",
    "facts": "Perimeter(W) = -60"
},
{
    "assertion": "PointOnCurve ( POINT: f, CURVE: m ) equals BOOL: False",
    "id": 3560,
    "declarations": "f: POINT; m: CURVE; False: BOOL",
    "facts": "PointOnCurve(f, m) = False"
},
{
    "assertion": "Area ( CONICSECTION: k ) equals NUMBER: 76",
    "id": 3561,
    "declarations": "k: CONICSECTION; 76: NUMBER",
    "facts": "Area(k) = 76"
},
{
    "assertion": "Projection ( POINT: O, LINE: b ) equals POINT: t",
    "id": 3562,
    "declarations": "O: POINT; b: LINE; t: POINT",
    "facts": "Projection(O, b) = t"
},
{
    "assertion": "Min ( Distance ( Center ( CONICSECTION: x ), Circumcenter ( TRIANGLE: a ) ) ) equals NUMBER: -72",
    "id": 3563,
    "declarations": "x: CONICSECTION; a: TRIANGLE; -72: NUMBER",
    "facts": "Min(Distance(Center(x), Circumcenter(a))) = -72"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: n ) equals AXIS: yAxis",
    "id": 3564,
    "declarations": "n: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(n) = yAxis"
},
{
    "assertion": "Projection ( POINT: x, LINE: E ) equals RightFocus ( CONICSECTION: Z )",
    "id": 3565,
    "declarations": "x: POINT; E: LINE; Z: CONICSECTION",
    "facts": "Projection(x, E) = RightFocus(Z)"
},
{
    "assertion": "Radius ( CIRCLE: A ) equals InterReciprocal ( NUMBER: 1 )",
    "id": 3566,
    "declarations": "A: CIRCLE; 1: NUMBER",
    "facts": "Radius(A) = InterReciprocal(1)"
},
{
    "assertion": "Perimeter ( CONICSECTION: l ) equals Eccentricity ( CONICSECTION: m )",
    "id": 3567,
    "declarations": "l: CONICSECTION; m: CONICSECTION",
    "facts": "Perimeter(l) = Eccentricity(m)"
},
{
    "assertion": "Coordinate ( POINT: H ) equals ( NUMBER: -66, NUMBER: 48 )",
    "id": 3568,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: O ) equals NUMBER: 62",
    "id": 3569,
    "declarations": "O: CONICSECTION; 62: NUMBER",
    "facts": "HalfFocalLength(O) = 62"
},
{
    "assertion": "Focus ( CONICSECTION: h ) equals FootPoint ( LINE: F, TangentOnPoint ( POINT: t, CURVE: B ) )",
    "id": 3570,
    "declarations": "h: CONICSECTION; F: LINE; t: POINT; B: CURVE",
    "facts": "Focus(h) = FootPoint(F, TangentOnPoint(t, B))"
},
{
    "assertion": "TriangleOf ( POINT: d, POINT: u, POINT: G ) equals TRIANGLE: p",
    "id": 3571,
    "declarations": "d: POINT; u: POINT; G: POINT; p: TRIANGLE",
    "facts": "TriangleOf(d, u, G) = p"
},
{
    "assertion": "Directrix ( CONICSECTION: Z ) equals LINE: o",
    "id": 3572,
    "declarations": "Z: CONICSECTION; o: LINE",
    "facts": "Directrix(Z) = o"
},
{
    "assertion": "RightFocus ( CONICSECTION: R ) equals Orthocenter ( TRIANGLE: n )",
    "id": 3573,
    "declarations": "R: CONICSECTION; n: TRIANGLE",
    "facts": "RightFocus(R) = Orthocenter(n)"
},
{
    "assertion": "Diameter ( CIRCLE: i ) equals Eccentricity ( CONICSECTION: D )",
    "id": 3574,
    "declarations": "i: CIRCLE; D: CONICSECTION",
    "facts": "Diameter(i) = Eccentricity(D)"
},
{
    "assertion": "OverlappingLine ( InterceptChord ( LINE: N, CONICSECTION: J ) ) equals PerpendicularBisector ( RealAxis ( ELLIPSE: C ) )",
    "id": 3575,
    "declarations": "N: LINE; J: CONICSECTION; C: ELLIPSE",
    "facts": "OverlappingLine(InterceptChord(N, J)) = PerpendicularBisector(RealAxis(C))"
},
{
    "assertion": "LocusEquation ( MidPoint ( LINESEGMENT: M ) ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 3576,
    "declarations": "M: LINESEGMENT; y*space=*spacelog(x): EXPRESSION",
    "facts": "LocusEquation(MidPoint(M)) = y*space=*spacelog(x)"
},
{
    "assertion": "ApplyUnit ( Radius ( CIRCLE: h ), DEGREESTR: degree )",
    "id": 3577,
    "declarations": "h: CIRCLE; degree: DEGREESTR",
    "facts": "ApplyUnit(Radius(h), degree) = None"
},
{
    "assertion": "IsIntersect ( Locus ( FootPoint ( LINE: u, LINE: l ) ), CURVE: k ) equals BOOL: True",
    "id": 3578,
    "declarations": "u: LINE; l: LINE; k: CURVE; True: BOOL",
    "facts": "IsIntersect(Locus(FootPoint(u, l)), k) = True"
},
{
    "assertion": "ApplyUnit ( NUMBER: 96, DEGREESTR: degree )",
    "id": 3579,
    "declarations": "96: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(96, degree) = None"
},
{
    "assertion": "LocusEquation ( POINT: D ) equals EXPRESSION: x^2*space-*spacey^2*space=*space1",
    "id": 3580,
    "declarations": "D: POINT; x^2*space-*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(D) = x^2*space-*spacey^2*space=*space1"
},
{
    "assertion": "Circumcenter ( TRIANGLE: X ) equals POINT: k",
    "id": 3581,
    "declarations": "X: TRIANGLE; k: POINT",
    "facts": "Circumcenter(X) = k"
},
{
    "assertion": "Diameter ( CIRCLE: V ) equals NUMBER: -14",
    "id": 3582,
    "declarations": "V: CIRCLE; -14: NUMBER",
    "facts": "Diameter(V) = -14"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: b ) equals LINE: L",
    "id": 3583,
    "declarations": "b: LINESEGMENT; L: LINE",
    "facts": "OverlappingLine(b) = L"
},
{
    "assertion": "RightPart ( HYPERBOLA: Y ) equals CURVE: B",
    "id": 3584,
    "declarations": "Y: HYPERBOLA; B: CURVE",
    "facts": "RightPart(Y) = B"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: F, CIRCLE: o ) equals BOOL: False",
    "id": 3585,
    "declarations": "F: LINESEGMENT; o: CIRCLE; False: BOOL",
    "facts": "IsDiameter(F, o) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: P ) equals LeftDirectrix ( CONICSECTION: i )",
    "id": 3586,
    "declarations": "P: CONICSECTION; i: CONICSECTION",
    "facts": "Directrix(P) = LeftDirectrix(i)"
},
{
    "assertion": "Between ( UpperFocus ( CONICSECTION: u ), POINT: V, POINT: R ) equals BOOL: False",
    "id": 3587,
    "declarations": "u: CONICSECTION; V: POINT; R: POINT; False: BOOL",
    "facts": "Between(UpperFocus(u), V, R) = False"
},
{
    "assertion": "InterReciprocal ( NUMBER: 30 ) equals Min ( sqrt ( NUMBER: 13 ) )",
    "id": 3588,
    "declarations": "30: NUMBER; 13: NUMBER",
    "facts": "InterReciprocal(30) = Min(sqrt(13))"
},
{
    "assertion": "Incenter ( TRIANGLE: q ) equals LeftFocus ( CONICSECTION: U )",
    "id": 3589,
    "declarations": "q: TRIANGLE; U: CONICSECTION",
    "facts": "Incenter(q) = LeftFocus(U)"
},
{
    "assertion": "Coordinate ( POINT: d ) equals ( Eccentricity ( CONICSECTION: q ), sqrt ( Min ( NUMBER: 91 ) ) )",
    "id": 3590,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LowerFocus ( CONICSECTION: h ) equals POINT: a",
    "id": 3591,
    "declarations": "h: CONICSECTION; a: POINT",
    "facts": "LowerFocus(h) = a"
},
{
    "assertion": "LeftVertex ( CONICSECTION: D ) equals RightFocus ( CONICSECTION: e )",
    "id": 3592,
    "declarations": "D: CONICSECTION; e: CONICSECTION",
    "facts": "LeftVertex(D) = RightFocus(e)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: Q ) equals POINT: A",
    "id": 3593,
    "declarations": "Q: CONICSECTION; A: POINT",
    "facts": "UpperFocus(Q) = A"
},
{
    "assertion": "LeftVertex ( CONICSECTION: k ) equals POINT: A",
    "id": 3594,
    "declarations": "k: CONICSECTION; A: POINT",
    "facts": "LeftVertex(k) = A"
},
{
    "assertion": "UpperFocus ( CONICSECTION: b ) equals UpperVertex ( CONICSECTION: D )",
    "id": 3595,
    "declarations": "b: CONICSECTION; D: CONICSECTION",
    "facts": "UpperFocus(b) = UpperVertex(D)"
},
{
    "assertion": "TangentPoint ( LINE: m, CIRCLE: y ) equals Center ( CONICSECTION: L )",
    "id": 3596,
    "declarations": "m: LINE; y: CIRCLE; L: CONICSECTION",
    "facts": "TangentPoint(m, y) = Center(L)"
},
{
    "assertion": "YCoordinate ( LowerVertex ( CONICSECTION: H ) ) equals DotProduct ( VECTOR: k, VECTOR: e )",
    "id": 3597,
    "declarations": "H: CONICSECTION; k: VECTOR; e: VECTOR",
    "facts": "YCoordinate(LowerVertex(H)) = DotProduct(k, e)"
},
{
    "assertion": "IsPerpendicular ( LINE: q, LineOf ( POINT: D, RightFocus ( CONICSECTION: U ) ) ) equals BOOL: False",
    "id": 3598,
    "declarations": "q: LINE; D: POINT; U: CONICSECTION; False: BOOL",
    "facts": "IsPerpendicular(q, LineOf(D, RightFocus(U))) = False"
},
{
    "assertion": "Expression ( CURVE: d ) equals EXPRESSION: y*space=*space3x*space+*space2",
    "id": 3599,
    "declarations": "d: CURVE; y*space=*space3x*space+*space2: EXPRESSION",
    "facts": "Expression(d) = y*space=*space3x*space+*space2"
},
{
    "assertion": "Area ( CONICSECTION: a ) equals NUMBER: 8",
    "id": 3600,
    "declarations": "a: CONICSECTION; 8: NUMBER",
    "facts": "Area(a) = 8"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: V ) equals Slope ( OverlappingLine ( LINESEGMENT: w ) )",
    "id": 3601,
    "declarations": "V: CONICSECTION; w: LINESEGMENT",
    "facts": "HalfFocalLength(V) = Slope(OverlappingLine(w))"
},
{
    "assertion": "Locus ( POINT: f ) equals CURVE: i",
    "id": 3602,
    "declarations": "f: POINT; i: CURVE",
    "facts": "Locus(f) = i"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: M ) equals LINE: a",
    "id": 3603,
    "declarations": "M: CONICSECTION; a: LINE",
    "facts": "RightDirectrix(M) = a"
},
{
    "assertion": "Negation ( IsInscribedCircle ( CIRCLE: K, TRIANGLE: c ) equals BOOL: True ) equals BOOL: True",
    "id": 3604,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MajorAxis ( ELLIPSE: t ) equals LINESEGMENT: F",
    "id": 3605,
    "declarations": "t: ELLIPSE; F: LINESEGMENT",
    "facts": "MajorAxis(t) = F"
},
{
    "assertion": "FootPoint ( LINE: F, LINE: C ) equals LowerVertex ( CONICSECTION: q )",
    "id": 3606,
    "declarations": "F: LINE; C: LINE; q: CONICSECTION",
    "facts": "FootPoint(F, C) = LowerVertex(q)"
},
{
    "assertion": "IsIntersect ( CURVE: w, CURVE: s ) equals BOOL: True",
    "id": 3607,
    "declarations": "w: CURVE; s: CURVE; True: BOOL",
    "facts": "IsIntersect(w, s) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: x ) equals Incenter ( TRIANGLE: e )",
    "id": 3608,
    "declarations": "x: TRIANGLE; e: TRIANGLE",
    "facts": "Circumcenter(x) = Incenter(e)"
},
{
    "assertion": "sqrt ( NumIntersection ( CURVE: x, CURVE: G ) ) equals Length ( LINESEGMENT: O )",
    "id": 3609,
    "declarations": "x: CURVE; G: CURVE; O: LINESEGMENT",
    "facts": "sqrt(NumIntersection(x, G)) = Length(O)"
},
{
    "assertion": "NumIntersection ( CURVE: I, RightPart ( HYPERBOLA: g ) ) equals Inclination ( RightDirectrix ( CONICSECTION: I ) )",
    "id": 3610,
    "declarations": "I: CURVE; g: HYPERBOLA; I: CONICSECTION",
    "facts": "NumIntersection(I, RightPart(g)) = Inclination(RightDirectrix(I))"
},
{
    "assertion": "LocusEquation ( POINT: K ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 3611,
    "declarations": "K: POINT; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "LocusEquation(K) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "Inclination ( LINE: J ) equals Radius ( CIRCLE: Q )",
    "id": 3612,
    "declarations": "J: LINE; Q: CIRCLE",
    "facts": "Inclination(J) = Radius(Q)"
},
{
    "assertion": "RightFocus ( CONICSECTION: F ) equals POINT: E",
    "id": 3613,
    "declarations": "F: CONICSECTION; E: POINT",
    "facts": "RightFocus(F) = E"
},
{
    "assertion": "Coordinate ( LowerVertex ( CONICSECTION: U ) ) equals ( Length ( LINESEGMENT: e ), Abs ( LINESEGMENT: H ) )",
    "id": 3614,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RealAxis ( ELLIPSE: O ) equals LINESEGMENT: p",
    "id": 3615,
    "declarations": "O: ELLIPSE; p: LINESEGMENT",
    "facts": "RealAxis(O) = p"
},
{
    "assertion": "Eccentricity ( CONICSECTION: h ) equals NUMBER: -83",
    "id": 3616,
    "declarations": "h: CONICSECTION; -83: NUMBER",
    "facts": "Eccentricity(h) = -83"
},
{
    "assertion": "XCoordinate ( UpperVertex ( CONICSECTION: e ) ) equals XCoordinate ( POINT: i )",
    "id": 3617,
    "declarations": "e: CONICSECTION; i: POINT",
    "facts": "XCoordinate(UpperVertex(e)) = XCoordinate(i)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: m ) equals LINESEGMENT: y",
    "id": 3618,
    "declarations": "m: ELLIPSE; y: LINESEGMENT",
    "facts": "MajorAxis(m) = y"
},
{
    "assertion": "sqrt ( NUMBER: -27 ) equals NUMBER: 26",
    "id": 3619,
    "declarations": "-27: NUMBER; 26: NUMBER",
    "facts": "sqrt(-27) = 26"
},
{
    "assertion": "FocalLength ( CONICSECTION: p ) equals Inclination ( TangentOnPoint ( LowerFocus ( CONICSECTION: Y ), CURVE: m ) )",
    "id": 3620,
    "declarations": "p: CONICSECTION; Y: CONICSECTION; m: CURVE",
    "facts": "FocalLength(p) = Inclination(TangentOnPoint(LowerFocus(Y), m))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: y ) equals MidPoint ( LINESEGMENT: N )",
    "id": 3621,
    "declarations": "y: CONICSECTION; N: LINESEGMENT",
    "facts": "UpperFocus(y) = MidPoint(N)"
},
{
    "assertion": "LocusEquation ( RightFocus ( CONICSECTION: J ) ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 3622,
    "declarations": "J: CONICSECTION; y*space=*spacesin(x): EXPRESSION",
    "facts": "LocusEquation(RightFocus(J)) = y*space=*spacesin(x)"
},
{
    "assertion": "Max ( Abs ( LINESEGMENT: K ) ) equals NUMBER: -5",
    "id": 3623,
    "declarations": "K: LINESEGMENT; -5: NUMBER",
    "facts": "Max(Abs(K)) = -5"
},
{
    "assertion": "LowerVertex ( CONICSECTION: L ) equals Circumcenter ( TRIANGLE: C )",
    "id": 3624,
    "declarations": "L: CONICSECTION; C: TRIANGLE",
    "facts": "LowerVertex(L) = Circumcenter(C)"
},
{
    "assertion": "Max ( Area ( CONICSECTION: G ) ) equals Slope ( LINE: q )",
    "id": 3625,
    "declarations": "G: CONICSECTION; q: LINE",
    "facts": "Max(Area(G)) = Slope(q)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: s, CONICSECTION: P ) equals BOOL: False",
    "id": 3626,
    "declarations": "s: LINESEGMENT; P: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(s, P) = False"
},
{
    "assertion": "Min ( Length ( LINESEGMENT: g ) ) equals NUMBER: 54",
    "id": 3627,
    "declarations": "g: LINESEGMENT; 54: NUMBER",
    "facts": "Min(Length(g)) = 54"
},
{
    "assertion": "Center ( CONICSECTION: I ) equals RightFocus ( CONICSECTION: a )",
    "id": 3628,
    "declarations": "I: CONICSECTION; a: CONICSECTION",
    "facts": "Center(I) = RightFocus(a)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: M ) equals MinorAxis ( ELLIPSE: O )",
    "id": 3629,
    "declarations": "M: ELLIPSE; O: ELLIPSE",
    "facts": "ImaginaryAxis(M) = MinorAxis(O)"
},
{
    "assertion": "And ( Directrix ( CONICSECTION: y ) equals LeftDirectrix ( CONICSECTION: p ), IsChordOf ( LINESEGMENT: G, CONICSECTION: M ) equals BOOL: True ) equals BOOL: False",
    "id": 3630,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "InterReciprocal ( NUMBER: -43 ) equals NUMBER: 85",
    "id": 3631,
    "declarations": "-43: NUMBER; 85: NUMBER",
    "facts": "InterReciprocal(-43) = 85"
},
{
    "assertion": "sqrt ( Min ( FocalLength ( CONICSECTION: l ) ) ) equals NUMBER: 47",
    "id": 3632,
    "declarations": "l: CONICSECTION; 47: NUMBER",
    "facts": "sqrt(Min(FocalLength(l))) = 47"
},
{
    "assertion": "UpperFocus ( CONICSECTION: z ) equals LowerVertex ( CONICSECTION: u )",
    "id": 3633,
    "declarations": "z: CONICSECTION; u: CONICSECTION",
    "facts": "UpperFocus(z) = LowerVertex(u)"
},
{
    "assertion": "Between ( POINT: n, POINT: p, POINT: M ) equals BOOL: False",
    "id": 3634,
    "declarations": "n: POINT; p: POINT; M: POINT; False: BOOL",
    "facts": "Between(n, p, M) = False"
},
{
    "assertion": "XCoordinate ( POINT: b ) equals Area ( CONICSECTION: E )",
    "id": 3635,
    "declarations": "b: POINT; E: CONICSECTION",
    "facts": "XCoordinate(b) = Area(E)"
},
{
    "assertion": "Locus ( POINT: J ) equals CURVE: a",
    "id": 3636,
    "declarations": "J: POINT; a: CURVE",
    "facts": "Locus(J) = a"
},
{
    "assertion": "lg ( NUMBER: -63 ) equals Inclination ( OverlappingLine ( RealAxis ( ELLIPSE: p ) ) )",
    "id": 3637,
    "declarations": "-63: NUMBER; p: ELLIPSE",
    "facts": "lg(-63) = Inclination(OverlappingLine(RealAxis(p)))"
},
{
    "assertion": "Focus ( CONICSECTION: P ) equals Incenter ( TRIANGLE: P )",
    "id": 3638,
    "declarations": "P: CONICSECTION; P: TRIANGLE",
    "facts": "Focus(P) = Incenter(P)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: A ) equals POINT: r",
    "id": 3639,
    "declarations": "A: CONICSECTION; r: POINT",
    "facts": "LeftVertex(A) = r"
},
{
    "assertion": "Distance ( LowerVertex ( CONICSECTION: j ), POINT: W ) equals Eccentricity ( CONICSECTION: t )",
    "id": 3640,
    "declarations": "j: CONICSECTION; W: POINT; t: CONICSECTION",
    "facts": "Distance(LowerVertex(j), W) = Eccentricity(t)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: x ) equals NUMBER: -63",
    "id": 3641,
    "declarations": "x: CONICSECTION; -63: NUMBER",
    "facts": "Eccentricity(x) = -63"
},
{
    "assertion": "MinorAxis ( ELLIPSE: A ) equals MinorAxis ( ELLIPSE: o )",
    "id": 3642,
    "declarations": "A: ELLIPSE; o: ELLIPSE",
    "facts": "MinorAxis(A) = MinorAxis(o)"
},
{
    "assertion": "Max ( DotProduct ( VECTOR: v, VECTOR: K ) ) equals Radius ( CIRCLE: d )",
    "id": 3643,
    "declarations": "v: VECTOR; K: VECTOR; d: CIRCLE",
    "facts": "Max(DotProduct(v, K)) = Radius(d)"
},
{
    "assertion": "Quadrant ( UpperVertex ( CONICSECTION: H ) ) equals Diameter ( CIRCLE: v )",
    "id": 3644,
    "declarations": "H: CONICSECTION; v: CIRCLE",
    "facts": "Quadrant(UpperVertex(H)) = Diameter(v)"
},
{
    "assertion": "RightVertex ( CONICSECTION: g ) equals LeftFocus ( CONICSECTION: W )",
    "id": 3645,
    "declarations": "g: CONICSECTION; W: CONICSECTION",
    "facts": "RightVertex(g) = LeftFocus(W)"
},
{
    "assertion": "TangentPoint ( LINE: j, CIRCLE: Q ) equals LowerFocus ( CONICSECTION: i )",
    "id": 3646,
    "declarations": "j: LINE; Q: CIRCLE; i: CONICSECTION",
    "facts": "TangentPoint(j, Q) = LowerFocus(i)"
},
{
    "assertion": "Center ( CONICSECTION: G ) equals POINT: A",
    "id": 3647,
    "declarations": "G: CONICSECTION; A: POINT",
    "facts": "Center(G) = A"
},
{
    "assertion": "VectorOf ( UpperFocus ( CONICSECTION: Z ), POINT: M ) equals VECTOR: j",
    "id": 3648,
    "declarations": "Z: CONICSECTION; M: POINT; j: VECTOR",
    "facts": "VectorOf(UpperFocus(Z), M) = j"
},
{
    "assertion": "Max ( NUMBER: -87 ) equals Area ( CONICSECTION: g )",
    "id": 3649,
    "declarations": "-87: NUMBER; g: CONICSECTION",
    "facts": "Max(-87) = Area(g)"
},
{
    "assertion": "Vertex ( CONICSECTION: m ) equals POINT: H",
    "id": 3650,
    "declarations": "m: CONICSECTION; H: POINT",
    "facts": "Vertex(m) = H"
},
{
    "assertion": "CircumCircle ( TRIANGLE: F ) equals CircumCircle ( TRIANGLE: g )",
    "id": 3651,
    "declarations": "F: TRIANGLE; g: TRIANGLE",
    "facts": "CircumCircle(F) = CircumCircle(g)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: d ) equals LowerVertex ( CONICSECTION: s )",
    "id": 3652,
    "declarations": "d: CONICSECTION; s: CONICSECTION",
    "facts": "LowerVertex(d) = LowerVertex(s)"
},
{
    "assertion": "IsIntersect ( CURVE: w, RightPart ( HYPERBOLA: z ) ) equals BOOL: False",
    "id": 3653,
    "declarations": "w: CURVE; z: HYPERBOLA; False: BOOL",
    "facts": "IsIntersect(w, RightPart(z)) = False"
},
{
    "assertion": "sqrt ( Diameter ( CIRCLE: r ) ) equals NUMBER: 86",
    "id": 3654,
    "declarations": "r: CIRCLE; 86: NUMBER",
    "facts": "sqrt(Diameter(r)) = 86"
},
{
    "assertion": "Directrix ( CONICSECTION: r ) equals LINE: m",
    "id": 3655,
    "declarations": "r: CONICSECTION; m: LINE",
    "facts": "Directrix(r) = m"
},
{
    "assertion": "Focus ( CONICSECTION: z ) equals POINT: Y",
    "id": 3656,
    "declarations": "z: CONICSECTION; Y: POINT",
    "facts": "Focus(z) = Y"
},
{
    "assertion": "Coordinate ( LeftFocus ( CONICSECTION: a ) ) equals ( XCoordinate ( Incenter ( TRIANGLE: n ) ), NUMBER: -74 )",
    "id": 3657,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Max ( XCoordinate ( POINT: o ) ) equals Min ( Eccentricity ( CONICSECTION: y ) )",
    "id": 3658,
    "declarations": "o: POINT; y: CONICSECTION",
    "facts": "Max(XCoordinate(o)) = Min(Eccentricity(y))"
},
{
    "assertion": "RightPart ( HYPERBOLA: E ) equals CURVE: q",
    "id": 3659,
    "declarations": "E: HYPERBOLA; q: CURVE",
    "facts": "RightPart(E) = q"
},
{
    "assertion": "TangentPoint ( LINE: Z, CIRCLE: u ) equals RightFocus ( CONICSECTION: P )",
    "id": 3660,
    "declarations": "Z: LINE; u: CIRCLE; P: CONICSECTION",
    "facts": "TangentPoint(Z, u) = RightFocus(P)"
},
{
    "assertion": "Perimeter ( CONICSECTION: j ) equals NUMBER: -52",
    "id": 3661,
    "declarations": "j: CONICSECTION; -52: NUMBER",
    "facts": "Perimeter(j) = -52"
},
{
    "assertion": "LineOf ( UpperFocus ( CONICSECTION: U ), UpperVertex ( CONICSECTION: w ) ) equals LINE: o",
    "id": 3662,
    "declarations": "U: CONICSECTION; w: CONICSECTION; o: LINE",
    "facts": "LineOf(UpperFocus(U), UpperVertex(w)) = o"
},
{
    "assertion": "MajorAxis ( ELLIPSE: t ) equals LINESEGMENT: R",
    "id": 3663,
    "declarations": "t: ELLIPSE; R: LINESEGMENT",
    "facts": "MajorAxis(t) = R"
},
{
    "assertion": "Diameter ( CIRCLE: S ) equals Area ( CONICSECTION: B )",
    "id": 3664,
    "declarations": "S: CIRCLE; B: CONICSECTION",
    "facts": "Diameter(S) = Area(B)"
},
{
    "assertion": "Intersection ( CURVE: M, CURVE: V ) equals RightVertex ( CONICSECTION: x )",
    "id": 3665,
    "declarations": "M: CURVE; V: CURVE; x: CONICSECTION",
    "facts": "Intersection(M, V) = RightVertex(x)"
},
{
    "assertion": "Asymptote ( HYPERBOLA: C ) equals LINE: M",
    "id": 3666,
    "declarations": "C: HYPERBOLA; M: LINE",
    "facts": "Asymptote(C) = M"
},
{
    "assertion": "LineOf ( POINT: e, RightFocus ( CONICSECTION: B ) ) equals LeftDirectrix ( CONICSECTION: C )",
    "id": 3667,
    "declarations": "e: POINT; B: CONICSECTION; C: CONICSECTION",
    "facts": "LineOf(e, RightFocus(B)) = LeftDirectrix(C)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: A ) equals LINE: Z",
    "id": 3668,
    "declarations": "A: CONICSECTION; Z: LINE",
    "facts": "LeftDirectrix(A) = Z"
},
{
    "assertion": "Locus ( RightFocus ( CONICSECTION: b ) ) equals CURVE: Z",
    "id": 3669,
    "declarations": "b: CONICSECTION; Z: CURVE",
    "facts": "Locus(RightFocus(b)) = Z"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: l ) equals LINE: N",
    "id": 3670,
    "declarations": "l: LINESEGMENT; N: LINE",
    "facts": "PerpendicularBisector(l) = N"
},
{
    "assertion": "RightVertex ( CONICSECTION: p ) equals POINT: q",
    "id": 3671,
    "declarations": "p: CONICSECTION; q: POINT",
    "facts": "RightVertex(p) = q"
},
{
    "assertion": "YCoordinate ( POINT: r ) equals NUMBER: -21",
    "id": 3672,
    "declarations": "r: POINT; -21: NUMBER",
    "facts": "YCoordinate(r) = -21"
},
{
    "assertion": "Quadrant ( RightFocus ( CONICSECTION: r ) ) equals Area ( CONICSECTION: t )",
    "id": 3673,
    "declarations": "r: CONICSECTION; t: CONICSECTION",
    "facts": "Quadrant(RightFocus(r)) = Area(t)"
},
{
    "assertion": "Vertex ( CONICSECTION: W ) equals POINT: g",
    "id": 3674,
    "declarations": "W: CONICSECTION; g: POINT",
    "facts": "Vertex(W) = g"
},
{
    "assertion": "OverlappingLine ( ImaginaryAxis ( ELLIPSE: i ) ) equals LINE: u",
    "id": 3675,
    "declarations": "i: ELLIPSE; u: LINE",
    "facts": "OverlappingLine(ImaginaryAxis(i)) = u"
},
{
    "assertion": "LeftPart ( HYPERBOLA: r ) equals CURVE: p",
    "id": 3676,
    "declarations": "r: HYPERBOLA; p: CURVE",
    "facts": "LeftPart(r) = p"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: P ) equals AXIS: yAxis",
    "id": 3677,
    "declarations": "P: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(P) = yAxis"
},
{
    "assertion": "Length ( LINESEGMENT: a ) equals Area ( CONICSECTION: R )",
    "id": 3678,
    "declarations": "a: LINESEGMENT; R: CONICSECTION",
    "facts": "Length(a) = Area(R)"
},
{
    "assertion": "IsPerpendicular ( LINE: Z, LINE: B ) equals BOOL: False",
    "id": 3679,
    "declarations": "Z: LINE; B: LINE; False: BOOL",
    "facts": "IsPerpendicular(Z, B) = False"
},
{
    "assertion": "XCoordinate ( POINT: y ) equals Perimeter ( CONICSECTION: S )",
    "id": 3680,
    "declarations": "y: POINT; S: CONICSECTION",
    "facts": "XCoordinate(y) = Perimeter(S)"
},
{
    "assertion": "Quadrant ( LowerVertex ( CONICSECTION: r ) ) equals Area ( CONICSECTION: H )",
    "id": 3681,
    "declarations": "r: CONICSECTION; H: CONICSECTION",
    "facts": "Quadrant(LowerVertex(r)) = Area(H)"
},
{
    "assertion": "LineOf ( UpperFocus ( CONICSECTION: M ), RightFocus ( CONICSECTION: H ) ) equals LeftDirectrix ( CONICSECTION: z )",
    "id": 3682,
    "declarations": "M: CONICSECTION; H: CONICSECTION; z: CONICSECTION",
    "facts": "LineOf(UpperFocus(M), RightFocus(H)) = LeftDirectrix(z)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: G, TRIANGLE: o ) equals BOOL: False",
    "id": 3683,
    "declarations": "G: CIRCLE; o: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(G, o) = False"
},
{
    "assertion": "Diameter ( CIRCLE: z ) equals InterReciprocal ( NUMBER: -46 )",
    "id": 3684,
    "declarations": "z: CIRCLE; -46: NUMBER",
    "facts": "Diameter(z) = InterReciprocal(-46)"
},
{
    "assertion": "Endpoint ( InterceptChord ( RightDirectrix ( CONICSECTION: f ), CONICSECTION: V ) ) equals Incenter ( TRIANGLE: K )",
    "id": 3685,
    "declarations": "f: CONICSECTION; V: CONICSECTION; K: TRIANGLE",
    "facts": "Endpoint(InterceptChord(RightDirectrix(f), V)) = Incenter(K)"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: z ) equals LeftDirectrix ( CONICSECTION: d )",
    "id": 3686,
    "declarations": "z: LINESEGMENT; d: CONICSECTION",
    "facts": "PerpendicularBisector(z) = LeftDirectrix(d)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: Y ) equals LINE: I",
    "id": 3687,
    "declarations": "Y: CONICSECTION; I: LINE",
    "facts": "RightDirectrix(Y) = I"
},
{
    "assertion": "Projection ( Circumcenter ( TRIANGLE: o ), PerpendicularBisector ( MajorAxis ( ELLIPSE: p ) ) ) equals POINT: U",
    "id": 3688,
    "declarations": "o: TRIANGLE; p: ELLIPSE; U: POINT",
    "facts": "Projection(Circumcenter(o), PerpendicularBisector(MajorAxis(p))) = U"
},
{
    "assertion": "InterceptChord ( LINE: G, CONICSECTION: h ) equals LINESEGMENT: Q",
    "id": 3689,
    "declarations": "G: LINE; h: CONICSECTION; Q: LINESEGMENT",
    "facts": "InterceptChord(G, h) = Q"
},
{
    "assertion": "UpperFocus ( CONICSECTION: X ) equals LowerFocus ( CONICSECTION: Q )",
    "id": 3690,
    "declarations": "X: CONICSECTION; Q: CONICSECTION",
    "facts": "UpperFocus(X) = LowerFocus(Q)"
},
{
    "assertion": "Abs ( LINESEGMENT: W ) equals HalfFocalLength ( CONICSECTION: Y )",
    "id": 3691,
    "declarations": "W: LINESEGMENT; Y: CONICSECTION",
    "facts": "Abs(W) = HalfFocalLength(Y)"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: C ) ) equals sqrt ( FocalLength ( CONICSECTION: O ) )",
    "id": 3692,
    "declarations": "C: TRIANGLE; O: CONICSECTION",
    "facts": "Radius(CircumCircle(C)) = sqrt(FocalLength(O))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: r ) equals POINT: t",
    "id": 3693,
    "declarations": "r: TRIANGLE; t: POINT",
    "facts": "Circumcenter(r) = t"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: j ) equals RightDirectrix ( CONICSECTION: C )",
    "id": 3694,
    "declarations": "j: CONICSECTION; C: CONICSECTION",
    "facts": "LeftDirectrix(j) = RightDirectrix(C)"
},
{
    "assertion": "FocalLength ( CONICSECTION: R ) equals NUMBER: -20",
    "id": 3695,
    "declarations": "R: CONICSECTION; -20: NUMBER",
    "facts": "FocalLength(R) = -20"
},
{
    "assertion": "RightPart ( HYPERBOLA: g ) equals CURVE: y",
    "id": 3696,
    "declarations": "g: HYPERBOLA; y: CURVE",
    "facts": "RightPart(g) = y"
},
{
    "assertion": "VectorOf ( POINT: F, POINT: b ) equals VECTOR: x",
    "id": 3697,
    "declarations": "F: POINT; b: POINT; x: VECTOR",
    "facts": "VectorOf(F, b) = x"
},
{
    "assertion": "NumIntersection ( Locus ( POINT: p ), CURVE: m ) equals Inclination ( LINE: Q )",
    "id": 3698,
    "declarations": "p: POINT; m: CURVE; Q: LINE",
    "facts": "NumIntersection(Locus(p), m) = Inclination(Q)"
},
{
    "assertion": "LineOf ( RightVertex ( CONICSECTION: I ), POINT: K ) equals LINE: V",
    "id": 3699,
    "declarations": "I: CONICSECTION; K: POINT; V: LINE",
    "facts": "LineOf(RightVertex(I), K) = V"
},
{
    "assertion": "Center ( CONICSECTION: f ) equals FootPoint ( TangentOfPoint ( LowerFocus ( CONICSECTION: n ), CURVE: R ), LeftDirectrix ( CONICSECTION: Y ) )",
    "id": 3700,
    "declarations": "f: CONICSECTION; n: CONICSECTION; R: CURVE; Y: CONICSECTION",
    "facts": "Center(f) = FootPoint(TangentOfPoint(LowerFocus(n), R), LeftDirectrix(Y))"
},
{
    "assertion": "And ( LowerVertex ( CONICSECTION: S ) equals LowerVertex ( CONICSECTION: C ), Intersection ( CURVE: S, CURVE: L ) equals POINT: V ) equals BOOL: False",
    "id": 3701,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: h ) equals PerpendicularBisector ( LINESEGMENT: T )",
    "id": 3702,
    "declarations": "h: CONICSECTION; T: LINESEGMENT",
    "facts": "LeftDirectrix(h) = PerpendicularBisector(T)"
},
{
    "assertion": "IsParallel ( OverlappingLine ( LINESEGMENT: C ), OverlappingLine ( RealAxis ( ELLIPSE: e ) ) ) equals BOOL: False",
    "id": 3703,
    "declarations": "C: LINESEGMENT; e: ELLIPSE; False: BOOL",
    "facts": "IsParallel(OverlappingLine(C), OverlappingLine(RealAxis(e))) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: T ) equals POINT: g",
    "id": 3704,
    "declarations": "T: TRIANGLE; g: POINT",
    "facts": "Incenter(T) = g"
},
{
    "assertion": "LowerVertex ( CONICSECTION: b ) equals LeftFocus ( CONICSECTION: o )",
    "id": 3705,
    "declarations": "b: CONICSECTION; o: CONICSECTION",
    "facts": "LowerVertex(b) = LeftFocus(o)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: n ) equals POINT: s",
    "id": 3706,
    "declarations": "n: CONICSECTION; s: POINT",
    "facts": "UpperFocus(n) = s"
},
{
    "assertion": "Eccentricity ( CONICSECTION: b ) equals Quadrant ( POINT: P )",
    "id": 3707,
    "declarations": "b: CONICSECTION; P: POINT",
    "facts": "Eccentricity(b) = Quadrant(P)"
},
{
    "assertion": "Locus ( RightVertex ( CONICSECTION: p ) ) equals Locus ( RightVertex ( CONICSECTION: w ) )",
    "id": 3708,
    "declarations": "p: CONICSECTION; w: CONICSECTION",
    "facts": "Locus(RightVertex(p)) = Locus(RightVertex(w))"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: w ) equals LINE: G",
    "id": 3709,
    "declarations": "w: LINESEGMENT; G: LINE",
    "facts": "PerpendicularBisector(w) = G"
},
{
    "assertion": "Inclination ( LINE: i ) equals Length ( LINESEGMENT: g )",
    "id": 3710,
    "declarations": "i: LINE; g: LINESEGMENT",
    "facts": "Inclination(i) = Length(g)"
},
{
    "assertion": "RightPart ( HYPERBOLA: q ) equals CURVE: t",
    "id": 3711,
    "declarations": "q: HYPERBOLA; t: CURVE",
    "facts": "RightPart(q) = t"
},
{
    "assertion": "LineOf ( Orthocenter ( TRIANGLE: A ), POINT: r ) equals LINE: s",
    "id": 3712,
    "declarations": "A: TRIANGLE; r: POINT; s: LINE",
    "facts": "LineOf(Orthocenter(A), r) = s"
},
{
    "assertion": "InterReciprocal ( NUMBER: 94 ) equals NUMBER: -92",
    "id": 3713,
    "declarations": "94: NUMBER; -92: NUMBER",
    "facts": "InterReciprocal(94) = -92"
},
{
    "assertion": "TangentOfPoint ( LowerVertex ( CONICSECTION: W ), CURVE: u ) equals PerpendicularBisector ( LINESEGMENT: K )",
    "id": 3714,
    "declarations": "W: CONICSECTION; u: CURVE; K: LINESEGMENT",
    "facts": "TangentOfPoint(LowerVertex(W), u) = PerpendicularBisector(K)"
},
{
    "assertion": "Length ( LINESEGMENT: S ) equals Diameter ( CIRCLE: l )",
    "id": 3715,
    "declarations": "S: LINESEGMENT; l: CIRCLE",
    "facts": "Length(S) = Diameter(l)"
},
{
    "assertion": "OverlappingLine ( RealAxis ( ELLIPSE: w ) ) equals LINE: t",
    "id": 3716,
    "declarations": "w: ELLIPSE; t: LINE",
    "facts": "OverlappingLine(RealAxis(w)) = t"
},
{
    "assertion": "Quadrant ( Circumcenter ( TRIANGLE: a ) ) equals NUMBER: -44",
    "id": 3717,
    "declarations": "a: TRIANGLE; -44: NUMBER",
    "facts": "Quadrant(Circumcenter(a)) = -44"
},
{
    "assertion": "LeftPart ( HYPERBOLA: l ) equals CURVE: t",
    "id": 3718,
    "declarations": "l: HYPERBOLA; t: CURVE",
    "facts": "LeftPart(l) = t"
},
{
    "assertion": "Negation ( Locus ( POINT: z ) equals CURVE: b ) equals BOOL: True",
    "id": 3719,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LowerVertex ( CONICSECTION: A ) equals MidPoint ( InterceptChord ( LINE: p, CONICSECTION: x ) )",
    "id": 3720,
    "declarations": "A: CONICSECTION; p: LINE; x: CONICSECTION",
    "facts": "LowerVertex(A) = MidPoint(InterceptChord(p, x))"
},
{
    "assertion": "lg ( Min ( NUMBER: 61 ) ) equals InterReciprocal ( Distance ( FootPoint ( LINE: q, LINE: X ), RightFocus ( CONICSECTION: P ) ) )",
    "id": 3721,
    "declarations": "61: NUMBER; q: LINE; X: LINE; P: CONICSECTION",
    "facts": "lg(Min(61)) = InterReciprocal(Distance(FootPoint(q, X), RightFocus(P)))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: V, TRIANGLE: Y ) equals BOOL: False",
    "id": 3722,
    "declarations": "V: CIRCLE; Y: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(V, Y) = False"
},
{
    "assertion": "MajorAxis ( ELLIPSE: J ) equals LINESEGMENT: y",
    "id": 3723,
    "declarations": "J: ELLIPSE; y: LINESEGMENT",
    "facts": "MajorAxis(J) = y"
},
{
    "assertion": "Area ( CONICSECTION: Y ) equals sqrt ( Radius ( CIRCLE: V ) )",
    "id": 3724,
    "declarations": "Y: CONICSECTION; V: CIRCLE",
    "facts": "Area(Y) = sqrt(Radius(V))"
},
{
    "assertion": "Incenter ( TRIANGLE: b ) equals UpperFocus ( CONICSECTION: a )",
    "id": 3725,
    "declarations": "b: TRIANGLE; a: CONICSECTION",
    "facts": "Incenter(b) = UpperFocus(a)"
},
{
    "assertion": "InterReciprocal ( Quadrant ( POINT: v ) ) equals HalfFocalLength ( CONICSECTION: c )",
    "id": 3726,
    "declarations": "v: POINT; c: CONICSECTION",
    "facts": "InterReciprocal(Quadrant(v)) = HalfFocalLength(c)"
},
{
    "assertion": "Directrix ( CONICSECTION: N ) equals LINE: k",
    "id": 3727,
    "declarations": "N: CONICSECTION; k: LINE",
    "facts": "Directrix(N) = k"
},
{
    "assertion": "Quadrant ( Incenter ( TRIANGLE: Z ) ) equals HalfFocalLength ( CONICSECTION: h )",
    "id": 3728,
    "declarations": "Z: TRIANGLE; h: CONICSECTION",
    "facts": "Quadrant(Incenter(Z)) = HalfFocalLength(h)"
},
{
    "assertion": "TangentPoint ( LINE: U, CIRCLE: j ) equals POINT: L",
    "id": 3729,
    "declarations": "U: LINE; j: CIRCLE; L: POINT",
    "facts": "TangentPoint(U, j) = L"
},
{
    "assertion": "Inclination ( OverlappingLine ( MajorAxis ( ELLIPSE: o ) ) ) equals FocalLength ( CONICSECTION: W )",
    "id": 3730,
    "declarations": "o: ELLIPSE; W: CONICSECTION",
    "facts": "Inclination(OverlappingLine(MajorAxis(o))) = FocalLength(W)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: S ) equals sqrt ( FocalLength ( CONICSECTION: x ) )",
    "id": 3731,
    "declarations": "S: CONICSECTION; x: CONICSECTION",
    "facts": "Eccentricity(S) = sqrt(FocalLength(x))"
},
{
    "assertion": "LeftFocus ( CONICSECTION: l ) equals Circumcenter ( TRIANGLE: r )",
    "id": 3732,
    "declarations": "l: CONICSECTION; r: TRIANGLE",
    "facts": "LeftFocus(l) = Circumcenter(r)"
},
{
    "assertion": "Min ( Perimeter ( CONICSECTION: O ) ) equals Length ( MinorAxis ( ELLIPSE: e ) )",
    "id": 3733,
    "declarations": "O: CONICSECTION; e: ELLIPSE",
    "facts": "Min(Perimeter(O)) = Length(MinorAxis(e))"
},
{
    "assertion": "InterReciprocal ( HalfFocalLength ( CONICSECTION: i ) ) equals NUMBER: -64",
    "id": 3734,
    "declarations": "i: CONICSECTION; -64: NUMBER",
    "facts": "InterReciprocal(HalfFocalLength(i)) = -64"
},
{
    "assertion": "Directrix ( CONICSECTION: G ) equals LineOf ( POINT: i, POINT: Y )",
    "id": 3735,
    "declarations": "G: CONICSECTION; i: POINT; Y: POINT",
    "facts": "Directrix(G) = LineOf(i, Y)"
},
{
    "assertion": "Slope ( LINE: c ) equals NUMBER: -47",
    "id": 3736,
    "declarations": "c: LINE; -47: NUMBER",
    "facts": "Slope(c) = -47"
},
{
    "assertion": "Negation ( IsChordOf ( MajorAxis ( ELLIPSE: D ), CONICSECTION: K ) equals BOOL: True ) equals BOOL: False",
    "id": 3737,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftFocus ( CONICSECTION: g ) equals POINT: g",
    "id": 3738,
    "declarations": "g: CONICSECTION; g: POINT",
    "facts": "LeftFocus(g) = g"
},
{
    "assertion": "LeftPart ( HYPERBOLA: E ) equals Locus ( LeftFocus ( CONICSECTION: G ) )",
    "id": 3739,
    "declarations": "E: HYPERBOLA; G: CONICSECTION",
    "facts": "LeftPart(E) = Locus(LeftFocus(G))"
},
{
    "assertion": "IsParallel ( LINE: v, LINE: w ) equals BOOL: True",
    "id": 3740,
    "declarations": "v: LINE; w: LINE; True: BOOL",
    "facts": "IsParallel(v, w) = True"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: j, CONICSECTION: W ) equals BOOL: False",
    "id": 3741,
    "declarations": "j: LINESEGMENT; W: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(j, W) = False"
},
{
    "assertion": "InterceptChord ( LINE: u, CONICSECTION: Q ) equals LINESEGMENT: Y",
    "id": 3742,
    "declarations": "u: LINE; Q: CONICSECTION; Y: LINESEGMENT",
    "facts": "InterceptChord(u, Q) = Y"
},
{
    "assertion": "FocalLength ( CONICSECTION: R ) equals NUMBER: -57",
    "id": 3743,
    "declarations": "R: CONICSECTION; -57: NUMBER",
    "facts": "FocalLength(R) = -57"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: P, TRIANGLE: g ) equals BOOL: True",
    "id": 3744,
    "declarations": "P: CIRCLE; g: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(P, g) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: h ) equals LowerVertex ( CONICSECTION: G )",
    "id": 3745,
    "declarations": "h: TRIANGLE; G: CONICSECTION",
    "facts": "Circumcenter(h) = LowerVertex(G)"
},
{
    "assertion": "TriangleOf ( RightVertex ( CONICSECTION: K ), Projection ( POINT: O, LineOf ( POINT: I, POINT: o ) ), POINT: r ) equals TRIANGLE: N",
    "id": 3746,
    "declarations": "K: CONICSECTION; O: POINT; I: POINT; o: POINT; r: POINT; N: TRIANGLE",
    "facts": "TriangleOf(RightVertex(K), Projection(O, LineOf(I, o)), r) = N"
},
{
    "assertion": "lg ( Diameter ( CIRCLE: M ) ) equals NUMBER: 36",
    "id": 3747,
    "declarations": "M: CIRCLE; 36: NUMBER",
    "facts": "lg(Diameter(M)) = 36"
},
{
    "assertion": "MinorAxis ( ELLIPSE: A ) equals LINESEGMENT: Y",
    "id": 3748,
    "declarations": "A: ELLIPSE; Y: LINESEGMENT",
    "facts": "MinorAxis(A) = Y"
},
{
    "assertion": "Abs ( LINESEGMENT: f ) equals Length ( InterceptChord ( LINE: R, CONICSECTION: L ) )",
    "id": 3749,
    "declarations": "f: LINESEGMENT; R: LINE; L: CONICSECTION",
    "facts": "Abs(f) = Length(InterceptChord(R, L))"
},
{
    "assertion": "ApplyUnit ( Radius ( CIRCLE: e ), DEGREESTR: degree )",
    "id": 3750,
    "declarations": "e: CIRCLE; degree: DEGREESTR",
    "facts": "ApplyUnit(Radius(e), degree) = None"
},
{
    "assertion": "IsPerpendicular ( LINE: X, LINE: D ) equals BOOL: False",
    "id": 3751,
    "declarations": "X: LINE; D: LINE; False: BOOL",
    "facts": "IsPerpendicular(X, D) = False"
},
{
    "assertion": "Circumcenter ( TRIANGLE: i ) equals RightFocus ( CONICSECTION: D )",
    "id": 3752,
    "declarations": "i: TRIANGLE; D: CONICSECTION",
    "facts": "Circumcenter(i) = RightFocus(D)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: b ) equals POINT: c",
    "id": 3753,
    "declarations": "b: LINESEGMENT; c: POINT",
    "facts": "Endpoint(b) = c"
},
{
    "assertion": "LeftVertex ( CONICSECTION: V ) equals LeftVertex ( CONICSECTION: I )",
    "id": 3754,
    "declarations": "V: CONICSECTION; I: CONICSECTION",
    "facts": "LeftVertex(V) = LeftVertex(I)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Y ) equals RightFocus ( CONICSECTION: w )",
    "id": 3755,
    "declarations": "Y: CONICSECTION; w: CONICSECTION",
    "facts": "LeftFocus(Y) = RightFocus(w)"
},
{
    "assertion": "Intersection ( CURVE: c, RightPart ( HYPERBOLA: F ) ) equals LowerFocus ( CONICSECTION: G )",
    "id": 3756,
    "declarations": "c: CURVE; F: HYPERBOLA; G: CONICSECTION",
    "facts": "Intersection(c, RightPart(F)) = LowerFocus(G)"
},
{
    "assertion": "RightFocus ( CONICSECTION: m ) equals LowerVertex ( CONICSECTION: a )",
    "id": 3757,
    "declarations": "m: CONICSECTION; a: CONICSECTION",
    "facts": "RightFocus(m) = LowerVertex(a)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: w ) equals UpperVertex ( CONICSECTION: Z )",
    "id": 3758,
    "declarations": "w: LINESEGMENT; Z: CONICSECTION",
    "facts": "Endpoint(w) = UpperVertex(Z)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: Z ) equals POINT: a",
    "id": 3759,
    "declarations": "Z: CONICSECTION; a: POINT",
    "facts": "UpperFocus(Z) = a"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: G ) equals LINESEGMENT: v",
    "id": 3760,
    "declarations": "G: ELLIPSE; v: LINESEGMENT",
    "facts": "ImaginaryAxis(G) = v"
},
{
    "assertion": "PointOnCurve ( POINT: N, LeftPart ( HYPERBOLA: m ) ) equals BOOL: False",
    "id": 3761,
    "declarations": "N: POINT; m: HYPERBOLA; False: BOOL",
    "facts": "PointOnCurve(N, LeftPart(m)) = False"
},
{
    "assertion": "InterceptChord ( LINE: P, CONICSECTION: N ) equals MinorAxis ( ELLIPSE: N )",
    "id": 3762,
    "declarations": "P: LINE; N: CONICSECTION; N: ELLIPSE",
    "facts": "InterceptChord(P, N) = MinorAxis(N)"
},
{
    "assertion": "Circumcenter ( TriangleOf ( POINT: W, POINT: B, RightVertex ( CONICSECTION: u ) ) ) equals Center ( CONICSECTION: v )",
    "id": 3763,
    "declarations": "W: POINT; B: POINT; u: CONICSECTION; v: CONICSECTION",
    "facts": "Circumcenter(TriangleOf(W, B, RightVertex(u))) = Center(v)"
},
{
    "assertion": "FootPoint ( OverlappingLine ( LINESEGMENT: B ), LINE: O ) equals POINT: O",
    "id": 3764,
    "declarations": "B: LINESEGMENT; O: LINE; O: POINT",
    "facts": "FootPoint(OverlappingLine(B), O) = O"
},
{
    "assertion": "InterceptChord ( LINE: l, CONICSECTION: C ) equals MinorAxis ( ELLIPSE: H )",
    "id": 3765,
    "declarations": "l: LINE; C: CONICSECTION; H: ELLIPSE",
    "facts": "InterceptChord(l, C) = MinorAxis(H)"
},
{
    "assertion": "Endpoint ( MinorAxis ( ELLIPSE: o ) ) equals RightFocus ( CONICSECTION: p )",
    "id": 3766,
    "declarations": "o: ELLIPSE; p: CONICSECTION",
    "facts": "Endpoint(MinorAxis(o)) = RightFocus(p)"
},
{
    "assertion": "NumIntersection ( CURVE: k, CURVE: q ) equals NUMBER: 84",
    "id": 3767,
    "declarations": "k: CURVE; q: CURVE; 84: NUMBER",
    "facts": "NumIntersection(k, q) = 84"
},
{
    "assertion": "AngleOf ( LeftFocus ( CONICSECTION: d ), POINT: N, POINT: c ) equals AngleOf ( POINT: C, UpperVertex ( CONICSECTION: Y ), POINT: T )",
    "id": 3768,
    "declarations": "d: CONICSECTION; N: POINT; c: POINT; C: POINT; Y: CONICSECTION; T: POINT",
    "facts": "AngleOf(LeftFocus(d), N, c) = AngleOf(C, UpperVertex(Y), T)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: k, TRIANGLE: Q ) equals BOOL: False",
    "id": 3769,
    "declarations": "k: CIRCLE; Q: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(k, Q) = False"
},
{
    "assertion": "IsOutTangent ( CIRCLE: d, CIRCLE: z ) equals BOOL: True",
    "id": 3770,
    "declarations": "d: CIRCLE; z: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(d, z) = True"
},
{
    "assertion": "TangentOfPoint ( UpperFocus ( CONICSECTION: k ), CURVE: x ) equals OverlappingLine ( RealAxis ( ELLIPSE: X ) )",
    "id": 3771,
    "declarations": "k: CONICSECTION; x: CURVE; X: ELLIPSE",
    "facts": "TangentOfPoint(UpperFocus(k), x) = OverlappingLine(RealAxis(X))"
},
{
    "assertion": "ApplyUnit ( NUMBER: -6, DEGREESTR: degree )",
    "id": 3772,
    "declarations": "-6: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-6, degree) = None"
},
{
    "assertion": "UpperFocus ( CONICSECTION: P ) equals POINT: m",
    "id": 3773,
    "declarations": "P: CONICSECTION; m: POINT",
    "facts": "UpperFocus(P) = m"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: M ) ) equals LeftDirectrix ( CONICSECTION: A )",
    "id": 3774,
    "declarations": "M: ELLIPSE; A: CONICSECTION",
    "facts": "OverlappingLine(MinorAxis(M)) = LeftDirectrix(A)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: u ) equals AXIS: yAxis",
    "id": 3775,
    "declarations": "u: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(u) = yAxis"
},
{
    "assertion": "LeftPart ( HYPERBOLA: g ) equals CURVE: d",
    "id": 3776,
    "declarations": "g: HYPERBOLA; d: CURVE",
    "facts": "LeftPart(g) = d"
},
{
    "assertion": "MidPoint ( InterceptChord ( OverlappingLine ( LineSegmentOf ( POINT: u, LowerVertex ( CONICSECTION: O ) ) ), CONICSECTION: u ) ) equals RightVertex ( CONICSECTION: T )",
    "id": 3777,
    "declarations": "u: POINT; O: CONICSECTION; u: CONICSECTION; T: CONICSECTION",
    "facts": "MidPoint(InterceptChord(OverlappingLine(LineSegmentOf(u, LowerVertex(O))), u)) = RightVertex(T)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Q ) equals LeftVertex ( CONICSECTION: o )",
    "id": 3778,
    "declarations": "Q: TRIANGLE; o: CONICSECTION",
    "facts": "Orthocenter(Q) = LeftVertex(o)"
},
{
    "assertion": "Intercept ( LINE: H, AXIS: xAxis ) equals Perimeter ( CONICSECTION: E )",
    "id": 3779,
    "declarations": "H: LINE; xAxis: AXIS; E: CONICSECTION",
    "facts": "Intercept(H, xAxis) = Perimeter(E)"
},
{
    "assertion": "FootPoint ( LINE: d, LineOf ( POINT: C, LeftVertex ( CONICSECTION: E ) ) ) equals LowerVertex ( CONICSECTION: U )",
    "id": 3780,
    "declarations": "d: LINE; C: POINT; E: CONICSECTION; U: CONICSECTION",
    "facts": "FootPoint(d, LineOf(C, LeftVertex(E))) = LowerVertex(U)"
},
{
    "assertion": "TangentOfPoint ( Incenter ( TRIANGLE: f ), CURVE: T ) equals LINE: G",
    "id": 3781,
    "declarations": "f: TRIANGLE; T: CURVE; G: LINE",
    "facts": "TangentOfPoint(Incenter(f), T) = G"
},
{
    "assertion": "Inclination ( LeftDirectrix ( CONICSECTION: k ) ) equals NUMBER: -21",
    "id": 3782,
    "declarations": "k: CONICSECTION; -21: NUMBER",
    "facts": "Inclination(LeftDirectrix(k)) = -21"
},
{
    "assertion": "IsPerpendicular ( LINE: d, LINE: i ) equals BOOL: False",
    "id": 3783,
    "declarations": "d: LINE; i: LINE; False: BOOL",
    "facts": "IsPerpendicular(d, i) = False"
},
{
    "assertion": "TangentOfPoint ( Projection ( POINT: W, LINE: m ), CURVE: r ) equals LINE: B",
    "id": 3784,
    "declarations": "W: POINT; m: LINE; r: CURVE; B: LINE",
    "facts": "TangentOfPoint(Projection(W, m), r) = B"
},
{
    "assertion": "Between ( Incenter ( TRIANGLE: t ), Projection ( POINT: L, RightDirectrix ( CONICSECTION: L ) ), POINT: K ) equals BOOL: True",
    "id": 3785,
    "declarations": "t: TRIANGLE; L: POINT; L: CONICSECTION; K: POINT; True: BOOL",
    "facts": "Between(Incenter(t), Projection(L, RightDirectrix(L)), K) = True"
},
{
    "assertion": "Area ( CONICSECTION: T ) equals NUMBER: -73",
    "id": 3786,
    "declarations": "T: CONICSECTION; -73: NUMBER",
    "facts": "Area(T) = -73"
},
{
    "assertion": "Area ( CONICSECTION: a ) equals NUMBER: -69",
    "id": 3787,
    "declarations": "a: CONICSECTION; -69: NUMBER",
    "facts": "Area(a) = -69"
},
{
    "assertion": "CircumCircle ( TRIANGLE: X ) equals CIRCLE: c",
    "id": 3788,
    "declarations": "X: TRIANGLE; c: CIRCLE",
    "facts": "CircumCircle(X) = c"
},
{
    "assertion": "Asymptote ( HYPERBOLA: q ) equals LINE: v",
    "id": 3789,
    "declarations": "q: HYPERBOLA; v: LINE",
    "facts": "Asymptote(q) = v"
},
{
    "assertion": "RightFocus ( CONICSECTION: A ) equals LowerFocus ( CONICSECTION: I )",
    "id": 3790,
    "declarations": "A: CONICSECTION; I: CONICSECTION",
    "facts": "RightFocus(A) = LowerFocus(I)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: i ) equals UpperFocus ( CONICSECTION: V )",
    "id": 3791,
    "declarations": "i: CONICSECTION; V: CONICSECTION",
    "facts": "UpperVertex(i) = UpperFocus(V)"
},
{
    "assertion": "TangentPoint ( RightDirectrix ( CONICSECTION: z ), CIRCLE: S ) equals RightVertex ( CONICSECTION: p )",
    "id": 3792,
    "declarations": "z: CONICSECTION; S: CIRCLE; p: CONICSECTION",
    "facts": "TangentPoint(RightDirectrix(z), S) = RightVertex(p)"
},
{
    "assertion": "IsTangent ( LINE: V, CONICSECTION: s ) equals BOOL: True",
    "id": 3793,
    "declarations": "V: LINE; s: CONICSECTION; True: BOOL",
    "facts": "IsTangent(V, s) = True"
},
{
    "assertion": "IsParallel ( LINE: N, PerpendicularBisector ( LineSegmentOf ( UpperVertex ( CONICSECTION: a ), Center ( CONICSECTION: A ) ) ) ) equals BOOL: True",
    "id": 3794,
    "declarations": "N: LINE; a: CONICSECTION; A: CONICSECTION; True: BOOL",
    "facts": "IsParallel(N, PerpendicularBisector(LineSegmentOf(UpperVertex(a), Center(A)))) = True"
},
{
    "assertion": "PerpendicularBisector ( InterceptChord ( TangentOnPoint ( POINT: a, CURVE: d ), CONICSECTION: o ) ) equals LeftDirectrix ( CONICSECTION: r )",
    "id": 3795,
    "declarations": "a: POINT; d: CURVE; o: CONICSECTION; r: CONICSECTION",
    "facts": "PerpendicularBisector(InterceptChord(TangentOnPoint(a, d), o)) = LeftDirectrix(r)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: q ) equals LowerFocus ( CONICSECTION: T )",
    "id": 3796,
    "declarations": "q: LINESEGMENT; T: CONICSECTION",
    "facts": "Endpoint(q) = LowerFocus(T)"
},
{
    "assertion": "IsPerpendicular ( LINE: H, LINE: O ) equals BOOL: True",
    "id": 3797,
    "declarations": "H: LINE; O: LINE; True: BOOL",
    "facts": "IsPerpendicular(H, O) = True"
},
{
    "assertion": "Length ( LINESEGMENT: E ) equals sqrt ( NUMBER: 39 )",
    "id": 3798,
    "declarations": "E: LINESEGMENT; 39: NUMBER",
    "facts": "Length(E) = sqrt(39)"
},
{
    "assertion": "AngleOf ( Incenter ( TRIANGLE: I ), LeftVertex ( CONICSECTION: X ), POINT: Q ) equals ApplyUnit ( NUMBER: -91, DEGREESTR: degree )",
    "id": 3799,
    "declarations": "I: TRIANGLE; X: CONICSECTION; Q: POINT; -91: NUMBER; degree: DEGREESTR",
    "facts": "AngleOf(Incenter(I), LeftVertex(X), Q) = ApplyUnit(-91, degree)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: f ) equals LINE: B",
    "id": 3800,
    "declarations": "f: CONICSECTION; B: LINE",
    "facts": "LeftDirectrix(f) = B"
},
{
    "assertion": "Distance ( POINT: Q, POINT: L ) equals NUMBER: -73",
    "id": 3801,
    "declarations": "Q: POINT; L: POINT; -73: NUMBER",
    "facts": "Distance(Q, L) = -73"
},
{
    "assertion": "AngleOf ( POINT: c, Orthocenter ( TRIANGLE: O ), POINT: z ) equals AngleOf ( POINT: f, POINT: k, POINT: Q )",
    "id": 3802,
    "declarations": "c: POINT; O: TRIANGLE; z: POINT; f: POINT; k: POINT; Q: POINT",
    "facts": "AngleOf(c, Orthocenter(O), z) = AngleOf(f, k, Q)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: k ) equals UpperVertex ( CONICSECTION: F )",
    "id": 3803,
    "declarations": "k: CONICSECTION; F: CONICSECTION",
    "facts": "LowerFocus(k) = UpperVertex(F)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -59, DEGREESTR: degree )",
    "id": 3804,
    "declarations": "-59: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-59, degree) = None"
},
{
    "assertion": "Diameter ( CIRCLE: a ) equals NUMBER: -43",
    "id": 3805,
    "declarations": "a: CIRCLE; -43: NUMBER",
    "facts": "Diameter(a) = -43"
},
{
    "assertion": "LeftFocus ( CONICSECTION: y ) equals POINT: l",
    "id": 3806,
    "declarations": "y: CONICSECTION; l: POINT",
    "facts": "LeftFocus(y) = l"
},
{
    "assertion": "UpperVertex ( CONICSECTION: C ) equals POINT: g",
    "id": 3807,
    "declarations": "C: CONICSECTION; g: POINT",
    "facts": "UpperVertex(C) = g"
},
{
    "assertion": "Radius ( CIRCLE: X ) equals NUMBER: 1",
    "id": 3808,
    "declarations": "X: CIRCLE; 1: NUMBER",
    "facts": "Radius(X) = 1"
},
{
    "assertion": "LineSegmentOf ( LeftFocus ( CONICSECTION: R ), POINT: s ) equals ImaginaryAxis ( ELLIPSE: R )",
    "id": 3809,
    "declarations": "R: CONICSECTION; s: POINT; R: ELLIPSE",
    "facts": "LineSegmentOf(LeftFocus(R), s) = ImaginaryAxis(R)"
},
{
    "assertion": "FootPoint ( RightDirectrix ( CONICSECTION: n ), TangentOnPoint ( RightVertex ( CONICSECTION: i ), CURVE: z ) ) equals Circumcenter ( TRIANGLE: i )",
    "id": 3810,
    "declarations": "n: CONICSECTION; i: CONICSECTION; z: CURVE; i: TRIANGLE",
    "facts": "FootPoint(RightDirectrix(n), TangentOnPoint(RightVertex(i), z)) = Circumcenter(i)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: W ) equals POINT: q",
    "id": 3811,
    "declarations": "W: TRIANGLE; q: POINT",
    "facts": "Orthocenter(W) = q"
},
{
    "assertion": "MinorAxis ( ELLIPSE: I ) equals LINESEGMENT: G",
    "id": 3812,
    "declarations": "I: ELLIPSE; G: LINESEGMENT",
    "facts": "MinorAxis(I) = G"
},
{
    "assertion": "UpperVertex ( CONICSECTION: x ) equals POINT: E",
    "id": 3813,
    "declarations": "x: CONICSECTION; E: POINT",
    "facts": "UpperVertex(x) = E"
},
{
    "assertion": "LeftPart ( HYPERBOLA: u ) equals CURVE: h",
    "id": 3814,
    "declarations": "u: HYPERBOLA; h: CURVE",
    "facts": "LeftPart(u) = h"
},
{
    "assertion": "LowerFocus ( CONICSECTION: A ) equals POINT: k",
    "id": 3815,
    "declarations": "A: CONICSECTION; k: POINT",
    "facts": "LowerFocus(A) = k"
},
{
    "assertion": "Asymptote ( HYPERBOLA: u ) equals PerpendicularBisector ( LINESEGMENT: A )",
    "id": 3816,
    "declarations": "u: HYPERBOLA; A: LINESEGMENT",
    "facts": "Asymptote(u) = PerpendicularBisector(A)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: S ) equals Incenter ( TRIANGLE: E )",
    "id": 3817,
    "declarations": "S: CONICSECTION; E: TRIANGLE",
    "facts": "LeftFocus(S) = Incenter(E)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: l ) equals POINT: E",
    "id": 3818,
    "declarations": "l: CONICSECTION; E: POINT",
    "facts": "LeftVertex(l) = E"
},
{
    "assertion": "IsParallel ( LINE: b, LINE: E ) equals BOOL: True",
    "id": 3819,
    "declarations": "b: LINE; E: LINE; True: BOOL",
    "facts": "IsParallel(b, E) = True"
},
{
    "assertion": "Inclination ( LINE: J ) equals Length ( LINESEGMENT: J )",
    "id": 3820,
    "declarations": "J: LINE; J: LINESEGMENT",
    "facts": "Inclination(J) = Length(J)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Q ) equals RightDirectrix ( CONICSECTION: q )",
    "id": 3821,
    "declarations": "Q: CONICSECTION; q: CONICSECTION",
    "facts": "LeftDirectrix(Q) = RightDirectrix(q)"
},
{
    "assertion": "Min ( Diameter ( CIRCLE: D ) ) equals sqrt ( Length ( ImaginaryAxis ( ELLIPSE: H ) ) )",
    "id": 3822,
    "declarations": "D: CIRCLE; H: ELLIPSE",
    "facts": "Min(Diameter(D)) = sqrt(Length(ImaginaryAxis(H)))"
},
{
    "assertion": "Slope ( LINE: a ) equals Quadrant ( RightVertex ( CONICSECTION: W ) )",
    "id": 3823,
    "declarations": "a: LINE; W: CONICSECTION",
    "facts": "Slope(a) = Quadrant(RightVertex(W))"
},
{
    "assertion": "Quadrant ( RightFocus ( CONICSECTION: Q ) ) equals Inclination ( LINE: d )",
    "id": 3824,
    "declarations": "Q: CONICSECTION; d: LINE",
    "facts": "Quadrant(RightFocus(Q)) = Inclination(d)"
},
{
    "assertion": "Focus ( CONICSECTION: t ) equals POINT: R",
    "id": 3825,
    "declarations": "t: CONICSECTION; R: POINT",
    "facts": "Focus(t) = R"
},
{
    "assertion": "IsOutTangent ( CIRCLE: c, CIRCLE: G ) equals BOOL: False",
    "id": 3826,
    "declarations": "c: CIRCLE; G: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(c, G) = False"
},
{
    "assertion": "Length ( LINESEGMENT: U ) equals HalfFocalLength ( CONICSECTION: y )",
    "id": 3827,
    "declarations": "U: LINESEGMENT; y: CONICSECTION",
    "facts": "Length(U) = HalfFocalLength(y)"
},
{
    "assertion": "Projection ( Incenter ( TRIANGLE: U ), RightDirectrix ( CONICSECTION: x ) ) equals MidPoint ( LINESEGMENT: c )",
    "id": 3828,
    "declarations": "U: TRIANGLE; x: CONICSECTION; c: LINESEGMENT",
    "facts": "Projection(Incenter(U), RightDirectrix(x)) = MidPoint(c)"
},
{
    "assertion": "IsInTangent ( CIRCLE: I, CIRCLE: P ) equals BOOL: False",
    "id": 3829,
    "declarations": "I: CIRCLE; P: CIRCLE; False: BOOL",
    "facts": "IsInTangent(I, P) = False"
},
{
    "assertion": "Incenter ( TRIANGLE: y ) equals POINT: X",
    "id": 3830,
    "declarations": "y: TRIANGLE; X: POINT",
    "facts": "Incenter(y) = X"
},
{
    "assertion": "Incenter ( TRIANGLE: T ) equals POINT: X",
    "id": 3831,
    "declarations": "T: TRIANGLE; X: POINT",
    "facts": "Incenter(T) = X"
},
{
    "assertion": "MajorAxis ( ELLIPSE: b ) equals LINESEGMENT: Q",
    "id": 3832,
    "declarations": "b: ELLIPSE; Q: LINESEGMENT",
    "facts": "MajorAxis(b) = Q"
},
{
    "assertion": "RightVertex ( CONICSECTION: Y ) equals POINT: r",
    "id": 3833,
    "declarations": "Y: CONICSECTION; r: POINT",
    "facts": "RightVertex(Y) = r"
},
{
    "assertion": "Min ( Radius ( CIRCLE: e ) ) equals NUMBER: -84",
    "id": 3834,
    "declarations": "e: CIRCLE; -84: NUMBER",
    "facts": "Min(Radius(e)) = -84"
},
{
    "assertion": "MajorAxis ( ELLIPSE: d ) equals LINESEGMENT: C",
    "id": 3835,
    "declarations": "d: ELLIPSE; C: LINESEGMENT",
    "facts": "MajorAxis(d) = C"
},
{
    "assertion": "LineOf ( POINT: n, POINT: M ) equals RightDirectrix ( CONICSECTION: F )",
    "id": 3836,
    "declarations": "n: POINT; M: POINT; F: CONICSECTION",
    "facts": "LineOf(n, M) = RightDirectrix(F)"
},
{
    "assertion": "And ( XCoordinate ( FootPoint ( LINE: E, LINE: a ) ) equals NUMBER: -28, RightDirectrix ( CONICSECTION: m ) equals LINE: Y ) equals BOOL: True",
    "id": 3837,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightPart ( HYPERBOLA: e ) equals Locus ( RightFocus ( CONICSECTION: A ) )",
    "id": 3838,
    "declarations": "e: HYPERBOLA; A: CONICSECTION",
    "facts": "RightPart(e) = Locus(RightFocus(A))"
},
{
    "assertion": "Intersection ( RightPart ( HYPERBOLA: a ), CURVE: G ) equals POINT: v",
    "id": 3839,
    "declarations": "a: HYPERBOLA; G: CURVE; v: POINT",
    "facts": "Intersection(RightPart(a), G) = v"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: n ) equals NUMBER: 29",
    "id": 3840,
    "declarations": "n: CONICSECTION; 29: NUMBER",
    "facts": "HalfFocalLength(n) = 29"
},
{
    "assertion": "Coordinate ( RightFocus ( CONICSECTION: h ) ) equals ( NUMBER: 74, Inclination ( LINE: N ) )",
    "id": 3841,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "VectorOf ( MidPoint ( RealAxis ( ELLIPSE: o ) ), LeftVertex ( CONICSECTION: E ) ) equals VECTOR: F",
    "id": 3842,
    "declarations": "o: ELLIPSE; E: CONICSECTION; F: VECTOR",
    "facts": "VectorOf(MidPoint(RealAxis(o)), LeftVertex(E)) = F"
},
{
    "assertion": "IsDiameter ( MajorAxis ( ELLIPSE: E ), CIRCLE: c ) equals BOOL: False",
    "id": 3843,
    "declarations": "E: ELLIPSE; c: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MajorAxis(E), c) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: J ) equals LINE: Z",
    "id": 3844,
    "declarations": "J: CONICSECTION; Z: LINE",
    "facts": "Directrix(J) = Z"
},
{
    "assertion": "LineSegmentOf ( Circumcenter ( TRIANGLE: W ), Center ( CONICSECTION: K ) ) equals LINESEGMENT: o",
    "id": 3845,
    "declarations": "W: TRIANGLE; K: CONICSECTION; o: LINESEGMENT",
    "facts": "LineSegmentOf(Circumcenter(W), Center(K)) = o"
},
{
    "assertion": "Projection ( POINT: w, LINE: k ) equals LeftFocus ( CONICSECTION: Z )",
    "id": 3846,
    "declarations": "w: POINT; k: LINE; Z: CONICSECTION",
    "facts": "Projection(w, k) = LeftFocus(Z)"
},
{
    "assertion": "IsParallel ( LINE: T, LINE: h ) equals BOOL: False",
    "id": 3847,
    "declarations": "T: LINE; h: LINE; False: BOOL",
    "facts": "IsParallel(T, h) = False"
},
{
    "assertion": "VectorOf ( LowerVertex ( CONICSECTION: L ), Circumcenter ( TRIANGLE: g ) ) equals VECTOR: c",
    "id": 3848,
    "declarations": "L: CONICSECTION; g: TRIANGLE; c: VECTOR",
    "facts": "VectorOf(LowerVertex(L), Circumcenter(g)) = c"
},
{
    "assertion": "Incenter ( TRIANGLE: u ) equals Center ( CONICSECTION: r )",
    "id": 3849,
    "declarations": "u: TRIANGLE; r: CONICSECTION",
    "facts": "Incenter(u) = Center(r)"
},
{
    "assertion": "Min ( sqrt ( lg ( FocalLength ( CONICSECTION: h ) ) ) ) equals NUMBER: -25",
    "id": 3850,
    "declarations": "h: CONICSECTION; -25: NUMBER",
    "facts": "Min(sqrt(lg(FocalLength(h)))) = -25"
},
{
    "assertion": "XCoordinate ( POINT: Z ) equals NUMBER: 26",
    "id": 3851,
    "declarations": "Z: POINT; 26: NUMBER",
    "facts": "XCoordinate(Z) = 26"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Q ) equals POINT: o",
    "id": 3852,
    "declarations": "Q: CONICSECTION; o: POINT",
    "facts": "LeftFocus(Q) = o"
},
{
    "assertion": "Area ( CONICSECTION: Y ) equals Inclination ( LINE: r )",
    "id": 3853,
    "declarations": "Y: CONICSECTION; r: LINE",
    "facts": "Area(Y) = Inclination(r)"
},
{
    "assertion": "IsInTangent ( CIRCLE: e, CircumCircle ( TRIANGLE: K ) ) equals BOOL: True",
    "id": 3854,
    "declarations": "e: CIRCLE; K: TRIANGLE; True: BOOL",
    "facts": "IsInTangent(e, CircumCircle(K)) = True"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: J ) equals PerpendicularBisector ( LINESEGMENT: P )",
    "id": 3855,
    "declarations": "J: CONICSECTION; P: LINESEGMENT",
    "facts": "RightDirectrix(J) = PerpendicularBisector(P)"
},
{
    "assertion": "XCoordinate ( Center ( CONICSECTION: p ) ) equals FocalLength ( CONICSECTION: Q )",
    "id": 3856,
    "declarations": "p: CONICSECTION; Q: CONICSECTION",
    "facts": "XCoordinate(Center(p)) = FocalLength(Q)"
},
{
    "assertion": "Perimeter ( CONICSECTION: M ) equals FocalLength ( CONICSECTION: I )",
    "id": 3857,
    "declarations": "M: CONICSECTION; I: CONICSECTION",
    "facts": "Perimeter(M) = FocalLength(I)"
},
{
    "assertion": "VectorOf ( MidPoint ( LINESEGMENT: U ), UpperVertex ( CONICSECTION: g ) ) equals VECTOR: K",
    "id": 3858,
    "declarations": "U: LINESEGMENT; g: CONICSECTION; K: VECTOR",
    "facts": "VectorOf(MidPoint(U), UpperVertex(g)) = K"
},
{
    "assertion": "Focus ( CONICSECTION: V ) equals LowerVertex ( CONICSECTION: T )",
    "id": 3859,
    "declarations": "V: CONICSECTION; T: CONICSECTION",
    "facts": "Focus(V) = LowerVertex(T)"
},
{
    "assertion": "Area ( CONICSECTION: E ) equals Slope ( LINE: N )",
    "id": 3860,
    "declarations": "E: CONICSECTION; N: LINE",
    "facts": "Area(E) = Slope(N)"
},
{
    "assertion": "Distance ( POINT: R, POINT: G ) equals NUMBER: -80",
    "id": 3861,
    "declarations": "R: POINT; G: POINT; -80: NUMBER",
    "facts": "Distance(R, G) = -80"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: m ) equals LINE: V",
    "id": 3862,
    "declarations": "m: LINESEGMENT; V: LINE",
    "facts": "PerpendicularBisector(m) = V"
},
{
    "assertion": "MajorAxis ( ELLIPSE: r ) equals LINESEGMENT: S",
    "id": 3863,
    "declarations": "r: ELLIPSE; S: LINESEGMENT",
    "facts": "MajorAxis(r) = S"
},
{
    "assertion": "PerpendicularBisector ( LineSegmentOf ( POINT: Q, LeftVertex ( CONICSECTION: I ) ) ) equals RightDirectrix ( CONICSECTION: F )",
    "id": 3864,
    "declarations": "Q: POINT; I: CONICSECTION; F: CONICSECTION",
    "facts": "PerpendicularBisector(LineSegmentOf(Q, LeftVertex(I))) = RightDirectrix(F)"
},
{
    "assertion": "InterceptChord ( LINE: F, CONICSECTION: J ) equals LINESEGMENT: p",
    "id": 3865,
    "declarations": "F: LINE; J: CONICSECTION; p: LINESEGMENT",
    "facts": "InterceptChord(F, J) = p"
},
{
    "assertion": "InterReciprocal ( NUMBER: 0 ) equals sqrt ( NUMBER: -60 )",
    "id": 3866,
    "declarations": "0: NUMBER; -60: NUMBER",
    "facts": "InterReciprocal(0) = sqrt(-60)"
},
{
    "assertion": "Quadrant ( POINT: c ) equals NUMBER: 92",
    "id": 3867,
    "declarations": "c: POINT; 92: NUMBER",
    "facts": "Quadrant(c) = 92"
},
{
    "assertion": "Coordinate ( LeftVertex ( CONICSECTION: U ) ) equals ( Inclination ( LINE: h ), Perimeter ( CONICSECTION: T ) )",
    "id": 3868,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Min ( NUMBER: 23 ) equals InterReciprocal ( NUMBER: 16 )",
    "id": 3869,
    "declarations": "23: NUMBER; 16: NUMBER",
    "facts": "Min(23) = InterReciprocal(16)"
},
{
    "assertion": "Max ( Quadrant ( Circumcenter ( TRIANGLE: y ) ) ) equals Intercept ( LINE: Q, AXIS: xAxis )",
    "id": 3870,
    "declarations": "y: TRIANGLE; Q: LINE; xAxis: AXIS",
    "facts": "Max(Quadrant(Circumcenter(y))) = Intercept(Q, xAxis)"
},
{
    "assertion": "Vertex ( CONICSECTION: H ) equals LowerVertex ( CONICSECTION: A )",
    "id": 3871,
    "declarations": "H: CONICSECTION; A: CONICSECTION",
    "facts": "Vertex(H) = LowerVertex(A)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: H, TRIANGLE: s ) equals BOOL: False",
    "id": 3872,
    "declarations": "H: CIRCLE; s: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(H, s) = False"
},
{
    "assertion": "Abs ( LINESEGMENT: v ) equals NUMBER: -55",
    "id": 3873,
    "declarations": "v: LINESEGMENT; -55: NUMBER",
    "facts": "Abs(v) = -55"
},
{
    "assertion": "Intersection ( RightPart ( HYPERBOLA: F ), CURVE: q ) equals Center ( CONICSECTION: K )",
    "id": 3874,
    "declarations": "F: HYPERBOLA; q: CURVE; K: CONICSECTION",
    "facts": "Intersection(RightPart(F), q) = Center(K)"
},
{
    "assertion": "RightPart ( HYPERBOLA: u ) equals CURVE: Y",
    "id": 3875,
    "declarations": "u: HYPERBOLA; Y: CURVE",
    "facts": "RightPart(u) = Y"
},
{
    "assertion": "MidPoint ( LINESEGMENT: d ) equals MidPoint ( ImaginaryAxis ( ELLIPSE: E ) )",
    "id": 3876,
    "declarations": "d: LINESEGMENT; E: ELLIPSE",
    "facts": "MidPoint(d) = MidPoint(ImaginaryAxis(E))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: w ) equals CURVE: M",
    "id": 3877,
    "declarations": "w: HYPERBOLA; M: CURVE",
    "facts": "LeftPart(w) = M"
},
{
    "assertion": "RealAxis ( ELLIPSE: E ) equals LINESEGMENT: g",
    "id": 3878,
    "declarations": "E: ELLIPSE; g: LINESEGMENT",
    "facts": "RealAxis(E) = g"
},
{
    "assertion": "Locus ( POINT: R ) equals LeftPart ( HYPERBOLA: J )",
    "id": 3879,
    "declarations": "R: POINT; J: HYPERBOLA",
    "facts": "Locus(R) = LeftPart(J)"
},
{
    "assertion": "Quadrant ( LowerVertex ( CONICSECTION: y ) ) equals NUMBER: 60",
    "id": 3880,
    "declarations": "y: CONICSECTION; 60: NUMBER",
    "facts": "Quadrant(LowerVertex(y)) = 60"
},
{
    "assertion": "MajorAxis ( ELLIPSE: h ) equals LINESEGMENT: J",
    "id": 3881,
    "declarations": "h: ELLIPSE; J: LINESEGMENT",
    "facts": "MajorAxis(h) = J"
},
{
    "assertion": "Eccentricity ( CONICSECTION: f ) equals NUMBER: -9",
    "id": 3882,
    "declarations": "f: CONICSECTION; -9: NUMBER",
    "facts": "Eccentricity(f) = -9"
},
{
    "assertion": "FocalLength ( CONICSECTION: E ) equals Area ( CONICSECTION: V )",
    "id": 3883,
    "declarations": "E: CONICSECTION; V: CONICSECTION",
    "facts": "FocalLength(E) = Area(V)"
},
{
    "assertion": "IsTangent ( LINE: t, CONICSECTION: v ) equals BOOL: False",
    "id": 3884,
    "declarations": "t: LINE; v: CONICSECTION; False: BOOL",
    "facts": "IsTangent(t, v) = False"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: B, CIRCLE: f ) equals BOOL: True",
    "id": 3885,
    "declarations": "B: LINESEGMENT; f: CIRCLE; True: BOOL",
    "facts": "IsDiameter(B, f) = True"
},
{
    "assertion": "Max ( lg ( NUMBER: -80 ) ) equals NUMBER: -57",
    "id": 3886,
    "declarations": "-80: NUMBER; -57: NUMBER",
    "facts": "Max(lg(-80)) = -57"
},
{
    "assertion": "MinorAxis ( ELLIPSE: R ) equals LINESEGMENT: f",
    "id": 3887,
    "declarations": "R: ELLIPSE; f: LINESEGMENT",
    "facts": "MinorAxis(R) = f"
},
{
    "assertion": "Radius ( CIRCLE: B ) equals NUMBER: -79",
    "id": 3888,
    "declarations": "B: CIRCLE; -79: NUMBER",
    "facts": "Radius(B) = -79"
},
{
    "assertion": "Distance ( POINT: D, Orthocenter ( TRIANGLE: F ) ) equals NUMBER: -42",
    "id": 3889,
    "declarations": "D: POINT; F: TRIANGLE; -42: NUMBER",
    "facts": "Distance(D, Orthocenter(F)) = -42"
},
{
    "assertion": "Directrix ( CONICSECTION: Z ) equals LINE: w",
    "id": 3890,
    "declarations": "Z: CONICSECTION; w: LINE",
    "facts": "Directrix(Z) = w"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: c, CIRCLE: a ) equals BOOL: False",
    "id": 3891,
    "declarations": "c: LINESEGMENT; a: CIRCLE; False: BOOL",
    "facts": "IsDiameter(c, a) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: I ) equals RightVertex ( CONICSECTION: n )",
    "id": 3892,
    "declarations": "I: CONICSECTION; n: CONICSECTION",
    "facts": "Vertex(I) = RightVertex(n)"
},
{
    "assertion": "IsTangent ( LINE: B, CONICSECTION: R ) equals BOOL: False",
    "id": 3893,
    "declarations": "B: LINE; R: CONICSECTION; False: BOOL",
    "facts": "IsTangent(B, R) = False"
},
{
    "assertion": "Length ( LINESEGMENT: F ) equals NUMBER: 35",
    "id": 3894,
    "declarations": "F: LINESEGMENT; 35: NUMBER",
    "facts": "Length(F) = 35"
},
{
    "assertion": "Endpoint ( LINESEGMENT: a ) equals POINT: G",
    "id": 3895,
    "declarations": "a: LINESEGMENT; G: POINT",
    "facts": "Endpoint(a) = G"
},
{
    "assertion": "And ( Vertex ( CONICSECTION: I ) equals POINT: d, Orthocenter ( TRIANGLE: Z ) equals UpperVertex ( CONICSECTION: q ) ) equals BOOL: True",
    "id": 3896,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsIntersect ( CURVE: j, CURVE: C ) equals BOOL: True",
    "id": 3897,
    "declarations": "j: CURVE; C: CURVE; True: BOOL",
    "facts": "IsIntersect(j, C) = True"
},
{
    "assertion": "IsOutTangent ( CIRCLE: b, CIRCLE: h ) equals BOOL: False",
    "id": 3898,
    "declarations": "b: CIRCLE; h: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(b, h) = False"
},
{
    "assertion": "Negation ( Circumcenter ( TRIANGLE: D ) equals RightFocus ( CONICSECTION: k ) ) equals BOOL: False",
    "id": 3899,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LineSegmentOf ( POINT: n, Orthocenter ( TRIANGLE: o ) ) equals LINESEGMENT: Z",
    "id": 3900,
    "declarations": "n: POINT; o: TRIANGLE; Z: LINESEGMENT",
    "facts": "LineSegmentOf(n, Orthocenter(o)) = Z"
},
{
    "assertion": "sqrt ( HalfFocalLength ( CONICSECTION: z ) ) equals NUMBER: 15",
    "id": 3901,
    "declarations": "z: CONICSECTION; 15: NUMBER",
    "facts": "sqrt(HalfFocalLength(z)) = 15"
},
{
    "assertion": "Distance ( Incenter ( TriangleOf ( Center ( CONICSECTION: Y ), UpperVertex ( CONICSECTION: E ), Circumcenter ( TRIANGLE: Y ) ) ), Circumcenter ( TRIANGLE: J ) ) equals NUMBER: 72",
    "id": 3902,
    "declarations": "Y: CONICSECTION; E: CONICSECTION; Y: TRIANGLE; J: TRIANGLE; 72: NUMBER",
    "facts": "Distance(Incenter(TriangleOf(Center(Y), UpperVertex(E), Circumcenter(Y))), Circumcenter(J)) = 72"
},
{
    "assertion": "LocusEquation ( POINT: C ) equals EXPRESSION: y*space=*spacex^2*space-*space4*x*space+*space4",
    "id": 3903,
    "declarations": "C: POINT; y*space=*spacex^2*space-*space4*x*space+*space4: EXPRESSION",
    "facts": "LocusEquation(C) = y*space=*spacex^2*space-*space4*x*space+*space4"
},
{
    "assertion": "Center ( CONICSECTION: H ) equals UpperFocus ( CONICSECTION: O )",
    "id": 3904,
    "declarations": "H: CONICSECTION; O: CONICSECTION",
    "facts": "Center(H) = UpperFocus(O)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: I ) equals RightDirectrix ( CONICSECTION: j )",
    "id": 3905,
    "declarations": "I: CONICSECTION; j: CONICSECTION",
    "facts": "RightDirectrix(I) = RightDirectrix(j)"
},
{
    "assertion": "MidPoint ( RealAxis ( ELLIPSE: R ) ) equals POINT: P",
    "id": 3906,
    "declarations": "R: ELLIPSE; P: POINT",
    "facts": "MidPoint(RealAxis(R)) = P"
},
{
    "assertion": "Abs ( LINESEGMENT: x ) equals Diameter ( CIRCLE: Z )",
    "id": 3907,
    "declarations": "x: LINESEGMENT; Z: CIRCLE",
    "facts": "Abs(x) = Diameter(Z)"
},
{
    "assertion": "Coordinate ( MidPoint ( LINESEGMENT: f ) ) equals ( NUMBER: 75, Abs ( LINESEGMENT: C ) )",
    "id": 3908,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: f ) ) equals Area ( CONICSECTION: M )",
    "id": 3909,
    "declarations": "f: TRIANGLE; M: CONICSECTION",
    "facts": "Radius(CircumCircle(f)) = Area(M)"
},
{
    "assertion": "PointOnCurve ( UpperVertex ( CONICSECTION: i ), CURVE: s ) equals BOOL: False",
    "id": 3910,
    "declarations": "i: CONICSECTION; s: CURVE; False: BOOL",
    "facts": "PointOnCurve(UpperVertex(i), s) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: P, TRIANGLE: b ) equals BOOL: True",
    "id": 3911,
    "declarations": "P: CIRCLE; b: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(P, b) = True"
},
{
    "assertion": "MidPoint ( LINESEGMENT: o ) equals UpperVertex ( CONICSECTION: S )",
    "id": 3912,
    "declarations": "o: LINESEGMENT; S: CONICSECTION",
    "facts": "MidPoint(o) = UpperVertex(S)"
},
{
    "assertion": "Abs ( LINESEGMENT: M ) equals Perimeter ( CONICSECTION: F )",
    "id": 3913,
    "declarations": "M: LINESEGMENT; F: CONICSECTION",
    "facts": "Abs(M) = Perimeter(F)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: z ) equals LINE: G",
    "id": 3914,
    "declarations": "z: CONICSECTION; G: LINE",
    "facts": "RightDirectrix(z) = G"
},
{
    "assertion": "Area ( CONICSECTION: b ) equals NumIntersection ( CURVE: d, RightPart ( HYPERBOLA: N ) )",
    "id": 3915,
    "declarations": "b: CONICSECTION; d: CURVE; N: HYPERBOLA",
    "facts": "Area(b) = NumIntersection(d, RightPart(N))"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: E ) ) equals LINE: P",
    "id": 3916,
    "declarations": "E: ELLIPSE; P: LINE",
    "facts": "OverlappingLine(MajorAxis(E)) = P"
},
{
    "assertion": "Locus ( POINT: J ) equals Locus ( MidPoint ( LineSegmentOf ( Incenter ( TRIANGLE: J ), POINT: m ) ) )",
    "id": 3917,
    "declarations": "J: POINT; J: TRIANGLE; m: POINT",
    "facts": "Locus(J) = Locus(MidPoint(LineSegmentOf(Incenter(J), m)))"
},
{
    "assertion": "Negation ( Orthocenter ( TRIANGLE: u ) equals POINT: P ) equals BOOL: True",
    "id": 3918,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LocusEquation ( Circumcenter ( TRIANGLE: e ) ) equals EXPRESSION: x*space+*spacey^2*space=*space4",
    "id": 3919,
    "declarations": "e: TRIANGLE; x*space+*spacey^2*space=*space4: EXPRESSION",
    "facts": "LocusEquation(Circumcenter(e)) = x*space+*spacey^2*space=*space4"
},
{
    "assertion": "MajorAxis ( ELLIPSE: v ) equals MajorAxis ( ELLIPSE: b )",
    "id": 3920,
    "declarations": "v: ELLIPSE; b: ELLIPSE",
    "facts": "MajorAxis(v) = MajorAxis(b)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: L ) equals LeftDirectrix ( CONICSECTION: C )",
    "id": 3921,
    "declarations": "L: CONICSECTION; C: CONICSECTION",
    "facts": "RightDirectrix(L) = LeftDirectrix(C)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: v ) equals AXIS: yAxis",
    "id": 3922,
    "declarations": "v: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(v) = yAxis"
},
{
    "assertion": "FocalLength ( CONICSECTION: B ) equals NUMBER: -16",
    "id": 3923,
    "declarations": "B: CONICSECTION; -16: NUMBER",
    "facts": "FocalLength(B) = -16"
},
{
    "assertion": "Area ( CONICSECTION: P ) equals NUMBER: -13",
    "id": 3924,
    "declarations": "P: CONICSECTION; -13: NUMBER",
    "facts": "Area(P) = -13"
},
{
    "assertion": "Directrix ( CONICSECTION: S ) equals LINE: w",
    "id": 3925,
    "declarations": "S: CONICSECTION; w: LINE",
    "facts": "Directrix(S) = w"
},
{
    "assertion": "Abs ( LINESEGMENT: a ) equals YCoordinate ( POINT: y )",
    "id": 3926,
    "declarations": "a: LINESEGMENT; y: POINT",
    "facts": "Abs(a) = YCoordinate(y)"
},
{
    "assertion": "lg ( Quadrant ( MidPoint ( LINESEGMENT: E ) ) ) equals NUMBER: 93",
    "id": 3927,
    "declarations": "E: LINESEGMENT; 93: NUMBER",
    "facts": "lg(Quadrant(MidPoint(E))) = 93"
},
{
    "assertion": "Quadrant ( MidPoint ( LINESEGMENT: i ) ) equals sqrt ( NUMBER: 42 )",
    "id": 3928,
    "declarations": "i: LINESEGMENT; 42: NUMBER",
    "facts": "Quadrant(MidPoint(i)) = sqrt(42)"
},
{
    "assertion": "Max ( sqrt ( NUMBER: -77 ) ) equals HalfFocalLength ( CONICSECTION: c )",
    "id": 3929,
    "declarations": "-77: NUMBER; c: CONICSECTION",
    "facts": "Max(sqrt(-77)) = HalfFocalLength(c)"
},
{
    "assertion": "TangentPoint ( LineOf ( LowerVertex ( CONICSECTION: i ), LowerVertex ( CONICSECTION: x ) ), CIRCLE: G ) equals MidPoint ( LINESEGMENT: N )",
    "id": 3930,
    "declarations": "i: CONICSECTION; x: CONICSECTION; G: CIRCLE; N: LINESEGMENT",
    "facts": "TangentPoint(LineOf(LowerVertex(i), LowerVertex(x)), G) = MidPoint(N)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: r ) equals UpperFocus ( CONICSECTION: D )",
    "id": 3931,
    "declarations": "r: TRIANGLE; D: CONICSECTION",
    "facts": "Orthocenter(r) = UpperFocus(D)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: F ) equals CURVE: h",
    "id": 3932,
    "declarations": "F: HYPERBOLA; h: CURVE",
    "facts": "LeftPart(F) = h"
},
{
    "assertion": "Diameter ( CIRCLE: B ) equals NUMBER: -6",
    "id": 3933,
    "declarations": "B: CIRCLE; -6: NUMBER",
    "facts": "Diameter(B) = -6"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: r, TRIANGLE: N ) equals BOOL: False",
    "id": 3934,
    "declarations": "r: CIRCLE; N: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(r, N) = False"
},
{
    "assertion": "Eccentricity ( CONICSECTION: E ) equals Quadrant ( RightVertex ( CONICSECTION: L ) )",
    "id": 3935,
    "declarations": "E: CONICSECTION; L: CONICSECTION",
    "facts": "Eccentricity(E) = Quadrant(RightVertex(L))"
},
{
    "assertion": "Slope ( OverlappingLine ( MajorAxis ( ELLIPSE: y ) ) ) equals NUMBER: 31",
    "id": 3936,
    "declarations": "y: ELLIPSE; 31: NUMBER",
    "facts": "Slope(OverlappingLine(MajorAxis(y))) = 31"
},
{
    "assertion": "Focus ( CONICSECTION: o ) equals Orthocenter ( TRIANGLE: O )",
    "id": 3937,
    "declarations": "o: CONICSECTION; O: TRIANGLE",
    "facts": "Focus(o) = Orthocenter(O)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: s ) equals CIRCLE: J",
    "id": 3938,
    "declarations": "s: TRIANGLE; J: CIRCLE",
    "facts": "CircumCircle(s) = J"
},
{
    "assertion": "TangentOnPoint ( POINT: L, CURVE: Q ) equals PerpendicularBisector ( LINESEGMENT: f )",
    "id": 3939,
    "declarations": "L: POINT; Q: CURVE; f: LINESEGMENT",
    "facts": "TangentOnPoint(L, Q) = PerpendicularBisector(f)"
},
{
    "assertion": "IsIntersect ( CURVE: B, CURVE: N ) equals BOOL: False",
    "id": 3940,
    "declarations": "B: CURVE; N: CURVE; False: BOOL",
    "facts": "IsIntersect(B, N) = False"
},
{
    "assertion": "Distance ( FootPoint ( RightDirectrix ( CONICSECTION: J ), LeftDirectrix ( CONICSECTION: g ) ), POINT: E ) equals NUMBER: 73",
    "id": 3941,
    "declarations": "J: CONICSECTION; g: CONICSECTION; E: POINT; 73: NUMBER",
    "facts": "Distance(FootPoint(RightDirectrix(J), LeftDirectrix(g)), E) = 73"
},
{
    "assertion": "Coordinate ( POINT: y ) equals ( NUMBER: -36, lg ( NUMBER: -71 ) )",
    "id": 3942,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Min ( NUMBER: 47 ) equals HalfFocalLength ( CONICSECTION: X )",
    "id": 3943,
    "declarations": "47: NUMBER; X: CONICSECTION",
    "facts": "Min(47) = HalfFocalLength(X)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: d ) equals AXIS: yAxis",
    "id": 3944,
    "declarations": "d: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(d) = yAxis"
},
{
    "assertion": "Abs ( LINESEGMENT: U ) equals Slope ( LINE: g )",
    "id": 3945,
    "declarations": "U: LINESEGMENT; g: LINE",
    "facts": "Abs(U) = Slope(g)"
},
{
    "assertion": "Inclination ( LINE: s ) equals Area ( CONICSECTION: A )",
    "id": 3946,
    "declarations": "s: LINE; A: CONICSECTION",
    "facts": "Inclination(s) = Area(A)"
},
{
    "assertion": "Expression ( CURVE: H ) equals EXPRESSION: y*space=*spacelog(x)",
    "id": 3947,
    "declarations": "H: CURVE; y*space=*spacelog(x): EXPRESSION",
    "facts": "Expression(H) = y*space=*spacelog(x)"
},
{
    "assertion": "Max ( HalfFocalLength ( CONICSECTION: u ) ) equals NUMBER: -52",
    "id": 3948,
    "declarations": "u: CONICSECTION; -52: NUMBER",
    "facts": "Max(HalfFocalLength(u)) = -52"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: h ) equals LINE: M",
    "id": 3949,
    "declarations": "h: CONICSECTION; M: LINE",
    "facts": "LeftDirectrix(h) = M"
},
{
    "assertion": "IsDiameter ( MajorAxis ( ELLIPSE: m ), CIRCLE: m ) equals BOOL: False",
    "id": 3950,
    "declarations": "m: ELLIPSE; m: CIRCLE; False: BOOL",
    "facts": "IsDiameter(MajorAxis(m), m) = False"
},
{
    "assertion": "MinorAxis ( ELLIPSE: B ) equals MinorAxis ( ELLIPSE: l )",
    "id": 3951,
    "declarations": "B: ELLIPSE; l: ELLIPSE",
    "facts": "MinorAxis(B) = MinorAxis(l)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: c, CONICSECTION: U ) equals BOOL: True",
    "id": 3952,
    "declarations": "c: LINESEGMENT; U: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(c, U) = True"
},
{
    "assertion": "ApplyUnit ( NUMBER: 43, DEGREESTR: degree )",
    "id": 3953,
    "declarations": "43: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(43, degree) = None"
},
{
    "assertion": "And ( Area ( CONICSECTION: q ) equals Slope ( LINE: o ), Length ( LINESEGMENT: I ) equals Area ( CONICSECTION: W ) ) equals BOOL: False",
    "id": 3954,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: u ) equals PerpendicularBisector ( LINESEGMENT: C )",
    "id": 3955,
    "declarations": "u: CONICSECTION; C: LINESEGMENT",
    "facts": "RightDirectrix(u) = PerpendicularBisector(C)"
},
{
    "assertion": "Radius ( CIRCLE: B ) equals Abs ( LineSegmentOf ( POINT: O, Orthocenter ( TRIANGLE: o ) ) )",
    "id": 3956,
    "declarations": "B: CIRCLE; O: POINT; o: TRIANGLE",
    "facts": "Radius(B) = Abs(LineSegmentOf(O, Orthocenter(o)))"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: u ) equals LeftDirectrix ( CONICSECTION: K )",
    "id": 3957,
    "declarations": "u: CONICSECTION; K: CONICSECTION",
    "facts": "LeftDirectrix(u) = LeftDirectrix(K)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: I ) equals UpperFocus ( CONICSECTION: R )",
    "id": 3958,
    "declarations": "I: CONICSECTION; R: CONICSECTION",
    "facts": "UpperVertex(I) = UpperFocus(R)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: y ) equals RightFocus ( CONICSECTION: L )",
    "id": 3959,
    "declarations": "y: CONICSECTION; L: CONICSECTION",
    "facts": "LowerFocus(y) = RightFocus(L)"
},
{
    "assertion": "IsParallel ( LINE: w, LINE: P ) equals BOOL: True",
    "id": 3960,
    "declarations": "w: LINE; P: LINE; True: BOOL",
    "facts": "IsParallel(w, P) = True"
},
{
    "assertion": "Asymptote ( HYPERBOLA: z ) equals LINE: y",
    "id": 3961,
    "declarations": "z: HYPERBOLA; y: LINE",
    "facts": "Asymptote(z) = y"
},
{
    "assertion": "Center ( CONICSECTION: C ) equals POINT: h",
    "id": 3962,
    "declarations": "C: CONICSECTION; h: POINT",
    "facts": "Center(C) = h"
},
{
    "assertion": "LowerFocus ( CONICSECTION: E ) equals Orthocenter ( TRIANGLE: X )",
    "id": 3963,
    "declarations": "E: CONICSECTION; X: TRIANGLE",
    "facts": "LowerFocus(E) = Orthocenter(X)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: y ) equals LINE: e",
    "id": 3964,
    "declarations": "y: CONICSECTION; e: LINE",
    "facts": "LeftDirectrix(y) = e"
},
{
    "assertion": "PointOnCurve ( MidPoint ( LINESEGMENT: d ), LeftPart ( HYPERBOLA: m ) ) equals BOOL: True",
    "id": 3965,
    "declarations": "d: LINESEGMENT; m: HYPERBOLA; True: BOOL",
    "facts": "PointOnCurve(MidPoint(d), LeftPart(m)) = True"
},
{
    "assertion": "ApplyUnit ( HalfFocalLength ( CONICSECTION: s ), DEGREESTR: degree )",
    "id": 3966,
    "declarations": "s: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(HalfFocalLength(s), degree) = None"
},
{
    "assertion": "ApplyUnit ( Radius ( CIRCLE: n ), DEGREESTR: degree )",
    "id": 3967,
    "declarations": "n: CIRCLE; degree: DEGREESTR",
    "facts": "ApplyUnit(Radius(n), degree) = None"
},
{
    "assertion": "Vertex ( CONICSECTION: J ) equals POINT: e",
    "id": 3968,
    "declarations": "J: CONICSECTION; e: POINT",
    "facts": "Vertex(J) = e"
},
{
    "assertion": "FocalLength ( CONICSECTION: C ) equals Inclination ( LINE: K )",
    "id": 3969,
    "declarations": "C: CONICSECTION; K: LINE",
    "facts": "FocalLength(C) = Inclination(K)"
},
{
    "assertion": "Area ( CONICSECTION: u ) equals InterReciprocal ( InterReciprocal ( NUMBER: -46 ) )",
    "id": 3970,
    "declarations": "u: CONICSECTION; -46: NUMBER",
    "facts": "Area(u) = InterReciprocal(InterReciprocal(-46))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: z ) equals POINT: e",
    "id": 3971,
    "declarations": "z: CONICSECTION; e: POINT",
    "facts": "UpperVertex(z) = e"
},
{
    "assertion": "TangentPoint ( LINE: a, CIRCLE: q ) equals POINT: H",
    "id": 3972,
    "declarations": "a: LINE; q: CIRCLE; H: POINT",
    "facts": "TangentPoint(a, q) = H"
},
{
    "assertion": "Coordinate ( Circumcenter ( TRIANGLE: w ) ) equals ( NUMBER: -64, sqrt ( Diameter ( CircumCircle ( TRIANGLE: D ) ) ) )",
    "id": 3973,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "lg ( NUMBER: 96 ) equals NUMBER: 14",
    "id": 3974,
    "declarations": "96: NUMBER; 14: NUMBER",
    "facts": "lg(96) = 14"
},
{
    "assertion": "LineOf ( POINT: h, POINT: a ) equals LINE: n",
    "id": 3975,
    "declarations": "h: POINT; a: POINT; n: LINE",
    "facts": "LineOf(h, a) = n"
},
{
    "assertion": "RightVertex ( CONICSECTION: X ) equals Center ( CONICSECTION: J )",
    "id": 3976,
    "declarations": "X: CONICSECTION; J: CONICSECTION",
    "facts": "RightVertex(X) = Center(J)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: h ) equals UpperVertex ( CONICSECTION: V )",
    "id": 3977,
    "declarations": "h: TRIANGLE; V: CONICSECTION",
    "facts": "Circumcenter(h) = UpperVertex(V)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: v, CONICSECTION: E ) equals BOOL: True",
    "id": 3978,
    "declarations": "v: LINESEGMENT; E: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(v, E) = True"
},
{
    "assertion": "Projection ( UpperFocus ( CONICSECTION: E ), LeftDirectrix ( CONICSECTION: e ) ) equals RightFocus ( CONICSECTION: w )",
    "id": 3979,
    "declarations": "E: CONICSECTION; e: CONICSECTION; w: CONICSECTION",
    "facts": "Projection(UpperFocus(E), LeftDirectrix(e)) = RightFocus(w)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: n ) equals HalfFocalLength ( CONICSECTION: j )",
    "id": 3980,
    "declarations": "n: CONICSECTION; j: CONICSECTION",
    "facts": "HalfFocalLength(n) = HalfFocalLength(j)"
},
{
    "assertion": "Abs ( LINESEGMENT: p ) equals NUMBER: 89",
    "id": 3981,
    "declarations": "p: LINESEGMENT; 89: NUMBER",
    "facts": "Abs(p) = 89"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: W ) equals AXIS: xAxis",
    "id": 3982,
    "declarations": "W: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(W) = xAxis"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: y ) equals NUMBER: -34",
    "id": 3983,
    "declarations": "y: CONICSECTION; -34: NUMBER",
    "facts": "HalfFocalLength(y) = -34"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: n ) equals MajorAxis ( ELLIPSE: z )",
    "id": 3984,
    "declarations": "n: ELLIPSE; z: ELLIPSE",
    "facts": "ImaginaryAxis(n) = MajorAxis(z)"
},
{
    "assertion": "Diameter ( CIRCLE: H ) equals Min ( XCoordinate ( POINT: K ) )",
    "id": 3985,
    "declarations": "H: CIRCLE; K: POINT",
    "facts": "Diameter(H) = Min(XCoordinate(K))"
},
{
    "assertion": "IsInTangent ( CIRCLE: l, CircumCircle ( TRIANGLE: o ) ) equals BOOL: False",
    "id": 3986,
    "declarations": "l: CIRCLE; o: TRIANGLE; False: BOOL",
    "facts": "IsInTangent(l, CircumCircle(o)) = False"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: T, CIRCLE: I ) equals BOOL: False",
    "id": 3987,
    "declarations": "T: LINESEGMENT; I: CIRCLE; False: BOOL",
    "facts": "IsDiameter(T, I) = False"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: u, TRIANGLE: q ) equals BOOL: False",
    "id": 3988,
    "declarations": "u: CIRCLE; q: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(u, q) = False"
},
{
    "assertion": "CircumCircle ( TRIANGLE: H ) equals CIRCLE: C",
    "id": 3989,
    "declarations": "H: TRIANGLE; C: CIRCLE",
    "facts": "CircumCircle(H) = C"
},
{
    "assertion": "Endpoint ( MinorAxis ( ELLIPSE: r ) ) equals LowerVertex ( CONICSECTION: X )",
    "id": 3990,
    "declarations": "r: ELLIPSE; X: CONICSECTION",
    "facts": "Endpoint(MinorAxis(r)) = LowerVertex(X)"
},
{
    "assertion": "FocalLength ( CONICSECTION: d ) equals XCoordinate ( POINT: m )",
    "id": 3991,
    "declarations": "d: CONICSECTION; m: POINT",
    "facts": "FocalLength(d) = XCoordinate(m)"
},
{
    "assertion": "Expression ( CURVE: e ) equals EXPRESSION: y*space=*spacesin(x)",
    "id": 3992,
    "declarations": "e: CURVE; y*space=*spacesin(x): EXPRESSION",
    "facts": "Expression(e) = y*space=*spacesin(x)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: U ) equals POINT: k",
    "id": 3993,
    "declarations": "U: CONICSECTION; k: POINT",
    "facts": "LeftFocus(U) = k"
},
{
    "assertion": "Area ( CONICSECTION: K ) equals InterReciprocal ( NUMBER: 78 )",
    "id": 3994,
    "declarations": "K: CONICSECTION; 78: NUMBER",
    "facts": "Area(K) = InterReciprocal(78)"
},
{
    "assertion": "AngleOf ( LowerFocus ( CONICSECTION: K ), POINT: S, POINT: Z ) equals ApplyUnit ( Perimeter ( CONICSECTION: l ), DEGREESTR: degree )",
    "id": 3995,
    "declarations": "K: CONICSECTION; S: POINT; Z: POINT; l: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(LowerFocus(K), S, Z) = ApplyUnit(Perimeter(l), degree)"
},
{
    "assertion": "Abs ( LINESEGMENT: Y ) equals Intercept ( LeftDirectrix ( CONICSECTION: Z ), AXIS: yAxis )",
    "id": 3996,
    "declarations": "Y: LINESEGMENT; Z: CONICSECTION; yAxis: AXIS",
    "facts": "Abs(Y) = Intercept(LeftDirectrix(Z), yAxis)"
},
{
    "assertion": "OverlappingLine ( MinorAxis ( ELLIPSE: L ) ) equals PerpendicularBisector ( LINESEGMENT: p )",
    "id": 3997,
    "declarations": "L: ELLIPSE; p: LINESEGMENT",
    "facts": "OverlappingLine(MinorAxis(L)) = PerpendicularBisector(p)"
},
{
    "assertion": "IsIntersect ( CURVE: S, CURVE: A ) equals BOOL: False",
    "id": 3998,
    "declarations": "S: CURVE; A: CURVE; False: BOOL",
    "facts": "IsIntersect(S, A) = False"
},
{
    "assertion": "LineSegmentOf ( POINT: H, Center ( CONICSECTION: P ) ) equals LINESEGMENT: d",
    "id": 3999,
    "declarations": "H: POINT; P: CONICSECTION; d: LINESEGMENT",
    "facts": "LineSegmentOf(H, Center(P)) = d"
},
{
    "assertion": "Circumcenter ( TRIANGLE: D ) equals UpperFocus ( CONICSECTION: w )",
    "id": 4000,
    "declarations": "D: TRIANGLE; w: CONICSECTION",
    "facts": "Circumcenter(D) = UpperFocus(w)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: H ) equals PerpendicularBisector ( LINESEGMENT: o )",
    "id": 4001,
    "declarations": "H: CONICSECTION; o: LINESEGMENT",
    "facts": "LeftDirectrix(H) = PerpendicularBisector(o)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: l ) equals LINE: p",
    "id": 4002,
    "declarations": "l: LINESEGMENT; p: LINE",
    "facts": "OverlappingLine(l) = p"
},
{
    "assertion": "Endpoint ( LINESEGMENT: X ) equals Circumcenter ( TRIANGLE: H )",
    "id": 4003,
    "declarations": "X: LINESEGMENT; H: TRIANGLE",
    "facts": "Endpoint(X) = Circumcenter(H)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: V ) equals LeftVertex ( CONICSECTION: Q )",
    "id": 4004,
    "declarations": "V: CONICSECTION; Q: CONICSECTION",
    "facts": "LeftVertex(V) = LeftVertex(Q)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: A ) equals LeftVertex ( CONICSECTION: D )",
    "id": 4005,
    "declarations": "A: LINESEGMENT; D: CONICSECTION",
    "facts": "Endpoint(A) = LeftVertex(D)"
},
{
    "assertion": "FootPoint ( LINE: N, LINE: C ) equals Orthocenter ( TRIANGLE: x )",
    "id": 4006,
    "declarations": "N: LINE; C: LINE; x: TRIANGLE",
    "facts": "FootPoint(N, C) = Orthocenter(x)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: A ) equals AXIS: yAxis",
    "id": 4007,
    "declarations": "A: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(A) = yAxis"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: w ), TRIANGLE: H ) equals BOOL: True",
    "id": 4008,
    "declarations": "w: TRIANGLE; H: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(w), H) = True"
},
{
    "assertion": "sqrt ( NUMBER: 99 ) equals DotProduct ( VECTOR: Y, VECTOR: p )",
    "id": 4009,
    "declarations": "99: NUMBER; Y: VECTOR; p: VECTOR",
    "facts": "sqrt(99) = DotProduct(Y, p)"
},
{
    "assertion": "Inclination ( LINE: b ) equals NUMBER: 43",
    "id": 4010,
    "declarations": "b: LINE; 43: NUMBER",
    "facts": "Inclination(b) = 43"
},
{
    "assertion": "ApplyUnit ( Min ( NUMBER: 17 ), DEGREESTR: degree )",
    "id": 4011,
    "declarations": "17: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(Min(17), degree) = None"
},
{
    "assertion": "VectorOf ( POINT: s, POINT: Y ) equals VECTOR: k",
    "id": 4012,
    "declarations": "s: POINT; Y: POINT; k: VECTOR",
    "facts": "VectorOf(s, Y) = k"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: d, TRIANGLE: M ) equals BOOL: True",
    "id": 4013,
    "declarations": "d: CIRCLE; M: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(d, M) = True"
},
{
    "assertion": "Endpoint ( LINESEGMENT: J ) equals MidPoint ( LINESEGMENT: P )",
    "id": 4014,
    "declarations": "J: LINESEGMENT; P: LINESEGMENT",
    "facts": "Endpoint(J) = MidPoint(P)"
},
{
    "assertion": "FocalLength ( CONICSECTION: F ) equals Eccentricity ( CONICSECTION: z )",
    "id": 4015,
    "declarations": "F: CONICSECTION; z: CONICSECTION",
    "facts": "FocalLength(F) = Eccentricity(z)"
},
{
    "assertion": "AngleOf ( POINT: m, Projection ( POINT: g, LINE: U ), LeftVertex ( CONICSECTION: Q ) ) equals ApplyUnit ( Intercept ( LINE: m, SymmetryAxis ( CONICSECTION: c ) ), DEGREESTR: degree )",
    "id": 4016,
    "declarations": "m: POINT; g: POINT; U: LINE; Q: CONICSECTION; m: LINE; c: CONICSECTION; degree: DEGREESTR",
    "facts": "AngleOf(m, Projection(g, U), LeftVertex(Q)) = ApplyUnit(Intercept(m, SymmetryAxis(c)), degree)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: y ) equals LeftFocus ( CONICSECTION: r )",
    "id": 4017,
    "declarations": "y: TRIANGLE; r: CONICSECTION",
    "facts": "Orthocenter(y) = LeftFocus(r)"
},
{
    "assertion": "RightPart ( HYPERBOLA: Q ) equals CURVE: F",
    "id": 4018,
    "declarations": "Q: HYPERBOLA; F: CURVE",
    "facts": "RightPart(Q) = F"
},
{
    "assertion": "DotProduct ( VECTOR: f, VectorOf ( Projection ( RightFocus ( CONICSECTION: s ), LINE: t ), POINT: g ) ) equals Distance ( POINT: L, POINT: X )",
    "id": 4019,
    "declarations": "f: VECTOR; s: CONICSECTION; t: LINE; g: POINT; L: POINT; X: POINT",
    "facts": "DotProduct(f, VectorOf(Projection(RightFocus(s), t), g)) = Distance(L, X)"
},
{
    "assertion": "LocusEquation ( POINT: x ) equals EXPRESSION: x*space+*spacey*space=*space5",
    "id": 4020,
    "declarations": "x: POINT; x*space+*spacey*space=*space5: EXPRESSION",
    "facts": "LocusEquation(x) = x*space+*spacey*space=*space5"
},
{
    "assertion": "Center ( CONICSECTION: E ) equals POINT: K",
    "id": 4021,
    "declarations": "E: CONICSECTION; K: POINT",
    "facts": "Center(E) = K"
},
{
    "assertion": "Incenter ( TRIANGLE: n ) equals MidPoint ( MinorAxis ( ELLIPSE: V ) )",
    "id": 4022,
    "declarations": "n: TRIANGLE; V: ELLIPSE",
    "facts": "Incenter(n) = MidPoint(MinorAxis(V))"
},
{
    "assertion": "Length ( LINESEGMENT: Z ) equals Intercept ( OverlappingLine ( LINESEGMENT: j ), AXIS: yAxis )",
    "id": 4023,
    "declarations": "Z: LINESEGMENT; j: LINESEGMENT; yAxis: AXIS",
    "facts": "Length(Z) = Intercept(OverlappingLine(j), yAxis)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: E ) equals POINT: j",
    "id": 4024,
    "declarations": "E: CONICSECTION; j: POINT",
    "facts": "LowerVertex(E) = j"
},
{
    "assertion": "CircumCircle ( TRIANGLE: m ) equals CIRCLE: s",
    "id": 4025,
    "declarations": "m: TRIANGLE; s: CIRCLE",
    "facts": "CircumCircle(m) = s"
},
{
    "assertion": "CircumCircle ( TRIANGLE: p ) equals CIRCLE: O",
    "id": 4026,
    "declarations": "p: TRIANGLE; O: CIRCLE",
    "facts": "CircumCircle(p) = O"
},
{
    "assertion": "LowerVertex ( CONICSECTION: H ) equals FootPoint ( LINE: K, LINE: a )",
    "id": 4027,
    "declarations": "H: CONICSECTION; K: LINE; a: LINE",
    "facts": "LowerVertex(H) = FootPoint(K, a)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: Q ) equals TangentOfPoint ( POINT: z, CURVE: v )",
    "id": 4028,
    "declarations": "Q: CONICSECTION; z: POINT; v: CURVE",
    "facts": "RightDirectrix(Q) = TangentOfPoint(z, v)"
},
{
    "assertion": "InterceptChord ( LINE: D, CONICSECTION: x ) equals LINESEGMENT: U",
    "id": 4029,
    "declarations": "D: LINE; x: CONICSECTION; U: LINESEGMENT",
    "facts": "InterceptChord(D, x) = U"
},
{
    "assertion": "Focus ( CONICSECTION: H ) equals RightVertex ( CONICSECTION: U )",
    "id": 4030,
    "declarations": "H: CONICSECTION; U: CONICSECTION",
    "facts": "Focus(H) = RightVertex(U)"
},
{
    "assertion": "FootPoint ( LINE: P, LINE: x ) equals RightFocus ( CONICSECTION: a )",
    "id": 4031,
    "declarations": "P: LINE; x: LINE; a: CONICSECTION",
    "facts": "FootPoint(P, x) = RightFocus(a)"
},
{
    "assertion": "IsIntersect ( CURVE: D, CURVE: r ) equals BOOL: True",
    "id": 4032,
    "declarations": "D: CURVE; r: CURVE; True: BOOL",
    "facts": "IsIntersect(D, r) = True"
},
{
    "assertion": "Radius ( CIRCLE: x ) equals NUMBER: -49",
    "id": 4033,
    "declarations": "x: CIRCLE; -49: NUMBER",
    "facts": "Radius(x) = -49"
},
{
    "assertion": "Projection ( Projection ( LeftFocus ( CONICSECTION: G ), LINE: y ), LINE: D ) equals Orthocenter ( TRIANGLE: n )",
    "id": 4034,
    "declarations": "G: CONICSECTION; y: LINE; D: LINE; n: TRIANGLE",
    "facts": "Projection(Projection(LeftFocus(G), y), D) = Orthocenter(n)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: e ) equals LINE: J",
    "id": 4035,
    "declarations": "e: CONICSECTION; J: LINE",
    "facts": "LeftDirectrix(e) = J"
},
{
    "assertion": "TangentOfPoint ( POINT: Y, CURVE: m ) equals PerpendicularBisector ( LINESEGMENT: y )",
    "id": 4036,
    "declarations": "Y: POINT; m: CURVE; y: LINESEGMENT",
    "facts": "TangentOfPoint(Y, m) = PerpendicularBisector(y)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: R ) equals CURVE: c",
    "id": 4037,
    "declarations": "R: HYPERBOLA; c: CURVE",
    "facts": "LeftPart(R) = c"
},
{
    "assertion": "LeftVertex ( CONICSECTION: m ) equals POINT: e",
    "id": 4038,
    "declarations": "m: CONICSECTION; e: POINT",
    "facts": "LeftVertex(m) = e"
},
{
    "assertion": "LeftVertex ( CONICSECTION: D ) equals UpperFocus ( CONICSECTION: M )",
    "id": 4039,
    "declarations": "D: CONICSECTION; M: CONICSECTION",
    "facts": "LeftVertex(D) = UpperFocus(M)"
},
{
    "assertion": "Directrix ( CONICSECTION: s ) equals LINE: V",
    "id": 4040,
    "declarations": "s: CONICSECTION; V: LINE",
    "facts": "Directrix(s) = V"
},
{
    "assertion": "LocusEquation ( RightFocus ( CONICSECTION: M ) ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6xy",
    "id": 4041,
    "declarations": "M: CONICSECTION; x^3*space+*spacey^3*space=*space6xy: EXPRESSION",
    "facts": "LocusEquation(RightFocus(M)) = x^3*space+*spacey^3*space=*space6xy"
},
{
    "assertion": "Length ( LINESEGMENT: z ) equals HalfFocalLength ( CONICSECTION: B )",
    "id": 4042,
    "declarations": "z: LINESEGMENT; B: CONICSECTION",
    "facts": "Length(z) = HalfFocalLength(B)"
},
{
    "assertion": "Directrix ( CONICSECTION: Y ) equals LINE: v",
    "id": 4043,
    "declarations": "Y: CONICSECTION; v: LINE",
    "facts": "Directrix(Y) = v"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: n ) equals LINE: s",
    "id": 4044,
    "declarations": "n: CONICSECTION; s: LINE",
    "facts": "RightDirectrix(n) = s"
},
{
    "assertion": "PointOnCurve ( RightFocus ( CONICSECTION: p ), CURVE: p ) equals BOOL: False",
    "id": 4045,
    "declarations": "p: CONICSECTION; p: CURVE; False: BOOL",
    "facts": "PointOnCurve(RightFocus(p), p) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: G ) equals POINT: D",
    "id": 4046,
    "declarations": "G: CONICSECTION; D: POINT",
    "facts": "LeftVertex(G) = D"
},
{
    "assertion": "RealAxis ( ELLIPSE: j ) equals MajorAxis ( ELLIPSE: k )",
    "id": 4047,
    "declarations": "j: ELLIPSE; k: ELLIPSE",
    "facts": "RealAxis(j) = MajorAxis(k)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: F ) equals RightFocus ( CONICSECTION: b )",
    "id": 4048,
    "declarations": "F: CONICSECTION; b: CONICSECTION",
    "facts": "LowerVertex(F) = RightFocus(b)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: I ) equals CIRCLE: R",
    "id": 4049,
    "declarations": "I: TRIANGLE; R: CIRCLE",
    "facts": "CircumCircle(I) = R"
},
{
    "assertion": "LeftFocus ( CONICSECTION: M ) equals RightVertex ( CONICSECTION: H )",
    "id": 4050,
    "declarations": "M: CONICSECTION; H: CONICSECTION",
    "facts": "LeftFocus(M) = RightVertex(H)"
},
{
    "assertion": "Diameter ( CIRCLE: N ) equals Perimeter ( CONICSECTION: m )",
    "id": 4051,
    "declarations": "N: CIRCLE; m: CONICSECTION",
    "facts": "Diameter(N) = Perimeter(m)"
},
{
    "assertion": "TriangleOf ( Orthocenter ( TRIANGLE: o ), POINT: q, LeftVertex ( CONICSECTION: w ) ) equals TRIANGLE: N",
    "id": 4052,
    "declarations": "o: TRIANGLE; q: POINT; w: CONICSECTION; N: TRIANGLE",
    "facts": "TriangleOf(Orthocenter(o), q, LeftVertex(w)) = N"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: b, CIRCLE: l ) equals BOOL: False",
    "id": 4053,
    "declarations": "b: LINESEGMENT; l: CIRCLE; False: BOOL",
    "facts": "IsDiameter(b, l) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: I ) equals MidPoint ( LINESEGMENT: W )",
    "id": 4054,
    "declarations": "I: CONICSECTION; W: LINESEGMENT",
    "facts": "LowerVertex(I) = MidPoint(W)"
},
{
    "assertion": "Expression ( CURVE: b ) equals EXPRESSION: x*space=*spacey^2*space-*space4*y*space+*space4",
    "id": 4055,
    "declarations": "b: CURVE; x*space=*spacey^2*space-*space4*y*space+*space4: EXPRESSION",
    "facts": "Expression(b) = x*space=*spacey^2*space-*space4*y*space+*space4"
},
{
    "assertion": "RightPart ( HYPERBOLA: E ) equals CURVE: F",
    "id": 4056,
    "declarations": "E: HYPERBOLA; F: CURVE",
    "facts": "RightPart(E) = F"
},
{
    "assertion": "Asymptote ( HYPERBOLA: r ) equals LINE: X",
    "id": 4057,
    "declarations": "r: HYPERBOLA; X: LINE",
    "facts": "Asymptote(r) = X"
},
{
    "assertion": "Directrix ( CONICSECTION: u ) equals LINE: W",
    "id": 4058,
    "declarations": "u: CONICSECTION; W: LINE",
    "facts": "Directrix(u) = W"
},
{
    "assertion": "RightVertex ( CONICSECTION: e ) equals RightVertex ( CONICSECTION: E )",
    "id": 4059,
    "declarations": "e: CONICSECTION; E: CONICSECTION",
    "facts": "RightVertex(e) = RightVertex(E)"
},
{
    "assertion": "DotProduct ( VECTOR: p, VECTOR: U ) equals NUMBER: -71",
    "id": 4060,
    "declarations": "p: VECTOR; U: VECTOR; -71: NUMBER",
    "facts": "DotProduct(p, U) = -71"
},
{
    "assertion": "TangentPoint ( OverlappingLine ( LINESEGMENT: E ), CircumCircle ( TRIANGLE: d ) ) equals UpperVertex ( CONICSECTION: z )",
    "id": 4061,
    "declarations": "E: LINESEGMENT; d: TRIANGLE; z: CONICSECTION",
    "facts": "TangentPoint(OverlappingLine(E), CircumCircle(d)) = UpperVertex(z)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: X ) equals CURVE: n",
    "id": 4062,
    "declarations": "X: HYPERBOLA; n: CURVE",
    "facts": "LeftPart(X) = n"
},
{
    "assertion": "Coordinate ( LeftVertex ( CONICSECTION: Z ) ) equals ( NUMBER: 34, NUMBER: -77 )",
    "id": 4063,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Center ( CONICSECTION: M ) equals POINT: S",
    "id": 4064,
    "declarations": "M: CONICSECTION; S: POINT",
    "facts": "Center(M) = S"
},
{
    "assertion": "Asymptote ( HYPERBOLA: p ) equals LeftDirectrix ( CONICSECTION: b )",
    "id": 4065,
    "declarations": "p: HYPERBOLA; b: CONICSECTION",
    "facts": "Asymptote(p) = LeftDirectrix(b)"
},
{
    "assertion": "sqrt ( Slope ( OverlappingLine ( MinorAxis ( ELLIPSE: V ) ) ) ) equals Perimeter ( CONICSECTION: y )",
    "id": 4066,
    "declarations": "V: ELLIPSE; y: CONICSECTION",
    "facts": "sqrt(Slope(OverlappingLine(MinorAxis(V)))) = Perimeter(y)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: d ) equals UpperFocus ( CONICSECTION: m )",
    "id": 4067,
    "declarations": "d: TRIANGLE; m: CONICSECTION",
    "facts": "Orthocenter(d) = UpperFocus(m)"
},
{
    "assertion": "Locus ( POINT: W ) equals CURVE: p",
    "id": 4068,
    "declarations": "W: POINT; p: CURVE",
    "facts": "Locus(W) = p"
},
{
    "assertion": "Eccentricity ( CONICSECTION: g ) equals InterReciprocal ( NUMBER: -32 )",
    "id": 4069,
    "declarations": "g: CONICSECTION; -32: NUMBER",
    "facts": "Eccentricity(g) = InterReciprocal(-32)"
},
{
    "assertion": "Intersection ( CURVE: a, CURVE: l ) equals POINT: q",
    "id": 4070,
    "declarations": "a: CURVE; l: CURVE; q: POINT",
    "facts": "Intersection(a, l) = q"
},
{
    "assertion": "lg ( XCoordinate ( LeftVertex ( CONICSECTION: m ) ) ) equals NUMBER: 82",
    "id": 4071,
    "declarations": "m: CONICSECTION; 82: NUMBER",
    "facts": "lg(XCoordinate(LeftVertex(m))) = 82"
},
{
    "assertion": "lg ( Length ( LINESEGMENT: I ) ) equals NUMBER: -50",
    "id": 4072,
    "declarations": "I: LINESEGMENT; -50: NUMBER",
    "facts": "lg(Length(I)) = -50"
},
{
    "assertion": "TangentPoint ( LINE: V, CIRCLE: A ) equals POINT: O",
    "id": 4073,
    "declarations": "V: LINE; A: CIRCLE; O: POINT",
    "facts": "TangentPoint(V, A) = O"
},
{
    "assertion": "Max ( Area ( CONICSECTION: K ) ) equals NUMBER: -31",
    "id": 4074,
    "declarations": "K: CONICSECTION; -31: NUMBER",
    "facts": "Max(Area(K)) = -31"
},
{
    "assertion": "lg ( Area ( CONICSECTION: Q ) ) equals Perimeter ( CONICSECTION: k )",
    "id": 4075,
    "declarations": "Q: CONICSECTION; k: CONICSECTION",
    "facts": "lg(Area(Q)) = Perimeter(k)"
},
{
    "assertion": "VectorOf ( UpperVertex ( CONICSECTION: t ), POINT: k ) equals VECTOR: O",
    "id": 4076,
    "declarations": "t: CONICSECTION; k: POINT; O: VECTOR",
    "facts": "VectorOf(UpperVertex(t), k) = O"
},
{
    "assertion": "IsParallel ( LINE: D, LeftDirectrix ( CONICSECTION: h ) ) equals BOOL: False",
    "id": 4077,
    "declarations": "D: LINE; h: CONICSECTION; False: BOOL",
    "facts": "IsParallel(D, LeftDirectrix(h)) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: g ) equals LowerFocus ( CONICSECTION: a )",
    "id": 4078,
    "declarations": "g: CONICSECTION; a: CONICSECTION",
    "facts": "Vertex(g) = LowerFocus(a)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: O ) equals LeftFocus ( CONICSECTION: k )",
    "id": 4079,
    "declarations": "O: TRIANGLE; k: CONICSECTION",
    "facts": "Orthocenter(O) = LeftFocus(k)"
},
{
    "assertion": "And ( LineOf ( Circumcenter ( TRIANGLE: d ), POINT: V ) equals OverlappingLine ( LINESEGMENT: J ), Incenter ( TRIANGLE: e ) equals Center ( CONICSECTION: o ) ) equals BOOL: False",
    "id": 4080,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Center ( CONICSECTION: U ) equals Orthocenter ( TRIANGLE: B )",
    "id": 4081,
    "declarations": "U: CONICSECTION; B: TRIANGLE",
    "facts": "Center(U) = Orthocenter(B)"
},
{
    "assertion": "IsPerpendicular ( LINE: A, LeftDirectrix ( CONICSECTION: k ) ) equals BOOL: True",
    "id": 4082,
    "declarations": "A: LINE; k: CONICSECTION; True: BOOL",
    "facts": "IsPerpendicular(A, LeftDirectrix(k)) = True"
},
{
    "assertion": "Intersection ( LeftPart ( HYPERBOLA: q ), CURVE: G ) equals RightVertex ( CONICSECTION: c )",
    "id": 4083,
    "declarations": "q: HYPERBOLA; G: CURVE; c: CONICSECTION",
    "facts": "Intersection(LeftPart(q), G) = RightVertex(c)"
},
{
    "assertion": "Length ( LINESEGMENT: i ) equals Eccentricity ( CONICSECTION: o )",
    "id": 4084,
    "declarations": "i: LINESEGMENT; o: CONICSECTION",
    "facts": "Length(i) = Eccentricity(o)"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: c ) ) equals POINT: E",
    "id": 4085,
    "declarations": "c: ELLIPSE; E: POINT",
    "facts": "Endpoint(MajorAxis(c)) = E"
},
{
    "assertion": "Inclination ( LINE: H ) equals Perimeter ( CONICSECTION: v )",
    "id": 4086,
    "declarations": "H: LINE; v: CONICSECTION",
    "facts": "Inclination(H) = Perimeter(v)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: X ) equals LINE: v",
    "id": 4087,
    "declarations": "X: CONICSECTION; v: LINE",
    "facts": "LeftDirectrix(X) = v"
},
{
    "assertion": "Coordinate ( POINT: q ) equals ( HalfFocalLength ( CONICSECTION: W ), Diameter ( CIRCLE: P ) )",
    "id": 4088,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "ApplyUnit ( DotProduct ( VECTOR: R, VECTOR: J ), DEGREESTR: degree )",
    "id": 4089,
    "declarations": "R: VECTOR; J: VECTOR; degree: DEGREESTR",
    "facts": "ApplyUnit(DotProduct(R, J), degree) = None"
},
{
    "assertion": "FocalLength ( CONICSECTION: w ) equals XCoordinate ( RightVertex ( CONICSECTION: F ) )",
    "id": 4090,
    "declarations": "w: CONICSECTION; F: CONICSECTION",
    "facts": "FocalLength(w) = XCoordinate(RightVertex(F))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: x ) equals RightFocus ( CONICSECTION: n )",
    "id": 4091,
    "declarations": "x: CONICSECTION; n: CONICSECTION",
    "facts": "UpperFocus(x) = RightFocus(n)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: T ) equals LINE: S",
    "id": 4092,
    "declarations": "T: LINESEGMENT; S: LINE",
    "facts": "OverlappingLine(T) = S"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: B, TRIANGLE: u ) equals BOOL: True",
    "id": 4093,
    "declarations": "B: CIRCLE; u: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(B, u) = True"
},
{
    "assertion": "TangentPoint ( LINE: m, CIRCLE: u ) equals LeftVertex ( CONICSECTION: B )",
    "id": 4094,
    "declarations": "m: LINE; u: CIRCLE; B: CONICSECTION",
    "facts": "TangentPoint(m, u) = LeftVertex(B)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: w ) equals Incenter ( TRIANGLE: N )",
    "id": 4095,
    "declarations": "w: TRIANGLE; N: TRIANGLE",
    "facts": "Circumcenter(w) = Incenter(N)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: v ) equals UpperFocus ( CONICSECTION: k )",
    "id": 4096,
    "declarations": "v: LINESEGMENT; k: CONICSECTION",
    "facts": "MidPoint(v) = UpperFocus(k)"
},
{
    "assertion": "IsInTangent ( CIRCLE: s, CircumCircle ( TRIANGLE: j ) ) equals BOOL: False",
    "id": 4097,
    "declarations": "s: CIRCLE; j: TRIANGLE; False: BOOL",
    "facts": "IsInTangent(s, CircumCircle(j)) = False"
},
{
    "assertion": "ApplyUnit ( Length ( LINESEGMENT: Q ), DEGREESTR: degree )",
    "id": 4098,
    "declarations": "Q: LINESEGMENT; degree: DEGREESTR",
    "facts": "ApplyUnit(Length(Q), degree) = None"
},
{
    "assertion": "Projection ( LeftVertex ( CONICSECTION: v ), LINE: a ) equals POINT: D",
    "id": 4099,
    "declarations": "v: CONICSECTION; a: LINE; D: POINT",
    "facts": "Projection(LeftVertex(v), a) = D"
},
{
    "assertion": "LowerFocus ( CONICSECTION: E ) equals RightFocus ( CONICSECTION: J )",
    "id": 4100,
    "declarations": "E: CONICSECTION; J: CONICSECTION",
    "facts": "LowerFocus(E) = RightFocus(J)"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: U ) ) equals Abs ( LINESEGMENT: Y )",
    "id": 4101,
    "declarations": "U: ELLIPSE; Y: LINESEGMENT",
    "facts": "Abs(RealAxis(U)) = Abs(Y)"
},
{
    "assertion": "Min ( Inclination ( LINE: u ) ) equals lg ( NUMBER: 9 )",
    "id": 4102,
    "declarations": "u: LINE; 9: NUMBER",
    "facts": "Min(Inclination(u)) = lg(9)"
},
{
    "assertion": "IsChordOf ( MajorAxis ( ELLIPSE: f ), CONICSECTION: Q ) equals BOOL: True",
    "id": 4103,
    "declarations": "f: ELLIPSE; Q: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(MajorAxis(f), Q) = True"
},
{
    "assertion": "NumIntersection ( CURVE: j, CURVE: q ) equals sqrt ( NUMBER: -86 )",
    "id": 4104,
    "declarations": "j: CURVE; q: CURVE; -86: NUMBER",
    "facts": "NumIntersection(j, q) = sqrt(-86)"
},
{
    "assertion": "Center ( CONICSECTION: Q ) equals POINT: s",
    "id": 4105,
    "declarations": "Q: CONICSECTION; s: POINT",
    "facts": "Center(Q) = s"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: i, TRIANGLE: Z ) equals BOOL: True",
    "id": 4106,
    "declarations": "i: CIRCLE; Z: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(i, Z) = True"
},
{
    "assertion": "Area ( CONICSECTION: I ) equals NUMBER: 29",
    "id": 4107,
    "declarations": "I: CONICSECTION; 29: NUMBER",
    "facts": "Area(I) = 29"
},
{
    "assertion": "AngleOf ( POINT: Y, POINT: H, MidPoint ( LINESEGMENT: n ) ) equals AngleOf ( UpperVertex ( CONICSECTION: j ), POINT: k, Incenter ( TRIANGLE: S ) )",
    "id": 4108,
    "declarations": "Y: POINT; H: POINT; n: LINESEGMENT; j: CONICSECTION; k: POINT; S: TRIANGLE",
    "facts": "AngleOf(Y, H, MidPoint(n)) = AngleOf(UpperVertex(j), k, Incenter(S))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: X ) equals UpperVertex ( CONICSECTION: k )",
    "id": 4109,
    "declarations": "X: CONICSECTION; k: CONICSECTION",
    "facts": "UpperVertex(X) = UpperVertex(k)"
},
{
    "assertion": "Slope ( LINE: V ) equals NUMBER: 82",
    "id": 4110,
    "declarations": "V: LINE; 82: NUMBER",
    "facts": "Slope(V) = 82"
},
{
    "assertion": "MidPoint ( ImaginaryAxis ( ELLIPSE: Z ) ) equals POINT: x",
    "id": 4111,
    "declarations": "Z: ELLIPSE; x: POINT",
    "facts": "MidPoint(ImaginaryAxis(Z)) = x"
},
{
    "assertion": "Negation ( VectorOf ( FootPoint ( LINE: q, LeftDirectrix ( CONICSECTION: d ) ), RightFocus ( CONICSECTION: t ) ) equals VECTOR: J ) equals BOOL: False",
    "id": 4112,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Intersection ( CURVE: V, CURVE: k ) equals POINT: c",
    "id": 4113,
    "declarations": "V: CURVE; k: CURVE; c: POINT",
    "facts": "Intersection(V, k) = c"
},
{
    "assertion": "Max ( NUMBER: -59 ) equals Eccentricity ( CONICSECTION: W )",
    "id": 4114,
    "declarations": "-59: NUMBER; W: CONICSECTION",
    "facts": "Max(-59) = Eccentricity(W)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: x, TRIANGLE: K ) equals BOOL: True",
    "id": 4115,
    "declarations": "x: CIRCLE; K: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(x, K) = True"
},
{
    "assertion": "DotProduct ( VECTOR: b, VECTOR: n ) equals NUMBER: 84",
    "id": 4116,
    "declarations": "b: VECTOR; n: VECTOR; 84: NUMBER",
    "facts": "DotProduct(b, n) = 84"
},
{
    "assertion": "Negation ( IsParallel ( LineOf ( FootPoint ( LINE: b, LINE: m ), LeftVertex ( CONICSECTION: x ) ), LINE: Z ) equals BOOL: True ) equals BOOL: True",
    "id": 4117,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Center ( CONICSECTION: H ) equals MidPoint ( LINESEGMENT: n )",
    "id": 4118,
    "declarations": "H: CONICSECTION; n: LINESEGMENT",
    "facts": "Center(H) = MidPoint(n)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 11, DEGREESTR: degree )",
    "id": 4119,
    "declarations": "11: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(11, degree) = None"
},
{
    "assertion": "Distance ( POINT: W, Projection ( Projection ( POINT: o, LINE: N ), LINE: H ) ) equals InterReciprocal ( Min ( Quadrant ( POINT: V ) ) )",
    "id": 4120,
    "declarations": "W: POINT; o: POINT; N: LINE; H: LINE; V: POINT",
    "facts": "Distance(W, Projection(Projection(o, N), H)) = InterReciprocal(Min(Quadrant(V)))"
},
{
    "assertion": "VectorOf ( RightFocus ( CONICSECTION: f ), POINT: c ) equals VECTOR: Z",
    "id": 4121,
    "declarations": "f: CONICSECTION; c: POINT; Z: VECTOR",
    "facts": "VectorOf(RightFocus(f), c) = Z"
},
{
    "assertion": "IsPerpendicular ( LINE: c, LINE: o ) equals BOOL: False",
    "id": 4122,
    "declarations": "c: LINE; o: LINE; False: BOOL",
    "facts": "IsPerpendicular(c, o) = False"
},
{
    "assertion": "Area ( CONICSECTION: s ) equals NUMBER: -57",
    "id": 4123,
    "declarations": "s: CONICSECTION; -57: NUMBER",
    "facts": "Area(s) = -57"
},
{
    "assertion": "Diameter ( CIRCLE: D ) equals NUMBER: 91",
    "id": 4124,
    "declarations": "D: CIRCLE; 91: NUMBER",
    "facts": "Diameter(D) = 91"
},
{
    "assertion": "TangentOfPoint ( UpperVertex ( CONICSECTION: C ), CURVE: C ) equals LINE: z",
    "id": 4125,
    "declarations": "C: CONICSECTION; C: CURVE; z: LINE",
    "facts": "TangentOfPoint(UpperVertex(C), C) = z"
},
{
    "assertion": "Between ( POINT: f, Circumcenter ( TRIANGLE: P ), Orthocenter ( TRIANGLE: a ) ) equals BOOL: True",
    "id": 4126,
    "declarations": "f: POINT; P: TRIANGLE; a: TRIANGLE; True: BOOL",
    "facts": "Between(f, Circumcenter(P), Orthocenter(a)) = True"
},
{
    "assertion": "Between ( MidPoint ( ImaginaryAxis ( ELLIPSE: Y ) ), LowerVertex ( CONICSECTION: w ), POINT: I ) equals BOOL: False",
    "id": 4127,
    "declarations": "Y: ELLIPSE; w: CONICSECTION; I: POINT; False: BOOL",
    "facts": "Between(MidPoint(ImaginaryAxis(Y)), LowerVertex(w), I) = False"
},
{
    "assertion": "Circumcenter ( TRIANGLE: n ) equals POINT: U",
    "id": 4128,
    "declarations": "n: TRIANGLE; U: POINT",
    "facts": "Circumcenter(n) = U"
},
{
    "assertion": "Negation ( PerpendicularBisector ( LineSegmentOf ( UpperVertex ( CONICSECTION: K ), POINT: r ) ) equals OverlappingLine ( ImaginaryAxis ( ELLIPSE: A ) ) ) equals BOOL: True",
    "id": 4129,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Area ( CONICSECTION: i ) equals Length ( LINESEGMENT: g )",
    "id": 4130,
    "declarations": "i: CONICSECTION; g: LINESEGMENT",
    "facts": "Area(i) = Length(g)"
},
{
    "assertion": "FocalLength ( CONICSECTION: c ) equals Min ( NumIntersection ( CURVE: P, CURVE: t ) )",
    "id": 4131,
    "declarations": "c: CONICSECTION; P: CURVE; t: CURVE",
    "facts": "FocalLength(c) = Min(NumIntersection(P, t))"
},
{
    "assertion": "sqrt ( Quadrant ( POINT: B ) ) equals NUMBER: -57",
    "id": 4132,
    "declarations": "B: POINT; -57: NUMBER",
    "facts": "sqrt(Quadrant(B)) = -57"
},
{
    "assertion": "IsChordOf ( MajorAxis ( ELLIPSE: X ), CONICSECTION: O ) equals BOOL: True",
    "id": 4133,
    "declarations": "X: ELLIPSE; O: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(MajorAxis(X), O) = True"
},
{
    "assertion": "YCoordinate ( RightFocus ( CONICSECTION: d ) ) equals NUMBER: -13",
    "id": 4134,
    "declarations": "d: CONICSECTION; -13: NUMBER",
    "facts": "YCoordinate(RightFocus(d)) = -13"
},
{
    "assertion": "Incenter ( TriangleOf ( POINT: d, LeftFocus ( CONICSECTION: q ), Orthocenter ( TRIANGLE: P ) ) ) equals UpperVertex ( CONICSECTION: z )",
    "id": 4135,
    "declarations": "d: POINT; q: CONICSECTION; P: TRIANGLE; z: CONICSECTION",
    "facts": "Incenter(TriangleOf(d, LeftFocus(q), Orthocenter(P))) = UpperVertex(z)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: y ) equals RightVertex ( CONICSECTION: L )",
    "id": 4136,
    "declarations": "y: CONICSECTION; L: CONICSECTION",
    "facts": "UpperVertex(y) = RightVertex(L)"
},
{
    "assertion": "AngleOf ( LeftFocus ( CONICSECTION: Q ), UpperFocus ( CONICSECTION: W ), POINT: f ) equals ApplyUnit ( Slope ( LINE: t ), DEGREESTR: degree )",
    "id": 4137,
    "declarations": "Q: CONICSECTION; W: CONICSECTION; f: POINT; t: LINE; degree: DEGREESTR",
    "facts": "AngleOf(LeftFocus(Q), UpperFocus(W), f) = ApplyUnit(Slope(t), degree)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: K ) equals ImaginaryAxis ( ELLIPSE: h )",
    "id": 4138,
    "declarations": "K: ELLIPSE; h: ELLIPSE",
    "facts": "ImaginaryAxis(K) = ImaginaryAxis(h)"
},
{
    "assertion": "TangentOfPoint ( POINT: Z, CURVE: W ) equals LINE: p",
    "id": 4139,
    "declarations": "Z: POINT; W: CURVE; p: LINE",
    "facts": "TangentOfPoint(Z, W) = p"
},
{
    "assertion": "Orthocenter ( TRIANGLE: A ) equals POINT: x",
    "id": 4140,
    "declarations": "A: TRIANGLE; x: POINT",
    "facts": "Orthocenter(A) = x"
},
{
    "assertion": "Vertex ( CONICSECTION: W ) equals Circumcenter ( TRIANGLE: k )",
    "id": 4141,
    "declarations": "W: CONICSECTION; k: TRIANGLE",
    "facts": "Vertex(W) = Circumcenter(k)"
},
{
    "assertion": "IsOutTangent ( CIRCLE: R, CIRCLE: f ) equals BOOL: False",
    "id": 4142,
    "declarations": "R: CIRCLE; f: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(R, f) = False"
},
{
    "assertion": "TangentOfPoint ( POINT: Y, RightPart ( HYPERBOLA: P ) ) equals LINE: A",
    "id": 4143,
    "declarations": "Y: POINT; P: HYPERBOLA; A: LINE",
    "facts": "TangentOfPoint(Y, RightPart(P)) = A"
},
{
    "assertion": "Incenter ( TRIANGLE: f ) equals POINT: q",
    "id": 4144,
    "declarations": "f: TRIANGLE; q: POINT",
    "facts": "Incenter(f) = q"
},
{
    "assertion": "LocusEquation ( POINT: q ) equals LocusEquation ( POINT: r )",
    "id": 4145,
    "declarations": "q: POINT; r: POINT",
    "facts": "LocusEquation(q) = LocusEquation(r)"
},
{
    "assertion": "FocalLength ( CONICSECTION: A ) equals NUMBER: 79",
    "id": 4146,
    "declarations": "A: CONICSECTION; 79: NUMBER",
    "facts": "FocalLength(A) = 79"
},
{
    "assertion": "MinorAxis ( ELLIPSE: O ) equals LINESEGMENT: B",
    "id": 4147,
    "declarations": "O: ELLIPSE; B: LINESEGMENT",
    "facts": "MinorAxis(O) = B"
},
{
    "assertion": "InterReciprocal ( NUMBER: -29 ) equals NUMBER: 67",
    "id": 4148,
    "declarations": "-29: NUMBER; 67: NUMBER",
    "facts": "InterReciprocal(-29) = 67"
},
{
    "assertion": "Max ( lg ( Length ( LINESEGMENT: w ) ) ) equals FocalLength ( CONICSECTION: a )",
    "id": 4149,
    "declarations": "w: LINESEGMENT; a: CONICSECTION",
    "facts": "Max(lg(Length(w))) = FocalLength(a)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: I ) equals CIRCLE: O",
    "id": 4150,
    "declarations": "I: TRIANGLE; O: CIRCLE",
    "facts": "CircumCircle(I) = O"
},
{
    "assertion": "Asymptote ( HYPERBOLA: a ) equals LINE: f",
    "id": 4151,
    "declarations": "a: HYPERBOLA; f: LINE",
    "facts": "Asymptote(a) = f"
},
{
    "assertion": "Directrix ( CONICSECTION: b ) equals RightDirectrix ( CONICSECTION: U )",
    "id": 4152,
    "declarations": "b: CONICSECTION; U: CONICSECTION",
    "facts": "Directrix(b) = RightDirectrix(U)"
},
{
    "assertion": "TangentOfPoint ( POINT: l, CURVE: V ) equals LINE: H",
    "id": 4153,
    "declarations": "l: POINT; V: CURVE; H: LINE",
    "facts": "TangentOfPoint(l, V) = H"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: G, CONICSECTION: i ) equals BOOL: True",
    "id": 4154,
    "declarations": "G: LINESEGMENT; i: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(G, i) = True"
},
{
    "assertion": "Focus ( CONICSECTION: E ) equals RightFocus ( CONICSECTION: r )",
    "id": 4155,
    "declarations": "E: CONICSECTION; r: CONICSECTION",
    "facts": "Focus(E) = RightFocus(r)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: E ) equals Incenter ( TRIANGLE: W )",
    "id": 4156,
    "declarations": "E: CONICSECTION; W: TRIANGLE",
    "facts": "UpperFocus(E) = Incenter(W)"
},
{
    "assertion": "Projection ( POINT: E, LINE: K ) equals LowerVertex ( CONICSECTION: S )",
    "id": 4157,
    "declarations": "E: POINT; K: LINE; S: CONICSECTION",
    "facts": "Projection(E, K) = LowerVertex(S)"
},
{
    "assertion": "LocusEquation ( POINT: m ) equals EXPRESSION: y*space=*spacee^x",
    "id": 4158,
    "declarations": "m: POINT; y*space=*spacee^x: EXPRESSION",
    "facts": "LocusEquation(m) = y*space=*spacee^x"
},
{
    "assertion": "IsIntersect ( CURVE: y, CURVE: O ) equals BOOL: True",
    "id": 4159,
    "declarations": "y: CURVE; O: CURVE; True: BOOL",
    "facts": "IsIntersect(y, O) = True"
},
{
    "assertion": "Center ( CONICSECTION: Z ) equals MidPoint ( LINESEGMENT: h )",
    "id": 4160,
    "declarations": "Z: CONICSECTION; h: LINESEGMENT",
    "facts": "Center(Z) = MidPoint(h)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: Y, TRIANGLE: n ) equals BOOL: True",
    "id": 4161,
    "declarations": "Y: CIRCLE; n: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(Y, n) = True"
},
{
    "assertion": "LineSegmentOf ( POINT: k, LowerFocus ( CONICSECTION: M ) ) equals LINESEGMENT: F",
    "id": 4162,
    "declarations": "k: POINT; M: CONICSECTION; F: LINESEGMENT",
    "facts": "LineSegmentOf(k, LowerFocus(M)) = F"
},
{
    "assertion": "RightFocus ( CONICSECTION: o ) equals UpperVertex ( CONICSECTION: U )",
    "id": 4163,
    "declarations": "o: CONICSECTION; U: CONICSECTION",
    "facts": "RightFocus(o) = UpperVertex(U)"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: O ) equals AXIS: xAxis",
    "id": 4164,
    "declarations": "O: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(O) = xAxis"
},
{
    "assertion": "UpperFocus ( CONICSECTION: H ) equals POINT: f",
    "id": 4165,
    "declarations": "H: CONICSECTION; f: POINT",
    "facts": "UpperFocus(H) = f"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: w, CIRCLE: E ) equals BOOL: False",
    "id": 4166,
    "declarations": "w: LINESEGMENT; E: CIRCLE; False: BOOL",
    "facts": "IsDiameter(w, E) = False"
},
{
    "assertion": "UpperFocus ( CONICSECTION: g ) equals LowerVertex ( CONICSECTION: R )",
    "id": 4167,
    "declarations": "g: CONICSECTION; R: CONICSECTION",
    "facts": "UpperFocus(g) = LowerVertex(R)"
},
{
    "assertion": "Diameter ( CIRCLE: q ) equals Quadrant ( RightFocus ( CONICSECTION: w ) )",
    "id": 4168,
    "declarations": "q: CIRCLE; w: CONICSECTION",
    "facts": "Diameter(q) = Quadrant(RightFocus(w))"
},
{
    "assertion": "Coordinate ( FootPoint ( RightDirectrix ( CONICSECTION: l ), LINE: U ) ) equals ( NUMBER: -23, Diameter ( CIRCLE: K ) )",
    "id": 4169,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "MajorAxis ( ELLIPSE: R ) equals ImaginaryAxis ( ELLIPSE: i )",
    "id": 4170,
    "declarations": "R: ELLIPSE; i: ELLIPSE",
    "facts": "MajorAxis(R) = ImaginaryAxis(i)"
},
{
    "assertion": "XCoordinate ( Projection ( LowerFocus ( CONICSECTION: O ), LINE: O ) ) equals NUMBER: -58",
    "id": 4171,
    "declarations": "O: CONICSECTION; O: LINE; -58: NUMBER",
    "facts": "XCoordinate(Projection(LowerFocus(O), O)) = -58"
},
{
    "assertion": "Abs ( LINESEGMENT: j ) equals NUMBER: -37",
    "id": 4172,
    "declarations": "j: LINESEGMENT; -37: NUMBER",
    "facts": "Abs(j) = -37"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: T, CONICSECTION: e ) equals BOOL: True",
    "id": 4173,
    "declarations": "T: LINESEGMENT; e: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(T, e) = True"
},
{
    "assertion": "Intercept ( LeftDirectrix ( CONICSECTION: S ), AXIS: yAxis ) equals NUMBER: 46",
    "id": 4174,
    "declarations": "S: CONICSECTION; yAxis: AXIS; 46: NUMBER",
    "facts": "Intercept(LeftDirectrix(S), yAxis) = 46"
},
{
    "assertion": "IsIntersect ( CURVE: v, CURVE: p ) equals BOOL: True",
    "id": 4175,
    "declarations": "v: CURVE; p: CURVE; True: BOOL",
    "facts": "IsIntersect(v, p) = True"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: d ) equals LINE: F",
    "id": 4176,
    "declarations": "d: CONICSECTION; F: LINE",
    "facts": "LeftDirectrix(d) = F"
},
{
    "assertion": "TangentOnPoint ( POINT: l, CURVE: T ) equals LINE: I",
    "id": 4177,
    "declarations": "l: POINT; T: CURVE; I: LINE",
    "facts": "TangentOnPoint(l, T) = I"
},
{
    "assertion": "TangentPoint ( LINE: i, CIRCLE: I ) equals POINT: H",
    "id": 4178,
    "declarations": "i: LINE; I: CIRCLE; H: POINT",
    "facts": "TangentPoint(i, I) = H"
},
{
    "assertion": "RightVertex ( CONICSECTION: w ) equals POINT: a",
    "id": 4179,
    "declarations": "w: CONICSECTION; a: POINT",
    "facts": "RightVertex(w) = a"
},
{
    "assertion": "UpperFocus ( CONICSECTION: D ) equals POINT: O",
    "id": 4180,
    "declarations": "D: CONICSECTION; O: POINT",
    "facts": "UpperFocus(D) = O"
},
{
    "assertion": "Radius ( CIRCLE: Q ) equals XCoordinate ( LowerVertex ( CONICSECTION: d ) )",
    "id": 4181,
    "declarations": "Q: CIRCLE; d: CONICSECTION",
    "facts": "Radius(Q) = XCoordinate(LowerVertex(d))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: H ) equals CURVE: H",
    "id": 4182,
    "declarations": "H: HYPERBOLA; H: CURVE",
    "facts": "LeftPart(H) = H"
},
{
    "assertion": "Center ( CONICSECTION: t ) equals Incenter ( TRIANGLE: L )",
    "id": 4183,
    "declarations": "t: CONICSECTION; L: TRIANGLE",
    "facts": "Center(t) = Incenter(L)"
},
{
    "assertion": "LocusEquation ( POINT: H ) equals EXPRESSION: y*space=*spacee^x",
    "id": 4184,
    "declarations": "H: POINT; y*space=*spacee^x: EXPRESSION",
    "facts": "LocusEquation(H) = y*space=*spacee^x"
},
{
    "assertion": "Negation ( Focus ( CONICSECTION: s ) equals Circumcenter ( TRIANGLE: P ) ) equals BOOL: False",
    "id": 4185,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "InterceptChord ( PerpendicularBisector ( LINESEGMENT: A ), CONICSECTION: d ) equals ImaginaryAxis ( ELLIPSE: i )",
    "id": 4186,
    "declarations": "A: LINESEGMENT; d: CONICSECTION; i: ELLIPSE",
    "facts": "InterceptChord(PerpendicularBisector(A), d) = ImaginaryAxis(i)"
},
{
    "assertion": "Inclination ( PerpendicularBisector ( MajorAxis ( ELLIPSE: Z ) ) ) equals NUMBER: 83",
    "id": 4187,
    "declarations": "Z: ELLIPSE; 83: NUMBER",
    "facts": "Inclination(PerpendicularBisector(MajorAxis(Z))) = 83"
},
{
    "assertion": "Circumcenter ( TRIANGLE: v ) equals MidPoint ( LINESEGMENT: T )",
    "id": 4188,
    "declarations": "v: TRIANGLE; T: LINESEGMENT",
    "facts": "Circumcenter(v) = MidPoint(T)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: w ) equals POINT: J",
    "id": 4189,
    "declarations": "w: CONICSECTION; J: POINT",
    "facts": "LeftVertex(w) = J"
},
{
    "assertion": "CircumCircle ( TRIANGLE: o ) equals CircumCircle ( TRIANGLE: q )",
    "id": 4190,
    "declarations": "o: TRIANGLE; q: TRIANGLE",
    "facts": "CircumCircle(o) = CircumCircle(q)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: f ) equals Incenter ( TRIANGLE: z )",
    "id": 4191,
    "declarations": "f: TRIANGLE; z: TRIANGLE",
    "facts": "Circumcenter(f) = Incenter(z)"
},
{
    "assertion": "Locus ( POINT: E ) equals CURVE: P",
    "id": 4192,
    "declarations": "E: POINT; P: CURVE",
    "facts": "Locus(E) = P"
},
{
    "assertion": "Endpoint ( LineSegmentOf ( LeftFocus ( CONICSECTION: x ), UpperFocus ( CONICSECTION: A ) ) ) equals MidPoint ( LINESEGMENT: D )",
    "id": 4193,
    "declarations": "x: CONICSECTION; A: CONICSECTION; D: LINESEGMENT",
    "facts": "Endpoint(LineSegmentOf(LeftFocus(x), UpperFocus(A))) = MidPoint(D)"
},
{
    "assertion": "sqrt ( InterReciprocal ( HalfFocalLength ( CONICSECTION: p ) ) ) equals NUMBER: -88",
    "id": 4194,
    "declarations": "p: CONICSECTION; -88: NUMBER",
    "facts": "sqrt(InterReciprocal(HalfFocalLength(p))) = -88"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: a, TRIANGLE: m ) equals BOOL: False",
    "id": 4195,
    "declarations": "a: CIRCLE; m: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(a, m) = False"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: Z ) equals LineOf ( POINT: G, RightVertex ( CONICSECTION: H ) )",
    "id": 4196,
    "declarations": "Z: LINESEGMENT; G: POINT; H: CONICSECTION",
    "facts": "OverlappingLine(Z) = LineOf(G, RightVertex(H))"
},
{
    "assertion": "Intercept ( LINE: L, AXIS: yAxis ) equals sqrt ( NUMBER: 75 )",
    "id": 4197,
    "declarations": "L: LINE; yAxis: AXIS; 75: NUMBER",
    "facts": "Intercept(L, yAxis) = sqrt(75)"
},
{
    "assertion": "LineSegmentOf ( POINT: C, LeftFocus ( CONICSECTION: F ) ) equals LINESEGMENT: w",
    "id": 4198,
    "declarations": "C: POINT; F: CONICSECTION; w: LINESEGMENT",
    "facts": "LineSegmentOf(C, LeftFocus(F)) = w"
},
{
    "assertion": "Negation ( UpperFocus ( CONICSECTION: e ) equals POINT: f ) equals BOOL: False",
    "id": 4199,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Abs ( RealAxis ( ELLIPSE: D ) ) equals HalfFocalLength ( CONICSECTION: J )",
    "id": 4200,
    "declarations": "D: ELLIPSE; J: CONICSECTION",
    "facts": "Abs(RealAxis(D)) = HalfFocalLength(J)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: Y ) equals RightDirectrix ( CONICSECTION: Y )",
    "id": 4201,
    "declarations": "Y: LINESEGMENT; Y: CONICSECTION",
    "facts": "OverlappingLine(Y) = RightDirectrix(Y)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: B ) equals LowerVertex ( CONICSECTION: z )",
    "id": 4202,
    "declarations": "B: CONICSECTION; z: CONICSECTION",
    "facts": "UpperVertex(B) = LowerVertex(z)"
},
{
    "assertion": "Coordinate ( RightFocus ( CONICSECTION: e ) ) equals ( NUMBER: -55, YCoordinate ( POINT: G ) )",
    "id": 4203,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftPart ( HYPERBOLA: Q ) equals CURVE: k",
    "id": 4204,
    "declarations": "Q: HYPERBOLA; k: CURVE",
    "facts": "LeftPart(Q) = k"
},
{
    "assertion": "IsTangent ( LINE: w, CONICSECTION: o ) equals BOOL: True",
    "id": 4205,
    "declarations": "w: LINE; o: CONICSECTION; True: BOOL",
    "facts": "IsTangent(w, o) = True"
},
{
    "assertion": "Circumcenter ( TRIANGLE: O ) equals POINT: w",
    "id": 4206,
    "declarations": "O: TRIANGLE; w: POINT",
    "facts": "Circumcenter(O) = w"
},
{
    "assertion": "Circumcenter ( TRIANGLE: t ) equals Orthocenter ( TRIANGLE: v )",
    "id": 4207,
    "declarations": "t: TRIANGLE; v: TRIANGLE",
    "facts": "Circumcenter(t) = Orthocenter(v)"
},
{
    "assertion": "Max ( NUMBER: 48 ) equals NUMBER: 88",
    "id": 4208,
    "declarations": "48: NUMBER; 88: NUMBER",
    "facts": "Max(48) = 88"
},
{
    "assertion": "IsPerpendicular ( LINE: m, OverlappingLine ( LINESEGMENT: e ) ) equals BOOL: True",
    "id": 4209,
    "declarations": "m: LINE; e: LINESEGMENT; True: BOOL",
    "facts": "IsPerpendicular(m, OverlappingLine(e)) = True"
},
{
    "assertion": "FootPoint ( LINE: d, LINE: e ) equals LowerVertex ( CONICSECTION: v )",
    "id": 4210,
    "declarations": "d: LINE; e: LINE; v: CONICSECTION",
    "facts": "FootPoint(d, e) = LowerVertex(v)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: y ) equals CIRCLE: V",
    "id": 4211,
    "declarations": "y: TRIANGLE; V: CIRCLE",
    "facts": "CircumCircle(y) = V"
},
{
    "assertion": "XCoordinate ( LowerFocus ( CONICSECTION: k ) ) equals Eccentricity ( CONICSECTION: x )",
    "id": 4212,
    "declarations": "k: CONICSECTION; x: CONICSECTION",
    "facts": "XCoordinate(LowerFocus(k)) = Eccentricity(x)"
},
{
    "assertion": "IsInTangent ( CIRCLE: e, CIRCLE: s ) equals BOOL: False",
    "id": 4213,
    "declarations": "e: CIRCLE; s: CIRCLE; False: BOOL",
    "facts": "IsInTangent(e, s) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: o ) equals POINT: e",
    "id": 4214,
    "declarations": "o: CONICSECTION; e: POINT",
    "facts": "LowerFocus(o) = e"
},
{
    "assertion": "MajorAxis ( ELLIPSE: z ) equals ImaginaryAxis ( ELLIPSE: k )",
    "id": 4215,
    "declarations": "z: ELLIPSE; k: ELLIPSE",
    "facts": "MajorAxis(z) = ImaginaryAxis(k)"
},
{
    "assertion": "Max ( NUMBER: 66 ) equals Intercept ( LINE: n, AXIS: yAxis )",
    "id": 4216,
    "declarations": "66: NUMBER; n: LINE; yAxis: AXIS",
    "facts": "Max(66) = Intercept(n, yAxis)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: R ) equals LineOf ( POINT: L, LowerVertex ( CONICSECTION: A ) )",
    "id": 4217,
    "declarations": "R: CONICSECTION; L: POINT; A: CONICSECTION",
    "facts": "RightDirectrix(R) = LineOf(L, LowerVertex(A))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: Z ) equals POINT: L",
    "id": 4218,
    "declarations": "Z: TRIANGLE; L: POINT",
    "facts": "Circumcenter(Z) = L"
},
{
    "assertion": "Vertex ( CONICSECTION: O ) equals LeftFocus ( CONICSECTION: Z )",
    "id": 4219,
    "declarations": "O: CONICSECTION; Z: CONICSECTION",
    "facts": "Vertex(O) = LeftFocus(Z)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: T ) equals HalfFocalLength ( CONICSECTION: h )",
    "id": 4220,
    "declarations": "T: CONICSECTION; h: CONICSECTION",
    "facts": "HalfFocalLength(T) = HalfFocalLength(h)"
},
{
    "assertion": "Incenter ( TRIANGLE: W ) equals POINT: h",
    "id": 4221,
    "declarations": "W: TRIANGLE; h: POINT",
    "facts": "Incenter(W) = h"
},
{
    "assertion": "Circumcenter ( TRIANGLE: e ) equals UpperFocus ( CONICSECTION: M )",
    "id": 4222,
    "declarations": "e: TRIANGLE; M: CONICSECTION",
    "facts": "Circumcenter(e) = UpperFocus(M)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: m ) equals POINT: B",
    "id": 4223,
    "declarations": "m: CONICSECTION; B: POINT",
    "facts": "UpperFocus(m) = B"
},
{
    "assertion": "PointOnCurve ( POINT: O, CURVE: a ) equals BOOL: True",
    "id": 4224,
    "declarations": "O: POINT; a: CURVE; True: BOOL",
    "facts": "PointOnCurve(O, a) = True"
},
{
    "assertion": "RightFocus ( CONICSECTION: N ) equals UpperVertex ( CONICSECTION: T )",
    "id": 4225,
    "declarations": "N: CONICSECTION; T: CONICSECTION",
    "facts": "RightFocus(N) = UpperVertex(T)"
},
{
    "assertion": "Negation ( Incenter ( TRIANGLE: M ) equals POINT: W ) equals BOOL: False",
    "id": 4226,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: D ) equals Abs ( MajorAxis ( ELLIPSE: w ) )",
    "id": 4227,
    "declarations": "D: CONICSECTION; w: ELLIPSE",
    "facts": "HalfFocalLength(D) = Abs(MajorAxis(w))"
},
{
    "assertion": "Radius ( CIRCLE: p ) equals Min ( Diameter ( CircumCircle ( TRIANGLE: W ) ) )",
    "id": 4228,
    "declarations": "p: CIRCLE; W: TRIANGLE",
    "facts": "Radius(p) = Min(Diameter(CircumCircle(W)))"
},
{
    "assertion": "Length ( LINESEGMENT: S ) equals Slope ( LINE: Z )",
    "id": 4229,
    "declarations": "S: LINESEGMENT; Z: LINE",
    "facts": "Length(S) = Slope(Z)"
},
{
    "assertion": "RightVertex ( CONICSECTION: l ) equals POINT: x",
    "id": 4230,
    "declarations": "l: CONICSECTION; x: POINT",
    "facts": "RightVertex(l) = x"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: u ) equals LINE: E",
    "id": 4231,
    "declarations": "u: CONICSECTION; E: LINE",
    "facts": "LeftDirectrix(u) = E"
},
{
    "assertion": "CircumCircle ( TRIANGLE: P ) equals CIRCLE: R",
    "id": 4232,
    "declarations": "P: TRIANGLE; R: CIRCLE",
    "facts": "CircumCircle(P) = R"
},
{
    "assertion": "RightFocus ( CONICSECTION: a ) equals POINT: I",
    "id": 4233,
    "declarations": "a: CONICSECTION; I: POINT",
    "facts": "RightFocus(a) = I"
},
{
    "assertion": "InterReciprocal ( Diameter ( CIRCLE: D ) ) equals Area ( CONICSECTION: T )",
    "id": 4234,
    "declarations": "D: CIRCLE; T: CONICSECTION",
    "facts": "InterReciprocal(Diameter(D)) = Area(T)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -97, DEGREESTR: degree )",
    "id": 4235,
    "declarations": "-97: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-97, degree) = None"
},
{
    "assertion": "Vertex ( CONICSECTION: o ) equals POINT: O",
    "id": 4236,
    "declarations": "o: CONICSECTION; O: POINT",
    "facts": "Vertex(o) = O"
},
{
    "assertion": "Directrix ( CONICSECTION: X ) equals PerpendicularBisector ( LINESEGMENT: J )",
    "id": 4237,
    "declarations": "X: CONICSECTION; J: LINESEGMENT",
    "facts": "Directrix(X) = PerpendicularBisector(J)"
},
{
    "assertion": "Area ( CONICSECTION: o ) equals NUMBER: -85",
    "id": 4238,
    "declarations": "o: CONICSECTION; -85: NUMBER",
    "facts": "Area(o) = -85"
},
{
    "assertion": "Negation ( Length ( LINESEGMENT: a ) equals NUMBER: 37 ) equals BOOL: True",
    "id": 4239,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Locus ( POINT: H ) equals CURVE: Y",
    "id": 4240,
    "declarations": "H: POINT; Y: CURVE",
    "facts": "Locus(H) = Y"
},
{
    "assertion": "IsOutTangent ( CIRCLE: Z, CIRCLE: h ) equals BOOL: False",
    "id": 4241,
    "declarations": "Z: CIRCLE; h: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(Z, h) = False"
},
{
    "assertion": "RightVertex ( CONICSECTION: x ) equals POINT: r",
    "id": 4242,
    "declarations": "x: CONICSECTION; r: POINT",
    "facts": "RightVertex(x) = r"
},
{
    "assertion": "Min ( Slope ( OverlappingLine ( LINESEGMENT: T ) ) ) equals Area ( CONICSECTION: a )",
    "id": 4243,
    "declarations": "T: LINESEGMENT; a: CONICSECTION",
    "facts": "Min(Slope(OverlappingLine(T))) = Area(a)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: b ) equals LowerFocus ( CONICSECTION: w )",
    "id": 4244,
    "declarations": "b: CONICSECTION; w: CONICSECTION",
    "facts": "UpperVertex(b) = LowerFocus(w)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: N, TRIANGLE: i ) equals BOOL: True",
    "id": 4245,
    "declarations": "N: CIRCLE; i: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(N, i) = True"
},
{
    "assertion": "Area ( CONICSECTION: c ) equals NUMBER: 53",
    "id": 4246,
    "declarations": "c: CONICSECTION; 53: NUMBER",
    "facts": "Area(c) = 53"
},
{
    "assertion": "Endpoint ( LINESEGMENT: l ) equals LeftFocus ( CONICSECTION: q )",
    "id": 4247,
    "declarations": "l: LINESEGMENT; q: CONICSECTION",
    "facts": "Endpoint(l) = LeftFocus(q)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: p ) equals MajorAxis ( ELLIPSE: t )",
    "id": 4248,
    "declarations": "p: ELLIPSE; t: ELLIPSE",
    "facts": "MajorAxis(p) = MajorAxis(t)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: q ) equals RightFocus ( CONICSECTION: l )",
    "id": 4249,
    "declarations": "q: CONICSECTION; l: CONICSECTION",
    "facts": "UpperVertex(q) = RightFocus(l)"
},
{
    "assertion": "IsChordOf ( LINESEGMENT: E, CONICSECTION: G ) equals BOOL: False",
    "id": 4250,
    "declarations": "E: LINESEGMENT; G: CONICSECTION; False: BOOL",
    "facts": "IsChordOf(E, G) = False"
},
{
    "assertion": "Abs ( LINESEGMENT: a ) equals NUMBER: -65",
    "id": 4251,
    "declarations": "a: LINESEGMENT; -65: NUMBER",
    "facts": "Abs(a) = -65"
},
{
    "assertion": "Inclination ( LINE: L ) equals NUMBER: 55",
    "id": 4252,
    "declarations": "L: LINE; 55: NUMBER",
    "facts": "Inclination(L) = 55"
},
{
    "assertion": "LowerFocus ( CONICSECTION: R ) equals POINT: w",
    "id": 4253,
    "declarations": "R: CONICSECTION; w: POINT",
    "facts": "LowerFocus(R) = w"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: H ) equals LINE: K",
    "id": 4254,
    "declarations": "H: LINESEGMENT; K: LINE",
    "facts": "OverlappingLine(H) = K"
},
{
    "assertion": "Incenter ( TRIANGLE: D ) equals POINT: Q",
    "id": 4255,
    "declarations": "D: TRIANGLE; Q: POINT",
    "facts": "Incenter(D) = Q"
},
{
    "assertion": "AngleOf ( UpperVertex ( CONICSECTION: u ), POINT: Y, POINT: v ) equals AngleOf ( UpperVertex ( CONICSECTION: Y ), POINT: I, POINT: o )",
    "id": 4256,
    "declarations": "u: CONICSECTION; Y: POINT; v: POINT; Y: CONICSECTION; I: POINT; o: POINT",
    "facts": "AngleOf(UpperVertex(u), Y, v) = AngleOf(UpperVertex(Y), I, o)"
},
{
    "assertion": "Coordinate ( POINT: N ) equals ( Distance ( LowerVertex ( CONICSECTION: D ), UpperVertex ( CONICSECTION: T ) ), Quadrant ( Orthocenter ( TRIANGLE: j ) ) )",
    "id": 4257,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "CircumCircle ( TRIANGLE: n ) equals CIRCLE: T",
    "id": 4258,
    "declarations": "n: TRIANGLE; T: CIRCLE",
    "facts": "CircumCircle(n) = T"
},
{
    "assertion": "Center ( CONICSECTION: L ) equals POINT: s",
    "id": 4259,
    "declarations": "L: CONICSECTION; s: POINT",
    "facts": "Center(L) = s"
},
{
    "assertion": "RightPart ( HYPERBOLA: N ) equals CURVE: e",
    "id": 4260,
    "declarations": "N: HYPERBOLA; e: CURVE",
    "facts": "RightPart(N) = e"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: G ) equals LINE: E",
    "id": 4261,
    "declarations": "G: LINESEGMENT; E: LINE",
    "facts": "PerpendicularBisector(G) = E"
},
{
    "assertion": "Inclination ( LINE: S ) equals NUMBER: -27",
    "id": 4262,
    "declarations": "S: LINE; -27: NUMBER",
    "facts": "Inclination(S) = -27"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: B ) equals LINE: P",
    "id": 4263,
    "declarations": "B: CONICSECTION; P: LINE",
    "facts": "RightDirectrix(B) = P"
},
{
    "assertion": "Min ( NUMBER: -56 ) equals DotProduct ( VECTOR: v, VECTOR: A )",
    "id": 4264,
    "declarations": "-56: NUMBER; v: VECTOR; A: VECTOR",
    "facts": "Min(-56) = DotProduct(v, A)"
},
{
    "assertion": "RightVertex ( CONICSECTION: l ) equals POINT: E",
    "id": 4265,
    "declarations": "l: CONICSECTION; E: POINT",
    "facts": "RightVertex(l) = E"
},
{
    "assertion": "VectorOf ( POINT: U, LowerVertex ( CONICSECTION: R ) ) equals VECTOR: y",
    "id": 4266,
    "declarations": "U: POINT; R: CONICSECTION; y: VECTOR",
    "facts": "VectorOf(U, LowerVertex(R)) = y"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: l ) equals LINE: f",
    "id": 4267,
    "declarations": "l: LINESEGMENT; f: LINE",
    "facts": "OverlappingLine(l) = f"
},
{
    "assertion": "FootPoint ( LeftDirectrix ( CONICSECTION: q ), LINE: d ) equals RightFocus ( CONICSECTION: H )",
    "id": 4268,
    "declarations": "q: CONICSECTION; d: LINE; H: CONICSECTION",
    "facts": "FootPoint(LeftDirectrix(q), d) = RightFocus(H)"
},
{
    "assertion": "Directrix ( CONICSECTION: N ) equals RightDirectrix ( CONICSECTION: K )",
    "id": 4269,
    "declarations": "N: CONICSECTION; K: CONICSECTION",
    "facts": "Directrix(N) = RightDirectrix(K)"
},
{
    "assertion": "Area ( CONICSECTION: r ) equals HalfFocalLength ( CONICSECTION: C )",
    "id": 4270,
    "declarations": "r: CONICSECTION; C: CONICSECTION",
    "facts": "Area(r) = HalfFocalLength(C)"
},
{
    "assertion": "ApplyUnit ( lg ( Slope ( LINE: b ) ), DEGREESTR: degree )",
    "id": 4271,
    "declarations": "b: LINE; degree: DEGREESTR",
    "facts": "ApplyUnit(lg(Slope(b)), degree) = None"
},
{
    "assertion": "Max ( NUMBER: -53 ) equals NUMBER: 90",
    "id": 4272,
    "declarations": "-53: NUMBER; 90: NUMBER",
    "facts": "Max(-53) = 90"
},
{
    "assertion": "RightVertex ( CONICSECTION: x ) equals LowerVertex ( CONICSECTION: m )",
    "id": 4273,
    "declarations": "x: CONICSECTION; m: CONICSECTION",
    "facts": "RightVertex(x) = LowerVertex(m)"
},
{
    "assertion": "IsCircumCircle ( CircumCircle ( TRIANGLE: I ), TRIANGLE: q ) equals BOOL: False",
    "id": 4274,
    "declarations": "I: TRIANGLE; q: TRIANGLE; False: BOOL",
    "facts": "IsCircumCircle(CircumCircle(I), q) = False"
},
{
    "assertion": "Vertex ( CONICSECTION: d ) equals RightFocus ( CONICSECTION: Q )",
    "id": 4275,
    "declarations": "d: CONICSECTION; Q: CONICSECTION",
    "facts": "Vertex(d) = RightFocus(Q)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: j ) equals LeftVertex ( CONICSECTION: Z )",
    "id": 4276,
    "declarations": "j: CONICSECTION; Z: CONICSECTION",
    "facts": "UpperVertex(j) = LeftVertex(Z)"
},
{
    "assertion": "Intersection ( CURVE: w, CURVE: f ) equals RightVertex ( CONICSECTION: S )",
    "id": 4277,
    "declarations": "w: CURVE; f: CURVE; S: CONICSECTION",
    "facts": "Intersection(w, f) = RightVertex(S)"
},
{
    "assertion": "TangentOfPoint ( POINT: S, CURVE: z ) equals PerpendicularBisector ( RealAxis ( ELLIPSE: U ) )",
    "id": 4278,
    "declarations": "S: POINT; z: CURVE; U: ELLIPSE",
    "facts": "TangentOfPoint(S, z) = PerpendicularBisector(RealAxis(U))"
},
{
    "assertion": "Locus ( POINT: Z ) equals CURVE: n",
    "id": 4279,
    "declarations": "Z: POINT; n: CURVE",
    "facts": "Locus(Z) = n"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: O ) equals LINE: v",
    "id": 4280,
    "declarations": "O: LINESEGMENT; v: LINE",
    "facts": "OverlappingLine(O) = v"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Y ) equals Circumcenter ( TRIANGLE: R )",
    "id": 4281,
    "declarations": "Y: CONICSECTION; R: TRIANGLE",
    "facts": "UpperVertex(Y) = Circumcenter(R)"
},
{
    "assertion": "LowerVertex ( CONICSECTION: u ) equals POINT: e",
    "id": 4282,
    "declarations": "u: CONICSECTION; e: POINT",
    "facts": "LowerVertex(u) = e"
},
{
    "assertion": "Coordinate ( POINT: e ) equals ( Quadrant ( LeftVertex ( CONICSECTION: r ) ), NUMBER: -95 )",
    "id": 4283,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Asymptote ( HYPERBOLA: j ) equals LINE: y",
    "id": 4284,
    "declarations": "j: HYPERBOLA; y: LINE",
    "facts": "Asymptote(j) = y"
},
{
    "assertion": "UpperVertex ( CONICSECTION: D ) equals POINT: b",
    "id": 4285,
    "declarations": "D: CONICSECTION; b: POINT",
    "facts": "UpperVertex(D) = b"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: F ) equals AXIS: yAxis",
    "id": 4286,
    "declarations": "F: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(F) = yAxis"
},
{
    "assertion": "NumIntersection ( Locus ( POINT: B ), CURVE: i ) equals InterReciprocal ( NUMBER: 66 )",
    "id": 4287,
    "declarations": "B: POINT; i: CURVE; 66: NUMBER",
    "facts": "NumIntersection(Locus(B), i) = InterReciprocal(66)"
},
{
    "assertion": "Projection ( LeftVertex ( CONICSECTION: o ), LINE: b ) equals UpperFocus ( CONICSECTION: M )",
    "id": 4288,
    "declarations": "o: CONICSECTION; b: LINE; M: CONICSECTION",
    "facts": "Projection(LeftVertex(o), b) = UpperFocus(M)"
},
{
    "assertion": "And ( LowerFocus ( CONICSECTION: F ) equals POINT: B, IsCircumCircle ( CIRCLE: E, TRIANGLE: X ) equals BOOL: False ) equals BOOL: False",
    "id": 4289,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Perimeter ( CONICSECTION: i ) equals Quadrant ( POINT: z )",
    "id": 4290,
    "declarations": "i: CONICSECTION; z: POINT",
    "facts": "Perimeter(i) = Quadrant(z)"
},
{
    "assertion": "TriangleOf ( POINT: L, POINT: M, POINT: W ) equals TRIANGLE: c",
    "id": 4291,
    "declarations": "L: POINT; M: POINT; W: POINT; c: TRIANGLE",
    "facts": "TriangleOf(L, M, W) = c"
},
{
    "assertion": "IsOutTangent ( CircumCircle ( TriangleOf ( FootPoint ( LINE: Y, LINE: x ), POINT: H, POINT: x ) ), CIRCLE: o ) equals BOOL: False",
    "id": 4292,
    "declarations": "Y: LINE; x: LINE; H: POINT; x: POINT; o: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(CircumCircle(TriangleOf(FootPoint(Y, x), H, x)), o) = False"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: Y ) equals LINE: e",
    "id": 4293,
    "declarations": "Y: CONICSECTION; e: LINE",
    "facts": "LeftDirectrix(Y) = e"
},
{
    "assertion": "Quadrant ( POINT: e ) equals Intercept ( PerpendicularBisector ( LINESEGMENT: O ), AXIS: xAxis )",
    "id": 4294,
    "declarations": "e: POINT; O: LINESEGMENT; xAxis: AXIS",
    "facts": "Quadrant(e) = Intercept(PerpendicularBisector(O), xAxis)"
},
{
    "assertion": "RealAxis ( ELLIPSE: c ) equals ImaginaryAxis ( ELLIPSE: C )",
    "id": 4295,
    "declarations": "c: ELLIPSE; C: ELLIPSE",
    "facts": "RealAxis(c) = ImaginaryAxis(C)"
},
{
    "assertion": "sqrt ( Abs ( LINESEGMENT: I ) ) equals Abs ( LINESEGMENT: o )",
    "id": 4296,
    "declarations": "I: LINESEGMENT; o: LINESEGMENT",
    "facts": "sqrt(Abs(I)) = Abs(o)"
},
{
    "assertion": "TangentOfPoint ( POINT: U, CURVE: M ) equals LINE: v",
    "id": 4297,
    "declarations": "U: POINT; M: CURVE; v: LINE",
    "facts": "TangentOfPoint(U, M) = v"
},
{
    "assertion": "NumIntersection ( CURVE: h, CURVE: H ) equals InterReciprocal ( lg ( Abs ( LINESEGMENT: j ) ) )",
    "id": 4298,
    "declarations": "h: CURVE; H: CURVE; j: LINESEGMENT",
    "facts": "NumIntersection(h, H) = InterReciprocal(lg(Abs(j)))"
},
{
    "assertion": "Max ( Min ( NUMBER: -7 ) ) equals XCoordinate ( UpperFocus ( CONICSECTION: L ) )",
    "id": 4299,
    "declarations": "-7: NUMBER; L: CONICSECTION",
    "facts": "Max(Min(-7)) = XCoordinate(UpperFocus(L))"
},
{
    "assertion": "Focus ( CONICSECTION: E ) equals Circumcenter ( TRIANGLE: c )",
    "id": 4300,
    "declarations": "E: CONICSECTION; c: TRIANGLE",
    "facts": "Focus(E) = Circumcenter(c)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: Q ) equals NUMBER: -68",
    "id": 4301,
    "declarations": "Q: CONICSECTION; -68: NUMBER",
    "facts": "Eccentricity(Q) = -68"
},
{
    "assertion": "IsInscribedCircle ( CircumCircle ( TRIANGLE: I ), TRIANGLE: Q ) equals BOOL: False",
    "id": 4302,
    "declarations": "I: TRIANGLE; Q: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(CircumCircle(I), Q) = False"
},
{
    "assertion": "PointOnCurve ( POINT: n, CURVE: e ) equals BOOL: True",
    "id": 4303,
    "declarations": "n: POINT; e: CURVE; True: BOOL",
    "facts": "PointOnCurve(n, e) = True"
},
{
    "assertion": "LowerFocus ( CONICSECTION: B ) equals Incenter ( TRIANGLE: m )",
    "id": 4304,
    "declarations": "B: CONICSECTION; m: TRIANGLE",
    "facts": "LowerFocus(B) = Incenter(m)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: F ) equals CIRCLE: V",
    "id": 4305,
    "declarations": "F: TRIANGLE; V: CIRCLE",
    "facts": "CircumCircle(F) = V"
},
{
    "assertion": "Intersection ( CURVE: B, CURVE: X ) equals POINT: E",
    "id": 4306,
    "declarations": "B: CURVE; X: CURVE; E: POINT",
    "facts": "Intersection(B, X) = E"
},
{
    "assertion": "FocalLength ( CONICSECTION: c ) equals NUMBER: 86",
    "id": 4307,
    "declarations": "c: CONICSECTION; 86: NUMBER",
    "facts": "FocalLength(c) = 86"
},
{
    "assertion": "Circumcenter ( TRIANGLE: w ) equals POINT: i",
    "id": 4308,
    "declarations": "w: TRIANGLE; i: POINT",
    "facts": "Circumcenter(w) = i"
},
{
    "assertion": "sqrt ( NUMBER: 48 ) equals NUMBER: 99",
    "id": 4309,
    "declarations": "48: NUMBER; 99: NUMBER",
    "facts": "sqrt(48) = 99"
},
{
    "assertion": "LocusEquation ( Orthocenter ( TRIANGLE: S ) ) equals EXPRESSION: y*space=*space2*x*space+*space3",
    "id": 4310,
    "declarations": "S: TRIANGLE; y*space=*space2*x*space+*space3: EXPRESSION",
    "facts": "LocusEquation(Orthocenter(S)) = y*space=*space2*x*space+*space3"
},
{
    "assertion": "UpperVertex ( CONICSECTION: t ) equals POINT: d",
    "id": 4311,
    "declarations": "t: CONICSECTION; d: POINT",
    "facts": "UpperVertex(t) = d"
},
{
    "assertion": "LocusEquation ( POINT: s ) equals EXPRESSION: x^2/4*space+*spacey^2/16*space=*space1",
    "id": 4312,
    "declarations": "s: POINT; x^2/4*space+*spacey^2/16*space=*space1: EXPRESSION",
    "facts": "LocusEquation(s) = x^2/4*space+*spacey^2/16*space=*space1"
},
{
    "assertion": "IsOutTangent ( CIRCLE: k, CircumCircle ( TRIANGLE: L ) ) equals BOOL: False",
    "id": 4313,
    "declarations": "k: CIRCLE; L: TRIANGLE; False: BOOL",
    "facts": "IsOutTangent(k, CircumCircle(L)) = False"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: q ) ) equals LeftVertex ( CONICSECTION: C )",
    "id": 4314,
    "declarations": "q: ELLIPSE; C: CONICSECTION",
    "facts": "Endpoint(MajorAxis(q)) = LeftVertex(C)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: T ) equals CURVE: R",
    "id": 4315,
    "declarations": "T: HYPERBOLA; R: CURVE",
    "facts": "LeftPart(T) = R"
},
{
    "assertion": "IsInTangent ( CIRCLE: C, CIRCLE: T ) equals BOOL: False",
    "id": 4316,
    "declarations": "C: CIRCLE; T: CIRCLE; False: BOOL",
    "facts": "IsInTangent(C, T) = False"
},
{
    "assertion": "Eccentricity ( CONICSECTION: S ) equals NUMBER: 30",
    "id": 4317,
    "declarations": "S: CONICSECTION; 30: NUMBER",
    "facts": "Eccentricity(S) = 30"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: H ) equals LINESEGMENT: x",
    "id": 4318,
    "declarations": "H: ELLIPSE; x: LINESEGMENT",
    "facts": "ImaginaryAxis(H) = x"
},
{
    "assertion": "RightPart ( HYPERBOLA: S ) equals CURVE: B",
    "id": 4319,
    "declarations": "S: HYPERBOLA; B: CURVE",
    "facts": "RightPart(S) = B"
},
{
    "assertion": "Perimeter ( CONICSECTION: G ) equals Length ( LINESEGMENT: B )",
    "id": 4320,
    "declarations": "G: CONICSECTION; B: LINESEGMENT",
    "facts": "Perimeter(G) = Length(B)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: n ) equals RightFocus ( CONICSECTION: E )",
    "id": 4321,
    "declarations": "n: LINESEGMENT; E: CONICSECTION",
    "facts": "Endpoint(n) = RightFocus(E)"
},
{
    "assertion": "Slope ( LINE: O ) equals YCoordinate ( Center ( CONICSECTION: k ) )",
    "id": 4322,
    "declarations": "O: LINE; k: CONICSECTION",
    "facts": "Slope(O) = YCoordinate(Center(k))"
},
{
    "assertion": "Min ( Quadrant ( POINT: P ) ) equals NUMBER: -7",
    "id": 4323,
    "declarations": "P: POINT; -7: NUMBER",
    "facts": "Min(Quadrant(P)) = -7"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: j, TRIANGLE: T ) equals BOOL: True",
    "id": 4324,
    "declarations": "j: CIRCLE; T: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(j, T) = True"
},
{
    "assertion": "IsParallel ( LINE: S, LINE: N ) equals BOOL: True",
    "id": 4325,
    "declarations": "S: LINE; N: LINE; True: BOOL",
    "facts": "IsParallel(S, N) = True"
},
{
    "assertion": "RightPart ( HYPERBOLA: V ) equals CURVE: y",
    "id": 4326,
    "declarations": "V: HYPERBOLA; y: CURVE",
    "facts": "RightPart(V) = y"
},
{
    "assertion": "Inclination ( LINE: y ) equals YCoordinate ( POINT: S )",
    "id": 4327,
    "declarations": "y: LINE; S: POINT",
    "facts": "Inclination(y) = YCoordinate(S)"
},
{
    "assertion": "sqrt ( Radius ( CIRCLE: h ) ) equals NUMBER: 16",
    "id": 4328,
    "declarations": "h: CIRCLE; 16: NUMBER",
    "facts": "sqrt(Radius(h)) = 16"
},
{
    "assertion": "TangentPoint ( LINE: H, CircumCircle ( TRIANGLE: c ) ) equals POINT: X",
    "id": 4329,
    "declarations": "H: LINE; c: TRIANGLE; X: POINT",
    "facts": "TangentPoint(H, CircumCircle(c)) = X"
},
{
    "assertion": "UpperVertex ( CONICSECTION: Z ) equals POINT: C",
    "id": 4330,
    "declarations": "Z: CONICSECTION; C: POINT",
    "facts": "UpperVertex(Z) = C"
},
{
    "assertion": "Locus ( POINT: a ) equals CURVE: h",
    "id": 4331,
    "declarations": "a: POINT; h: CURVE",
    "facts": "Locus(a) = h"
},
{
    "assertion": "LineOf ( POINT: z, POINT: h ) equals LineOf ( POINT: G, UpperFocus ( CONICSECTION: J ) )",
    "id": 4332,
    "declarations": "z: POINT; h: POINT; G: POINT; J: CONICSECTION",
    "facts": "LineOf(z, h) = LineOf(G, UpperFocus(J))"
},
{
    "assertion": "lg ( NUMBER: -18 ) equals Min ( FocalLength ( CONICSECTION: x ) )",
    "id": 4333,
    "declarations": "-18: NUMBER; x: CONICSECTION",
    "facts": "lg(-18) = Min(FocalLength(x))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: i ) equals LINE: x",
    "id": 4334,
    "declarations": "i: CONICSECTION; x: LINE",
    "facts": "RightDirectrix(i) = x"
},
{
    "assertion": "MidPoint ( LINESEGMENT: o ) equals POINT: U",
    "id": 4335,
    "declarations": "o: LINESEGMENT; U: POINT",
    "facts": "MidPoint(o) = U"
},
{
    "assertion": "FocalLength ( CONICSECTION: u ) equals InterReciprocal ( Slope ( LINE: f ) )",
    "id": 4336,
    "declarations": "u: CONICSECTION; f: LINE",
    "facts": "FocalLength(u) = InterReciprocal(Slope(f))"
},
{
    "assertion": "Coordinate ( Orthocenter ( TRIANGLE: F ) ) equals ( Abs ( LINESEGMENT: l ), DotProduct ( VECTOR: E, VECTOR: Q ) )",
    "id": 4337,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: z ) equals ImaginaryAxis ( ELLIPSE: R )",
    "id": 4338,
    "declarations": "z: ELLIPSE; R: ELLIPSE",
    "facts": "ImaginaryAxis(z) = ImaginaryAxis(R)"
},
{
    "assertion": "Intercept ( PerpendicularBisector ( LINESEGMENT: m ), AXIS: yAxis ) equals NUMBER: 86",
    "id": 4339,
    "declarations": "m: LINESEGMENT; yAxis: AXIS; 86: NUMBER",
    "facts": "Intercept(PerpendicularBisector(m), yAxis) = 86"
},
{
    "assertion": "And ( IsPerpendicular ( LINE: B, LeftDirectrix ( CONICSECTION: R ) ) equals BOOL: False, FootPoint ( LineOf ( UpperVertex ( CONICSECTION: x ), POINT: G ), LINE: N ) equals RightFocus ( CONICSECTION: Z ) ) equals BOOL: True",
    "id": 4340,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Intersection ( CURVE: K, CURVE: v ) equals POINT: k",
    "id": 4341,
    "declarations": "K: CURVE; v: CURVE; k: POINT",
    "facts": "Intersection(K, v) = k"
},
{
    "assertion": "PointOnCurve ( LowerFocus ( CONICSECTION: L ), CURVE: j ) equals BOOL: True",
    "id": 4342,
    "declarations": "L: CONICSECTION; j: CURVE; True: BOOL",
    "facts": "PointOnCurve(LowerFocus(L), j) = True"
},
{
    "assertion": "Eccentricity ( CONICSECTION: y ) equals NUMBER: 68",
    "id": 4343,
    "declarations": "y: CONICSECTION; 68: NUMBER",
    "facts": "Eccentricity(y) = 68"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: n, TRIANGLE: M ) equals BOOL: True",
    "id": 4344,
    "declarations": "n: CIRCLE; M: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(n, M) = True"
},
{
    "assertion": "Area ( CONICSECTION: M ) equals Quadrant ( UpperFocus ( CONICSECTION: B ) )",
    "id": 4345,
    "declarations": "M: CONICSECTION; B: CONICSECTION",
    "facts": "Area(M) = Quadrant(UpperFocus(B))"
},
{
    "assertion": "Area ( CONICSECTION: l ) equals XCoordinate ( POINT: S )",
    "id": 4346,
    "declarations": "l: CONICSECTION; S: POINT",
    "facts": "Area(l) = XCoordinate(S)"
},
{
    "assertion": "InterReciprocal ( lg ( XCoordinate ( POINT: P ) ) ) equals XCoordinate ( POINT: T )",
    "id": 4347,
    "declarations": "P: POINT; T: POINT",
    "facts": "InterReciprocal(lg(XCoordinate(P))) = XCoordinate(T)"
},
{
    "assertion": "Distance ( Center ( CONICSECTION: L ), Projection ( Center ( CONICSECTION: G ), LINE: v ) ) equals YCoordinate ( UpperFocus ( CONICSECTION: c ) )",
    "id": 4348,
    "declarations": "L: CONICSECTION; G: CONICSECTION; v: LINE; c: CONICSECTION",
    "facts": "Distance(Center(L), Projection(Center(G), v)) = YCoordinate(UpperFocus(c))"
},
{
    "assertion": "VectorOf ( POINT: S, UpperFocus ( CONICSECTION: v ) ) equals VECTOR: k",
    "id": 4349,
    "declarations": "S: POINT; v: CONICSECTION; k: VECTOR",
    "facts": "VectorOf(S, UpperFocus(v)) = k"
},
{
    "assertion": "UpperVertex ( CONICSECTION: J ) equals FootPoint ( LINE: P, LINE: x )",
    "id": 4350,
    "declarations": "J: CONICSECTION; P: LINE; x: LINE",
    "facts": "UpperVertex(J) = FootPoint(P, x)"
},
{
    "assertion": "Slope ( LINE: m ) equals Slope ( LINE: V )",
    "id": 4351,
    "declarations": "m: LINE; V: LINE",
    "facts": "Slope(m) = Slope(V)"
},
{
    "assertion": "IsPerpendicular ( LeftDirectrix ( CONICSECTION: x ), LINE: t ) equals BOOL: True",
    "id": 4352,
    "declarations": "x: CONICSECTION; t: LINE; True: BOOL",
    "facts": "IsPerpendicular(LeftDirectrix(x), t) = True"
},
{
    "assertion": "Locus ( LeftVertex ( CONICSECTION: p ) ) equals CURVE: u",
    "id": 4353,
    "declarations": "p: CONICSECTION; u: CURVE",
    "facts": "Locus(LeftVertex(p)) = u"
},
{
    "assertion": "Circumcenter ( TRIANGLE: a ) equals Circumcenter ( TRIANGLE: e )",
    "id": 4354,
    "declarations": "a: TRIANGLE; e: TRIANGLE",
    "facts": "Circumcenter(a) = Circumcenter(e)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: J ) equals Center ( CONICSECTION: e )",
    "id": 4355,
    "declarations": "J: CONICSECTION; e: CONICSECTION",
    "facts": "LowerFocus(J) = Center(e)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: X ) equals LineSegmentOf ( RightFocus ( CONICSECTION: d ), LeftFocus ( CONICSECTION: i ) )",
    "id": 4356,
    "declarations": "X: ELLIPSE; d: CONICSECTION; i: CONICSECTION",
    "facts": "ImaginaryAxis(X) = LineSegmentOf(RightFocus(d), LeftFocus(i))"
},
{
    "assertion": "Focus ( CONICSECTION: a ) equals Projection ( Center ( CONICSECTION: Z ), LINE: s )",
    "id": 4357,
    "declarations": "a: CONICSECTION; Z: CONICSECTION; s: LINE",
    "facts": "Focus(a) = Projection(Center(Z), s)"
},
{
    "assertion": "FocalLength ( CONICSECTION: S ) equals Abs ( ImaginaryAxis ( ELLIPSE: g ) )",
    "id": 4358,
    "declarations": "S: CONICSECTION; g: ELLIPSE",
    "facts": "FocalLength(S) = Abs(ImaginaryAxis(g))"
},
{
    "assertion": "Min ( Min ( Eccentricity ( CONICSECTION: i ) ) ) equals lg ( Min ( NUMBER: -57 ) )",
    "id": 4359,
    "declarations": "i: CONICSECTION; -57: NUMBER",
    "facts": "Min(Min(Eccentricity(i))) = lg(Min(-57))"
},
{
    "assertion": "Locus ( MidPoint ( LINESEGMENT: L ) ) equals CURVE: f",
    "id": 4360,
    "declarations": "L: LINESEGMENT; f: CURVE",
    "facts": "Locus(MidPoint(L)) = f"
},
{
    "assertion": "Area ( CONICSECTION: B ) equals Intercept ( LINE: h, AXIS: xAxis )",
    "id": 4361,
    "declarations": "B: CONICSECTION; h: LINE; xAxis: AXIS",
    "facts": "Area(B) = Intercept(h, xAxis)"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: C ) equals LINE: I",
    "id": 4362,
    "declarations": "C: CONICSECTION; I: LINE",
    "facts": "LeftDirectrix(C) = I"
},
{
    "assertion": "LowerFocus ( CONICSECTION: P ) equals UpperFocus ( CONICSECTION: l )",
    "id": 4363,
    "declarations": "P: CONICSECTION; l: CONICSECTION",
    "facts": "LowerFocus(P) = UpperFocus(l)"
},
{
    "assertion": "Directrix ( CONICSECTION: f ) equals LINE: V",
    "id": 4364,
    "declarations": "f: CONICSECTION; V: LINE",
    "facts": "Directrix(f) = V"
},
{
    "assertion": "IsOutTangent ( CIRCLE: A, CIRCLE: n ) equals BOOL: False",
    "id": 4365,
    "declarations": "A: CIRCLE; n: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(A, n) = False"
},
{
    "assertion": "Area ( CONICSECTION: Y ) equals NUMBER: -62",
    "id": 4366,
    "declarations": "Y: CONICSECTION; -62: NUMBER",
    "facts": "Area(Y) = -62"
},
{
    "assertion": "RightFocus ( CONICSECTION: S ) equals RightFocus ( CONICSECTION: e )",
    "id": 4367,
    "declarations": "S: CONICSECTION; e: CONICSECTION",
    "facts": "RightFocus(S) = RightFocus(e)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 90, DEGREESTR: degree )",
    "id": 4368,
    "declarations": "90: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(90, degree) = None"
},
{
    "assertion": "Area ( CONICSECTION: i ) equals Quadrant ( LeftVertex ( CONICSECTION: J ) )",
    "id": 4369,
    "declarations": "i: CONICSECTION; J: CONICSECTION",
    "facts": "Area(i) = Quadrant(LeftVertex(J))"
},
{
    "assertion": "Diameter ( CIRCLE: W ) equals XCoordinate ( Projection ( Orthocenter ( TRIANGLE: Y ), LeftDirectrix ( CONICSECTION: Q ) ) )",
    "id": 4370,
    "declarations": "W: CIRCLE; Y: TRIANGLE; Q: CONICSECTION",
    "facts": "Diameter(W) = XCoordinate(Projection(Orthocenter(Y), LeftDirectrix(Q)))"
},
{
    "assertion": "InterceptChord ( OverlappingLine ( LINESEGMENT: x ), CONICSECTION: U ) equals LineSegmentOf ( Projection ( POINT: V, OverlappingLine ( LINESEGMENT: P ) ), POINT: E )",
    "id": 4371,
    "declarations": "x: LINESEGMENT; U: CONICSECTION; V: POINT; P: LINESEGMENT; E: POINT",
    "facts": "InterceptChord(OverlappingLine(x), U) = LineSegmentOf(Projection(V, OverlappingLine(P)), E)"
},
{
    "assertion": "Max ( YCoordinate ( Center ( CONICSECTION: x ) ) ) equals NUMBER: 10",
    "id": 4372,
    "declarations": "x: CONICSECTION; 10: NUMBER",
    "facts": "Max(YCoordinate(Center(x))) = 10"
},
{
    "assertion": "Endpoint ( LINESEGMENT: d ) equals POINT: h",
    "id": 4373,
    "declarations": "d: LINESEGMENT; h: POINT",
    "facts": "Endpoint(d) = h"
},
{
    "assertion": "sqrt ( sqrt ( NumIntersection ( CURVE: S, RightPart ( HYPERBOLA: i ) ) ) ) equals NUMBER: 85",
    "id": 4374,
    "declarations": "S: CURVE; i: HYPERBOLA; 85: NUMBER",
    "facts": "sqrt(sqrt(NumIntersection(S, RightPart(i)))) = 85"
},
{
    "assertion": "Area ( CONICSECTION: T ) equals NUMBER: -42",
    "id": 4375,
    "declarations": "T: CONICSECTION; -42: NUMBER",
    "facts": "Area(T) = -42"
},
{
    "assertion": "Vertex ( CONICSECTION: c ) equals LeftFocus ( CONICSECTION: b )",
    "id": 4376,
    "declarations": "c: CONICSECTION; b: CONICSECTION",
    "facts": "Vertex(c) = LeftFocus(b)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: k ) equals CIRCLE: h",
    "id": 4377,
    "declarations": "k: TRIANGLE; h: CIRCLE",
    "facts": "CircumCircle(k) = h"
},
{
    "assertion": "Focus ( CONICSECTION: c ) equals POINT: D",
    "id": 4378,
    "declarations": "c: CONICSECTION; D: POINT",
    "facts": "Focus(c) = D"
},
{
    "assertion": "lg ( NUMBER: -29 ) equals Radius ( CIRCLE: a )",
    "id": 4379,
    "declarations": "-29: NUMBER; a: CIRCLE",
    "facts": "lg(-29) = Radius(a)"
},
{
    "assertion": "Diameter ( CIRCLE: l ) equals NUMBER: -6",
    "id": 4380,
    "declarations": "l: CIRCLE; -6: NUMBER",
    "facts": "Diameter(l) = -6"
},
{
    "assertion": "NumIntersection ( CURVE: a, RightPart ( HYPERBOLA: x ) ) equals Perimeter ( CONICSECTION: g )",
    "id": 4381,
    "declarations": "a: CURVE; x: HYPERBOLA; g: CONICSECTION",
    "facts": "NumIntersection(a, RightPart(x)) = Perimeter(g)"
},
{
    "assertion": "Expression ( CURVE: Q ) equals EXPRESSION: x^2*space+*spacexy*space+*spacey^2*space=*space1",
    "id": 4382,
    "declarations": "Q: CURVE; x^2*space+*spacexy*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "Expression(Q) = x^2*space+*spacexy*space+*spacey^2*space=*space1"
},
{
    "assertion": "Max ( lg ( XCoordinate ( POINT: D ) ) ) equals YCoordinate ( POINT: b )",
    "id": 4383,
    "declarations": "D: POINT; b: POINT",
    "facts": "Max(lg(XCoordinate(D))) = YCoordinate(b)"
},
{
    "assertion": "And ( Directrix ( CONICSECTION: L ) equals LINE: m, AngleOf ( POINT: t, POINT: j, POINT: P ) equals ApplyUnit ( XCoordinate ( POINT: o ), DEGREESTR: degree ) ) equals BOOL: True",
    "id": 4384,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Incenter ( TRIANGLE: f ) equals POINT: U",
    "id": 4385,
    "declarations": "f: TRIANGLE; U: POINT",
    "facts": "Incenter(f) = U"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: d ) ) equals NUMBER: 62",
    "id": 4386,
    "declarations": "d: TRIANGLE; 62: NUMBER",
    "facts": "Radius(CircumCircle(d)) = 62"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: j ) equals LINE: C",
    "id": 4387,
    "declarations": "j: LINESEGMENT; C: LINE",
    "facts": "OverlappingLine(j) = C"
},
{
    "assertion": "InterceptChord ( LINE: I, CONICSECTION: q ) equals LINESEGMENT: J",
    "id": 4388,
    "declarations": "I: LINE; q: CONICSECTION; J: LINESEGMENT",
    "facts": "InterceptChord(I, q) = J"
},
{
    "assertion": "OverlappingLine ( RealAxis ( ELLIPSE: X ) ) equals LINE: A",
    "id": 4389,
    "declarations": "X: ELLIPSE; A: LINE",
    "facts": "OverlappingLine(RealAxis(X)) = A"
},
{
    "assertion": "Negation ( IsIntersect ( CURVE: K, RightPart ( HYPERBOLA: Q ) ) equals BOOL: False ) equals BOOL: False",
    "id": 4390,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Quadrant ( LeftVertex ( CONICSECTION: F ) ) equals sqrt ( YCoordinate ( Orthocenter ( TRIANGLE: h ) ) )",
    "id": 4391,
    "declarations": "F: CONICSECTION; h: TRIANGLE",
    "facts": "Quadrant(LeftVertex(F)) = sqrt(YCoordinate(Orthocenter(h)))"
},
{
    "assertion": "PointOnCurve ( FootPoint ( LINE: O, LINE: k ), CURVE: H ) equals BOOL: False",
    "id": 4392,
    "declarations": "O: LINE; k: LINE; H: CURVE; False: BOOL",
    "facts": "PointOnCurve(FootPoint(O, k), H) = False"
},
{
    "assertion": "RightFocus ( CONICSECTION: G ) equals UpperFocus ( CONICSECTION: S )",
    "id": 4393,
    "declarations": "G: CONICSECTION; S: CONICSECTION",
    "facts": "RightFocus(G) = UpperFocus(S)"
},
{
    "assertion": "RightFocus ( CONICSECTION: E ) equals LeftVertex ( CONICSECTION: q )",
    "id": 4394,
    "declarations": "E: CONICSECTION; q: CONICSECTION",
    "facts": "RightFocus(E) = LeftVertex(q)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: n ) equals POINT: s",
    "id": 4395,
    "declarations": "n: CONICSECTION; s: POINT",
    "facts": "UpperVertex(n) = s"
},
{
    "assertion": "YCoordinate ( RightVertex ( CONICSECTION: k ) ) equals Abs ( LINESEGMENT: f )",
    "id": 4396,
    "declarations": "k: CONICSECTION; f: LINESEGMENT",
    "facts": "YCoordinate(RightVertex(k)) = Abs(f)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: Q ) equals RightFocus ( CONICSECTION: x )",
    "id": 4397,
    "declarations": "Q: CONICSECTION; x: CONICSECTION",
    "facts": "LowerFocus(Q) = RightFocus(x)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: D ) equals POINT: U",
    "id": 4398,
    "declarations": "D: CONICSECTION; U: POINT",
    "facts": "LowerFocus(D) = U"
},
{
    "assertion": "Area ( CONICSECTION: Z ) equals FocalLength ( CONICSECTION: b )",
    "id": 4399,
    "declarations": "Z: CONICSECTION; b: CONICSECTION",
    "facts": "Area(Z) = FocalLength(b)"
},
{
    "assertion": "IsIntersect ( CURVE: X, CURVE: Q ) equals BOOL: False",
    "id": 4400,
    "declarations": "X: CURVE; Q: CURVE; False: BOOL",
    "facts": "IsIntersect(X, Q) = False"
},
{
    "assertion": "RightPart ( HYPERBOLA: j ) equals CURVE: O",
    "id": 4401,
    "declarations": "j: HYPERBOLA; O: CURVE",
    "facts": "RightPart(j) = O"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: C ) equals LeftDirectrix ( CONICSECTION: K )",
    "id": 4402,
    "declarations": "C: CONICSECTION; K: CONICSECTION",
    "facts": "LeftDirectrix(C) = LeftDirectrix(K)"
},
{
    "assertion": "Directrix ( CONICSECTION: K ) equals LINE: w",
    "id": 4403,
    "declarations": "K: CONICSECTION; w: LINE",
    "facts": "Directrix(K) = w"
},
{
    "assertion": "CircumCircle ( TRIANGLE: I ) equals CIRCLE: m",
    "id": 4404,
    "declarations": "I: TRIANGLE; m: CIRCLE",
    "facts": "CircumCircle(I) = m"
},
{
    "assertion": "IsOutTangent ( CIRCLE: O, CIRCLE: C ) equals BOOL: True",
    "id": 4405,
    "declarations": "O: CIRCLE; C: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(O, C) = True"
},
{
    "assertion": "CircumCircle ( TRIANGLE: A ) equals CIRCLE: L",
    "id": 4406,
    "declarations": "A: TRIANGLE; L: CIRCLE",
    "facts": "CircumCircle(A) = L"
},
{
    "assertion": "MinorAxis ( ELLIPSE: H ) equals LINESEGMENT: c",
    "id": 4407,
    "declarations": "H: ELLIPSE; c: LINESEGMENT",
    "facts": "MinorAxis(H) = c"
},
{
    "assertion": "Inclination ( LINE: m ) equals Min ( NUMBER: -89 )",
    "id": 4408,
    "declarations": "m: LINE; -89: NUMBER",
    "facts": "Inclination(m) = Min(-89)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: d ) equals Projection ( POINT: P, LINE: g )",
    "id": 4409,
    "declarations": "d: CONICSECTION; P: POINT; g: LINE",
    "facts": "UpperVertex(d) = Projection(P, g)"
},
{
    "assertion": "Center ( CONICSECTION: l ) equals Center ( CONICSECTION: Z )",
    "id": 4410,
    "declarations": "l: CONICSECTION; Z: CONICSECTION",
    "facts": "Center(l) = Center(Z)"
},
{
    "assertion": "RightFocus ( CONICSECTION: m ) equals POINT: u",
    "id": 4411,
    "declarations": "m: CONICSECTION; u: POINT",
    "facts": "RightFocus(m) = u"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: E ) equals LINE: d",
    "id": 4412,
    "declarations": "E: CONICSECTION; d: LINE",
    "facts": "LeftDirectrix(E) = d"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: T ) equals LINE: V",
    "id": 4413,
    "declarations": "T: LINESEGMENT; V: LINE",
    "facts": "PerpendicularBisector(T) = V"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: P ) equals LINE: w",
    "id": 4414,
    "declarations": "P: LINESEGMENT; w: LINE",
    "facts": "OverlappingLine(P) = w"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: v ) equals LINE: V",
    "id": 4415,
    "declarations": "v: LINESEGMENT; V: LINE",
    "facts": "PerpendicularBisector(v) = V"
},
{
    "assertion": "LowerFocus ( CONICSECTION: X ) equals Center ( CONICSECTION: s )",
    "id": 4416,
    "declarations": "X: CONICSECTION; s: CONICSECTION",
    "facts": "LowerFocus(X) = Center(s)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: Y ) equals LINE: E",
    "id": 4417,
    "declarations": "Y: LINESEGMENT; E: LINE",
    "facts": "OverlappingLine(Y) = E"
},
{
    "assertion": "Intersection ( CURVE: V, CURVE: v ) equals UpperVertex ( CONICSECTION: B )",
    "id": 4418,
    "declarations": "V: CURVE; v: CURVE; B: CONICSECTION",
    "facts": "Intersection(V, v) = UpperVertex(B)"
},
{
    "assertion": "MidPoint ( LINESEGMENT: m ) equals UpperFocus ( CONICSECTION: z )",
    "id": 4419,
    "declarations": "m: LINESEGMENT; z: CONICSECTION",
    "facts": "MidPoint(m) = UpperFocus(z)"
},
{
    "assertion": "TangentOnPoint ( POINT: y, CURVE: E ) equals LineOf ( POINT: H, Circumcenter ( TRIANGLE: A ) )",
    "id": 4420,
    "declarations": "y: POINT; E: CURVE; H: POINT; A: TRIANGLE",
    "facts": "TangentOnPoint(y, E) = LineOf(H, Circumcenter(A))"
},
{
    "assertion": "IsTangent ( LINE: u, CONICSECTION: n ) equals BOOL: False",
    "id": 4421,
    "declarations": "u: LINE; n: CONICSECTION; False: BOOL",
    "facts": "IsTangent(u, n) = False"
},
{
    "assertion": "Circumcenter ( TRIANGLE: v ) equals POINT: i",
    "id": 4422,
    "declarations": "v: TRIANGLE; i: POINT",
    "facts": "Circumcenter(v) = i"
},
{
    "assertion": "LowerFocus ( CONICSECTION: o ) equals POINT: P",
    "id": 4423,
    "declarations": "o: CONICSECTION; P: POINT",
    "facts": "LowerFocus(o) = P"
},
{
    "assertion": "MinorAxis ( ELLIPSE: P ) equals LINESEGMENT: L",
    "id": 4424,
    "declarations": "P: ELLIPSE; L: LINESEGMENT",
    "facts": "MinorAxis(P) = L"
},
{
    "assertion": "And ( IsChordOf ( LINESEGMENT: C, CONICSECTION: U ) equals BOOL: True, ApplyUnit ( sqrt ( InterReciprocal ( Radius ( CIRCLE: c ) ) ), DEGREESTR: degree ) ) equals BOOL: True",
    "id": 4425,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightPart ( HYPERBOLA: n ) equals CURVE: X",
    "id": 4426,
    "declarations": "n: HYPERBOLA; X: CURVE",
    "facts": "RightPart(n) = X"
},
{
    "assertion": "LowerFocus ( CONICSECTION: k ) equals Circumcenter ( TRIANGLE: S )",
    "id": 4427,
    "declarations": "k: CONICSECTION; S: TRIANGLE",
    "facts": "LowerFocus(k) = Circumcenter(S)"
},
{
    "assertion": "Radius ( CIRCLE: h ) equals XCoordinate ( POINT: U )",
    "id": 4428,
    "declarations": "h: CIRCLE; U: POINT",
    "facts": "Radius(h) = XCoordinate(U)"
},
{
    "assertion": "Radius ( CIRCLE: k ) equals XCoordinate ( POINT: m )",
    "id": 4429,
    "declarations": "k: CIRCLE; m: POINT",
    "facts": "Radius(k) = XCoordinate(m)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: P ) equals MidPoint ( LINESEGMENT: I )",
    "id": 4430,
    "declarations": "P: CONICSECTION; I: LINESEGMENT",
    "facts": "LowerFocus(P) = MidPoint(I)"
},
{
    "assertion": "Length ( MajorAxis ( ELLIPSE: O ) ) equals Eccentricity ( CONICSECTION: I )",
    "id": 4431,
    "declarations": "O: ELLIPSE; I: CONICSECTION",
    "facts": "Length(MajorAxis(O)) = Eccentricity(I)"
},
{
    "assertion": "Expression ( CURVE: X ) equals EXPRESSION: y*space=*spacex^2*space-*space4*x*space+*space4",
    "id": 4432,
    "declarations": "X: CURVE; y*space=*spacex^2*space-*space4*x*space+*space4: EXPRESSION",
    "facts": "Expression(X) = y*space=*spacex^2*space-*space4*x*space+*space4"
},
{
    "assertion": "Focus ( CONICSECTION: r ) equals Center ( CONICSECTION: L )",
    "id": 4433,
    "declarations": "r: CONICSECTION; L: CONICSECTION",
    "facts": "Focus(r) = Center(L)"
},
{
    "assertion": "Quadrant ( POINT: Z ) equals InterReciprocal ( DotProduct ( VECTOR: Q, VECTOR: q ) )",
    "id": 4434,
    "declarations": "Z: POINT; Q: VECTOR; q: VECTOR",
    "facts": "Quadrant(Z) = InterReciprocal(DotProduct(Q, q))"
},
{
    "assertion": "Directrix ( CONICSECTION: J ) equals LINE: T",
    "id": 4435,
    "declarations": "J: CONICSECTION; T: LINE",
    "facts": "Directrix(J) = T"
},
{
    "assertion": "CircumCircle ( TRIANGLE: W ) equals CIRCLE: j",
    "id": 4436,
    "declarations": "W: TRIANGLE; j: CIRCLE",
    "facts": "CircumCircle(W) = j"
},
{
    "assertion": "RealAxis ( ELLIPSE: e ) equals LINESEGMENT: I",
    "id": 4437,
    "declarations": "e: ELLIPSE; I: LINESEGMENT",
    "facts": "RealAxis(e) = I"
},
{
    "assertion": "Area ( CONICSECTION: B ) equals Inclination ( LINE: c )",
    "id": 4438,
    "declarations": "B: CONICSECTION; c: LINE",
    "facts": "Area(B) = Inclination(c)"
},
{
    "assertion": "ApplyUnit ( Intercept ( LINE: U, AXIS: xAxis ), DEGREESTR: degree )",
    "id": 4439,
    "declarations": "U: LINE; xAxis: AXIS; degree: DEGREESTR",
    "facts": "ApplyUnit(Intercept(U, xAxis), degree) = None"
},
{
    "assertion": "Radius ( CIRCLE: x ) equals NumIntersection ( CURVE: u, CURVE: Q )",
    "id": 4440,
    "declarations": "x: CIRCLE; u: CURVE; Q: CURVE",
    "facts": "Radius(x) = NumIntersection(u, Q)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: p ) equals lg ( NUMBER: 40 )",
    "id": 4441,
    "declarations": "p: CONICSECTION; 40: NUMBER",
    "facts": "HalfFocalLength(p) = lg(40)"
},
{
    "assertion": "Locus ( Incenter ( TRIANGLE: f ) ) equals CURVE: j",
    "id": 4442,
    "declarations": "f: TRIANGLE; j: CURVE",
    "facts": "Locus(Incenter(f)) = j"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: F ) equals AXIS: xAxis",
    "id": 4443,
    "declarations": "F: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(F) = xAxis"
},
{
    "assertion": "UpperVertex ( CONICSECTION: v ) equals RightVertex ( CONICSECTION: N )",
    "id": 4444,
    "declarations": "v: CONICSECTION; N: CONICSECTION",
    "facts": "UpperVertex(v) = RightVertex(N)"
},
{
    "assertion": "InterReciprocal ( NUMBER: -35 ) equals FocalLength ( CONICSECTION: k )",
    "id": 4445,
    "declarations": "-35: NUMBER; k: CONICSECTION",
    "facts": "InterReciprocal(-35) = FocalLength(k)"
},
{
    "assertion": "Area ( CONICSECTION: G ) equals Eccentricity ( CONICSECTION: C )",
    "id": 4446,
    "declarations": "G: CONICSECTION; C: CONICSECTION",
    "facts": "Area(G) = Eccentricity(C)"
},
{
    "assertion": "Diameter ( CIRCLE: v ) equals NUMBER: 32",
    "id": 4447,
    "declarations": "v: CIRCLE; 32: NUMBER",
    "facts": "Diameter(v) = 32"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: s, TRIANGLE: Y ) equals BOOL: True",
    "id": 4448,
    "declarations": "s: CIRCLE; Y: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(s, Y) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: k ) equals POINT: s",
    "id": 4449,
    "declarations": "k: TRIANGLE; s: POINT",
    "facts": "Incenter(k) = s"
},
{
    "assertion": "Inclination ( LINE: c ) equals NUMBER: 62",
    "id": 4450,
    "declarations": "c: LINE; 62: NUMBER",
    "facts": "Inclination(c) = 62"
},
{
    "assertion": "UpperVertex ( CONICSECTION: f ) equals POINT: d",
    "id": 4451,
    "declarations": "f: CONICSECTION; d: POINT",
    "facts": "UpperVertex(f) = d"
},
{
    "assertion": "InterReciprocal ( Intercept ( LINE: c, AXIS: yAxis ) ) equals NUMBER: 61",
    "id": 4452,
    "declarations": "c: LINE; yAxis: AXIS; 61: NUMBER",
    "facts": "InterReciprocal(Intercept(c, yAxis)) = 61"
},
{
    "assertion": "TangentOnPoint ( POINT: p, CURVE: k ) equals LINE: E",
    "id": 4453,
    "declarations": "p: POINT; k: CURVE; E: LINE",
    "facts": "TangentOnPoint(p, k) = E"
},
{
    "assertion": "Radius ( CIRCLE: m ) equals Area ( CONICSECTION: M )",
    "id": 4454,
    "declarations": "m: CIRCLE; M: CONICSECTION",
    "facts": "Radius(m) = Area(M)"
},
{
    "assertion": "IsIntersect ( CURVE: m, CURVE: O ) equals BOOL: True",
    "id": 4455,
    "declarations": "m: CURVE; O: CURVE; True: BOOL",
    "facts": "IsIntersect(m, O) = True"
},
{
    "assertion": "LeftPart ( HYPERBOLA: l ) equals CURVE: o",
    "id": 4456,
    "declarations": "l: HYPERBOLA; o: CURVE",
    "facts": "LeftPart(l) = o"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: r ) equals LINESEGMENT: I",
    "id": 4457,
    "declarations": "r: ELLIPSE; I: LINESEGMENT",
    "facts": "ImaginaryAxis(r) = I"
},
{
    "assertion": "MajorAxis ( ELLIPSE: y ) equals LINESEGMENT: Z",
    "id": 4458,
    "declarations": "y: ELLIPSE; Z: LINESEGMENT",
    "facts": "MajorAxis(y) = Z"
},
{
    "assertion": "Quadrant ( Orthocenter ( TRIANGLE: Y ) ) equals Inclination ( LINE: S )",
    "id": 4459,
    "declarations": "Y: TRIANGLE; S: LINE",
    "facts": "Quadrant(Orthocenter(Y)) = Inclination(S)"
},
{
    "assertion": "LeftFocus ( CONICSECTION: Z ) equals RightVertex ( CONICSECTION: q )",
    "id": 4460,
    "declarations": "Z: CONICSECTION; q: CONICSECTION",
    "facts": "LeftFocus(Z) = RightVertex(q)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: x ) equals UpperVertex ( CONICSECTION: P )",
    "id": 4461,
    "declarations": "x: CONICSECTION; P: CONICSECTION",
    "facts": "UpperVertex(x) = UpperVertex(P)"
},
{
    "assertion": "YCoordinate ( Orthocenter ( TRIANGLE: m ) ) equals Abs ( ImaginaryAxis ( ELLIPSE: c ) )",
    "id": 4462,
    "declarations": "m: TRIANGLE; c: ELLIPSE",
    "facts": "YCoordinate(Orthocenter(m)) = Abs(ImaginaryAxis(c))"
},
{
    "assertion": "Projection ( LowerVertex ( CONICSECTION: a ), LINE: M ) equals UpperVertex ( CONICSECTION: d )",
    "id": 4463,
    "declarations": "a: CONICSECTION; M: LINE; d: CONICSECTION",
    "facts": "Projection(LowerVertex(a), M) = UpperVertex(d)"
},
{
    "assertion": "Locus ( POINT: b ) equals Locus ( POINT: k )",
    "id": 4464,
    "declarations": "b: POINT; k: POINT",
    "facts": "Locus(b) = Locus(k)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: q, TRIANGLE: n ) equals BOOL: False",
    "id": 4465,
    "declarations": "q: CIRCLE; n: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(q, n) = False"
},
{
    "assertion": "XCoordinate ( LowerFocus ( CONICSECTION: w ) ) equals NUMBER: 77",
    "id": 4466,
    "declarations": "w: CONICSECTION; 77: NUMBER",
    "facts": "XCoordinate(LowerFocus(w)) = 77"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: O ) equals AXIS: yAxis",
    "id": 4467,
    "declarations": "O: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(O) = yAxis"
},
{
    "assertion": "LeftPart ( HYPERBOLA: j ) equals RightPart ( HYPERBOLA: v )",
    "id": 4468,
    "declarations": "j: HYPERBOLA; v: HYPERBOLA",
    "facts": "LeftPart(j) = RightPart(v)"
},
{
    "assertion": "Abs ( LINESEGMENT: g ) equals NUMBER: -9",
    "id": 4469,
    "declarations": "g: LINESEGMENT; -9: NUMBER",
    "facts": "Abs(g) = -9"
},
{
    "assertion": "InterReciprocal ( Length ( LINESEGMENT: T ) ) equals XCoordinate ( LowerFocus ( CONICSECTION: C ) )",
    "id": 4470,
    "declarations": "T: LINESEGMENT; C: CONICSECTION",
    "facts": "InterReciprocal(Length(T)) = XCoordinate(LowerFocus(C))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: y ) equals LINE: S",
    "id": 4471,
    "declarations": "y: CONICSECTION; S: LINE",
    "facts": "RightDirectrix(y) = S"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: f ) ) equals CURVE: a",
    "id": 4472,
    "declarations": "f: CONICSECTION; a: CURVE",
    "facts": "Locus(LeftFocus(f)) = a"
},
{
    "assertion": "FocalLength ( CONICSECTION: q ) equals Area ( CONICSECTION: H )",
    "id": 4473,
    "declarations": "q: CONICSECTION; H: CONICSECTION",
    "facts": "FocalLength(q) = Area(H)"
},
{
    "assertion": "Radius ( CIRCLE: k ) equals NUMBER: -90",
    "id": 4474,
    "declarations": "k: CIRCLE; -90: NUMBER",
    "facts": "Radius(k) = -90"
},
{
    "assertion": "Diameter ( CIRCLE: e ) equals lg ( lg ( HalfFocalLength ( CONICSECTION: S ) ) )",
    "id": 4475,
    "declarations": "e: CIRCLE; S: CONICSECTION",
    "facts": "Diameter(e) = lg(lg(HalfFocalLength(S)))"
},
{
    "assertion": "DotProduct ( VECTOR: c, VECTOR: F ) equals NumIntersection ( CURVE: H, Locus ( POINT: B ) )",
    "id": 4476,
    "declarations": "c: VECTOR; F: VECTOR; H: CURVE; B: POINT",
    "facts": "DotProduct(c, F) = NumIntersection(H, Locus(B))"
},
{
    "assertion": "LeftVertex ( CONICSECTION: b ) equals MidPoint ( LINESEGMENT: L )",
    "id": 4477,
    "declarations": "b: CONICSECTION; L: LINESEGMENT",
    "facts": "LeftVertex(b) = MidPoint(L)"
},
{
    "assertion": "sqrt ( NUMBER: 52 ) equals NUMBER: -29",
    "id": 4478,
    "declarations": "52: NUMBER; -29: NUMBER",
    "facts": "sqrt(52) = -29"
},
{
    "assertion": "And ( DotProduct ( VECTOR: R, VECTOR: g ) equals YCoordinate ( POINT: A ), Eccentricity ( CONICSECTION: h ) equals XCoordinate ( POINT: O ) ) equals BOOL: True",
    "id": 4479,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: b ) equals LINESEGMENT: o",
    "id": 4480,
    "declarations": "b: ELLIPSE; o: LINESEGMENT",
    "facts": "ImaginaryAxis(b) = o"
},
{
    "assertion": "TriangleOf ( POINT: z, UpperFocus ( CONICSECTION: D ), POINT: y ) equals TRIANGLE: m",
    "id": 4481,
    "declarations": "z: POINT; D: CONICSECTION; y: POINT; m: TRIANGLE",
    "facts": "TriangleOf(z, UpperFocus(D), y) = m"
},
{
    "assertion": "Circumcenter ( TRIANGLE: u ) equals POINT: Y",
    "id": 4482,
    "declarations": "u: TRIANGLE; Y: POINT",
    "facts": "Circumcenter(u) = Y"
},
{
    "assertion": "LowerFocus ( CONICSECTION: v ) equals POINT: f",
    "id": 4483,
    "declarations": "v: CONICSECTION; f: POINT",
    "facts": "LowerFocus(v) = f"
},
{
    "assertion": "Circumcenter ( TRIANGLE: w ) equals POINT: K",
    "id": 4484,
    "declarations": "w: TRIANGLE; K: POINT",
    "facts": "Circumcenter(w) = K"
},
{
    "assertion": "InterceptChord ( LINE: h, CONICSECTION: q ) equals LINESEGMENT: i",
    "id": 4485,
    "declarations": "h: LINE; q: CONICSECTION; i: LINESEGMENT",
    "facts": "InterceptChord(h, q) = i"
},
{
    "assertion": "RightPart ( HYPERBOLA: Z ) equals Locus ( LowerVertex ( CONICSECTION: M ) )",
    "id": 4486,
    "declarations": "Z: HYPERBOLA; M: CONICSECTION",
    "facts": "RightPart(Z) = Locus(LowerVertex(M))"
},
{
    "assertion": "VectorOf ( POINT: b, LeftFocus ( CONICSECTION: R ) ) equals VECTOR: y",
    "id": 4487,
    "declarations": "b: POINT; R: CONICSECTION; y: VECTOR",
    "facts": "VectorOf(b, LeftFocus(R)) = y"
},
{
    "assertion": "Center ( CONICSECTION: H ) equals LeftVertex ( CONICSECTION: W )",
    "id": 4488,
    "declarations": "H: CONICSECTION; W: CONICSECTION",
    "facts": "Center(H) = LeftVertex(W)"
},
{
    "assertion": "InterceptChord ( LeftDirectrix ( CONICSECTION: F ), CONICSECTION: W ) equals MajorAxis ( ELLIPSE: T )",
    "id": 4489,
    "declarations": "F: CONICSECTION; W: CONICSECTION; T: ELLIPSE",
    "facts": "InterceptChord(LeftDirectrix(F), W) = MajorAxis(T)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: t ) equals POINT: u",
    "id": 4490,
    "declarations": "t: TRIANGLE; u: POINT",
    "facts": "Circumcenter(t) = u"
},
{
    "assertion": "XCoordinate ( LeftFocus ( CONICSECTION: R ) ) equals NUMBER: -38",
    "id": 4491,
    "declarations": "R: CONICSECTION; -38: NUMBER",
    "facts": "XCoordinate(LeftFocus(R)) = -38"
},
{
    "assertion": "DotProduct ( VECTOR: q, VECTOR: V ) equals NUMBER: -57",
    "id": 4492,
    "declarations": "q: VECTOR; V: VECTOR; -57: NUMBER",
    "facts": "DotProduct(q, V) = -57"
},
{
    "assertion": "Projection ( POINT: u, LINE: g ) equals UpperFocus ( CONICSECTION: h )",
    "id": 4493,
    "declarations": "u: POINT; g: LINE; h: CONICSECTION",
    "facts": "Projection(u, g) = UpperFocus(h)"
},
{
    "assertion": "RealAxis ( ELLIPSE: Z ) equals InterceptChord ( RightDirectrix ( CONICSECTION: A ), CONICSECTION: b )",
    "id": 4494,
    "declarations": "Z: ELLIPSE; A: CONICSECTION; b: CONICSECTION",
    "facts": "RealAxis(Z) = InterceptChord(RightDirectrix(A), b)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: K ) equals Abs ( LINESEGMENT: Y )",
    "id": 4495,
    "declarations": "K: CONICSECTION; Y: LINESEGMENT",
    "facts": "Eccentricity(K) = Abs(Y)"
},
{
    "assertion": "RightVertex ( CONICSECTION: B ) equals Center ( CONICSECTION: d )",
    "id": 4496,
    "declarations": "B: CONICSECTION; d: CONICSECTION",
    "facts": "RightVertex(B) = Center(d)"
},
{
    "assertion": "IsTangent ( LINE: z, CONICSECTION: M ) equals BOOL: False",
    "id": 4497,
    "declarations": "z: LINE; M: CONICSECTION; False: BOOL",
    "facts": "IsTangent(z, M) = False"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: B, TRIANGLE: z ) equals BOOL: False",
    "id": 4498,
    "declarations": "B: CIRCLE; z: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(B, z) = False"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: a ) equals LINE: K",
    "id": 4499,
    "declarations": "a: LINESEGMENT; K: LINE",
    "facts": "OverlappingLine(a) = K"
},
{
    "assertion": "Radius ( CIRCLE: C ) equals Abs ( LINESEGMENT: t )",
    "id": 4500,
    "declarations": "C: CIRCLE; t: LINESEGMENT",
    "facts": "Radius(C) = Abs(t)"
},
{
    "assertion": "Inclination ( TangentOfPoint ( POINT: R, CURVE: E ) ) equals FocalLength ( CONICSECTION: f )",
    "id": 4501,
    "declarations": "R: POINT; E: CURVE; f: CONICSECTION",
    "facts": "Inclination(TangentOfPoint(R, E)) = FocalLength(f)"
},
{
    "assertion": "OverlappingLine ( MajorAxis ( ELLIPSE: z ) ) equals LINE: t",
    "id": 4502,
    "declarations": "z: ELLIPSE; t: LINE",
    "facts": "OverlappingLine(MajorAxis(z)) = t"
},
{
    "assertion": "LeftVertex ( CONICSECTION: K ) equals UpperFocus ( CONICSECTION: A )",
    "id": 4503,
    "declarations": "K: CONICSECTION; A: CONICSECTION",
    "facts": "LeftVertex(K) = UpperFocus(A)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: c, TRIANGLE: q ) equals BOOL: False",
    "id": 4504,
    "declarations": "c: CIRCLE; q: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(c, q) = False"
},
{
    "assertion": "Directrix ( CONICSECTION: R ) equals PerpendicularBisector ( LINESEGMENT: I )",
    "id": 4505,
    "declarations": "R: CONICSECTION; I: LINESEGMENT",
    "facts": "Directrix(R) = PerpendicularBisector(I)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: w ) equals NUMBER: -92",
    "id": 4506,
    "declarations": "w: CONICSECTION; -92: NUMBER",
    "facts": "Eccentricity(w) = -92"
},
{
    "assertion": "TangentOnPoint ( Center ( CONICSECTION: I ), CURVE: J ) equals LINE: e",
    "id": 4507,
    "declarations": "I: CONICSECTION; J: CURVE; e: LINE",
    "facts": "TangentOnPoint(Center(I), J) = e"
},
{
    "assertion": "CircumCircle ( TRIANGLE: h ) equals CIRCLE: k",
    "id": 4508,
    "declarations": "h: TRIANGLE; k: CIRCLE",
    "facts": "CircumCircle(h) = k"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: D ) equals AXIS: xAxis",
    "id": 4509,
    "declarations": "D: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(D) = xAxis"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: e ) equals MajorAxis ( ELLIPSE: k )",
    "id": 4510,
    "declarations": "e: ELLIPSE; k: ELLIPSE",
    "facts": "ImaginaryAxis(e) = MajorAxis(k)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: T ) equals RightVertex ( CONICSECTION: s )",
    "id": 4511,
    "declarations": "T: CONICSECTION; s: CONICSECTION",
    "facts": "LeftVertex(T) = RightVertex(s)"
},
{
    "assertion": "RealAxis ( ELLIPSE: Q ) equals MajorAxis ( ELLIPSE: C )",
    "id": 4512,
    "declarations": "Q: ELLIPSE; C: ELLIPSE",
    "facts": "RealAxis(Q) = MajorAxis(C)"
},
{
    "assertion": "IsPerpendicular ( LINE: u, LINE: g ) equals BOOL: False",
    "id": 4513,
    "declarations": "u: LINE; g: LINE; False: BOOL",
    "facts": "IsPerpendicular(u, g) = False"
},
{
    "assertion": "Center ( CONICSECTION: f ) equals LeftFocus ( CONICSECTION: u )",
    "id": 4514,
    "declarations": "f: CONICSECTION; u: CONICSECTION",
    "facts": "Center(f) = LeftFocus(u)"
},
{
    "assertion": "Focus ( CONICSECTION: z ) equals POINT: C",
    "id": 4515,
    "declarations": "z: CONICSECTION; C: POINT",
    "facts": "Focus(z) = C"
},
{
    "assertion": "LowerVertex ( CONICSECTION: d ) equals POINT: E",
    "id": 4516,
    "declarations": "d: CONICSECTION; E: POINT",
    "facts": "LowerVertex(d) = E"
},
{
    "assertion": "PointOnCurve ( LeftVertex ( CONICSECTION: Y ), CURVE: i ) equals BOOL: True",
    "id": 4517,
    "declarations": "Y: CONICSECTION; i: CURVE; True: BOOL",
    "facts": "PointOnCurve(LeftVertex(Y), i) = True"
},
{
    "assertion": "Expression ( CURVE: p ) equals Expression ( Locus ( UpperFocus ( CONICSECTION: X ) ) )",
    "id": 4518,
    "declarations": "p: CURVE; X: CONICSECTION",
    "facts": "Expression(p) = Expression(Locus(UpperFocus(X)))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: r ) equals LineOf ( Projection ( RightVertex ( CONICSECTION: v ), LINE: h ), POINT: B )",
    "id": 4519,
    "declarations": "r: HYPERBOLA; v: CONICSECTION; h: LINE; B: POINT",
    "facts": "Asymptote(r) = LineOf(Projection(RightVertex(v), h), B)"
},
{
    "assertion": "ApplyUnit ( Diameter ( CIRCLE: N ), DEGREESTR: degree )",
    "id": 4520,
    "declarations": "N: CIRCLE; degree: DEGREESTR",
    "facts": "ApplyUnit(Diameter(N), degree) = None"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: D ) equals LINE: X",
    "id": 4521,
    "declarations": "D: CONICSECTION; X: LINE",
    "facts": "RightDirectrix(D) = X"
},
{
    "assertion": "FootPoint ( RightDirectrix ( CONICSECTION: t ), LINE: h ) equals POINT: F",
    "id": 4522,
    "declarations": "t: CONICSECTION; h: LINE; F: POINT",
    "facts": "FootPoint(RightDirectrix(t), h) = F"
},
{
    "assertion": "IsTangent ( PerpendicularBisector ( MajorAxis ( ELLIPSE: v ) ), CONICSECTION: A ) equals BOOL: True",
    "id": 4523,
    "declarations": "v: ELLIPSE; A: CONICSECTION; True: BOOL",
    "facts": "IsTangent(PerpendicularBisector(MajorAxis(v)), A) = True"
},
{
    "assertion": "Incenter ( TRIANGLE: Q ) equals LeftVertex ( CONICSECTION: v )",
    "id": 4524,
    "declarations": "Q: TRIANGLE; v: CONICSECTION",
    "facts": "Incenter(Q) = LeftVertex(v)"
},
{
    "assertion": "Radius ( CIRCLE: E ) equals NUMBER: 9",
    "id": 4525,
    "declarations": "E: CIRCLE; 9: NUMBER",
    "facts": "Radius(E) = 9"
},
{
    "assertion": "Slope ( LINE: m ) equals sqrt ( InterReciprocal ( Abs ( LINESEGMENT: M ) ) )",
    "id": 4526,
    "declarations": "m: LINE; M: LINESEGMENT",
    "facts": "Slope(m) = sqrt(InterReciprocal(Abs(M)))"
},
{
    "assertion": "MinorAxis ( ELLIPSE: d ) equals LINESEGMENT: q",
    "id": 4527,
    "declarations": "d: ELLIPSE; q: LINESEGMENT",
    "facts": "MinorAxis(d) = q"
},
{
    "assertion": "RightVertex ( CONICSECTION: s ) equals UpperFocus ( CONICSECTION: m )",
    "id": 4528,
    "declarations": "s: CONICSECTION; m: CONICSECTION",
    "facts": "RightVertex(s) = UpperFocus(m)"
},
{
    "assertion": "TangentOfPoint ( POINT: b, CURVE: a ) equals LINE: z",
    "id": 4529,
    "declarations": "b: POINT; a: CURVE; z: LINE",
    "facts": "TangentOfPoint(b, a) = z"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: h ) equals PerpendicularBisector ( LINESEGMENT: X )",
    "id": 4530,
    "declarations": "h: CONICSECTION; X: LINESEGMENT",
    "facts": "LeftDirectrix(h) = PerpendicularBisector(X)"
},
{
    "assertion": "LocusEquation ( LowerFocus ( CONICSECTION: P ) ) equals EXPRESSION: x^2*space+*space4y^2*space=*space16",
    "id": 4531,
    "declarations": "P: CONICSECTION; x^2*space+*space4y^2*space=*space16: EXPRESSION",
    "facts": "LocusEquation(LowerFocus(P)) = x^2*space+*space4y^2*space=*space16"
},
{
    "assertion": "LeftPart ( HYPERBOLA: b ) equals CURVE: W",
    "id": 4532,
    "declarations": "b: HYPERBOLA; W: CURVE",
    "facts": "LeftPart(b) = W"
},
{
    "assertion": "Radius ( CIRCLE: J ) equals FocalLength ( CONICSECTION: v )",
    "id": 4533,
    "declarations": "J: CIRCLE; v: CONICSECTION",
    "facts": "Radius(J) = FocalLength(v)"
},
{
    "assertion": "lg ( NUMBER: -73 ) equals YCoordinate ( POINT: z )",
    "id": 4534,
    "declarations": "-73: NUMBER; z: POINT",
    "facts": "lg(-73) = YCoordinate(z)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: D ) equals NUMBER: -37",
    "id": 4535,
    "declarations": "D: CONICSECTION; -37: NUMBER",
    "facts": "HalfFocalLength(D) = -37"
},
{
    "assertion": "FootPoint ( LINE: W, LINE: E ) equals RightFocus ( CONICSECTION: o )",
    "id": 4536,
    "declarations": "W: LINE; E: LINE; o: CONICSECTION",
    "facts": "FootPoint(W, E) = RightFocus(o)"
},
{
    "assertion": "RightPart ( HYPERBOLA: u ) equals CURVE: D",
    "id": 4537,
    "declarations": "u: HYPERBOLA; D: CURVE",
    "facts": "RightPart(u) = D"
},
{
    "assertion": "LeftVertex ( CONICSECTION: t ) equals POINT: r",
    "id": 4538,
    "declarations": "t: CONICSECTION; r: POINT",
    "facts": "LeftVertex(t) = r"
},
{
    "assertion": "TangentPoint ( LINE: X, CIRCLE: E ) equals POINT: f",
    "id": 4539,
    "declarations": "X: LINE; E: CIRCLE; f: POINT",
    "facts": "TangentPoint(X, E) = f"
},
{
    "assertion": "IsPerpendicular ( LINE: a, LINE: A ) equals BOOL: False",
    "id": 4540,
    "declarations": "a: LINE; A: LINE; False: BOOL",
    "facts": "IsPerpendicular(a, A) = False"
},
{
    "assertion": "Negation ( LeftDirectrix ( CONICSECTION: U ) equals LINE: m ) equals BOOL: True",
    "id": 4541,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RightFocus ( CONICSECTION: g ) equals LeftFocus ( CONICSECTION: W )",
    "id": 4542,
    "declarations": "g: CONICSECTION; W: CONICSECTION",
    "facts": "RightFocus(g) = LeftFocus(W)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: C ) equals RightVertex ( CONICSECTION: S )",
    "id": 4543,
    "declarations": "C: CONICSECTION; S: CONICSECTION",
    "facts": "LowerFocus(C) = RightVertex(S)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: r ) equals MinorAxis ( ELLIPSE: S )",
    "id": 4544,
    "declarations": "r: ELLIPSE; S: ELLIPSE",
    "facts": "ImaginaryAxis(r) = MinorAxis(S)"
},
{
    "assertion": "Length ( LINESEGMENT: s ) equals NUMBER: 77",
    "id": 4545,
    "declarations": "s: LINESEGMENT; 77: NUMBER",
    "facts": "Length(s) = 77"
},
{
    "assertion": "Intercept ( LINE: M, AXIS: xAxis ) equals Min ( Area ( CONICSECTION: w ) )",
    "id": 4546,
    "declarations": "M: LINE; xAxis: AXIS; w: CONICSECTION",
    "facts": "Intercept(M, xAxis) = Min(Area(w))"
},
{
    "assertion": "RightVertex ( CONICSECTION: l ) equals RightFocus ( CONICSECTION: o )",
    "id": 4547,
    "declarations": "l: CONICSECTION; o: CONICSECTION",
    "facts": "RightVertex(l) = RightFocus(o)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: o ) equals NUMBER: 68",
    "id": 4548,
    "declarations": "o: CONICSECTION; 68: NUMBER",
    "facts": "HalfFocalLength(o) = 68"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: T ) equals LINE: F",
    "id": 4549,
    "declarations": "T: CONICSECTION; F: LINE",
    "facts": "RightDirectrix(T) = F"
},
{
    "assertion": "OverlappingLine ( RealAxis ( ELLIPSE: W ) ) equals LINE: L",
    "id": 4550,
    "declarations": "W: ELLIPSE; L: LINE",
    "facts": "OverlappingLine(RealAxis(W)) = L"
},
{
    "assertion": "IsParallel ( OverlappingLine ( LINESEGMENT: F ), LeftDirectrix ( CONICSECTION: y ) ) equals BOOL: True",
    "id": 4551,
    "declarations": "F: LINESEGMENT; y: CONICSECTION; True: BOOL",
    "facts": "IsParallel(OverlappingLine(F), LeftDirectrix(y)) = True"
},
{
    "assertion": "Eccentricity ( CONICSECTION: c ) equals Perimeter ( CONICSECTION: o )",
    "id": 4552,
    "declarations": "c: CONICSECTION; o: CONICSECTION",
    "facts": "Eccentricity(c) = Perimeter(o)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: n ) equals POINT: b",
    "id": 4553,
    "declarations": "n: CONICSECTION; b: POINT",
    "facts": "UpperFocus(n) = b"
},
{
    "assertion": "PerpendicularBisector ( ImaginaryAxis ( ELLIPSE: N ) ) equals PerpendicularBisector ( LINESEGMENT: c )",
    "id": 4554,
    "declarations": "N: ELLIPSE; c: LINESEGMENT",
    "facts": "PerpendicularBisector(ImaginaryAxis(N)) = PerpendicularBisector(c)"
},
{
    "assertion": "RightVertex ( CONICSECTION: C ) equals Circumcenter ( TRIANGLE: k )",
    "id": 4555,
    "declarations": "C: CONICSECTION; k: TRIANGLE",
    "facts": "RightVertex(C) = Circumcenter(k)"
},
{
    "assertion": "InterceptChord ( LINE: h, CONICSECTION: h ) equals LINESEGMENT: C",
    "id": 4556,
    "declarations": "h: LINE; h: CONICSECTION; C: LINESEGMENT",
    "facts": "InterceptChord(h, h) = C"
},
{
    "assertion": "Max ( Perimeter ( CONICSECTION: O ) ) equals Intercept ( LINE: s, AXIS: yAxis )",
    "id": 4557,
    "declarations": "O: CONICSECTION; s: LINE; yAxis: AXIS",
    "facts": "Max(Perimeter(O)) = Intercept(s, yAxis)"
},
{
    "assertion": "Vertex ( CONICSECTION: c ) equals POINT: t",
    "id": 4558,
    "declarations": "c: CONICSECTION; t: POINT",
    "facts": "Vertex(c) = t"
},
{
    "assertion": "YCoordinate ( Circumcenter ( TRIANGLE: T ) ) equals NUMBER: 58",
    "id": 4559,
    "declarations": "T: TRIANGLE; 58: NUMBER",
    "facts": "YCoordinate(Circumcenter(T)) = 58"
},
{
    "assertion": "Eccentricity ( CONICSECTION: R ) equals NUMBER: 15",
    "id": 4560,
    "declarations": "R: CONICSECTION; 15: NUMBER",
    "facts": "Eccentricity(R) = 15"
},
{
    "assertion": "UpperFocus ( CONICSECTION: d ) equals RightVertex ( CONICSECTION: H )",
    "id": 4561,
    "declarations": "d: CONICSECTION; H: CONICSECTION",
    "facts": "UpperFocus(d) = RightVertex(H)"
},
{
    "assertion": "Intercept ( LineOf ( Projection ( RightVertex ( CONICSECTION: y ), LINE: I ), POINT: N ), AXIS: yAxis ) equals NUMBER: -47",
    "id": 4562,
    "declarations": "y: CONICSECTION; I: LINE; N: POINT; yAxis: AXIS; -47: NUMBER",
    "facts": "Intercept(LineOf(Projection(RightVertex(y), I), N), yAxis) = -47"
},
{
    "assertion": "UpperFocus ( CONICSECTION: N ) equals POINT: D",
    "id": 4563,
    "declarations": "N: CONICSECTION; D: POINT",
    "facts": "UpperFocus(N) = D"
},
{
    "assertion": "UpperFocus ( CONICSECTION: k ) equals POINT: I",
    "id": 4564,
    "declarations": "k: CONICSECTION; I: POINT",
    "facts": "UpperFocus(k) = I"
},
{
    "assertion": "PointOnCurve ( RightVertex ( CONICSECTION: E ), CURVE: H ) equals BOOL: False",
    "id": 4565,
    "declarations": "E: CONICSECTION; H: CURVE; False: BOOL",
    "facts": "PointOnCurve(RightVertex(E), H) = False"
},
{
    "assertion": "Center ( CONICSECTION: X ) equals Circumcenter ( TRIANGLE: h )",
    "id": 4566,
    "declarations": "X: CONICSECTION; h: TRIANGLE",
    "facts": "Center(X) = Circumcenter(h)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: M ) equals Diameter ( CIRCLE: y )",
    "id": 4567,
    "declarations": "M: CONICSECTION; y: CIRCLE",
    "facts": "HalfFocalLength(M) = Diameter(y)"
},
{
    "assertion": "InterReciprocal ( Slope ( LINE: Q ) ) equals InterReciprocal ( Slope ( LINE: V ) )",
    "id": 4568,
    "declarations": "Q: LINE; V: LINE",
    "facts": "InterReciprocal(Slope(Q)) = InterReciprocal(Slope(V))"
},
{
    "assertion": "Min ( Eccentricity ( CONICSECTION: s ) ) equals NUMBER: 89",
    "id": 4569,
    "declarations": "s: CONICSECTION; 89: NUMBER",
    "facts": "Min(Eccentricity(s)) = 89"
},
{
    "assertion": "Focus ( CONICSECTION: N ) equals POINT: E",
    "id": 4570,
    "declarations": "N: CONICSECTION; E: POINT",
    "facts": "Focus(N) = E"
},
{
    "assertion": "sqrt ( sqrt ( NUMBER: 15 ) ) equals Perimeter ( CONICSECTION: L )",
    "id": 4571,
    "declarations": "15: NUMBER; L: CONICSECTION",
    "facts": "sqrt(sqrt(15)) = Perimeter(L)"
},
{
    "assertion": "MajorAxis ( ELLIPSE: E ) equals MinorAxis ( ELLIPSE: x )",
    "id": 4572,
    "declarations": "E: ELLIPSE; x: ELLIPSE",
    "facts": "MajorAxis(E) = MinorAxis(x)"
},
{
    "assertion": "RightFocus ( CONICSECTION: w ) equals UpperFocus ( CONICSECTION: g )",
    "id": 4573,
    "declarations": "w: CONICSECTION; g: CONICSECTION",
    "facts": "RightFocus(w) = UpperFocus(g)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: w ) equals MajorAxis ( ELLIPSE: K )",
    "id": 4574,
    "declarations": "w: ELLIPSE; K: ELLIPSE",
    "facts": "MinorAxis(w) = MajorAxis(K)"
},
{
    "assertion": "ApplyUnit ( NUMBER: 24, DEGREESTR: degree )",
    "id": 4575,
    "declarations": "24: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(24, degree) = None"
},
{
    "assertion": "Directrix ( CONICSECTION: q ) equals RightDirectrix ( CONICSECTION: E )",
    "id": 4576,
    "declarations": "q: CONICSECTION; E: CONICSECTION",
    "facts": "Directrix(q) = RightDirectrix(E)"
},
{
    "assertion": "TangentOfPoint ( Orthocenter ( TRIANGLE: j ), CURVE: c ) equals LINE: j",
    "id": 4577,
    "declarations": "j: TRIANGLE; c: CURVE; j: LINE",
    "facts": "TangentOfPoint(Orthocenter(j), c) = j"
},
{
    "assertion": "Circumcenter ( TRIANGLE: u ) equals UpperVertex ( CONICSECTION: F )",
    "id": 4578,
    "declarations": "u: TRIANGLE; F: CONICSECTION",
    "facts": "Circumcenter(u) = UpperVertex(F)"
},
{
    "assertion": "AngleOf ( Center ( CONICSECTION: G ), RightVertex ( CONICSECTION: F ), LeftFocus ( CONICSECTION: h ) ) equals AngleOf ( POINT: x, Circumcenter ( TRIANGLE: G ), POINT: k )",
    "id": 4579,
    "declarations": "G: CONICSECTION; F: CONICSECTION; h: CONICSECTION; x: POINT; G: TRIANGLE; k: POINT",
    "facts": "AngleOf(Center(G), RightVertex(F), LeftFocus(h)) = AngleOf(x, Circumcenter(G), k)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: r ) equals Radius ( CIRCLE: q )",
    "id": 4580,
    "declarations": "r: CONICSECTION; q: CIRCLE",
    "facts": "HalfFocalLength(r) = Radius(q)"
},
{
    "assertion": "IsPerpendicular ( LINE: d, LINE: x ) equals BOOL: True",
    "id": 4581,
    "declarations": "d: LINE; x: LINE; True: BOOL",
    "facts": "IsPerpendicular(d, x) = True"
},
{
    "assertion": "Orthocenter ( TRIANGLE: r ) equals Orthocenter ( TRIANGLE: G )",
    "id": 4582,
    "declarations": "r: TRIANGLE; G: TRIANGLE",
    "facts": "Orthocenter(r) = Orthocenter(G)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: d ) equals InterceptChord ( LINE: z, CONICSECTION: B )",
    "id": 4583,
    "declarations": "d: ELLIPSE; z: LINE; B: CONICSECTION",
    "facts": "MinorAxis(d) = InterceptChord(z, B)"
},
{
    "assertion": "Negation ( Inclination ( LINE: d ) equals YCoordinate ( POINT: K ) ) equals BOOL: False",
    "id": 4584,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "TriangleOf ( Projection ( LeftFocus ( CONICSECTION: N ), OverlappingLine ( LINESEGMENT: X ) ), POINT: W, POINT: U ) equals TRIANGLE: A",
    "id": 4585,
    "declarations": "N: CONICSECTION; X: LINESEGMENT; W: POINT; U: POINT; A: TRIANGLE",
    "facts": "TriangleOf(Projection(LeftFocus(N), OverlappingLine(X)), W, U) = A"
},
{
    "assertion": "Locus ( LeftFocus ( CONICSECTION: t ) ) equals CURVE: b",
    "id": 4586,
    "declarations": "t: CONICSECTION; b: CURVE",
    "facts": "Locus(LeftFocus(t)) = b"
},
{
    "assertion": "Inclination ( LINE: t ) equals XCoordinate ( Orthocenter ( TRIANGLE: U ) )",
    "id": 4587,
    "declarations": "t: LINE; U: TRIANGLE",
    "facts": "Inclination(t) = XCoordinate(Orthocenter(U))"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: c, CIRCLE: C ) equals BOOL: False",
    "id": 4588,
    "declarations": "c: LINESEGMENT; C: CIRCLE; False: BOOL",
    "facts": "IsDiameter(c, C) = False"
},
{
    "assertion": "Endpoint ( RealAxis ( ELLIPSE: Z ) ) equals LeftVertex ( CONICSECTION: v )",
    "id": 4589,
    "declarations": "Z: ELLIPSE; v: CONICSECTION",
    "facts": "Endpoint(RealAxis(Z)) = LeftVertex(v)"
},
{
    "assertion": "Perimeter ( CONICSECTION: P ) equals InterReciprocal ( Quadrant ( POINT: d ) )",
    "id": 4590,
    "declarations": "P: CONICSECTION; d: POINT",
    "facts": "Perimeter(P) = InterReciprocal(Quadrant(d))"
},
{
    "assertion": "UpperVertex ( CONICSECTION: j ) equals LeftFocus ( CONICSECTION: N )",
    "id": 4591,
    "declarations": "j: CONICSECTION; N: CONICSECTION",
    "facts": "UpperVertex(j) = LeftFocus(N)"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: j ) equals LINE: p",
    "id": 4592,
    "declarations": "j: LINESEGMENT; p: LINE",
    "facts": "OverlappingLine(j) = p"
},
{
    "assertion": "Min ( NUMBER: 51 ) equals Diameter ( CIRCLE: J )",
    "id": 4593,
    "declarations": "51: NUMBER; J: CIRCLE",
    "facts": "Min(51) = Diameter(J)"
},
{
    "assertion": "Length ( LINESEGMENT: F ) equals FocalLength ( CONICSECTION: j )",
    "id": 4594,
    "declarations": "F: LINESEGMENT; j: CONICSECTION",
    "facts": "Length(F) = FocalLength(j)"
},
{
    "assertion": "Quadrant ( POINT: v ) equals InterReciprocal ( Slope ( TangentOfPoint ( RightFocus ( CONICSECTION: Z ), LeftPart ( HYPERBOLA: X ) ) ) )",
    "id": 4595,
    "declarations": "v: POINT; Z: CONICSECTION; X: HYPERBOLA",
    "facts": "Quadrant(v) = InterReciprocal(Slope(TangentOfPoint(RightFocus(Z), LeftPart(X))))"
},
{
    "assertion": "Incenter ( TRIANGLE: A ) equals Center ( CONICSECTION: a )",
    "id": 4596,
    "declarations": "A: TRIANGLE; a: CONICSECTION",
    "facts": "Incenter(A) = Center(a)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: f ) equals FootPoint ( OverlappingLine ( LINESEGMENT: z ), LineOf ( POINT: H, POINT: P ) )",
    "id": 4597,
    "declarations": "f: LINESEGMENT; z: LINESEGMENT; H: POINT; P: POINT",
    "facts": "Endpoint(f) = FootPoint(OverlappingLine(z), LineOf(H, P))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: V ) equals UpperVertex ( CONICSECTION: C )",
    "id": 4598,
    "declarations": "V: TRIANGLE; C: CONICSECTION",
    "facts": "Orthocenter(V) = UpperVertex(C)"
},
{
    "assertion": "IsInTangent ( CIRCLE: C, CIRCLE: O ) equals BOOL: True",
    "id": 4599,
    "declarations": "C: CIRCLE; O: CIRCLE; True: BOOL",
    "facts": "IsInTangent(C, O) = True"
},
{
    "assertion": "TangentPoint ( LINE: W, CIRCLE: x ) equals POINT: P",
    "id": 4600,
    "declarations": "W: LINE; x: CIRCLE; P: POINT",
    "facts": "TangentPoint(W, x) = P"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: t, TRIANGLE: L ) equals BOOL: True",
    "id": 4601,
    "declarations": "t: CIRCLE; L: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(t, L) = True"
},
{
    "assertion": "PointOnCurve ( RightFocus ( CONICSECTION: u ), Locus ( POINT: C ) ) equals BOOL: False",
    "id": 4602,
    "declarations": "u: CONICSECTION; C: POINT; False: BOOL",
    "facts": "PointOnCurve(RightFocus(u), Locus(C)) = False"
},
{
    "assertion": "LeftPart ( HYPERBOLA: z ) equals CURVE: s",
    "id": 4603,
    "declarations": "z: HYPERBOLA; s: CURVE",
    "facts": "LeftPart(z) = s"
},
{
    "assertion": "MinorAxis ( ELLIPSE: D ) equals LINESEGMENT: s",
    "id": 4604,
    "declarations": "D: ELLIPSE; s: LINESEGMENT",
    "facts": "MinorAxis(D) = s"
},
{
    "assertion": "Min ( Intercept ( RightDirectrix ( CONICSECTION: M ), SymmetryAxis ( CONICSECTION: j ) ) ) equals NUMBER: -68",
    "id": 4605,
    "declarations": "M: CONICSECTION; j: CONICSECTION; -68: NUMBER",
    "facts": "Min(Intercept(RightDirectrix(M), SymmetryAxis(j))) = -68"
},
{
    "assertion": "Circumcenter ( TRIANGLE: u ) equals LowerFocus ( CONICSECTION: I )",
    "id": 4606,
    "declarations": "u: TRIANGLE; I: CONICSECTION",
    "facts": "Circumcenter(u) = LowerFocus(I)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: o ) equals POINT: L",
    "id": 4607,
    "declarations": "o: CONICSECTION; L: POINT",
    "facts": "LeftVertex(o) = L"
},
{
    "assertion": "TangentPoint ( LINE: N, CIRCLE: W ) equals LowerFocus ( CONICSECTION: B )",
    "id": 4608,
    "declarations": "N: LINE; W: CIRCLE; B: CONICSECTION",
    "facts": "TangentPoint(N, W) = LowerFocus(B)"
},
{
    "assertion": "Quadrant ( RightFocus ( CONICSECTION: y ) ) equals NUMBER: 25",
    "id": 4609,
    "declarations": "y: CONICSECTION; 25: NUMBER",
    "facts": "Quadrant(RightFocus(y)) = 25"
},
{
    "assertion": "Between ( Projection ( Orthocenter ( TRIANGLE: z ), LINE: N ), POINT: j, UpperVertex ( CONICSECTION: a ) ) equals BOOL: True",
    "id": 4610,
    "declarations": "z: TRIANGLE; N: LINE; j: POINT; a: CONICSECTION; True: BOOL",
    "facts": "Between(Projection(Orthocenter(z), N), j, UpperVertex(a)) = True"
},
{
    "assertion": "InterceptChord ( LINE: E, CONICSECTION: i ) equals LINESEGMENT: V",
    "id": 4611,
    "declarations": "E: LINE; i: CONICSECTION; V: LINESEGMENT",
    "facts": "InterceptChord(E, i) = V"
},
{
    "assertion": "Intersection ( Locus ( LowerFocus ( CONICSECTION: X ) ), CURVE: n ) equals LowerFocus ( CONICSECTION: d )",
    "id": 4612,
    "declarations": "X: CONICSECTION; n: CURVE; d: CONICSECTION",
    "facts": "Intersection(Locus(LowerFocus(X)), n) = LowerFocus(d)"
},
{
    "assertion": "Orthocenter ( TRIANGLE: Q ) equals POINT: M",
    "id": 4613,
    "declarations": "Q: TRIANGLE; M: POINT",
    "facts": "Orthocenter(Q) = M"
},
{
    "assertion": "LeftPart ( HYPERBOLA: A ) equals CURVE: L",
    "id": 4614,
    "declarations": "A: HYPERBOLA; L: CURVE",
    "facts": "LeftPart(A) = L"
},
{
    "assertion": "TangentOnPoint ( POINT: U, CURVE: z ) equals TangentOnPoint ( UpperVertex ( CONICSECTION: d ), CURVE: Z )",
    "id": 4615,
    "declarations": "U: POINT; z: CURVE; d: CONICSECTION; Z: CURVE",
    "facts": "TangentOnPoint(U, z) = TangentOnPoint(UpperVertex(d), Z)"
},
{
    "assertion": "InterceptChord ( LINE: W, CONICSECTION: b ) equals LINESEGMENT: c",
    "id": 4616,
    "declarations": "W: LINE; b: CONICSECTION; c: LINESEGMENT",
    "facts": "InterceptChord(W, b) = c"
},
{
    "assertion": "ApplyUnit ( Distance ( Incenter ( TRIANGLE: v ), Projection ( POINT: g, TangentOfPoint ( Projection ( UpperVertex ( CONICSECTION: T ), LINE: r ), CURVE: q ) ) ), DEGREESTR: degree )",
    "id": 4617,
    "declarations": "v: TRIANGLE; g: POINT; T: CONICSECTION; r: LINE; q: CURVE; degree: DEGREESTR",
    "facts": "ApplyUnit(Distance(Incenter(v), Projection(g, TangentOfPoint(Projection(UpperVertex(T), r), q))), degree) = None"
},
{
    "assertion": "Intersection ( CURVE: l, CURVE: P ) equals Orthocenter ( TRIANGLE: F )",
    "id": 4618,
    "declarations": "l: CURVE; P: CURVE; F: TRIANGLE",
    "facts": "Intersection(l, P) = Orthocenter(F)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: y, TRIANGLE: P ) equals BOOL: False",
    "id": 4619,
    "declarations": "y: CIRCLE; P: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(y, P) = False"
},
{
    "assertion": "Negation ( MinorAxis ( ELLIPSE: H ) equals LINESEGMENT: b ) equals BOOL: False",
    "id": 4620,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "NumIntersection ( CURVE: J, CURVE: E ) equals Distance ( POINT: T, MidPoint ( LINESEGMENT: H ) )",
    "id": 4621,
    "declarations": "J: CURVE; E: CURVE; T: POINT; H: LINESEGMENT",
    "facts": "NumIntersection(J, E) = Distance(T, MidPoint(H))"
},
{
    "assertion": "AngleOf ( POINT: b, LowerVertex ( CONICSECTION: F ), RightVertex ( CONICSECTION: D ) ) equals ApplyUnit ( Slope ( TangentOfPoint ( LeftVertex ( CONICSECTION: F ), LeftPart ( HYPERBOLA: h ) ) ), DEGREESTR: degree )",
    "id": 4622,
    "declarations": "b: POINT; F: CONICSECTION; D: CONICSECTION; F: CONICSECTION; h: HYPERBOLA; degree: DEGREESTR",
    "facts": "AngleOf(b, LowerVertex(F), RightVertex(D)) = ApplyUnit(Slope(TangentOfPoint(LeftVertex(F), LeftPart(h))), degree)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: G ) equals CIRCLE: w",
    "id": 4623,
    "declarations": "G: TRIANGLE; w: CIRCLE",
    "facts": "CircumCircle(G) = w"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: e, TRIANGLE: K ) equals BOOL: True",
    "id": 4624,
    "declarations": "e: CIRCLE; K: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(e, K) = True"
},
{
    "assertion": "MajorAxis ( ELLIPSE: m ) equals LINESEGMENT: u",
    "id": 4625,
    "declarations": "m: ELLIPSE; u: LINESEGMENT",
    "facts": "MajorAxis(m) = u"
},
{
    "assertion": "LowerVertex ( CONICSECTION: J ) equals FootPoint ( LeftDirectrix ( CONICSECTION: A ), LINE: K )",
    "id": 4626,
    "declarations": "J: CONICSECTION; A: CONICSECTION; K: LINE",
    "facts": "LowerVertex(J) = FootPoint(LeftDirectrix(A), K)"
},
{
    "assertion": "Length ( LINESEGMENT: R ) equals Eccentricity ( CONICSECTION: u )",
    "id": 4627,
    "declarations": "R: LINESEGMENT; u: CONICSECTION",
    "facts": "Length(R) = Eccentricity(u)"
},
{
    "assertion": "Quadrant ( POINT: D ) equals NUMBER: -86",
    "id": 4628,
    "declarations": "D: POINT; -86: NUMBER",
    "facts": "Quadrant(D) = -86"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: g ) equals LINESEGMENT: O",
    "id": 4629,
    "declarations": "g: ELLIPSE; O: LINESEGMENT",
    "facts": "ImaginaryAxis(g) = O"
},
{
    "assertion": "Expression ( CURVE: K ) equals EXPRESSION: y*space=*spacex^3*space-*space4x",
    "id": 4630,
    "declarations": "K: CURVE; y*space=*spacex^3*space-*space4x: EXPRESSION",
    "facts": "Expression(K) = y*space=*spacex^3*space-*space4x"
},
{
    "assertion": "Perimeter ( CONICSECTION: k ) equals NUMBER: -14",
    "id": 4631,
    "declarations": "k: CONICSECTION; -14: NUMBER",
    "facts": "Perimeter(k) = -14"
},
{
    "assertion": "Max ( YCoordinate ( LowerVertex ( CONICSECTION: l ) ) ) equals NUMBER: 10",
    "id": 4632,
    "declarations": "l: CONICSECTION; 10: NUMBER",
    "facts": "Max(YCoordinate(LowerVertex(l))) = 10"
},
{
    "assertion": "XCoordinate ( UpperFocus ( CONICSECTION: p ) ) equals Eccentricity ( CONICSECTION: Z )",
    "id": 4633,
    "declarations": "p: CONICSECTION; Z: CONICSECTION",
    "facts": "XCoordinate(UpperFocus(p)) = Eccentricity(Z)"
},
{
    "assertion": "IsInTangent ( CIRCLE: x, CIRCLE: m ) equals BOOL: False",
    "id": 4634,
    "declarations": "x: CIRCLE; m: CIRCLE; False: BOOL",
    "facts": "IsInTangent(x, m) = False"
},
{
    "assertion": "LeftVertex ( CONICSECTION: d ) equals POINT: v",
    "id": 4635,
    "declarations": "d: CONICSECTION; v: POINT",
    "facts": "LeftVertex(d) = v"
},
{
    "assertion": "Coordinate ( LowerFocus ( CONICSECTION: z ) ) equals ( Eccentricity ( CONICSECTION: S ), NUMBER: 92 )",
    "id": 4636,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: O, TRIANGLE: g ) equals BOOL: True",
    "id": 4637,
    "declarations": "O: CIRCLE; g: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(O, g) = True"
},
{
    "assertion": "IsOutTangent ( CIRCLE: G, CIRCLE: f ) equals BOOL: True",
    "id": 4638,
    "declarations": "G: CIRCLE; f: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(G, f) = True"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: o ) equals LINE: L",
    "id": 4639,
    "declarations": "o: LINESEGMENT; L: LINE",
    "facts": "PerpendicularBisector(o) = L"
},
{
    "assertion": "Expression ( CURVE: A ) equals EXPRESSION: y*space=*space2x*space+*space3",
    "id": 4640,
    "declarations": "A: CURVE; y*space=*space2x*space+*space3: EXPRESSION",
    "facts": "Expression(A) = y*space=*space2x*space+*space3"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: C ) equals LINE: B",
    "id": 4641,
    "declarations": "C: CONICSECTION; B: LINE",
    "facts": "RightDirectrix(C) = B"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: A ) equals TangentOfPoint ( LowerVertex ( CONICSECTION: m ), CURVE: t )",
    "id": 4642,
    "declarations": "A: CONICSECTION; m: CONICSECTION; t: CURVE",
    "facts": "LeftDirectrix(A) = TangentOfPoint(LowerVertex(m), t)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: T ) equals CIRCLE: z",
    "id": 4643,
    "declarations": "T: TRIANGLE; z: CIRCLE",
    "facts": "CircumCircle(T) = z"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: u ) equals AXIS: xAxis",
    "id": 4644,
    "declarations": "u: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(u) = xAxis"
},
{
    "assertion": "Directrix ( CONICSECTION: b ) equals LINE: N",
    "id": 4645,
    "declarations": "b: CONICSECTION; N: LINE",
    "facts": "Directrix(b) = N"
},
{
    "assertion": "InterReciprocal ( NUMBER: -93 ) equals NUMBER: 43",
    "id": 4646,
    "declarations": "-93: NUMBER; 43: NUMBER",
    "facts": "InterReciprocal(-93) = 43"
},
{
    "assertion": "Area ( CONICSECTION: a ) equals lg ( NUMBER: -54 )",
    "id": 4647,
    "declarations": "a: CONICSECTION; -54: NUMBER",
    "facts": "Area(a) = lg(-54)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: m ) equals Area ( CONICSECTION: N )",
    "id": 4648,
    "declarations": "m: CONICSECTION; N: CONICSECTION",
    "facts": "HalfFocalLength(m) = Area(N)"
},
{
    "assertion": "TangentOnPoint ( POINT: a, Locus ( UpperVertex ( CONICSECTION: P ) ) ) equals LINE: X",
    "id": 4649,
    "declarations": "a: POINT; P: CONICSECTION; X: LINE",
    "facts": "TangentOnPoint(a, Locus(UpperVertex(P))) = X"
},
{
    "assertion": "UpperVertex ( CONICSECTION: B ) equals LeftVertex ( CONICSECTION: W )",
    "id": 4650,
    "declarations": "B: CONICSECTION; W: CONICSECTION",
    "facts": "UpperVertex(B) = LeftVertex(W)"
},
{
    "assertion": "InterceptChord ( LINE: K, CONICSECTION: Q ) equals LINESEGMENT: a",
    "id": 4651,
    "declarations": "K: LINE; Q: CONICSECTION; a: LINESEGMENT",
    "facts": "InterceptChord(K, Q) = a"
},
{
    "assertion": "RightVertex ( CONICSECTION: u ) equals POINT: y",
    "id": 4652,
    "declarations": "u: CONICSECTION; y: POINT",
    "facts": "RightVertex(u) = y"
},
{
    "assertion": "Negation ( Diameter ( CIRCLE: P ) equals NUMBER: -46 ) equals BOOL: False",
    "id": 4653,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: X, TRIANGLE: x ) equals BOOL: True",
    "id": 4654,
    "declarations": "X: CIRCLE; x: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(X, x) = True"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: B ) equals AXIS: yAxis",
    "id": 4655,
    "declarations": "B: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(B) = yAxis"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: r ) equals RightDirectrix ( CONICSECTION: C )",
    "id": 4656,
    "declarations": "r: CONICSECTION; C: CONICSECTION",
    "facts": "RightDirectrix(r) = RightDirectrix(C)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: e ) equals LINESEGMENT: p",
    "id": 4657,
    "declarations": "e: ELLIPSE; p: LINESEGMENT",
    "facts": "ImaginaryAxis(e) = p"
},
{
    "assertion": "Vertex ( CONICSECTION: a ) equals UpperVertex ( CONICSECTION: j )",
    "id": 4658,
    "declarations": "a: CONICSECTION; j: CONICSECTION",
    "facts": "Vertex(a) = UpperVertex(j)"
},
{
    "assertion": "Intersection ( CURVE: p, LeftPart ( HYPERBOLA: G ) ) equals POINT: v",
    "id": 4659,
    "declarations": "p: CURVE; G: HYPERBOLA; v: POINT",
    "facts": "Intersection(p, LeftPart(G)) = v"
},
{
    "assertion": "Quadrant ( POINT: H ) equals Slope ( LINE: M )",
    "id": 4660,
    "declarations": "H: POINT; M: LINE",
    "facts": "Quadrant(H) = Slope(M)"
},
{
    "assertion": "IsPerpendicular ( LINE: n, OverlappingLine ( LINESEGMENT: p ) ) equals BOOL: True",
    "id": 4661,
    "declarations": "n: LINE; p: LINESEGMENT; True: BOOL",
    "facts": "IsPerpendicular(n, OverlappingLine(p)) = True"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: a, CIRCLE: j ) equals BOOL: False",
    "id": 4662,
    "declarations": "a: LINESEGMENT; j: CIRCLE; False: BOOL",
    "facts": "IsDiameter(a, j) = False"
},
{
    "assertion": "LeftFocus ( CONICSECTION: E ) equals POINT: c",
    "id": 4663,
    "declarations": "E: CONICSECTION; c: POINT",
    "facts": "LeftFocus(E) = c"
},
{
    "assertion": "Slope ( PerpendicularBisector ( LINESEGMENT: f ) ) equals InterReciprocal ( sqrt ( Radius ( CIRCLE: b ) ) )",
    "id": 4664,
    "declarations": "f: LINESEGMENT; b: CIRCLE",
    "facts": "Slope(PerpendicularBisector(f)) = InterReciprocal(sqrt(Radius(b)))"
},
{
    "assertion": "AngleOf ( LeftFocus ( CONICSECTION: f ), LeftVertex ( CONICSECTION: E ), RightFocus ( CONICSECTION: f ) ) equals ApplyUnit ( NumIntersection ( CURVE: i, RightPart ( HYPERBOLA: j ) ), DEGREESTR: degree )",
    "id": 4665,
    "declarations": "f: CONICSECTION; E: CONICSECTION; f: CONICSECTION; i: CURVE; j: HYPERBOLA; degree: DEGREESTR",
    "facts": "AngleOf(LeftFocus(f), LeftVertex(E), RightFocus(f)) = ApplyUnit(NumIntersection(i, RightPart(j)), degree)"
},
{
    "assertion": "lg ( Radius ( CircumCircle ( TRIANGLE: b ) ) ) equals Min ( NUMBER: -86 )",
    "id": 4666,
    "declarations": "b: TRIANGLE; -86: NUMBER",
    "facts": "lg(Radius(CircumCircle(b))) = Min(-86)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: J ) equals POINT: W",
    "id": 4667,
    "declarations": "J: CONICSECTION; W: POINT",
    "facts": "UpperFocus(J) = W"
},
{
    "assertion": "InterceptChord ( LineOf ( LowerFocus ( CONICSECTION: E ), POINT: R ), CONICSECTION: x ) equals LINESEGMENT: a",
    "id": 4668,
    "declarations": "E: CONICSECTION; R: POINT; x: CONICSECTION; a: LINESEGMENT",
    "facts": "InterceptChord(LineOf(LowerFocus(E), R), x) = a"
},
{
    "assertion": "Quadrant ( POINT: a ) equals Quadrant ( POINT: M )",
    "id": 4669,
    "declarations": "a: POINT; M: POINT",
    "facts": "Quadrant(a) = Quadrant(M)"
},
{
    "assertion": "RightVertex ( CONICSECTION: D ) equals Center ( CONICSECTION: U )",
    "id": 4670,
    "declarations": "D: CONICSECTION; U: CONICSECTION",
    "facts": "RightVertex(D) = Center(U)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: I ) equals CURVE: S",
    "id": 4671,
    "declarations": "I: HYPERBOLA; S: CURVE",
    "facts": "LeftPart(I) = S"
},
{
    "assertion": "LowerVertex ( CONICSECTION: A ) equals LowerVertex ( CONICSECTION: Z )",
    "id": 4672,
    "declarations": "A: CONICSECTION; Z: CONICSECTION",
    "facts": "LowerVertex(A) = LowerVertex(Z)"
},
{
    "assertion": "Min ( Quadrant ( MidPoint ( RealAxis ( ELLIPSE: I ) ) ) ) equals NUMBER: 41",
    "id": 4673,
    "declarations": "I: ELLIPSE; 41: NUMBER",
    "facts": "Min(Quadrant(MidPoint(RealAxis(I)))) = 41"
},
{
    "assertion": "IsOutTangent ( CIRCLE: B, CIRCLE: B ) equals BOOL: False",
    "id": 4674,
    "declarations": "B: CIRCLE; B: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(B, B) = False"
},
{
    "assertion": "IsIntersect ( CURVE: b, CURVE: d ) equals BOOL: True",
    "id": 4675,
    "declarations": "b: CURVE; d: CURVE; True: BOOL",
    "facts": "IsIntersect(b, d) = True"
},
{
    "assertion": "Diameter ( CIRCLE: d ) equals Intercept ( LINE: r, AXIS: yAxis )",
    "id": 4676,
    "declarations": "d: CIRCLE; r: LINE; yAxis: AXIS",
    "facts": "Diameter(d) = Intercept(r, yAxis)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: g ) equals POINT: T",
    "id": 4677,
    "declarations": "g: CONICSECTION; T: POINT",
    "facts": "UpperFocus(g) = T"
},
{
    "assertion": "NumIntersection ( Locus ( RightVertex ( CONICSECTION: e ) ), CURVE: p ) equals Quadrant ( POINT: H )",
    "id": 4678,
    "declarations": "e: CONICSECTION; p: CURVE; H: POINT",
    "facts": "NumIntersection(Locus(RightVertex(e)), p) = Quadrant(H)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: B ) equals Min ( Intercept ( LINE: s, AXIS: yAxis ) )",
    "id": 4679,
    "declarations": "B: CONICSECTION; s: LINE; yAxis: AXIS",
    "facts": "Eccentricity(B) = Min(Intercept(s, yAxis))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: A ) equals NUMBER: -90",
    "id": 4680,
    "declarations": "A: CONICSECTION; -90: NUMBER",
    "facts": "Eccentricity(A) = -90"
},
{
    "assertion": "IsPerpendicular ( LINE: v, LINE: O ) equals BOOL: True",
    "id": 4681,
    "declarations": "v: LINE; O: LINE; True: BOOL",
    "facts": "IsPerpendicular(v, O) = True"
},
{
    "assertion": "Distance ( Center ( CONICSECTION: N ), Orthocenter ( TRIANGLE: A ) ) equals Distance ( POINT: k, LowerFocus ( CONICSECTION: g ) )",
    "id": 4682,
    "declarations": "N: CONICSECTION; A: TRIANGLE; k: POINT; g: CONICSECTION",
    "facts": "Distance(Center(N), Orthocenter(A)) = Distance(k, LowerFocus(g))"
},
{
    "assertion": "IsOutTangent ( CircumCircle ( TriangleOf ( POINT: S, POINT: o, POINT: F ) ), CIRCLE: O ) equals BOOL: False",
    "id": 4683,
    "declarations": "S: POINT; o: POINT; F: POINT; O: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(CircumCircle(TriangleOf(S, o, F)), O) = False"
},
{
    "assertion": "TangentOnPoint ( POINT: B, CURVE: r ) equals LINE: Q",
    "id": 4684,
    "declarations": "B: POINT; r: CURVE; Q: LINE",
    "facts": "TangentOnPoint(B, r) = Q"
},
{
    "assertion": "LeftPart ( HYPERBOLA: K ) equals LeftPart ( HYPERBOLA: r )",
    "id": 4685,
    "declarations": "K: HYPERBOLA; r: HYPERBOLA",
    "facts": "LeftPart(K) = LeftPart(r)"
},
{
    "assertion": "VectorOf ( Circumcenter ( TRIANGLE: N ), MidPoint ( InterceptChord ( LINE: C, CONICSECTION: v ) ) ) equals VECTOR: D",
    "id": 4686,
    "declarations": "N: TRIANGLE; C: LINE; v: CONICSECTION; D: VECTOR",
    "facts": "VectorOf(Circumcenter(N), MidPoint(InterceptChord(C, v))) = D"
},
{
    "assertion": "TangentOfPoint ( POINT: M, LeftPart ( HYPERBOLA: H ) ) equals LINE: w",
    "id": 4687,
    "declarations": "M: POINT; H: HYPERBOLA; w: LINE",
    "facts": "TangentOfPoint(M, LeftPart(H)) = w"
},
{
    "assertion": "Radius ( CircumCircle ( TRIANGLE: J ) ) equals Perimeter ( CONICSECTION: s )",
    "id": 4688,
    "declarations": "J: TRIANGLE; s: CONICSECTION",
    "facts": "Radius(CircumCircle(J)) = Perimeter(s)"
},
{
    "assertion": "PerpendicularBisector ( MajorAxis ( ELLIPSE: z ) ) equals PerpendicularBisector ( LINESEGMENT: Q )",
    "id": 4689,
    "declarations": "z: ELLIPSE; Q: LINESEGMENT",
    "facts": "PerpendicularBisector(MajorAxis(z)) = PerpendicularBisector(Q)"
},
{
    "assertion": "Expression ( LeftPart ( HYPERBOLA: k ) ) equals EXPRESSION: x^2*space+*spacey*space=*space10",
    "id": 4690,
    "declarations": "k: HYPERBOLA; x^2*space+*spacey*space=*space10: EXPRESSION",
    "facts": "Expression(LeftPart(k)) = x^2*space+*spacey*space=*space10"
},
{
    "assertion": "And ( Center ( CONICSECTION: J ) equals LeftFocus ( CONICSECTION: f ), LowerFocus ( CONICSECTION: d ) equals LeftFocus ( CONICSECTION: P ) ) equals BOOL: False",
    "id": 4691,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Inclination ( LINE: N ) equals Min ( FocalLength ( CONICSECTION: J ) )",
    "id": 4692,
    "declarations": "N: LINE; J: CONICSECTION",
    "facts": "Inclination(N) = Min(FocalLength(J))"
},
{
    "assertion": "Area ( CONICSECTION: U ) equals NUMBER: 62",
    "id": 4693,
    "declarations": "U: CONICSECTION; 62: NUMBER",
    "facts": "Area(U) = 62"
},
{
    "assertion": "Circumcenter ( TRIANGLE: f ) equals POINT: k",
    "id": 4694,
    "declarations": "f: TRIANGLE; k: POINT",
    "facts": "Circumcenter(f) = k"
},
{
    "assertion": "Inclination ( RightDirectrix ( CONICSECTION: L ) ) equals lg ( Area ( CONICSECTION: R ) )",
    "id": 4695,
    "declarations": "L: CONICSECTION; R: CONICSECTION",
    "facts": "Inclination(RightDirectrix(L)) = lg(Area(R))"
},
{
    "assertion": "YCoordinate ( POINT: X ) equals NUMBER: -57",
    "id": 4696,
    "declarations": "X: POINT; -57: NUMBER",
    "facts": "YCoordinate(X) = -57"
},
{
    "assertion": "UpperFocus ( CONICSECTION: H ) equals UpperFocus ( CONICSECTION: j )",
    "id": 4697,
    "declarations": "H: CONICSECTION; j: CONICSECTION",
    "facts": "UpperFocus(H) = UpperFocus(j)"
},
{
    "assertion": "IsTangent ( LINE: s, CONICSECTION: y ) equals BOOL: False",
    "id": 4698,
    "declarations": "s: LINE; y: CONICSECTION; False: BOOL",
    "facts": "IsTangent(s, y) = False"
},
{
    "assertion": "And ( Vertex ( CONICSECTION: J ) equals LeftFocus ( CONICSECTION: Q ), RightFocus ( CONICSECTION: t ) equals POINT: P ) equals BOOL: True",
    "id": 4699,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Asymptote ( HYPERBOLA: l ) equals LINE: W",
    "id": 4700,
    "declarations": "l: HYPERBOLA; W: LINE",
    "facts": "Asymptote(l) = W"
},
{
    "assertion": "Orthocenter ( TRIANGLE: M ) equals POINT: i",
    "id": 4701,
    "declarations": "M: TRIANGLE; i: POINT",
    "facts": "Orthocenter(M) = i"
},
{
    "assertion": "Length ( LINESEGMENT: S ) equals HalfFocalLength ( CONICSECTION: v )",
    "id": 4702,
    "declarations": "S: LINESEGMENT; v: CONICSECTION",
    "facts": "Length(S) = HalfFocalLength(v)"
},
{
    "assertion": "Perimeter ( CONICSECTION: v ) equals FocalLength ( CONICSECTION: c )",
    "id": 4703,
    "declarations": "v: CONICSECTION; c: CONICSECTION",
    "facts": "Perimeter(v) = FocalLength(c)"
},
{
    "assertion": "Length ( LINESEGMENT: n ) equals sqrt ( InterReciprocal ( Quadrant ( Incenter ( TRIANGLE: q ) ) ) )",
    "id": 4704,
    "declarations": "n: LINESEGMENT; q: TRIANGLE",
    "facts": "Length(n) = sqrt(InterReciprocal(Quadrant(Incenter(q))))"
},
{
    "assertion": "MajorAxis ( ELLIPSE: K ) equals LINESEGMENT: f",
    "id": 4705,
    "declarations": "K: ELLIPSE; f: LINESEGMENT",
    "facts": "MajorAxis(K) = f"
},
{
    "assertion": "IsOutTangent ( CIRCLE: k, CircumCircle ( TRIANGLE: d ) ) equals BOOL: False",
    "id": 4706,
    "declarations": "k: CIRCLE; d: TRIANGLE; False: BOOL",
    "facts": "IsOutTangent(k, CircumCircle(d)) = False"
},
{
    "assertion": "lg ( Abs ( LINESEGMENT: g ) ) equals Slope ( TangentOfPoint ( POINT: R, RightPart ( HYPERBOLA: a ) ) )",
    "id": 4707,
    "declarations": "g: LINESEGMENT; R: POINT; a: HYPERBOLA",
    "facts": "lg(Abs(g)) = Slope(TangentOfPoint(R, RightPart(a)))"
},
{
    "assertion": "Focus ( CONICSECTION: N ) equals POINT: g",
    "id": 4708,
    "declarations": "N: CONICSECTION; g: POINT",
    "facts": "Focus(N) = g"
},
{
    "assertion": "UpperFocus ( CONICSECTION: A ) equals UpperFocus ( CONICSECTION: Y )",
    "id": 4709,
    "declarations": "A: CONICSECTION; Y: CONICSECTION",
    "facts": "UpperFocus(A) = UpperFocus(Y)"
},
{
    "assertion": "Expression ( CURVE: Y ) equals EXPRESSION: x^2/4*space+*spacey^2/9*space=*space1",
    "id": 4710,
    "declarations": "Y: CURVE; x^2/4*space+*spacey^2/9*space=*space1: EXPRESSION",
    "facts": "Expression(Y) = x^2/4*space+*spacey^2/9*space=*space1"
},
{
    "assertion": "Focus ( CONICSECTION: Y ) equals POINT: z",
    "id": 4711,
    "declarations": "Y: CONICSECTION; z: POINT",
    "facts": "Focus(Y) = z"
},
{
    "assertion": "sqrt ( sqrt ( NUMBER: 34 ) ) equals sqrt ( NUMBER: 41 )",
    "id": 4712,
    "declarations": "34: NUMBER; 41: NUMBER",
    "facts": "sqrt(sqrt(34)) = sqrt(41)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: Q ) equals POINT: Y",
    "id": 4713,
    "declarations": "Q: CONICSECTION; Y: POINT",
    "facts": "LeftVertex(Q) = Y"
},
{
    "assertion": "Negation ( MinorAxis ( ELLIPSE: G ) equals ImaginaryAxis ( ELLIPSE: g ) ) equals BOOL: False",
    "id": 4714,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Perimeter ( CONICSECTION: T ) equals HalfFocalLength ( CONICSECTION: W )",
    "id": 4715,
    "declarations": "T: CONICSECTION; W: CONICSECTION",
    "facts": "Perimeter(T) = HalfFocalLength(W)"
},
{
    "assertion": "Diameter ( CIRCLE: g ) equals NUMBER: -10",
    "id": 4716,
    "declarations": "g: CIRCLE; -10: NUMBER",
    "facts": "Diameter(g) = -10"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: W ) equals LINE: G",
    "id": 4717,
    "declarations": "W: LINESEGMENT; G: LINE",
    "facts": "OverlappingLine(W) = G"
},
{
    "assertion": "InterReciprocal ( Diameter ( CIRCLE: d ) ) equals Eccentricity ( CONICSECTION: q )",
    "id": 4718,
    "declarations": "d: CIRCLE; q: CONICSECTION",
    "facts": "InterReciprocal(Diameter(d)) = Eccentricity(q)"
},
{
    "assertion": "Endpoint ( LINESEGMENT: l ) equals POINT: d",
    "id": 4719,
    "declarations": "l: LINESEGMENT; d: POINT",
    "facts": "Endpoint(l) = d"
},
{
    "assertion": "Center ( CONICSECTION: M ) equals Projection ( POINT: E, LINE: j )",
    "id": 4720,
    "declarations": "M: CONICSECTION; E: POINT; j: LINE",
    "facts": "Center(M) = Projection(E, j)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: j, TRIANGLE: Y ) equals BOOL: False",
    "id": 4721,
    "declarations": "j: CIRCLE; Y: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(j, Y) = False"
},
{
    "assertion": "PointOnCurve ( POINT: R, CURVE: e ) equals BOOL: False",
    "id": 4722,
    "declarations": "R: POINT; e: CURVE; False: BOOL",
    "facts": "PointOnCurve(R, e) = False"
},
{
    "assertion": "Negation ( FootPoint ( LINE: Y, LINE: O ) equals UpperFocus ( CONICSECTION: S ) ) equals BOOL: False",
    "id": 4723,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: G ) equals AXIS: xAxis",
    "id": 4724,
    "declarations": "G: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(G) = xAxis"
},
{
    "assertion": "RightPart ( HYPERBOLA: z ) equals CURVE: F",
    "id": 4725,
    "declarations": "z: HYPERBOLA; F: CURVE",
    "facts": "RightPart(z) = F"
},
{
    "assertion": "LeftVertex ( CONICSECTION: j ) equals LeftFocus ( CONICSECTION: f )",
    "id": 4726,
    "declarations": "j: CONICSECTION; f: CONICSECTION",
    "facts": "LeftVertex(j) = LeftFocus(f)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: T ) equals RightFocus ( CONICSECTION: y )",
    "id": 4727,
    "declarations": "T: CONICSECTION; y: CONICSECTION",
    "facts": "LowerFocus(T) = RightFocus(y)"
},
{
    "assertion": "RealAxis ( ELLIPSE: C ) equals LINESEGMENT: O",
    "id": 4728,
    "declarations": "C: ELLIPSE; O: LINESEGMENT",
    "facts": "RealAxis(C) = O"
},
{
    "assertion": "Min ( FocalLength ( CONICSECTION: K ) ) equals FocalLength ( CONICSECTION: I )",
    "id": 4729,
    "declarations": "K: CONICSECTION; I: CONICSECTION",
    "facts": "Min(FocalLength(K)) = FocalLength(I)"
},
{
    "assertion": "Center ( CONICSECTION: z ) equals POINT: F",
    "id": 4730,
    "declarations": "z: CONICSECTION; F: POINT",
    "facts": "Center(z) = F"
},
{
    "assertion": "Diameter ( CIRCLE: r ) equals NUMBER: 11",
    "id": 4731,
    "declarations": "r: CIRCLE; 11: NUMBER",
    "facts": "Diameter(r) = 11"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: W ) equals LINESEGMENT: p",
    "id": 4732,
    "declarations": "W: ELLIPSE; p: LINESEGMENT",
    "facts": "ImaginaryAxis(W) = p"
},
{
    "assertion": "TriangleOf ( FootPoint ( LINE: E, LINE: z ), POINT: h, RightFocus ( CONICSECTION: A ) ) equals TRIANGLE: P",
    "id": 4733,
    "declarations": "E: LINE; z: LINE; h: POINT; A: CONICSECTION; P: TRIANGLE",
    "facts": "TriangleOf(FootPoint(E, z), h, RightFocus(A)) = P"
},
{
    "assertion": "LineSegmentOf ( Circumcenter ( TRIANGLE: u ), POINT: w ) equals LINESEGMENT: d",
    "id": 4734,
    "declarations": "u: TRIANGLE; w: POINT; d: LINESEGMENT",
    "facts": "LineSegmentOf(Circumcenter(u), w) = d"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: o ) equals LINE: O",
    "id": 4735,
    "declarations": "o: CONICSECTION; O: LINE",
    "facts": "LeftDirectrix(o) = O"
},
{
    "assertion": "LeftFocus ( CONICSECTION: w ) equals POINT: I",
    "id": 4736,
    "declarations": "w: CONICSECTION; I: POINT",
    "facts": "LeftFocus(w) = I"
},
{
    "assertion": "LocusEquation ( POINT: T ) equals EXPRESSION: y*space=*space2x*space+*space3",
    "id": 4737,
    "declarations": "T: POINT; y*space=*space2x*space+*space3: EXPRESSION",
    "facts": "LocusEquation(T) = y*space=*space2x*space+*space3"
},
{
    "assertion": "IsChordOf ( MinorAxis ( ELLIPSE: D ), CONICSECTION: X ) equals BOOL: True",
    "id": 4738,
    "declarations": "D: ELLIPSE; X: CONICSECTION; True: BOOL",
    "facts": "IsChordOf(MinorAxis(D), X) = True"
},
{
    "assertion": "MinorAxis ( ELLIPSE: U ) equals RealAxis ( ELLIPSE: R )",
    "id": 4739,
    "declarations": "U: ELLIPSE; R: ELLIPSE",
    "facts": "MinorAxis(U) = RealAxis(R)"
},
{
    "assertion": "Expression ( CURVE: L ) equals EXPRESSION: y*space=*spacee^x",
    "id": 4740,
    "declarations": "L: CURVE; y*space=*spacee^x: EXPRESSION",
    "facts": "Expression(L) = y*space=*spacee^x"
},
{
    "assertion": "XCoordinate ( LowerVertex ( CONICSECTION: h ) ) equals XCoordinate ( POINT: q )",
    "id": 4741,
    "declarations": "h: CONICSECTION; q: POINT",
    "facts": "XCoordinate(LowerVertex(h)) = XCoordinate(q)"
},
{
    "assertion": "Area ( CONICSECTION: N ) equals Perimeter ( CONICSECTION: P )",
    "id": 4742,
    "declarations": "N: CONICSECTION; P: CONICSECTION",
    "facts": "Area(N) = Perimeter(P)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: X ) equals LINE: v",
    "id": 4743,
    "declarations": "X: CONICSECTION; v: LINE",
    "facts": "RightDirectrix(X) = v"
},
{
    "assertion": "LowerFocus ( CONICSECTION: z ) equals POINT: J",
    "id": 4744,
    "declarations": "z: CONICSECTION; J: POINT",
    "facts": "LowerFocus(z) = J"
},
{
    "assertion": "Radius ( CIRCLE: D ) equals NUMBER: 60",
    "id": 4745,
    "declarations": "D: CIRCLE; 60: NUMBER",
    "facts": "Radius(D) = 60"
},
{
    "assertion": "IsOutTangent ( CIRCLE: R, CIRCLE: W ) equals BOOL: False",
    "id": 4746,
    "declarations": "R: CIRCLE; W: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(R, W) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: e ) equals Center ( CONICSECTION: j )",
    "id": 4747,
    "declarations": "e: CONICSECTION; j: CONICSECTION",
    "facts": "LowerFocus(e) = Center(j)"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: t ) ) equals Slope ( LINE: X )",
    "id": 4748,
    "declarations": "t: CONICSECTION; X: LINE",
    "facts": "Slope(RightDirectrix(t)) = Slope(X)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: p ) equals Radius ( CIRCLE: c )",
    "id": 4749,
    "declarations": "p: CONICSECTION; c: CIRCLE",
    "facts": "Eccentricity(p) = Radius(c)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: A ) equals POINT: X",
    "id": 4750,
    "declarations": "A: CONICSECTION; X: POINT",
    "facts": "UpperVertex(A) = X"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: N, TRIANGLE: l ) equals BOOL: False",
    "id": 4751,
    "declarations": "N: CIRCLE; l: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(N, l) = False"
},
{
    "assertion": "Intercept ( LINE: O, AXIS: yAxis ) equals Quadrant ( RightVertex ( CONICSECTION: B ) )",
    "id": 4752,
    "declarations": "O: LINE; yAxis: AXIS; B: CONICSECTION",
    "facts": "Intercept(O, yAxis) = Quadrant(RightVertex(B))"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: I ) equals LINE: g",
    "id": 4753,
    "declarations": "I: CONICSECTION; g: LINE",
    "facts": "RightDirectrix(I) = g"
},
{
    "assertion": "IsTangent ( LINE: t, CONICSECTION: Q ) equals BOOL: False",
    "id": 4754,
    "declarations": "t: LINE; Q: CONICSECTION; False: BOOL",
    "facts": "IsTangent(t, Q) = False"
},
{
    "assertion": "IsTangent ( LINE: E, CONICSECTION: e ) equals BOOL: False",
    "id": 4755,
    "declarations": "E: LINE; e: CONICSECTION; False: BOOL",
    "facts": "IsTangent(E, e) = False"
},
{
    "assertion": "Center ( CONICSECTION: A ) equals LeftVertex ( CONICSECTION: S )",
    "id": 4756,
    "declarations": "A: CONICSECTION; S: CONICSECTION",
    "facts": "Center(A) = LeftVertex(S)"
},
{
    "assertion": "Inclination ( LINE: Q ) equals NUMBER: 87",
    "id": 4757,
    "declarations": "Q: LINE; 87: NUMBER",
    "facts": "Inclination(Q) = 87"
},
{
    "assertion": "LowerFocus ( CONICSECTION: E ) equals POINT: I",
    "id": 4758,
    "declarations": "E: CONICSECTION; I: POINT",
    "facts": "LowerFocus(E) = I"
},
{
    "assertion": "TriangleOf ( FootPoint ( LINE: c, LINE: M ), LowerVertex ( CONICSECTION: g ), POINT: y ) equals TRIANGLE: V",
    "id": 4759,
    "declarations": "c: LINE; M: LINE; g: CONICSECTION; y: POINT; V: TRIANGLE",
    "facts": "TriangleOf(FootPoint(c, M), LowerVertex(g), y) = V"
},
{
    "assertion": "MajorAxis ( ELLIPSE: E ) equals LINESEGMENT: i",
    "id": 4760,
    "declarations": "E: ELLIPSE; i: LINESEGMENT",
    "facts": "MajorAxis(E) = i"
},
{
    "assertion": "RealAxis ( ELLIPSE: V ) equals LINESEGMENT: f",
    "id": 4761,
    "declarations": "V: ELLIPSE; f: LINESEGMENT",
    "facts": "RealAxis(V) = f"
},
{
    "assertion": "RealAxis ( ELLIPSE: j ) equals MajorAxis ( ELLIPSE: s )",
    "id": 4762,
    "declarations": "j: ELLIPSE; s: ELLIPSE",
    "facts": "RealAxis(j) = MajorAxis(s)"
},
{
    "assertion": "Quadrant ( POINT: K ) equals NUMBER: 94",
    "id": 4763,
    "declarations": "K: POINT; 94: NUMBER",
    "facts": "Quadrant(K) = 94"
},
{
    "assertion": "Diameter ( CircumCircle ( TRIANGLE: c ) ) equals DotProduct ( VECTOR: w, VECTOR: G )",
    "id": 4764,
    "declarations": "c: TRIANGLE; w: VECTOR; G: VECTOR",
    "facts": "Diameter(CircumCircle(c)) = DotProduct(w, G)"
},
{
    "assertion": "Min ( Distance ( POINT: d, POINT: n ) ) equals InterReciprocal ( NUMBER: 2 )",
    "id": 4765,
    "declarations": "d: POINT; n: POINT; 2: NUMBER",
    "facts": "Min(Distance(d, n)) = InterReciprocal(2)"
},
{
    "assertion": "Abs ( LINESEGMENT: D ) equals NUMBER: 73",
    "id": 4766,
    "declarations": "D: LINESEGMENT; 73: NUMBER",
    "facts": "Abs(D) = 73"
},
{
    "assertion": "Slope ( LINE: G ) equals YCoordinate ( Circumcenter ( TRIANGLE: x ) )",
    "id": 4767,
    "declarations": "G: LINE; x: TRIANGLE",
    "facts": "Slope(G) = YCoordinate(Circumcenter(x))"
},
{
    "assertion": "ApplyUnit ( Min ( FocalLength ( CONICSECTION: k ) ), DEGREESTR: degree )",
    "id": 4768,
    "declarations": "k: CONICSECTION; degree: DEGREESTR",
    "facts": "ApplyUnit(Min(FocalLength(k)), degree) = None"
},
{
    "assertion": "Slope ( LeftDirectrix ( CONICSECTION: v ) ) equals NUMBER: -51",
    "id": 4769,
    "declarations": "v: CONICSECTION; -51: NUMBER",
    "facts": "Slope(LeftDirectrix(v)) = -51"
},
{
    "assertion": "Radius ( CIRCLE: v ) equals Abs ( LINESEGMENT: y )",
    "id": 4770,
    "declarations": "v: CIRCLE; y: LINESEGMENT",
    "facts": "Radius(v) = Abs(y)"
},
{
    "assertion": "Length ( LINESEGMENT: r ) equals NUMBER: -62",
    "id": 4771,
    "declarations": "r: LINESEGMENT; -62: NUMBER",
    "facts": "Length(r) = -62"
},
{
    "assertion": "PerpendicularBisector ( LINESEGMENT: m ) equals LINE: O",
    "id": 4772,
    "declarations": "m: LINESEGMENT; O: LINE",
    "facts": "PerpendicularBisector(m) = O"
},
{
    "assertion": "CircumCircle ( TRIANGLE: X ) equals CIRCLE: x",
    "id": 4773,
    "declarations": "X: TRIANGLE; x: CIRCLE",
    "facts": "CircumCircle(X) = x"
},
{
    "assertion": "NumIntersection ( CURVE: G, CURVE: W ) equals NUMBER: -40",
    "id": 4774,
    "declarations": "G: CURVE; W: CURVE; -40: NUMBER",
    "facts": "NumIntersection(G, W) = -40"
},
{
    "assertion": "MinorAxis ( ELLIPSE: M ) equals LINESEGMENT: t",
    "id": 4775,
    "declarations": "M: ELLIPSE; t: LINESEGMENT",
    "facts": "MinorAxis(M) = t"
},
{
    "assertion": "UpperFocus ( CONICSECTION: I ) equals LeftVertex ( CONICSECTION: q )",
    "id": 4776,
    "declarations": "I: CONICSECTION; q: CONICSECTION",
    "facts": "UpperFocus(I) = LeftVertex(q)"
},
{
    "assertion": "IsPerpendicular ( LINE: T, LINE: z ) equals BOOL: True",
    "id": 4777,
    "declarations": "T: LINE; z: LINE; True: BOOL",
    "facts": "IsPerpendicular(T, z) = True"
},
{
    "assertion": "IsTangent ( LINE: t, CONICSECTION: O ) equals BOOL: True",
    "id": 4778,
    "declarations": "t: LINE; O: CONICSECTION; True: BOOL",
    "facts": "IsTangent(t, O) = True"
},
{
    "assertion": "LeftVertex ( CONICSECTION: u ) equals Projection ( RightFocus ( CONICSECTION: D ), LINE: t )",
    "id": 4779,
    "declarations": "u: CONICSECTION; D: CONICSECTION; t: LINE",
    "facts": "LeftVertex(u) = Projection(RightFocus(D), t)"
},
{
    "assertion": "Perimeter ( CONICSECTION: Z ) equals YCoordinate ( RightVertex ( CONICSECTION: P ) )",
    "id": 4780,
    "declarations": "Z: CONICSECTION; P: CONICSECTION",
    "facts": "Perimeter(Z) = YCoordinate(RightVertex(P))"
},
{
    "assertion": "Incenter ( TRIANGLE: u ) equals Circumcenter ( TRIANGLE: O )",
    "id": 4781,
    "declarations": "u: TRIANGLE; O: TRIANGLE",
    "facts": "Incenter(u) = Circumcenter(O)"
},
{
    "assertion": "PointOnCurve ( POINT: K, CURVE: j ) equals BOOL: True",
    "id": 4782,
    "declarations": "K: POINT; j: CURVE; True: BOOL",
    "facts": "PointOnCurve(K, j) = True"
},
{
    "assertion": "IsIntersect ( Locus ( UpperVertex ( CONICSECTION: c ) ), CURVE: X ) equals BOOL: True",
    "id": 4783,
    "declarations": "c: CONICSECTION; X: CURVE; True: BOOL",
    "facts": "IsIntersect(Locus(UpperVertex(c)), X) = True"
},
{
    "assertion": "InterReciprocal ( Abs ( LINESEGMENT: i ) ) equals InterReciprocal ( XCoordinate ( POINT: H ) )",
    "id": 4784,
    "declarations": "i: LINESEGMENT; H: POINT",
    "facts": "InterReciprocal(Abs(i)) = InterReciprocal(XCoordinate(H))"
},
{
    "assertion": "Circumcenter ( TRIANGLE: v ) equals POINT: D",
    "id": 4785,
    "declarations": "v: TRIANGLE; D: POINT",
    "facts": "Circumcenter(v) = D"
},
{
    "assertion": "Radius ( CIRCLE: i ) equals InterReciprocal ( NUMBER: -25 )",
    "id": 4786,
    "declarations": "i: CIRCLE; -25: NUMBER",
    "facts": "Radius(i) = InterReciprocal(-25)"
},
{
    "assertion": "LocusEquation ( POINT: z ) equals EXPRESSION: x*space+*spacey^2*space=*space1",
    "id": 4787,
    "declarations": "z: POINT; x*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(z) = x*space+*spacey^2*space=*space1"
},
{
    "assertion": "Area ( CONICSECTION: p ) equals Diameter ( CIRCLE: n )",
    "id": 4788,
    "declarations": "p: CONICSECTION; n: CIRCLE",
    "facts": "Area(p) = Diameter(n)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: w ) equals RightVertex ( CONICSECTION: c )",
    "id": 4789,
    "declarations": "w: CONICSECTION; c: CONICSECTION",
    "facts": "UpperFocus(w) = RightVertex(c)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: b ) equals UpperFocus ( CONICSECTION: u )",
    "id": 4790,
    "declarations": "b: CONICSECTION; u: CONICSECTION",
    "facts": "UpperFocus(b) = UpperFocus(u)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: Z ) equals POINT: R",
    "id": 4791,
    "declarations": "Z: CONICSECTION; R: POINT",
    "facts": "LowerFocus(Z) = R"
},
{
    "assertion": "RightVertex ( CONICSECTION: N ) equals Incenter ( TRIANGLE: L )",
    "id": 4792,
    "declarations": "N: CONICSECTION; L: TRIANGLE",
    "facts": "RightVertex(N) = Incenter(L)"
},
{
    "assertion": "Directrix ( CONICSECTION: j ) equals LINE: c",
    "id": 4793,
    "declarations": "j: CONICSECTION; c: LINE",
    "facts": "Directrix(j) = c"
},
{
    "assertion": "LeftFocus ( CONICSECTION: F ) equals Center ( CONICSECTION: J )",
    "id": 4794,
    "declarations": "F: CONICSECTION; J: CONICSECTION",
    "facts": "LeftFocus(F) = Center(J)"
},
{
    "assertion": "Vertex ( CONICSECTION: k ) equals LowerVertex ( CONICSECTION: w )",
    "id": 4795,
    "declarations": "k: CONICSECTION; w: CONICSECTION",
    "facts": "Vertex(k) = LowerVertex(w)"
},
{
    "assertion": "Coordinate ( POINT: u ) equals ( Radius ( CIRCLE: I ), FocalLength ( CONICSECTION: b ) )",
    "id": 4796,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RealAxis ( ELLIPSE: Z ) equals LINESEGMENT: R",
    "id": 4797,
    "declarations": "Z: ELLIPSE; R: LINESEGMENT",
    "facts": "RealAxis(Z) = R"
},
{
    "assertion": "TriangleOf ( FootPoint ( LeftDirectrix ( CONICSECTION: t ), LINE: Y ), POINT: k, FootPoint ( LINE: Z, RightDirectrix ( CONICSECTION: f ) ) ) equals TriangleOf ( POINT: C, POINT: J, Circumcenter ( TRIANGLE: k ) )",
    "id": 4798,
    "declarations": "t: CONICSECTION; Y: LINE; k: POINT; Z: LINE; f: CONICSECTION; C: POINT; J: POINT; k: TRIANGLE",
    "facts": "TriangleOf(FootPoint(LeftDirectrix(t), Y), k, FootPoint(Z, RightDirectrix(f))) = TriangleOf(C, J, Circumcenter(k))"
},
{
    "assertion": "IsPerpendicular ( LINE: I, RightDirectrix ( CONICSECTION: Z ) ) equals BOOL: True",
    "id": 4799,
    "declarations": "I: LINE; Z: CONICSECTION; True: BOOL",
    "facts": "IsPerpendicular(I, RightDirectrix(Z)) = True"
},
{
    "assertion": "IsOutTangent ( CIRCLE: V, CIRCLE: q ) equals BOOL: False",
    "id": 4800,
    "declarations": "V: CIRCLE; q: CIRCLE; False: BOOL",
    "facts": "IsOutTangent(V, q) = False"
},
{
    "assertion": "Intersection ( CURVE: d, CURVE: J ) equals POINT: k",
    "id": 4801,
    "declarations": "d: CURVE; J: CURVE; k: POINT",
    "facts": "Intersection(d, J) = k"
},
{
    "assertion": "XCoordinate ( POINT: a ) equals lg ( Abs ( ImaginaryAxis ( ELLIPSE: i ) ) )",
    "id": 4802,
    "declarations": "a: POINT; i: ELLIPSE",
    "facts": "XCoordinate(a) = lg(Abs(ImaginaryAxis(i)))"
},
{
    "assertion": "lg ( Length ( LINESEGMENT: W ) ) equals NUMBER: 28",
    "id": 4803,
    "declarations": "W: LINESEGMENT; 28: NUMBER",
    "facts": "lg(Length(W)) = 28"
},
{
    "assertion": "RightPart ( HYPERBOLA: S ) equals CURVE: z",
    "id": 4804,
    "declarations": "S: HYPERBOLA; z: CURVE",
    "facts": "RightPart(S) = z"
},
{
    "assertion": "Radius ( CIRCLE: B ) equals NUMBER: 34",
    "id": 4805,
    "declarations": "B: CIRCLE; 34: NUMBER",
    "facts": "Radius(B) = 34"
},
{
    "assertion": "ApplyUnit ( Length ( LineSegmentOf ( POINT: B, POINT: m ) ), DEGREESTR: degree )",
    "id": 4806,
    "declarations": "B: POINT; m: POINT; degree: DEGREESTR",
    "facts": "ApplyUnit(Length(LineSegmentOf(B, m)), degree) = None"
},
{
    "assertion": "TriangleOf ( POINT: O, UpperVertex ( CONICSECTION: J ), POINT: J ) equals TRIANGLE: B",
    "id": 4807,
    "declarations": "O: POINT; J: CONICSECTION; J: POINT; B: TRIANGLE",
    "facts": "TriangleOf(O, UpperVertex(J), J) = B"
},
{
    "assertion": "InterReciprocal ( Inclination ( LINE: F ) ) equals NUMBER: -53",
    "id": 4808,
    "declarations": "F: LINE; -53: NUMBER",
    "facts": "InterReciprocal(Inclination(F)) = -53"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: H ) equals LINESEGMENT: u",
    "id": 4809,
    "declarations": "H: ELLIPSE; u: LINESEGMENT",
    "facts": "ImaginaryAxis(H) = u"
},
{
    "assertion": "LeftVertex ( CONICSECTION: e ) equals POINT: x",
    "id": 4810,
    "declarations": "e: CONICSECTION; x: POINT",
    "facts": "LeftVertex(e) = x"
},
{
    "assertion": "Focus ( CONICSECTION: Q ) equals RightFocus ( CONICSECTION: c )",
    "id": 4811,
    "declarations": "Q: CONICSECTION; c: CONICSECTION",
    "facts": "Focus(Q) = RightFocus(c)"
},
{
    "assertion": "Expression ( CURVE: g ) equals EXPRESSION: y*space=*space3x*space+*space2",
    "id": 4812,
    "declarations": "g: CURVE; y*space=*space3x*space+*space2: EXPRESSION",
    "facts": "Expression(g) = y*space=*space3x*space+*space2"
},
{
    "assertion": "IsOutTangent ( CIRCLE: v, CircumCircle ( TRIANGLE: n ) ) equals BOOL: False",
    "id": 4813,
    "declarations": "v: CIRCLE; n: TRIANGLE; False: BOOL",
    "facts": "IsOutTangent(v, CircumCircle(n)) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: R ) equals RightFocus ( CONICSECTION: P )",
    "id": 4814,
    "declarations": "R: CONICSECTION; P: CONICSECTION",
    "facts": "LowerVertex(R) = RightFocus(P)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: l ) equals LINESEGMENT: E",
    "id": 4815,
    "declarations": "l: ELLIPSE; E: LINESEGMENT",
    "facts": "ImaginaryAxis(l) = E"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: G, TriangleOf ( POINT: d, POINT: S, POINT: K ) ) equals BOOL: True",
    "id": 4816,
    "declarations": "G: CIRCLE; d: POINT; S: POINT; K: POINT; True: BOOL",
    "facts": "IsInscribedCircle(G, TriangleOf(d, S, K)) = True"
},
{
    "assertion": "TangentPoint ( LineOf ( POINT: p, UpperVertex ( CONICSECTION: Q ) ), CircumCircle ( TRIANGLE: t ) ) equals POINT: W",
    "id": 4817,
    "declarations": "p: POINT; Q: CONICSECTION; t: TRIANGLE; W: POINT",
    "facts": "TangentPoint(LineOf(p, UpperVertex(Q)), CircumCircle(t)) = W"
},
{
    "assertion": "Inclination ( LINE: M ) equals Area ( CONICSECTION: x )",
    "id": 4818,
    "declarations": "M: LINE; x: CONICSECTION",
    "facts": "Inclination(M) = Area(x)"
},
{
    "assertion": "Diameter ( CIRCLE: R ) equals Area ( CONICSECTION: G )",
    "id": 4819,
    "declarations": "R: CIRCLE; G: CONICSECTION",
    "facts": "Diameter(R) = Area(G)"
},
{
    "assertion": "TangentOfPoint ( POINT: M, CURVE: W ) equals LINE: G",
    "id": 4820,
    "declarations": "M: POINT; W: CURVE; G: LINE",
    "facts": "TangentOfPoint(M, W) = G"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: w ) equals AXIS: xAxis",
    "id": 4821,
    "declarations": "w: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(w) = xAxis"
},
{
    "assertion": "UpperFocus ( CONICSECTION: s ) equals RightVertex ( CONICSECTION: c )",
    "id": 4822,
    "declarations": "s: CONICSECTION; c: CONICSECTION",
    "facts": "UpperFocus(s) = RightVertex(c)"
},
{
    "assertion": "ApplyUnit ( NUMBER: -81, DEGREESTR: degree )",
    "id": 4823,
    "declarations": "-81: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(-81, degree) = None"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: W ) equals LINE: e",
    "id": 4824,
    "declarations": "W: CONICSECTION; e: LINE",
    "facts": "LeftDirectrix(W) = e"
},
{
    "assertion": "VectorOf ( Center ( CONICSECTION: O ), Circumcenter ( TRIANGLE: T ) ) equals VECTOR: x",
    "id": 4825,
    "declarations": "O: CONICSECTION; T: TRIANGLE; x: VECTOR",
    "facts": "VectorOf(Center(O), Circumcenter(T)) = x"
},
{
    "assertion": "LowerVertex ( CONICSECTION: X ) equals Center ( CONICSECTION: I )",
    "id": 4826,
    "declarations": "X: CONICSECTION; I: CONICSECTION",
    "facts": "LowerVertex(X) = Center(I)"
},
{
    "assertion": "RightFocus ( CONICSECTION: u ) equals LeftVertex ( CONICSECTION: I )",
    "id": 4827,
    "declarations": "u: CONICSECTION; I: CONICSECTION",
    "facts": "RightFocus(u) = LeftVertex(I)"
},
{
    "assertion": "Eccentricity ( CONICSECTION: O ) equals NUMBER: -3",
    "id": 4828,
    "declarations": "O: CONICSECTION; -3: NUMBER",
    "facts": "Eccentricity(O) = -3"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: Q, TRIANGLE: o ) equals BOOL: True",
    "id": 4829,
    "declarations": "Q: CIRCLE; o: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(Q, o) = True"
},
{
    "assertion": "Between ( POINT: i, POINT: w, Incenter ( TRIANGLE: u ) ) equals BOOL: True",
    "id": 4830,
    "declarations": "i: POINT; w: POINT; u: TRIANGLE; True: BOOL",
    "facts": "Between(i, w, Incenter(u)) = True"
},
{
    "assertion": "Distance ( POINT: b, LeftFocus ( CONICSECTION: m ) ) equals sqrt ( NUMBER: -99 )",
    "id": 4831,
    "declarations": "b: POINT; m: CONICSECTION; -99: NUMBER",
    "facts": "Distance(b, LeftFocus(m)) = sqrt(-99)"
},
{
    "assertion": "Expression ( CURVE: j ) equals EXPRESSION: x^3*space+*spacey^3*space=*space6*x*y",
    "id": 4832,
    "declarations": "j: CURVE; x^3*space+*spacey^3*space=*space6*x*y: EXPRESSION",
    "facts": "Expression(j) = x^3*space+*spacey^3*space=*space6*x*y"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: C ) equals AXIS: xAxis",
    "id": 4833,
    "declarations": "C: CONICSECTION; xAxis: AXIS",
    "facts": "SymmetryAxis(C) = xAxis"
},
{
    "assertion": "Circumcenter ( TRIANGLE: X ) equals Incenter ( TRIANGLE: u )",
    "id": 4834,
    "declarations": "X: TRIANGLE; u: TRIANGLE",
    "facts": "Circumcenter(X) = Incenter(u)"
},
{
    "assertion": "Center ( CONICSECTION: z ) equals Incenter ( TRIANGLE: S )",
    "id": 4835,
    "declarations": "z: CONICSECTION; S: TRIANGLE",
    "facts": "Center(z) = Incenter(S)"
},
{
    "assertion": "Circumcenter ( TRIANGLE: B ) equals POINT: W",
    "id": 4836,
    "declarations": "B: TRIANGLE; W: POINT",
    "facts": "Circumcenter(B) = W"
},
{
    "assertion": "FootPoint ( LeftDirectrix ( CONICSECTION: u ), LINE: p ) equals POINT: W",
    "id": 4837,
    "declarations": "u: CONICSECTION; p: LINE; W: POINT",
    "facts": "FootPoint(LeftDirectrix(u), p) = W"
},
{
    "assertion": "LineSegmentOf ( UpperFocus ( CONICSECTION: g ), Circumcenter ( TRIANGLE: W ) ) equals LINESEGMENT: g",
    "id": 4838,
    "declarations": "g: CONICSECTION; W: TRIANGLE; g: LINESEGMENT",
    "facts": "LineSegmentOf(UpperFocus(g), Circumcenter(W)) = g"
},
{
    "assertion": "UpperFocus ( CONICSECTION: Z ) equals POINT: F",
    "id": 4839,
    "declarations": "Z: CONICSECTION; F: POINT",
    "facts": "UpperFocus(Z) = F"
},
{
    "assertion": "InterReciprocal ( Abs ( LINESEGMENT: Z ) ) equals Length ( LINESEGMENT: h )",
    "id": 4840,
    "declarations": "Z: LINESEGMENT; h: LINESEGMENT",
    "facts": "InterReciprocal(Abs(Z)) = Length(h)"
},
{
    "assertion": "Between ( RightVertex ( CONICSECTION: I ), POINT: X, UpperFocus ( CONICSECTION: f ) ) equals BOOL: False",
    "id": 4841,
    "declarations": "I: CONICSECTION; X: POINT; f: CONICSECTION; False: BOOL",
    "facts": "Between(RightVertex(I), X, UpperFocus(f)) = False"
},
{
    "assertion": "Endpoint ( MinorAxis ( ELLIPSE: d ) ) equals UpperFocus ( CONICSECTION: C )",
    "id": 4842,
    "declarations": "d: ELLIPSE; C: CONICSECTION",
    "facts": "Endpoint(MinorAxis(d)) = UpperFocus(C)"
},
{
    "assertion": "RealAxis ( ELLIPSE: s ) equals LINESEGMENT: n",
    "id": 4843,
    "declarations": "s: ELLIPSE; n: LINESEGMENT",
    "facts": "RealAxis(s) = n"
},
{
    "assertion": "Negation ( XCoordinate ( LeftVertex ( CONICSECTION: Q ) ) equals NUMBER: 29 ) equals BOOL: True",
    "id": 4844,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LeftPart ( HYPERBOLA: Q ) equals CURVE: N",
    "id": 4845,
    "declarations": "Q: HYPERBOLA; N: CURVE",
    "facts": "LeftPart(Q) = N"
},
{
    "assertion": "Eccentricity ( CONICSECTION: q ) equals Inclination ( LINE: y )",
    "id": 4846,
    "declarations": "q: CONICSECTION; y: LINE",
    "facts": "Eccentricity(q) = Inclination(y)"
},
{
    "assertion": "VectorOf ( LowerVertex ( CONICSECTION: a ), Incenter ( TRIANGLE: Q ) ) equals VECTOR: u",
    "id": 4847,
    "declarations": "a: CONICSECTION; Q: TRIANGLE; u: VECTOR",
    "facts": "VectorOf(LowerVertex(a), Incenter(Q)) = u"
},
{
    "assertion": "LowerFocus ( CONICSECTION: b ) equals POINT: q",
    "id": 4848,
    "declarations": "b: CONICSECTION; q: POINT",
    "facts": "LowerFocus(b) = q"
},
{
    "assertion": "Orthocenter ( TRIANGLE: h ) equals FootPoint ( OverlappingLine ( LINESEGMENT: H ), PerpendicularBisector ( LINESEGMENT: f ) )",
    "id": 4849,
    "declarations": "h: TRIANGLE; H: LINESEGMENT; f: LINESEGMENT",
    "facts": "Orthocenter(h) = FootPoint(OverlappingLine(H), PerpendicularBisector(f))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: o, TRIANGLE: m ) equals BOOL: False",
    "id": 4850,
    "declarations": "o: CIRCLE; m: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(o, m) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: h ) equals POINT: J",
    "id": 4851,
    "declarations": "h: CONICSECTION; J: POINT",
    "facts": "LowerVertex(h) = J"
},
{
    "assertion": "LeftFocus ( CONICSECTION: e ) equals LowerVertex ( CONICSECTION: r )",
    "id": 4852,
    "declarations": "e: CONICSECTION; r: CONICSECTION",
    "facts": "LeftFocus(e) = LowerVertex(r)"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: W ) equals NUMBER: -50",
    "id": 4853,
    "declarations": "W: CONICSECTION; -50: NUMBER",
    "facts": "HalfFocalLength(W) = -50"
},
{
    "assertion": "Intercept ( LINE: q, AXIS: yAxis ) equals NUMBER: 9",
    "id": 4854,
    "declarations": "q: LINE; yAxis: AXIS; 9: NUMBER",
    "facts": "Intercept(q, yAxis) = 9"
},
{
    "assertion": "LeftVertex ( CONICSECTION: k ) equals POINT: T",
    "id": 4855,
    "declarations": "k: CONICSECTION; T: POINT",
    "facts": "LeftVertex(k) = T"
},
{
    "assertion": "Directrix ( CONICSECTION: z ) equals RightDirectrix ( CONICSECTION: I )",
    "id": 4856,
    "declarations": "z: CONICSECTION; I: CONICSECTION",
    "facts": "Directrix(z) = RightDirectrix(I)"
},
{
    "assertion": "TangentOnPoint ( UpperVertex ( CONICSECTION: K ), CURVE: G ) equals LINE: v",
    "id": 4857,
    "declarations": "K: CONICSECTION; G: CURVE; v: LINE",
    "facts": "TangentOnPoint(UpperVertex(K), G) = v"
},
{
    "assertion": "MinorAxis ( ELLIPSE: I ) equals LINESEGMENT: r",
    "id": 4858,
    "declarations": "I: ELLIPSE; r: LINESEGMENT",
    "facts": "MinorAxis(I) = r"
},
{
    "assertion": "Intercept ( RightDirectrix ( CONICSECTION: I ), AXIS: xAxis ) equals Diameter ( CIRCLE: X )",
    "id": 4859,
    "declarations": "I: CONICSECTION; xAxis: AXIS; X: CIRCLE",
    "facts": "Intercept(RightDirectrix(I), xAxis) = Diameter(X)"
},
{
    "assertion": "UpperFocus ( CONICSECTION: W ) equals POINT: M",
    "id": 4860,
    "declarations": "W: CONICSECTION; M: POINT",
    "facts": "UpperFocus(W) = M"
},
{
    "assertion": "Slope ( LINE: l ) equals DotProduct ( VECTOR: T, VECTOR: t )",
    "id": 4861,
    "declarations": "l: LINE; T: VECTOR; t: VECTOR",
    "facts": "Slope(l) = DotProduct(T, t)"
},
{
    "assertion": "Slope ( LINE: c ) equals InterReciprocal ( NUMBER: -85 )",
    "id": 4862,
    "declarations": "c: LINE; -85: NUMBER",
    "facts": "Slope(c) = InterReciprocal(-85)"
},
{
    "assertion": "IsPerpendicular ( LINE: G, LINE: L ) equals BOOL: False",
    "id": 4863,
    "declarations": "G: LINE; L: LINE; False: BOOL",
    "facts": "IsPerpendicular(G, L) = False"
},
{
    "assertion": "LocusEquation ( Incenter ( TRIANGLE: M ) ) equals EXPRESSION: x*space+*spacey^2*space=*space1",
    "id": 4864,
    "declarations": "M: TRIANGLE; x*space+*spacey^2*space=*space1: EXPRESSION",
    "facts": "LocusEquation(Incenter(M)) = x*space+*spacey^2*space=*space1"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: n ) equals NUMBER: 27",
    "id": 4865,
    "declarations": "n: CONICSECTION; 27: NUMBER",
    "facts": "HalfFocalLength(n) = 27"
},
{
    "assertion": "lg ( Abs ( LINESEGMENT: H ) ) equals NUMBER: 99",
    "id": 4866,
    "declarations": "H: LINESEGMENT; 99: NUMBER",
    "facts": "lg(Abs(H)) = 99"
},
{
    "assertion": "Slope ( RightDirectrix ( CONICSECTION: N ) ) equals YCoordinate ( LeftFocus ( CONICSECTION: d ) )",
    "id": 4867,
    "declarations": "N: CONICSECTION; d: CONICSECTION",
    "facts": "Slope(RightDirectrix(N)) = YCoordinate(LeftFocus(d))"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: p, TRIANGLE: h ) equals BOOL: True",
    "id": 4868,
    "declarations": "p: CIRCLE; h: TRIANGLE; True: BOOL",
    "facts": "IsInscribedCircle(p, h) = True"
},
{
    "assertion": "XCoordinate ( POINT: K ) equals Distance ( LeftVertex ( CONICSECTION: w ), LowerVertex ( CONICSECTION: v ) )",
    "id": 4869,
    "declarations": "K: POINT; w: CONICSECTION; v: CONICSECTION",
    "facts": "XCoordinate(K) = Distance(LeftVertex(w), LowerVertex(v))"
},
{
    "assertion": "Distance ( UpperVertex ( CONICSECTION: K ), POINT: M ) equals NUMBER: 13",
    "id": 4870,
    "declarations": "K: CONICSECTION; M: POINT; 13: NUMBER",
    "facts": "Distance(UpperVertex(K), M) = 13"
},
{
    "assertion": "Min ( NUMBER: 11 ) equals InterReciprocal ( Abs ( RealAxis ( ELLIPSE: P ) ) )",
    "id": 4871,
    "declarations": "11: NUMBER; P: ELLIPSE",
    "facts": "Min(11) = InterReciprocal(Abs(RealAxis(P)))"
},
{
    "assertion": "IsPerpendicular ( LINE: X, PerpendicularBisector ( MinorAxis ( ELLIPSE: m ) ) ) equals BOOL: False",
    "id": 4872,
    "declarations": "X: LINE; m: ELLIPSE; False: BOOL",
    "facts": "IsPerpendicular(X, PerpendicularBisector(MinorAxis(m))) = False"
},
{
    "assertion": "MidPoint ( LINESEGMENT: t ) equals Incenter ( TRIANGLE: R )",
    "id": 4873,
    "declarations": "t: LINESEGMENT; R: TRIANGLE",
    "facts": "MidPoint(t) = Incenter(R)"
},
{
    "assertion": "Center ( CONICSECTION: c ) equals POINT: c",
    "id": 4874,
    "declarations": "c: CONICSECTION; c: POINT",
    "facts": "Center(c) = c"
},
{
    "assertion": "IsIntersect ( CURVE: E, LeftPart ( HYPERBOLA: R ) ) equals BOOL: False",
    "id": 4875,
    "declarations": "E: CURVE; R: HYPERBOLA; False: BOOL",
    "facts": "IsIntersect(E, LeftPart(R)) = False"
},
{
    "assertion": "Abs ( LINESEGMENT: y ) equals Min ( Slope ( LINE: h ) )",
    "id": 4876,
    "declarations": "y: LINESEGMENT; h: LINE",
    "facts": "Abs(y) = Min(Slope(h))"
},
{
    "assertion": "UpperFocus ( CONICSECTION: t ) equals POINT: K",
    "id": 4877,
    "declarations": "t: CONICSECTION; K: POINT",
    "facts": "UpperFocus(t) = K"
},
{
    "assertion": "lg ( Distance ( POINT: I, UpperVertex ( CONICSECTION: q ) ) ) equals Diameter ( CIRCLE: A )",
    "id": 4878,
    "declarations": "I: POINT; q: CONICSECTION; A: CIRCLE",
    "facts": "lg(Distance(I, UpperVertex(q))) = Diameter(A)"
},
{
    "assertion": "DotProduct ( VECTOR: j, VECTOR: W ) equals NUMBER: -82",
    "id": 4879,
    "declarations": "j: VECTOR; W: VECTOR; -82: NUMBER",
    "facts": "DotProduct(j, W) = -82"
},
{
    "assertion": "LowerFocus ( CONICSECTION: r ) equals POINT: o",
    "id": 4880,
    "declarations": "r: CONICSECTION; o: POINT",
    "facts": "LowerFocus(r) = o"
},
{
    "assertion": "IsParallel ( LINE: C, RightDirectrix ( CONICSECTION: L ) ) equals BOOL: False",
    "id": 4881,
    "declarations": "C: LINE; L: CONICSECTION; False: BOOL",
    "facts": "IsParallel(C, RightDirectrix(L)) = False"
},
{
    "assertion": "NumIntersection ( LeftPart ( HYPERBOLA: H ), CURVE: P ) equals Diameter ( CIRCLE: u )",
    "id": 4882,
    "declarations": "H: HYPERBOLA; P: CURVE; u: CIRCLE",
    "facts": "NumIntersection(LeftPart(H), P) = Diameter(u)"
},
{
    "assertion": "PointOnCurve ( POINT: Q, CURVE: v ) equals BOOL: False",
    "id": 4883,
    "declarations": "Q: POINT; v: CURVE; False: BOOL",
    "facts": "PointOnCurve(Q, v) = False"
},
{
    "assertion": "LowerFocus ( CONICSECTION: v ) equals POINT: H",
    "id": 4884,
    "declarations": "v: CONICSECTION; H: POINT",
    "facts": "LowerFocus(v) = H"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: Q ) equals LINE: O",
    "id": 4885,
    "declarations": "Q: CONICSECTION; O: LINE",
    "facts": "RightDirectrix(Q) = O"
},
{
    "assertion": "UpperFocus ( CONICSECTION: y ) equals POINT: A",
    "id": 4886,
    "declarations": "y: CONICSECTION; A: POINT",
    "facts": "UpperFocus(y) = A"
},
{
    "assertion": "XCoordinate ( POINT: t ) equals NUMBER: -64",
    "id": 4887,
    "declarations": "t: POINT; -64: NUMBER",
    "facts": "XCoordinate(t) = -64"
},
{
    "assertion": "Min ( NUMBER: -30 ) equals sqrt ( Slope ( LINE: W ) )",
    "id": 4888,
    "declarations": "-30: NUMBER; W: LINE",
    "facts": "Min(-30) = sqrt(Slope(W))"
},
{
    "assertion": "Radius ( CIRCLE: B ) equals Area ( CONICSECTION: G )",
    "id": 4889,
    "declarations": "B: CIRCLE; G: CONICSECTION",
    "facts": "Radius(B) = Area(G)"
},
{
    "assertion": "IsInscribedCircle ( CIRCLE: U, TRIANGLE: C ) equals BOOL: False",
    "id": 4890,
    "declarations": "U: CIRCLE; C: TRIANGLE; False: BOOL",
    "facts": "IsInscribedCircle(U, C) = False"
},
{
    "assertion": "LowerVertex ( CONICSECTION: a ) equals POINT: f",
    "id": 4891,
    "declarations": "a: CONICSECTION; f: POINT",
    "facts": "LowerVertex(a) = f"
},
{
    "assertion": "sqrt ( Diameter ( CircumCircle ( TRIANGLE: H ) ) ) equals NUMBER: 86",
    "id": 4892,
    "declarations": "H: TRIANGLE; 86: NUMBER",
    "facts": "sqrt(Diameter(CircumCircle(H))) = 86"
},
{
    "assertion": "Focus ( CONICSECTION: P ) equals POINT: D",
    "id": 4893,
    "declarations": "P: CONICSECTION; D: POINT",
    "facts": "Focus(P) = D"
},
{
    "assertion": "RealAxis ( ELLIPSE: G ) equals LINESEGMENT: q",
    "id": 4894,
    "declarations": "G: ELLIPSE; q: LINESEGMENT",
    "facts": "RealAxis(G) = q"
},
{
    "assertion": "PointOnCurve ( LowerVertex ( CONICSECTION: n ), CURVE: Y ) equals BOOL: False",
    "id": 4895,
    "declarations": "n: CONICSECTION; Y: CURVE; False: BOOL",
    "facts": "PointOnCurve(LowerVertex(n), Y) = False"
},
{
    "assertion": "YCoordinate ( POINT: m ) equals Perimeter ( CONICSECTION: R )",
    "id": 4896,
    "declarations": "m: POINT; R: CONICSECTION",
    "facts": "YCoordinate(m) = Perimeter(R)"
},
{
    "assertion": "And ( Slope ( LineOf ( MidPoint ( LINESEGMENT: j ), Projection ( UpperFocus ( CONICSECTION: L ), LINE: g ) ) ) equals Abs ( LINESEGMENT: E ), Inclination ( RightDirectrix ( CONICSECTION: E ) ) equals Min ( Slope ( RightDirectrix ( CONICSECTION: T ) ) ) ) equals BOOL: False",
    "id": 4897,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "RealAxis ( ELLIPSE: F ) equals RealAxis ( ELLIPSE: x )",
    "id": 4898,
    "declarations": "F: ELLIPSE; x: ELLIPSE",
    "facts": "RealAxis(F) = RealAxis(x)"
},
{
    "assertion": "FocalLength ( CONICSECTION: B ) equals NumIntersection ( CURVE: Z, CURVE: r )",
    "id": 4899,
    "declarations": "B: CONICSECTION; Z: CURVE; r: CURVE",
    "facts": "FocalLength(B) = NumIntersection(Z, r)"
},
{
    "assertion": "Directrix ( CONICSECTION: m ) equals PerpendicularBisector ( MinorAxis ( ELLIPSE: d ) )",
    "id": 4900,
    "declarations": "m: CONICSECTION; d: ELLIPSE",
    "facts": "Directrix(m) = PerpendicularBisector(MinorAxis(d))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: G ) equals Intercept ( LINE: B, AXIS: xAxis )",
    "id": 4901,
    "declarations": "G: CONICSECTION; B: LINE; xAxis: AXIS",
    "facts": "Eccentricity(G) = Intercept(B, xAxis)"
},
{
    "assertion": "CircumCircle ( TRIANGLE: I ) equals CIRCLE: D",
    "id": 4902,
    "declarations": "I: TRIANGLE; D: CIRCLE",
    "facts": "CircumCircle(I) = D"
},
{
    "assertion": "IsParallel ( LINE: z, LINE: S ) equals BOOL: False",
    "id": 4903,
    "declarations": "z: LINE; S: LINE; False: BOOL",
    "facts": "IsParallel(z, S) = False"
},
{
    "assertion": "Circumcenter ( TriangleOf ( RightVertex ( CONICSECTION: L ), LowerVertex ( CONICSECTION: Y ), POINT: i ) ) equals UpperVertex ( CONICSECTION: D )",
    "id": 4904,
    "declarations": "L: CONICSECTION; Y: CONICSECTION; i: POINT; D: CONICSECTION",
    "facts": "Circumcenter(TriangleOf(RightVertex(L), LowerVertex(Y), i)) = UpperVertex(D)"
},
{
    "assertion": "Endpoint ( MajorAxis ( ELLIPSE: d ) ) equals RightFocus ( CONICSECTION: U )",
    "id": 4905,
    "declarations": "d: ELLIPSE; U: CONICSECTION",
    "facts": "Endpoint(MajorAxis(d)) = RightFocus(U)"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: Z ) equals MajorAxis ( ELLIPSE: O )",
    "id": 4906,
    "declarations": "Z: ELLIPSE; O: ELLIPSE",
    "facts": "ImaginaryAxis(Z) = MajorAxis(O)"
},
{
    "assertion": "Max ( FocalLength ( CONICSECTION: e ) ) equals NumIntersection ( CURVE: o, CURVE: V )",
    "id": 4907,
    "declarations": "e: CONICSECTION; o: CURVE; V: CURVE",
    "facts": "Max(FocalLength(e)) = NumIntersection(o, V)"
},
{
    "assertion": "MinorAxis ( ELLIPSE: m ) equals LINESEGMENT: a",
    "id": 4908,
    "declarations": "m: ELLIPSE; a: LINESEGMENT",
    "facts": "MinorAxis(m) = a"
},
{
    "assertion": "Quadrant ( Circumcenter ( TriangleOf ( POINT: J, LeftFocus ( CONICSECTION: I ), POINT: g ) ) ) equals NUMBER: -25",
    "id": 4909,
    "declarations": "J: POINT; I: CONICSECTION; g: POINT; -25: NUMBER",
    "facts": "Quadrant(Circumcenter(TriangleOf(J, LeftFocus(I), g))) = -25"
},
{
    "assertion": "Slope ( LINE: i ) equals Abs ( MajorAxis ( ELLIPSE: l ) )",
    "id": 4910,
    "declarations": "i: LINE; l: ELLIPSE",
    "facts": "Slope(i) = Abs(MajorAxis(l))"
},
{
    "assertion": "Abs ( LINESEGMENT: j ) equals NUMBER: 1",
    "id": 4911,
    "declarations": "j: LINESEGMENT; 1: NUMBER",
    "facts": "Abs(j) = 1"
},
{
    "assertion": "Negation ( Eccentricity ( CONICSECTION: i ) equals DotProduct ( VECTOR: k, VECTOR: s ) ) equals BOOL: False",
    "id": 4912,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "IsIntersect ( LeftPart ( HYPERBOLA: O ), CURVE: f ) equals BOOL: True",
    "id": 4913,
    "declarations": "O: HYPERBOLA; f: CURVE; True: BOOL",
    "facts": "IsIntersect(LeftPart(O), f) = True"
},
{
    "assertion": "XCoordinate ( Orthocenter ( TRIANGLE: M ) ) equals NUMBER: 5",
    "id": 4914,
    "declarations": "M: TRIANGLE; 5: NUMBER",
    "facts": "XCoordinate(Orthocenter(M)) = 5"
},
{
    "assertion": "Abs ( LineSegmentOf ( RightFocus ( CONICSECTION: L ), Orthocenter ( TRIANGLE: C ) ) ) equals NUMBER: -1",
    "id": 4915,
    "declarations": "L: CONICSECTION; C: TRIANGLE; -1: NUMBER",
    "facts": "Abs(LineSegmentOf(RightFocus(L), Orthocenter(C))) = -1"
},
{
    "assertion": "ApplyUnit ( sqrt ( NUMBER: -81 ), DEGREESTR: degree )",
    "id": 4916,
    "declarations": "-81: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(sqrt(-81), degree) = None"
},
{
    "assertion": "LowerFocus ( CONICSECTION: D ) equals RightVertex ( CONICSECTION: u )",
    "id": 4917,
    "declarations": "D: CONICSECTION; u: CONICSECTION",
    "facts": "LowerFocus(D) = RightVertex(u)"
},
{
    "assertion": "TangentOfPoint ( POINT: U, CURVE: p ) equals LINE: f",
    "id": 4918,
    "declarations": "U: POINT; p: CURVE; f: LINE",
    "facts": "TangentOfPoint(U, p) = f"
},
{
    "assertion": "RightPart ( HYPERBOLA: Q ) equals CURVE: p",
    "id": 4919,
    "declarations": "Q: HYPERBOLA; p: CURVE",
    "facts": "RightPart(Q) = p"
},
{
    "assertion": "LeftFocus ( CONICSECTION: O ) equals Circumcenter ( TRIANGLE: E )",
    "id": 4920,
    "declarations": "O: CONICSECTION; E: TRIANGLE",
    "facts": "LeftFocus(O) = Circumcenter(E)"
},
{
    "assertion": "RightDirectrix ( CONICSECTION: a ) equals LINE: w",
    "id": 4921,
    "declarations": "a: CONICSECTION; w: LINE",
    "facts": "RightDirectrix(a) = w"
},
{
    "assertion": "FootPoint ( OverlappingLine ( LINESEGMENT: x ), TangentOnPoint ( POINT: m, CURVE: Z ) ) equals POINT: f",
    "id": 4922,
    "declarations": "x: LINESEGMENT; m: POINT; Z: CURVE; f: POINT",
    "facts": "FootPoint(OverlappingLine(x), TangentOnPoint(m, Z)) = f"
},
{
    "assertion": "Min ( Min ( HalfFocalLength ( CONICSECTION: N ) ) ) equals NUMBER: 65",
    "id": 4923,
    "declarations": "N: CONICSECTION; 65: NUMBER",
    "facts": "Min(Min(HalfFocalLength(N))) = 65"
},
{
    "assertion": "LineOf ( LowerFocus ( CONICSECTION: W ), RightVertex ( CONICSECTION: V ) ) equals PerpendicularBisector ( RealAxis ( ELLIPSE: S ) )",
    "id": 4924,
    "declarations": "W: CONICSECTION; V: CONICSECTION; S: ELLIPSE",
    "facts": "LineOf(LowerFocus(W), RightVertex(V)) = PerpendicularBisector(RealAxis(S))"
},
{
    "assertion": "Eccentricity ( CONICSECTION: u ) equals YCoordinate ( UpperVertex ( CONICSECTION: L ) )",
    "id": 4925,
    "declarations": "u: CONICSECTION; L: CONICSECTION",
    "facts": "Eccentricity(u) = YCoordinate(UpperVertex(L))"
},
{
    "assertion": "PointOnCurve ( POINT: D, CURVE: r ) equals BOOL: True",
    "id": 4926,
    "declarations": "D: POINT; r: CURVE; True: BOOL",
    "facts": "PointOnCurve(D, r) = True"
},
{
    "assertion": "ApplyUnit ( Quadrant ( Incenter ( TRIANGLE: j ) ), DEGREESTR: degree )",
    "id": 4927,
    "declarations": "j: TRIANGLE; degree: DEGREESTR",
    "facts": "ApplyUnit(Quadrant(Incenter(j)), degree) = None"
},
{
    "assertion": "IsOutTangent ( CIRCLE: m, CIRCLE: M ) equals BOOL: True",
    "id": 4928,
    "declarations": "m: CIRCLE; M: CIRCLE; True: BOOL",
    "facts": "IsOutTangent(m, M) = True"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: A ) equals NUMBER: 62",
    "id": 4929,
    "declarations": "A: CONICSECTION; 62: NUMBER",
    "facts": "HalfFocalLength(A) = 62"
},
{
    "assertion": "FootPoint ( LINE: O, LINE: c ) equals Circumcenter ( TRIANGLE: z )",
    "id": 4930,
    "declarations": "O: LINE; c: LINE; z: TRIANGLE",
    "facts": "FootPoint(O, c) = Circumcenter(z)"
},
{
    "assertion": "RightFocus ( CONICSECTION: L ) equals MidPoint ( LINESEGMENT: v )",
    "id": 4931,
    "declarations": "L: CONICSECTION; v: LINESEGMENT",
    "facts": "RightFocus(L) = MidPoint(v)"
},
{
    "assertion": "Intercept ( LINE: S, AXIS: yAxis ) equals Inclination ( LINE: O )",
    "id": 4932,
    "declarations": "S: LINE; yAxis: AXIS; O: LINE",
    "facts": "Intercept(S, yAxis) = Inclination(O)"
},
{
    "assertion": "TriangleOf ( RightFocus ( CONICSECTION: q ), UpperFocus ( CONICSECTION: o ), POINT: H ) equals TRIANGLE: m",
    "id": 4933,
    "declarations": "q: CONICSECTION; o: CONICSECTION; H: POINT; m: TRIANGLE",
    "facts": "TriangleOf(RightFocus(q), UpperFocus(o), H) = m"
},
{
    "assertion": "XCoordinate ( POINT: o ) equals HalfFocalLength ( CONICSECTION: F )",
    "id": 4934,
    "declarations": "o: POINT; F: CONICSECTION",
    "facts": "XCoordinate(o) = HalfFocalLength(F)"
},
{
    "assertion": "Intersection ( CURVE: Q, CURVE: f ) equals POINT: y",
    "id": 4935,
    "declarations": "Q: CURVE; f: CURVE; y: POINT",
    "facts": "Intersection(Q, f) = y"
},
{
    "assertion": "Radius ( CIRCLE: W ) equals NUMBER: 25",
    "id": 4936,
    "declarations": "W: CIRCLE; 25: NUMBER",
    "facts": "Radius(W) = 25"
},
{
    "assertion": "FocalLength ( CONICSECTION: a ) equals NUMBER: -60",
    "id": 4937,
    "declarations": "a: CONICSECTION; -60: NUMBER",
    "facts": "FocalLength(a) = -60"
},
{
    "assertion": "lg ( sqrt ( Intercept ( LINE: X, AXIS: yAxis ) ) ) equals NUMBER: 94",
    "id": 4938,
    "declarations": "X: LINE; yAxis: AXIS; 94: NUMBER",
    "facts": "lg(sqrt(Intercept(X, yAxis))) = 94"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: G ) equals LINE: n",
    "id": 4939,
    "declarations": "G: LINESEGMENT; n: LINE",
    "facts": "OverlappingLine(G) = n"
},
{
    "assertion": "TangentPoint ( TangentOfPoint ( FootPoint ( TangentOnPoint ( RightVertex ( CONICSECTION: i ), CURVE: B ), LINE: E ), LeftPart ( HYPERBOLA: r ) ), CIRCLE: j ) equals Incenter ( TRIANGLE: c )",
    "id": 4940,
    "declarations": "i: CONICSECTION; B: CURVE; E: LINE; r: HYPERBOLA; j: CIRCLE; c: TRIANGLE",
    "facts": "TangentPoint(TangentOfPoint(FootPoint(TangentOnPoint(RightVertex(i), B), E), LeftPart(r)), j) = Incenter(c)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: y ) equals UpperVertex ( CONICSECTION: q )",
    "id": 4941,
    "declarations": "y: CONICSECTION; q: CONICSECTION",
    "facts": "LowerFocus(y) = UpperVertex(q)"
},
{
    "assertion": "Incenter ( TRIANGLE: C ) equals MidPoint ( MinorAxis ( ELLIPSE: v ) )",
    "id": 4942,
    "declarations": "C: TRIANGLE; v: ELLIPSE",
    "facts": "Incenter(C) = MidPoint(MinorAxis(v))"
},
{
    "assertion": "Min ( Length ( LINESEGMENT: P ) ) equals NUMBER: -84",
    "id": 4943,
    "declarations": "P: LINESEGMENT; -84: NUMBER",
    "facts": "Min(Length(P)) = -84"
},
{
    "assertion": "FocalLength ( CONICSECTION: Y ) equals NUMBER: 45",
    "id": 4944,
    "declarations": "Y: CONICSECTION; 45: NUMBER",
    "facts": "FocalLength(Y) = 45"
},
{
    "assertion": "LowerVertex ( CONICSECTION: C ) equals POINT: x",
    "id": 4945,
    "declarations": "C: CONICSECTION; x: POINT",
    "facts": "LowerVertex(C) = x"
},
{
    "assertion": "sqrt ( NUMBER: 92 ) equals FocalLength ( CONICSECTION: b )",
    "id": 4946,
    "declarations": "92: NUMBER; b: CONICSECTION",
    "facts": "sqrt(92) = FocalLength(b)"
},
{
    "assertion": "Area ( CONICSECTION: b ) equals YCoordinate ( Projection ( POINT: D, LINE: p ) )",
    "id": 4947,
    "declarations": "b: CONICSECTION; D: POINT; p: LINE",
    "facts": "Area(b) = YCoordinate(Projection(D, p))"
},
{
    "assertion": "Asymptote ( HYPERBOLA: V ) equals LINE: C",
    "id": 4948,
    "declarations": "V: HYPERBOLA; C: LINE",
    "facts": "Asymptote(V) = C"
},
{
    "assertion": "SymmetryAxis ( CONICSECTION: t ) equals AXIS: yAxis",
    "id": 4949,
    "declarations": "t: CONICSECTION; yAxis: AXIS",
    "facts": "SymmetryAxis(t) = yAxis"
},
{
    "assertion": "OverlappingLine ( LINESEGMENT: W ) equals LINE: F",
    "id": 4950,
    "declarations": "W: LINESEGMENT; F: LINE",
    "facts": "OverlappingLine(W) = F"
},
{
    "assertion": "IsDiameter ( LINESEGMENT: a, CIRCLE: N ) equals BOOL: False",
    "id": 4951,
    "declarations": "a: LINESEGMENT; N: CIRCLE; False: BOOL",
    "facts": "IsDiameter(a, N) = False"
},
{
    "assertion": "Negation ( TangentPoint ( LINE: g, CIRCLE: K ) equals Center ( CONICSECTION: d ) ) equals BOOL: True",
    "id": 4952,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "Projection ( POINT: x, LINE: E ) equals POINT: z",
    "id": 4953,
    "declarations": "x: POINT; E: LINE; z: POINT",
    "facts": "Projection(x, E) = z"
},
{
    "assertion": "IsTangent ( LINE: p, CONICSECTION: M ) equals BOOL: False",
    "id": 4954,
    "declarations": "p: LINE; M: CONICSECTION; False: BOOL",
    "facts": "IsTangent(p, M) = False"
},
{
    "assertion": "Coordinate ( POINT: h ) equals ( Distance ( RightFocus ( CONICSECTION: B ), RightFocus ( CONICSECTION: M ) ), NUMBER: 73 )",
    "id": 4955,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "LowerFocus ( CONICSECTION: M ) equals POINT: E",
    "id": 4956,
    "declarations": "M: CONICSECTION; E: POINT",
    "facts": "LowerFocus(M) = E"
},
{
    "assertion": "Eccentricity ( CONICSECTION: L ) equals Diameter ( CIRCLE: j )",
    "id": 4957,
    "declarations": "L: CONICSECTION; j: CIRCLE",
    "facts": "Eccentricity(L) = Diameter(j)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: c ) equals CURVE: T",
    "id": 4958,
    "declarations": "c: HYPERBOLA; T: CURVE",
    "facts": "LeftPart(c) = T"
},
{
    "assertion": "Locus ( POINT: h ) equals CURVE: F",
    "id": 4959,
    "declarations": "h: POINT; F: CURVE",
    "facts": "Locus(h) = F"
},
{
    "assertion": "Negation ( Radius ( CIRCLE: v ) equals NUMBER: -89 ) equals BOOL: False",
    "id": 4960,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: n ) equals LINESEGMENT: X",
    "id": 4961,
    "declarations": "n: ELLIPSE; X: LINESEGMENT",
    "facts": "ImaginaryAxis(n) = X"
},
{
    "assertion": "ImaginaryAxis ( ELLIPSE: p ) equals LineSegmentOf ( Center ( CONICSECTION: S ), Orthocenter ( TRIANGLE: l ) )",
    "id": 4962,
    "declarations": "p: ELLIPSE; S: CONICSECTION; l: TRIANGLE",
    "facts": "ImaginaryAxis(p) = LineSegmentOf(Center(S), Orthocenter(l))"
},
{
    "assertion": "XCoordinate ( POINT: Q ) equals NUMBER: -45",
    "id": 4963,
    "declarations": "Q: POINT; -45: NUMBER",
    "facts": "XCoordinate(Q) = -45"
},
{
    "assertion": "Area ( CONICSECTION: X ) equals NUMBER: -16",
    "id": 4964,
    "declarations": "X: CONICSECTION; -16: NUMBER",
    "facts": "Area(X) = -16"
},
{
    "assertion": "Perimeter ( CONICSECTION: j ) equals Radius ( CIRCLE: U )",
    "id": 4965,
    "declarations": "j: CONICSECTION; U: CIRCLE",
    "facts": "Perimeter(j) = Radius(U)"
},
{
    "assertion": "LeftVertex ( CONICSECTION: v ) equals LowerVertex ( CONICSECTION: d )",
    "id": 4966,
    "declarations": "v: CONICSECTION; d: CONICSECTION",
    "facts": "LeftVertex(v) = LowerVertex(d)"
},
{
    "assertion": "RealAxis ( ELLIPSE: s ) equals RealAxis ( ELLIPSE: z )",
    "id": 4967,
    "declarations": "s: ELLIPSE; z: ELLIPSE",
    "facts": "RealAxis(s) = RealAxis(z)"
},
{
    "assertion": "lg ( lg ( Slope ( LeftDirectrix ( CONICSECTION: X ) ) ) ) equals NUMBER: -98",
    "id": 4968,
    "declarations": "X: CONICSECTION; -98: NUMBER",
    "facts": "lg(lg(Slope(LeftDirectrix(X)))) = -98"
},
{
    "assertion": "Intersection ( Locus ( FootPoint ( LINE: R, LINE: Q ) ), CURVE: Y ) equals Circumcenter ( TRIANGLE: I )",
    "id": 4969,
    "declarations": "R: LINE; Q: LINE; Y: CURVE; I: TRIANGLE",
    "facts": "Intersection(Locus(FootPoint(R, Q)), Y) = Circumcenter(I)"
},
{
    "assertion": "Intercept ( OverlappingLine ( MinorAxis ( ELLIPSE: A ) ), AXIS: xAxis ) equals DotProduct ( VECTOR: S, VECTOR: D )",
    "id": 4970,
    "declarations": "A: ELLIPSE; xAxis: AXIS; S: VECTOR; D: VECTOR",
    "facts": "Intercept(OverlappingLine(MinorAxis(A)), xAxis) = DotProduct(S, D)"
},
{
    "assertion": "lg ( NUMBER: 45 ) equals NUMBER: -6",
    "id": 4971,
    "declarations": "45: NUMBER; -6: NUMBER",
    "facts": "lg(45) = -6"
},
{
    "assertion": "LeftDirectrix ( CONICSECTION: M ) equals LINE: f",
    "id": 4972,
    "declarations": "M: CONICSECTION; f: LINE",
    "facts": "LeftDirectrix(M) = f"
},
{
    "assertion": "TangentOnPoint ( POINT: P, CURVE: r ) equals LINE: J",
    "id": 4973,
    "declarations": "P: POINT; r: CURVE; J: LINE",
    "facts": "TangentOnPoint(P, r) = J"
},
{
    "assertion": "Vertex ( CONICSECTION: v ) equals UpperVertex ( CONICSECTION: K )",
    "id": 4974,
    "declarations": "v: CONICSECTION; K: CONICSECTION",
    "facts": "Vertex(v) = UpperVertex(K)"
},
{
    "assertion": "LowerFocus ( CONICSECTION: o ) equals POINT: g",
    "id": 4975,
    "declarations": "o: CONICSECTION; g: POINT",
    "facts": "LowerFocus(o) = g"
},
{
    "assertion": "InterceptChord ( LINE: P, CONICSECTION: G ) equals LINESEGMENT: J",
    "id": 4976,
    "declarations": "P: LINE; G: CONICSECTION; J: LINESEGMENT",
    "facts": "InterceptChord(P, G) = J"
},
{
    "assertion": "YCoordinate ( POINT: G ) equals NUMBER: -54",
    "id": 4977,
    "declarations": "G: POINT; -54: NUMBER",
    "facts": "YCoordinate(G) = -54"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: M, TRIANGLE: m ) equals BOOL: True",
    "id": 4978,
    "declarations": "M: CIRCLE; m: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(M, m) = True"
},
{
    "assertion": "IsTangent ( TangentOnPoint ( Center ( CONICSECTION: w ), CURVE: g ), CONICSECTION: Q ) equals BOOL: True",
    "id": 4979,
    "declarations": "w: CONICSECTION; g: CURVE; Q: CONICSECTION; True: BOOL",
    "facts": "IsTangent(TangentOnPoint(Center(w), g), Q) = True"
},
{
    "assertion": "Locus ( POINT: I ) equals CURVE: U",
    "id": 4980,
    "declarations": "I: POINT; U: CURVE",
    "facts": "Locus(I) = U"
},
{
    "assertion": "Diameter ( CIRCLE: F ) equals NUMBER: 30",
    "id": 4981,
    "declarations": "F: CIRCLE; 30: NUMBER",
    "facts": "Diameter(F) = 30"
},
{
    "assertion": "Intercept ( LeftDirectrix ( CONICSECTION: T ), AXIS: xAxis ) equals Intercept ( LINE: t, SymmetryAxis ( CONICSECTION: F ) )",
    "id": 4982,
    "declarations": "T: CONICSECTION; xAxis: AXIS; t: LINE; F: CONICSECTION",
    "facts": "Intercept(LeftDirectrix(T), xAxis) = Intercept(t, SymmetryAxis(F))"
},
{
    "assertion": "HalfFocalLength ( CONICSECTION: q ) equals NUMBER: 62",
    "id": 4983,
    "declarations": "q: CONICSECTION; 62: NUMBER",
    "facts": "HalfFocalLength(q) = 62"
},
{
    "assertion": "InterReciprocal ( Intercept ( LINE: p, AXIS: yAxis ) ) equals Diameter ( CIRCLE: D )",
    "id": 4984,
    "declarations": "p: LINE; yAxis: AXIS; D: CIRCLE",
    "facts": "InterReciprocal(Intercept(p, yAxis)) = Diameter(D)"
},
{
    "assertion": "UpperVertex ( CONICSECTION: U ) equals UpperVertex ( CONICSECTION: S )",
    "id": 4985,
    "declarations": "U: CONICSECTION; S: CONICSECTION",
    "facts": "UpperVertex(U) = UpperVertex(S)"
},
{
    "assertion": "Area ( CONICSECTION: A ) equals FocalLength ( CONICSECTION: t )",
    "id": 4986,
    "declarations": "A: CONICSECTION; t: CONICSECTION",
    "facts": "Area(A) = FocalLength(t)"
},
{
    "assertion": "AngleOf ( POINT: h, Incenter ( TRIANGLE: n ), Orthocenter ( TRIANGLE: r ) ) equals AngleOf ( POINT: S, Circumcenter ( TRIANGLE: o ), Projection ( Incenter ( TRIANGLE: T ), LINE: M ) )",
    "id": 4987,
    "declarations": "h: POINT; n: TRIANGLE; r: TRIANGLE; S: POINT; o: TRIANGLE; T: TRIANGLE; M: LINE",
    "facts": "AngleOf(h, Incenter(n), Orthocenter(r)) = AngleOf(S, Circumcenter(o), Projection(Incenter(T), M))"
},
{
    "assertion": "LeftPart ( HYPERBOLA: o ) equals LeftPart ( HYPERBOLA: h )",
    "id": 4988,
    "declarations": "o: HYPERBOLA; h: HYPERBOLA",
    "facts": "LeftPart(o) = LeftPart(h)"
},
{
    "assertion": "IsCircumCircle ( CIRCLE: J, TRIANGLE: Z ) equals BOOL: True",
    "id": 4989,
    "declarations": "J: CIRCLE; Z: TRIANGLE; True: BOOL",
    "facts": "IsCircumCircle(J, Z) = True"
},
{
    "assertion": "MidPoint ( LINESEGMENT: Y ) equals POINT: q",
    "id": 4990,
    "declarations": "Y: LINESEGMENT; q: POINT",
    "facts": "MidPoint(Y) = q"
},
{
    "assertion": "LeftFocus ( CONICSECTION: G ) equals Center ( CONICSECTION: L )",
    "id": 4991,
    "declarations": "G: CONICSECTION; L: CONICSECTION",
    "facts": "LeftFocus(G) = Center(L)"
},
{
    "assertion": "LeftPart ( HYPERBOLA: L ) equals CURVE: Q",
    "id": 4992,
    "declarations": "L: HYPERBOLA; Q: CURVE",
    "facts": "LeftPart(L) = Q"
},
{
    "assertion": "sqrt ( Area ( CONICSECTION: g ) ) equals Quadrant ( LowerVertex ( CONICSECTION: A ) )",
    "id": 4993,
    "declarations": "g: CONICSECTION; A: CONICSECTION",
    "facts": "sqrt(Area(g)) = Quadrant(LowerVertex(A))"
},
{
    "assertion": "Focus ( CONICSECTION: P ) equals POINT: Q",
    "id": 4994,
    "declarations": "P: CONICSECTION; Q: POINT",
    "facts": "Focus(P) = Q"
},
{
    "assertion": "And ( ApplyUnit ( HalfFocalLength ( CONICSECTION: E ), DEGREESTR: degree ), MinorAxis ( ELLIPSE: P ) equals LINESEGMENT: q ) equals BOOL: True",
    "id": 4995,
    "declarations": null,
    "facts": "None"
},
{
    "assertion": "ApplyUnit ( NUMBER: 63, DEGREESTR: degree )",
    "id": 4996,
    "declarations": "63: NUMBER; degree: DEGREESTR",
    "facts": "ApplyUnit(63, degree) = None"
},
{
    "assertion": "RealAxis ( ELLIPSE: V ) equals LINESEGMENT: P",
    "id": 4997,
    "declarations": "V: ELLIPSE; P: LINESEGMENT",
    "facts": "RealAxis(V) = P"
},
{
    "assertion": "XCoordinate ( LowerFocus ( CONICSECTION: j ) ) equals NUMBER: -32",
    "id": 4998,
    "declarations": "j: CONICSECTION; -32: NUMBER",
    "facts": "XCoordinate(LowerFocus(j)) = -32"
},
{
    "assertion": "lg ( Quadrant ( POINT: i ) ) equals Inclination ( LeftDirectrix ( CONICSECTION: a ) )",
    "id": 4999,
    "declarations": "i: POINT; a: CONICSECTION",
    "facts": "lg(Quadrant(i)) = Inclination(LeftDirectrix(a))"
},
{
    "assertion": "Orthocenter ( TRIANGLE: a ) equals POINT: H",
    "id": 5000,
    "declarations": "a: TRIANGLE; H: POINT",
    "facts": "Orthocenter(a) = H"
}
]