{
    "Coordinate": "Coordinate(p: Point) -> (Number, Number)：二维坐标系中点p的坐标。",
    "Xcoordinate": "XCoordinate(p: Point) -> Number：二维坐标系中点p的横坐标。",
    "Ycoordinate": "YCoordinate(p: Point) -> Number：二维坐标系中点p的纵坐标。",
    "Locusequation": "LocusEquation(p: Point) -> Expression：点p的轨迹方程。",
    "Locus": "Locus(p: Point) -> Curve：点p的轨迹。",
    "Quadrant": "Quadrant(p: Point) -> Number：点p所在的象限。",
    "Focus": "Focus(c: ConicSection) -> Union[Set[point], Point]：圆锥曲线c的焦点，如果有多个焦点则返回集合，否则返回该点。",
    "Rightfocus": "RightFocus(c: ConicSection) -> Point：圆锥曲线c的右焦点。",
    "Leftfocus": "LeftFocus(c: ConicSection) -> Point：圆锥曲线c的左焦点。",
    "Lowerfocus": "LowerFocus(c: ConicSection) -> Point：圆锥曲线c的下焦点。",
    "Upperfocus": "UpperFocus(c: ConicSection) -> Point：圆锥曲线c的上焦点。",
    "Focallength": "FocalLength(c: ConicSection) -> Number：圆锥曲线c的焦距。",
    "Halffocallength": "HalfFocalLength(c: ConicSection) -> Number：圆锥曲线c的半焦距。",
    "Symmetryaxis": "SymmetryAxis(c: ConicSection) -> Axis：圆锥曲线c的对称轴。",
    "Eccentricity": "Eccentricity(c: ConicSection) -> Number：圆锥曲线c的离心率。",
    "Vertex": "Vertex(c: ConicSection) -> Union[Set[Point], Point]：圆锥曲线c的顶点，如果有多个顶点则返回集合，否则返回该点。",
    "Uppervertex": "UpperVertex(c: Union[Ellipse,Hyperbola]) -> Point：椭圆或双曲线c的上顶点。",
    "Lowervertex": "LowerVertex(c: Union[Ellipse,Hyperbola]) -> Point：椭圆或双曲线c的下顶点。",
    "Leftvertex": "LeftVertex(c: Union[Ellipse, Hyperbola]) -> Point：椭圆或双曲线c的左顶点。",
    "Rightvertex": "RightVertex(c: Union[Ellipse, Hyperbola]) -> Point：椭圆或双曲线c的右顶点。",
    "Directrix": "Directrix(c: ConicSection) -> Union[Set[Line], Line]：圆锥曲线c的准线，如果有多条准线则返回集合，否则返回该条准线。",
    "Leftdirectrix": "LeftDirectrix(c: ConicSection) -> Line：圆锥曲线c的左准线。",
    "Rightdirectrix": "RightDirectrix(c: ConicSection) -> Line：圆锥曲线c的右准线。",
    "Majoraxis": "MajorAxis(g: Ellipse) -> LineSegment：椭圆g的长轴。",
    "Minoraxis": "MinorAxis(g: Ellipse) -> LineSegment：椭圆g的短轴。",
    "Realaxis": "RealAxis(c: Hyperbola) -> LineSegment：双曲线c的实轴。",
    "Imageinaryaxis": "ImageinaryAxis(c: Hyperbola) -> LineSegment：双曲线c的虚轴。",
    "Leftpart": "LeftPart(c: Hyperbola) -> Curve：双曲线c的左支部分。",
    "Rightpart": "RightPart(c: Hyperbola) -> Curve：双曲线c的右支部分。",
    "Asymptote": "Asymptote(c: Hyperbola) -> Set[Line]：双曲线c的两条渐近线。",
    "Diameter": "Diameter(c: Circle) -> Number：圆c的直径。",
    "Radius": "Radius(c: Circle) -> Number：圆c的半径。",
    "Perimeter": "Perimeter(c: Union[Circle, Ellipse]) -> Number：圆c的周长。",
    "Center": "Center(c: Union[Circle, Ellipse]) -> Point：圆或椭圆c的中心点。",
    "Expression": "Expression(c: Curve)：曲线c的方程。",
    "Lineof": "LineOf(p1: Point, p2: Point) -> Line：穿过p1、p2两点的一条直线。",
    "Slope": "Slope(l: Line) -> Number：直线l的斜率。",
    "Inclination": "Inclination(l: Line) -> Number：直线l的倾斜角。",
    "Intercept": "Intercept(l: Line, a: Union[xAxis, yAxis]) -> Number：直线l在坐标轴上的截距。",
    "Linesegmentof": "LineSegmentOf(p1: Point, p2: Point) -> LineSegment：连接p1、p2两点的线段。",
    "Length": "Length(l: LineSegment) -> Number：线段l的长度。",
    "Midpoint": "MidPoint(l: LineSegment) -> Point：线段l的中点。",
    "Overlappingline": "OverlappingLine(l: LineSegment) -> Line：线段l所在的直线。",
    "Perpendicularbisector": "PerpendicularBisector(l: LineSegment) -> Line：线段l的垂直平分线。",
    "Endpoint": "Endpoint(l: Union[LineSegment, Ray]) -> Union[Set[Point], Point]：线段或射线l的端点，如果有多个端点则返回集合，否则返回该点。",
    "Projection": "Projection(p: Point, l: Union[Line, Axis]) -> Point：点p在l上的投影。",
    "Interceptchord": "InterceptChord(l: Line, c: ConicSection) -> LineSegment：直线l被圆锥曲线c截取的线段。",
    "Triangleof": "TriangleOf(p1: Point, p2: Point, p3: Point) -> Triangle：以p1、p2、p3为顶点的三角形。",
    "Inscribedcircle": "InscribedCircle(t: Triangle) -> Circle：三角形t的内切圆。",
    "Circumcircle": "CircumCircle(t: Triangle) -> Circle：三角形t的外接圆。",
    "Incenter": "Incenter(t: Triangle) -> Point：三角形t的内心。",
    "Orthocenter": "Orthocenter(t: Triangle) -> Point：三角形t的垂心。",
    "Circumcenter": "Circumcenter(t: Triangle) -> Point：三角形t的外心。",
    "Angleof": "AngleOf(p1: Point, p2: Point, p3: Point) -> Number：以p2为顶点的∠p1p2p3的角度值。",
    "Vectorof": "VectorOf(p1: Point, p2: Point) -> Vector：由点p1指向点p2的向量。",
    "Dotproduct": "DotProduct(v1: Vector, v2: Vector) -> Number：向量v1与向量v2的点积。",
    "Numintersection": "NumIntersection(a: Union[Axis, Curve], b: Union[Axis, Curve]) -> Number：a与b的交点的数量。",
    "Intersection": "Intersection(a: Union[Axis, Curve], b: Union[Axis, Curve]) -> Union[Set[point], Point]：a与b的交点，如果有多个交点则返回集合，否则返回该点。",
    "Footpoint": "FootPoint(l1: Union[Line, LineSegment], l2: Union[Line, LineSegment]) -> Point：线l1与线l2互相垂直，获取其垂足。",
    "Distance": "Distance(a: Union[Point, Line], b: Union[Point, Line]) -> Number：a与b之间的距离。",
    "Area": "Area(c: Union[Circle, Ellipse, Triangle]) -> Number：c的面积。",
    "Tangentpoint": "TangentPoint(l: Line, c: Circle) -> Point：直线l与曲线c相切于c上的一点。",
    "Tangentofpoint": "TangentOfPoint(p: Point, c: Curve) -> Line：过点p作出的曲线c的切线。",
    "Tangentonpoint": "TangentOnPoint(p: Point, c: Curve) -> Line：过曲线c上的一点p作曲线c的切线。",
    "Oneof": "OneOf(s: Set[T]) -> T：获取集合s中的一个元素。",
    "Abs": "Abs(n: Union[Number, LineSegment]) -> Number：n的绝对值。",
    "Lg": "lg(n: Number) -> Number：数n的log值。",
    "Interreciprocal": "InterReciprocal(n: Number) -> Number：数n的倒数。",
    "Sqrt": "sqrt(n: Number) -> Number：数n的平方根。",
    "Max": "Max(n: Number) -> Number：变量n的最大值。",
    "Min": "Min(n: Number) -> Number：变量n的最小值。",
    "Range": "Range(n: Number) -> (Number, Number)：变量n的取值范围。",
    "Whenmin": "WhenMin(n: Number)：当变量n取最小值时。",
    "Whenmax": "WhenMax(n: Number)：当变量n取最大值时。",
    "Applyunit": "ApplyUnit(n: Number, u: Union[degree, rad])：以n数值，u为单位的值。",
    "In": "In(n: Number, (r1: Number, r2: Number))：变量n的值位于区间(r1,r2)。",
    "Between": "Between(p1: Point, p2: Point, p3: Point)：点p1位于点p2和点p3之间。",
    "Isintersect": "IsIntersect(a: Union[Axis, Curve], b: Union[axis, Curve])：a与b相交。",
    "Isperpendicular": "IsPerpendicular(l1: Union[Line, LineSegment, xAxis, yAxis], l2: Union[Line, LineSegment, xAxis, yAxis])：l1与l2互相垂直。",
    "Isparallel": "IsParallel(l1: Union[Line, LineSegment, xAxis, yAxis], l2: Union[Line, LineSegment, xAxis, yAxis])：l1与l2互相平行。",
    "Isdiameter": "IsDiameter(l: LineSegment, c: Circle)：线段l是圆c的直径。",
    "IschordOf": "IsChordOf(l: LineSegment, c: ConicSection)：线段l是圆锥曲线c的弦。",
    "Istangent": "IsTangent(l: Line, c: ConicSection)：直线l是圆锥曲线c的切线。",
    "Isinscribedcircle": "IsInscribedCircle(c: Circle, t: Triangle)：圆c是三角形t的内切圆。",
    "Iscircumcircle": "IsCircumCircle(c: Circle, t: Triangle)：圆c是三角形t的外接圆。",
    "Isintangent": "IsInTangent(c1: Circle, c2: Circle)：圆c1与圆c2内切。",
    "Isouttangent": "IsOutTangent(c1: Circle, c2: Circle)：圆c1与圆c2外切。",
    "Pointoncurve": "PointOnCurve(p: Point, c: Union[Axis, Curve])：点p在c上。",
    "And": "And(a: Assersion, b: Assertion)：断言逻辑表达式a与b同时成立。",
    "Negation": "Negation(a: Assertion)：断言逻辑表达式a不成立。"
}